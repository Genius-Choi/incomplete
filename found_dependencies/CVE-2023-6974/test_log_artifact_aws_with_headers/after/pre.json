[
    {
        "line": 4,
        "fullcodeline": "expected_headers = {header.name: header.value for header in MOCK_HEADERS}"
    },
    {
        "line": 5,
        "fullcodeline": "mock_response = Response()"
    },
    {
        "line": 6,
        "fullcodeline": "mock_response.status_code = 200"
    },
    {
        "line": 7,
        "fullcodeline": "mock_response.close = lambda: None"
    },
    {
        "line": 8,
        "fullcodeline": "mock_credential_info = ArtifactCredentialInfo("
    },
    {
        "line": 13,
        "fullcodeline": "with mock.patch("
    },
    {
        "line": 14,
        "fullcodeline": "f\"{DATABRICKS_ARTIFACT_REPOSITORY}._get_credential_infos\","
    },
    {
        "line": 15,
        "fullcodeline": "return_value=[mock_credential_info],"
    },
    {
        "line": 16,
        "fullcodeline": ") as get_credential_infos_mock, mock.patch("
    },
    {
        "line": 19,
        "fullcodeline": "databricks_artifact_repo.log_artifact(test_file, artifact_path)"
    },
    {
        "line": 20,
        "fullcodeline": "get_credential_infos_mock.assert_called_with("
    },
    {
        "line": 23,
        "fullcodeline": "request_mock.assert_called_with("
    },
    {
        "line": 21,
        "fullcodeline": "GetCredentialsForWrite, MOCK_RUN_ID, [expected_location]"
    }
]