[
    {
        "line": 4,
        "fullcodeline": "mock_azure_headers = {"
    },
    {
        "line": 9,
        "fullcodeline": "filtered_azure_headers = {"
    },
    {
        "line": 13,
        "fullcodeline": "mock_response = Response()"
    },
    {
        "line": 14,
        "fullcodeline": "mock_response.status_code = 200"
    },
    {
        "line": 15,
        "fullcodeline": "mock_response.close = lambda: None"
    },
    {
        "line": 16,
        "fullcodeline": "mock_credential_info = ArtifactCredentialInfo("
    },
    {
        "line": 24,
        "fullcodeline": "monkeypatch.setenv(\"MLFLOW_MULTIPART_UPLOAD_CHUNK_SIZE\", \"5\")"
    },
    {
        "line": 25,
        "fullcodeline": "with mock.patch("
    },
    {
        "line": 19,
        "fullcodeline": "headers=["
    },
    {
        "line": 26,
        "fullcodeline": "f\"{DATABRICKS_ARTIFACT_REPOSITORY}._get_credential_infos\","
    },
    {
        "line": 27,
        "fullcodeline": "return_value=[mock_credential_info],"
    },
    {
        "line": 28,
        "fullcodeline": ") as get_credential_infos_mock, mock.patch("
    },
    {
        "line": 31,
        "fullcodeline": "databricks_artifact_repo.log_artifact(test_file, artifact_path)"
    },
    {
        "line": 32,
        "fullcodeline": "get_credential_infos_mock.assert_called_with("
    },
    {
        "line": 36,
        "fullcodeline": "request_mock.assert_any_call("
    },
    {
        "line": 43,
        "fullcodeline": "request_mock.assert_any_call("
    },
    {
        "line": 51,
        "fullcodeline": "request_mock.assert_any_call("
    },
    {
        "line": 59,
        "fullcodeline": "request_mock.assert_any_call("
    },
    {
        "line": 67,
        "fullcodeline": "request_mock.assert_called_with("
    },
    {
        "line": 21,
        "fullcodeline": "for header_name, header_value in mock_azure_headers.items()"
    },
    {
        "line": 20,
        "fullcodeline": "ArtifactCredentialInfo.HttpHeader(name=header_name, value=header_value)"
    },
    {
        "line": 33,
        "fullcodeline": "GetCredentialsForWrite, MOCK_RUN_ID, [expected_location]"
    },
    {
        "line": 38,
        "fullcodeline": "f\"{MOCK_ADLS_GEN2_SIGNED_URI}?resource=file\","
    },
    {
        "line": 45,
        "fullcodeline": "f\"{MOCK_ADLS_GEN2_SIGNED_URI}?action=append&position=0\","
    },
    {
        "line": 53,
        "fullcodeline": "f\"{MOCK_ADLS_GEN2_SIGNED_URI}?action=append&position=5\","
    },
    {
        "line": 61,
        "fullcodeline": "f\"{MOCK_ADLS_GEN2_SIGNED_URI}?action=append&position=10\","
    },
    {
        "line": 69,
        "fullcodeline": "f\"{MOCK_ADLS_GEN2_SIGNED_URI}?action=flush&position=14\","
    }
]