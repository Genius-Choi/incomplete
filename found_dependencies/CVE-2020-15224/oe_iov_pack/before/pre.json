[
    {
        "line": 7,
        "fullcodeline": "int ret = -1;"
    },
    {
        "line": 8,
        "fullcodeline": "struct oe_iovec* buf = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "size_t buf_size = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "size_t data_size = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "buf_size = (sizeof(struct oe_iovec) * (size_t)iovcnt) + data_size;"
    },
    {
        "line": 83,
        "fullcodeline": "*buf_out = buf;"
    },
    {
        "line": 84,
        "fullcodeline": "*buf_size_out = buf_size;"
    },
    {
        "line": 85,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 86,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (iovcnt < 0 || (iovcnt > 0 && !iov) || !buf_out || !buf_size_out)"
    },
    {
        "line": 23,
        "fullcodeline": "if (iovcnt == 0)"
    },
    {
        "line": 41,
        "fullcodeline": "for (int i = 0; i < iovcnt; i++)"
    },
    {
        "line": 42,
        "fullcodeline": "data_size += iov[i].iov_len;"
    },
    {
        "line": 48,
        "fullcodeline": "if (!(buf = oe_calloc(1, buf_size)))"
    },
    {
        "line": 53,
        "fullcodeline": "uint8_t* p = (uint8_t*)&buf[iovcnt];"
    },
    {
        "line": 54,
        "fullcodeline": "size_t n = data_size;"
    },
    {
        "line": 13,
        "fullcodeline": "*buf_out = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "*buf_size_out = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "*buf_out = buf;"
    },
    {
        "line": 34,
        "fullcodeline": "*buf_size_out = buf_size;"
    },
    {
        "line": 35,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 36,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "for (i = 0; i < iovcnt; i++)"
    },
    {
        "line": 79,
        "fullcodeline": "if (n != 0)"
    },
    {
        "line": 91,
        "fullcodeline": "oe_free(buf);"
    },
    {
        "line": 59,
        "fullcodeline": "const size_t iov_len = iov[i].iov_len;"
    },
    {
        "line": 60,
        "fullcodeline": "const void* iov_base = iov[i].iov_base;"
    },
    {
        "line": 30,
        "fullcodeline": "buf_size = sizeof(uint64_t);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!(buf = oe_calloc(1, sizeof(uint64_t))))"
    },
    {
        "line": 64,
        "fullcodeline": "buf[i].iov_len = iov_len;"
    },
    {
        "line": 65,
        "fullcodeline": "buf[i].iov_base = (void*)(p - (uint8_t*)buf);"
    },
    {
        "line": 73,
        "fullcodeline": "p += iov_len;"
    },
    {
        "line": 74,
        "fullcodeline": "n -= iov_len;"
    },
    {
        "line": 67,
        "fullcodeline": "if (!iov_base)"
    },
    {
        "line": 70,
        "fullcodeline": "if (oe_memcpy_s(p, n, iov_base, iov_len) != OE_OK)"
    }
]