[
    {
        "line": 8,
        "fullcodeline": "int ret = OE_EAI_FAIL;"
    },
    {
        "line": 9,
        "fullcodeline": "uint64_t handle = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "struct oe_addrinfo* head = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "struct oe_addrinfo* tail = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "struct oe_addrinfo* p = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "OE_UNUSED(resolver);"
    },
    {
        "line": 215,
        "fullcodeline": "*res = head;"
    },
    {
        "line": 216,
        "fullcodeline": "head = NULL;"
    },
    {
        "line": 217,
        "fullcodeline": "tail = NULL;"
    },
    {
        "line": 218,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 27,
        "fullcodeline": "int retval = OE_EAI_FAIL;"
    },
    {
        "line": 209,
        "fullcodeline": "if (!head)"
    },
    {
        "line": 17,
        "fullcodeline": "*res = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 22,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 29,
        "fullcodeline": "if (oe_syscall_getaddrinfo_open_ocall("
    },
    {
        "line": 36,
        "fullcodeline": "if (!handle)"
    },
    {
        "line": 46,
        "fullcodeline": "int retval = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "size_t canonnamelen_in = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "size_t canonnamelen_out = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "memset(&p_out, 0, sizeof(struct oe_addrinfo));"
    },
    {
        "line": 136,
        "fullcodeline": "canonnamelen_in = canonnamelen_out;"
    },
    {
        "line": 185,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 191,
        "fullcodeline": "int retval = -1;"
    },
    {
        "line": 199,
        "fullcodeline": "handle = 0;"
    },
    {
        "line": 211,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 212,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 225,
        "fullcodeline": "oe_syscall_getaddrinfo_close_ocall(&retval, handle);"
    },
    {
        "line": 229,
        "fullcodeline": "oe_freeaddrinfo(head);"
    },
    {
        "line": 232,
        "fullcodeline": "oe_freeaddrinfo(p);"
    },
    {
        "line": 32,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 33,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 38,
        "fullcodeline": "ret = retval;"
    },
    {
        "line": 54,
        "fullcodeline": "if (oe_syscall_getaddrinfo_read_ocall("
    },
    {
        "line": 73,
        "fullcodeline": "if (retval == 1)"
    },
    {
        "line": 77,
        "fullcodeline": "if (retval != -1 || oe_errno != OE_ENAMETOOLONG)"
    },
    {
        "line": 115,
        "fullcodeline": "if (!(p = oe_calloc(1, sizeof(struct oe_addrinfo))))"
    },
    {
        "line": 121,
        "fullcodeline": "if (p_out.ai_addrlen && !(p->ai_addr = oe_calloc(1, p_out.ai_addrlen)))"
    },
    {
        "line": 127,
        "fullcodeline": "if (canonnamelen_out &&"
    },
    {
        "line": 138,
        "fullcodeline": "if (oe_syscall_getaddrinfo_read_ocall("
    },
    {
        "line": 161,
        "fullcodeline": "if ((p->ai_flags != p_out.ai_flags) ||"
    },
    {
        "line": 193,
        "fullcodeline": "if (oe_syscall_getaddrinfo_close_ocall(&retval, handle) != OE_OK)"
    },
    {
        "line": 201,
        "fullcodeline": "if (retval != 0)"
    },
    {
        "line": 68,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 69,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 79,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 80,
        "fullcodeline": "OE_RAISE_ERRNO(oe_errno);"
    },
    {
        "line": 111,
        "fullcodeline": "ret = OE_EAI_FAIL;"
    },
    {
        "line": 117,
        "fullcodeline": "ret = OE_EAI_MEMORY;"
    },
    {
        "line": 123,
        "fullcodeline": "ret = OE_EAI_MEMORY;"
    },
    {
        "line": 128,
        "fullcodeline": "!(p->ai_canonname = oe_calloc(1, canonnamelen_out)))"
    },
    {
        "line": 130,
        "fullcodeline": "ret = OE_EAI_MEMORY;"
    },
    {
        "line": 152,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 153,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 167,
        "fullcodeline": "(canonnamelen_out && p->ai_canonname[canonnamelen_out - 1] != '\\0'))"
    },
    {
        "line": 169,
        "fullcodeline": "ret = OE_EAI_FAIL;"
    },
    {
        "line": 176,
        "fullcodeline": "tail->ai_next = p;"
    },
    {
        "line": 177,
        "fullcodeline": "tail = p;"
    },
    {
        "line": 195,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 196,
        "fullcodeline": "OE_RAISE_ERRNO(OE_EINVAL);"
    },
    {
        "line": 203,
        "fullcodeline": "ret = OE_EAI_SYSTEM;"
    },
    {
        "line": 204,
        "fullcodeline": "OE_RAISE_ERRNO(oe_errno);"
    },
    {
        "line": 95,
        "fullcodeline": "if (p_out.ai_addrlen != sizeof(struct oe_sockaddr))"
    },
    {
        "line": 104,
        "fullcodeline": "if (p_out.ai_addrlen != sizeof(struct oe_sockaddr_in6))"
    },
    {
        "line": 166,
        "fullcodeline": "(canonnamelen_out != canonnamelen_in) ||"
    },
    {
        "line": 181,
        "fullcodeline": "head = p;"
    },
    {
        "line": 182,
        "fullcodeline": "tail = p;"
    },
    {
        "line": 97,
        "fullcodeline": "ret = OE_EAI_FAIL;"
    },
    {
        "line": 106,
        "fullcodeline": "ret = OE_EAI_FAIL;"
    },
    {
        "line": 165,
        "fullcodeline": "(p->ai_addrlen != p_out.ai_addrlen) ||"
    },
    {
        "line": 164,
        "fullcodeline": "(p->ai_protocol != p_out.ai_protocol) ||"
    },
    {
        "line": 163,
        "fullcodeline": "(p->ai_socktype != p_out.ai_socktype) ||"
    },
    {
        "line": 162,
        "fullcodeline": "(p->ai_family != p_out.ai_family) ||"
    }
]