[
    {
        "line": 23,
        "fullcodeline": "request = cherrypy.request"
    },
    {
        "line": 24,
        "fullcodeline": "response = cherrypy.serving.response"
    },
    {
        "line": 33,
        "fullcodeline": "https = request.base.startswith('https')"
    },
    {
        "line": 40,
        "fullcodeline": "cookie = response.cookie.get('session_id', None)"
    },
    {
        "line": 27,
        "fullcodeline": "if request.method in ['POST', 'PUT', 'PATCH', 'DELETE']:"
    },
    {
        "line": 28,
        "fullcodeline": "origin = request.headers.get('Origin', None)"
    },
    {
        "line": 37,
        "fullcodeline": "response.headers['X-Frame-Options'] = xfo"
    },
    {
        "line": 45,
        "fullcodeline": "cookie['samesite'] = 'Lax'"
    },
    {
        "line": 51,
        "fullcodeline": "response.headers['Cache-control'] = 'no-cache, no-store, must-revalidate, max-age=0'"
    },
    {
        "line": 52,
        "fullcodeline": "response.headers['Pragma'] = 'no-cache'"
    },
    {
        "line": 53,
        "fullcodeline": "response.headers['Expires'] = '0'"
    },
    {
        "line": 57,
        "fullcodeline": "response.headers['Referrer-Policy'] = referrer"
    },
    {
        "line": 61,
        "fullcodeline": "response.headers['X-Content-Type-Options'] = 'nosniff'"
    },
    {
        "line": 65,
        "fullcodeline": "response.headers['X-XSS-Protection'] = xxp"
    },
    {
        "line": 69,
        "fullcodeline": "response.headers['Content-Security-Policy'] = csp"
    },
    {
        "line": 73,
        "fullcodeline": "response.headers['Strict-Transport-Security'] = \"max-age=31536000; includeSubDomains\""
    },
    {
        "line": 29,
        "fullcodeline": "if origin and not origin.startswith(request.base):"
    },
    {
        "line": 30,
        "fullcodeline": "raise cherrypy.HTTPError(403, 'Unexpected Origin header')"
    },
    {
        "line": 47,
        "fullcodeline": "cookie['secure'] = 1"
    }
]