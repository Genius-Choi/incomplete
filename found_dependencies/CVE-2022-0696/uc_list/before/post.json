[
    {
        "line": 4,
        "fullcodeline": "int\t\tfound = FALSE;"
    },
    {
        "line": 170,
        "fullcodeline": "if (!found)"
    },
    {
        "line": 167,
        "fullcodeline": "gap = &ucmds;"
    },
    {
        "line": 171,
        "fullcodeline": "msg(_(\"No user-defined commands found\"));"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < gap->ga_len; ++i)"
    },
    {
        "line": 165,
        "fullcodeline": "if (gap == &ucmds || i < gap->ga_len)"
    },
    {
        "line": 21,
        "fullcodeline": "cmd = USER_CMD_GA(gap, i);"
    },
    {
        "line": 22,
        "fullcodeline": "a = (long)cmd->uc_argt;"
    },
    {
        "line": 33,
        "fullcodeline": "found = TRUE;"
    },
    {
        "line": 34,
        "fullcodeline": "msg_putchar('\\n');"
    },
    {
        "line": 39,
        "fullcodeline": "len = 4;"
    },
    {
        "line": 63,
        "fullcodeline": "msg_outtrans_attr(cmd->uc_name, HL_ATTR(HLF_D));"
    },
    {
        "line": 64,
        "fullcodeline": "len = (int)STRLEN(cmd->uc_name) + 4;"
    },
    {
        "line": 73,
        "fullcodeline": "over = len - 22;"
    },
    {
        "line": 74,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 151,
        "fullcodeline": "IObuff[len] = '\\0';"
    },
    {
        "line": 152,
        "fullcodeline": "msg_outtrans(IObuff);"
    },
    {
        "line": 154,
        "fullcodeline": "msg_outtrans_special(cmd->uc_rep, FALSE,"
    },
    {
        "line": 160,
        "fullcodeline": "out_flush();"
    },
    {
        "line": 161,
        "fullcodeline": "ui_breakcheck();"
    },
    {
        "line": 26,
        "fullcodeline": "if (STRNCMP(name, cmd->uc_name, name_len) != 0"
    },
    {
        "line": 31,
        "fullcodeline": "if (!found)"
    },
    {
        "line": 40,
        "fullcodeline": "if (a & EX_BANG)"
    },
    {
        "line": 45,
        "fullcodeline": "if (a & EX_REGSTR)"
    },
    {
        "line": 50,
        "fullcodeline": "if (gap != &ucmds)"
    },
    {
        "line": 55,
        "fullcodeline": "if (a & EX_TRLBAR)"
    },
    {
        "line": 60,
        "fullcodeline": "while (len-- > 0)"
    },
    {
        "line": 61,
        "fullcodeline": "msg_putchar(' ');"
    },
    {
        "line": 69,
        "fullcodeline": "} while (len < 22);"
    },
    {
        "line": 77,
        "fullcodeline": "switch ((int)(a & (EX_EXTRA|EX_NOSPC|EX_NEEDARG)))"
    },
    {
        "line": 88,
        "fullcodeline": "} while (len < 5 - over);"
    },
    {
        "line": 91,
        "fullcodeline": "if (a & (EX_RANGE|EX_COUNT))"
    },
    {
        "line": 113,
        "fullcodeline": "} while (len < 8 - over);"
    },
    {
        "line": 116,
        "fullcodeline": "for (j = 0; addr_type_complete[j].expand != ADDR_NONE; ++j)"
    },
    {
        "line": 127,
        "fullcodeline": "} while (len < 13 - over);"
    },
    {
        "line": 130,
        "fullcodeline": "for (j = 0; command_complete[j].expand != 0; ++j)"
    },
    {
        "line": 149,
        "fullcodeline": "} while (len < 25 - over);"
    },
    {
        "line": 155,
        "fullcodeline": "name_len == 0 ? Columns - 47 : 0);"
    },
    {
        "line": 27,
        "fullcodeline": "|| message_filtered(cmd->uc_name))"
    },
    {
        "line": 32,
        "fullcodeline": "msg_puts_title(_(\"\\n    Name              Args Address Complete    Definition\"));"
    },
    {
        "line": 42,
        "fullcodeline": "msg_putchar('!');"
    },
    {
        "line": 43,
        "fullcodeline": "--len;"
    },
    {
        "line": 47,
        "fullcodeline": "msg_putchar('\"');"
    },
    {
        "line": 48,
        "fullcodeline": "--len;"
    },
    {
        "line": 52,
        "fullcodeline": "msg_putchar('b');"
    },
    {
        "line": 53,
        "fullcodeline": "--len;"
    },
    {
        "line": 57,
        "fullcodeline": "msg_putchar('|');"
    },
    {
        "line": 58,
        "fullcodeline": "--len;"
    },
    {
        "line": 67,
        "fullcodeline": "msg_putchar(' ');"
    },
    {
        "line": 68,
        "fullcodeline": "++len;"
    },
    {
        "line": 79,
        "fullcodeline": "case 0:\t\t\t\tIObuff[len++] = '0'; break;"
    },
    {
        "line": 80,
        "fullcodeline": "case (EX_EXTRA):\t\tIObuff[len++] = '*'; break;"
    },
    {
        "line": 81,
        "fullcodeline": "case (EX_EXTRA|EX_NOSPC):\tIObuff[len++] = '?'; break;"
    },
    {
        "line": 82,
        "fullcodeline": "case (EX_EXTRA|EX_NEEDARG):\tIObuff[len++] = '+'; break;"
    },
    {
        "line": 83,
        "fullcodeline": "case (EX_EXTRA|EX_NOSPC|EX_NEEDARG): IObuff[len++] = '1'; break;"
    },
    {
        "line": 87,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 112,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 117,
        "fullcodeline": "if (addr_type_complete[j].expand != ADDR_LINES"
    },
    {
        "line": 126,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 131,
        "fullcodeline": "if (command_complete[j].expand == cmd->uc_compl)"
    },
    {
        "line": 148,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 93,
        "fullcodeline": "if (a & EX_COUNT)"
    },
    {
        "line": 118,
        "fullcodeline": "&& addr_type_complete[j].expand == cmd->uc_addr_type)"
    },
    {
        "line": 120,
        "fullcodeline": "STRCPY(IObuff + len, addr_type_complete[j].shortname);"
    },
    {
        "line": 121,
        "fullcodeline": "len += (int)STRLEN(IObuff + len);"
    },
    {
        "line": 133,
        "fullcodeline": "STRCPY(IObuff + len, command_complete[j].name);"
    },
    {
        "line": 134,
        "fullcodeline": "len += (int)STRLEN(IObuff + len);"
    },
    {
        "line": 96,
        "fullcodeline": "sprintf((char *)IObuff + len, \"%ldc\", cmd->uc_def);"
    },
    {
        "line": 97,
        "fullcodeline": "len += (int)STRLEN(IObuff + len);"
    },
    {
        "line": 99,
        "fullcodeline": "else if (a & EX_DFLALL)"
    },
    {
        "line": 100,
        "fullcodeline": "IObuff[len++] = '%';"
    },
    {
        "line": 101,
        "fullcodeline": "else if (cmd->uc_def >= 0)"
    },
    {
        "line": 104,
        "fullcodeline": "sprintf((char *)IObuff + len, \"%ld\", cmd->uc_def);"
    },
    {
        "line": 105,
        "fullcodeline": "len += (int)STRLEN(IObuff + len);"
    },
    {
        "line": 108,
        "fullcodeline": "IObuff[len++] = '.';"
    }
]