[
    {
        "line": 11,
        "fullcodeline": "algt = crypto_get_attr_type(tb);"
    },
    {
        "line": 15,
        "fullcodeline": "name = crypto_attr_alg_name(tb[1]);"
    },
    {
        "line": 19,
        "fullcodeline": "inst = kzalloc(sizeof(*inst) + sizeof(*ctx), GFP_KERNEL);"
    },
    {
        "line": 23,
        "fullcodeline": "ctx = aead_instance_ctx(inst);"
    },
    {
        "line": 24,
        "fullcodeline": "crypto_set_aead_spawn(&ctx->spawn, aead_crypto_instance(inst));"
    },
    {
        "line": 26,
        "fullcodeline": "err = crypto_grab_aead(&ctx->spawn, name, 0, 0);"
    },
    {
        "line": 30,
        "fullcodeline": "alg = crypto_spawn_aead_alg(&ctx->spawn);"
    },
    {
        "line": 31,
        "fullcodeline": "err = pcrypt_init_instance(aead_crypto_instance(inst), &alg->base);"
    },
    {
        "line": 35,
        "fullcodeline": "inst->alg.base.cra_flags = CRYPTO_ALG_ASYNC;"
    },
    {
        "line": 37,
        "fullcodeline": "inst->alg.ivsize = crypto_aead_alg_ivsize(alg);"
    },
    {
        "line": 38,
        "fullcodeline": "inst->alg.maxauthsize = crypto_aead_alg_maxauthsize(alg);"
    },
    {
        "line": 42,
        "fullcodeline": "inst->alg.init = pcrypt_aead_init_tfm;"
    },
    {
        "line": 43,
        "fullcodeline": "inst->alg.exit = pcrypt_aead_exit_tfm;"
    },
    {
        "line": 45,
        "fullcodeline": "inst->alg.setkey = pcrypt_aead_setkey;"
    },
    {
        "line": 46,
        "fullcodeline": "inst->alg.setauthsize = pcrypt_aead_setauthsize;"
    },
    {
        "line": 47,
        "fullcodeline": "inst->alg.encrypt = pcrypt_aead_encrypt;"
    },
    {
        "line": 48,
        "fullcodeline": "inst->alg.decrypt = pcrypt_aead_decrypt;"
    },
    {
        "line": 50,
        "fullcodeline": "inst->free = pcrypt_free;"
    },
    {
        "line": 52,
        "fullcodeline": "err = aead_register_instance(tmpl, inst);"
    },
    {
        "line": 60,
        "fullcodeline": "crypto_drop_aead(&ctx->spawn);"
    },
    {
        "line": 62,
        "fullcodeline": "kfree(inst);"
    },
    {
        "line": 12,
        "fullcodeline": "if (IS_ERR(algt))"
    },
    {
        "line": 16,
        "fullcodeline": "if (IS_ERR(name))"
    },
    {
        "line": 20,
        "fullcodeline": "if (!inst)"
    },
    {
        "line": 13,
        "fullcodeline": "return PTR_ERR(algt);"
    },
    {
        "line": 17,
        "fullcodeline": "return PTR_ERR(name);"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENOMEM;"
    }
]