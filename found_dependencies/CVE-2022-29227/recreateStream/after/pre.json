[
    {
        "line": 6,
        "fullcodeline": "ResponseEncoder* response_encoder = response_encoder_;"
    },
    {
        "line": 7,
        "fullcodeline": "response_encoder_ = nullptr;"
    },
    {
        "line": 9,
        "fullcodeline": "Buffer::InstancePtr request_data = std::make_unique<Buffer::OwnedImpl>();"
    },
    {
        "line": 10,
        "fullcodeline": "const auto& buffered_request_data = filter_manager_.bufferedRequestData();"
    },
    {
        "line": 11,
        "fullcodeline": "const bool proxy_body = buffered_request_data != nullptr && buffered_request_data->length() > 0;"
    },
    {
        "line": 16,
        "fullcodeline": "response_encoder->getStream().removeCallbacks(*this);"
    },
    {
        "line": 19,
        "fullcodeline": "connection_manager_.doEndStream(*this);"
    },
    {
        "line": 21,
        "fullcodeline": "RequestDecoder& new_stream = connection_manager_.newStream(*response_encoder, true);"
    },
    {
        "line": 37,
        "fullcodeline": "(*connection_manager_.streams_.begin())"
    },
    {
        "line": 40,
        "fullcodeline": "new_stream.decodeHeaders(std::move(request_headers_), !proxy_body);"
    },
    {
        "line": 28,
        "fullcodeline": "if (filter_state->hasDataAtOrAboveLifeSpan(StreamInfo::FilterState::LifeSpan::Request)) {"
    },
    {
        "line": 39,
        "fullcodeline": ".setFromForRecreateStream(filter_manager_.streamInfo());"
    },
    {
        "line": 13,
        "fullcodeline": "request_data->move(*buffered_request_data);"
    },
    {
        "line": 29,
        "fullcodeline": "(*connection_manager_.streams_.begin())->filter_manager_.streamInfo().filter_state_ ="
    },
    {
        "line": 45,
        "fullcodeline": "new_stream.decodeData(*request_data, true);"
    },
    {
        "line": 30,
        "fullcodeline": "std::make_shared<StreamInfo::FilterStateImpl>("
    },
    {
        "line": 31,
        "fullcodeline": "filter_state->parent(), StreamInfo::FilterState::LifeSpan::FilterChain);"
    }
]