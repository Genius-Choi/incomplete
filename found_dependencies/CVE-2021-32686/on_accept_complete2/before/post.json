[
    {
        "line": 10,
        "fullcodeline": "char addr[PJ_INET6_ADDRSTRLEN+10];"
    },
    {
        "line": 15,
        "fullcodeline": "char addr_buf[PJ_INET6_ADDRSTRLEN+10];"
    },
    {
        "line": 17,
        "fullcodeline": "PJ_UNUSED_ARG(src_addr_len);"
    },
    {
        "line": 19,
        "fullcodeline": "listener = (struct tls_listener*) pj_ssl_sock_get_user_data(ssock);"
    },
    {
        "line": 42,
        "fullcodeline": "PJ_ASSERT_RETURN(new_ssock, PJ_TRUE);"
    },
    {
        "line": 56,
        "fullcodeline": "PJ_LOG(4,(listener->factory.obj_name,"
    },
    {
        "line": 68,
        "fullcodeline": "status = pj_ssl_sock_get_info(new_ssock, &ssl_info);"
    },
    {
        "line": 84,
        "fullcodeline": "pj_bzero(&tmp_src_addr, sizeof(tmp_src_addr));"
    },
    {
        "line": 85,
        "fullcodeline": "pj_sockaddr_cp(&tmp_src_addr, src_addr);"
    },
    {
        "line": 91,
        "fullcodeline": "status = tls_create( listener, NULL, new_ssock, PJ_TRUE,"
    },
    {
        "line": 108,
        "fullcodeline": "pj_ssl_sock_set_user_data(new_ssock, tls);"
    },
    {
        "line": 113,
        "fullcodeline": "pjsip_transport_add_ref(&tls->base);"
    },
    {
        "line": 124,
        "fullcodeline": "state_cb = pjsip_tpmgr_get_state_cb(tls->base.tpmgr);"
    },
    {
        "line": 153,
        "fullcodeline": "pjsip_transport_dec_ref(&tls->base);"
    },
    {
        "line": 158,
        "fullcodeline": "status = tls_start_read(tls);"
    },
    {
        "line": 21,
        "fullcodeline": "if (accept_status != PJ_SUCCESS) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!listener->is_registered) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (ssl_info.verify_status && listener->tls_setting.verify_client) {"
    },
    {
        "line": 159,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 70,
        "fullcodeline": "pj_ssl_sock_close(new_ssock);"
    },
    {
        "line": 121,
        "fullcodeline": "pjsip_transport_shutdown(&tls->base);"
    },
    {
        "line": 131,
        "fullcodeline": "pj_bzero(&tls_info, sizeof(tls_info));"
    },
    {
        "line": 132,
        "fullcodeline": "pj_bzero(&state_info, sizeof(state_info));"
    },
    {
        "line": 133,
        "fullcodeline": "tls_info.ssl_sock_info = &ssl_info;"
    },
    {
        "line": 134,
        "fullcodeline": "state_info.ext_info = &tls_info;"
    },
    {
        "line": 146,
        "fullcodeline": "(*state_cb)(&tls->base, tp_state, &state_info);"
    },
    {
        "line": 160,
        "fullcodeline": "PJ_LOG(3,(tls->base.obj_name, \"New transport cancelled\"));"
    },
    {
        "line": 161,
        "fullcodeline": "tls_init_shutdown(tls, status);"
    },
    {
        "line": 162,
        "fullcodeline": "tls_destroy(&tls->base, status);"
    },
    {
        "line": 22,
        "fullcodeline": "if (listener && listener->tls_setting.on_accept_fail_cb) {"
    },
    {
        "line": 59,
        "fullcodeline": "pj_addr_str_print(&listener->factory.addr_name.host,"
    },
    {
        "line": 62,
        "fullcodeline": "pj_sockaddr_print(src_addr, addr, sizeof(addr), 3),"
    },
    {
        "line": 119,
        "fullcodeline": "if (tls->close_reason == PJ_SUCCESS)"
    },
    {
        "line": 137,
        "fullcodeline": "if (ssl_info.verify_status && listener->tls_setting.verify_client)"
    },
    {
        "line": 26,
        "fullcodeline": "pj_bzero(&param, sizeof(param));"
    },
    {
        "line": 27,
        "fullcodeline": "param.status = accept_status;"
    },
    {
        "line": 29,
        "fullcodeline": "param.remote_addr = src_addr;"
    },
    {
        "line": 36,
        "fullcodeline": "(*listener->tls_setting.on_accept_fail_cb) (&param);"
    },
    {
        "line": 47,
        "fullcodeline": "pj_bzero(&param, sizeof(param));"
    },
    {
        "line": 48,
        "fullcodeline": "param.status = PJSIP_TLS_EACCEPT;"
    },
    {
        "line": 50,
        "fullcodeline": "param.remote_addr = src_addr;"
    },
    {
        "line": 51,
        "fullcodeline": "(*listener->tls_setting.on_accept_fail_cb) (&param);"
    },
    {
        "line": 74,
        "fullcodeline": "pj_bzero(&param, sizeof(param));"
    },
    {
        "line": 75,
        "fullcodeline": "param.status = status;"
    },
    {
        "line": 77,
        "fullcodeline": "param.remote_addr = src_addr;"
    },
    {
        "line": 78,
        "fullcodeline": "(*listener->tls_setting.on_accept_fail_cb) (&param);"
    },
    {
        "line": 98,
        "fullcodeline": "pj_bzero(&param, sizeof(param));"
    },
    {
        "line": 99,
        "fullcodeline": "param.status = status;"
    },
    {
        "line": 101,
        "fullcodeline": "param.remote_addr = src_addr;"
    },
    {
        "line": 102,
        "fullcodeline": "(*listener->tls_setting.on_accept_fail_cb) (&param);"
    },
    {
        "line": 120,
        "fullcodeline": "tls->close_reason = PJSIP_TLS_ECERTVERIF;"
    },
    {
        "line": 139,
        "fullcodeline": "tp_state = PJSIP_TP_STATE_DISCONNECTED;"
    },
    {
        "line": 140,
        "fullcodeline": "state_info.status = PJSIP_TLS_ECERTVERIF;"
    },
    {
        "line": 30,
        "fullcodeline": "if (new_ssock &&"
    },
    {
        "line": 142,
        "fullcodeline": "tp_state = PJSIP_TP_STATE_CONNECTED;"
    },
    {
        "line": 143,
        "fullcodeline": "state_info.status = PJ_SUCCESS;"
    },
    {
        "line": 166,
        "fullcodeline": "pj_time_val delay = {0};"
    },
    {
        "line": 168,
        "fullcodeline": "pjsip_endpt_schedule_timer(listener->endpt,"
    },
    {
        "line": 171,
        "fullcodeline": "tls->ka_timer.id = PJ_TRUE;"
    },
    {
        "line": 172,
        "fullcodeline": "pj_gettimeofday(&tls->last_activity);"
    },
    {
        "line": 31,
        "fullcodeline": "pj_ssl_sock_get_info(new_ssock, &ssi) == PJ_SUCCESS)"
    },
    {
        "line": 33,
        "fullcodeline": "param.last_native_err = ssi.last_native_err;"
    }
]