[
    {
        "line": 5,
        "fullcodeline": "filename[MagickPathExtent];"
    },
    {
        "line": 41,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 43,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 47,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 48,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 49,
        "fullcodeline": "status=OpenBlob(image_info,image,WriteBinaryBlobMode,exception);"
    },
    {
        "line": 52,
        "fullcodeline": "huffman_image=CloneImage(image,0,0,MagickTrue,exception);"
    },
    {
        "line": 58,
        "fullcodeline": "huffman_image->endian=MSBEndian;"
    },
    {
        "line": 59,
        "fullcodeline": "file=(FILE *) NULL;"
    },
    {
        "line": 60,
        "fullcodeline": "unique_file=AcquireUniqueFileResource(filename);"
    },
    {
        "line": 72,
        "fullcodeline": "write_info=CloneImageInfo((ImageInfo *) NULL);"
    },
    {
        "line": 73,
        "fullcodeline": "SetImageInfoFile(write_info,file);"
    },
    {
        "line": 76,
        "fullcodeline": "write_info->compression=Group4Compression;"
    },
    {
        "line": 77,
        "fullcodeline": "write_info->type=BilevelType;"
    },
    {
        "line": 79,
        "fullcodeline": "status=WriteTIFFImage(write_info,huffman_image,exception);"
    },
    {
        "line": 89,
        "fullcodeline": "tiff=TIFFOpen(filename,\"rb\");"
    },
    {
        "line": 110,
        "fullcodeline": "strip_size=byte_count[0];"
    },
    {
        "line": 114,
        "fullcodeline": "buffer=(unsigned char *) AcquireQuantumMemory((size_t) strip_size,"
    },
    {
        "line": 45,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 50,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 53,
        "fullcodeline": "if (huffman_image == (Image *) NULL)"
    },
    {
        "line": 61,
        "fullcodeline": "if (unique_file != -1)"
    },
    {
        "line": 69,
        "fullcodeline": "(void) FormatLocaleString(huffman_image->filename,MagickPathExtent,\"tiff:%s\","
    },
    {
        "line": 71,
        "fullcodeline": "(void) SetImageType(huffman_image,BilevelType,exception);"
    },
    {
        "line": 74,
        "fullcodeline": "(void) SetImageDepth(image,1,exception);"
    },
    {
        "line": 75,
        "fullcodeline": "(void) SetImageType(image,BilevelType,exception);"
    },
    {
        "line": 78,
        "fullcodeline": "(void) SetImageOption(write_info,\"quantum:polarity\",\"min-is-white\");"
    },
    {
        "line": 80,
        "fullcodeline": "(void) fflush(file);"
    },
    {
        "line": 81,
        "fullcodeline": "write_info=DestroyImageInfo(write_info);"
    },
    {
        "line": 82,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 90,
        "fullcodeline": "if (tiff == (TIFF *) NULL)"
    },
    {
        "line": 111,
        "fullcodeline": "for (i=1; i < (ssize_t) TIFFNumberOfStrips(tiff); i++)"
    },
    {
        "line": 116,
        "fullcodeline": "if (buffer == (unsigned char *) NULL)"
    },
    {
        "line": 128,
        "fullcodeline": "for (i=0; i < (ssize_t) TIFFNumberOfStrips(tiff); i++)"
    },
    {
        "line": 136,
        "fullcodeline": "huffman_image=DestroyImage(huffman_image);"
    },
    {
        "line": 137,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 138,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 139,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 46,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 62,
        "fullcodeline": "file=fdopen(unique_file,\"wb\");"
    },
    {
        "line": 63,
        "fullcodeline": "if ((unique_file == -1) || (file == (FILE *) NULL))"
    },
    {
        "line": 102,
        "fullcodeline": "if (TIFFGetField(tiff,TIFFTAG_STRIPBYTECOUNTS,&byte_count) != 1)"
    },
    {
        "line": 112,
        "fullcodeline": "if (byte_count[i] > strip_size)"
    },
    {
        "line": 118,
        "fullcodeline": "TIFFClose(tiff);"
    },
    {
        "line": 119,
        "fullcodeline": "huffman_image=DestroyImage(huffman_image);"
    },
    {
        "line": 122,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 130,
        "fullcodeline": "count=(ssize_t) TIFFReadRawStrip(tiff,(uint32) i,buffer,strip_size);"
    },
    {
        "line": 134,
        "fullcodeline": "buffer=(unsigned char *) RelinquishMagickMemory(buffer);"
    },
    {
        "line": 55,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 84,
        "fullcodeline": "huffman_image=DestroyImage(huffman_image);"
    },
    {
        "line": 85,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 86,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 92,
        "fullcodeline": "huffman_image=DestroyImage(huffman_image);"
    },
    {
        "line": 93,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 94,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 105,
        "fullcodeline": "huffman_image=DestroyImage(huffman_image);"
    },
    {
        "line": 106,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 107,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 113,
        "fullcodeline": "strip_size=byte_count[i];"
    },
    {
        "line": 120,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 121,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 131,
        "fullcodeline": "if (WriteBlob(image,(size_t) count,buffer) != count)"
    },
    {
        "line": 132,
        "fullcodeline": "status=MagickFalse;"
    }
]