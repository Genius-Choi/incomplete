[
    {
        "line": 4,
        "fullcodeline": "oldsize += bits;"
    },
    {
        "line": 10,
        "fullcodeline": "if ( bits == 0 || bits < -31 || bits > 32 ) {"
    },
    {
        "line": 14,
        "fullcodeline": "if ( bits < 0 ) {"
    },
    {
        "line": 11,
        "fullcodeline": "Com_Error( ERR_DROP, \"MSG_WriteBits: bad bits %i\", bits );"
    },
    {
        "line": 15,
        "fullcodeline": "bits = -bits;"
    },
    {
        "line": 19,
        "fullcodeline": "if ( msg->cursize + ( bits >> 3 ) > msg->maxsize ) {"
    },
    {
        "line": 24,
        "fullcodeline": "if ( bits == 8 ) {"
    },
    {
        "line": 42,
        "fullcodeline": "value &= (0xffffffff >> (32 - bits));"
    },
    {
        "line": 67,
        "fullcodeline": "msg->cursize = (msg->bit >> 3) + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "msg->overflowed = qtrue;"
    },
    {
        "line": 25,
        "fullcodeline": "msg->data[msg->cursize] = value;"
    },
    {
        "line": 26,
        "fullcodeline": "msg->cursize += 1;"
    },
    {
        "line": 27,
        "fullcodeline": "msg->bit += 8;"
    },
    {
        "line": 43,
        "fullcodeline": "if ( bits&7 ) {"
    },
    {
        "line": 45,
        "fullcodeline": "nbits = bits&7;"
    },
    {
        "line": 54,
        "fullcodeline": "bits = bits - nbits;"
    },
    {
        "line": 28,
        "fullcodeline": "} else if ( bits == 16 ) {"
    },
    {
        "line": 46,
        "fullcodeline": "if ( msg->bit + nbits > msg->maxsize << 3 ) {"
    },
    {
        "line": 50,
        "fullcodeline": "for( i = 0; i < nbits; i++ ) {"
    },
    {
        "line": 57,
        "fullcodeline": "for( i = 0; i < bits; i += 8 ) {"
    },
    {
        "line": 29,
        "fullcodeline": "short temp = value;"
    },
    {
        "line": 31,
        "fullcodeline": "CopyLittleShort( &msg->data[msg->cursize], &temp );"
    },
    {
        "line": 32,
        "fullcodeline": "msg->cursize += 2;"
    },
    {
        "line": 33,
        "fullcodeline": "msg->bit += 16;"
    },
    {
        "line": 47,
        "fullcodeline": "msg->overflowed = qtrue;"
    },
    {
        "line": 51,
        "fullcodeline": "Huff_putBit( (value & 1), msg->data, &msg->bit );"
    },
    {
        "line": 52,
        "fullcodeline": "value = (value >> 1);"
    },
    {
        "line": 58,
        "fullcodeline": "Huff_offsetTransmit( &msgHuff.compressor, (value & 0xff), msg->data, &msg->bit, msg->maxsize << 3 );"
    },
    {
        "line": 59,
        "fullcodeline": "value = (value >> 8);"
    },
    {
        "line": 61,
        "fullcodeline": "if ( msg->bit > msg->maxsize << 3 ) {"
    },
    {
        "line": 34,
        "fullcodeline": "} else if ( bits==32 ) {"
    },
    {
        "line": 62,
        "fullcodeline": "msg->overflowed = qtrue;"
    },
    {
        "line": 35,
        "fullcodeline": "CopyLittleLong( &msg->data[msg->cursize], &value );"
    },
    {
        "line": 36,
        "fullcodeline": "msg->cursize += 4;"
    },
    {
        "line": 37,
        "fullcodeline": "msg->bit += 32;"
    },
    {
        "line": 39,
        "fullcodeline": "Com_Error( ERR_DROP, \"can't write %d bits\", bits );"
    }
]