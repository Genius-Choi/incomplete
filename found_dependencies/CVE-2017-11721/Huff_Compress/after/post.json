[
    {
        "line": 3,
        "fullcodeline": "byte\t\tseq[65536];"
    },
    {
        "line": 7,
        "fullcodeline": "size = mbuf->cursize - offset;"
    },
    {
        "line": 8,
        "fullcodeline": "buffer = mbuf->data+ + offset;"
    },
    {
        "line": 14,
        "fullcodeline": "Com_Memset(&huff, 0, sizeof(huff_t));"
    },
    {
        "line": 16,
        "fullcodeline": "huff.tree = huff.lhead = huff.loc[NYT] =  &(huff.nodeList[huff.blocNode++]);"
    },
    {
        "line": 17,
        "fullcodeline": "huff.tree->symbol = NYT;"
    },
    {
        "line": 18,
        "fullcodeline": "huff.tree->weight = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "huff.lhead->next = huff.lhead->prev = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "huff.tree->parent = huff.tree->left = huff.tree->right = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "seq[0] = (size>>8);"
    },
    {
        "line": 23,
        "fullcodeline": "seq[1] = size&0xff;"
    },
    {
        "line": 25,
        "fullcodeline": "bloc = 16;"
    },
    {
        "line": 33,
        "fullcodeline": "bloc += 8;\t\t\t\t\t\t\t\t\t\t\t\t// next byte"
    },
    {
        "line": 35,
        "fullcodeline": "mbuf->cursize = (bloc>>3) + offset;"
    },
    {
        "line": 36,
        "fullcodeline": "Com_Memcpy(mbuf->data+offset, seq, (bloc>>3));"
    },
    {
        "line": 10,
        "fullcodeline": "if (size<=0) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (i=0; i<size; i++ ) {"
    },
    {
        "line": 28,
        "fullcodeline": "ch = buffer[i];"
    },
    {
        "line": 29,
        "fullcodeline": "Huff_transmit(&huff, ch, seq, size<<3);\t\t\t\t\t\t/* Transmit symbol */"
    },
    {
        "line": 30,
        "fullcodeline": "Huff_addRef(&huff, (byte)ch);\t\t\t\t\t\t\t\t/* Do update */"
    }
]