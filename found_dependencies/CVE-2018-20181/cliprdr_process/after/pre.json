[
    {
        "line": 6,
        "fullcodeline": "struct stream packet = *s;"
    },
    {
        "line": 8,
        "fullcodeline": "in_uint16_le(s, type);"
    },
    {
        "line": 9,
        "fullcodeline": "in_uint16_le(s, status);"
    },
    {
        "line": 10,
        "fullcodeline": "in_uint32_le(s, length);"
    },
    {
        "line": 11,
        "fullcodeline": "data = s->p;"
    },
    {
        "line": 13,
        "fullcodeline": "logger(Clipboard, Debug, \"cliprdr_process(), type=%d, status=%d, length=%d\", type, status,"
    },
    {
        "line": 16,
        "fullcodeline": "if (!s_check_rem(s, length))"
    },
    {
        "line": 21,
        "fullcodeline": "if (status == CLIPRDR_ERROR)"
    },
    {
        "line": 18,
        "fullcodeline": "rdp_protocol_error(\"cliprdr_process(), consume of packet from stream would overrun\", &packet);"
    },
    {
        "line": 49,
        "fullcodeline": "cliprdr_send_packet(CLIPRDR_FORMAT_ACK, CLIPRDR_RESPONSE, NULL, 0);"
    },
    {
        "line": 54,
        "fullcodeline": "in_uint32_le(s, format);"
    },
    {
        "line": 28,
        "fullcodeline": "cliprdr_send_native_format_announce(last_formats,"
    },
    {
        "line": 32,
        "fullcodeline": "ui_clip_request_failed();"
    },
    {
        "line": 35,
        "fullcodeline": "logger(Clipboard, Warning,"
    }
]