[
    {
        "line": 9,
        "fullcodeline": "vcpu = kvm_arch_vcpu_create(kvm, id);"
    },
    {
        "line": 15,
        "fullcodeline": "r = kvm_arch_vcpu_setup(vcpu);"
    },
    {
        "line": 19,
        "fullcodeline": "mutex_lock(&kvm->lock);"
    },
    {
        "line": 29,
        "fullcodeline": "kvm_for_each_vcpu(r, v, kvm)"
    },
    {
        "line": 38,
        "fullcodeline": "kvm_get_kvm(kvm);"
    },
    {
        "line": 39,
        "fullcodeline": "r = create_vcpu_fd(vcpu);"
    },
    {
        "line": 6,
        "fullcodeline": "if (id >= KVM_MAX_VCPUS)"
    },
    {
        "line": 10,
        "fullcodeline": "if (IS_ERR(vcpu))"
    },
    {
        "line": 40,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!kvm_vcpu_compatible(vcpu)) {"
    },
    {
        "line": 21,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "if (atomic_read(&kvm->online_vcpus) == KVM_MAX_VCPUS) {"
    },
    {
        "line": 25,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "r = -EEXIST;"
    },
    {
        "line": 35,
        "fullcodeline": "BUG_ON(kvm->vcpus[atomic_read(&kvm->online_vcpus)]);"
    },
    {
        "line": 41,
        "fullcodeline": "kvm_put_kvm(kvm);"
    },
    {
        "line": 45,
        "fullcodeline": "kvm->vcpus[atomic_read(&kvm->online_vcpus)] = vcpu;"
    },
    {
        "line": 7,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 11,
        "fullcodeline": "return PTR_ERR(vcpu);"
    }
]