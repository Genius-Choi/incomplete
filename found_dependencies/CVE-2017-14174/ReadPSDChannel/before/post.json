[
    {
        "line": 16,
        "fullcodeline": "channel_image=image;"
    },
    {
        "line": 17,
        "fullcodeline": "mask=(Image *) NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "offset=TellBlob(image);"
    },
    {
        "line": 46,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 85,
        "fullcodeline": "SeekBlob(image,offset+layer_info->channel_info[channel].size-2,SEEK_SET);"
    },
    {
        "line": 93,
        "fullcodeline": "layer_info->mask.image=mask;"
    },
    {
        "line": 18,
        "fullcodeline": "if ((layer_info->channel_info[channel].type < -1) &&"
    },
    {
        "line": 86,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 19,
        "fullcodeline": "(layer_info->mask.page.width > 0) && (layer_info->mask.page.height > 0))"
    },
    {
        "line": 28,
        "fullcodeline": "option=GetImageOption(image_info,\"psd:preserve-opacity-mask\");"
    },
    {
        "line": 36,
        "fullcodeline": "mask=CloneImage(image,layer_info->mask.page.width,"
    },
    {
        "line": 50,
        "fullcodeline": "status=ReadPSDChannelRaw(channel_image,psd_info->channels,"
    },
    {
        "line": 74,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),"
    },
    {
        "line": 80,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),TypeWarning,"
    },
    {
        "line": 90,
        "fullcodeline": "ThrowBinaryException(CoderError,\"UnableToDecompressImage\","
    },
    {
        "line": 29,
        "fullcodeline": "if ((layer_info->channel_info[channel].type != -2) ||"
    },
    {
        "line": 38,
        "fullcodeline": "if (mask != (Image *) NULL)"
    },
    {
        "line": 58,
        "fullcodeline": "sizes=ReadPSDRLESizes(channel_image,psd_info,channel_image->rows);"
    },
    {
        "line": 62,
        "fullcodeline": "status=ReadPSDChannelRLE(channel_image,psd_info,"
    },
    {
        "line": 64,
        "fullcodeline": "sizes=(MagickOffsetType *) RelinquishMagickMemory(sizes);"
    },
    {
        "line": 88,
        "fullcodeline": "if (mask != (Image *) NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "(layer_info->mask.flags > 2) || ((layer_info->mask.flags & 0x02) &&"
    },
    {
        "line": 33,
        "fullcodeline": "SeekBlob(image,layer_info->channel_info[channel].size-2,SEEK_CUR);"
    },
    {
        "line": 40,
        "fullcodeline": "SetImageType(mask,GrayscaleType,exception);"
    },
    {
        "line": 41,
        "fullcodeline": "channel_image=mask;"
    },
    {
        "line": 59,
        "fullcodeline": "if (sizes == (MagickOffsetType *) NULL)"
    },
    {
        "line": 81,
        "fullcodeline": "\"CompressionNotSupported\",\"'%.20g'\",(double) compression);"
    },
    {
        "line": 89,
        "fullcodeline": "DestroyImage(mask);"
    },
    {
        "line": 31,
        "fullcodeline": "(IsStringTrue(option) == MagickFalse)))"
    },
    {
        "line": 60,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    }
]