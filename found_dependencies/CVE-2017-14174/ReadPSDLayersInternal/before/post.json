[
    {
        "line": 6,
        "fullcodeline": "type[4];"
    },
    {
        "line": 25,
        "fullcodeline": "size=GetPSDSize(psd_info,image);"
    },
    {
        "line": 47,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 26,
        "fullcodeline": "if (size == 0)"
    },
    {
        "line": 48,
        "fullcodeline": "if (size != 0)"
    },
    {
        "line": 31,
        "fullcodeline": "(void) ReadBlobLong(image);"
    },
    {
        "line": 32,
        "fullcodeline": "count=ReadBlob(image,4,(unsigned char *) type);"
    },
    {
        "line": 33,
        "fullcodeline": "ReversePSDString(image,type,4);"
    },
    {
        "line": 34,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 50,
        "fullcodeline": "layer_info=(LayerInfo *) NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "number_layers=(short) ReadBlobShort(image);"
    },
    {
        "line": 80,
        "fullcodeline": "layer_info=(LayerInfo *) AcquireQuantumMemory((size_t) number_layers,"
    },
    {
        "line": 90,
        "fullcodeline": "(void) ResetMagickMemory(layer_info,0,(size_t) number_layers*"
    },
    {
        "line": 35,
        "fullcodeline": "if ((count == 0) || (LocaleNCompare(type,\"8BIM\",4) != 0))"
    },
    {
        "line": 53,
        "fullcodeline": "if (number_layers < 0)"
    },
    {
        "line": 69,
        "fullcodeline": "if (skip_layers != MagickFalse)"
    },
    {
        "line": 72,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 76,
        "fullcodeline": "if (number_layers == 0)"
    },
    {
        "line": 82,
        "fullcodeline": "if (layer_info == (LayerInfo *) NULL)"
    },
    {
        "line": 93,
        "fullcodeline": "for (i=0; i < number_layers; i++)"
    },
    {
        "line": 281,
        "fullcodeline": "for (i=0; i < number_layers; i++)"
    },
    {
        "line": 316,
        "fullcodeline": "if (image_info->ping == MagickFalse)"
    },
    {
        "line": 351,
        "fullcodeline": "if (status != MagickFalse)"
    },
    {
        "line": 59,
        "fullcodeline": "number_layers=MagickAbsoluteValue(number_layers);"
    },
    {
        "line": 63,
        "fullcodeline": "image->alpha_trait=BlendPixelTrait;"
    },
    {
        "line": 73,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 77,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,\"InvalidNumberOfLayers\","
    },
    {
        "line": 87,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 102,
        "fullcodeline": "layer_info[i].page.y=ReadBlobSignedLong(image);"
    },
    {
        "line": 103,
        "fullcodeline": "layer_info[i].page.x=ReadBlobSignedLong(image);"
    },
    {
        "line": 104,
        "fullcodeline": "y=ReadBlobSignedLong(image);"
    },
    {
        "line": 105,
        "fullcodeline": "x=ReadBlobSignedLong(image);"
    },
    {
        "line": 106,
        "fullcodeline": "layer_info[i].page.width=(size_t) (x-layer_info[i].page.x);"
    },
    {
        "line": 107,
        "fullcodeline": "layer_info[i].page.height=(size_t) (y-layer_info[i].page.y);"
    },
    {
        "line": 108,
        "fullcodeline": "layer_info[i].channels=ReadBlobShort(image);"
    },
    {
        "line": 132,
        "fullcodeline": "count=ReadBlob(image,4,(unsigned char *) type);"
    },
    {
        "line": 133,
        "fullcodeline": "ReversePSDString(image,type,4);"
    },
    {
        "line": 143,
        "fullcodeline": "count=ReadBlob(image,4,(unsigned char *) layer_info[i].blendkey);"
    },
    {
        "line": 144,
        "fullcodeline": "ReversePSDString(image,layer_info[i].blendkey,4);"
    },
    {
        "line": 145,
        "fullcodeline": "layer_info[i].opacity=(Quantum) ScaleCharToQuantum((unsigned char)"
    },
    {
        "line": 147,
        "fullcodeline": "layer_info[i].clipping=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 148,
        "fullcodeline": "layer_info[i].flags=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 149,
        "fullcodeline": "layer_info[i].visible=!(layer_info[i].flags & 0x02);"
    },
    {
        "line": 156,
        "fullcodeline": "(void) ReadBlobByte(image);  /* filler */"
    },
    {
        "line": 158,
        "fullcodeline": "size=ReadBlobLong(image);"
    },
    {
        "line": 296,
        "fullcodeline": "layer_info[i].image=CloneImage(image,layer_info[i].page.width,"
    },
    {
        "line": 377,
        "fullcodeline": "layer_info=(LayerInfo *) RelinquishMagickMemory(layer_info);"
    },
    {
        "line": 39,
        "fullcodeline": "count=ReadBlob(image,4,(unsigned char *) type);"
    },
    {
        "line": 40,
        "fullcodeline": "ReversePSDString(image,type,4);"
    },
    {
        "line": 60,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 84,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 99,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 109,
        "fullcodeline": "if (layer_info[i].channels > MaxPSDChannels)"
    },
    {
        "line": 115,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 121,
        "fullcodeline": "for (j=0; j < (ssize_t) layer_info[i].channels; j++)"
    },
    {
        "line": 134,
        "fullcodeline": "if ((count == 0) || (LocaleNCompare(type,\"8BIM\",4) != 0))"
    },
    {
        "line": 150,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 159,
        "fullcodeline": "if (size != 0)"
    },
    {
        "line": 283,
        "fullcodeline": "if ((layer_info[i].page.width == 0) || (layer_info[i].page.height == 0))"
    },
    {
        "line": 298,
        "fullcodeline": "if (layer_info[i].image == (Image *) NULL)"
    },
    {
        "line": 308,
        "fullcodeline": "if (layer_info[i].info != (StringInfo *) NULL)"
    },
    {
        "line": 318,
        "fullcodeline": "for (i=0; i < number_layers; i++)"
    },
    {
        "line": 353,
        "fullcodeline": "for (i=0; i < number_layers; i++)"
    },
    {
        "line": 364,
        "fullcodeline": "if (number_layers > 0)"
    },
    {
        "line": 380,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 41,
        "fullcodeline": "if ((count != 0) && (LocaleNCompare(type,\"Lr16\",4) == 0))"
    },
    {
        "line": 61,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 74,
        "fullcodeline": "\"  image contains %.20g layers\",(double) number_layers);"
    },
    {
        "line": 85,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 100,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 111,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 112,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,\"MaximumChannelsExceeded\","
    },
    {
        "line": 116,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 123,
        "fullcodeline": "layer_info[i].channel_info[j].type=(short) ReadBlobShort(image);"
    },
    {
        "line": 124,
        "fullcodeline": "layer_info[i].channel_info[j].size=(size_t) GetPSDSize(psd_info,"
    },
    {
        "line": 139,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 140,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,\"ImproperImageHeader\","
    },
    {
        "line": 151,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 168,
        "fullcodeline": "length=ReadBlobLong(image);"
    },
    {
        "line": 169,
        "fullcodeline": "combined_length=length+4;"
    },
    {
        "line": 209,
        "fullcodeline": "length=ReadBlobLong(image);"
    },
    {
        "line": 210,
        "fullcodeline": "combined_length+=length+4;"
    },
    {
        "line": 242,
        "fullcodeline": "length=(MagickSizeType) (unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 243,
        "fullcodeline": "combined_length+=length+1;"
    },
    {
        "line": 246,
        "fullcodeline": "layer_info[i].name[length]='\\0';"
    },
    {
        "line": 262,
        "fullcodeline": "length=(MagickSizeType) size-combined_length;"
    },
    {
        "line": 300,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 304,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 310,
        "fullcodeline": "(void) SetImageProfile(layer_info[i].image,\"psd:additional-info\","
    },
    {
        "line": 312,
        "fullcodeline": "layer_info[i].info=DestroyStringInfo(layer_info[i].info);"
    },
    {
        "line": 339,
        "fullcodeline": "status=ReadPSDLayer(image,image_info,psd_info,&layer_info[i],"
    },
    {
        "line": 344,
        "fullcodeline": "status=SetImageProgress(image,LoadImagesTag,i,(MagickSizeType)"
    },
    {
        "line": 375,
        "fullcodeline": "layer_info[0].image->previous=image;"
    },
    {
        "line": 42,
        "fullcodeline": "size=GetPSDSize(psd_info,image);"
    },
    {
        "line": 126,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 136,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 165,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 170,
        "fullcodeline": "if (length != 0)"
    },
    {
        "line": 211,
        "fullcodeline": "if (length != 0)"
    },
    {
        "line": 244,
        "fullcodeline": "if (length > 0)"
    },
    {
        "line": 247,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 250,
        "fullcodeline": "if ((length % 4) != 0)"
    },
    {
        "line": 263,
        "fullcodeline": "if (length > 0)"
    },
    {
        "line": 285,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 288,
        "fullcodeline": "if (layer_info[i].info != (StringInfo *) NULL)"
    },
    {
        "line": 301,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 320,
        "fullcodeline": "if (layer_info[i].image == (Image *) NULL)"
    },
    {
        "line": 335,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 341,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 346,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 355,
        "fullcodeline": "if (layer_info[i].image == (Image *) NULL)"
    },
    {
        "line": 366,
        "fullcodeline": "for (i=0; i < number_layers; i++)"
    },
    {
        "line": 101,
        "fullcodeline": "\"  reading layer #%.20g\",(double) i+1);"
    },
    {
        "line": 118,
        "fullcodeline": "(double) layer_info[i].page.x,(double) layer_info[i].page.y,"
    },
    {
        "line": 119,
        "fullcodeline": "(double) layer_info[i].page.height,(double)"
    },
    {
        "line": 120,
        "fullcodeline": "layer_info[i].page.width,(double) layer_info[i].channels);"
    },
    {
        "line": 127,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 137,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 146,
        "fullcodeline": "ReadBlobByte(image));"
    },
    {
        "line": 153,
        "fullcodeline": "layer_info[i].blendkey,(double) layer_info[i].opacity,"
    },
    {
        "line": 154,
        "fullcodeline": "layer_info[i].clipping ? \"true\" : \"false\",layer_info[i].flags,"
    },
    {
        "line": 155,
        "fullcodeline": "layer_info[i].visible ? \"true\" : \"false\");"
    },
    {
        "line": 166,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 175,
        "fullcodeline": "layer_info[i].mask.page.y=ReadBlobSignedLong(image);"
    },
    {
        "line": 176,
        "fullcodeline": "layer_info[i].mask.page.x=ReadBlobSignedLong(image);"
    },
    {
        "line": 177,
        "fullcodeline": "layer_info[i].mask.page.height=(size_t) (ReadBlobSignedLong(image)-"
    },
    {
        "line": 179,
        "fullcodeline": "layer_info[i].mask.page.width=(size_t) (ReadBlobSignedLong(image)-"
    },
    {
        "line": 181,
        "fullcodeline": "layer_info[i].mask.background=(unsigned char) ReadBlobByte("
    },
    {
        "line": 183,
        "fullcodeline": "layer_info[i].mask.flags=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 245,
        "fullcodeline": "(void) ReadBlob(image,(size_t) length++,layer_info[i].name);"
    },
    {
        "line": 248,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 252,
        "fullcodeline": "length=4-(length % 4);"
    },
    {
        "line": 253,
        "fullcodeline": "combined_length+=length;"
    },
    {
        "line": 274,
        "fullcodeline": "layer_info[i].info=AcquireStringInfo((const size_t) length);"
    },
    {
        "line": 275,
        "fullcodeline": "info=GetStringInfoDatum(layer_info[i].info);"
    },
    {
        "line": 276,
        "fullcodeline": "(void) ReadBlob(image,(const size_t) length,info);"
    },
    {
        "line": 286,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 289,
        "fullcodeline": "layer_info[i].info=DestroyStringInfo(layer_info[i].info);"
    },
    {
        "line": 302,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 336,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 359,
        "fullcodeline": "number_layers--;"
    },
    {
        "line": 360,
        "fullcodeline": "i--;"
    },
    {
        "line": 184,
        "fullcodeline": "if (!(layer_info[i].mask.flags & 0x01))"
    },
    {
        "line": 191,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 202,
        "fullcodeline": "if (DiscardBlobBytes(image,(MagickSizeType) (length-18)) == MagickFalse)"
    },
    {
        "line": 216,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 223,
        "fullcodeline": "for (j=0; j < (ssize_t) length; j+=8)"
    },
    {
        "line": 255,
        "fullcodeline": "if (DiscardBlobBytes(image,length) == MagickFalse)"
    },
    {
        "line": 268,
        "fullcodeline": "if (length > GetBlobSize(image))"
    },
    {
        "line": 322,
        "fullcodeline": "for (j=0; j < layer_info[i].channels; j++)"
    },
    {
        "line": 357,
        "fullcodeline": "for (j=i; j < number_layers - 1; j++)"
    },
    {
        "line": 358,
        "fullcodeline": "layer_info[j] = layer_info[j+1];"
    },
    {
        "line": 368,
        "fullcodeline": "if (i > 0)"
    },
    {
        "line": 370,
        "fullcodeline": "if (i < (number_layers-1))"
    },
    {
        "line": 128,
        "fullcodeline": "\"    channel[%.20g]: type=%.20g, size=%.20g\",(double) j,"
    },
    {
        "line": 186,
        "fullcodeline": "layer_info[i].mask.page.y=layer_info[i].mask.page.y-"
    },
    {
        "line": 188,
        "fullcodeline": "layer_info[i].mask.page.x=layer_info[i].mask.page.x-"
    },
    {
        "line": 192,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 204,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 205,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,"
    },
    {
        "line": 217,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 225,
        "fullcodeline": "size_t blend_source=ReadBlobLong(image);"
    },
    {
        "line": 226,
        "fullcodeline": "size_t blend_dest=ReadBlobLong(image);"
    },
    {
        "line": 257,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 258,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,"
    },
    {
        "line": 270,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 271,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,"
    },
    {
        "line": 303,
        "fullcodeline": "\"  allocation of image for layer %.20g failed\",(double) i);"
    },
    {
        "line": 337,
        "fullcodeline": "\"  reading data for layer %.20g\",(double) i);"
    },
    {
        "line": 227,
        "fullcodeline": "if (EOFBlob(image) != MagickFalse)"
    },
    {
        "line": 233,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 324,
        "fullcodeline": "if (DiscardBlobBytes(image,(MagickSizeType)"
    },
    {
        "line": 194,
        "fullcodeline": "(double) layer_info[i].mask.page.x,(double)"
    },
    {
        "line": 195,
        "fullcodeline": "layer_info[i].mask.page.y,(double)"
    },
    {
        "line": 196,
        "fullcodeline": "layer_info[i].mask.page.width,(double)"
    },
    {
        "line": 197,
        "fullcodeline": "layer_info[i].mask.page.height,(double) ((MagickOffsetType)"
    },
    {
        "line": 218,
        "fullcodeline": "\"      layer blending ranges: length=%.20g\",(double)"
    },
    {
        "line": 229,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 230,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,"
    },
    {
        "line": 234,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 327,
        "fullcodeline": "layer_info=DestroyLayerInfo(layer_info,number_layers);"
    },
    {
        "line": 328,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,"
    },
    {
        "line": 219,
        "fullcodeline": "((MagickOffsetType) length));"
    },
    {
        "line": 369,
        "fullcodeline": "layer_info[i].image->previous=layer_info[i-1].image;"
    },
    {
        "line": 371,
        "fullcodeline": "layer_info[i].image->next=layer_info[i+1].image;"
    },
    {
        "line": 235,
        "fullcodeline": "\"        source(%x), dest(%x)\",(unsigned int)"
    },
    {
        "line": 236,
        "fullcodeline": "blend_source,(unsigned int) blend_dest);"
    }
]