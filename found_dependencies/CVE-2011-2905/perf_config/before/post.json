[
    {
        "line": 3,
        "fullcodeline": "int ret = 0, found = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "char *repo_config = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "const char *home = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "home = getenv(\"HOME\");"
    },
    {
        "line": 26,
        "fullcodeline": "repo_config = perf_pathdup(\"config\");"
    },
    {
        "line": 31,
        "fullcodeline": "free(repo_config);"
    },
    {
        "line": 10,
        "fullcodeline": "if (perf_config_system() && !access(perf_etc_perfconfig(), R_OK)) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (perf_config_global() && home) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (!access(repo_config, R_OK)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (found == 0)"
    },
    {
        "line": 11,
        "fullcodeline": "ret += perf_config_from_file(fn, perf_etc_perfconfig(),"
    },
    {
        "line": 13,
        "fullcodeline": "found += 1;"
    },
    {
        "line": 18,
        "fullcodeline": "char *user_config = strdup(mkpath(\"%s/.perfconfig\", home));"
    },
    {
        "line": 23,
        "fullcodeline": "free(user_config);"
    },
    {
        "line": 28,
        "fullcodeline": "ret += perf_config_from_file(fn, repo_config, data);"
    },
    {
        "line": 29,
        "fullcodeline": "found += 1;"
    },
    {
        "line": 9,
        "fullcodeline": "return perf_config_from_file(fn, config_exclusive_filename, data);"
    },
    {
        "line": 19,
        "fullcodeline": "if (!access(user_config, R_OK)) {"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 20,
        "fullcodeline": "ret += perf_config_from_file(fn, user_config, data);"
    },
    {
        "line": 21,
        "fullcodeline": "found += 1;"
    }
]