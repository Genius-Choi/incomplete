[
    {
        "line": 4,
        "fullcodeline": "uint8_t type = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&"
    },
    {
        "line": 12,
        "fullcodeline": "!length)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_ORIGIN)))"
    },
    {
        "line": 16,
        "fullcodeline": "type = BGP_ATTR_ORIGIN;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_AS_PATH)))"
    },
    {
        "line": 19,
        "fullcodeline": "type = BGP_ATTR_AS_PATH;"
    },
    {
        "line": 25,
        "fullcodeline": "if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_NEXT_HOP))"
    },
    {
        "line": 26,
        "fullcodeline": "&& !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)))"
    },
    {
        "line": 27,
        "fullcodeline": "type = BGP_ATTR_NEXT_HOP;"
    },
    {
        "line": 29,
        "fullcodeline": "if (peer->sort == BGP_PEER_IBGP"
    },
    {
        "line": 30,
        "fullcodeline": "&& !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_LOCAL_PREF)))"
    },
    {
        "line": 31,
        "fullcodeline": "type = BGP_ATTR_LOCAL_PREF;"
    },
    {
        "line": 38,
        "fullcodeline": "if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&"
    },
    {
        "line": 39,
        "fullcodeline": "CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI)))"
    },
    {
        "line": 47,
        "fullcodeline": "flog_warn(EC_BGP_MISSING_ATTRIBUTE,"
    },
    {
        "line": 40,
        "fullcodeline": "return type ? BGP_ATTR_PARSE_MISSING_MANDATORY"
    },
    {
        "line": 49,
        "fullcodeline": "lookup_msg(attr_str, type, NULL));"
    }
]