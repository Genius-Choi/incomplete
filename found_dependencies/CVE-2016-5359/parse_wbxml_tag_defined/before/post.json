[
    {
        "line": 5,
        "fullcodeline": "guint32     tvb_len  = tvb_reported_length (tvb);"
    },
    {
        "line": 6,
        "fullcodeline": "guint32     off      = offset;"
    },
    {
        "line": 13,
        "fullcodeline": "guint8      tag_save_known      = 0;     /* Will contain peek & 0x3F (tag identity) */"
    },
    {
        "line": 14,
        "fullcodeline": "guint8      tag_new_known       = 0;     /* Will contain peek & 0x3F (tag identity) */"
    },
    {
        "line": 17,
        "fullcodeline": "guint8      parsing_tag_content = FALSE; /* Are we parsing content from a"
    },
    {
        "line": 22,
        "fullcodeline": "tag_save_literal = NULL;                 /* Prevents compiler warning */"
    },
    {
        "line": 24,
        "fullcodeline": "DebugLog((\"parse_wbxml_tag_defined (level = %u, offset = %u)\\n\", *level, offset));"
    },
    {
        "line": 397,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\", *level, off - offset));"
    },
    {
        "line": 25,
        "fullcodeline": "while (off < tvb_len) {"
    },
    {
        "line": 398,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 26,
        "fullcodeline": "peek = tvb_get_guint8 (tvb, off);"
    },
    {
        "line": 27,
        "fullcodeline": "DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));"
    },
    {
        "line": 28,
        "fullcodeline": "if ((peek & 0x3F) < 4) switch (peek) { /* Global tokens in state = STAG"
    },
    {
        "line": 216,
        "fullcodeline": "tag_len = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "*codepage_stag = tvb_get_guint8 (tvb, off+1);"
    },
    {
        "line": 32,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 2,"
    },
    {
        "line": 37,
        "fullcodeline": "off += 2;"
    },
    {
        "line": 56,
        "fullcodeline": "(*level)--;"
    },
    {
        "line": 57,
        "fullcodeline": "off++;"
    },
    {
        "line": 59,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u\\n\", *level, off - offset));"
    },
    {
        "line": 62,
        "fullcodeline": "ent = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 63,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 68,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 71,
        "fullcodeline": "len = tvb_strsize (tvb, off+1);"
    },
    {
        "line": 72,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 78,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 84,
        "fullcodeline": "len = tvb_strsize (tvb, off+1);"
    },
    {
        "line": 85,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 93,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 96,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 101,
        "fullcodeline": "len = parse_wbxml_attribute_list_defined (tree, tvb, off,"
    },
    {
        "line": 104,
        "fullcodeline": "off += len;"
    },
    {
        "line": 112,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 122,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 136,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 139,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 140,
        "fullcodeline": "str_len = tvb_strsize (tvb, str_tbl+idx);"
    },
    {
        "line": 141,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 147,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 153,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 159,
        "fullcodeline": "off++;"
    },
    {
        "line": 217,
        "fullcodeline": "if ((peek & 0x3F) == 4) { /* LITERAL */"
    },
    {
        "line": 231,
        "fullcodeline": "if (peek & 0x40) { /* Content present */"
    },
    {
        "line": 60,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 67,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), ent);"
    },
    {
        "line": 76,
        "fullcodeline": "*level, *codepage_stag, Indent(*level),"
    },
    {
        "line": 77,
        "fullcodeline": "tvb_format_text (tvb, off+1, len-1));"
    },
    {
        "line": 90,
        "fullcodeline": "peek & 0x0f, Indent (*level),"
    },
    {
        "line": 91,
        "fullcodeline": "map_token (map->global, 0, peek),"
    },
    {
        "line": 92,
        "fullcodeline": "tvb_format_text (tvb, off+1, len-1));"
    },
    {
        "line": 100,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 105,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 116,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 129,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 145,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 146,
        "fullcodeline": "tvb_format_text (tvb, str_tbl+idx, str_len-1));"
    },
    {
        "line": 157,
        "fullcodeline": "*level, *codepage_stag, peek & 0x0f, Indent (*level),"
    },
    {
        "line": 158,
        "fullcodeline": "map_token (map->global, 0, peek));"
    },
    {
        "line": 162,
        "fullcodeline": "if (tvb_get_guint8 (tvb, 0)) { /* WBXML 1.x (x > 0) */"
    },
    {
        "line": 218,
        "fullcodeline": "DebugLog((\"STAG: LITERAL tag (peek = 0x%02X, off = %u) - TableRef follows!\\n\", peek, off));"
    },
    {
        "line": 219,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &tag_len);"
    },
    {
        "line": 220,
        "fullcodeline": "str_len = tvb_strsize (tvb, str_tbl+idx);"
    },
    {
        "line": 221,
        "fullcodeline": "tag_new_literal = (const gchar*)tvb_get_ptr (tvb, str_tbl+idx, str_len);"
    },
    {
        "line": 222,
        "fullcodeline": "tag_new_known = 0; /* invalidate known tag_new */"
    },
    {
        "line": 41,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 106,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: len = %u (short frame)\\n\", *level, off - offset));"
    },
    {
        "line": 110,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 133,
        "fullcodeline": "*level, *codepage_stag, peek & 0x0f, Indent (*level),"
    },
    {
        "line": 181,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1 + len,"
    },
    {
        "line": 186,
        "fullcodeline": "off += 1 + len;"
    },
    {
        "line": 224,
        "fullcodeline": "tag_new_known = peek & 0x3F;"
    },
    {
        "line": 225,
        "fullcodeline": "tag_new_literal = map_token (map->tags, *codepage_stag,"
    },
    {
        "line": 320,
        "fullcodeline": "DebugLog((\"<Tag/> in Tag - No recursion! (off = %u)\\n\", off));"
    },
    {
        "line": 321,
        "fullcodeline": "(*level)++;"
    },
    {
        "line": 392,
        "fullcodeline": "(*level)--;"
    },
    {
        "line": 46,
        "fullcodeline": "tag_save_known, Indent (*level),"
    },
    {
        "line": 49,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 124,
        "fullcodeline": "if (map->ext_t[peek & 0x03])"
    },
    {
        "line": 125,
        "fullcodeline": "s = (map->ext_t[peek & 0x03])(tvb, idx, str_tbl);"
    },
    {
        "line": 185,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), str);"
    },
    {
        "line": 188,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 194,
        "fullcodeline": "off = tvb_len;"
    },
    {
        "line": 195,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u\\n\", *level, off - offset));"
    },
    {
        "line": 238,
        "fullcodeline": "DebugLog((\"STAG: Tag in Tag - RECURSE! (off = %u)\\n\", off));"
    },
    {
        "line": 241,
        "fullcodeline": "(*level)++;"
    },
    {
        "line": 242,
        "fullcodeline": "len = parse_wbxml_tag_defined (tree, tvb, off, str_tbl,"
    },
    {
        "line": 244,
        "fullcodeline": "off += len;"
    },
    {
        "line": 322,
        "fullcodeline": "if (peek & 0x80) { /* No Content, Attribute list present */"
    },
    {
        "line": 53,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 54,
        "fullcodeline": "tag_save_literal ? tag_save_literal : \"\");"
    },
    {
        "line": 127,
        "fullcodeline": "s = wmem_strdup_printf(wmem_packet_scope(), \"EXT_T_%1x (%s)\", peek & 0x03,"
    },
    {
        "line": 196,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 316,
        "fullcodeline": "parsing_tag_content = TRUE;"
    },
    {
        "line": 317,
        "fullcodeline": "DebugLog((\"Tag in Tag - No recursion this time! (off = %u)\\n\", off));"
    },
    {
        "line": 247,
        "fullcodeline": "if ((peek & 0x3F) == 4) { /* Literal tag */"
    },
    {
        "line": 256,
        "fullcodeline": "if (peek & 0x80) { /* Content and Attribute list present */"
    },
    {
        "line": 128,
        "fullcodeline": "map_token (map->global, 0, peek));"
    },
    {
        "line": 166,
        "fullcodeline": "str = map->opaque_binary_tag(tvb, off + 1,"
    },
    {
        "line": 248,
        "fullcodeline": "tag_save_literal = tag_new_literal;"
    },
    {
        "line": 249,
        "fullcodeline": "tag_save_known = 0;"
    },
    {
        "line": 274,
        "fullcodeline": "len = parse_wbxml_attribute_list_defined (tree, tvb,"
    },
    {
        "line": 277,
        "fullcodeline": "off += len;"
    },
    {
        "line": 286,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 324,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 331,
        "fullcodeline": "off++;"
    },
    {
        "line": 332,
        "fullcodeline": "len = parse_wbxml_attribute_list_defined (tree, tvb,"
    },
    {
        "line": 335,
        "fullcodeline": "off += len;"
    },
    {
        "line": 343,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 169,
        "fullcodeline": "str = default_opaque_binary_tag(tvb, off + 1,"
    },
    {
        "line": 174,
        "fullcodeline": "str = map->opaque_literal_tag(tvb, off + 1,"
    },
    {
        "line": 251,
        "fullcodeline": "tag_save_known = tag_new_known;"
    },
    {
        "line": 252,
        "fullcodeline": "tag_save_literal = tag_new_literal;"
    },
    {
        "line": 278,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 290,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 329,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 336,
        "fullcodeline": "if (off > tvb_len) {"
    },
    {
        "line": 347,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 349,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 354,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 355,
        "fullcodeline": "len = parse_wbxml_attribute_list_defined (tree, tvb,"
    },
    {
        "line": 358,
        "fullcodeline": "off += len;"
    },
    {
        "line": 366,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 374,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 381,
        "fullcodeline": "off++;"
    },
    {
        "line": 177,
        "fullcodeline": "str = default_opaque_literal_tag(tvb, off + 1,"
    },
    {
        "line": 258,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 265,
        "fullcodeline": "off++;"
    },
    {
        "line": 279,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: len = %u (short frame)\\n\","
    },
    {
        "line": 284,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 337,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: len = %u (short frame)\\n\", *level, off - offset));"
    },
    {
        "line": 341,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 353,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), tag_new_literal);"
    },
    {
        "line": 359,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 370,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 379,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 383,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 389,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 263,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 267,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 272,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 293,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 300,
        "fullcodeline": "off++;"
    },
    {
        "line": 360,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: len = %u (short frame)\\n\", *level, off - offset));"
    },
    {
        "line": 364,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 387,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 271,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), tag_new_literal);"
    },
    {
        "line": 298,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 302,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 308,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 280,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 306,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    }
]