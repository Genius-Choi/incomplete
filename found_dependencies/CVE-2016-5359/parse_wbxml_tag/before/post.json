[
    {
        "line": 5,
        "fullcodeline": "guint32     tvb_len             = tvb_reported_length (tvb);"
    },
    {
        "line": 6,
        "fullcodeline": "guint32     off                 = offset;"
    },
    {
        "line": 13,
        "fullcodeline": "guint8      tag_save_known      = 0;     /* Will contain peek & 0x3F (tag identity) */"
    },
    {
        "line": 14,
        "fullcodeline": "guint8      tag_new_known       = 0;     /* Will contain peek & 0x3F (tag identity) */"
    },
    {
        "line": 17,
        "fullcodeline": "char       *tag_save_buf        = NULL;  /* Will contain \"tag_0x%02X\" */"
    },
    {
        "line": 18,
        "fullcodeline": "char       *tag_new_buf         = NULL;  /* Will contain \"tag_0x%02X\" */"
    },
    {
        "line": 19,
        "fullcodeline": "guint8      parsing_tag_content = FALSE; /* Are we parsing content from a"
    },
    {
        "line": 24,
        "fullcodeline": "tag_save_literal = NULL;                 /* Prevents compiler warning */"
    },
    {
        "line": 26,
        "fullcodeline": "DebugLog((\"parse_wbxml_tag (level = %u, offset = %u)\\n\", *level, offset));"
    },
    {
        "line": 387,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\","
    },
    {
        "line": 27,
        "fullcodeline": "while (off < tvb_len) {"
    },
    {
        "line": 389,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 28,
        "fullcodeline": "peek = tvb_get_guint8 (tvb, off);"
    },
    {
        "line": 29,
        "fullcodeline": "DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));"
    },
    {
        "line": 30,
        "fullcodeline": "if ((peek & 0x3F) < 4) switch (peek) { /* Global tokens in state = STAG"
    },
    {
        "line": 388,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 194,
        "fullcodeline": "tag_len = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "*codepage_stag = tvb_get_guint8 (tvb, off+1);"
    },
    {
        "line": 34,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 2,"
    },
    {
        "line": 39,
        "fullcodeline": "off += 2;"
    },
    {
        "line": 58,
        "fullcodeline": "(*level)--;"
    },
    {
        "line": 59,
        "fullcodeline": "off++;"
    },
    {
        "line": 61,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u\\n\","
    },
    {
        "line": 65,
        "fullcodeline": "ent = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 66,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 71,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 74,
        "fullcodeline": "len = tvb_strsize (tvb, off+1);"
    },
    {
        "line": 75,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 81,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 87,
        "fullcodeline": "len = tvb_strsize (tvb, off+1);"
    },
    {
        "line": 88,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 94,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 97,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 102,
        "fullcodeline": "len = parse_wbxml_attribute_list (tree, tvb, off, str_tbl,"
    },
    {
        "line": 105,
        "fullcodeline": "off += len;"
    },
    {
        "line": 114,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 124,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 125,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 131,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 134,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 135,
        "fullcodeline": "str_len = tvb_strsize (tvb, str_tbl+idx);"
    },
    {
        "line": 136,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1+len,"
    },
    {
        "line": 142,
        "fullcodeline": "off += 1+len;"
    },
    {
        "line": 148,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 153,
        "fullcodeline": "off++;"
    },
    {
        "line": 195,
        "fullcodeline": "if ((peek & 0x3F) == 4) { /* LITERAL */"
    },
    {
        "line": 211,
        "fullcodeline": "if (peek & 0x40) { /* Content present */"
    },
    {
        "line": 63,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 70,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), ent);"
    },
    {
        "line": 79,
        "fullcodeline": "*level, *codepage_stag, Indent(*level),"
    },
    {
        "line": 80,
        "fullcodeline": "tvb_format_text (tvb, off+1, len-1));"
    },
    {
        "line": 92,
        "fullcodeline": "*level, *codepage_stag, peek & 0x0f, Indent (*level),"
    },
    {
        "line": 93,
        "fullcodeline": "tvb_format_text (tvb, off+1, len-1));"
    },
    {
        "line": 101,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 106,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 118,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 129,
        "fullcodeline": "*level, *codepage_stag, peek & 0x0f, Indent (*level),"
    },
    {
        "line": 140,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 141,
        "fullcodeline": "tvb_format_text (tvb, str_tbl+idx, str_len-1));"
    },
    {
        "line": 152,
        "fullcodeline": "*level, *codepage_stag, peek & 0x0f, Indent (*level));"
    },
    {
        "line": 156,
        "fullcodeline": "if (tvb_get_guint8 (tvb, 0)) { /* WBXML 1.x (x > 0) */"
    },
    {
        "line": 196,
        "fullcodeline": "DebugLog((\"STAG: LITERAL tag (peek = 0x%02X, off = %u)\""
    },
    {
        "line": 198,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &tag_len);"
    },
    {
        "line": 199,
        "fullcodeline": "str_len = tvb_strsize (tvb, str_tbl+idx);"
    },
    {
        "line": 200,
        "fullcodeline": "tag_new_literal = (const gchar*)tvb_get_ptr (tvb, str_tbl+idx, str_len);"
    },
    {
        "line": 201,
        "fullcodeline": "tag_new_known = 0; /* invalidate known tag_new */"
    },
    {
        "line": 43,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 107,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: len = %u (short frame)\\n\","
    },
    {
        "line": 112,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 157,
        "fullcodeline": "idx = tvb_get_guintvar (tvb, off+1, &len);"
    },
    {
        "line": 158,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1 + len + idx,"
    },
    {
        "line": 163,
        "fullcodeline": "off += 1+len+idx;"
    },
    {
        "line": 203,
        "fullcodeline": "tag_new_known = peek & 0x3F;"
    },
    {
        "line": 204,
        "fullcodeline": "tag_new_buf=wmem_strdup_printf(wmem_packet_scope(), \"Tag_0x%02X\","
    },
    {
        "line": 206,
        "fullcodeline": "tag_new_literal = tag_new_buf;"
    },
    {
        "line": 305,
        "fullcodeline": "DebugLog((\"<Tag/> in Tag - No recursion! (off = %u)\\n\", off));"
    },
    {
        "line": 306,
        "fullcodeline": "(*level)++;"
    },
    {
        "line": 382,
        "fullcodeline": "(*level)--;"
    },
    {
        "line": 48,
        "fullcodeline": "Indent (*level),"
    },
    {
        "line": 51,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 62,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 162,
        "fullcodeline": "*level, *codepage_stag, Indent (*level), idx);"
    },
    {
        "line": 165,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 171,
        "fullcodeline": "off = tvb_len;"
    },
    {
        "line": 172,
        "fullcodeline": "DebugLog((\"STAG: level = %u, Return: len = %u\\n\","
    },
    {
        "line": 218,
        "fullcodeline": "DebugLog((\"STAG: Tag in Tag - RECURSE! (off = %u)\\n\", off));"
    },
    {
        "line": 221,
        "fullcodeline": "(*level)++;"
    },
    {
        "line": 222,
        "fullcodeline": "len = parse_wbxml_tag (tree, tvb, off, str_tbl, level,"
    },
    {
        "line": 224,
        "fullcodeline": "off += len;"
    },
    {
        "line": 307,
        "fullcodeline": "if (peek & 0x80) { /* No Content, Attribute list present */"
    },
    {
        "line": 55,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 56,
        "fullcodeline": "tag_save_literal ? tag_save_literal : \"\");"
    },
    {
        "line": 174,
        "fullcodeline": "return (off - offset);"
    },
    {
        "line": 300,
        "fullcodeline": "parsing_tag_content = TRUE;"
    },
    {
        "line": 301,
        "fullcodeline": "DebugLog((\"Tag in Tag - No recursion this time! \""
    },
    {
        "line": 108,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 227,
        "fullcodeline": "if ((peek & 0x3F) == 4) { /* Literal tag */"
    },
    {
        "line": 238,
        "fullcodeline": "if (peek & 0x80) { /* Content and Attribute list present */"
    },
    {
        "line": 173,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 228,
        "fullcodeline": "tag_save_literal = tag_new_literal;"
    },
    {
        "line": 229,
        "fullcodeline": "tag_save_known = 0;"
    },
    {
        "line": 257,
        "fullcodeline": "len = parse_wbxml_attribute_list (tree, tvb,"
    },
    {
        "line": 260,
        "fullcodeline": "off += len;"
    },
    {
        "line": 270,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 309,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 316,
        "fullcodeline": "off++;"
    },
    {
        "line": 317,
        "fullcodeline": "len = parse_wbxml_attribute_list (tree, tvb,"
    },
    {
        "line": 320,
        "fullcodeline": "off += len;"
    },
    {
        "line": 330,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 231,
        "fullcodeline": "tag_save_known = tag_new_known;"
    },
    {
        "line": 232,
        "fullcodeline": "tag_save_buf=wmem_strdup_printf(wmem_packet_scope(), \"Tag_0x%02X\","
    },
    {
        "line": 234,
        "fullcodeline": "tag_save_literal = tag_save_buf;"
    },
    {
        "line": 261,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 274,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 314,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 321,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 334,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 336,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 342,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 343,
        "fullcodeline": "len = parse_wbxml_attribute_list (tree, tvb,"
    },
    {
        "line": 346,
        "fullcodeline": "off += len;"
    },
    {
        "line": 356,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off-1, 1,"
    },
    {
        "line": 364,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 371,
        "fullcodeline": "off++;"
    },
    {
        "line": 240,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 247,
        "fullcodeline": "off++;"
    },
    {
        "line": 262,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: \""
    },
    {
        "line": 268,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 322,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: \""
    },
    {
        "line": 328,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 340,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 347,
        "fullcodeline": "if (off >= tvb_len) {"
    },
    {
        "line": 360,
        "fullcodeline": "*level, *codepage_stag, Indent (*level));"
    },
    {
        "line": 369,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 373,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 379,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 245,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 249,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 255,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 277,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 284,
        "fullcodeline": "off++;"
    },
    {
        "line": 348,
        "fullcodeline": "DebugLog((\"STAG: level = %u, ThrowException: \""
    },
    {
        "line": 354,
        "fullcodeline": "THROW(ReportedBoundsError);"
    },
    {
        "line": 377,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 253,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 282,
        "fullcodeline": "Indent (*level), tag_new_literal);"
    },
    {
        "line": 286,
        "fullcodeline": "proto_tree_add_text (tree, tvb, off, 1,"
    },
    {
        "line": 292,
        "fullcodeline": "off += 1 + tag_len;"
    },
    {
        "line": 264,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 290,
        "fullcodeline": "*level, *codepage_stag, Indent (*level),"
    },
    {
        "line": 324,
        "fullcodeline": "*level, off - offset));"
    },
    {
        "line": 350,
        "fullcodeline": "*level, off - offset));"
    }
]