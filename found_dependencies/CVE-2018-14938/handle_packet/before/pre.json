[
    {
        "line": 20,
        "fullcodeline": "packetsProcessed++;"
    },
    {
        "line": 23,
        "fullcodeline": "WifiPacket pkt(cbs,header_type,header,packet);"
    },
    {
        "line": 26,
        "fullcodeline": "cbs->PacketBegin(pkt, packet, header->caplen, header->len);"
    },
    {
        "line": 49,
        "fullcodeline": "cbs->PacketEnd(pkt);"
    },
    {
        "line": 5,
        "fullcodeline": "if (startTime == TIME_NONE) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (header->ts.tv_sec > lastPrintTime.tv_sec + Wifipcap::PRINT_TIME_INTERVAL) {"
    },
    {
        "line": 6,
        "fullcodeline": "startTime = header->ts;"
    },
    {
        "line": 7,
        "fullcodeline": "lastPrintTime = header->ts;"
    },
    {
        "line": 18,
        "fullcodeline": "lastPrintTime = header->ts;"
    },
    {
        "line": 30,
        "fullcodeline": "pkt.handle_prism(packet,header->caplen);"
    },
    {
        "line": 33,
        "fullcodeline": "pkt.handle_radiotap(packet,header->caplen);"
    },
    {
        "line": 36,
        "fullcodeline": "pkt.handle_80211(packet,header->caplen);"
    },
    {
        "line": 39,
        "fullcodeline": "pkt.handle_ether(packet,header->caplen);"
    },
    {
        "line": 12,
        "fullcodeline": "int hours = (header->ts.tv_sec - startTime.tv_sec)/3600;"
    },
    {
        "line": 13,
        "fullcodeline": "int days  = hours/24;"
    },
    {
        "line": 14,
        "fullcodeline": "int left  = hours%24;"
    }
]