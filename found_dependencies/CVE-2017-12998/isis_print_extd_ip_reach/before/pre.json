[
    {
        "line": 4,
        "fullcodeline": "char ident_buffer[20];"
    },
    {
        "line": 5,
        "fullcodeline": "uint8_t prefix[sizeof(struct in6_addr)]; /* shared copy buffer for IPv4 and IPv6 prefixes */"
    },
    {
        "line": 10,
        "fullcodeline": "metric = EXTRACT_32BITS(tptr);"
    },
    {
        "line": 11,
        "fullcodeline": "processed=4;"
    },
    {
        "line": 12,
        "fullcodeline": "tptr+=4;"
    },
    {
        "line": 41,
        "fullcodeline": "byte_length = (bit_length + 7) / 8; /* prefix has variable length encoding */"
    },
    {
        "line": 45,
        "fullcodeline": "memset(prefix, 0, sizeof prefix);   /* clear the copy buffer */"
    },
    {
        "line": 46,
        "fullcodeline": "memcpy(prefix,tptr,byte_length);    /* copy as much as is stored in the TLV */"
    },
    {
        "line": 47,
        "fullcodeline": "tptr+=byte_length;"
    },
    {
        "line": 48,
        "fullcodeline": "processed+=byte_length;"
    },
    {
        "line": 8,
        "fullcodeline": "if (!ND_TTEST2(*tptr, 4))"
    },
    {
        "line": 14,
        "fullcodeline": "if (afi == AF_INET) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (afi == AF_INET)"
    },
    {
        "line": 61,
        "fullcodeline": "ND_PRINT((ndo, \", Distribution: %s, Metric: %u\","
    },
    {
        "line": 65,
        "fullcodeline": "if (afi == AF_INET && ISIS_MASK_TLV_EXTD_IP_SUBTLV(status_byte))"
    },
    {
        "line": 17,
        "fullcodeline": "status_byte=*(tptr++);"
    },
    {
        "line": 18,
        "fullcodeline": "bit_length = status_byte&0x3f;"
    },
    {
        "line": 25,
        "fullcodeline": "processed++;"
    },
    {
        "line": 43,
        "fullcodeline": "if (!ND_TTEST2(*tptr, byte_length))"
    },
    {
        "line": 72,
        "fullcodeline": "if ((afi == AF_INET  && ISIS_MASK_TLV_EXTD_IP_SUBTLV(status_byte))"
    },
    {
        "line": 73,
        "fullcodeline": "|| (afi == AF_INET6 && ISIS_MASK_TLV_EXTD_IP6_SUBTLV(status_byte))"
    },
    {
        "line": 81,
        "fullcodeline": "sublen=*(tptr++);"
    },
    {
        "line": 82,
        "fullcodeline": "processed+=sublen+1;"
    },
    {
        "line": 19,
        "fullcodeline": "if (bit_length > 32) {"
    },
    {
        "line": 51,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv4 prefix: %15s/%u\","
    },
    {
        "line": 66,
        "fullcodeline": "ND_PRINT((ndo, \", sub-TLVs present\"));"
    },
    {
        "line": 83,
        "fullcodeline": "ND_PRINT((ndo, \" (%u)\", sublen));   /* print out subTLV length */"
    },
    {
        "line": 85,
        "fullcodeline": "while (sublen>0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (!ND_TTEST2(*tptr, 1)) /* fetch status byte */"
    },
    {
        "line": 26,
        "fullcodeline": "} else if (afi == AF_INET6) {"
    },
    {
        "line": 55,
        "fullcodeline": "else if (afi == AF_INET6)"
    },
    {
        "line": 62,
        "fullcodeline": "ISIS_MASK_TLV_EXTD_IP_UPDOWN(status_byte) ? \"down\" : \"up\","
    },
    {
        "line": 67,
        "fullcodeline": "else if (afi == AF_INET6)"
    },
    {
        "line": 79,
        "fullcodeline": "if (!ND_TTEST2(*tptr, 1))"
    },
    {
        "line": 88,
        "fullcodeline": "subtlvtype=*(tptr++);"
    },
    {
        "line": 89,
        "fullcodeline": "subtlvlen=*(tptr++);"
    },
    {
        "line": 91,
        "fullcodeline": "snprintf(ident_buffer, sizeof(ident_buffer), \"%s  \",ident);"
    },
    {
        "line": 94,
        "fullcodeline": "tptr+=subtlvlen;"
    },
    {
        "line": 95,
        "fullcodeline": "sublen-=(subtlvlen+2);"
    },
    {
        "line": 20,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv4 prefix: bad bit length %u\","
    },
    {
        "line": 29,
        "fullcodeline": "status_byte=*(tptr++);"
    },
    {
        "line": 30,
        "fullcodeline": "bit_length=*(tptr++);"
    },
    {
        "line": 37,
        "fullcodeline": "processed+=2;"
    },
    {
        "line": 53,
        "fullcodeline": "ipaddr_string(ndo, prefix),"
    },
    {
        "line": 31,
        "fullcodeline": "if (bit_length > 128) {"
    },
    {
        "line": 56,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv6 prefix: %s/%u\","
    },
    {
        "line": 68,
        "fullcodeline": "ND_PRINT((ndo, \", %s%s\","
    },
    {
        "line": 86,
        "fullcodeline": "if (!ND_TTEST2(*tptr,2))"
    },
    {
        "line": 92,
        "fullcodeline": "if (!isis_print_ip_reach_subtlv(ndo, tptr, subtlvtype, subtlvlen, ident_buffer))"
    },
    {
        "line": 27,
        "fullcodeline": "if (!ND_TTEST2(*tptr, 1)) /* fetch status & prefix_len byte */"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv6 prefix: bad bit length %u\","
    },
    {
        "line": 58,
        "fullcodeline": "ip6addr_string(ndo, prefix),"
    },
    {
        "line": 69,
        "fullcodeline": "ISIS_MASK_TLV_EXTD_IP6_IE(status_byte) ? \"External\" : \"Internal\","
    },
    {
        "line": 70,
        "fullcodeline": "ISIS_MASK_TLV_EXTD_IP6_SUBTLV(status_byte) ? \", sub-TLVs present\" : \"\"));"
    }
]