[
    {
        "line": 4,
        "fullcodeline": "struct sockaddr_in6 *usin = (struct sockaddr_in6 *) uaddr;"
    },
    {
        "line": 5,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 6,
        "fullcodeline": "struct inet_connection_sock *icsk = inet_csk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "struct ipv6_pinfo *np = inet6_sk(sk);"
    },
    {
        "line": 8,
        "fullcodeline": "struct tcp_sock *tp = tcp_sk(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "struct in6_addr *saddr = NULL, *final_p, final;"
    },
    {
        "line": 22,
        "fullcodeline": "memset(&fl6, 0, sizeof(fl6));"
    },
    {
        "line": 43,
        "fullcodeline": "addr_type = ipv6_addr_type(&usin->sin6_addr);"
    },
    {
        "line": 73,
        "fullcodeline": "sk->sk_v6_daddr = usin->sin6_addr;"
    },
    {
        "line": 118,
        "fullcodeline": "fl6.flowi6_proto = IPPROTO_TCP;"
    },
    {
        "line": 119,
        "fullcodeline": "fl6.daddr = sk->sk_v6_daddr;"
    },
    {
        "line": 120,
        "fullcodeline": "fl6.saddr = saddr ? *saddr : np->saddr;"
    },
    {
        "line": 121,
        "fullcodeline": "fl6.flowi6_oif = sk->sk_bound_dev_if;"
    },
    {
        "line": 122,
        "fullcodeline": "fl6.flowi6_mark = sk->sk_mark;"
    },
    {
        "line": 123,
        "fullcodeline": "fl6.fl6_dport = usin->sin6_port;"
    },
    {
        "line": 124,
        "fullcodeline": "fl6.fl6_sport = inet->inet_sport;"
    },
    {
        "line": 126,
        "fullcodeline": "opt = rcu_dereference_protected(np->opt, sock_owned_by_user(sk));"
    },
    {
        "line": 127,
        "fullcodeline": "final_p = fl6_update_dst(&fl6, opt, &final);"
    },
    {
        "line": 129,
        "fullcodeline": "security_sk_classify_flow(sk, flowi6_to_flowi(&fl6));"
    },
    {
        "line": 131,
        "fullcodeline": "dst = ip6_dst_lookup_flow(sk, &fl6, final_p);"
    },
    {
        "line": 144,
        "fullcodeline": "inet->inet_rcv_saddr = LOOPBACK4_IPV6;"
    },
    {
        "line": 146,
        "fullcodeline": "sk->sk_gso_type = SKB_GSO_TCPV6;"
    },
    {
        "line": 147,
        "fullcodeline": "__ip6_dst_store(sk, dst, NULL, NULL);"
    },
    {
        "line": 161,
        "fullcodeline": "inet->inet_dport = usin->sin6_port;"
    },
    {
        "line": 163,
        "fullcodeline": "tcp_set_state(sk, TCP_SYN_SENT);"
    },
    {
        "line": 164,
        "fullcodeline": "err = inet6_hash_connect(&tcp_death_row, sk);"
    },
    {
        "line": 168,
        "fullcodeline": "sk_set_txhash(sk);"
    },
    {
        "line": 176,
        "fullcodeline": "err = tcp_connect(sk);"
    },
    {
        "line": 183,
        "fullcodeline": "tcp_set_state(sk, TCP_CLOSE);"
    },
    {
        "line": 16,
        "fullcodeline": "if (addr_len < SIN6_LEN_RFC2133)"
    },
    {
        "line": 19,
        "fullcodeline": "if (usin->sin6_family != AF_INET6)"
    },
    {
        "line": 40,
        "fullcodeline": "if (ipv6_addr_any(&usin->sin6_addr))"
    },
    {
        "line": 45,
        "fullcodeline": "if (addr_type & IPV6_ADDR_MULTICAST)"
    },
    {
        "line": 48,
        "fullcodeline": "if (addr_type&IPV6_ADDR_LINKLOCAL) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (tp->rx_opt.ts_recent_stamp &&"
    },
    {
        "line": 80,
        "fullcodeline": "if (addr_type == IPV6_ADDR_MAPPED) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (IS_ERR(dst)) {"
    },
    {
        "line": 159,
        "fullcodeline": "tp->rx_opt.mss_clamp = IPV6_MIN_MTU - sizeof(struct tcphdr) - sizeof(struct ipv6hdr);"
    },
    {
        "line": 25,
        "fullcodeline": "fl6.flowlabel = usin->sin6_flowinfo&IPV6_FLOWINFO_MASK;"
    },
    {
        "line": 26,
        "fullcodeline": "IP6_ECN_flow_init(fl6.flowlabel);"
    },
    {
        "line": 67,
        "fullcodeline": "!ipv6_addr_equal(&sk->sk_v6_daddr, &usin->sin6_addr)) {"
    },
    {
        "line": 69,
        "fullcodeline": "tp->rx_opt.ts_recent_stamp = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "tp->write_seq = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "u32 exthdrlen = icsk->icsk_ext_hdr_len;"
    },
    {
        "line": 84,
        "fullcodeline": "SOCK_DEBUG(sk, \"connect: ipv4 mapped\\n\");"
    },
    {
        "line": 89,
        "fullcodeline": "sin.sin_family = AF_INET;"
    },
    {
        "line": 90,
        "fullcodeline": "sin.sin_port = usin->sin6_port;"
    },
    {
        "line": 94,
        "fullcodeline": "sk->sk_backlog_rcv = tcp_v4_do_rcv;"
    },
    {
        "line": 99,
        "fullcodeline": "err = tcp_v4_connect(sk, (struct sockaddr *)&sin, sizeof(sin));"
    },
    {
        "line": 115,
        "fullcodeline": "if (!ipv6_addr_any(&sk->sk_v6_rcv_saddr))"
    },
    {
        "line": 133,
        "fullcodeline": "err = PTR_ERR(dst);"
    },
    {
        "line": 139,
        "fullcodeline": "sk->sk_v6_rcv_saddr = *saddr;"
    },
    {
        "line": 149,
        "fullcodeline": "if (tcp_death_row.sysctl_tw_recycle &&"
    },
    {
        "line": 151,
        "fullcodeline": "ipv6_addr_equal(&fl6.daddr, &sk->sk_v6_daddr))"
    },
    {
        "line": 152,
        "fullcodeline": "tcp_fetch_timewait_stamp(sk, dst);"
    },
    {
        "line": 170,
        "fullcodeline": "if (!tp->write_seq && likely(!tp->repair))"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "return -EAFNOSUPPORT;"
    },
    {
        "line": 27,
        "fullcodeline": "if (fl6.flowlabel&IPV6_FLOWLABEL_MASK) {"
    },
    {
        "line": 46,
        "fullcodeline": "return -ENETUNREACH;"
    },
    {
        "line": 49,
        "fullcodeline": "if (addr_len >= sizeof(struct sockaddr_in6) &&"
    },
    {
        "line": 62,
        "fullcodeline": "if (!sk->sk_bound_dev_if)"
    },
    {
        "line": 86,
        "fullcodeline": "if (__ipv6_only_sock(sk))"
    },
    {
        "line": 150,
        "fullcodeline": "!tp->rx_opt.ts_recent_stamp &&"
    },
    {
        "line": 171,
        "fullcodeline": "tp->write_seq = secure_tcpv6_sequence_number(np->saddr.s6_addr32,"
    },
    {
        "line": 29,
        "fullcodeline": "flowlabel = fl6_sock_lookup(sk, fl6.flowlabel);"
    },
    {
        "line": 58,
        "fullcodeline": "sk->sk_bound_dev_if = usin->sin6_scope_id;"
    },
    {
        "line": 104,
        "fullcodeline": "sk->sk_backlog_rcv = tcp_v6_do_rcv;"
    },
    {
        "line": 30,
        "fullcodeline": "if (!flowlabel)"
    },
    {
        "line": 63,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 87,
        "fullcodeline": "return -ENETUNREACH;"
    },
    {
        "line": 55,
        "fullcodeline": "sk->sk_bound_dev_if != usin->sin6_scope_id)"
    },
    {
        "line": 31,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 56,
        "fullcodeline": "return -EINVAL;"
    }
]