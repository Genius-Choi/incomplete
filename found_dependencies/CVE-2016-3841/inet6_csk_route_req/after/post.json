[
    {
        "line": 6,
        "fullcodeline": "struct inet_request_sock *ireq = inet_rsk(req);"
    },
    {
        "line": 7,
        "fullcodeline": "const struct ipv6_pinfo *np = inet6_sk(sk);"
    },
    {
        "line": 11,
        "fullcodeline": "memset(fl6, 0, sizeof(*fl6));"
    },
    {
        "line": 12,
        "fullcodeline": "fl6->flowi6_proto = proto;"
    },
    {
        "line": 13,
        "fullcodeline": "fl6->daddr = ireq->ir_v6_rmt_addr;"
    },
    {
        "line": 14,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 15,
        "fullcodeline": "final_p = fl6_update_dst(fl6, rcu_dereference(np->opt), &final);"
    },
    {
        "line": 16,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 17,
        "fullcodeline": "fl6->saddr = ireq->ir_v6_loc_addr;"
    },
    {
        "line": 18,
        "fullcodeline": "fl6->flowi6_oif = ireq->ir_iif;"
    },
    {
        "line": 19,
        "fullcodeline": "fl6->flowi6_mark = ireq->ir_mark;"
    },
    {
        "line": 20,
        "fullcodeline": "fl6->fl6_dport = ireq->ir_rmt_port;"
    },
    {
        "line": 21,
        "fullcodeline": "fl6->fl6_sport = htons(ireq->ir_num);"
    },
    {
        "line": 22,
        "fullcodeline": "security_req_classify_flow(req, flowi6_to_flowi(fl6));"
    },
    {
        "line": 24,
        "fullcodeline": "dst = ip6_dst_lookup_flow(sk, fl6, final_p);"
    },
    {
        "line": 25,
        "fullcodeline": "if (IS_ERR(dst))"
    }
]