[
    {
        "line": 6,
        "fullcodeline": "bool use_dma_api = !virtio_has_dma_quirk(vgdev->vdev);"
    },
    {
        "line": 7,
        "fullcodeline": "struct virtio_gpu_object_shmem *shmem = to_virtio_gpu_shmem(bo);"
    },
    {
        "line": 11,
        "fullcodeline": "ret = drm_gem_shmem_pin(&bo->base);"
    },
    {
        "line": 21,
        "fullcodeline": "shmem->pages = drm_gem_shmem_get_sg_table(&bo->base);"
    },
    {
        "line": 37,
        "fullcodeline": "*ents = kvmalloc_array(*nents,"
    },
    {
        "line": 12,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 22,
        "fullcodeline": "if (IS_ERR(shmem->pages)) {"
    },
    {
        "line": 28,
        "fullcodeline": "ret = dma_map_sgtable(vgdev->vdev->dev.parent,"
    },
    {
        "line": 32,
        "fullcodeline": "*nents = shmem->mapped = shmem->pages->nents;"
    },
    {
        "line": 38,
        "fullcodeline": "sizeof(struct virtio_gpu_mem_entry),"
    },
    {
        "line": 46,
        "fullcodeline": "for_each_sgtable_dma_sg(shmem->pages, sg, si) {"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "return PTR_ERR(shmem->pages);"
    },
    {
        "line": 34,
        "fullcodeline": "*nents = shmem->pages->orig_nents;"
    },
    {
        "line": 42,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 52,
        "fullcodeline": "for_each_sgtable_sg(shmem->pages, sg, si) {"
    },
    {
        "line": 47,
        "fullcodeline": "(*ents)[si].addr = cpu_to_le64(sg_dma_address(sg));"
    },
    {
        "line": 48,
        "fullcodeline": "(*ents)[si].length = cpu_to_le32(sg_dma_len(sg));"
    },
    {
        "line": 53,
        "fullcodeline": "(*ents)[si].addr = cpu_to_le64(sg_phys(sg));"
    },
    {
        "line": 54,
        "fullcodeline": "(*ents)[si].length = cpu_to_le32(sg->length);"
    }
]