[
    {
        "line": 11,
        "fullcodeline": "parsed_url = parse_url(url)"
    },
    {
        "line": 16,
        "fullcodeline": "domain = parsed_url.host"
    },
    {
        "line": 28,
        "fullcodeline": "local_subnets = ["
    },
    {
        "line": 13,
        "fullcodeline": "if parsed_url.scheme not in ('http', 'https'):"
    },
    {
        "line": 23,
        "fullcodeline": "if not block_local_urls:"
    },
    {
        "line": 26,
        "fullcodeline": "if ip == '0.0.0.0':  # nosec"
    },
    {
        "line": 34,
        "fullcodeline": "for subnet in local_subnets:"
    },
    {
        "line": 14,
        "fullcodeline": "raise InvalidUploadUrlError"
    },
    {
        "line": 18,
        "fullcodeline": "ip = socket.gethostbyname(domain)"
    },
    {
        "line": 27,
        "fullcodeline": "raise InvalidUploadUrlError"
    },
    {
        "line": 20,
        "fullcodeline": "from core.utils.exceptions import LabelStudioAPIException"
    },
    {
        "line": 21,
        "fullcodeline": "raise LabelStudioAPIException(f\"Can't resolve hostname {domain}\")"
    },
    {
        "line": 35,
        "fullcodeline": "if ipaddress.ip_address(ip) in ipaddress.ip_network(subnet):"
    }
]