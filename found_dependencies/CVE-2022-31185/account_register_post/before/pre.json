[
    {
        "line": 20,
        "fullcodeline": "context = await make_variable_context(request, \"Register\")"
    },
    {
        "line": 21,
        "fullcodeline": "args = dict(await request.form())"
    },
    {
        "line": 23,
        "fullcodeline": "context = make_account_form_context(context, request, None, args)"
    },
    {
        "line": 41,
        "fullcodeline": "resetkey = generate_resetkey()"
    },
    {
        "line": 44,
        "fullcodeline": "atype = db.query("
    },
    {
        "line": 87,
        "fullcodeline": "context[\"complete\"] = True"
    },
    {
        "line": 88,
        "fullcodeline": "context[\"user\"] = user"
    },
    {
        "line": 24,
        "fullcodeline": "ok, errors = process_account_form(request, request.user, args)"
    },
    {
        "line": 25,
        "fullcodeline": "if not ok:"
    },
    {
        "line": 49,
        "fullcodeline": "with db.begin():"
    },
    {
        "line": 85,
        "fullcodeline": "WelcomeNotification(user.ID).send()"
    },
    {
        "line": 89,
        "fullcodeline": "return render_template(request, \"register.html\", context)"
    },
    {
        "line": 28,
        "fullcodeline": "context[\"errors\"] = errors"
    },
    {
        "line": 34,
        "fullcodeline": "context[\"errors\"] = [\"The CAPTCHA is missing.\"]"
    },
    {
        "line": 73,
        "fullcodeline": "pubkey = PK.strip().rstrip()"
    },
    {
        "line": 74,
        "fullcodeline": "parts = pubkey.split(\" \")"
    },
    {
        "line": 78,
        "fullcodeline": "fingerprint = get_fingerprint(pubkey)"
    },
    {
        "line": 29,
        "fullcodeline": "return render_template("
    },
    {
        "line": 35,
        "fullcodeline": "return render_template("
    },
    {
        "line": 50,
        "fullcodeline": "user = db.create("
    },
    {
        "line": 79,
        "fullcodeline": "with db.begin():"
    },
    {
        "line": 45,
        "fullcodeline": "models.AccountType, models.AccountType.AccountType == \"User\""
    },
    {
        "line": 75,
        "fullcodeline": "if len(parts) == 3:"
    },
    {
        "line": 77,
        "fullcodeline": "pubkey = parts[0] + \" \" + parts[1]"
    },
    {
        "line": 80,
        "fullcodeline": "user.ssh_pub_key = models.SSHPubKey("
    }
]