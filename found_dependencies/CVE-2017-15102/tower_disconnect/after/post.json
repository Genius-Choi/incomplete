[
    {
        "line": 6,
        "fullcodeline": "dev = usb_get_intfdata (interface);"
    },
    {
        "line": 7,
        "fullcodeline": "mutex_lock(&open_disc_mutex);"
    },
    {
        "line": 8,
        "fullcodeline": "usb_set_intfdata (interface, NULL);"
    },
    {
        "line": 10,
        "fullcodeline": "minor = dev->minor;"
    },
    {
        "line": 13,
        "fullcodeline": "usb_deregister_dev (interface, &tower_class);"
    },
    {
        "line": 15,
        "fullcodeline": "mutex_lock(&dev->lock);"
    },
    {
        "line": 16,
        "fullcodeline": "mutex_unlock(&open_disc_mutex);"
    },
    {
        "line": 30,
        "fullcodeline": "dev_info(&interface->dev, \"LEGO USB Tower #%d now disconnected\\n\","
    },
    {
        "line": 19,
        "fullcodeline": "if (!dev->open_count) {"
    },
    {
        "line": 31,
        "fullcodeline": "(minor - LEGO_USB_TOWER_MINOR_BASE));"
    },
    {
        "line": 20,
        "fullcodeline": "mutex_unlock(&dev->lock);"
    },
    {
        "line": 21,
        "fullcodeline": "tower_delete (dev);"
    },
    {
        "line": 23,
        "fullcodeline": "dev->udev = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "wake_up_interruptible_all(&dev->read_wait);"
    },
    {
        "line": 26,
        "fullcodeline": "wake_up_interruptible_all(&dev->write_wait);"
    },
    {
        "line": 27,
        "fullcodeline": "mutex_unlock(&dev->lock);"
    }
]