[
    {
        "line": 7,
        "fullcodeline": "list_for_each_entry_safe(chain, nc, &ctx->table->chains, list) {"
    },
    {
        "line": 19,
        "fullcodeline": "list_for_each_entry_safe(set, ns, &ctx->table->sets, list) {"
    },
    {
        "line": 29,
        "fullcodeline": "err = nft_deltable(ctx);"
    },
    {
        "line": 8,
        "fullcodeline": "ctx->chain = chain;"
    },
    {
        "line": 10,
        "fullcodeline": "err = nft_delrule_by_chain(ctx);"
    },
    {
        "line": 14,
        "fullcodeline": "err = nft_delchain(ctx);"
    },
    {
        "line": 24,
        "fullcodeline": "err = nft_delset(ctx, set);"
    },
    {
        "line": 11,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 20,
        "fullcodeline": "if (set->flags & NFT_SET_ANONYMOUS &&"
    },
    {
        "line": 25,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "!list_empty(&set->bindings))"
    }
]