[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sockaddr_pppox *sp = (struct sockaddr_pppox *) uservaddr;"
    },
    {
        "line": 6,
        "fullcodeline": "struct pppox_sock *po = pppox_sk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "struct pptp_opt *opt = &po->proto.pptp;"
    },
    {
        "line": 10,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 36,
        "fullcodeline": "po->chan.private = sk;"
    },
    {
        "line": 37,
        "fullcodeline": "po->chan.ops = &pptp_chan_ops;"
    },
    {
        "line": 39,
        "fullcodeline": "rt = ip_route_output_ports(sock_net(sk), &fl4, sk,"
    },
    {
        "line": 48,
        "fullcodeline": "sk_setup_caps(sk, &rt->dst);"
    },
    {
        "line": 50,
        "fullcodeline": "po->chan.mtu = dst_mtu(&rt->dst);"
    },
    {
        "line": 54,
        "fullcodeline": "po->chan.mtu -= PPTP_HEADER_OVERHEAD;"
    },
    {
        "line": 56,
        "fullcodeline": "po->chan.hdrlen = 2 + sizeof(struct pptp_gre_header);"
    },
    {
        "line": 57,
        "fullcodeline": "error = ppp_register_channel(&po->chan);"
    },
    {
        "line": 64,
        "fullcodeline": "sk->sk_state = PPPOX_CONNECTED;"
    },
    {
        "line": 12,
        "fullcodeline": "if (sp->sa_protocol != PX_PROTO_PPTP)"
    },
    {
        "line": 15,
        "fullcodeline": "if (lookup_chan_dst(sp->sa_addr.pptp.call_id, sp->sa_addr.pptp.sin_addr.s_addr))"
    },
    {
        "line": 20,
        "fullcodeline": "if (sk->sk_state & PPPOX_CONNECTED) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (sk->sk_state & PPPOX_DEAD) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (IS_ERR(rt)) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (!po->chan.mtu)"
    },
    {
        "line": 21,
        "fullcodeline": "error = -EBUSY;"
    },
    {
        "line": 27,
        "fullcodeline": "error = -EALREADY;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!opt->src_addr.sin_addr.s_addr || !sp->sa_addr.pptp.sin_addr.s_addr) {"
    },
    {
        "line": 32,
        "fullcodeline": "error = -EINVAL;"
    },
    {
        "line": 43,
        "fullcodeline": "IPPROTO_GRE, RT_CONN_FLAGS(sk), 0);"
    },
    {
        "line": 45,
        "fullcodeline": "error = -EHOSTUNREACH;"
    },
    {
        "line": 52,
        "fullcodeline": "po->chan.mtu = PPP_MRU;"
    },
    {
        "line": 59,
        "fullcodeline": "pr_err(\"PPTP: failed to register PPP channel (%d)\\n\", error);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 16,
        "fullcodeline": "return -EALREADY;"
    }
]