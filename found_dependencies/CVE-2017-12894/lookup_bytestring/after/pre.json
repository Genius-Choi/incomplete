[
    {
        "line": 18,
        "fullcodeline": "tp = &bytestringtable[(i ^ j) & (HASHNAMESIZE-1)];"
    },
    {
        "line": 29,
        "fullcodeline": "tp->bs_addr0 = i;"
    },
    {
        "line": 30,
        "fullcodeline": "tp->bs_addr1 = j;"
    },
    {
        "line": 31,
        "fullcodeline": "tp->bs_addr2 = k;"
    },
    {
        "line": 33,
        "fullcodeline": "tp->bs_bytes = (u_char *) calloc(1, nlen + 1);"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(tp->bs_bytes, bs, nlen);"
    },
    {
        "line": 38,
        "fullcodeline": "tp->bs_nbytes = nlen;"
    },
    {
        "line": 39,
        "fullcodeline": "tp->bs_nxt = (struct bsnamemem *)calloc(1, sizeof(*tp));"
    },
    {
        "line": 7,
        "fullcodeline": "if (nlen >= 6) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (tp->bs_bytes == NULL)"
    },
    {
        "line": 40,
        "fullcodeline": "if (tp->bs_nxt == NULL)"
    },
    {
        "line": 8,
        "fullcodeline": "k = (bs[0] << 8) | bs[1];"
    },
    {
        "line": 9,
        "fullcodeline": "j = (bs[2] << 8) | bs[3];"
    },
    {
        "line": 10,
        "fullcodeline": "i = (bs[4] << 8) | bs[5];"
    },
    {
        "line": 20,
        "fullcodeline": "if (nlen == tp->bs_nbytes &&"
    },
    {
        "line": 35,
        "fullcodeline": "(*ndo->ndo_error)(ndo, \"lookup_bytestring: calloc\");"
    },
    {
        "line": 24,
        "fullcodeline": "memcmp((const char *)bs, (const char *)(tp->bs_bytes), nlen) == 0)"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (nlen >= 4) {"
    },
    {
        "line": 23,
        "fullcodeline": "tp->bs_addr2 == k &&"
    },
    {
        "line": 27,
        "fullcodeline": "tp = tp->bs_nxt;"
    },
    {
        "line": 12,
        "fullcodeline": "k = (bs[0] << 8) | bs[1];"
    },
    {
        "line": 13,
        "fullcodeline": "j = (bs[2] << 8) | bs[3];"
    },
    {
        "line": 14,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "tp->bs_addr1 == j &&"
    },
    {
        "line": 16,
        "fullcodeline": "i = j = k = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "tp->bs_addr0 == i &&"
    }
]