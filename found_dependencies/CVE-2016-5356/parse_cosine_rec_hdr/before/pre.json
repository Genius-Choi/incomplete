[
    {
        "line": 4,
        "fullcodeline": "union wtap_pseudo_header *pseudo_header = &phdr->pseudo_header;"
    },
    {
        "line": 9,
        "fullcodeline": "char\tif_name[COSINE_MAX_IF_NAME_LEN] = \"\", direction[6] = \"\";"
    },
    {
        "line": 43,
        "fullcodeline": "phdr->rec_type = REC_TYPE_PACKET;"
    },
    {
        "line": 45,
        "fullcodeline": "tm.tm_year = yy - 1900;"
    },
    {
        "line": 46,
        "fullcodeline": "tm.tm_mon = mm - 1;"
    },
    {
        "line": 47,
        "fullcodeline": "tm.tm_mday = dd;"
    },
    {
        "line": 48,
        "fullcodeline": "tm.tm_hour = hr;"
    },
    {
        "line": 49,
        "fullcodeline": "tm.tm_min = min;"
    },
    {
        "line": 50,
        "fullcodeline": "tm.tm_sec = sec;"
    },
    {
        "line": 51,
        "fullcodeline": "tm.tm_isdst = -1;"
    },
    {
        "line": 12,
        "fullcodeline": "if (sscanf(line, \"%4d-%2d-%2d,%2d:%2d:%2d.%9d:\","
    },
    {
        "line": 44,
        "fullcodeline": "phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;"
    },
    {
        "line": 52,
        "fullcodeline": "phdr->ts.secs = mktime(&tm);"
    },
    {
        "line": 53,
        "fullcodeline": "phdr->ts.nsecs = csec * 10000000;"
    },
    {
        "line": 15,
        "fullcodeline": "num_items_scanned = sscanf(line,"
    },
    {
        "line": 58,
        "fullcodeline": "if (strncmp(if_name, \"TEST:\", 5) == 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_TEST;"
    },
    {
        "line": 77,
        "fullcodeline": "if (strncmp(direction, \"l2-tx\", 5) == 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "pseudo_header->cosine.direction = COSINE_DIR_TX;"
    },
    {
        "line": 22,
        "fullcodeline": "if (num_items_scanned != 17) {"
    },
    {
        "line": 29,
        "fullcodeline": "num_items_scanned = sscanf(line,"
    },
    {
        "line": 40,
        "fullcodeline": "yy = mm = dd = hr = min = sec = csec = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 24,
        "fullcodeline": "*err_info = g_strdup(\"cosine: purported control blade line doesn't have code values\");"
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    },
    {
        "line": 60,
        "fullcodeline": "} else if (strncmp(if_name, \"PPoATM:\", 7) == 0) {"
    },
    {
        "line": 61,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPoATM;"
    },
    {
        "line": 79,
        "fullcodeline": "} else if (strncmp(direction, \"l2-rx\", 5) == 0) {"
    },
    {
        "line": 80,
        "fullcodeline": "pseudo_header->cosine.direction = COSINE_DIR_RX;"
    },
    {
        "line": 37,
        "fullcodeline": "*err_info = g_strdup(\"cosine: header line is neither control blade nor PE output\");"
    },
    {
        "line": 38,
        "fullcodeline": "return -1;"
    },
    {
        "line": 62,
        "fullcodeline": "} else if (strncmp(if_name, \"PPoFR:\", 6) == 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPoFR;"
    },
    {
        "line": 64,
        "fullcodeline": "} else if (strncmp(if_name, \"ATM:\", 4) == 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_ATM;"
    },
    {
        "line": 66,
        "fullcodeline": "} else if (strncmp(if_name, \"FR:\", 3) == 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_FR;"
    },
    {
        "line": 68,
        "fullcodeline": "} else if (strncmp(if_name, \"HDLC:\", 5) == 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_HDLC;"
    },
    {
        "line": 70,
        "fullcodeline": "} else if (strncmp(if_name, \"PPP:\", 4) == 0) {"
    },
    {
        "line": 71,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPP;"
    },
    {
        "line": 72,
        "fullcodeline": "} else if (strncmp(if_name, \"ETH:\", 4) == 0) {"
    },
    {
        "line": 73,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_ETH;"
    },
    {
        "line": 75,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_UNKNOWN;"
    }
]