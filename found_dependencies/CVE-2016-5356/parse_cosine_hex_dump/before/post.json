[
    {
        "line": 5,
        "fullcodeline": "gchar\tline[COSINE_LINE_LENGTH];"
    },
    {
        "line": 6,
        "fullcodeline": "int\ti, hex_lines, n, caplen = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "ws_buffer_assure_space(buf, COSINE_MAX_PACKET_LEN);"
    },
    {
        "line": 10,
        "fullcodeline": "pd = ws_buffer_start_ptr(buf);"
    },
    {
        "line": 14,
        "fullcodeline": "hex_lines = pkt_len / 16 + ((pkt_len % 16) ? 1 : 0);"
    },
    {
        "line": 34,
        "fullcodeline": "phdr->caplen = caplen;"
    },
    {
        "line": 16,
        "fullcodeline": "for (i = 0; i < hex_lines; i++) {"
    },
    {
        "line": 32,
        "fullcodeline": "caplen += n;"
    },
    {
        "line": 17,
        "fullcodeline": "if (file_gets(line, COSINE_LINE_LENGTH, fh) == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (empty_line(line)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if ((n = parse_single_hex_dump_line(line, pd, i*16)) == -1) {"
    },
    {
        "line": 18,
        "fullcodeline": "*err = file_error(fh, err_info);"
    },
    {
        "line": 28,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 29,
        "fullcodeline": "*err_info = g_strdup(\"cosine: hex dump line doesn't have 16 numbers\");"
    },
    {
        "line": 19,
        "fullcodeline": "if (*err == 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "*err = WTAP_ERR_SHORT_READ;"
    }
]