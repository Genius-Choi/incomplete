[
    {
        "line": 4,
        "fullcodeline": "union wtap_pseudo_header *pseudo_header = &phdr->pseudo_header;"
    },
    {
        "line": 10,
        "fullcodeline": "char\tif_name[COSINE_MAX_IF_NAME_LEN] = \"\", direction[6] = \"\";"
    },
    {
        "line": 13,
        "fullcodeline": "int\ti, hex_lines, n, caplen = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "phdr->rec_type = REC_TYPE_PACKET;"
    },
    {
        "line": 57,
        "fullcodeline": "phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;"
    },
    {
        "line": 58,
        "fullcodeline": "tm.tm_year = yy - 1900;"
    },
    {
        "line": 59,
        "fullcodeline": "tm.tm_mon = mm - 1;"
    },
    {
        "line": 60,
        "fullcodeline": "tm.tm_mday = dd;"
    },
    {
        "line": 61,
        "fullcodeline": "tm.tm_hour = hr;"
    },
    {
        "line": 62,
        "fullcodeline": "tm.tm_min = min;"
    },
    {
        "line": 63,
        "fullcodeline": "tm.tm_sec = sec;"
    },
    {
        "line": 64,
        "fullcodeline": "tm.tm_isdst = -1;"
    },
    {
        "line": 65,
        "fullcodeline": "phdr->ts.secs = mktime(&tm);"
    },
    {
        "line": 66,
        "fullcodeline": "phdr->ts.nsecs = csec * 10000000;"
    },
    {
        "line": 67,
        "fullcodeline": "phdr->len = pkt_len;"
    },
    {
        "line": 95,
        "fullcodeline": "g_strlcpy(pseudo_header->cosine.if_name, if_name,"
    },
    {
        "line": 97,
        "fullcodeline": "pseudo_header->cosine.pro = pro;"
    },
    {
        "line": 98,
        "fullcodeline": "pseudo_header->cosine.off = off;"
    },
    {
        "line": 99,
        "fullcodeline": "pseudo_header->cosine.pri = pri;"
    },
    {
        "line": 100,
        "fullcodeline": "pseudo_header->cosine.rm = rm;"
    },
    {
        "line": 101,
        "fullcodeline": "pseudo_header->cosine.err = error;"
    },
    {
        "line": 104,
        "fullcodeline": "ws_buffer_assure_space(buf, pkt_len);"
    },
    {
        "line": 105,
        "fullcodeline": "pd = ws_buffer_start_ptr(buf);"
    },
    {
        "line": 109,
        "fullcodeline": "hex_lines = pkt_len / 16 + ((pkt_len % 16) ? 1 : 0);"
    },
    {
        "line": 129,
        "fullcodeline": "phdr->caplen = caplen;"
    },
    {
        "line": 15,
        "fullcodeline": "if (sscanf(line, \"%4d-%2d-%2d,%2d:%2d:%2d.%9d:\","
    },
    {
        "line": 45,
        "fullcodeline": "if (pkt_len > WTAP_MAX_PACKET_SIZE) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (strncmp(if_name, \"TEST:\", 5) == 0) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (strncmp(direction, \"l2-tx\", 5) == 0) {"
    },
    {
        "line": 111,
        "fullcodeline": "for (i = 0; i < hex_lines; i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "num_items_scanned = sscanf(line,"
    },
    {
        "line": 50,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 51,
        "fullcodeline": "*err_info = g_strdup_printf(\"cosine: File has %u-byte packet, bigger than maximum of %u\","
    },
    {
        "line": 72,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_TEST;"
    },
    {
        "line": 91,
        "fullcodeline": "pseudo_header->cosine.direction = COSINE_DIR_TX;"
    },
    {
        "line": 127,
        "fullcodeline": "caplen += n;"
    },
    {
        "line": 25,
        "fullcodeline": "if (num_items_scanned != 17) {"
    },
    {
        "line": 32,
        "fullcodeline": "num_items_scanned = sscanf(line,"
    },
    {
        "line": 43,
        "fullcodeline": "yy = mm = dd = hr = min = sec = csec = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "if (file_gets(line, COSINE_LINE_LENGTH, fh) == NULL) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (empty_line(line)) {"
    },
    {
        "line": 122,
        "fullcodeline": "if ((n = parse_single_hex_dump_line(line, pd, i*16)) == -1) {"
    },
    {
        "line": 26,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 27,
        "fullcodeline": "*err_info = g_strdup(\"cosine: purported control blade line doesn't have code values\");"
    },
    {
        "line": 38,
        "fullcodeline": "if (num_items_scanned != 10) {"
    },
    {
        "line": 73,
        "fullcodeline": "} else if (strncmp(if_name, \"PPoATM:\", 7) == 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "} else if (strncmp(direction, \"l2-rx\", 5) == 0) {"
    },
    {
        "line": 113,
        "fullcodeline": "*err = file_error(fh, err_info);"
    },
    {
        "line": 123,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 124,
        "fullcodeline": "*err_info = g_strdup(\"cosine: hex dump line doesn't have 16 numbers\");"
    },
    {
        "line": 39,
        "fullcodeline": "*err = WTAP_ERR_BAD_FILE;"
    },
    {
        "line": 40,
        "fullcodeline": "*err_info = g_strdup(\"cosine: header line is neither control blade nor PE output\");"
    },
    {
        "line": 74,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPoATM;"
    },
    {
        "line": 93,
        "fullcodeline": "pseudo_header->cosine.direction = COSINE_DIR_RX;"
    },
    {
        "line": 114,
        "fullcodeline": "if (*err == 0) {"
    },
    {
        "line": 115,
        "fullcodeline": "*err = WTAP_ERR_SHORT_READ;"
    },
    {
        "line": 75,
        "fullcodeline": "} else if (strncmp(if_name, \"PPoFR:\", 6) == 0) {"
    },
    {
        "line": 76,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPoFR;"
    },
    {
        "line": 77,
        "fullcodeline": "} else if (strncmp(if_name, \"ATM:\", 4) == 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_ATM;"
    },
    {
        "line": 79,
        "fullcodeline": "} else if (strncmp(if_name, \"FR:\", 3) == 0) {"
    },
    {
        "line": 80,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_FR;"
    },
    {
        "line": 81,
        "fullcodeline": "} else if (strncmp(if_name, \"HDLC:\", 5) == 0) {"
    },
    {
        "line": 82,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_HDLC;"
    },
    {
        "line": 83,
        "fullcodeline": "} else if (strncmp(if_name, \"PPP:\", 4) == 0) {"
    },
    {
        "line": 84,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_PPP;"
    },
    {
        "line": 85,
        "fullcodeline": "} else if (strncmp(if_name, \"ETH:\", 4) == 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_ETH;"
    },
    {
        "line": 88,
        "fullcodeline": "pseudo_header->cosine.encap = COSINE_ENCAP_UNKNOWN;"
    }
]