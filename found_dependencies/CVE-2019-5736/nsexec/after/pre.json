[
    {
        "line": 5,
        "fullcodeline": "int sync_child_pipe[2], sync_grandchild_pipe[2];"
    },
    {
        "line": 6,
        "fullcodeline": "struct nlconfig_t config = { 0 };"
    },
    {
        "line": 12,
        "fullcodeline": "pipenum = initpipe();"
    },
    {
        "line": 25,
        "fullcodeline": "nl_parse(pipenum, &config);"
    },
    {
        "line": 33,
        "fullcodeline": "update_oom_score_adj(config.oom_score_adj, config.oom_score_adj_len);"
    },
    {
        "line": 13,
        "fullcodeline": "if (pipenum == -1)"
    },
    {
        "line": 110,
        "fullcodeline": "switch (setjmp(env)) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (socketpair(AF_LOCAL, SOCK_STREAM, 0, sync_child_pipe) < 0)"
    },
    {
        "line": 58,
        "fullcodeline": "if (socketpair(AF_LOCAL, SOCK_STREAM, 0, sync_grandchild_pipe) < 0)"
    },
    {
        "line": 121,
        "fullcodeline": "bool ready = false;"
    },
    {
        "line": 124,
        "fullcodeline": "prctl(PR_SET_NAME, (unsigned long)\"runc:[0:PARENT]\", 0, 0, 0);"
    },
    {
        "line": 127,
        "fullcodeline": "child = clone_parent(&env, JUMP_CHILD);"
    },
    {
        "line": 220,
        "fullcodeline": "ready = false;"
    },
    {
        "line": 268,
        "fullcodeline": "syncfd = sync_child_pipe[0];"
    },
    {
        "line": 269,
        "fullcodeline": "close(sync_child_pipe[1]);"
    },
    {
        "line": 272,
        "fullcodeline": "prctl(PR_SET_NAME, (unsigned long)\"runc:[1:CHILD]\", 0, 0, 0);"
    },
    {
        "line": 359,
        "fullcodeline": "child = clone_parent(&env, JUMP_INIT);"
    },
    {
        "line": 364,
        "fullcodeline": "s = SYNC_RECVPID_PLS;"
    },
    {
        "line": 385,
        "fullcodeline": "s = SYNC_CHILD_READY;"
    },
    {
        "line": 409,
        "fullcodeline": "syncfd = sync_grandchild_pipe[0];"
    },
    {
        "line": 448,
        "fullcodeline": "s = SYNC_CHILD_READY;"
    },
    {
        "line": 46,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 0, 0, 0, 0) < 0)"
    },
    {
        "line": 120,
        "fullcodeline": "pid_t child, first_child = -1;"
    },
    {
        "line": 128,
        "fullcodeline": "if (child < 0)"
    },
    {
        "line": 302,
        "fullcodeline": "if (config.cloneflags & CLONE_NEWUSER) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (child < 0)"
    },
    {
        "line": 380,
        "fullcodeline": "if (s != SYNC_RECVPID_ACK) {"
    },
    {
        "line": 419,
        "fullcodeline": "if (s != SYNC_GRANDCHILD)"
    },
    {
        "line": 431,
        "fullcodeline": "if (!config.is_rootless_euid && config.is_setgroup) {"
    },
    {
        "line": 437,
        "fullcodeline": "if (config.cloneflags & CLONE_NEWCGROUP) {"
    },
    {
        "line": 142,
        "fullcodeline": "syncfd = sync_child_pipe[1];"
    },
    {
        "line": 143,
        "fullcodeline": "close(sync_child_pipe[0]);"
    },
    {
        "line": 225,
        "fullcodeline": "syncfd = sync_grandchild_pipe[1];"
    },
    {
        "line": 226,
        "fullcodeline": "close(sync_grandchild_pipe[0]);"
    },
    {
        "line": 228,
        "fullcodeline": "s = SYNC_GRANDCHILD;"
    },
    {
        "line": 281,
        "fullcodeline": "join_namespaces(config.namespaces);"
    },
    {
        "line": 305,
        "fullcodeline": "config.cloneflags &= ~CLONE_NEWUSER;"
    },
    {
        "line": 317,
        "fullcodeline": "s = SYNC_USERMAP_PLS;"
    },
    {
        "line": 347,
        "fullcodeline": "if (unshare(config.cloneflags & ~CLONE_NEWCGROUP) < 0)"
    },
    {
        "line": 365,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 366,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 369,
        "fullcodeline": "if (write(syncfd, &child, sizeof(child)) != sizeof(child)) {"
    },
    {
        "line": 370,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 376,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 377,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 381,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 386,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 417,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 425,
        "fullcodeline": "if (setuid(0) < 0)"
    },
    {
        "line": 428,
        "fullcodeline": "if (setgid(0) < 0)"
    },
    {
        "line": 449,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 325,
        "fullcodeline": "if (s != SYNC_USERMAP_ACK)"
    },
    {
        "line": 441,
        "fullcodeline": "if (value == CREATECGROUPNS) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 154,
        "fullcodeline": "exit(ret);"
    },
    {
        "line": 171,
        "fullcodeline": "update_uidmap(config.uidmappath, child, config.uidmap, config.uidmap_len);"
    },
    {
        "line": 172,
        "fullcodeline": "update_gidmap(config.gidmappath, child, config.gidmap, config.gidmap_len);"
    },
    {
        "line": 174,
        "fullcodeline": "s = SYNC_USERMAP_ACK;"
    },
    {
        "line": 211,
        "fullcodeline": "ready = true;"
    },
    {
        "line": 214,
        "fullcodeline": "bail(\"unexpected sync value: %u\", s);"
    },
    {
        "line": 229,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 230,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 234,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 243,
        "fullcodeline": "exit(ret);"
    },
    {
        "line": 245,
        "fullcodeline": "ready = true;"
    },
    {
        "line": 303,
        "fullcodeline": "if (unshare(CLONE_NEWUSER) < 0)"
    },
    {
        "line": 318,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 323,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 334,
        "fullcodeline": "if (setresuid(0, 0, 0) < 0)"
    },
    {
        "line": 432,
        "fullcodeline": "if (setgroups(0, NULL) < 0)"
    },
    {
        "line": 439,
        "fullcodeline": "if (read(pipenum, &value, sizeof(value)) != sizeof(value))"
    },
    {
        "line": 167,
        "fullcodeline": "if (config.is_rootless_euid && !config.is_setgroup)"
    },
    {
        "line": 181,
        "fullcodeline": "first_child = child;"
    },
    {
        "line": 190,
        "fullcodeline": "s = SYNC_RECVPID_ACK;"
    },
    {
        "line": 203,
        "fullcodeline": "len = dprintf(pipenum, \"{\\\"pid\\\": %d, \\\"pid_first\\\": %d}\\n\", child, first_child);"
    },
    {
        "line": 151,
        "fullcodeline": "if (read(syncfd, &ret, sizeof(ret)) != sizeof(ret))"
    },
    {
        "line": 168,
        "fullcodeline": "update_setgroups(child, SETGROUPS_DENY);"
    },
    {
        "line": 175,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 176,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 240,
        "fullcodeline": "if (read(syncfd, &ret, sizeof(ret)) != sizeof(ret))"
    },
    {
        "line": 314,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 1, 0, 0, 0) < 0)"
    },
    {
        "line": 329,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 0, 0, 0, 0) < 0)"
    },
    {
        "line": 442,
        "fullcodeline": "if (unshare(CLONE_NEWCGROUP) < 0)"
    },
    {
        "line": 184,
        "fullcodeline": "if (read(syncfd, &child, sizeof(child)) != sizeof(child)) {"
    },
    {
        "line": 185,
        "fullcodeline": "kill(first_child, SIGKILL);"
    },
    {
        "line": 191,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 192,
        "fullcodeline": "kill(first_child, SIGKILL);"
    },
    {
        "line": 193,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 205,
        "fullcodeline": "kill(child, SIGKILL);"
    }
]