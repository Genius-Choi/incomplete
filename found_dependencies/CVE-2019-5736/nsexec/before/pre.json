[
    {
        "line": 5,
        "fullcodeline": "int sync_child_pipe[2], sync_grandchild_pipe[2];"
    },
    {
        "line": 6,
        "fullcodeline": "struct nlconfig_t config = { 0 };"
    },
    {
        "line": 12,
        "fullcodeline": "pipenum = initpipe();"
    },
    {
        "line": 17,
        "fullcodeline": "nl_parse(pipenum, &config);"
    },
    {
        "line": 25,
        "fullcodeline": "update_oom_score_adj(config.oom_score_adj, config.oom_score_adj_len);"
    },
    {
        "line": 13,
        "fullcodeline": "if (pipenum == -1)"
    },
    {
        "line": 102,
        "fullcodeline": "switch (setjmp(env)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (socketpair(AF_LOCAL, SOCK_STREAM, 0, sync_child_pipe) < 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (socketpair(AF_LOCAL, SOCK_STREAM, 0, sync_grandchild_pipe) < 0)"
    },
    {
        "line": 113,
        "fullcodeline": "bool ready = false;"
    },
    {
        "line": 116,
        "fullcodeline": "prctl(PR_SET_NAME, (unsigned long)\"runc:[0:PARENT]\", 0, 0, 0);"
    },
    {
        "line": 119,
        "fullcodeline": "child = clone_parent(&env, JUMP_CHILD);"
    },
    {
        "line": 212,
        "fullcodeline": "ready = false;"
    },
    {
        "line": 260,
        "fullcodeline": "syncfd = sync_child_pipe[0];"
    },
    {
        "line": 261,
        "fullcodeline": "close(sync_child_pipe[1]);"
    },
    {
        "line": 264,
        "fullcodeline": "prctl(PR_SET_NAME, (unsigned long)\"runc:[1:CHILD]\", 0, 0, 0);"
    },
    {
        "line": 351,
        "fullcodeline": "child = clone_parent(&env, JUMP_INIT);"
    },
    {
        "line": 356,
        "fullcodeline": "s = SYNC_RECVPID_PLS;"
    },
    {
        "line": 377,
        "fullcodeline": "s = SYNC_CHILD_READY;"
    },
    {
        "line": 401,
        "fullcodeline": "syncfd = sync_grandchild_pipe[0];"
    },
    {
        "line": 440,
        "fullcodeline": "s = SYNC_CHILD_READY;"
    },
    {
        "line": 38,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 0, 0, 0, 0) < 0)"
    },
    {
        "line": 112,
        "fullcodeline": "pid_t child, first_child = -1;"
    },
    {
        "line": 120,
        "fullcodeline": "if (child < 0)"
    },
    {
        "line": 294,
        "fullcodeline": "if (config.cloneflags & CLONE_NEWUSER) {"
    },
    {
        "line": 352,
        "fullcodeline": "if (child < 0)"
    },
    {
        "line": 372,
        "fullcodeline": "if (s != SYNC_RECVPID_ACK) {"
    },
    {
        "line": 411,
        "fullcodeline": "if (s != SYNC_GRANDCHILD)"
    },
    {
        "line": 423,
        "fullcodeline": "if (!config.is_rootless_euid && config.is_setgroup) {"
    },
    {
        "line": 429,
        "fullcodeline": "if (config.cloneflags & CLONE_NEWCGROUP) {"
    },
    {
        "line": 134,
        "fullcodeline": "syncfd = sync_child_pipe[1];"
    },
    {
        "line": 135,
        "fullcodeline": "close(sync_child_pipe[0]);"
    },
    {
        "line": 217,
        "fullcodeline": "syncfd = sync_grandchild_pipe[1];"
    },
    {
        "line": 218,
        "fullcodeline": "close(sync_grandchild_pipe[0]);"
    },
    {
        "line": 220,
        "fullcodeline": "s = SYNC_GRANDCHILD;"
    },
    {
        "line": 273,
        "fullcodeline": "join_namespaces(config.namespaces);"
    },
    {
        "line": 297,
        "fullcodeline": "config.cloneflags &= ~CLONE_NEWUSER;"
    },
    {
        "line": 309,
        "fullcodeline": "s = SYNC_USERMAP_PLS;"
    },
    {
        "line": 339,
        "fullcodeline": "if (unshare(config.cloneflags & ~CLONE_NEWCGROUP) < 0)"
    },
    {
        "line": 357,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 358,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 361,
        "fullcodeline": "if (write(syncfd, &child, sizeof(child)) != sizeof(child)) {"
    },
    {
        "line": 362,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 368,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 369,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 373,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 378,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 409,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 417,
        "fullcodeline": "if (setuid(0) < 0)"
    },
    {
        "line": 420,
        "fullcodeline": "if (setgid(0) < 0)"
    },
    {
        "line": 441,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 317,
        "fullcodeline": "if (s != SYNC_USERMAP_ACK)"
    },
    {
        "line": 433,
        "fullcodeline": "if (value == CREATECGROUPNS) {"
    },
    {
        "line": 137,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 146,
        "fullcodeline": "exit(ret);"
    },
    {
        "line": 163,
        "fullcodeline": "update_uidmap(config.uidmappath, child, config.uidmap, config.uidmap_len);"
    },
    {
        "line": 164,
        "fullcodeline": "update_gidmap(config.gidmappath, child, config.gidmap, config.gidmap_len);"
    },
    {
        "line": 166,
        "fullcodeline": "s = SYNC_USERMAP_ACK;"
    },
    {
        "line": 203,
        "fullcodeline": "ready = true;"
    },
    {
        "line": 206,
        "fullcodeline": "bail(\"unexpected sync value: %u\", s);"
    },
    {
        "line": 221,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 222,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 226,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 235,
        "fullcodeline": "exit(ret);"
    },
    {
        "line": 237,
        "fullcodeline": "ready = true;"
    },
    {
        "line": 295,
        "fullcodeline": "if (unshare(CLONE_NEWUSER) < 0)"
    },
    {
        "line": 310,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 315,
        "fullcodeline": "if (read(syncfd, &s, sizeof(s)) != sizeof(s))"
    },
    {
        "line": 326,
        "fullcodeline": "if (setresuid(0, 0, 0) < 0)"
    },
    {
        "line": 424,
        "fullcodeline": "if (setgroups(0, NULL) < 0)"
    },
    {
        "line": 431,
        "fullcodeline": "if (read(pipenum, &value, sizeof(value)) != sizeof(value))"
    },
    {
        "line": 159,
        "fullcodeline": "if (config.is_rootless_euid && !config.is_setgroup)"
    },
    {
        "line": 173,
        "fullcodeline": "first_child = child;"
    },
    {
        "line": 182,
        "fullcodeline": "s = SYNC_RECVPID_ACK;"
    },
    {
        "line": 195,
        "fullcodeline": "len = dprintf(pipenum, \"{\\\"pid\\\": %d, \\\"pid_first\\\": %d}\\n\", child, first_child);"
    },
    {
        "line": 143,
        "fullcodeline": "if (read(syncfd, &ret, sizeof(ret)) != sizeof(ret))"
    },
    {
        "line": 160,
        "fullcodeline": "update_setgroups(child, SETGROUPS_DENY);"
    },
    {
        "line": 167,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 168,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 232,
        "fullcodeline": "if (read(syncfd, &ret, sizeof(ret)) != sizeof(ret))"
    },
    {
        "line": 306,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 1, 0, 0, 0) < 0)"
    },
    {
        "line": 321,
        "fullcodeline": "if (prctl(PR_SET_DUMPABLE, 0, 0, 0, 0) < 0)"
    },
    {
        "line": 434,
        "fullcodeline": "if (unshare(CLONE_NEWCGROUP) < 0)"
    },
    {
        "line": 176,
        "fullcodeline": "if (read(syncfd, &child, sizeof(child)) != sizeof(child)) {"
    },
    {
        "line": 177,
        "fullcodeline": "kill(first_child, SIGKILL);"
    },
    {
        "line": 183,
        "fullcodeline": "if (write(syncfd, &s, sizeof(s)) != sizeof(s)) {"
    },
    {
        "line": 184,
        "fullcodeline": "kill(first_child, SIGKILL);"
    },
    {
        "line": 185,
        "fullcodeline": "kill(child, SIGKILL);"
    },
    {
        "line": 197,
        "fullcodeline": "kill(child, SIGKILL);"
    }
]