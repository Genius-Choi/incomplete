[
    {
        "line": 1180,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", istr));"
    },
    {
        "line": 23,
        "fullcodeline": "while(tlen>=sizeof(struct rsvp_object_header)) {"
    },
    {
        "line": 1181,
        "fullcodeline": "return -1;"
    },
    {
        "line": 27,
        "fullcodeline": "rsvp_obj_header = (const struct rsvp_object_header *)tptr;"
    },
    {
        "line": 28,
        "fullcodeline": "rsvp_obj_len=EXTRACT_16BITS(rsvp_obj_header->length);"
    },
    {
        "line": 29,
        "fullcodeline": "rsvp_obj_ctype=rsvp_obj_header->ctype;"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo, \"%s%s Object (%u) Flags: [%s\","
    },
    {
        "line": 53,
        "fullcodeline": "ND_PRINT((ndo, \" if unknown], Class-Type: %s (%u), length: %u\","
    },
    {
        "line": 65,
        "fullcodeline": "obj_tptr=tptr+sizeof(struct rsvp_object_header);"
    },
    {
        "line": 66,
        "fullcodeline": "obj_tlen=rsvp_obj_len-sizeof(struct rsvp_object_header);"
    },
    {
        "line": 71,
        "fullcodeline": "hexdump=FALSE;"
    },
    {
        "line": 1175,
        "fullcodeline": "tptr+=rsvp_obj_len;"
    },
    {
        "line": 1176,
        "fullcodeline": "tlen-=rsvp_obj_len;"
    },
    {
        "line": 31,
        "fullcodeline": "if(rsvp_obj_len % 4) {"
    },
    {
        "line": 35,
        "fullcodeline": "if(rsvp_obj_len < sizeof(struct rsvp_object_header)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (rsvp_obj_header->class_num > 128)"
    },
    {
        "line": 60,
        "fullcodeline": "if(tlen < rsvp_obj_len) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (!ND_TTEST2(*tptr, rsvp_obj_len))"
    },
    {
        "line": 1171,
        "fullcodeline": "if (ndo->ndo_vflag > 1 || hexdump == TRUE)"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT((ndo, \"%sERROR: object header size %u not a multiple of 4\", ident, rsvp_obj_len));"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT((ndo, \"%sERROR: object header too short %u < %lu\", ident, rsvp_obj_len,"
    },
    {
        "line": 50,
        "fullcodeline": "ND_PRINT((ndo, \" %s\","
    },
    {
        "line": 61,
        "fullcodeline": "ND_PRINT((ndo, \"%sERROR: object goes past end of objects TLV\", ident));"
    },
    {
        "line": 832,
        "fullcodeline": "obj_ptr.rsvp_obj_frr = (const struct rsvp_obj_frr_t *)obj_tptr;"
    },
    {
        "line": 1172,
        "fullcodeline": "print_unknown_data(ndo, tptr + sizeof(struct rsvp_object_header), \"\\n\\t    \", /* FIXME indentation */"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 38,
        "fullcodeline": "return -1;"
    },
    {
        "line": 43,
        "fullcodeline": "tok2str(rsvp_obj_values,"
    },
    {
        "line": 47,
        "fullcodeline": "((rsvp_obj_header->class_num) & 0x80) ? \"ignore\" : \"reject\"));"
    },
    {
        "line": 54,
        "fullcodeline": "tok2str(rsvp_ctype_values,"
    },
    {
        "line": 62,
        "fullcodeline": "return -1;"
    },
    {
        "line": 70,
        "fullcodeline": "return -1;"
    },
    {
        "line": 1166,
        "fullcodeline": "if (ndo->ndo_vflag <= 1)"
    },
    {
        "line": 1173,
        "fullcodeline": "rsvp_obj_len - sizeof(struct rsvp_object_header));"
    },
    {
        "line": 56,
        "fullcodeline": "((rsvp_obj_header->class_num)<<8)+rsvp_obj_ctype),"
    },
    {
        "line": 79,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 DestAddress: %s, Protocol ID: 0x%02x\","
    },
    {
        "line": 83,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Flags: [0x%02x], DestPort %u\","
    },
    {
        "line": 87,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 88,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 93,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 DestAddress: %s, Protocol ID: 0x%02x\","
    },
    {
        "line": 97,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Flags: [0x%02x], DestPort %u\","
    },
    {
        "line": 101,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 102,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 108,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 Tunnel EndPoint: %s, Tunnel ID: 0x%04x, Extended Tunnel ID: %s\","
    },
    {
        "line": 113,
        "fullcodeline": "obj_tlen-=36;"
    },
    {
        "line": 114,
        "fullcodeline": "obj_tptr+=36;"
    },
    {
        "line": 120,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 P2MP LSP ID: 0x%08x, Tunnel ID: 0x%04x, Extended Tunnel ID: %s\","
    },
    {
        "line": 125,
        "fullcodeline": "obj_tlen-=26;"
    },
    {
        "line": 126,
        "fullcodeline": "obj_tptr+=26;"
    },
    {
        "line": 131,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 P2MP LSP ID: %s, Tunnel ID: 0x%04x, Extended Tunnel ID: %s\","
    },
    {
        "line": 136,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 137,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 143,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Tunnel EndPoint: %s, Tunnel ID: 0x%04x, Extended Tunnel ID: %s\","
    },
    {
        "line": 148,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 149,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 152,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 161,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Receiver Address: %s\","
    },
    {
        "line": 164,
        "fullcodeline": "obj_tlen-=sizeof(struct in_addr);"
    },
    {
        "line": 165,
        "fullcodeline": "obj_tptr+=sizeof(struct in_addr);"
    },
    {
        "line": 170,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 Receiver Address: %s\","
    },
    {
        "line": 173,
        "fullcodeline": "obj_tlen-=sizeof(struct in6_addr);"
    },
    {
        "line": 174,
        "fullcodeline": "obj_tptr+=sizeof(struct in6_addr);"
    },
    {
        "line": 177,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 186,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Notify Node Address: %s\","
    },
    {
        "line": 189,
        "fullcodeline": "obj_tlen-=sizeof(struct in_addr);"
    },
    {
        "line": 190,
        "fullcodeline": "obj_tptr+=sizeof(struct in_addr);"
    },
    {
        "line": 195,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 Notify Node Address: %s\","
    },
    {
        "line": 198,
        "fullcodeline": "obj_tlen-=sizeof(struct in6_addr);"
    },
    {
        "line": 199,
        "fullcodeline": "obj_tptr+=sizeof(struct in6_addr);"
    },
    {
        "line": 202,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 221,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Generalized Label: %u\","
    },
    {
        "line": 224,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 225,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 230,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Waveband ID: %u%s  Start Label: %u, Stop Label: %u\","
    },
    {
        "line": 236,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 237,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 240,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 249,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Reservation Style: %s, Flags: [0x%02x]\","
    },
    {
        "line": 255,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 256,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 259,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 268,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, Source Port: %u\","
    },
    {
        "line": 272,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 273,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 278,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, Source Port: %u\","
    },
    {
        "line": 282,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 283,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 288,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 Tunnel Sender Address: %s, LSP ID: 0x%04x\""
    },
    {
        "line": 296,
        "fullcodeline": "obj_tlen-=40;"
    },
    {
        "line": 297,
        "fullcodeline": "obj_tptr+=40;"
    },
    {
        "line": 302,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Tunnel Sender Address: %s, LSP-ID: 0x%04x\","
    },
    {
        "line": 306,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 307,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 312,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Tunnel Sender Address: %s, LSP ID: 0x%04x\""
    },
    {
        "line": 320,
        "fullcodeline": "obj_tlen-=16;"
    },
    {
        "line": 321,
        "fullcodeline": "obj_tptr+=16;"
    },
    {
        "line": 324,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 344,
        "fullcodeline": "ND_PRINT((ndo, \"%s  L3 Protocol ID: %s\","
    },
    {
        "line": 349,
        "fullcodeline": "ND_PRINT((ndo, \",%s merge capability\",((*(obj_tptr + 4)) & 0x80) ? \"no\" : \"\" ));"
    },
    {
        "line": 350,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Minimum VPI/VCI: %u/%u\","
    },
    {
        "line": 354,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Maximum VPI/VCI: %u/%u\","
    },
    {
        "line": 358,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 359,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 364,
        "fullcodeline": "ND_PRINT((ndo, \"%s  L3 Protocol ID: %s\","
    },
    {
        "line": 369,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Minimum/Maximum DLCI: %u/%u, %s%s bit DLCI\","
    },
    {
        "line": 375,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 376,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 381,
        "fullcodeline": "ND_PRINT((ndo, \"%s  LSP Encoding Type: %s (%u)\","
    },
    {
        "line": 387,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Switching Type: %s (%u), Payload ID: %s (0x%04x)\","
    },
    {
        "line": 397,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 398,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 401,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 471,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 481,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Instance: 0x%08x, Destination Instance: 0x%08x\","
    },
    {
        "line": 485,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 486,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 489,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 498,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Restart  Time: %ums, Recovery Time: %ums\","
    },
    {
        "line": 502,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 503,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 506,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 518,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Session Name: \", ident));"
    },
    {
        "line": 521,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Setup Priority: %u, Holding Priority: %u, Flags: [%s] (%#x)\","
    },
    {
        "line": 529,
        "fullcodeline": "obj_tlen-=4+*(obj_tptr+3);"
    },
    {
        "line": 530,
        "fullcodeline": "obj_tptr+=4+*(obj_tptr+3);"
    },
    {
        "line": 533,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 547,
        "fullcodeline": "total_subobj_len = obj_tlen;"
    },
    {
        "line": 651,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 661,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Previous/Next Interface: %s, Logical Interface Handle: 0x%08x\","
    },
    {
        "line": 665,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 666,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 674,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Previous/Next Interface: %s, Logical Interface Handle: 0x%08x\","
    },
    {
        "line": 678,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 679,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 680,
        "fullcodeline": "hexdump=TRUE; /* unless we have a TLV parser lets just hexdump */"
    },
    {
        "line": 683,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 692,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Refresh Period: %ums\","
    },
    {
        "line": 695,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 696,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 699,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 711,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Msg-Version: %u, length: %u\","
    },
    {
        "line": 715,
        "fullcodeline": "obj_tptr+=4; /* get to the start of the service header */"
    },
    {
        "line": 716,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 741,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 750,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, Source Port: %u\","
    },
    {
        "line": 754,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 755,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 760,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, Source Port: %u\","
    },
    {
        "line": 764,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 765,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 770,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, Flow Label: %u\","
    },
    {
        "line": 774,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 775,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 780,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, LSP-ID: 0x%04x\","
    },
    {
        "line": 784,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 785,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 790,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv6 Tunnel Sender Address: %s, LSP ID: 0x%04x\""
    },
    {
        "line": 798,
        "fullcodeline": "obj_tlen-=40;"
    },
    {
        "line": 799,
        "fullcodeline": "obj_tptr+=40;"
    },
    {
        "line": 804,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Source Address: %s, LSP-ID: 0x%04x\","
    },
    {
        "line": 808,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 809,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 814,
        "fullcodeline": "ND_PRINT((ndo, \"%s  IPv4 Tunnel Sender Address: %s, LSP ID: 0x%04x\""
    },
    {
        "line": 822,
        "fullcodeline": "obj_tlen-=16;"
    },
    {
        "line": 823,
        "fullcodeline": "obj_tptr+=16;"
    },
    {
        "line": 826,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 838,
        "fullcodeline": "bw.i = EXTRACT_32BITS(obj_ptr.rsvp_obj_frr->bandwidth);"
    },
    {
        "line": 839,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Setup Priority: %u, Holding Priority: %u, Hop-limit: %u, Bandwidth: %.10g Mbps\","
    },
    {
        "line": 845,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Include-any: 0x%08x, Exclude-any: 0x%08x, Include-all: 0x%08x\","
    },
    {
        "line": 850,
        "fullcodeline": "obj_tlen-=sizeof(struct rsvp_obj_frr_t);"
    },
    {
        "line": 851,
        "fullcodeline": "obj_tptr+=sizeof(struct rsvp_obj_frr_t);"
    },
    {
        "line": 857,
        "fullcodeline": "bw.i = EXTRACT_32BITS(obj_ptr.rsvp_obj_frr->bandwidth);"
    },
    {
        "line": 858,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Setup Priority: %u, Holding Priority: %u, Hop-limit: %u, Bandwidth: %.10g Mbps\","
    },
    {
        "line": 864,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Include Colors: 0x%08x, Exclude Colors: 0x%08x\","
    },
    {
        "line": 868,
        "fullcodeline": "obj_tlen-=16;"
    },
    {
        "line": 869,
        "fullcodeline": "obj_tptr+=16;"
    },
    {
        "line": 873,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 890,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 898,
        "fullcodeline": "ND_TCHECK_32BITS(obj_tptr);"
    },
    {
        "line": 899,
        "fullcodeline": "ND_PRINT((ndo, \"%s  CT: %u\","
    },
    {
        "line": 902,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 903,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 906,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 917,
        "fullcodeline": "error_value=EXTRACT_16BITS(obj_tptr+6);"
    },
    {
        "line": 918,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Error Node Address: %s, Flags: [0x%02x]%s  Error Code: %s (%u)\","
    },
    {
        "line": 941,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 942,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 949,
        "fullcodeline": "error_value=EXTRACT_16BITS(obj_tptr+18);"
    },
    {
        "line": 950,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Error Node Address: %s, Flags: [0x%02x]%s  Error Code: %s (%u)\","
    },
    {
        "line": 967,
        "fullcodeline": "obj_tlen-=20;"
    },
    {
        "line": 968,
        "fullcodeline": "obj_tptr+=20;"
    },
    {
        "line": 971,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 980,
        "fullcodeline": "padbytes = EXTRACT_16BITS(obj_tptr+2);"
    },
    {
        "line": 981,
        "fullcodeline": "ND_PRINT((ndo, \"%s  TLV count: %u, padding bytes: %u\","
    },
    {
        "line": 985,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 986,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1004,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1016,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Flags [0x%02x], epoch: %u\","
    },
    {
        "line": 1020,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1021,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1033,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1042,
        "fullcodeline": "obj_ptr.rsvp_obj_integrity = (const struct rsvp_obj_integrity_t *)obj_tptr;"
    },
    {
        "line": 1043,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Key-ID 0x%04x%08x, Sequence 0x%08x%08x, Flags [%s]\","
    },
    {
        "line": 1052,
        "fullcodeline": "ND_PRINT((ndo, \"%s  MD5-sum 0x%08x%08x%08x%08x \","
    },
    {
        "line": 1059,
        "fullcodeline": "sigcheck = signature_verify(ndo, pptr, plen,"
    },
    {
        "line": 1063,
        "fullcodeline": "ND_PRINT((ndo, \" (%s)\", tok2str(signature_check_values, \"Unknown\", sigcheck)));"
    },
    {
        "line": 1065,
        "fullcodeline": "obj_tlen+=sizeof(struct rsvp_obj_integrity_t);"
    },
    {
        "line": 1066,
        "fullcodeline": "obj_tptr+=sizeof(struct rsvp_obj_integrity_t);"
    },
    {
        "line": 1069,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1078,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Flags [%s]\", ident,"
    },
    {
        "line": 1081,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1082,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1085,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1094,
        "fullcodeline": "action = (EXTRACT_16BITS(obj_tptr)>>8);"
    },
    {
        "line": 1096,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Action: %s (%u), Label type: %u\", ident,"
    },
    {
        "line": 1129,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1137,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Sub-LSP destination address: %s\","
    },
    {
        "line": 1140,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1141,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1146,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Sub-LSP destination address: %s\","
    },
    {
        "line": 1149,
        "fullcodeline": "obj_tlen-=16;"
    },
    {
        "line": 1150,
        "fullcodeline": "obj_tptr+=16;"
    },
    {
        "line": 1153,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 1167,
        "fullcodeline": "print_unknown_data(ndo, obj_tptr, \"\\n\\t    \", obj_tlen); /* FIXME indentation */"
    },
    {
        "line": 51,
        "fullcodeline": "((rsvp_obj_header->class_num) & 0x40) ? \"and forward\" : \"silently\"));"
    },
    {
        "line": 77,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 91,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 106,
        "fullcodeline": "if (obj_tlen < 36)"
    },
    {
        "line": 118,
        "fullcodeline": "if (obj_tlen < 26)"
    },
    {
        "line": 129,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 141,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 159,
        "fullcodeline": "if (obj_tlen < sizeof(struct in_addr))"
    },
    {
        "line": 168,
        "fullcodeline": "if (obj_tlen < sizeof(struct in6_addr))"
    },
    {
        "line": 184,
        "fullcodeline": "if (obj_tlen < sizeof(struct in_addr))"
    },
    {
        "line": 193,
        "fullcodeline": "if (obj_tlen < sizeof(struct in6_addr))"
    },
    {
        "line": 212,
        "fullcodeline": "while(obj_tlen >= 4 ) {"
    },
    {
        "line": 219,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 228,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 247,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 266,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 276,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 286,
        "fullcodeline": "if (obj_tlen < 40)"
    },
    {
        "line": 300,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 310,
        "fullcodeline": "if (obj_tlen < 16)"
    },
    {
        "line": 331,
        "fullcodeline": "while(obj_tlen >= 4 ) {"
    },
    {
        "line": 342,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 362,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 379,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 409,
        "fullcodeline": "while(obj_tlen >= 4 ) {"
    },
    {
        "line": 479,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 496,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 513,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 516,
        "fullcodeline": "if (obj_tlen < 4+namelen)"
    },
    {
        "line": 519,
        "fullcodeline": "for (i = 0; i < namelen; i++)"
    },
    {
        "line": 520,
        "fullcodeline": "safeputchar(ndo, *(obj_tptr + 4 + i));"
    },
    {
        "line": 543,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 548,
        "fullcodeline": "while(total_subobj_len > 0) {"
    },
    {
        "line": 659,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 672,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 690,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 709,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 718,
        "fullcodeline": "while (obj_tlen >= 4) {"
    },
    {
        "line": 748,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 758,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 768,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 778,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 788,
        "fullcodeline": "if (obj_tlen < 40)"
    },
    {
        "line": 802,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 812,
        "fullcodeline": "if (obj_tlen < 16)"
    },
    {
        "line": 836,
        "fullcodeline": "if (obj_tlen < sizeof(struct rsvp_obj_frr_t))"
    },
    {
        "line": 855,
        "fullcodeline": "if (obj_tlen < 16)"
    },
    {
        "line": 880,
        "fullcodeline": "while(obj_tlen >= 8) {"
    },
    {
        "line": 914,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 946,
        "fullcodeline": "if (obj_tlen < 20)"
    },
    {
        "line": 978,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 988,
        "fullcodeline": "while(obj_tlen >= 2 + padbytes) {"
    },
    {
        "line": 1014,
        "fullcodeline": "if (obj_tlen < 8)"
    },
    {
        "line": 1023,
        "fullcodeline": "while(obj_tlen >= 4) {"
    },
    {
        "line": 1040,
        "fullcodeline": "if (obj_tlen < sizeof(struct rsvp_obj_integrity_t))"
    },
    {
        "line": 1076,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 1092,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 1135,
        "fullcodeline": "if (obj_tlen < 4)"
    },
    {
        "line": 1144,
        "fullcodeline": "if (obj_tlen < 16)"
    },
    {
        "line": 213,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Label: %u\", ident, EXTRACT_32BITS(obj_tptr)));"
    },
    {
        "line": 214,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 215,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 332,
        "fullcodeline": "ND_PRINT((ndo, \"%s  L3 Protocol ID: %s\","
    },
    {
        "line": 337,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 338,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 412,
        "fullcodeline": "ND_TCHECK2(*obj_tptr, 4);"
    },
    {
        "line": 414,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Subobject Type: %s, length %u\","
    },
    {
        "line": 466,
        "fullcodeline": "obj_tlen-=*(obj_tptr+1);"
    },
    {
        "line": 467,
        "fullcodeline": "obj_tptr+=*(obj_tptr+1);"
    },
    {
        "line": 515,
        "fullcodeline": "namelen = *(obj_tptr+3);"
    },
    {
        "line": 560,
        "fullcodeline": "subobj_len  = EXTRACT_16BITS(obj_tptr);"
    },
    {
        "line": 561,
        "fullcodeline": "subobj_type = (EXTRACT_16BITS(obj_tptr+2))>>8;"
    },
    {
        "line": 562,
        "fullcodeline": "af = (EXTRACT_16BITS(obj_tptr+2))&0x00FF;"
    },
    {
        "line": 564,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Subobject Type: %s (%u), AF: %s (%u), length: %u\","
    },
    {
        "line": 639,
        "fullcodeline": "total_subobj_len-=subobj_len;"
    },
    {
        "line": 640,
        "fullcodeline": "obj_tptr+=subobj_len;"
    },
    {
        "line": 641,
        "fullcodeline": "obj_tlen+=subobj_len;"
    },
    {
        "line": 646,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 668,
        "fullcodeline": "hexdump=TRUE; /* unless we have a TLV parser lets just hexdump */"
    },
    {
        "line": 719,
        "fullcodeline": "intserv_serv_tlen=EXTRACT_16BITS(obj_tptr+2)<<2;"
    },
    {
        "line": 720,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Service Type: %s (%u), break bit %s set, Service length: %u\","
    },
    {
        "line": 727,
        "fullcodeline": "obj_tptr+=4; /* get to the start of the parameter list */"
    },
    {
        "line": 728,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 881,
        "fullcodeline": "ND_PRINT((ndo, \"%s  PLR-ID: %s, Avoid-Node-ID: %s\","
    },
    {
        "line": 885,
        "fullcodeline": "obj_tlen-=8;"
    },
    {
        "line": 886,
        "fullcodeline": "obj_tptr+=8;"
    },
    {
        "line": 916,
        "fullcodeline": "error_code=*(obj_tptr+5);"
    },
    {
        "line": 927,
        "fullcodeline": "ND_PRINT((ndo, \", Error Value: %s (%u)\","
    },
    {
        "line": 933,
        "fullcodeline": "ND_PRINT((ndo, \", Error Value: %s (%u)\","
    },
    {
        "line": 938,
        "fullcodeline": "ND_PRINT((ndo, \", Unknown Error Value (%u)\", error_value));"
    },
    {
        "line": 948,
        "fullcodeline": "error_code=*(obj_tptr+17);"
    },
    {
        "line": 960,
        "fullcodeline": "ND_PRINT((ndo, \", Error Value: %s (%u)\","
    },
    {
        "line": 989,
        "fullcodeline": "ND_PRINT((ndo, \"%s    %s TLV (0x%02x), length: %u\", /* length includes header */"
    },
    {
        "line": 998,
        "fullcodeline": "print_unknown_data(ndo, obj_tptr + 2, \"\\n\\t\\t\", *(obj_tptr + 1) - 2);"
    },
    {
        "line": 999,
        "fullcodeline": "obj_tlen-=*(obj_tptr+1);"
    },
    {
        "line": 1000,
        "fullcodeline": "obj_tptr+=*(obj_tptr+1);"
    },
    {
        "line": 1024,
        "fullcodeline": "ND_PRINT((ndo, \"%s    Message-ID 0x%08x (%u)\","
    },
    {
        "line": 1028,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1029,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1107,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Start range: %u, End range: %u\", ident,"
    },
    {
        "line": 1110,
        "fullcodeline": "obj_tlen-=12;"
    },
    {
        "line": 1111,
        "fullcodeline": "obj_tptr+=12;"
    },
    {
        "line": 1115,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1116,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1117,
        "fullcodeline": "subchannel = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "return -1;"
    },
    {
        "line": 81,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 86,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 6)));"
    },
    {
        "line": 92,
        "fullcodeline": "return -1;"
    },
    {
        "line": 95,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 100,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + sizeof(struct in6_addr) + 2)));"
    },
    {
        "line": 107,
        "fullcodeline": "return -1;"
    },
    {
        "line": 110,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 111,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+18),"
    },
    {
        "line": 112,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr + 20)));"
    },
    {
        "line": 119,
        "fullcodeline": "return -1;"
    },
    {
        "line": 122,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr),"
    },
    {
        "line": 123,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+6),"
    },
    {
        "line": 124,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr + 8)));"
    },
    {
        "line": 130,
        "fullcodeline": "return -1;"
    },
    {
        "line": 133,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 134,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+6),"
    },
    {
        "line": 135,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr + 8)));"
    },
    {
        "line": 142,
        "fullcodeline": "return -1;"
    },
    {
        "line": 145,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 146,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+6),"
    },
    {
        "line": 147,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr + 8)));"
    },
    {
        "line": 160,
        "fullcodeline": "return -1;"
    },
    {
        "line": 163,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr)));"
    },
    {
        "line": 169,
        "fullcodeline": "return -1;"
    },
    {
        "line": 172,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr)));"
    },
    {
        "line": 185,
        "fullcodeline": "return -1;"
    },
    {
        "line": 188,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr)));"
    },
    {
        "line": 194,
        "fullcodeline": "return-1;"
    },
    {
        "line": 197,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr)));"
    },
    {
        "line": 220,
        "fullcodeline": "return-1;"
    },
    {
        "line": 223,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr)));"
    },
    {
        "line": 229,
        "fullcodeline": "return-1;"
    },
    {
        "line": 232,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr),"
    },
    {
        "line": 234,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr+4),"
    },
    {
        "line": 235,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 8)));"
    },
    {
        "line": 248,
        "fullcodeline": "return-1;"
    },
    {
        "line": 251,
        "fullcodeline": "tok2str(rsvp_resstyle_values,"
    },
    {
        "line": 267,
        "fullcodeline": "return-1;"
    },
    {
        "line": 270,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 271,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 6)));"
    },
    {
        "line": 277,
        "fullcodeline": "return-1;"
    },
    {
        "line": 280,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 281,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 18)));"
    },
    {
        "line": 287,
        "fullcodeline": "return-1;"
    },
    {
        "line": 291,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 292,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+18),"
    },
    {
        "line": 294,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr+20),"
    },
    {
        "line": 295,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 38)));"
    },
    {
        "line": 301,
        "fullcodeline": "return-1;"
    },
    {
        "line": 304,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 305,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 6)));"
    },
    {
        "line": 311,
        "fullcodeline": "return-1;"
    },
    {
        "line": 315,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 316,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+6),"
    },
    {
        "line": 318,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr+8),"
    },
    {
        "line": 319,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 12)));"
    },
    {
        "line": 343,
        "fullcodeline": "return-1;"
    },
    {
        "line": 346,
        "fullcodeline": "tok2str(ethertype_values,"
    },
    {
        "line": 352,
        "fullcodeline": "(EXTRACT_16BITS(obj_tptr+4))&0xfff,"
    },
    {
        "line": 353,
        "fullcodeline": "(EXTRACT_16BITS(obj_tptr + 6)) & 0xfff));"
    },
    {
        "line": 356,
        "fullcodeline": "(EXTRACT_16BITS(obj_tptr+8))&0xfff,"
    },
    {
        "line": 357,
        "fullcodeline": "(EXTRACT_16BITS(obj_tptr + 10)) & 0xfff));"
    },
    {
        "line": 363,
        "fullcodeline": "return-1;"
    },
    {
        "line": 366,
        "fullcodeline": "tok2str(ethertype_values,"
    },
    {
        "line": 371,
        "fullcodeline": "(EXTRACT_32BITS(obj_tptr+4))&0x7fffff,"
    },
    {
        "line": 372,
        "fullcodeline": "(EXTRACT_32BITS(obj_tptr+8))&0x7fffff,"
    },
    {
        "line": 373,
        "fullcodeline": "(((EXTRACT_16BITS(obj_tptr+4)>>7)&3) == 0 ) ? \"10\" : \"\","
    },
    {
        "line": 374,
        "fullcodeline": "(((EXTRACT_16BITS(obj_tptr + 4) >> 7) & 3) == 2 ) ? \"23\" : \"\"));"
    },
    {
        "line": 380,
        "fullcodeline": "return-1;"
    },
    {
        "line": 383,
        "fullcodeline": "tok2str(gmpls_encoding_values,"
    },
    {
        "line": 389,
        "fullcodeline": "tok2str(gmpls_switch_cap_values,"
    },
    {
        "line": 393,
        "fullcodeline": "tok2str(gmpls_payload_values,"
    },
    {
        "line": 396,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 2)));"
    },
    {
        "line": 421,
        "fullcodeline": "if (length == 0) { /* prevent infinite loops */"
    },
    {
        "line": 426,
        "fullcodeline": "switch(RSVP_OBJ_XRO_MASK_SUBOBJ(*obj_tptr)) {"
    },
    {
        "line": 480,
        "fullcodeline": "return-1;"
    },
    {
        "line": 483,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr),"
    },
    {
        "line": 484,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 4)));"
    },
    {
        "line": 497,
        "fullcodeline": "return-1;"
    },
    {
        "line": 500,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr),"
    },
    {
        "line": 501,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 4)));"
    },
    {
        "line": 514,
        "fullcodeline": "return-1;"
    },
    {
        "line": 517,
        "fullcodeline": "return-1;"
    },
    {
        "line": 525,
        "fullcodeline": "bittok2str(rsvp_session_attribute_flag_values,"
    },
    {
        "line": 544,
        "fullcodeline": "return-1;"
    },
    {
        "line": 558,
        "fullcodeline": "if (total_subobj_len < 4)"
    },
    {
        "line": 577,
        "fullcodeline": "if(subobj_len < 4 || subobj_len > total_subobj_len)"
    },
    {
        "line": 660,
        "fullcodeline": "return-1;"
    },
    {
        "line": 663,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 664,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 4)));"
    },
    {
        "line": 673,
        "fullcodeline": "return-1;"
    },
    {
        "line": 676,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 677,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 16)));"
    },
    {
        "line": 691,
        "fullcodeline": "return-1;"
    },
    {
        "line": 694,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr)));"
    },
    {
        "line": 710,
        "fullcodeline": "return-1;"
    },
    {
        "line": 713,
        "fullcodeline": "(*obj_tptr & 0xf0) >> 4,"
    },
    {
        "line": 714,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 2) << 2));"
    },
    {
        "line": 730,
        "fullcodeline": "while (intserv_serv_tlen>=4) {"
    },
    {
        "line": 749,
        "fullcodeline": "return-1;"
    },
    {
        "line": 752,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 753,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 6)));"
    },
    {
        "line": 759,
        "fullcodeline": "return-1;"
    },
    {
        "line": 762,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 763,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 18)));"
    },
    {
        "line": 769,
        "fullcodeline": "return-1;"
    },
    {
        "line": 772,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 773,
        "fullcodeline": "EXTRACT_24BITS(obj_tptr + 17)));"
    },
    {
        "line": 779,
        "fullcodeline": "return-1;"
    },
    {
        "line": 782,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 783,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 18)));"
    },
    {
        "line": 789,
        "fullcodeline": "return-1;"
    },
    {
        "line": 793,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 794,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+18),"
    },
    {
        "line": 796,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr+20),"
    },
    {
        "line": 797,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 38)));"
    },
    {
        "line": 803,
        "fullcodeline": "return-1;"
    },
    {
        "line": 806,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 807,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 6)));"
    },
    {
        "line": 813,
        "fullcodeline": "return-1;"
    },
    {
        "line": 817,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 818,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+6),"
    },
    {
        "line": 820,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr+8),"
    },
    {
        "line": 821,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 12)));"
    },
    {
        "line": 837,
        "fullcodeline": "return-1;"
    },
    {
        "line": 844,
        "fullcodeline": "bw.f * 8 / 1000000));"
    },
    {
        "line": 856,
        "fullcodeline": "return-1;"
    },
    {
        "line": 863,
        "fullcodeline": "bw.f * 8 / 1000000));"
    },
    {
        "line": 901,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr) & 0x7));"
    },
    {
        "line": 915,
        "fullcodeline": "return-1;"
    },
    {
        "line": 920,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 923,
        "fullcodeline": "tok2str(rsvp_obj_error_code_values,\"unknown\",error_code),"
    },
    {
        "line": 947,
        "fullcodeline": "return-1;"
    },
    {
        "line": 952,
        "fullcodeline": "ip6addr_string(ndo, obj_tptr),"
    },
    {
        "line": 955,
        "fullcodeline": "tok2str(rsvp_obj_error_code_values,\"unknown\",error_code),"
    },
    {
        "line": 979,
        "fullcodeline": "return-1;"
    },
    {
        "line": 983,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr),"
    },
    {
        "line": 994,
        "fullcodeline": "if (obj_tlen < *(obj_tptr+1))"
    },
    {
        "line": 996,
        "fullcodeline": "if (*(obj_tptr+1) < 2)"
    },
    {
        "line": 1015,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1019,
        "fullcodeline": "EXTRACT_24BITS(obj_tptr + 1)));"
    },
    {
        "line": 1041,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1046,
        "fullcodeline": "EXTRACT_32BITS(obj_ptr.rsvp_obj_integrity->key_id+2),"
    },
    {
        "line": 1048,
        "fullcodeline": "EXTRACT_32BITS(obj_ptr.rsvp_obj_integrity->sequence+4),"
    },
    {
        "line": 1049,
        "fullcodeline": "bittok2str(rsvp_obj_integrity_flag_values,"
    },
    {
        "line": 1055,
        "fullcodeline": "EXTRACT_32BITS(obj_ptr.rsvp_obj_integrity->digest+4),"
    },
    {
        "line": 1056,
        "fullcodeline": "EXTRACT_32BITS(obj_ptr.rsvp_obj_integrity->digest+8),"
    },
    {
        "line": 1057,
        "fullcodeline": "EXTRACT_32BITS(obj_ptr.rsvp_obj_integrity->digest + 12)));"
    },
    {
        "line": 1077,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1079,
        "fullcodeline": "bittok2str(rsvp_obj_admin_status_flag_values, \"none\","
    },
    {
        "line": 1093,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1097,
        "fullcodeline": "tok2str(rsvp_obj_label_set_action_values, \"Unknown\", action),"
    },
    {
        "line": 1098,
        "fullcodeline": "action, ((EXTRACT_32BITS(obj_tptr) & 0x7F))));"
    },
    {
        "line": 1105,
        "fullcodeline": "if (obj_tlen < 12)"
    },
    {
        "line": 1118,
        "fullcodeline": "while(obj_tlen >= 4 ) {"
    },
    {
        "line": 1136,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1138,
        "fullcodeline": "ident, ipaddr_string(ndo, obj_tptr)));"
    },
    {
        "line": 1145,
        "fullcodeline": "return-1;"
    },
    {
        "line": 1147,
        "fullcodeline": "ident, ip6addr_string(ndo, obj_tptr)));"
    },
    {
        "line": 82,
        "fullcodeline": "*(obj_tptr + sizeof(struct in_addr))));"
    },
    {
        "line": 85,
        "fullcodeline": "*(obj_tptr+5),"
    },
    {
        "line": 96,
        "fullcodeline": "*(obj_tptr + sizeof(struct in6_addr))));"
    },
    {
        "line": 99,
        "fullcodeline": "*(obj_tptr+sizeof(struct in6_addr)+1),"
    },
    {
        "line": 253,
        "fullcodeline": "EXTRACT_24BITS(obj_tptr+1)),"
    },
    {
        "line": 348,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 2))));"
    },
    {
        "line": 368,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 2))));"
    },
    {
        "line": 392,
        "fullcodeline": "*(obj_tptr+1),"
    },
    {
        "line": 395,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr+2)),"
    },
    {
        "line": 413,
        "fullcodeline": "length = *(obj_tptr + 1);"
    },
    {
        "line": 422,
        "fullcodeline": "ND_PRINT((ndo, \"%s  ERROR: zero length ERO subtype\", ident));"
    },
    {
        "line": 434,
        "fullcodeline": "ND_TCHECK2(*obj_tptr, 8);"
    },
    {
        "line": 441,
        "fullcodeline": "ND_PRINT((ndo, \", %s, %s/%u, Flags: [%s]\","
    },
    {
        "line": 454,
        "fullcodeline": "ND_TCHECK2(*obj_tptr, 8);"
    },
    {
        "line": 455,
        "fullcodeline": "ND_PRINT((ndo, \", Flags: [%s] (%#x), Class-Type: %s (%u), %u\","
    },
    {
        "line": 528,
        "fullcodeline": "*(obj_tptr + 2)));"
    },
    {
        "line": 618,
        "fullcodeline": "ND_PRINT((ndo, \"%s    U-bit: %x, Label type: %u, Logical port id: %u, Label: %u\","
    },
    {
        "line": 631,
        "fullcodeline": "ND_PRINT((ndo, \"%s    Service level: %u\","
    },
    {
        "line": 636,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 731,
        "fullcodeline": "processed = rsvp_intserv_print(ndo, obj_tptr, obj_tlen);"
    },
    {
        "line": 734,
        "fullcodeline": "obj_tlen-=processed;"
    },
    {
        "line": 735,
        "fullcodeline": "intserv_serv_tlen-=processed;"
    },
    {
        "line": 736,
        "fullcodeline": "obj_tptr+=processed;"
    },
    {
        "line": 921,
        "fullcodeline": "*(obj_tptr+4),"
    },
    {
        "line": 953,
        "fullcodeline": "*(obj_tptr+16),"
    },
    {
        "line": 1080,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr))));"
    },
    {
        "line": 1119,
        "fullcodeline": "ND_PRINT((ndo, \"%s  Subchannel #%u: %u\", ident, subchannel,"
    },
    {
        "line": 1121,
        "fullcodeline": "obj_tptr+=4;"
    },
    {
        "line": 1122,
        "fullcodeline": "obj_tlen-=4;"
    },
    {
        "line": 1123,
        "fullcodeline": "subchannel++;"
    },
    {
        "line": 334,
        "fullcodeline": "tok2str(ethertype_values,"
    },
    {
        "line": 391,
        "fullcodeline": "*(obj_tptr+1)),"
    },
    {
        "line": 416,
        "fullcodeline": "tok2str(rsvp_obj_xro_values,"
    },
    {
        "line": 430,
        "fullcodeline": "if (length != 8) {"
    },
    {
        "line": 436,
        "fullcodeline": "if (prefix_length != 32) {"
    },
    {
        "line": 450,
        "fullcodeline": "if (length != 8) {"
    },
    {
        "line": 524,
        "fullcodeline": "(int)*(obj_tptr+1),"
    },
    {
        "line": 527,
        "fullcodeline": "*(obj_tptr+2)),"
    },
    {
        "line": 566,
        "fullcodeline": "tok2str(rsvp_obj_generalized_uni_values, \"Unknown\", subobj_type),"
    },
    {
        "line": 568,
        "fullcodeline": "tok2str(af_values, \"Unknown\", af), af,"
    },
    {
        "line": 614,
        "fullcodeline": "if (subobj_len < 16) {"
    },
    {
        "line": 627,
        "fullcodeline": "if (subobj_len < 8) {"
    },
    {
        "line": 722,
        "fullcodeline": "tok2str(rsvp_intserv_service_type_values,\"unknown\",*(obj_tptr)),"
    },
    {
        "line": 724,
        "fullcodeline": "(*(obj_tptr+1)&0x80) ? \"\" : \"not\","
    },
    {
        "line": 732,
        "fullcodeline": "if (processed == 0)"
    },
    {
        "line": 883,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr),"
    },
    {
        "line": 884,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr + 4)));"
    },
    {
        "line": 928,
        "fullcodeline": "tok2str(rsvp_obj_error_code_routing_values,\"unknown\",error_value),"
    },
    {
        "line": 934,
        "fullcodeline": "tok2str(rsvp_obj_error_code_diffserv_te_values,\"unknown\",error_value),"
    },
    {
        "line": 961,
        "fullcodeline": "tok2str(rsvp_obj_error_code_routing_values,\"unknown\",error_value),"
    },
    {
        "line": 991,
        "fullcodeline": "tok2str(rsvp_obj_prop_tlv_values,\"unknown\",*obj_tptr),"
    },
    {
        "line": 995,
        "fullcodeline": "return-1;"
    },
    {
        "line": 997,
        "fullcodeline": "return -1;"
    },
    {
        "line": 1026,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr),"
    },
    {
        "line": 1027,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr)));"
    },
    {
        "line": 1106,
        "fullcodeline": "return -1;"
    },
    {
        "line": 1108,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr+4),"
    },
    {
        "line": 1109,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 8)));"
    },
    {
        "line": 336,
        "fullcodeline": "EXTRACT_16BITS(obj_tptr + 2))));"
    },
    {
        "line": 418,
        "fullcodeline": "RSVP_OBJ_XRO_MASK_SUBOBJ(*obj_tptr)),"
    },
    {
        "line": 431,
        "fullcodeline": "ND_PRINT((ndo, \" ERROR: length != 8\"));"
    },
    {
        "line": 435,
        "fullcodeline": "prefix_length = *(obj_tptr+6);"
    },
    {
        "line": 437,
        "fullcodeline": "ND_PRINT((ndo, \" ERROR: Prefix length %u != 32\","
    },
    {
        "line": 451,
        "fullcodeline": "ND_PRINT((ndo, \" ERROR: length != 8\"));"
    },
    {
        "line": 588,
        "fullcodeline": "ND_PRINT((ndo, \"%s    UNI IPv4 TNA address: %s\","
    },
    {
        "line": 594,
        "fullcodeline": "ND_PRINT((ndo, \"%s    UNI IPv6 TNA address: %s\","
    },
    {
        "line": 609,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 993,
        "fullcodeline": "*(obj_tptr + 1)));"
    },
    {
        "line": 442,
        "fullcodeline": "RSVP_OBJ_XRO_MASK_LOOSE(*obj_tptr) ? \"Loose\" : \"Strict\","
    },
    {
        "line": 443,
        "fullcodeline": "ipaddr_string(ndo, obj_tptr+2),"
    },
    {
        "line": 445,
        "fullcodeline": "bittok2str(rsvp_obj_rro_flag_values,"
    },
    {
        "line": 456,
        "fullcodeline": "bittok2str(rsvp_obj_rro_label_flag_values,"
    },
    {
        "line": 460,
        "fullcodeline": "tok2str(rsvp_ctype_values,"
    },
    {
        "line": 464,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 4)));"
    },
    {
        "line": 586,
        "fullcodeline": "if (subobj_len < 8)"
    },
    {
        "line": 592,
        "fullcodeline": "if (subobj_len < 20)"
    },
    {
        "line": 615,
        "fullcodeline": "return -1;"
    },
    {
        "line": 620,
        "fullcodeline": "((EXTRACT_32BITS(obj_tptr+4))>>31),"
    },
    {
        "line": 621,
        "fullcodeline": "((EXTRACT_32BITS(obj_tptr+4))&0xFF),"
    },
    {
        "line": 622,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr+8),"
    },
    {
        "line": 623,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr + 12)));"
    },
    {
        "line": 628,
        "fullcodeline": "return -1;"
    },
    {
        "line": 632,
        "fullcodeline": "ident, (EXTRACT_32BITS(obj_tptr + 4)) >> 24));"
    },
    {
        "line": 1120,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr)));"
    },
    {
        "line": 444,
        "fullcodeline": "*(obj_tptr+6),"
    },
    {
        "line": 459,
        "fullcodeline": "*(obj_tptr+2),"
    },
    {
        "line": 462,
        "fullcodeline": "*(obj_tptr+3) + 256*RSVP_OBJ_RRO),"
    },
    {
        "line": 463,
        "fullcodeline": "*(obj_tptr+3),"
    },
    {
        "line": 600,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 447,
        "fullcodeline": "*(obj_tptr + 7)))); /* rfc3209 says that this field is rsvd. */"
    },
    {
        "line": 458,
        "fullcodeline": "*(obj_tptr+2)),"
    },
    {
        "line": 587,
        "fullcodeline": "return -1;"
    },
    {
        "line": 589,
        "fullcodeline": "ident, ipaddr_string(ndo, obj_tptr + 4)));"
    },
    {
        "line": 593,
        "fullcodeline": "return -1;"
    },
    {
        "line": 595,
        "fullcodeline": "ident, ip6addr_string(ndo, obj_tptr + 4)));"
    }
]