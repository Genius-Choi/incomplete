[
    {
        "line": 7,
        "fullcodeline": "init_stream(c->in_s, c->in_s->size);"
    },
    {
        "line": 8,
        "fullcodeline": "init_stream(c->out_s, c->in_s->size);"
    },
    {
        "line": 10,
        "fullcodeline": "LOG_DBG(\"[v0:%d] starting connection\", __LINE__);"
    },
    {
        "line": 11,
        "fullcodeline": "g_tcp_set_non_blocking(c->in_sck);"
    },
    {
        "line": 12,
        "fullcodeline": "g_tcp_set_no_delay(c->in_sck);"
    },
    {
        "line": 13,
        "fullcodeline": "s_push_layer(c->out_s, channel_hdr, 8);"
    },
    {
        "line": 34,
        "fullcodeline": "sz = g_strlen(s->username);"
    },
    {
        "line": 35,
        "fullcodeline": "out_uint16_be(c->out_s, sz);"
    },
    {
        "line": 36,
        "fullcodeline": "out_uint8a(c->out_s, s->username, sz);"
    },
    {
        "line": 38,
        "fullcodeline": "sz = g_strlen(s->password);"
    },
    {
        "line": 39,
        "fullcodeline": "out_uint16_be(c->out_s, sz);"
    },
    {
        "line": 40,
        "fullcodeline": "out_uint8a(c->out_s, s->password, sz);"
    },
    {
        "line": 41,
        "fullcodeline": "out_uint16_be(c->out_s, s->width);"
    },
    {
        "line": 42,
        "fullcodeline": "out_uint16_be(c->out_s, s->height);"
    },
    {
        "line": 43,
        "fullcodeline": "out_uint16_be(c->out_s, s->bpp);"
    },
    {
        "line": 45,
        "fullcodeline": "s_mark_end(c->out_s);"
    },
    {
        "line": 46,
        "fullcodeline": "s_pop_layer(c->out_s, channel_hdr);"
    },
    {
        "line": 49,
        "fullcodeline": "out_uint32_be(c->out_s, 0);"
    },
    {
        "line": 51,
        "fullcodeline": "out_uint32_be(c->out_s, c->out_s->end - c->out_s->data);"
    },
    {
        "line": 65,
        "fullcodeline": "in_uint32_be(c->in_s, version);"
    },
    {
        "line": 73,
        "fullcodeline": "in_uint32_be(c->in_s, size);"
    },
    {
        "line": 82,
        "fullcodeline": "init_stream(c->in_s, c->in_s->size);"
    },
    {
        "line": 91,
        "fullcodeline": "in_uint16_be(c->in_s, sz);"
    },
    {
        "line": 100,
        "fullcodeline": "in_uint16_be(c->in_s, sz);"
    },
    {
        "line": 108,
        "fullcodeline": "in_uint16_be(c->in_s, sz);"
    },
    {
        "line": 109,
        "fullcodeline": "s->display = sz;"
    },
    {
        "line": 111,
        "fullcodeline": "LOG_DBG(\"[v0:%d] connection terminated\", __LINE__);"
    },
    {
        "line": 16,
        "fullcodeline": "if (s->type == SCP_SESSION_TYPE_XVNC)"
    },
    {
        "line": 53,
        "fullcodeline": "if (0 != scp_tcp_force_send(c->in_sck, c->out_s->data, c->out_s->end - c->out_s->data))"
    },
    {
        "line": 59,
        "fullcodeline": "if (0 != scp_tcp_force_recv(c->in_sck, c->in_s->data, 8))"
    },
    {
        "line": 67,
        "fullcodeline": "if (0 != version)"
    },
    {
        "line": 75,
        "fullcodeline": "if (size < 14)"
    },
    {
        "line": 84,
        "fullcodeline": "if (0 != scp_tcp_force_recv(c->in_sck, c->in_s->data, size - 8))"
    },
    {
        "line": 93,
        "fullcodeline": "if (3 != sz)"
    },
    {
        "line": 102,
        "fullcodeline": "if (1 != sz)"
    },
    {
        "line": 18,
        "fullcodeline": "out_uint16_be(c->out_s, 0);"
    },
    {
        "line": 55,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: network error\", __LINE__);"
    },
    {
        "line": 61,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: network error\", __LINE__);"
    },
    {
        "line": 69,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: version error\", __LINE__);"
    },
    {
        "line": 77,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: packet size error\", __LINE__);"
    },
    {
        "line": 86,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: network error\", __LINE__);"
    },
    {
        "line": 95,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: sequence error\", __LINE__);"
    },
    {
        "line": 104,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: connection denied\", __LINE__);"
    },
    {
        "line": 20,
        "fullcodeline": "else if (s->type == SCP_SESSION_TYPE_XRDP)"
    },
    {
        "line": 22,
        "fullcodeline": "out_uint16_be(c->out_s, 10);"
    },
    {
        "line": 24,
        "fullcodeline": "else if (s->type == SCP_SESSION_TYPE_XORG)"
    },
    {
        "line": 26,
        "fullcodeline": "out_uint16_be(c->out_s, 20);"
    },
    {
        "line": 30,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: network error\", __LINE__);"
    }
]