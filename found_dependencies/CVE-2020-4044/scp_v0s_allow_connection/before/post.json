[
    {
        "line": 5,
        "fullcodeline": "msg_size = guid == 0 ? 14 : 14 + 16;"
    },
    {
        "line": 6,
        "fullcodeline": "out_uint32_be(c->out_s, 0);  /* version */"
    },
    {
        "line": 7,
        "fullcodeline": "out_uint32_be(c->out_s, msg_size); /* size */"
    },
    {
        "line": 8,
        "fullcodeline": "out_uint16_be(c->out_s, 3);  /* cmd */"
    },
    {
        "line": 9,
        "fullcodeline": "out_uint16_be(c->out_s, 1);  /* data */"
    },
    {
        "line": 10,
        "fullcodeline": "out_uint16_be(c->out_s, d);  /* data */"
    },
    {
        "line": 15,
        "fullcodeline": "s_mark_end(c->out_s);"
    },
    {
        "line": 23,
        "fullcodeline": "LOG_DBG(\"[v0:%d] connection terminated (allowed)\", __LINE__);"
    },
    {
        "line": 11,
        "fullcodeline": "if (msg_size > 14)"
    },
    {
        "line": 17,
        "fullcodeline": "if (0 != scp_tcp_force_send(c->in_sck, c->out_s->data, c->out_s->end - c->out_s->data))"
    },
    {
        "line": 13,
        "fullcodeline": "out_uint8a(c->out_s, guid, 16);"
    },
    {
        "line": 19,
        "fullcodeline": "log_message(LOG_LEVEL_WARNING, \"[v0:%d] connection aborted: network error\", __LINE__);"
    }
]