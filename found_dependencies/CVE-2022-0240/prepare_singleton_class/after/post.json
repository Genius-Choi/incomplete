[
    {
        "line": 5,
        "fullcodeline": "mrb_assert(o->c);"
    },
    {
        "line": 7,
        "fullcodeline": "sc = MRB_OBJ_ALLOC(mrb, MRB_TT_SCLASS, mrb->class_class);"
    },
    {
        "line": 8,
        "fullcodeline": "sc->flags |= MRB_FL_CLASS_IS_INHERITED;"
    },
    {
        "line": 9,
        "fullcodeline": "sc->mt = mt_new(mrb);"
    },
    {
        "line": 10,
        "fullcodeline": "sc->iv = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "o->c = sc;"
    },
    {
        "line": 32,
        "fullcodeline": "mrb_field_write_barrier(mrb, (struct RBasic*)o, (struct RBasic*)sc);"
    },
    {
        "line": 33,
        "fullcodeline": "mrb_field_write_barrier(mrb, (struct RBasic*)sc, (struct RBasic*)o);"
    },
    {
        "line": 34,
        "fullcodeline": "mrb_obj_iv_set(mrb, (struct RObject*)sc, MRB_SYM(__attached__), mrb_obj_value(o));"
    },
    {
        "line": 35,
        "fullcodeline": "sc->flags |= o->flags & MRB_FL_OBJ_IS_FROZEN;"
    },
    {
        "line": 6,
        "fullcodeline": "if (o->c->tt == MRB_TT_SCLASS) return;"
    },
    {
        "line": 11,
        "fullcodeline": "if (o->tt == MRB_TT_CLASS) {"
    },
    {
        "line": 12,
        "fullcodeline": "c = (struct RClass*)o;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!c->super) {"
    },
    {
        "line": 14,
        "fullcodeline": "sc->super = mrb->class_class;"
    },
    {
        "line": 20,
        "fullcodeline": "else if (o->tt == MRB_TT_SCLASS) {"
    },
    {
        "line": 21,
        "fullcodeline": "c = (struct RClass*)o;"
    },
    {
        "line": 24,
        "fullcodeline": "make_metaclass(mrb, c->super);"
    },
    {
        "line": 22,
        "fullcodeline": "while (c->super->tt == MRB_TT_ICLASS)"
    },
    {
        "line": 23,
        "fullcodeline": "c = c->super;"
    },
    {
        "line": 28,
        "fullcodeline": "sc->super = o->c;"
    },
    {
        "line": 29,
        "fullcodeline": "prepare_singleton_class(mrb, (struct RBasic*)sc);"
    }
]