[
    {
        "line": 2,
        "fullcodeline": "input_languages = languages.split(',')"
    },
    {
        "line": 3,
        "fullcodeline": "unknown_languages = []"
    },
    {
        "line": 22,
        "fullcodeline": "input_l = helper.uniq(input_l)"
    },
    {
        "line": 4,
        "fullcodeline": "if not upload_mode:"
    },
    {
        "line": 8,
        "fullcodeline": "for lang in unknown_languages:"
    },
    {
        "line": 15,
        "fullcodeline": "if upload_mode and len(input_l) == 1:"
    },
    {
        "line": 23,
        "fullcodeline": "return modify_database_object(input_l, book.languages, db.Languages, calibre_db.session, 'languages')"
    },
    {
        "line": 5,
        "fullcodeline": "input_l = isoLanguages.get_language_codes(get_locale(), input_languages, unknown_languages)"
    },
    {
        "line": 7,
        "fullcodeline": "input_l = isoLanguages.get_valid_language_codes(get_locale(), input_languages, unknown_languages)"
    },
    {
        "line": 9,
        "fullcodeline": "log.error(\"'%s' is not a valid language\", lang)"
    },
    {
        "line": 18,
        "fullcodeline": "if input_l[0] != current_user.filter_language() and current_user.filter_language() != \"all\":"
    },
    {
        "line": 10,
        "fullcodeline": "if isinstance(invalid, list):"
    },
    {
        "line": 19,
        "fullcodeline": "input_l[0] = calibre_db.session.query(db.Languages). \\"
    },
    {
        "line": 11,
        "fullcodeline": "invalid.append(lang)"
    },
    {
        "line": 13,
        "fullcodeline": "raise ValueError(_(u\"'%(langname)s' is not a valid language\", langname=lang))"
    },
    {
        "line": 20,
        "fullcodeline": "filter(db.Languages.lang_code == current_user.filter_language()).first().lang_code"
    }
]