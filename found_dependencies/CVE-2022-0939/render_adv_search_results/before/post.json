[
    {
        "line": 2,
        "fullcodeline": "sort_param = order[0] if order else [db.Books.sort]"
    },
    {
        "line": 3,
        "fullcodeline": "pagination = None"
    },
    {
        "line": 5,
        "fullcodeline": "cc = get_cc_columns(filter_config_custom_read=True)"
    },
    {
        "line": 21,
        "fullcodeline": "query = query.outerjoin(ub.ArchivedBook, and_(db.Books.id == ub.ArchivedBook.book_id,"
    },
    {
        "line": 24,
        "fullcodeline": "q = query.outerjoin(db.books_series_link, db.Books.id == db.books_series_link.c.book)\\"
    },
    {
        "line": 29,
        "fullcodeline": "tags = dict()"
    },
    {
        "line": 30,
        "fullcodeline": "elements = ['tag', 'serie', 'shelf', 'language', 'extension']"
    },
    {
        "line": 35,
        "fullcodeline": "author_name = term.get(\"author_name\")"
    },
    {
        "line": 36,
        "fullcodeline": "book_title = term.get(\"book_title\")"
    },
    {
        "line": 37,
        "fullcodeline": "publisher = term.get(\"publisher\")"
    },
    {
        "line": 38,
        "fullcodeline": "pub_start = term.get(\"publishstart\")"
    },
    {
        "line": 39,
        "fullcodeline": "pub_end = term.get(\"publishend\")"
    },
    {
        "line": 40,
        "fullcodeline": "rating_low = term.get(\"ratinghigh\")"
    },
    {
        "line": 41,
        "fullcodeline": "rating_high = term.get(\"ratinglow\")"
    },
    {
        "line": 42,
        "fullcodeline": "description = term.get(\"comment\")"
    },
    {
        "line": 43,
        "fullcodeline": "read_status = term.get(\"read_status\")"
    },
    {
        "line": 51,
        "fullcodeline": "searchterm = []"
    },
    {
        "line": 52,
        "fullcodeline": "cc_present = False"
    },
    {
        "line": 117,
        "fullcodeline": "q = q.order_by(*sort_param).all()"
    },
    {
        "line": 118,
        "fullcodeline": "flask_session['query'] = json.dumps(term)"
    },
    {
        "line": 119,
        "fullcodeline": "ub.store_combo_ids(q)"
    },
    {
        "line": 120,
        "fullcodeline": "result_count = len(q)"
    },
    {
        "line": 128,
        "fullcodeline": "entries = calibre_db.order_authors(q[offset:limit_all], list_return=True, combined=True)"
    },
    {
        "line": 6,
        "fullcodeline": "calibre_db.session.connection().connection.connection.create_function(\"lower\", 1, db.lcase)"
    },
    {
        "line": 31,
        "fullcodeline": "for element in elements:"
    },
    {
        "line": 53,
        "fullcodeline": "for c in cc:"
    },
    {
        "line": 76,
        "fullcodeline": "if any(tags.values()) or author_name or book_title or publisher or pub_start or pub_end or rating_low \\"
    },
    {
        "line": 121,
        "fullcodeline": "if offset is not None and limit is not None:"
    },
    {
        "line": 129,
        "fullcodeline": "return render_title_template('search.html',"
    },
    {
        "line": 8,
        "fullcodeline": "query = (calibre_db.session.query(db.Books, ub.ArchivedBook.is_archived, ub.ReadBook).select_from(db.Books)"
    },
    {
        "line": 45,
        "fullcodeline": "author_name = author_name.strip().lower().replace(',', '|')"
    },
    {
        "line": 47,
        "fullcodeline": "book_title = book_title.strip().lower()"
    },
    {
        "line": 49,
        "fullcodeline": "publisher = publisher.strip().lower()"
    },
    {
        "line": 97,
        "fullcodeline": "q = adv_search_read_status(q, read_status)"
    },
    {
        "line": 100,
        "fullcodeline": "q = adv_search_tag(q, tags['include_tag'], tags['exclude_tag'])"
    },
    {
        "line": 101,
        "fullcodeline": "q = adv_search_serie(q, tags['include_serie'], tags['exclude_serie'])"
    },
    {
        "line": 102,
        "fullcodeline": "q = adv_search_shelf(q, tags['include_shelf'], tags['exclude_shelf'])"
    },
    {
        "line": 103,
        "fullcodeline": "q = adv_search_extension(q, tags['include_extension'], tags['exclude_extension'])"
    },
    {
        "line": 104,
        "fullcodeline": "q = adv_search_language(q, tags['include_language'], tags['exclude_language'])"
    },
    {
        "line": 105,
        "fullcodeline": "q = adv_search_ratings(q, rating_high, rating_low)"
    },
    {
        "line": 122,
        "fullcodeline": "offset = int(offset)"
    },
    {
        "line": 123,
        "fullcodeline": "limit_all = offset + int(limit)"
    },
    {
        "line": 124,
        "fullcodeline": "pagination = Pagination((offset / (int(limit)) + 1), limit, result_count)"
    },
    {
        "line": 126,
        "fullcodeline": "offset = 0"
    },
    {
        "line": 127,
        "fullcodeline": "limit_all = result_count"
    },
    {
        "line": 134,
        "fullcodeline": "title=_(u\"Advanced Search\"), page=\"advsearch\","
    },
    {
        "line": 22,
        "fullcodeline": "int(current_user.id) == ub.ArchivedBook.user_id))"
    },
    {
        "line": 26,
        "fullcodeline": ".filter(calibre_db.common_filters(True))"
    },
    {
        "line": 32,
        "fullcodeline": "tags['include_' + element] = term.get('include_' + element)"
    },
    {
        "line": 33,
        "fullcodeline": "tags['exclude_' + element] = term.get('exclude_' + element)"
    },
    {
        "line": 78,
        "fullcodeline": "searchterm, pub_start, pub_end = extend_search_term(searchterm,"
    },
    {
        "line": 13,
        "fullcodeline": "read_column = cc[config.config_read_column]"
    },
    {
        "line": 14,
        "fullcodeline": "query = (calibre_db.session.query(db.Books, ub.ArchivedBook.is_archived, read_column.value)"
    },
    {
        "line": 54,
        "fullcodeline": "if c.datatype == \"datetime\":"
    },
    {
        "line": 90,
        "fullcodeline": "q = q.filter(db.Books.authors.any(func.lower(db.Authors.name).ilike(\"%\" + author_name + \"%\")))"
    },
    {
        "line": 92,
        "fullcodeline": "q = q.filter(func.lower(db.Books.title).ilike(\"%\" + book_title + \"%\"))"
    },
    {
        "line": 94,
        "fullcodeline": "q = q.filter(func.datetime(db.Books.pubdate) > func.datetime(pub_start))"
    },
    {
        "line": 96,
        "fullcodeline": "q = q.filter(func.datetime(db.Books.pubdate) < func.datetime(pub_end))"
    },
    {
        "line": 99,
        "fullcodeline": "q = q.filter(db.Books.publishers.any(func.lower(db.Publishers.name).ilike(\"%\" + publisher + \"%\")))"
    },
    {
        "line": 108,
        "fullcodeline": "q = q.filter(db.Books.comments.any(func.lower(db.Comments.text).ilike(\"%\" + description + \"%\")))"
    },
    {
        "line": 112,
        "fullcodeline": "q = adv_search_custom_columns(cc, term, q)"
    },
    {
        "line": 9,
        "fullcodeline": ".outerjoin(ub.ReadBook, and_(db.Books.id == ub.ReadBook.book_id,"
    },
    {
        "line": 55,
        "fullcodeline": "column_start = term.get('custom_column_' + str(c.id) + '_start')"
    },
    {
        "line": 56,
        "fullcodeline": "column_end = term.get('custom_column_' + str(c.id) + '_end')"
    },
    {
        "line": 10,
        "fullcodeline": "int(current_user.id) == ub.ReadBook.user_id)))"
    },
    {
        "line": 18,
        "fullcodeline": "log.error(\"Custom Column No.%d is not existing in calibre database\", config.config_read_column)"
    },
    {
        "line": 20,
        "fullcodeline": "query = calibre_db.session.query(db.Books, ub.ArchivedBook.is_archived, None)"
    },
    {
        "line": 71,
        "fullcodeline": "elif term.get('custom_column_' + str(c.id)):"
    },
    {
        "line": 114,
        "fullcodeline": "log.error_or_exception(ex)"
    },
    {
        "line": 115,
        "fullcodeline": "flash(_(\"Error on search for custom columns, please restart Calibre-Web\"), category=\"error\")"
    },
    {
        "line": 16,
        "fullcodeline": ".outerjoin(read_column, read_column.book == db.Books.id))"
    },
    {
        "line": 58,
        "fullcodeline": "searchterm.extend([u\"{} >= {}\".format(c.name,"
    },
    {
        "line": 63,
        "fullcodeline": "cc_present = True"
    },
    {
        "line": 65,
        "fullcodeline": "searchterm.extend([u\"{} <= {}\".format(c.name,"
    },
    {
        "line": 70,
        "fullcodeline": "cc_present = True"
    },
    {
        "line": 72,
        "fullcodeline": "searchterm.extend([(u\"{}: {}\".format(c.name, term.get('custom_column_' + str(c.id))))])"
    },
    {
        "line": 73,
        "fullcodeline": "cc_present = True"
    },
    {
        "line": 59,
        "fullcodeline": "format_date(datetime.strptime(column_start, \"%Y-%m-%d\").date(),"
    },
    {
        "line": 66,
        "fullcodeline": "format_date(datetime.strptime(column_end, \"%Y-%m-%d\").date(),"
    }
]