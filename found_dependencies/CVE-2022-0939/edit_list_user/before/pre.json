[
    {
        "line": 2,
        "fullcodeline": "vals = request.form.to_dict(flat=False)"
    },
    {
        "line": 3,
        "fullcodeline": "all_user = ub.session.query(ub.User)"
    },
    {
        "line": 4,
        "fullcodeline": "if not config.config_anonbrowse:"
    },
    {
        "line": 7,
        "fullcodeline": "if \"pk\" in vals:"
    },
    {
        "line": 14,
        "fullcodeline": "if 'field_index' in vals:"
    },
    {
        "line": 16,
        "fullcodeline": "if 'value' in vals:"
    },
    {
        "line": 20,
        "fullcodeline": "for user in users:"
    },
    {
        "line": 5,
        "fullcodeline": "all_user = all_user.filter(ub.User.role.op('&')(constants.ROLE_ANONYMOUS) != constants.ROLE_ANONYMOUS)"
    },
    {
        "line": 8,
        "fullcodeline": "users = [all_user.filter(ub.User.id == vals['pk'][0]).one_or_none()]"
    },
    {
        "line": 15,
        "fullcodeline": "vals['field_index'] = vals['field_index'][0]"
    },
    {
        "line": 17,
        "fullcodeline": "vals['value'] = vals['value'][0]"
    },
    {
        "line": 10,
        "fullcodeline": "if \"pk[]\" in vals:"
    },
    {
        "line": 11,
        "fullcodeline": "users = all_user.filter(ub.User.id.in_(vals['pk[]'])).all()"
    },
    {
        "line": 18,
        "fullcodeline": "elif not ('value[]' in vals):"
    },
    {
        "line": 13,
        "fullcodeline": "return _(\"Malformed request\"), 400"
    },
    {
        "line": 19,
        "fullcodeline": "return _(\"Malformed request\"), 400"
    },
    {
        "line": 22,
        "fullcodeline": "if param in ['denied_tags', 'allowed_tags', 'allowed_column_value', 'denied_column_value']:"
    },
    {
        "line": 28,
        "fullcodeline": "vals['value'] = vals['value'].strip()"
    },
    {
        "line": 97,
        "fullcodeline": "log.error_or_exception(ex)"
    },
    {
        "line": 23,
        "fullcodeline": "if 'value[]' in vals:"
    },
    {
        "line": 29,
        "fullcodeline": "if param == 'name':"
    },
    {
        "line": 98,
        "fullcodeline": "return str(ex), 400"
    },
    {
        "line": 24,
        "fullcodeline": "setattr(user, param, prepare_tags(user, vals['action'][0], param, vals['value[]']))"
    },
    {
        "line": 26,
        "fullcodeline": "setattr(user, param, vals['value'].strip())"
    },
    {
        "line": 32,
        "fullcodeline": "user.name = check_username(vals['value'])"
    },
    {
        "line": 33,
        "fullcodeline": "elif param == 'email':"
    },
    {
        "line": 31,
        "fullcodeline": "raise Exception(_(\"Guest Name can't be changed\"))"
    },
    {
        "line": 34,
        "fullcodeline": "user.email = check_email(vals['value'])"
    },
    {
        "line": 35,
        "fullcodeline": "elif param == 'kobo_only_shelves_sync':"
    },
    {
        "line": 36,
        "fullcodeline": "user.kobo_only_shelves_sync = int(vals['value'] == 'true')"
    },
    {
        "line": 37,
        "fullcodeline": "elif param == 'kindle_mail':"
    },
    {
        "line": 39,
        "fullcodeline": "elif param.endswith('role'):"
    },
    {
        "line": 38,
        "fullcodeline": "user.kindle_mail = valid_email(vals['value']) if vals['value'] else \"\""
    },
    {
        "line": 40,
        "fullcodeline": "value = int(vals['field_index'])"
    },
    {
        "line": 45,
        "fullcodeline": "if value > 0 and value <= constants.ROLE_VIEWER and (value & value-1 == 0 or value == 1):"
    },
    {
        "line": 62,
        "fullcodeline": "elif param.startswith('sidebar'):"
    },
    {
        "line": 41,
        "fullcodeline": "if user.name == \"Guest\" and value in \\"
    },
    {
        "line": 63,
        "fullcodeline": "value = int(vals['field_index'])"
    },
    {
        "line": 42,
        "fullcodeline": "[constants.ROLE_ADMIN, constants.ROLE_PASSWD, constants.ROLE_EDIT_SHELFS]:"
    },
    {
        "line": 43,
        "fullcodeline": "raise Exception(_(\"Guest can't have this role\"))"
    },
    {
        "line": 46,
        "fullcodeline": "if vals['value'] == 'true':"
    },
    {
        "line": 61,
        "fullcodeline": "raise Exception(_(\"Invalid role\"))"
    },
    {
        "line": 67,
        "fullcodeline": "if value > 0 and value <= constants.SIDEBAR_LIST and (value & value-1 == 0 or value == 1):"
    },
    {
        "line": 76,
        "fullcodeline": "elif param == 'locale':"
    },
    {
        "line": 64,
        "fullcodeline": "if user.name == \"Guest\" and value == constants.SIDEBAR_READ_AND_UNREAD:"
    },
    {
        "line": 48,
        "fullcodeline": "elif vals['value'] == 'false':"
    },
    {
        "line": 65,
        "fullcodeline": "raise Exception(_(\"Guest can't have this view\"))"
    },
    {
        "line": 68,
        "fullcodeline": "if vals['value'] == 'true':"
    },
    {
        "line": 75,
        "fullcodeline": "raise Exception(_(\"Invalid view\"))"
    },
    {
        "line": 79,
        "fullcodeline": "if vals['value'] in _BABEL_TRANSLATIONS:"
    },
    {
        "line": 83,
        "fullcodeline": "elif param == 'default_language':"
    },
    {
        "line": 84,
        "fullcodeline": "languages = calibre_db.session.query(db.Languages) \\"
    },
    {
        "line": 89,
        "fullcodeline": "lang_codes = [lang.lang_code for lang in languages] + [\"all\"]"
    },
    {
        "line": 49,
        "fullcodeline": "if value == constants.ROLE_ADMIN:"
    },
    {
        "line": 57,
        "fullcodeline": "user.role &= ~value"
    },
    {
        "line": 59,
        "fullcodeline": "raise Exception(_(\"Value has to be true or false\"))"
    },
    {
        "line": 70,
        "fullcodeline": "elif vals['value'] == 'false':"
    },
    {
        "line": 78,
        "fullcodeline": "raise Exception(_(\"Guest's Locale is determined automatically and can't be set\"))"
    },
    {
        "line": 82,
        "fullcodeline": "raise Exception(_(\"No Valid Locale Given\"))"
    },
    {
        "line": 90,
        "fullcodeline": "if vals['value'] in lang_codes:"
    },
    {
        "line": 95,
        "fullcodeline": "return _(\"Parameter not found\"), 400"
    },
    {
        "line": 71,
        "fullcodeline": "user.sidebar_view &= ~value"
    },
    {
        "line": 73,
        "fullcodeline": "raise Exception(_(\"Value has to be true or false\"))"
    },
    {
        "line": 93,
        "fullcodeline": "raise Exception(_(\"No Valid Book Language Given\"))"
    },
    {
        "line": 50,
        "fullcodeline": "if not ub.session.query(ub.User).\\"
    },
    {
        "line": 53,
        "fullcodeline": "return Response("
    },
    {
        "line": 88,
        "fullcodeline": ".group_by(text('books_languages_link.lang_code')).all()"
    },
    {
        "line": 54,
        "fullcodeline": "json.dumps([{'type': \"danger\","
    },
    {
        "line": 87,
        "fullcodeline": ".filter(calibre_db.common_filters()) \\"
    },
    {
        "line": 51,
        "fullcodeline": "filter(ub.User.role.op('&')(constants.ROLE_ADMIN) == constants.ROLE_ADMIN,"
    },
    {
        "line": 52,
        "fullcodeline": "ub.User.id != user.id).count():"
    },
    {
        "line": 55,
        "fullcodeline": "'message': _(u\"No admin user remaining, can't remove admin role\","
    }
]