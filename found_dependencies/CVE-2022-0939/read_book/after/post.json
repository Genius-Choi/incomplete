[
    {
        "line": 2,
        "fullcodeline": "book = calibre_db.get_filtered_book(book_id)"
    },
    {
        "line": 3,
        "fullcodeline": "book.ordered_authors = calibre_db.order_authors([book], False)"
    },
    {
        "line": 12,
        "fullcodeline": "bookmark = None"
    },
    {
        "line": 5,
        "fullcodeline": "if not book:"
    },
    {
        "line": 17,
        "fullcodeline": "if book_format.lower() == \"epub\":"
    },
    {
        "line": 6,
        "fullcodeline": "flash(_(u\"Oops! Selected book title is unavailable. File does not exist or is not accessible\"),"
    },
    {
        "line": 8,
        "fullcodeline": "log.debug(u\"Oops! Selected book title is unavailable. File does not exist or is not accessible\")"
    },
    {
        "line": 14,
        "fullcodeline": "bookmark = ub.session.query(ub.Bookmark).filter(and_(ub.Bookmark.user_id == int(current_user.id),"
    },
    {
        "line": 18,
        "fullcodeline": "log.debug(u\"Start epub reader for %d\", book_id)"
    },
    {
        "line": 9,
        "fullcodeline": "return redirect(url_for(\"web.index\"))"
    },
    {
        "line": 19,
        "fullcodeline": "return render_title_template('read.html', bookid=book_id, title=book.title, bookmark=bookmark)"
    },
    {
        "line": 20,
        "fullcodeline": "elif book_format.lower() == \"pdf\":"
    },
    {
        "line": 21,
        "fullcodeline": "log.debug(u\"Start pdf reader for %d\", book_id)"
    },
    {
        "line": 22,
        "fullcodeline": "return render_title_template('readpdf.html', pdffile=book_id, title=book.title)"
    },
    {
        "line": 23,
        "fullcodeline": "elif book_format.lower() == \"txt\":"
    },
    {
        "line": 24,
        "fullcodeline": "log.debug(u\"Start txt reader for %d\", book_id)"
    },
    {
        "line": 25,
        "fullcodeline": "return render_title_template('readtxt.html', txtfile=book_id, title=book.title)"
    },
    {
        "line": 26,
        "fullcodeline": "elif book_format.lower() == \"djvu\":"
    },
    {
        "line": 15,
        "fullcodeline": "ub.Bookmark.book_id == book_id,"
    },
    {
        "line": 16,
        "fullcodeline": "ub.Bookmark.format == book_format.upper())).first()"
    },
    {
        "line": 27,
        "fullcodeline": "log.debug(u\"Start djvu reader for %d\", book_id)"
    },
    {
        "line": 47,
        "fullcodeline": "log.debug(u\"Oops! Selected book title is unavailable. File does not exist or is not accessible\")"
    },
    {
        "line": 48,
        "fullcodeline": "flash(_(u\"Oops! Selected book title is unavailable. File does not exist or is not accessible\"),"
    },
    {
        "line": 28,
        "fullcodeline": "return render_title_template('readdjvu.html', djvufile=book_id, title=book.title)"
    },
    {
        "line": 30,
        "fullcodeline": "for fileExt in constants.EXTENSIONS_AUDIO:"
    },
    {
        "line": 36,
        "fullcodeline": "for fileExt in [\"cbr\", \"cbt\", \"cbz\"]:"
    },
    {
        "line": 50,
        "fullcodeline": "return redirect(url_for(\"web.index\"))"
    },
    {
        "line": 31,
        "fullcodeline": "if book_format.lower() == fileExt:"
    },
    {
        "line": 37,
        "fullcodeline": "if book_format.lower() == fileExt:"
    },
    {
        "line": 32,
        "fullcodeline": "entries = calibre_db.get_filtered_book(book_id)"
    },
    {
        "line": 33,
        "fullcodeline": "log.debug(u\"Start mp3 listening for %d\", book_id)"
    },
    {
        "line": 38,
        "fullcodeline": "all_name = str(book_id)"
    },
    {
        "line": 39,
        "fullcodeline": "title = book.title"
    },
    {
        "line": 44,
        "fullcodeline": "log.debug(u\"Start comic reader for %d\", book_id)"
    },
    {
        "line": 34,
        "fullcodeline": "return render_title_template('listenmp3.html', mp3file=book_id, audioformat=book_format.lower(),"
    },
    {
        "line": 40,
        "fullcodeline": "if len(book.series):"
    },
    {
        "line": 45,
        "fullcodeline": "return render_title_template('readcbr.html', comicfile=all_name, title=title,"
    },
    {
        "line": 41,
        "fullcodeline": "title = title + \" - \" + book.series[0].name"
    },
    {
        "line": 43,
        "fullcodeline": "title = title + \" #\" + '{0:.2f}'.format(book.series_index).rstrip('0').rstrip('.')"
    }
]