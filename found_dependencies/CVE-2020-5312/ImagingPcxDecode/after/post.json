[
    {
        "line": 14,
        "fullcodeline": "ptr = buf;"
    },
    {
        "line": 6,
        "fullcodeline": "if (strcmp(im->mode, \"1\") == 0 && state->xsize > state->bytes * 8) {"
    },
    {
        "line": 7,
        "fullcodeline": "state->errcode = IMAGING_CODEC_OVERRUN;"
    },
    {
        "line": 8,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "if (bytes < 1)"
    },
    {
        "line": 21,
        "fullcodeline": "if ((*ptr & 0xC0) == 0xC0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (state->x >= state->bytes) {"
    },
    {
        "line": 9,
        "fullcodeline": "} else if (strcmp(im->mode, \"P\") == 0 && state->xsize > state->bytes) {"
    },
    {
        "line": 27,
        "fullcodeline": "n = ptr[0] & 0x3F;"
    },
    {
        "line": 38,
        "fullcodeline": "ptr += 2; bytes -= 2;"
    },
    {
        "line": 60,
        "fullcodeline": "state->shuffle((UINT8*) im->image[state->y + state->yoff] +"
    },
    {
        "line": 64,
        "fullcodeline": "state->x = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "state->errcode = IMAGING_CODEC_OVERRUN;"
    },
    {
        "line": 19,
        "fullcodeline": "return ptr - buf;"
    },
    {
        "line": 24,
        "fullcodeline": "if (bytes < 2)"
    },
    {
        "line": 29,
        "fullcodeline": "while (n > 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "state->buffer[state->x++] = ptr[0];"
    },
    {
        "line": 44,
        "fullcodeline": "ptr++; bytes--;"
    },
    {
        "line": 49,
        "fullcodeline": "if (state->bytes % state->xsize && state->bytes > state->xsize) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (++state->y >= state->ysize) {"
    },
    {
        "line": 11,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "state->buffer[state->x++] = ptr[1];"
    },
    {
        "line": 35,
        "fullcodeline": "n--;"
    },
    {
        "line": 50,
        "fullcodeline": "int bands = state->bytes / state->xsize;"
    },
    {
        "line": 51,
        "fullcodeline": "int stride = state->bytes / bands;"
    },
    {
        "line": 61,
        "fullcodeline": "state->xoff * im->pixelsize, state->buffer,"
    },
    {
        "line": 25,
        "fullcodeline": "return ptr - buf;"
    },
    {
        "line": 30,
        "fullcodeline": "if (state->x >= state->bytes) {"
    },
    {
        "line": 53,
        "fullcodeline": "for (i=1; i< bands; i++) {  // note -- skipping first band"
    },
    {
        "line": 68,
        "fullcodeline": "return -1;"
    },
    {
        "line": 31,
        "fullcodeline": "state->errcode = IMAGING_CODEC_OVERRUN;"
    },
    {
        "line": 54,
        "fullcodeline": "memmove(&state->buffer[i*state->xsize],"
    },
    {
        "line": 55,
        "fullcodeline": "&state->buffer[i*stride],"
    }
]