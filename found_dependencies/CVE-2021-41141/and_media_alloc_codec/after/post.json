[
    {
        "line": 11,
        "fullcodeline": "PJ_ASSERT_RETURN(factory && id && p_codec, PJ_EINVAL);"
    },
    {
        "line": 12,
        "fullcodeline": "PJ_ASSERT_RETURN(factory == &and_media_factory.base, PJ_EINVAL);"
    },
    {
        "line": 17,
        "fullcodeline": "idx = -1;"
    },
    {
        "line": 36,
        "fullcodeline": "pool = pjmedia_endpt_create_pool(and_media_factory.endpt, \"andmedaud%p\","
    },
    {
        "line": 38,
        "fullcodeline": "codec = PJ_POOL_ZALLOC_T(pool, pjmedia_codec);"
    },
    {
        "line": 39,
        "fullcodeline": "PJ_ASSERT_RETURN(codec != NULL, PJ_ENOMEM);"
    },
    {
        "line": 40,
        "fullcodeline": "codec->op = &and_media_op;"
    },
    {
        "line": 41,
        "fullcodeline": "codec->factory = factory;"
    },
    {
        "line": 42,
        "fullcodeline": "codec->codec_data = PJ_POOL_ZALLOC_T(pool, and_media_private_t);"
    },
    {
        "line": 43,
        "fullcodeline": "codec_data = (and_media_private_t*) codec->codec_data;"
    },
    {
        "line": 68,
        "fullcodeline": "codec_data->pool = pool;"
    },
    {
        "line": 69,
        "fullcodeline": "codec_data->codec_idx = idx;"
    },
    {
        "line": 71,
        "fullcodeline": "create_codec(codec_data);"
    },
    {
        "line": 75,
        "fullcodeline": "pj_mutex_unlock(and_media_factory.mutex);"
    },
    {
        "line": 77,
        "fullcodeline": "*p_codec = codec;"
    },
    {
        "line": 81,
        "fullcodeline": "pj_mutex_unlock(and_media_factory.mutex);"
    },
    {
        "line": 82,
        "fullcodeline": "and_media_dealloc_codec(factory, codec);"
    },
    {
        "line": 18,
        "fullcodeline": "for (i = 0; i < PJ_ARRAY_SIZE(and_media_codec); ++i) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (idx == -1) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!codec_data->enc || !codec_data->dec) {"
    },
    {
        "line": 19,
        "fullcodeline": "pj_str_t name = pj_str((char*)and_media_codec[i].name);"
    },
    {
        "line": 30,
        "fullcodeline": "*p_codec = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "pj_mutex_unlock(and_media_factory.mutex);"
    },
    {
        "line": 48,
        "fullcodeline": "status = pjmedia_plc_create(pool, and_media_codec[idx].clock_rate,"
    },
    {
        "line": 59,
        "fullcodeline": "status = pjmedia_silence_det_create(pool,"
    },
    {
        "line": 20,
        "fullcodeline": "if ((pj_stricmp(&id->encoding_name, &name) == 0) &&"
    },
    {
        "line": 51,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 25,
        "fullcodeline": "idx = i;"
    },
    {
        "line": 22,
        "fullcodeline": "(id->channel_cnt == (unsigned)and_media_codec[i].channel_count) &&"
    },
    {
        "line": 21,
        "fullcodeline": "(id->clock_rate == (unsigned)and_media_codec[i].clock_rate) &&"
    }
]