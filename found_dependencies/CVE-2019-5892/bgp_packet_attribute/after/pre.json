[
    {
        "line": 12,
        "fullcodeline": "int send_as4_path = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int send_as4_aggregator = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int use32bit = (CHECK_FLAG(peer->cap, PEER_CAP_AS4_RCV)) ? 1 : 0;"
    },
    {
        "line": 20,
        "fullcodeline": "cp = stream_get_endp(s);"
    },
    {
        "line": 36,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 37,
        "fullcodeline": "stream_putc(s, BGP_ATTR_ORIGIN);"
    },
    {
        "line": 38,
        "fullcodeline": "stream_putc(s, 1);"
    },
    {
        "line": 39,
        "fullcodeline": "stream_putc(s, attr->origin);"
    },
    {
        "line": 97,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN);"
    },
    {
        "line": 98,
        "fullcodeline": "stream_putc(s, BGP_ATTR_AS_PATH);"
    },
    {
        "line": 99,
        "fullcodeline": "aspath_sizep = stream_get_endp(s);"
    },
    {
        "line": 100,
        "fullcodeline": "stream_putw(s, 0);"
    },
    {
        "line": 101,
        "fullcodeline": "stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, use32bit));"
    },
    {
        "line": 16,
        "fullcodeline": "if (!bgp)"
    },
    {
        "line": 22,
        "fullcodeline": "if (p"
    },
    {
        "line": 44,
        "fullcodeline": "if (peer->sort == BGP_PEER_EBGP"
    },
    {
        "line": 106,
        "fullcodeline": "if (!use32bit && aspath_has_as4(aspath))"
    },
    {
        "line": 111,
        "fullcodeline": "if (afi == AFI_IP && safi == SAFI_UNICAST"
    },
    {
        "line": 142,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_MULTI_EXIT_DISC)"
    },
    {
        "line": 152,
        "fullcodeline": "if (peer->sort == BGP_PEER_IBGP || peer->sort == BGP_PEER_CONFED) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_ATOMIC_AGGREGATE)) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_AGGREGATOR)) {"
    },
    {
        "line": 198,
        "fullcodeline": "if (CHECK_FLAG(peer->af_flags[afi][safi], PEER_FLAG_SEND_COMMUNITY)"
    },
    {
        "line": 219,
        "fullcodeline": "if (CHECK_FLAG(peer->af_flags[afi][safi],"
    },
    {
        "line": 240,
        "fullcodeline": "if (peer->sort == BGP_PEER_IBGP && from"
    },
    {
        "line": 278,
        "fullcodeline": "if (CHECK_FLAG(peer->af_flags[afi][safi], PEER_FLAG_SEND_EXT_COMMUNITY)"
    },
    {
        "line": 351,
        "fullcodeline": "if (safi == SAFI_LABELED_UNICAST) {"
    },
    {
        "line": 397,
        "fullcodeline": "if (aspath != attr->aspath)"
    },
    {
        "line": 413,
        "fullcodeline": "if (((afi == AFI_IP || afi == AFI_IP6)"
    },
    {
        "line": 426,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_PMSI_TUNNEL)) {"
    },
    {
        "line": 443,
        "fullcodeline": "return stream_get_endp(s) - cp;"
    },
    {
        "line": 17,
        "fullcodeline": "bgp = peer->bgp;"
    },
    {
        "line": 23,
        "fullcodeline": "&& !((afi == AFI_IP && safi == SAFI_UNICAST)"
    },
    {
        "line": 25,
        "fullcodeline": "size_t mpattrlen_pos = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "mpattrlen_pos = bgp_packet_mpattr_start(s, peer, afi, safi,"
    },
    {
        "line": 29,
        "fullcodeline": "bgp_packet_mpattr_prefix(s, afi, safi, p, prd, label,"
    },
    {
        "line": 32,
        "fullcodeline": "bgp_packet_mpattr_end(s, mpattrlen_pos);"
    },
    {
        "line": 48,
        "fullcodeline": "&& (!CHECK_FLAG(peer->af_flags[afi][safi],"
    },
    {
        "line": 50,
        "fullcodeline": "aspath = aspath_dup(attr->aspath);"
    },
    {
        "line": 55,
        "fullcodeline": "aspath = aspath_delete_confed_seq(aspath);"
    },
    {
        "line": 107,
        "fullcodeline": "send_as4_path ="
    },
    {
        "line": 112,
        "fullcodeline": "&& !peer_cap_enhe(peer, afi, safi)) {"
    },
    {
        "line": 144,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL);"
    },
    {
        "line": 145,
        "fullcodeline": "stream_putc(s, BGP_ATTR_MULTI_EXIT_DISC);"
    },
    {
        "line": 146,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 147,
        "fullcodeline": "stream_putl(s, (bgp->maxmed_active ? bgp->maxmed_value"
    },
    {
        "line": 153,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 154,
        "fullcodeline": "stream_putc(s, BGP_ATTR_LOCAL_PREF);"
    },
    {
        "line": 155,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 156,
        "fullcodeline": "stream_putl(s, attr->local_pref);"
    },
    {
        "line": 161,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 162,
        "fullcodeline": "stream_putc(s, BGP_ATTR_ATOMIC_AGGREGATE);"
    },
    {
        "line": 163,
        "fullcodeline": "stream_putc(s, 0);"
    },
    {
        "line": 169,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 170,
        "fullcodeline": "stream_putc(s, BGP_ATTR_AGGREGATOR);"
    },
    {
        "line": 194,
        "fullcodeline": "stream_put_ipv4(s, attr->aggregator_addr.s_addr);"
    },
    {
        "line": 199,
        "fullcodeline": "&& (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_COMMUNITIES))) {"
    },
    {
        "line": 213,
        "fullcodeline": "stream_put(s, attr->community->val, attr->community->size * 4);"
    },
    {
        "line": 221,
        "fullcodeline": "&& (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_LARGE_COMMUNITIES))) {"
    },
    {
        "line": 235,
        "fullcodeline": "stream_put(s, attr->lcommunity->val,"
    },
    {
        "line": 241,
        "fullcodeline": "&& from->sort == BGP_PEER_IBGP) {"
    },
    {
        "line": 243,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL);"
    },
    {
        "line": 244,
        "fullcodeline": "stream_putc(s, BGP_ATTR_ORIGINATOR_ID);"
    },
    {
        "line": 245,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 253,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL);"
    },
    {
        "line": 254,
        "fullcodeline": "stream_putc(s, BGP_ATTR_CLUSTER_LIST);"
    },
    {
        "line": 279,
        "fullcodeline": "&& (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_EXT_COMMUNITIES))) {"
    },
    {
        "line": 386,
        "fullcodeline": "aspath = aspath_delete_confed_seq(aspath);"
    },
    {
        "line": 388,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 391,
        "fullcodeline": "stream_putc(s, BGP_ATTR_AS4_PATH);"
    },
    {
        "line": 392,
        "fullcodeline": "aspath_sizep = stream_get_endp(s);"
    },
    {
        "line": 393,
        "fullcodeline": "stream_putw(s, 0);"
    },
    {
        "line": 394,
        "fullcodeline": "stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, 1));"
    },
    {
        "line": 398,
        "fullcodeline": "aspath_free(aspath);"
    },
    {
        "line": 406,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 407,
        "fullcodeline": "stream_putc(s, BGP_ATTR_AS4_AGGREGATOR);"
    },
    {
        "line": 408,
        "fullcodeline": "stream_putc(s, 8);"
    },
    {
        "line": 409,
        "fullcodeline": "stream_putl(s, attr->aggregator_as);"
    },
    {
        "line": 410,
        "fullcodeline": "stream_put_ipv4(s, attr->aggregator_addr.s_addr);"
    },
    {
        "line": 415,
        "fullcodeline": "|| (afi == AFI_L2VPN && safi == SAFI_EVPN)) {"
    },
    {
        "line": 417,
        "fullcodeline": "bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_ENCAP);"
    },
    {
        "line": 427,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 428,
        "fullcodeline": "stream_putc(s, BGP_ATTR_PMSI_TUNNEL);"
    },
    {
        "line": 429,
        "fullcodeline": "stream_putc(s, 9); // Length"
    },
    {
        "line": 430,
        "fullcodeline": "stream_putc(s, 0); // Flags"
    },
    {
        "line": 431,
        "fullcodeline": "stream_putc(s, PMSI_TNLTYPE_INGR_REPL); // IR (6)"
    },
    {
        "line": 432,
        "fullcodeline": "stream_put(s, &(attr->label),"
    },
    {
        "line": 434,
        "fullcodeline": "stream_put_ipv4(s, attr->nexthop.s_addr);"
    },
    {
        "line": 440,
        "fullcodeline": "stream_put(s, attr->transit->val, attr->transit->length);"
    },
    {
        "line": 45,
        "fullcodeline": "&& (!CHECK_FLAG(peer->af_flags[afi][safi],"
    },
    {
        "line": 57,
        "fullcodeline": "if (CHECK_FLAG(bgp->config, BGP_CONFIG_CONFEDERATION)) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_NEXT_HOP)) {"
    },
    {
        "line": 200,
        "fullcodeline": "if (attr->community->size * 4 > 255) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (lcom_length(attr->lcommunity) > 255) {"
    },
    {
        "line": 236,
        "fullcodeline": "lcom_length(attr->lcommunity));"
    },
    {
        "line": 247,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_ORIGINATOR_ID))"
    },
    {
        "line": 280,
        "fullcodeline": "if (peer->sort == BGP_PEER_IBGP"
    },
    {
        "line": 352,
        "fullcodeline": "if (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_PREFIX_SID)) {"
    },
    {
        "line": 389,
        "fullcodeline": "BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 414,
        "fullcodeline": "&& (safi == SAFI_ENCAP || safi == SAFI_MPLS_VPN))"
    },
    {
        "line": 24,
        "fullcodeline": "&& !peer_cap_enhe(peer, afi, safi))) {"
    },
    {
        "line": 47,
        "fullcodeline": "|| attr->aspath->segments == NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "aspath = aspath_add_seq(aspath, bgp->confed_id);"
    },
    {
        "line": 77,
        "fullcodeline": "} else if (peer->sort == BGP_PEER_CONFED) {"
    },
    {
        "line": 114,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 115,
        "fullcodeline": "stream_putc(s, BGP_ATTR_NEXT_HOP);"
    },
    {
        "line": 116,
        "fullcodeline": "bpacket_attr_vec_arr_set_vec(vecarr, BGP_ATTR_VEC_NH, s,"
    },
    {
        "line": 118,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 119,
        "fullcodeline": "stream_put_ipv4(s, attr->nexthop.s_addr);"
    },
    {
        "line": 174,
        "fullcodeline": "stream_putc(s, 8);"
    },
    {
        "line": 175,
        "fullcodeline": "stream_putl(s, attr->aggregator_as);"
    },
    {
        "line": 201,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 204,
        "fullcodeline": "stream_putc(s, BGP_ATTR_COMMUNITIES);"
    },
    {
        "line": 205,
        "fullcodeline": "stream_putw(s, attr->community->size * 4);"
    },
    {
        "line": 223,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 226,
        "fullcodeline": "stream_putc(s, BGP_ATTR_LARGE_COMMUNITIES);"
    },
    {
        "line": 227,
        "fullcodeline": "stream_putw(s, lcom_length(attr->lcommunity));"
    },
    {
        "line": 248,
        "fullcodeline": "stream_put_in_addr(s, &attr->originator_id);"
    },
    {
        "line": 257,
        "fullcodeline": "stream_putc(s, attr->cluster->length + 4);"
    },
    {
        "line": 264,
        "fullcodeline": "stream_put(s, attr->cluster->list,"
    },
    {
        "line": 281,
        "fullcodeline": "|| peer->sort == BGP_PEER_CONFED) {"
    },
    {
        "line": 296,
        "fullcodeline": "stream_put(s, attr->ecommunity->val,"
    },
    {
        "line": 355,
        "fullcodeline": "label_index = attr->label_index;"
    },
    {
        "line": 80,
        "fullcodeline": "aspath = aspath_dup(attr->aspath);"
    },
    {
        "line": 81,
        "fullcodeline": "aspath = aspath_add_confed_seq(aspath, peer->local_as);"
    },
    {
        "line": 178,
        "fullcodeline": "stream_putc(s, 6);"
    },
    {
        "line": 202,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS"
    },
    {
        "line": 207,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 210,
        "fullcodeline": "stream_putc(s, BGP_ATTR_COMMUNITIES);"
    },
    {
        "line": 211,
        "fullcodeline": "stream_putc(s, attr->community->size * 4);"
    },
    {
        "line": 224,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS"
    },
    {
        "line": 229,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 232,
        "fullcodeline": "stream_putc(s, BGP_ATTR_LARGE_COMMUNITIES);"
    },
    {
        "line": 233,
        "fullcodeline": "stream_putc(s, lcom_length(attr->lcommunity));"
    },
    {
        "line": 250,
        "fullcodeline": "stream_put_in_addr(s, &from->remote_id);"
    },
    {
        "line": 260,
        "fullcodeline": "if (bgp->config & BGP_CONFIG_CLUSTER_ID)"
    },
    {
        "line": 267,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 282,
        "fullcodeline": "if (attr->ecommunity->size * 8 > 255) {"
    },
    {
        "line": 297,
        "fullcodeline": "attr->ecommunity->size * 8);"
    },
    {
        "line": 301,
        "fullcodeline": "int ecom_tr_size = 0;"
    },
    {
        "line": 357,
        "fullcodeline": "if (label_index != BGP_INVALID_LABEL_INDEX) {"
    },
    {
        "line": 83,
        "fullcodeline": "aspath = attr->aspath;"
    },
    {
        "line": 120,
        "fullcodeline": "} else if (peer_cap_enhe(from, afi, safi)) {"
    },
    {
        "line": 182,
        "fullcodeline": "if (attr->aggregator_as > 65535) {"
    },
    {
        "line": 208,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 230,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 261,
        "fullcodeline": "stream_put_in_addr(s, &bgp->cluster_id);"
    },
    {
        "line": 270,
        "fullcodeline": "if (bgp->config & BGP_CONFIG_CLUSTER_ID)"
    },
    {
        "line": 283,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 287,
        "fullcodeline": "stream_putc(s, BGP_ATTR_EXT_COMMUNITIES);"
    },
    {
        "line": 288,
        "fullcodeline": "stream_putw(s, attr->ecommunity->size * 8);"
    },
    {
        "line": 304,
        "fullcodeline": "for (i = 0; i < attr->ecommunity->size; i++) {"
    },
    {
        "line": 358,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 361,
        "fullcodeline": "stream_putc(s, BGP_ATTR_PREFIX_SID);"
    },
    {
        "line": 362,
        "fullcodeline": "stream_putc(s, 10);"
    },
    {
        "line": 363,
        "fullcodeline": "stream_putc(s, BGP_PREFIX_SID_LABEL_INDEX);"
    },
    {
        "line": 364,
        "fullcodeline": "stream_putw(s,"
    },
    {
        "line": 366,
        "fullcodeline": "stream_putc(s, 0); // reserved"
    },
    {
        "line": 367,
        "fullcodeline": "stream_putw(s, 0); // flags"
    },
    {
        "line": 368,
        "fullcodeline": "stream_putl(s, label_index);"
    },
    {
        "line": 71,
        "fullcodeline": "aspath = aspath_add_seq(aspath,"
    },
    {
        "line": 132,
        "fullcodeline": "stream_putc(s, BGP_ATTR_FLAG_TRANS);"
    },
    {
        "line": 133,
        "fullcodeline": "stream_putc(s, BGP_ATTR_NEXT_HOP);"
    },
    {
        "line": 134,
        "fullcodeline": "bpacket_attr_vec_arr_set_vec(vecarr, BGP_ATTR_VEC_NH, s,"
    },
    {
        "line": 136,
        "fullcodeline": "stream_putc(s, 4);"
    },
    {
        "line": 137,
        "fullcodeline": "stream_put_ipv4(s, 0);"
    },
    {
        "line": 183,
        "fullcodeline": "stream_putw(s, BGP_AS_TRANS);"
    },
    {
        "line": 190,
        "fullcodeline": "send_as4_aggregator = 1;"
    },
    {
        "line": 263,
        "fullcodeline": "stream_put_in_addr(s, &bgp->router_id);"
    },
    {
        "line": 271,
        "fullcodeline": "stream_put_in_addr(s, &bgp->cluster_id);"
    },
    {
        "line": 284,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 290,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 293,
        "fullcodeline": "stream_putc(s, BGP_ATTR_EXT_COMMUNITIES);"
    },
    {
        "line": 294,
        "fullcodeline": "stream_putc(s, attr->ecommunity->size * 8);"
    },
    {
        "line": 305,
        "fullcodeline": "pnt = attr->ecommunity->val + (i * 8);"
    },
    {
        "line": 306,
        "fullcodeline": "tbit = *pnt;"
    },
    {
        "line": 312,
        "fullcodeline": "ecom_tr_size++;"
    },
    {
        "line": 359,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 65,
        "fullcodeline": "if (!CHECK_FLAG("
    },
    {
        "line": 74,
        "fullcodeline": "aspath = aspath_add_seq(aspath, peer->local_as);"
    },
    {
        "line": 192,
        "fullcodeline": "stream_putw(s, (uint16_t)attr->aggregator_as);"
    },
    {
        "line": 273,
        "fullcodeline": "stream_put_in_addr(s, &bgp->router_id);"
    },
    {
        "line": 291,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 308,
        "fullcodeline": "if (CHECK_FLAG(tbit,"
    },
    {
        "line": 316,
        "fullcodeline": "if (ecom_tr_size * 8 > 255) {"
    },
    {
        "line": 335,
        "fullcodeline": "for (i = 0; i < attr->ecommunity->size; i++) {"
    },
    {
        "line": 68,
        "fullcodeline": "aspath = aspath_add_seq(aspath,"
    },
    {
        "line": 317,
        "fullcodeline": "stream_putc("
    },
    {
        "line": 322,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 324,
        "fullcodeline": "stream_putw(s, ecom_tr_size * 8);"
    },
    {
        "line": 336,
        "fullcodeline": "pnt = attr->ecommunity->val + (i * 8);"
    },
    {
        "line": 337,
        "fullcodeline": "tbit = *pnt;"
    },
    {
        "line": 344,
        "fullcodeline": "stream_put(s, pnt, 8);"
    },
    {
        "line": 319,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    },
    {
        "line": 326,
        "fullcodeline": "stream_putc("
    },
    {
        "line": 330,
        "fullcodeline": "stream_putc(s,"
    },
    {
        "line": 332,
        "fullcodeline": "stream_putc(s, ecom_tr_size * 8);"
    },
    {
        "line": 339,
        "fullcodeline": "if (CHECK_FLAG("
    },
    {
        "line": 328,
        "fullcodeline": "BGP_ATTR_FLAG_OPTIONAL"
    }
]