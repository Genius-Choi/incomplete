[
    {
        "line": 19,
        "fullcodeline": "fixupMissingCallbacks(&drCallbacks, &arCallbacks, &clCallbacks);"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(&VideoCallbacks, drCallbacks, sizeof(VideoCallbacks));"
    },
    {
        "line": 21,
        "fullcodeline": "memcpy(&AudioCallbacks, arCallbacks, sizeof(AudioCallbacks));"
    },
    {
        "line": 32,
        "fullcodeline": "originalTerminationCallback = clCallbacks->connectionTerminated;"
    },
    {
        "line": 33,
        "fullcodeline": "memcpy(&ListenerCallbacks, clCallbacks, sizeof(ListenerCallbacks));"
    },
    {
        "line": 34,
        "fullcodeline": "ListenerCallbacks.connectionTerminated = ClInternalConnectionTerminated;"
    },
    {
        "line": 36,
        "fullcodeline": "NegotiatedVideoFormat = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(&StreamConfig, streamConfig, sizeof(StreamConfig));"
    },
    {
        "line": 38,
        "fullcodeline": "OriginalVideoBitrate = streamConfig->bitrate;"
    },
    {
        "line": 39,
        "fullcodeline": "RemoteAddrString = strdup(serverInfo->address);"
    },
    {
        "line": 42,
        "fullcodeline": "VideoPortNumber = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "ControlPortNumber = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "AudioPortNumber = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "alreadyTerminated = false;"
    },
    {
        "line": 58,
        "fullcodeline": "ConnectionInterrupted = false;"
    },
    {
        "line": 70,
        "fullcodeline": "StreamConfig.packetSize -= StreamConfig.packetSize % 16;"
    },
    {
        "line": 114,
        "fullcodeline": "Limelog(\"Initializing platform...\");"
    },
    {
        "line": 115,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_PLATFORM_INIT);"
    },
    {
        "line": 116,
        "fullcodeline": "err = initializePlatform();"
    },
    {
        "line": 122,
        "fullcodeline": "stage++;"
    },
    {
        "line": 123,
        "fullcodeline": "LC_ASSERT(stage == STAGE_PLATFORM_INIT);"
    },
    {
        "line": 124,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_PLATFORM_INIT);"
    },
    {
        "line": 125,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 127,
        "fullcodeline": "Limelog(\"Resolving host name...\");"
    },
    {
        "line": 128,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_NAME_RESOLUTION);"
    },
    {
        "line": 129,
        "fullcodeline": "LC_ASSERT(RtspPortNumber != 0);"
    },
    {
        "line": 162,
        "fullcodeline": "stage++;"
    },
    {
        "line": 163,
        "fullcodeline": "LC_ASSERT(stage == STAGE_NAME_RESOLUTION);"
    },
    {
        "line": 164,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_NAME_RESOLUTION);"
    },
    {
        "line": 165,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 186,
        "fullcodeline": "Limelog(\"Initializing audio stream...\");"
    },
    {
        "line": 187,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_AUDIO_STREAM_INIT);"
    },
    {
        "line": 188,
        "fullcodeline": "err = initializeAudioStream();"
    },
    {
        "line": 194,
        "fullcodeline": "stage++;"
    },
    {
        "line": 195,
        "fullcodeline": "LC_ASSERT(stage == STAGE_AUDIO_STREAM_INIT);"
    },
    {
        "line": 196,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_AUDIO_STREAM_INIT);"
    },
    {
        "line": 197,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 199,
        "fullcodeline": "Limelog(\"Starting RTSP handshake...\");"
    },
    {
        "line": 200,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_RTSP_HANDSHAKE);"
    },
    {
        "line": 201,
        "fullcodeline": "err = performRtspHandshake(serverInfo);"
    },
    {
        "line": 207,
        "fullcodeline": "stage++;"
    },
    {
        "line": 208,
        "fullcodeline": "LC_ASSERT(stage == STAGE_RTSP_HANDSHAKE);"
    },
    {
        "line": 209,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_RTSP_HANDSHAKE);"
    },
    {
        "line": 210,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 212,
        "fullcodeline": "Limelog(\"Initializing control stream...\");"
    },
    {
        "line": 213,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_CONTROL_STREAM_INIT);"
    },
    {
        "line": 214,
        "fullcodeline": "err = initializeControlStream();"
    },
    {
        "line": 220,
        "fullcodeline": "stage++;"
    },
    {
        "line": 221,
        "fullcodeline": "LC_ASSERT(stage == STAGE_CONTROL_STREAM_INIT);"
    },
    {
        "line": 222,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_CONTROL_STREAM_INIT);"
    },
    {
        "line": 225,
        "fullcodeline": "Limelog(\"Initializing video stream...\");"
    },
    {
        "line": 226,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_VIDEO_STREAM_INIT);"
    },
    {
        "line": 227,
        "fullcodeline": "initializeVideoStream();"
    },
    {
        "line": 228,
        "fullcodeline": "stage++;"
    },
    {
        "line": 229,
        "fullcodeline": "LC_ASSERT(stage == STAGE_VIDEO_STREAM_INIT);"
    },
    {
        "line": 230,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_VIDEO_STREAM_INIT);"
    },
    {
        "line": 233,
        "fullcodeline": "Limelog(\"Initializing input stream...\");"
    },
    {
        "line": 234,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_INPUT_STREAM_INIT);"
    },
    {
        "line": 235,
        "fullcodeline": "initializeInputStream();"
    },
    {
        "line": 236,
        "fullcodeline": "stage++;"
    },
    {
        "line": 237,
        "fullcodeline": "LC_ASSERT(stage == STAGE_INPUT_STREAM_INIT);"
    },
    {
        "line": 238,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_INPUT_STREAM_INIT);"
    },
    {
        "line": 239,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 241,
        "fullcodeline": "Limelog(\"Starting control stream...\");"
    },
    {
        "line": 242,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_CONTROL_STREAM_START);"
    },
    {
        "line": 243,
        "fullcodeline": "err = startControlStream();"
    },
    {
        "line": 249,
        "fullcodeline": "stage++;"
    },
    {
        "line": 250,
        "fullcodeline": "LC_ASSERT(stage == STAGE_CONTROL_STREAM_START);"
    },
    {
        "line": 251,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_CONTROL_STREAM_START);"
    },
    {
        "line": 252,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 254,
        "fullcodeline": "Limelog(\"Starting video stream...\");"
    },
    {
        "line": 255,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_VIDEO_STREAM_START);"
    },
    {
        "line": 256,
        "fullcodeline": "err = startVideoStream(renderContext, drFlags);"
    },
    {
        "line": 262,
        "fullcodeline": "stage++;"
    },
    {
        "line": 263,
        "fullcodeline": "LC_ASSERT(stage == STAGE_VIDEO_STREAM_START);"
    },
    {
        "line": 264,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_VIDEO_STREAM_START);"
    },
    {
        "line": 265,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 267,
        "fullcodeline": "Limelog(\"Starting audio stream...\");"
    },
    {
        "line": 268,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_AUDIO_STREAM_START);"
    },
    {
        "line": 269,
        "fullcodeline": "err = startAudioStream(audioContext, arFlags);"
    },
    {
        "line": 275,
        "fullcodeline": "stage++;"
    },
    {
        "line": 276,
        "fullcodeline": "LC_ASSERT(stage == STAGE_AUDIO_STREAM_START);"
    },
    {
        "line": 277,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_AUDIO_STREAM_START);"
    },
    {
        "line": 278,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 280,
        "fullcodeline": "Limelog(\"Starting input stream...\");"
    },
    {
        "line": 281,
        "fullcodeline": "ListenerCallbacks.stageStarting(STAGE_INPUT_STREAM_START);"
    },
    {
        "line": 282,
        "fullcodeline": "err = startInputStream();"
    },
    {
        "line": 288,
        "fullcodeline": "stage++;"
    },
    {
        "line": 289,
        "fullcodeline": "LC_ASSERT(stage == STAGE_INPUT_STREAM_START);"
    },
    {
        "line": 290,
        "fullcodeline": "ListenerCallbacks.stageComplete(STAGE_INPUT_STREAM_START);"
    },
    {
        "line": 291,
        "fullcodeline": "Limelog(\"done\\n\");"
    },
    {
        "line": 294,
        "fullcodeline": "LiSendMouseMoveEvent(1, 1);"
    },
    {
        "line": 296,
        "fullcodeline": "LiSendMouseMoveEvent(-1, -1);"
    },
    {
        "line": 297,
        "fullcodeline": "PltSleepMs(10);"
    },
    {
        "line": 299,
        "fullcodeline": "ListenerCallbacks.connectionStarted();"
    },
    {
        "line": 6,
        "fullcodeline": "if (drCallbacks != NULL && (drCallbacks->capabilities & CAPABILITY_PULL_RENDERER) && drCallbacks->submitDecodeUnit) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (drCallbacks != NULL && (drCallbacks->capabilities & CAPABILITY_PULL_RENDERER) && (drCallbacks->capabilities & CAPABILITY_DIRECT_SUBMIT)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!parseRtspPortNumberFromUrl(serverInfo->rtspSessionUrl, &RtspPortNumber)) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (MAGIC_BYTE_FROM_AUDIO_CONFIG(StreamConfig.audioConfiguration) != 0xCA ||"
    },
    {
        "line": 72,
        "fullcodeline": "if (StreamConfig.packetSize == 0) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (StreamConfig.height & 0x1) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (!StreamConfig.supportsHevc &&"
    },
    {
        "line": 100,
        "fullcodeline": "if (StreamConfig.width == 3840 && StreamConfig.height == 2160 &&"
    },
    {
        "line": 107,
        "fullcodeline": "if (extractVersionQuadFromString(serverInfo->serverInfoAppVersion,"
    },
    {
        "line": 117,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (RtspPortNumber != 48010) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (StreamConfig.streamingRemotely == STREAM_CFG_AUTO) {"
    },
    {
        "line": 189,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 244,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 257,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 270,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 302,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 7,
        "fullcodeline": "Limelog(\"CAPABILITY_PULL_RENDERER cannot be set with a submitDecodeUnit callback\\n\");"
    },
    {
        "line": 8,
        "fullcodeline": "err = -1;"
    },
    {
        "line": 13,
        "fullcodeline": "Limelog(\"CAPABILITY_PULL_RENDERER and CAPABILITY_DIRECT_SUBMIT cannot be set together\\n\");"
    },
    {
        "line": 14,
        "fullcodeline": "err = -1;"
    },
    {
        "line": 49,
        "fullcodeline": "RtspPortNumber = 48010;"
    },
    {
        "line": 51,
        "fullcodeline": "Limelog(\"RTSP port: %u (RTSP URL parsing failed)\\n\", RtspPortNumber);"
    },
    {
        "line": 62,
        "fullcodeline": "CHANNEL_COUNT_FROM_AUDIO_CONFIGURATION(StreamConfig.audioConfiguration) > AUDIO_CONFIGURATION_MAX_CHANNEL_COUNT) {"
    },
    {
        "line": 63,
        "fullcodeline": "Limelog(\"Invalid audio configuration specified\\n\");"
    },
    {
        "line": 64,
        "fullcodeline": "err = -1;"
    },
    {
        "line": 73,
        "fullcodeline": "Limelog(\"Invalid packet size specified\\n\");"
    },
    {
        "line": 74,
        "fullcodeline": "err = -1;"
    },
    {
        "line": 80,
        "fullcodeline": "Limelog(\"Encoder height must not be odd. Rounding %d to %d\\n\","
    },
    {
        "line": 83,
        "fullcodeline": "StreamConfig.height = StreamConfig.height & ~0x1;"
    },
    {
        "line": 88,
        "fullcodeline": "(StreamConfig.width > 4096 || StreamConfig.height > 4096)) {"
    },
    {
        "line": 89,
        "fullcodeline": "Limelog(\"WARNING: Streaming at resolutions above 4K using H.264 will likely fail! Trying anyway!\\n\");"
    },
    {
        "line": 101,
        "fullcodeline": "(VideoCallbacks.capabilities & CAPABILITY_REFERENCE_FRAME_INVALIDATION_AVC)) {"
    },
    {
        "line": 102,
        "fullcodeline": "Limelog(\"Disabling reference frame invalidation for 4K streaming\\n\");"
    },
    {
        "line": 103,
        "fullcodeline": "VideoCallbacks.capabilities &= ~CAPABILITY_REFERENCE_FRAME_INVALIDATION_AVC;"
    },
    {
        "line": 109,
        "fullcodeline": "Limelog(\"Invalid appversion string: %s\\n\", serverInfo->serverInfoAppVersion);"
    },
    {
        "line": 110,
        "fullcodeline": "err = -1;"
    },
    {
        "line": 118,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 119,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_PLATFORM_INIT, err);"
    },
    {
        "line": 133,
        "fullcodeline": "err = resolveHostName(serverInfo->address, AF_UNSPEC, RtspPortNumber, &RemoteAddr, &RemoteAddrLen);"
    },
    {
        "line": 158,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 159,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_NAME_RESOLUTION, err);"
    },
    {
        "line": 190,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 191,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_AUDIO_STREAM_INIT, err);"
    },
    {
        "line": 203,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 204,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_RTSP_HANDSHAKE, err);"
    },
    {
        "line": 216,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 217,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_CONTROL_STREAM_INIT, err);"
    },
    {
        "line": 245,
        "fullcodeline": "Limelog(\"failed: %d\\n\", err);"
    },
    {
        "line": 246,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_CONTROL_STREAM_START, err);"
    },
    {
        "line": 258,
        "fullcodeline": "Limelog(\"Video stream start failed: %d\\n\", err);"
    },
    {
        "line": 259,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_VIDEO_STREAM_START, err);"
    },
    {
        "line": 271,
        "fullcodeline": "Limelog(\"Audio stream start failed: %d\\n\", err);"
    },
    {
        "line": 272,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_AUDIO_STREAM_START, err);"
    },
    {
        "line": 284,
        "fullcodeline": "Limelog(\"Input stream start failed: %d\\n\", err);"
    },
    {
        "line": 285,
        "fullcodeline": "ListenerCallbacks.stageFailed(STAGE_INPUT_STREAM_START, err);"
    },
    {
        "line": 304,
        "fullcodeline": "LiStopConnection();"
    },
    {
        "line": 54,
        "fullcodeline": "Limelog(\"RTSP port: %u\\n\", RtspPortNumber);"
    },
    {
        "line": 82,
        "fullcodeline": "StreamConfig.height & ~0x1);"
    },
    {
        "line": 134,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 149,
        "fullcodeline": "err = resolveHostName(serverInfo->address, AF_UNSPEC, 47984, &RemoteAddr, &RemoteAddrLen);"
    },
    {
        "line": 171,
        "fullcodeline": "if (isPrivateNetworkAddress(&RemoteAddr)) {"
    },
    {
        "line": 92,
        "fullcodeline": "else if (StreamConfig.width > 8192 || StreamConfig.height > 8192) {"
    },
    {
        "line": 138,
        "fullcodeline": "PltSleepMs(1000);"
    },
    {
        "line": 139,
        "fullcodeline": "err = resolveHostName(serverInfo->address, AF_UNSPEC, RtspPortNumber, &RemoteAddr, &RemoteAddrLen);"
    },
    {
        "line": 150,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 172,
        "fullcodeline": "StreamConfig.streamingRemotely = STREAM_CFG_LOCAL;"
    },
    {
        "line": 93,
        "fullcodeline": "Limelog(\"WARNING: Streaming at resolutions above 8K will likely fail! Trying anyway!\\n\");"
    },
    {
        "line": 151,
        "fullcodeline": "err = resolveHostName(serverInfo->address, AF_UNSPEC, 47989, &RemoteAddr, &RemoteAddrLen);"
    },
    {
        "line": 154,
        "fullcodeline": "err = resolveHostName(serverInfo->address, AF_UNSPEC, 48010, &RemoteAddr, &RemoteAddrLen);"
    },
    {
        "line": 175,
        "fullcodeline": "StreamConfig.streamingRemotely = STREAM_CFG_REMOTE;"
    },
    {
        "line": 177,
        "fullcodeline": "if (StreamConfig.packetSize > 1024) {"
    },
    {
        "line": 180,
        "fullcodeline": "Limelog(\"Packet size capped at 1KB for remote streaming\\n\");"
    },
    {
        "line": 181,
        "fullcodeline": "StreamConfig.packetSize = 1024;"
    }
]