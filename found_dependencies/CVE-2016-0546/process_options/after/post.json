[
    {
        "line": 3,
        "fullcodeline": "int error= 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int i= 0;"
    },
    {
        "line": 55,
        "fullcodeline": "strcpy(operation, \"\");"
    },
    {
        "line": 7,
        "fullcodeline": "if ((error= handle_options(&argc, &argv, my_long_options, get_one_option)))"
    },
    {
        "line": 43,
        "fullcodeline": "if (!opt_no_defaults && ((error= get_default_values())))"
    },
    {
        "line": 56,
        "fullcodeline": "if ((error = check_options(argc, argv, operation)))"
    },
    {
        "line": 13,
        "fullcodeline": "error= -1;"
    },
    {
        "line": 20,
        "fullcodeline": "i= (int)strlength(opt_basedir);"
    },
    {
        "line": 45,
        "fullcodeline": "error= -1;"
    },
    {
        "line": 63,
        "fullcodeline": "printf(\"#    basedir = %s\\n\", opt_basedir);"
    },
    {
        "line": 64,
        "fullcodeline": "printf(\"# plugin_dir = %s\\n\", opt_plugin_dir);"
    },
    {
        "line": 65,
        "fullcodeline": "printf(\"#    datadir = %s\\n\", opt_datadir);"
    },
    {
        "line": 66,
        "fullcodeline": "printf(\"# plugin_ini = %s\\n\", opt_plugin_ini);"
    },
    {
        "line": 21,
        "fullcodeline": "if (opt_basedir[i-1] != FN_LIBCHAR || opt_basedir[i-1] != FN_LIBCHAR2)"
    },
    {
        "line": 23,
        "fullcodeline": "char buff[FN_REFLEN];"
    },
    {
        "line": 24,
        "fullcodeline": "memset(buff, 0, sizeof(buff));"
    },
    {
        "line": 26,
        "fullcodeline": "strncpy(buff, opt_basedir, sizeof(buff) - 1);"
    },
    {
        "line": 30,
        "fullcodeline": "strncat(buff, FN_DIRSEP, sizeof(buff) - strlen(buff) - 1);"
    },
    {
        "line": 32,
        "fullcodeline": "buff[sizeof(buff) - 1]= 0;"
    },
    {
        "line": 33,
        "fullcodeline": "my_free(opt_basedir);"
    },
    {
        "line": 34,
        "fullcodeline": "opt_basedir= my_strdup(buff, MYF(MY_FAE));"
    }
]