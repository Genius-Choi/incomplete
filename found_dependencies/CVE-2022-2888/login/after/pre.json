[
    {
        "line": 2,
        "fullcodeline": "data = request.get_json()"
    },
    {
        "line": 3,
        "fullcodeline": "if not data:"
    },
    {
        "line": 6,
        "fullcodeline": "if \"user\" in data and \"pass\" in data:"
    },
    {
        "line": 4,
        "fullcodeline": "data = request.values"
    },
    {
        "line": 7,
        "fullcodeline": "username = data[\"user\"]"
    },
    {
        "line": 8,
        "fullcodeline": "password = data[\"pass\"]"
    },
    {
        "line": 18,
        "fullcodeline": "user = octoprint.server.userManager.find_user(username)"
    },
    {
        "line": 10,
        "fullcodeline": "if \"remember\" in data and data[\"remember\"] in valid_boolean_trues:"
    },
    {
        "line": 15,
        "fullcodeline": "if \"usersession.id\" in session:"
    },
    {
        "line": 19,
        "fullcodeline": "if user is not None:"
    },
    {
        "line": 11,
        "fullcodeline": "remember = True"
    },
    {
        "line": 13,
        "fullcodeline": "remember = False"
    },
    {
        "line": 16,
        "fullcodeline": "_logout(current_user)"
    },
    {
        "line": 65,
        "fullcodeline": "return passive_login()"
    },
    {
        "line": 20,
        "fullcodeline": "if octoprint.server.userManager.check_password(username, password):"
    },
    {
        "line": 24,
        "fullcodeline": "user = octoprint.server.userManager.login_user(user)"
    },
    {
        "line": 25,
        "fullcodeline": "session[\"usersession.id\"] = user.session"
    },
    {
        "line": 26,
        "fullcodeline": "session[\"usersession.signature\"] = session_signature("
    },
    {
        "line": 29,
        "fullcodeline": "g.user = user"
    },
    {
        "line": 31,
        "fullcodeline": "login_user(user, remember=remember)"
    },
    {
        "line": 32,
        "fullcodeline": "identity_changed.send("
    },
    {
        "line": 35,
        "fullcodeline": "session[\"login_mechanism\"] = \"http\""
    },
    {
        "line": 37,
        "fullcodeline": "remote_addr = get_remote_address(request)"
    },
    {
        "line": 44,
        "fullcodeline": "response = user.as_dict()"
    },
    {
        "line": 45,
        "fullcodeline": "response[\"_is_external_client\"] = s().getBoolean("
    },
    {
        "line": 51,
        "fullcodeline": "response[\"_login_mechanism\"] = session[\"login_mechanism\"]"
    },
    {
        "line": 53,
        "fullcodeline": "r = make_response(jsonify(response))"
    },
    {
        "line": 54,
        "fullcodeline": "r.delete_cookie(\"active_logout\")"
    },
    {
        "line": 21,
        "fullcodeline": "if not user.is_active:"
    },
    {
        "line": 33,
        "fullcodeline": "current_app._get_current_object(), identity=Identity(user.get_id())"
    },
    {
        "line": 38,
        "fullcodeline": "logging.getLogger(__name__).info("
    },
    {
        "line": 56,
        "fullcodeline": "eventManager().fire("
    },
    {
        "line": 22,
        "fullcodeline": "abort(403)"
    },
    {
        "line": 47,
        "fullcodeline": ") and not util_net.is_lan_address("
    },
    {
        "line": 39,
        "fullcodeline": "\"Actively logging in user {} from {}\".format("
    },
    {
        "line": 57,
        "fullcodeline": "Events.USER_LOGGED_IN, payload={\"username\": user.get_id()}"
    },
    {
        "line": 40,
        "fullcodeline": "user.get_id(), remote_addr"
    },
    {
        "line": 46,
        "fullcodeline": "[\"server\", \"ipCheck\", \"enabled\"]"
    },
    {
        "line": 49,
        "fullcodeline": "additional_private=s().get([\"server\", \"ipCheck\", \"trustedSubnets\"]),"
    }
]