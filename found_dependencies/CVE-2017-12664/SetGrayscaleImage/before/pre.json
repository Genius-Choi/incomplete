[
    {
        "line": 21,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 25,
        "fullcodeline": "colormap_index=(ssize_t *) AcquireQuantumMemory(MaxColormapSize,"
    },
    {
        "line": 94,
        "fullcodeline": "qsort((void *) image->colormap,image->colors,sizeof(PixelInfo),"
    },
    {
        "line": 96,
        "fullcodeline": "colormap=(PixelInfo *) AcquireQuantumMemory(image->colors,sizeof(*colormap));"
    },
    {
        "line": 100,
        "fullcodeline": "j=0;"
    },
    {
        "line": 101,
        "fullcodeline": "colormap[j]=image->colormap[0];"
    },
    {
        "line": 111,
        "fullcodeline": "image->colors=(size_t) (j+1);"
    },
    {
        "line": 112,
        "fullcodeline": "image->colormap=(PixelInfo *) RelinquishMagickMemory(image->colormap);"
    },
    {
        "line": 113,
        "fullcodeline": "image->colormap=colormap;"
    },
    {
        "line": 114,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 115,
        "fullcodeline": "image_view=AcquireAuthenticCacheView(image,exception);"
    },
    {
        "line": 145,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 146,
        "fullcodeline": "colormap_index=(ssize_t *) RelinquishMagickMemory(colormap_index);"
    },
    {
        "line": 147,
        "fullcodeline": "image->type=GrayscaleType;"
    },
    {
        "line": 23,
        "fullcodeline": "if (image->type != GrayscaleType)"
    },
    {
        "line": 27,
        "fullcodeline": "if (colormap_index == (ssize_t *) NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "if (image->storage_class != PseudoClass)"
    },
    {
        "line": 92,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 93,
        "fullcodeline": "image->colormap[i].alpha=(double) i;"
    },
    {
        "line": 97,
        "fullcodeline": "if (colormap == (PixelInfo *) NULL)"
    },
    {
        "line": 102,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 120,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 148,
        "fullcodeline": "if (SetImageMonochrome(image,exception) != MagickFalse)"
    },
    {
        "line": 24,
        "fullcodeline": "(void) TransformImageColorspace(image,GRAYColorspace,exception);"
    },
    {
        "line": 28,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 32,
        "fullcodeline": "(void) ResetMagickMemory(colormap_index,(-1),MaxColormapSize*"
    },
    {
        "line": 37,
        "fullcodeline": "image->colors=0;"
    },
    {
        "line": 38,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 39,
        "fullcodeline": "image_view=AcquireAuthenticCacheView(image,exception);"
    },
    {
        "line": 98,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 109,
        "fullcodeline": "colormap_index[(ssize_t) image->colormap[i].alpha]=j;"
    },
    {
        "line": 130,
        "fullcodeline": "q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,exception);"
    },
    {
        "line": 149,
        "fullcodeline": "image->type=BilevelType;"
    },
    {
        "line": 26,
        "fullcodeline": "sizeof(*colormap_index));"
    },
    {
        "line": 34,
        "fullcodeline": "if (AcquireImageColormap(image,MaxColormapSize,exception) == MagickFalse)"
    },
    {
        "line": 44,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 90,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 104,
        "fullcodeline": "if (IsPixelInfoEquivalent(&colormap[j],&image->colormap[i]) == MagickFalse)"
    },
    {
        "line": 128,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 131,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 136,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 142,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(image_view,exception) == MagickFalse)"
    },
    {
        "line": 35,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 54,
        "fullcodeline": "q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,"
    },
    {
        "line": 106,
        "fullcodeline": "j++;"
    },
    {
        "line": 107,
        "fullcodeline": "colormap[j]=image->colormap[i];"
    },
    {
        "line": 133,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 138,
        "fullcodeline": "SetPixelIndex(image,(Quantum) colormap_index[ScaleQuantumToMap("
    },
    {
        "line": 140,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 143,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 33,
        "fullcodeline": "sizeof(*colormap_index));"
    },
    {
        "line": 52,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 56,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 61,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 87,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(image_view,exception) == MagickFalse)"
    },
    {
        "line": 58,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 66,
        "fullcodeline": "intensity=ScaleQuantumToMap(GetPixelRed(image,q));"
    },
    {
        "line": 84,
        "fullcodeline": "SetPixelIndex(image,(Quantum) colormap_index[intensity],q);"
    },
    {
        "line": 85,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 88,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 67,
        "fullcodeline": "if (colormap_index[intensity] < 0)"
    },
    {
        "line": 139,
        "fullcodeline": "GetPixelIndex(image,q))],q);"
    },
    {
        "line": 72,
        "fullcodeline": "if (colormap_index[intensity] < 0)"
    },
    {
        "line": 74,
        "fullcodeline": "colormap_index[intensity]=(ssize_t) image->colors;"
    },
    {
        "line": 75,
        "fullcodeline": "image->colormap[image->colors].red=(double)"
    },
    {
        "line": 77,
        "fullcodeline": "image->colormap[image->colors].green=(double)"
    },
    {
        "line": 79,
        "fullcodeline": "image->colormap[image->colors].blue=(double)"
    },
    {
        "line": 81,
        "fullcodeline": "image->colors++;"
    },
    {
        "line": 76,
        "fullcodeline": "GetPixelRed(image,q);"
    },
    {
        "line": 78,
        "fullcodeline": "GetPixelGreen(image,q);"
    },
    {
        "line": 80,
        "fullcodeline": "GetPixelBlue(image,q);"
    }
]