[
    {
        "line": 5,
        "fullcodeline": "struct l2cap_le_conn_req *req = (struct l2cap_le_conn_req *) data;"
    },
    {
        "line": 15,
        "fullcodeline": "scid = __le16_to_cpu(req->scid);"
    },
    {
        "line": 16,
        "fullcodeline": "mtu  = __le16_to_cpu(req->mtu);"
    },
    {
        "line": 17,
        "fullcodeline": "mps  = __le16_to_cpu(req->mps);"
    },
    {
        "line": 18,
        "fullcodeline": "psm  = req->psm;"
    },
    {
        "line": 19,
        "fullcodeline": "dcid = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "credits = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "BT_DBG(\"psm 0x%2.2x scid 0x%4.4x mtu %u mps %u\", __le16_to_cpu(psm),"
    },
    {
        "line": 29,
        "fullcodeline": "pchan = l2cap_global_chan_by_psm(BT_LISTEN, psm, &conn->hcon->src,"
    },
    {
        "line": 37,
        "fullcodeline": "mutex_lock(&conn->chan_lock);"
    },
    {
        "line": 38,
        "fullcodeline": "l2cap_chan_lock(pchan);"
    },
    {
        "line": 61,
        "fullcodeline": "chan = pchan->ops->new_connection(pchan);"
    },
    {
        "line": 69,
        "fullcodeline": "chan->src_type = bdaddr_src_type(conn->hcon);"
    },
    {
        "line": 70,
        "fullcodeline": "chan->dst_type = bdaddr_dst_type(conn->hcon);"
    },
    {
        "line": 71,
        "fullcodeline": "chan->psm  = psm;"
    },
    {
        "line": 72,
        "fullcodeline": "chan->dcid = scid;"
    },
    {
        "line": 73,
        "fullcodeline": "chan->omtu = mtu;"
    },
    {
        "line": 74,
        "fullcodeline": "chan->remote_mps = mps;"
    },
    {
        "line": 76,
        "fullcodeline": "__l2cap_chan_add(conn, chan);"
    },
    {
        "line": 78,
        "fullcodeline": "l2cap_le_flowctl_init(chan, __le16_to_cpu(req->credits));"
    },
    {
        "line": 80,
        "fullcodeline": "dcid = chan->scid;"
    },
    {
        "line": 81,
        "fullcodeline": "credits = chan->rx_credits;"
    },
    {
        "line": 83,
        "fullcodeline": "__set_chan_timer(chan, chan->ops->get_sndtimeo(chan));"
    },
    {
        "line": 85,
        "fullcodeline": "chan->ident = cmd->ident;"
    },
    {
        "line": 102,
        "fullcodeline": "l2cap_chan_unlock(pchan);"
    },
    {
        "line": 122,
        "fullcodeline": "l2cap_send_cmd(conn, cmd->ident, L2CAP_LE_CONN_RSP, sizeof(rsp), &rsp);"
    },
    {
        "line": 12,
        "fullcodeline": "if (cmd_len != sizeof(*req))"
    },
    {
        "line": 31,
        "fullcodeline": "if (!pchan) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (__l2cap_get_chan_by_dcid(conn, scid)) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (!chan) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (test_bit(FLAG_DEFER_SETUP, &chan->flags)) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (result == L2CAP_CR_PEND)"
    },
    {
        "line": 118,
        "fullcodeline": "rsp.dcid    = cpu_to_le16(dcid);"
    },
    {
        "line": 119,
        "fullcodeline": "rsp.credits = cpu_to_le16(credits);"
    },
    {
        "line": 120,
        "fullcodeline": "rsp.result  = cpu_to_le16(result);"
    },
    {
        "line": 22,
        "fullcodeline": "if (mtu < 23 || mps < 23)"
    },
    {
        "line": 32,
        "fullcodeline": "result = L2CAP_CR_LE_BAD_PSM;"
    },
    {
        "line": 33,
        "fullcodeline": "chan = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "if (!smp_sufficient_security(conn->hcon, pchan->sec_level,"
    },
    {
        "line": 42,
        "fullcodeline": "result = L2CAP_CR_LE_AUTHENTICATION;"
    },
    {
        "line": 43,
        "fullcodeline": "chan = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "if (scid < L2CAP_CID_DYN_START || scid > L2CAP_CID_LE_DYN_END) {"
    },
    {
        "line": 49,
        "fullcodeline": "result = L2CAP_CR_LE_INVALID_SCID;"
    },
    {
        "line": 50,
        "fullcodeline": "chan = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "result = L2CAP_CR_LE_SCID_IN_USE;"
    },
    {
        "line": 57,
        "fullcodeline": "chan = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "result = L2CAP_CR_LE_NO_MEM;"
    },
    {
        "line": 88,
        "fullcodeline": "l2cap_state_change(chan, BT_CONNECT2);"
    },
    {
        "line": 94,
        "fullcodeline": "result = L2CAP_CR_PEND;"
    },
    {
        "line": 95,
        "fullcodeline": "chan->ops->defer(chan);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EPROTO;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EPROTO;"
    },
    {
        "line": 97,
        "fullcodeline": "l2cap_chan_ready(chan);"
    },
    {
        "line": 98,
        "fullcodeline": "result = L2CAP_CR_LE_SUCCESS;"
    },
    {
        "line": 111,
        "fullcodeline": "rsp.mtu = cpu_to_le16(chan->imtu);"
    },
    {
        "line": 112,
        "fullcodeline": "rsp.mps = cpu_to_le16(chan->mps);"
    }
]