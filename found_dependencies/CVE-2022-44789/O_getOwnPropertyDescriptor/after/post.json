[
    {
        "line": 7,
        "fullcodeline": "obj = js_toobject(J, 1);"
    },
    {
        "line": 8,
        "fullcodeline": "ref = jsV_getproperty(J, obj, js_tostring(J, 2));"
    },
    {
        "line": 5,
        "fullcodeline": "if (!js_isobject(J, 1))"
    },
    {
        "line": 9,
        "fullcodeline": "if (!ref) {"
    },
    {
        "line": 6,
        "fullcodeline": "js_typeerror(J, \"not an object\");"
    },
    {
        "line": 11,
        "fullcodeline": "js_pushundefined(J);"
    },
    {
        "line": 13,
        "fullcodeline": "js_newobject(J);"
    },
    {
        "line": 31,
        "fullcodeline": "js_pushboolean(J, !(ref->atts & JS_DONTENUM));"
    },
    {
        "line": 32,
        "fullcodeline": "js_defproperty(J, -2, \"enumerable\", 0);"
    },
    {
        "line": 33,
        "fullcodeline": "js_pushboolean(J, !(ref->atts & JS_DONTCONF));"
    },
    {
        "line": 34,
        "fullcodeline": "js_defproperty(J, -2, \"configurable\", 0);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!ref->getter && !ref->setter) {"
    },
    {
        "line": 15,
        "fullcodeline": "js_pushvalue(J, ref->value);"
    },
    {
        "line": 16,
        "fullcodeline": "js_defproperty(J, -2, \"value\", 0);"
    },
    {
        "line": 17,
        "fullcodeline": "js_pushboolean(J, !(ref->atts & JS_READONLY));"
    },
    {
        "line": 18,
        "fullcodeline": "js_defproperty(J, -2, \"writable\", 0);"
    },
    {
        "line": 24,
        "fullcodeline": "js_defproperty(J, -2, \"get\", 0);"
    },
    {
        "line": 29,
        "fullcodeline": "js_defproperty(J, -2, \"set\", 0);"
    },
    {
        "line": 21,
        "fullcodeline": "js_pushobject(J, ref->getter);"
    },
    {
        "line": 26,
        "fullcodeline": "js_pushobject(J, ref->setter);"
    },
    {
        "line": 23,
        "fullcodeline": "js_pushundefined(J);"
    },
    {
        "line": 28,
        "fullcodeline": "js_pushundefined(J);"
    }
]