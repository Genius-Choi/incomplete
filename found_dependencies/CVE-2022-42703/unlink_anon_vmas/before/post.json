[
    {
        "line": 4,
        "fullcodeline": "struct anon_vma *root = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {"
    },
    {
        "line": 37,
        "fullcodeline": "unlock_anon_vma_root(root);"
    },
    {
        "line": 44,
        "fullcodeline": "list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {"
    },
    {
        "line": 11,
        "fullcodeline": "struct anon_vma *anon_vma = avc->anon_vma;"
    },
    {
        "line": 13,
        "fullcodeline": "root = lock_anon_vma_root(root, anon_vma);"
    },
    {
        "line": 14,
        "fullcodeline": "anon_vma_interval_tree_remove(avc, &anon_vma->rb_root);"
    },
    {
        "line": 25,
        "fullcodeline": "list_del(&avc->same_vma);"
    },
    {
        "line": 26,
        "fullcodeline": "anon_vma_chain_free(avc);"
    },
    {
        "line": 45,
        "fullcodeline": "struct anon_vma *anon_vma = avc->anon_vma;"
    },
    {
        "line": 47,
        "fullcodeline": "VM_WARN_ON(anon_vma->degree);"
    },
    {
        "line": 48,
        "fullcodeline": "put_anon_vma(anon_vma);"
    },
    {
        "line": 50,
        "fullcodeline": "list_del(&avc->same_vma);"
    },
    {
        "line": 51,
        "fullcodeline": "anon_vma_chain_free(avc);"
    },
    {
        "line": 35,
        "fullcodeline": "vma->anon_vma = NULL;"
    }
]