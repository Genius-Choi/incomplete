[
    {
        "line": 12,
        "fullcodeline": "vma->anon_vma = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "error = anon_vma_clone(vma, pvma);"
    },
    {
        "line": 27,
        "fullcodeline": "anon_vma = anon_vma_alloc();"
    },
    {
        "line": 30,
        "fullcodeline": "anon_vma->num_active_vmas++;"
    },
    {
        "line": 31,
        "fullcodeline": "avc = anon_vma_chain_alloc(GFP_KERNEL);"
    },
    {
        "line": 40,
        "fullcodeline": "anon_vma->parent = pvma->anon_vma;"
    },
    {
        "line": 46,
        "fullcodeline": "get_anon_vma(anon_vma->root);"
    },
    {
        "line": 48,
        "fullcodeline": "vma->anon_vma = anon_vma;"
    },
    {
        "line": 49,
        "fullcodeline": "anon_vma_lock_write(anon_vma);"
    },
    {
        "line": 50,
        "fullcodeline": "anon_vma_chain_link(vma, avc, anon_vma);"
    },
    {
        "line": 52,
        "fullcodeline": "anon_vma_unlock_write(anon_vma);"
    },
    {
        "line": 57,
        "fullcodeline": "put_anon_vma(anon_vma);"
    },
    {
        "line": 59,
        "fullcodeline": "unlink_anon_vmas(vma);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!pvma->anon_vma)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!anon_vma)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!avc)"
    },
    {
        "line": 60,
        "fullcodeline": "return -ENOMEM;"
    }
]