[
    {
        "line": 4,
        "fullcodeline": "struct anon_vma *root = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "list_for_each_entry_reverse(pavc, &src->anon_vma_chain, same_vma) {"
    },
    {
        "line": 35,
        "fullcodeline": "unlock_anon_vma_root(root);"
    },
    {
        "line": 45,
        "fullcodeline": "dst->anon_vma = NULL;"
    },
    {
        "line": 46,
        "fullcodeline": "unlink_anon_vmas(dst);"
    },
    {
        "line": 9,
        "fullcodeline": "avc = anon_vma_chain_alloc(GFP_NOWAIT | __GFP_NOWARN);"
    },
    {
        "line": 17,
        "fullcodeline": "anon_vma = pavc->anon_vma;"
    },
    {
        "line": 18,
        "fullcodeline": "root = lock_anon_vma_root(root, anon_vma);"
    },
    {
        "line": 19,
        "fullcodeline": "anon_vma_chain_link(dst, avc, anon_vma);"
    },
    {
        "line": 47,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 10,
        "fullcodeline": "if (unlikely(!avc)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!dst->anon_vma && src->anon_vma &&"
    },
    {
        "line": 11,
        "fullcodeline": "unlock_anon_vma_root(root);"
    },
    {
        "line": 12,
        "fullcodeline": "root = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "avc = anon_vma_chain_alloc(GFP_KERNEL);"
    },
    {
        "line": 30,
        "fullcodeline": "anon_vma != src->anon_vma && anon_vma->degree < 2)"
    },
    {
        "line": 31,
        "fullcodeline": "dst->anon_vma = anon_vma;"
    },
    {
        "line": 14,
        "fullcodeline": "if (!avc)"
    }
]