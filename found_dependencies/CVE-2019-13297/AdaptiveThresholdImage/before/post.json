[
    {
        "line": 29,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 33,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 34,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 35,
        "fullcodeline": "threshold_image=CloneImage(image,0,0,MagickTrue,exception);"
    },
    {
        "line": 40,
        "fullcodeline": "status=SetImageStorageClass(threshold_image,DirectClass,exception);"
    },
    {
        "line": 49,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 50,
        "fullcodeline": "progress=0;"
    },
    {
        "line": 51,
        "fullcodeline": "number_pixels=(MagickSizeType) width*height;"
    },
    {
        "line": 52,
        "fullcodeline": "image_view=AcquireVirtualCacheView(image,exception);"
    },
    {
        "line": 53,
        "fullcodeline": "threshold_view=AcquireAuthenticCacheView(threshold_image,exception);"
    },
    {
        "line": 175,
        "fullcodeline": "threshold_image->type=image->type;"
    },
    {
        "line": 176,
        "fullcodeline": "threshold_view=DestroyCacheView(threshold_view);"
    },
    {
        "line": 177,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 31,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 36,
        "fullcodeline": "if (threshold_image == (Image *) NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "if (width == 0)"
    },
    {
        "line": 41,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 58,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 178,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 32,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 43,
        "fullcodeline": "threshold_image=DestroyImage(threshold_image);"
    },
    {
        "line": 61,
        "fullcodeline": "channel_bias[MaxPixelChannels],"
    },
    {
        "line": 62,
        "fullcodeline": "channel_sum[MaxPixelChannels];"
    },
    {
        "line": 65,
        "fullcodeline": "*magick_restrict p,"
    },
    {
        "line": 82,
        "fullcodeline": "p=GetCacheViewVirtualPixels(image_view,-((ssize_t) width/2L),y-(ssize_t)"
    },
    {
        "line": 84,
        "fullcodeline": "q=QueueCacheViewAuthenticPixels(threshold_view,0,y,threshold_image->columns,"
    },
    {
        "line": 91,
        "fullcodeline": "center=(ssize_t) GetPixelChannels(image)*(image->columns+width)*(height/2L)+"
    },
    {
        "line": 179,
        "fullcodeline": "threshold_image=DestroyImage(threshold_image);"
    },
    {
        "line": 37,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 80,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 86,
        "fullcodeline": "if ((p == (const Quantum *) NULL) || (q == (Quantum *) NULL))"
    },
    {
        "line": 93,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 122,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 158,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(threshold_view,exception) == MagickFalse)"
    },
    {
        "line": 160,
        "fullcodeline": "if (image->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 83,
        "fullcodeline": "(height/2L),image->columns+width,height,exception);"
    },
    {
        "line": 88,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 92,
        "fullcodeline": "GetPixelChannels(image)*(width/2);"
    },
    {
        "line": 95,
        "fullcodeline": "PixelChannel channel = GetPixelChannelChannel(image,i);"
    },
    {
        "line": 96,
        "fullcodeline": "PixelTrait traits = GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 97,
        "fullcodeline": "PixelTrait threshold_traits=GetPixelChannelTraits(threshold_image,"
    },
    {
        "line": 107,
        "fullcodeline": "pixels=p;"
    },
    {
        "line": 108,
        "fullcodeline": "channel_bias[channel]=0.0;"
    },
    {
        "line": 109,
        "fullcodeline": "channel_sum[channel]=0.0;"
    },
    {
        "line": 155,
        "fullcodeline": "p+=GetPixelChannels(image);"
    },
    {
        "line": 156,
        "fullcodeline": "q+=GetPixelChannels(threshold_image);"
    },
    {
        "line": 159,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 168,
        "fullcodeline": "progress++;"
    },
    {
        "line": 169,
        "fullcodeline": "proceed=SetImageProgress(image,AdaptiveThresholdImageTag,progress,"
    },
    {
        "line": 99,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 102,
        "fullcodeline": "if ((threshold_traits & CopyPixelTrait) != 0)"
    },
    {
        "line": 110,
        "fullcodeline": "for (v=0; v < (ssize_t) height; v++)"
    },
    {
        "line": 124,
        "fullcodeline": "for (i=0; i < (ssize_t) GetPixelChannels(image); i++)"
    },
    {
        "line": 171,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 100,
        "fullcodeline": "(threshold_traits == UndefinedPixelTrait))"
    },
    {
        "line": 104,
        "fullcodeline": "SetPixelChannel(threshold_image,channel,p[center+i],q);"
    },
    {
        "line": 119,
        "fullcodeline": "pixels+=GetPixelChannels(image)*image->columns;"
    },
    {
        "line": 129,
        "fullcodeline": "PixelChannel channel = GetPixelChannelChannel(image,i);"
    },
    {
        "line": 130,
        "fullcodeline": "PixelTrait traits = GetPixelChannelTraits(image,channel);"
    },
    {
        "line": 131,
        "fullcodeline": "PixelTrait threshold_traits=GetPixelChannelTraits(threshold_image,"
    },
    {
        "line": 141,
        "fullcodeline": "channel_sum[channel]-=channel_bias[channel];"
    },
    {
        "line": 142,
        "fullcodeline": "channel_bias[channel]=0.0;"
    },
    {
        "line": 143,
        "fullcodeline": "pixels=p;"
    },
    {
        "line": 151,
        "fullcodeline": "mean=(double) (channel_sum[channel]/number_pixels+bias);"
    },
    {
        "line": 152,
        "fullcodeline": "SetPixelChannel(threshold_image,channel,(Quantum) ((double)"
    },
    {
        "line": 172,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 112,
        "fullcodeline": "for (u=0; u < (ssize_t) width; u++)"
    },
    {
        "line": 133,
        "fullcodeline": "if ((traits == UndefinedPixelTrait) ||"
    },
    {
        "line": 136,
        "fullcodeline": "if ((threshold_traits & CopyPixelTrait) != 0)"
    },
    {
        "line": 144,
        "fullcodeline": "for (v=0; v < (ssize_t) height; v++)"
    },
    {
        "line": 116,
        "fullcodeline": "channel_sum[channel]+=pixels[i];"
    },
    {
        "line": 117,
        "fullcodeline": "pixels+=GetPixelChannels(image);"
    },
    {
        "line": 134,
        "fullcodeline": "(threshold_traits == UndefinedPixelTrait))"
    },
    {
        "line": 138,
        "fullcodeline": "SetPixelChannel(threshold_image,channel,p[center+i],q);"
    },
    {
        "line": 146,
        "fullcodeline": "channel_bias[channel]+=pixels[i];"
    },
    {
        "line": 147,
        "fullcodeline": "pixels+=(width-1)*GetPixelChannels(image);"
    },
    {
        "line": 148,
        "fullcodeline": "channel_sum[channel]+=pixels[i];"
    },
    {
        "line": 149,
        "fullcodeline": "pixels+=GetPixelChannels(image)*(image->columns+1);"
    },
    {
        "line": 114,
        "fullcodeline": "if (u == (ssize_t) (width-1))"
    },
    {
        "line": 115,
        "fullcodeline": "channel_bias[channel]+=pixels[i];"
    },
    {
        "line": 153,
        "fullcodeline": "p[center+i] <= mean ? 0 : QuantumRange),q);"
    }
]