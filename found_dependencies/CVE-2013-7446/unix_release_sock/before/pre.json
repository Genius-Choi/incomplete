[
    {
        "line": 3,
        "fullcodeline": "struct unix_sock *u = unix_sk(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "unix_remove_socket(sk);"
    },
    {
        "line": 12,
        "fullcodeline": "unix_state_lock(sk);"
    },
    {
        "line": 13,
        "fullcodeline": "sock_orphan(sk);"
    },
    {
        "line": 14,
        "fullcodeline": "sk->sk_shutdown = SHUTDOWN_MASK;"
    },
    {
        "line": 15,
        "fullcodeline": "path\t     = u->path;"
    },
    {
        "line": 16,
        "fullcodeline": "u->path.dentry = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "u->path.mnt = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "state = sk->sk_state;"
    },
    {
        "line": 19,
        "fullcodeline": "sk->sk_state = TCP_CLOSE;"
    },
    {
        "line": 20,
        "fullcodeline": "unix_state_unlock(sk);"
    },
    {
        "line": 22,
        "fullcodeline": "wake_up_interruptible_all(&u->peer_wait);"
    },
    {
        "line": 24,
        "fullcodeline": "skpair = unix_peer(sk);"
    },
    {
        "line": 54,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 26,
        "fullcodeline": "if (skpair != NULL) {"
    },
    {
        "line": 43,
        "fullcodeline": "while ((skb = skb_dequeue(&sk->sk_receive_queue)) != NULL) {"
    },
    {
        "line": 37,
        "fullcodeline": "sock_put(skpair); /* It may now die */"
    },
    {
        "line": 38,
        "fullcodeline": "unix_peer(sk) = NULL;"
    },
    {
        "line": 47,
        "fullcodeline": "UNIXCB(skb).consumed = skb->len;"
    },
    {
        "line": 48,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 52,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 70,
        "fullcodeline": "unix_gc();\t\t/* Garbage collect fds */"
    },
    {
        "line": 27,
        "fullcodeline": "if (sk->sk_type == SOCK_STREAM || sk->sk_type == SOCK_SEQPACKET) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (state == TCP_LISTEN)"
    },
    {
        "line": 28,
        "fullcodeline": "unix_state_lock(skpair);"
    },
    {
        "line": 30,
        "fullcodeline": "skpair->sk_shutdown = SHUTDOWN_MASK;"
    },
    {
        "line": 33,
        "fullcodeline": "unix_state_unlock(skpair);"
    },
    {
        "line": 34,
        "fullcodeline": "skpair->sk_state_change(skpair);"
    },
    {
        "line": 35,
        "fullcodeline": "sk_wake_async(skpair, SOCK_WAKE_WAITD, POLL_HUP);"
    },
    {
        "line": 45,
        "fullcodeline": "unix_release_sock(skb->sk, 1);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!skb_queue_empty(&sk->sk_receive_queue) || embrion)"
    },
    {
        "line": 32,
        "fullcodeline": "skpair->sk_err = ECONNRESET;"
    }
]