[
    {
        "line": 4,
        "fullcodeline": "unsigned error = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "tree->maxbitlen = maxbitlen;"
    },
    {
        "line": 7,
        "fullcodeline": "tree->numcodes = (unsigned)numcodes; /*number of symbols*/"
    },
    {
        "line": 8,
        "fullcodeline": "tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));"
    },
    {
        "line": 11,
        "fullcodeline": "memset(tree->lengths, 0, numcodes * sizeof(unsigned));"
    },
    {
        "line": 13,
        "fullcodeline": "error = lodepng_huffman_code_lengths(tree->lengths, frequencies, numcodes, maxbitlen);"
    },
    {
        "line": 5,
        "fullcodeline": "while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; /*trim zeroes*/"
    },
    {
        "line": 9,
        "fullcodeline": "if(!tree->lengths) return 83; /*alloc fail*/"
    },
    {
        "line": 14,
        "fullcodeline": "if(!error) error = HuffmanTree_makeFromLengths2(tree);"
    }
]