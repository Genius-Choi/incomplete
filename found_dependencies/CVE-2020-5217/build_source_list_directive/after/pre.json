[
    {
        "line": 15,
        "fullcodeline": "if source_list != OPT_OUT && source_list && source_list.any?"
    },
    {
        "line": 2,
        "fullcodeline": "source_list = case directive"
    },
    {
        "line": 16,
        "fullcodeline": "minified_source_list = minify_source_list(directive, source_list).join(\" \")"
    },
    {
        "line": 22,
        "fullcodeline": "escaped_source_list = minified_source_list.gsub(\";\", \" \")"
    },
    {
        "line": 3,
        "fullcodeline": "when :child_src"
    },
    {
        "line": 18,
        "fullcodeline": "if minified_source_list.include?(\";\")"
    },
    {
        "line": 19,
        "fullcodeline": "Kernel.warn(\"#{directive} contains a ; in '#{minified_source_list}' which will raise an error in future versions. It has been replaced with a blank space.\")"
    },
    {
        "line": 23,
        "fullcodeline": "[symbol_to_hyphen_case(directive), escaped_source_list].join(\" \").strip"
    },
    {
        "line": 4,
        "fullcodeline": "if supported_directives.include?(:child_src)"
    },
    {
        "line": 7,
        "fullcodeline": "when :frame_src"
    },
    {
        "line": 5,
        "fullcodeline": "@frame_src"
    },
    {
        "line": 11,
        "fullcodeline": "else"
    },
    {
        "line": 8,
        "fullcodeline": "unless supported_directives.include?(:child_src)"
    },
    {
        "line": 12,
        "fullcodeline": "@config.directive_value(directive)"
    },
    {
        "line": 9,
        "fullcodeline": "@frame_src"
    }
]