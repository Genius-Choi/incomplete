[
    {
        "line": 7,
        "fullcodeline": "ACPI_FUNCTION_TRACE (NsEvaluate);"
    },
    {
        "line": 45,
        "fullcodeline": "Info->ReturnObject = NULL;"
    },
    {
        "line": 46,
        "fullcodeline": "Info->NodeFlags = Info->Node->Flags;"
    },
    {
        "line": 47,
        "fullcodeline": "Info->ObjDesc = AcpiNsGetAttachedObject (Info->Node);"
    },
    {
        "line": 49,
        "fullcodeline": "ACPI_DEBUG_PRINT ((ACPI_DB_NAMES, \"%s [%p] Value %p\\n\","
    },
    {
        "line": 55,
        "fullcodeline": "Info->Predefined = AcpiUtMatchPredefinedMethod (Info->Node->Name.Ascii);"
    },
    {
        "line": 59,
        "fullcodeline": "Info->FullPathname = AcpiNsGetNormalizedPathname (Info->Node, TRUE);"
    },
    {
        "line": 67,
        "fullcodeline": "Info->ParamCount = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "AcpiNsCheckAcpiCompliance (Info->FullPathname, Info->Node,"
    },
    {
        "line": 98,
        "fullcodeline": "AcpiNsCheckArgumentCount (Info->FullPathname, Info->Node,"
    },
    {
        "line": 103,
        "fullcodeline": "AcpiNsCheckArgumentTypes (Info);"
    },
    {
        "line": 215,
        "fullcodeline": "(void) AcpiNsCheckReturnValue (Info->Node, Info, Info->ParamCount,"
    },
    {
        "line": 245,
        "fullcodeline": "ACPI_DEBUG_PRINT ((ACPI_DB_NAMES,"
    },
    {
        "line": 254,
        "fullcodeline": "ACPI_FREE (Info->FullPathname);"
    },
    {
        "line": 255,
        "fullcodeline": "Info->FullPathname = NULL;"
    },
    {
        "line": 256,
        "fullcodeline": "return_ACPI_STATUS (Status);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!Info)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!Info->Node)"
    },
    {
        "line": 37,
        "fullcodeline": "if (AcpiNsGetType (Info->Node) == ACPI_TYPE_LOCAL_METHOD_ALIAS)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!Info->FullPathname)"
    },
    {
        "line": 112,
        "fullcodeline": "switch (AcpiNsGetType (Info->Node))"
    },
    {
        "line": 220,
        "fullcodeline": "if (Status == AE_CTRL_RETURN_VALUE)"
    },
    {
        "line": 12,
        "fullcodeline": "return_ACPI_STATUS (AE_BAD_PARAMETER);"
    },
    {
        "line": 25,
        "fullcodeline": "Status = AcpiNsGetNode (Info->PrefixNode, Info->RelativePathname,"
    },
    {
        "line": 39,
        "fullcodeline": "Info->Node = ACPI_CAST_PTR ("
    },
    {
        "line": 62,
        "fullcodeline": "return_ACPI_STATUS (AE_NO_MEMORY);"
    },
    {
        "line": 124,
        "fullcodeline": "ACPI_ERROR ((AE_INFO,"
    },
    {
        "line": 129,
        "fullcodeline": "Status = AE_TYPE;"
    },
    {
        "line": 147,
        "fullcodeline": "ACPI_DEBUG_PRINT ((ACPI_DB_EXEC,"
    },
    {
        "line": 161,
        "fullcodeline": "AcpiExEnterInterpreter ();"
    },
    {
        "line": 162,
        "fullcodeline": "Status = AcpiPsExecuteMethod (Info);"
    },
    {
        "line": 163,
        "fullcodeline": "AcpiExExitInterpreter ();"
    },
    {
        "line": 187,
        "fullcodeline": "AcpiExEnterInterpreter ();"
    },
    {
        "line": 191,
        "fullcodeline": "Info->ReturnObject = ACPI_CAST_PTR (ACPI_OPERAND_OBJECT, Info->Node);"
    },
    {
        "line": 193,
        "fullcodeline": "Status = AcpiExResolveNodeToValue (ACPI_CAST_INDIRECT_PTR ("
    },
    {
        "line": 195,
        "fullcodeline": "AcpiExExitInterpreter ();"
    },
    {
        "line": 203,
        "fullcodeline": "ACPI_DEBUG_PRINT ((ACPI_DB_NAMES, \"Returned object %p [%s]\\n\","
    },
    {
        "line": 207,
        "fullcodeline": "Status = AE_CTRL_RETURN_VALUE; /* Always has a \"return value\" */"
    },
    {
        "line": 232,
        "fullcodeline": "Status = AE_OK;"
    },
    {
        "line": 27,
        "fullcodeline": "if (ACPI_FAILURE (Status))"
    },
    {
        "line": 51,
        "fullcodeline": "AcpiNsGetAttachedObject (Info->Node)));"
    },
    {
        "line": 77,
        "fullcodeline": "if (Info->ParamCount > ACPI_METHOD_NUM_ARGS)"
    },
    {
        "line": 139,
        "fullcodeline": "if (!Info->ObjDesc)"
    },
    {
        "line": 197,
        "fullcodeline": "if (ACPI_FAILURE (Status))"
    },
    {
        "line": 224,
        "fullcodeline": "if (Info->Flags & ACPI_IGNORE_RETURN_VALUE)"
    },
    {
        "line": 72,
        "fullcodeline": "Info->ParamCount++;"
    },
    {
        "line": 79,
        "fullcodeline": "ACPI_WARN_PREDEFINED ((AE_INFO, Info->FullPathname, ACPI_WARN_ALWAYS,"
    },
    {
        "line": 83,
        "fullcodeline": "Info->ParamCount = ACPI_METHOD_NUM_ARGS;"
    },
    {
        "line": 141,
        "fullcodeline": "ACPI_ERROR ((AE_INFO, \"%s: Method has no attached sub-object\","
    },
    {
        "line": 143,
        "fullcodeline": "Status = AE_NULL_OBJECT;"
    },
    {
        "line": 199,
        "fullcodeline": "Info->ReturnObject = NULL;"
    },
    {
        "line": 226,
        "fullcodeline": "AcpiUtRemoveReference (Info->ReturnObject);"
    },
    {
        "line": 227,
        "fullcodeline": "Info->ReturnObject = NULL;"
    },
    {
        "line": 234,
        "fullcodeline": "else if (ACPI_FAILURE(Status))"
    },
    {
        "line": 127,
        "fullcodeline": "AcpiUtGetTypeName (Info->Node->Type)));"
    },
    {
        "line": 151,
        "fullcodeline": "Info->ObjDesc->Method.AmlLength - 1));"
    },
    {
        "line": 205,
        "fullcodeline": "AcpiUtGetObjectTypeName (Info->ReturnObject)));"
    },
    {
        "line": 240,
        "fullcodeline": "AcpiUtRemoveReference (Info->ReturnObject);"
    },
    {
        "line": 241,
        "fullcodeline": "Info->ReturnObject = NULL;"
    }
]