[
    {
        "line": 14,
        "fullcodeline": "config = server_config()"
    },
    {
        "line": 15,
        "fullcodeline": "store = zen_store()"
    },
    {
        "line": 17,
        "fullcodeline": "assert config.external_user_info_url is not None"
    },
    {
        "line": 23,
        "fullcodeline": "user_info_url = config.external_user_info_url"
    },
    {
        "line": 24,
        "fullcodeline": "headers = {\"Authorization\": \"Bearer \" + external_access_token}"
    },
    {
        "line": 25,
        "fullcodeline": "query_params = dict(server_id=str(config.get_external_server_id()))"
    },
    {
        "line": 43,
        "fullcodeline": "external_user: Optional[ExternalUserModel] = None"
    },
    {
        "line": 82,
        "fullcodeline": "if not external_user:"
    },
    {
        "line": 132,
        "fullcodeline": "return AuthContext(user=user)"
    },
    {
        "line": 28,
        "fullcodeline": "auth_response = requests.get("
    },
    {
        "line": 45,
        "fullcodeline": "if 200 <= auth_response.status_code < 300:"
    },
    {
        "line": 83,
        "fullcodeline": "raise AuthorizationException(\"Unknown external authenticator error\")"
    },
    {
        "line": 91,
        "fullcodeline": "user = store.get_external_user(user_id=external_user.id)"
    },
    {
        "line": 94,
        "fullcodeline": "user = store.update_user("
    },
    {
        "line": 56,
        "fullcodeline": "if isinstance(payload, dict):"
    },
    {
        "line": 66,
        "fullcodeline": "elif auth_response.status_code in [401, 403]:"
    },
    {
        "line": 31,
        "fullcodeline": "params=urlencode(query_params),"
    },
    {
        "line": 35,
        "fullcodeline": "logger.exception("
    },
    {
        "line": 39,
        "fullcodeline": "raise AuthorizationException("
    },
    {
        "line": 47,
        "fullcodeline": "payload = auth_response.json()"
    },
    {
        "line": 67,
        "fullcodeline": "raise AuthorizationException(\"Not authorized to access this server.\")"
    },
    {
        "line": 96,
        "fullcodeline": "user_update=UserUpdate("
    },
    {
        "line": 106,
        "fullcodeline": "logger.info("
    },
    {
        "line": 110,
        "fullcodeline": "user = store.create_user("
    },
    {
        "line": 36,
        "fullcodeline": "f\"Error fetching user information from external authenticator: \""
    },
    {
        "line": 68,
        "fullcodeline": "elif auth_response.status_code == 404:"
    },
    {
        "line": 98,
        "fullcodeline": "full_name=external_user.name or \"\","
    },
    {
        "line": 107,
        "fullcodeline": "f\"External user with ID {external_user.id} not found in ZenML \""
    },
    {
        "line": 122,
        "fullcodeline": "with AnalyticsContext() as context:"
    },
    {
        "line": 37,
        "fullcodeline": "f\"{e}\""
    },
    {
        "line": 49,
        "fullcodeline": "logger.exception("
    },
    {
        "line": 52,
        "fullcodeline": "raise AuthorizationException("
    },
    {
        "line": 58,
        "fullcodeline": "external_user = ExternalUserModel.parse_obj(payload)"
    },
    {
        "line": 69,
        "fullcodeline": "raise AuthorizationException("
    },
    {
        "line": 73,
        "fullcodeline": "logger.error("
    },
    {
        "line": 78,
        "fullcodeline": "raise AuthorizationException("
    },
    {
        "line": 108,
        "fullcodeline": "f\"server database. Creating a new user.\""
    },
    {
        "line": 111,
        "fullcodeline": "UserRequest("
    },
    {
        "line": 74,
        "fullcodeline": "f\"Error fetching user information from external authenticator. \""
    },
    {
        "line": 113,
        "fullcodeline": "full_name=external_user.name or \"\","
    },
    {
        "line": 123,
        "fullcodeline": "context.user_id = user.id"
    },
    {
        "line": 124,
        "fullcodeline": "context.identify("
    },
    {
        "line": 130,
        "fullcodeline": "context.alias(user_id=external_user.id, previous_id=user.id)"
    },
    {
        "line": 60,
        "fullcodeline": "logger.exception("
    },
    {
        "line": 64,
        "fullcodeline": "pass"
    },
    {
        "line": 75,
        "fullcodeline": "f\"Status code: {auth_response.status_code}, \""
    },
    {
        "line": 76,
        "fullcodeline": "f\"Response: {auth_response.text}\""
    },
    {
        "line": 61,
        "fullcodeline": "f\"Error parsing user information from external \""
    },
    {
        "line": 125,
        "fullcodeline": "traits={"
    },
    {
        "line": 62,
        "fullcodeline": "f\"authenticator: {e}\""
    }
]