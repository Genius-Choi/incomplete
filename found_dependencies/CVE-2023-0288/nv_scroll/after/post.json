[
    {
        "line": 3,
        "fullcodeline": "int\t\tused = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "cap->oap->motion_type = MLINE;"
    },
    {
        "line": 11,
        "fullcodeline": "setpcmark();"
    },
    {
        "line": 98,
        "fullcodeline": "beginline(BL_SOL | BL_FIX);"
    },
    {
        "line": 13,
        "fullcodeline": "if (cap->cmdchar == 'L')"
    },
    {
        "line": 96,
        "fullcodeline": "if (cap->oap->op_type == OP_NOP)"
    },
    {
        "line": 15,
        "fullcodeline": "validate_botline();\t    // make sure curwin->w_botline is valid"
    },
    {
        "line": 16,
        "fullcodeline": "curwin->w_cursor.lnum = curwin->w_botline - 1;"
    },
    {
        "line": 97,
        "fullcodeline": "cursor_correct();"
    },
    {
        "line": 17,
        "fullcodeline": "if (cap->count1 - 1 >= curwin->w_cursor.lnum)"
    },
    {
        "line": 90,
        "fullcodeline": "curwin->w_cursor.lnum = curwin->w_topline + n;"
    },
    {
        "line": 18,
        "fullcodeline": "curwin->w_cursor.lnum = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "if (cap->cmdchar == 'M')"
    },
    {
        "line": 91,
        "fullcodeline": "if (curwin->w_cursor.lnum > curbuf->b_ml.ml_line_count)"
    },
    {
        "line": 36,
        "fullcodeline": "curwin->w_cursor.lnum -= cap->count1 - 1;"
    },
    {
        "line": 48,
        "fullcodeline": "validate_botline();\t    // make sure w_empty_rows is valid"
    },
    {
        "line": 49,
        "fullcodeline": "half = (curwin->w_height - curwin->w_empty_rows + 1) / 2;"
    },
    {
        "line": 92,
        "fullcodeline": "curwin->w_cursor.lnum = curbuf->b_ml.ml_line_count;"
    },
    {
        "line": 50,
        "fullcodeline": "for (n = 0; curwin->w_topline + n < curbuf->b_ml.ml_line_count; ++n)"
    },
    {
        "line": 70,
        "fullcodeline": "if (n > 0 && used > curwin->w_height)"
    },
    {
        "line": 75,
        "fullcodeline": "n = cap->count1 - 1;"
    },
    {
        "line": 62,
        "fullcodeline": "used += plines(curwin->w_topline + n);"
    },
    {
        "line": 71,
        "fullcodeline": "--n;"
    },
    {
        "line": 63,
        "fullcodeline": "if (used >= half)"
    }
]