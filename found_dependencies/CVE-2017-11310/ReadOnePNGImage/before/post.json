[
    {
        "line": 12,
        "fullcodeline": "im_vers[32],"
    },
    {
        "line": 13,
        "fullcodeline": "libpng_runv[32],"
    },
    {
        "line": 14,
        "fullcodeline": "libpng_vers[32],"
    },
    {
        "line": 15,
        "fullcodeline": "zlib_runv[32],"
    },
    {
        "line": 16,
        "fullcodeline": "zlib_vers[32];"
    },
    {
        "line": 130,
        "fullcodeline": "*im_vers='\\0';"
    },
    {
        "line": 131,
        "fullcodeline": "(void) ConcatenateMagickString(im_vers,"
    },
    {
        "line": 133,
        "fullcodeline": "(void) ConcatenateMagickString(im_vers,"
    },
    {
        "line": 136,
        "fullcodeline": "*libpng_vers='\\0';"
    },
    {
        "line": 137,
        "fullcodeline": "(void) ConcatenateMagickString(libpng_vers,"
    },
    {
        "line": 139,
        "fullcodeline": "*libpng_runv='\\0';"
    },
    {
        "line": 140,
        "fullcodeline": "(void) ConcatenateMagickString(libpng_runv,"
    },
    {
        "line": 143,
        "fullcodeline": "*zlib_vers='\\0';"
    },
    {
        "line": 144,
        "fullcodeline": "(void) ConcatenateMagickString(zlib_vers,"
    },
    {
        "line": 146,
        "fullcodeline": "*zlib_runv='\\0';"
    },
    {
        "line": 147,
        "fullcodeline": "(void) ConcatenateMagickString(zlib_runv,"
    },
    {
        "line": 150,
        "fullcodeline": "logging=LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 190,
        "fullcodeline": "quantum_info = (QuantumInfo *) NULL;"
    },
    {
        "line": 191,
        "fullcodeline": "image=mng_info->image;"
    },
    {
        "line": 204,
        "fullcodeline": "intent="
    },
    {
        "line": 208,
        "fullcodeline": "transparent_color.red=65537;"
    },
    {
        "line": 209,
        "fullcodeline": "transparent_color.green=65537;"
    },
    {
        "line": 210,
        "fullcodeline": "transparent_color.blue=65537;"
    },
    {
        "line": 211,
        "fullcodeline": "transparent_color.alpha=65537;"
    },
    {
        "line": 213,
        "fullcodeline": "number_colors=0;"
    },
    {
        "line": 214,
        "fullcodeline": "num_text = 0;"
    },
    {
        "line": 215,
        "fullcodeline": "num_text_total = 0;"
    },
    {
        "line": 216,
        "fullcodeline": "num_raw_profiles = 0;"
    },
    {
        "line": 218,
        "fullcodeline": "ping_found_cHRM = MagickFalse;"
    },
    {
        "line": 219,
        "fullcodeline": "ping_found_gAMA = MagickFalse;"
    },
    {
        "line": 220,
        "fullcodeline": "ping_found_iCCP = MagickFalse;"
    },
    {
        "line": 221,
        "fullcodeline": "ping_found_sRGB = MagickFalse;"
    },
    {
        "line": 222,
        "fullcodeline": "ping_found_sRGB_cHRM = MagickFalse;"
    },
    {
        "line": 223,
        "fullcodeline": "ping_preserve_iCCP = MagickFalse;"
    },
    {
        "line": 236,
        "fullcodeline": "ping=png_create_read_struct(PNG_LIBPNG_VER_STRING,&error_info,"
    },
    {
        "line": 242,
        "fullcodeline": "ping_info=png_create_info_struct(ping);"
    },
    {
        "line": 250,
        "fullcodeline": "end_info=png_create_info_struct(ping);"
    },
    {
        "line": 258,
        "fullcodeline": "pixel_info=(MemoryInfo *) NULL;"
    },
    {
        "line": 308,
        "fullcodeline": "mng_info->image_found++;"
    },
    {
        "line": 309,
        "fullcodeline": "png_set_sig_bytes(ping,8);"
    },
    {
        "line": 416,
        "fullcodeline": "png_read_info(ping,ping_info);"
    },
    {
        "line": 418,
        "fullcodeline": "png_get_IHDR(ping,ping_info,&ping_width,&ping_height,"
    },
    {
        "line": 423,
        "fullcodeline": "ping_file_depth = ping_bit_depth;"
    },
    {
        "line": 454,
        "fullcodeline": "(void) png_get_tRNS(ping, ping_info, &ping_trans_alpha, &ping_num_trans,"
    },
    {
        "line": 457,
        "fullcodeline": "(void) png_get_bKGD(ping, ping_info, &ping_background);"
    },
    {
        "line": 465,
        "fullcodeline": "image->depth=ping_bit_depth;"
    },
    {
        "line": 466,
        "fullcodeline": "image->depth=GetImageQuantumDepth(image,MagickFalse);"
    },
    {
        "line": 467,
        "fullcodeline": "image->interlace=ping_interlace_method != 0 ? PNGInterlace : NoInterlace;"
    },
    {
        "line": 1004,
        "fullcodeline": "num_passes=png_set_interlace_handling(ping);"
    },
    {
        "line": 1006,
        "fullcodeline": "png_read_update_info(ping,ping_info);"
    },
    {
        "line": 1008,
        "fullcodeline": "ping_rowbytes=png_get_rowbytes(ping,ping_info);"
    },
    {
        "line": 1013,
        "fullcodeline": "mng_info->image_box.left=0;"
    },
    {
        "line": 1014,
        "fullcodeline": "mng_info->image_box.right=(ssize_t) ping_width;"
    },
    {
        "line": 1015,
        "fullcodeline": "mng_info->image_box.top=0;"
    },
    {
        "line": 1016,
        "fullcodeline": "mng_info->image_box.bottom=(ssize_t) ping_height;"
    },
    {
        "line": 1030,
        "fullcodeline": "image->compression=ZipCompression;"
    },
    {
        "line": 1031,
        "fullcodeline": "image->columns=ping_width;"
    },
    {
        "line": 1032,
        "fullcodeline": "image->rows=ping_height;"
    },
    {
        "line": 1066,
        "fullcodeline": "(void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1242,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows,exception);"
    },
    {
        "line": 1254,
        "fullcodeline": "ping_pixels=(unsigned char *) GetVirtualMemoryBlob(pixel_info);"
    },
    {
        "line": 1262,
        "fullcodeline": "quantum_info=AcquireQuantumInfo(image_info,image);"
    },
    {
        "line": 1267,
        "fullcodeline": "(void) SetQuantumEndian(image,quantum_info,MSBEndian);"
    },
    {
        "line": 1582,
        "fullcodeline": "quantum_info=DestroyQuantumInfo(quantum_info);"
    },
    {
        "line": 1595,
        "fullcodeline": "png_read_end(ping,end_info);"
    },
    {
        "line": 1875,
        "fullcodeline": "image->alpha_trait=(((int) ping_color_type == PNG_COLOR_TYPE_RGB_ALPHA) ||"
    },
    {
        "line": 2039,
        "fullcodeline": "png_destroy_read_struct(&ping,&ping_info,&end_info);"
    },
    {
        "line": 2041,
        "fullcodeline": "pixel_info=RelinquishVirtualMemory(pixel_info);"
    },
    {
        "line": 156,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 193,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 205,
        "fullcodeline": "Magick_RenderingIntent_to_PNG_RenderingIntent(image->rendering_intent);"
    },
    {
        "line": 239,
        "fullcodeline": "if (ping == (png_struct *) NULL)"
    },
    {
        "line": 244,
        "fullcodeline": "if (ping_info == (png_info *) NULL)"
    },
    {
        "line": 252,
        "fullcodeline": "if (end_info == (png_info *) NULL)"
    },
    {
        "line": 260,
        "fullcodeline": "if (setjmp(png_jmpbuf(ping)))"
    },
    {
        "line": 311,
        "fullcodeline": "if (LocaleCompare(image_info->magick,\"MNG\") == 0)"
    },
    {
        "line": 337,
        "fullcodeline": "value=GetImageOption(image_info,\"profile:skip\");"
    },
    {
        "line": 426,
        "fullcodeline": "if (ping_file_depth == 16)"
    },
    {
        "line": 443,
        "fullcodeline": "msg[MagickPathExtent];"
    },
    {
        "line": 445,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d\","
    },
    {
        "line": 447,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.color-type-orig\",msg,exception);"
    },
    {
        "line": 449,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d\","
    },
    {
        "line": 451,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.bit-depth-orig\",msg,exception);"
    },
    {
        "line": 459,
        "fullcodeline": "if (ping_bit_depth < 8)"
    },
    {
        "line": 469,
        "fullcodeline": "if (((int) ping_color_type == PNG_COLOR_TYPE_GRAY) ||"
    },
    {
        "line": 478,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 492,
        "fullcodeline": "if (png_get_valid(ping,ping_info, PNG_INFO_iCCP))"
    },
    {
        "line": 500,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_gAMA))"
    },
    {
        "line": 508,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_cHRM))"
    },
    {
        "line": 516,
        "fullcodeline": "if (ping_found_iCCP != MagickTrue && png_get_valid(ping,ping_info,"
    },
    {
        "line": 687,
        "fullcodeline": "if (!png_get_valid(ping,ping_info,PNG_INFO_cHRM))"
    },
    {
        "line": 703,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_cHRM))"
    },
    {
        "line": 736,
        "fullcodeline": "if (image->rendering_intent != UndefinedIntent)"
    },
    {
        "line": 807,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_PLTE))"
    },
    {
        "line": 938,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_tRNS))"
    },
    {
        "line": 1017,
        "fullcodeline": "if (mng_info->mng_type == 0)"
    },
    {
        "line": 1034,
        "fullcodeline": "if (((int) ping_color_type == PNG_COLOR_TYPE_GRAY) ||"
    },
    {
        "line": 1069,
        "fullcodeline": "if (((int) ping_color_type == PNG_COLOR_TYPE_PALETTE) ||"
    },
    {
        "line": 1100,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 1153,
        "fullcodeline": "msg[MagickPathExtent];"
    },
    {
        "line": 1158,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 1160,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.width,height\",msg,exception);"
    },
    {
        "line": 1162,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d\","
    },
    {
        "line": 1164,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.bit_depth\",msg,exception);"
    },
    {
        "line": 1166,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d (%s)\","
    },
    {
        "line": 1169,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.color_type\",msg,exception);"
    },
    {
        "line": 1186,
        "fullcodeline": "(void) SetImageProperty(image,\"png:IHDR.interlace_method\","
    },
    {
        "line": 1205,
        "fullcodeline": "if (image->delay != 0)"
    },
    {
        "line": 1208,
        "fullcodeline": "if ((mng_info->mng_type == 0 && (image->ping != MagickFalse)) || ("
    },
    {
        "line": 1238,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1243,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1246,
        "fullcodeline": "if (num_passes > 1)"
    },
    {
        "line": 1252,
        "fullcodeline": "if (pixel_info == (MemoryInfo *) NULL)"
    },
    {
        "line": 1256,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1264,
        "fullcodeline": "if (quantum_info == (QuantumInfo *) NULL)"
    },
    {
        "line": 1274,
        "fullcodeline": "found_transparent_pixel=MagickFalse;"
    },
    {
        "line": 1564,
        "fullcodeline": "image->alpha_trait=found_transparent_pixel ? BlendPixelTrait :"
    },
    {
        "line": 1584,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 1597,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1603,
        "fullcodeline": "if (image_info->number_scenes != 0 && mng_info->scenes_found-1 <"
    },
    {
        "line": 1619,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_tRNS))"
    },
    {
        "line": 1707,
        "fullcodeline": "for (j = 0; j < 2; j++)"
    },
    {
        "line": 1909,
        "fullcodeline": "msg[MagickPathExtent];"
    },
    {
        "line": 1946,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%s\","
    },
    {
        "line": 2043,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 141,
        "fullcodeline": "png_get_libpng_ver(NULL),32);"
    },
    {
        "line": 163,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"    Zlib version   = %s\","
    },
    {
        "line": 174,
        "fullcodeline": "printf(\"Your PNG library (libpng-%s) is rather old.\\n\","
    },
    {
        "line": 195,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 240,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 246,
        "fullcodeline": "png_destroy_read_struct(&ping,(png_info **) NULL,(png_info **) NULL);"
    },
    {
        "line": 247,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 254,
        "fullcodeline": "png_destroy_read_struct(&ping,&ping_info,(png_info **) NULL);"
    },
    {
        "line": 255,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 265,
        "fullcodeline": "png_destroy_read_struct(&ping,&ping_info,&end_info);"
    },
    {
        "line": 321,
        "fullcodeline": "mng_info->image=image;"
    },
    {
        "line": 322,
        "fullcodeline": "mng_info->bytes_in_read_buffer=0;"
    },
    {
        "line": 323,
        "fullcodeline": "mng_info->found_empty_plte=MagickFalse;"
    },
    {
        "line": 324,
        "fullcodeline": "mng_info->have_saved_bkgd_index=MagickFalse;"
    },
    {
        "line": 325,
        "fullcodeline": "png_set_read_fn(ping,mng_info,mng_get_data);"
    },
    {
        "line": 339,
        "fullcodeline": "if (IsOptionMember(\"ICC\",value) == MagickFalse)"
    },
    {
        "line": 431,
        "fullcodeline": "value=GetImageOption(image_info,\"png:swap-bytes\");"
    },
    {
        "line": 461,
        "fullcodeline": "png_set_packing(ping);"
    },
    {
        "line": 462,
        "fullcodeline": "ping_bit_depth = 8;"
    },
    {
        "line": 470,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA))"
    },
    {
        "line": 472,
        "fullcodeline": "image->rendering_intent=UndefinedIntent;"
    },
    {
        "line": 473,
        "fullcodeline": "intent=Magick_RenderingIntent_to_PNG_RenderingIntent(UndefinedIntent);"
    },
    {
        "line": 474,
        "fullcodeline": "(void) ResetMagickMemory(&image->chromaticity,0,"
    },
    {
        "line": 480,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 494,
        "fullcodeline": "ping_found_iCCP=MagickTrue;"
    },
    {
        "line": 502,
        "fullcodeline": "ping_found_gAMA=MagickTrue;"
    },
    {
        "line": 510,
        "fullcodeline": "ping_found_cHRM=MagickTrue;"
    },
    {
        "line": 519,
        "fullcodeline": "ping_found_sRGB=MagickTrue;"
    },
    {
        "line": 674,
        "fullcodeline": "if (!png_get_gAMA(ping,ping_info,&file_gamma))"
    },
    {
        "line": 678,
        "fullcodeline": "if (png_get_gAMA(ping,ping_info,&file_gamma))"
    },
    {
        "line": 705,
        "fullcodeline": "(void) png_get_cHRM(ping,ping_info,"
    },
    {
        "line": 715,
        "fullcodeline": "ping_found_cHRM=MagickTrue;"
    },
    {
        "line": 812,
        "fullcodeline": "(void) png_get_PLTE(ping,ping_info,&palette,&number_colors);"
    },
    {
        "line": 947,
        "fullcodeline": "one=1;"
    },
    {
        "line": 953,
        "fullcodeline": "max_sample = (int) ((one << ping_file_depth) - 1);"
    },
    {
        "line": 1019,
        "fullcodeline": "mng_info->mng_width=ping_width;"
    },
    {
        "line": 1020,
        "fullcodeline": "mng_info->mng_height=ping_height;"
    },
    {
        "line": 1021,
        "fullcodeline": "mng_info->frame=mng_info->image_box;"
    },
    {
        "line": 1022,
        "fullcodeline": "mng_info->clip=mng_info->image_box;"
    },
    {
        "line": 1035,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA))"
    },
    {
        "line": 1038,
        "fullcodeline": "image_gamma = image->gamma;"
    },
    {
        "line": 1040,
        "fullcodeline": "(void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1063,
        "fullcodeline": "image->gamma = image_gamma;"
    },
    {
        "line": 1067,
        "fullcodeline": "\"    image->colorspace=%d\",(int) image->colorspace);"
    },
    {
        "line": 1070,
        "fullcodeline": "((int) ping_bit_depth < 16 &&"
    },
    {
        "line": 1076,
        "fullcodeline": "image->storage_class=PseudoClass;"
    },
    {
        "line": 1077,
        "fullcodeline": "one=1;"
    },
    {
        "line": 1078,
        "fullcodeline": "image->colors=one << ping_file_depth;"
    },
    {
        "line": 1171,
        "fullcodeline": "if (ping_interlace_method == 0)"
    },
    {
        "line": 1189,
        "fullcodeline": "if (number_colors != 0)"
    },
    {
        "line": 1206,
        "fullcodeline": "mng_info->scenes_found++;"
    },
    {
        "line": 1209,
        "fullcodeline": "(image_info->number_scenes != 0) && (mng_info->scenes_found > (ssize_t)"
    },
    {
        "line": 1215,
        "fullcodeline": "image->alpha_trait="
    },
    {
        "line": 1225,
        "fullcodeline": "png_destroy_read_struct(&ping,&ping_info,&end_info);"
    },
    {
        "line": 1239,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1247,
        "fullcodeline": "pixel_info=AcquireVirtualMemory(image->rows,ping_rowbytes*"
    },
    {
        "line": 1253,
        "fullcodeline": "png_error(ping,\"Memory allocation failed\");"
    },
    {
        "line": 1257,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1265,
        "fullcodeline": "png_error(ping,\"Failed to allocate quantum_info\");"
    },
    {
        "line": 1276,
        "fullcodeline": "if (image->storage_class == DirectClass)"
    },
    {
        "line": 1567,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1589,
        "fullcodeline": "alpha_trait=image->alpha_trait;"
    },
    {
        "line": 1590,
        "fullcodeline": "image->alpha_trait=UndefinedPixelTrait;"
    },
    {
        "line": 1591,
        "fullcodeline": "(void) SyncImage(image,exception);"
    },
    {
        "line": 1592,
        "fullcodeline": "image->alpha_trait=alpha_trait;"
    },
    {
        "line": 1599,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1604,
        "fullcodeline": "(ssize_t) image_info->first_scene && image->delay != 0)"
    },
    {
        "line": 1606,
        "fullcodeline": "png_destroy_read_struct(&ping,&ping_info,&end_info);"
    },
    {
        "line": 1607,
        "fullcodeline": "pixel_info=RelinquishVirtualMemory(pixel_info);"
    },
    {
        "line": 1608,
        "fullcodeline": "image->colors=2;"
    },
    {
        "line": 1609,
        "fullcodeline": "(void) SetImageBackgroundColor(image,exception);"
    },
    {
        "line": 1627,
        "fullcodeline": "storage_class=image->storage_class;"
    },
    {
        "line": 1628,
        "fullcodeline": "image->alpha_trait=BlendPixelTrait;"
    },
    {
        "line": 1704,
        "fullcodeline": "image->storage_class=DirectClass;"
    },
    {
        "line": 1786,
        "fullcodeline": "num_text_total += num_text;"
    },
    {
        "line": 1911,
        "fullcodeline": "if (num_text_total != 0)"
    },
    {
        "line": 1920,
        "fullcodeline": "if (num_raw_profiles != 0)"
    },
    {
        "line": 1929,
        "fullcodeline": "if (ping_found_cHRM != MagickFalse)"
    },
    {
        "line": 1938,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_bKGD))"
    },
    {
        "line": 1956,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_tRNS))"
    },
    {
        "line": 1974,
        "fullcodeline": "if (ping_found_gAMA != MagickFalse)"
    },
    {
        "line": 2012,
        "fullcodeline": "if ((image->page.width != 0 && image->page.width != image->columns) ||"
    },
    {
        "line": 2025,
        "fullcodeline": "if ((image->page.width != 0 && image->page.width != image->columns) ||"
    },
    {
        "line": 2044,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 158,
        "fullcodeline": "if (LocaleCompare(libpng_vers,libpng_runv) != 0)"
    },
    {
        "line": 165,
        "fullcodeline": "if (LocaleCompare(zlib_vers,zlib_runv) != 0)"
    },
    {
        "line": 271,
        "fullcodeline": "if (pixel_info != (MemoryInfo *) NULL)"
    },
    {
        "line": 274,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 278,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 331,
        "fullcodeline": "png_set_read_fn(ping,image,png_get_data);"
    },
    {
        "line": 342,
        "fullcodeline": "value=GetImageOption(image_info,\"png:preserve-iCCP\");"
    },
    {
        "line": 433,
        "fullcodeline": "if (value == NULL)"
    },
    {
        "line": 436,
        "fullcodeline": "if (value != NULL)"
    },
    {
        "line": 446,
        "fullcodeline": "(int) ping_color_type);"
    },
    {
        "line": 450,
        "fullcodeline": "(int) ping_bit_depth);"
    },
    {
        "line": 495,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 503,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 511,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 520,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 680,
        "fullcodeline": "image->gamma=(float) file_gamma;"
    },
    {
        "line": 689,
        "fullcodeline": "if (mng_info->have_global_chrm != MagickFalse)"
    },
    {
        "line": 717,
        "fullcodeline": "if (image->chromaticity.red_primary.x>0.6399f &&"
    },
    {
        "line": 738,
        "fullcodeline": "if (ping_found_sRGB != MagickTrue &&"
    },
    {
        "line": 814,
        "fullcodeline": "if ((number_colors == 0) &&"
    },
    {
        "line": 949,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 955,
        "fullcodeline": "if ((ping_color_type == PNG_COLOR_TYPE_GRAY &&"
    },
    {
        "line": 1043,
        "fullcodeline": "if (image_gamma > 0.75)"
    },
    {
        "line": 1071,
        "fullcodeline": "(int) ping_color_type == PNG_COLOR_TYPE_GRAY))"
    },
    {
        "line": 1083,
        "fullcodeline": "if (image->colors > 65536L)"
    },
    {
        "line": 1086,
        "fullcodeline": "if ((int) ping_color_type == PNG_COLOR_TYPE_PALETTE)"
    },
    {
        "line": 1105,
        "fullcodeline": "if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)"
    },
    {
        "line": 1108,
        "fullcodeline": "if ((int) ping_color_type == PNG_COLOR_TYPE_PALETTE)"
    },
    {
        "line": 1159,
        "fullcodeline": "\"%d, %d\",(int) ping_width, (int) ping_height);"
    },
    {
        "line": 1163,
        "fullcodeline": "(int) ping_file_depth);"
    },
    {
        "line": 1167,
        "fullcodeline": "(int) ping_color_type,"
    },
    {
        "line": 1168,
        "fullcodeline": "Magick_ColorType_from_PNG_ColorType((int)ping_color_type));"
    },
    {
        "line": 1173,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d (Not interlaced)\","
    },
    {
        "line": 1191,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d\","
    },
    {
        "line": 1193,
        "fullcodeline": "(void) SetImageProperty(image,\"png:PLTE.number_colors\",msg,"
    },
    {
        "line": 1213,
        "fullcodeline": "if (png_get_valid(ping,ping_info,PNG_INFO_tRNS))"
    },
    {
        "line": 1216,
        "fullcodeline": "(((int) ping_color_type == PNG_COLOR_TYPE_RGB_ALPHA) ||"
    },
    {
        "line": 1221,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1231,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1244,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 1250,
        "fullcodeline": "pixel_info=AcquireVirtualMemory(ping_rowbytes,sizeof(*ping_pixels));"
    },
    {
        "line": 1613,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1632,
        "fullcodeline": "if (storage_class == PseudoClass)"
    },
    {
        "line": 1709,
        "fullcodeline": "if (j == 0)"
    },
    {
        "line": 1716,
        "fullcodeline": "if (status != MagickFalse)"
    },
    {
        "line": 1877,
        "fullcodeline": "(png_get_valid(ping,ping_info,PNG_INFO_tRNS))) ?"
    },
    {
        "line": 1914,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 1916,
        "fullcodeline": "(void) SetImageProperty(image,\"png:text\",msg,"
    },
    {
        "line": 1922,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 1924,
        "fullcodeline": "(void) SetImageProperty(image,\"png:text-encoded profiles\",msg,"
    },
    {
        "line": 1931,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%s\","
    },
    {
        "line": 1933,
        "fullcodeline": "(void) SetImageProperty(image,\"png:cHRM\",msg,"
    },
    {
        "line": 1940,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%s\","
    },
    {
        "line": 1942,
        "fullcodeline": "(void) SetImageProperty(image,\"png:bKGD\",msg,"
    },
    {
        "line": 1957,
        "fullcodeline": "(void) SetImageProperty(image,\"png:tRNS\",msg,"
    },
    {
        "line": 1976,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 1979,
        "fullcodeline": "(void) SetImageProperty(image,\"png:gAMA\",msg,"
    },
    {
        "line": 2014,
        "fullcodeline": "(image->page.x != 0 || image->page.y != 0))"
    },
    {
        "line": 2016,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 2020,
        "fullcodeline": "(void) SetImageProperty(image,\"png:caNv\",msg,"
    },
    {
        "line": 2026,
        "fullcodeline": "(image->page.height != 0 && image->page.height != image->rows))"
    },
    {
        "line": 2028,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,"
    },
    {
        "line": 2031,
        "fullcodeline": "(void) SetImageProperty(image,\"png:vpAg\",msg,"
    },
    {
        "line": 160,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"      running with   %s\","
    },
    {
        "line": 167,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"      running with   %s\","
    },
    {
        "line": 201,
        "fullcodeline": "(int) image->alpha_trait, (int) image->rendering_intent,"
    },
    {
        "line": 202,
        "fullcodeline": "(int) image->colorspace, image->gamma);"
    },
    {
        "line": 272,
        "fullcodeline": "pixel_info=RelinquishVirtualMemory(pixel_info);"
    },
    {
        "line": 275,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 344,
        "fullcodeline": "if (value == NULL)"
    },
    {
        "line": 347,
        "fullcodeline": "if (value != NULL)"
    },
    {
        "line": 434,
        "fullcodeline": "value=GetImageArtifact(image,\"png:swap-bytes\");"
    },
    {
        "line": 437,
        "fullcodeline": "png_set_swap(ping);"
    },
    {
        "line": 485,
        "fullcodeline": "(double) ping_width, (double) ping_height,"
    },
    {
        "line": 496,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 504,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 512,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 521,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 681,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 691,
        "fullcodeline": "(void) png_set_cHRM(ping,ping_info,"
    },
    {
        "line": 732,
        "fullcodeline": "image->chromaticity.white_point.y<0.3291f)"
    },
    {
        "line": 733,
        "fullcodeline": "ping_found_sRGB_cHRM=MagickTrue;"
    },
    {
        "line": 743,
        "fullcodeline": "ping_found_iCCP != MagickTrue)"
    },
    {
        "line": 745,
        "fullcodeline": "png_set_sRGB(ping,ping_info,"
    },
    {
        "line": 748,
        "fullcodeline": "file_gamma=1.000f/2.200f;"
    },
    {
        "line": 749,
        "fullcodeline": "ping_found_sRGB=MagickTrue;"
    },
    {
        "line": 750,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 815,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_PALETTE))"
    },
    {
        "line": 950,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 957,
        "fullcodeline": "(ping_color_type == PNG_COLOR_TYPE_RGB &&"
    },
    {
        "line": 965,
        "fullcodeline": "png_free_data(ping, ping_info, PNG_FREE_TRNS, 0);"
    },
    {
        "line": 966,
        "fullcodeline": "png_set_invalid(ping,ping_info,PNG_INFO_tRNS);"
    },
    {
        "line": 967,
        "fullcodeline": "image->alpha_trait=UndefinedPixelTrait;"
    },
    {
        "line": 1041,
        "fullcodeline": "\"    image->gamma=%f\",(float) image_gamma);"
    },
    {
        "line": 1048,
        "fullcodeline": "image->intensity = Rec709LuminancePixelIntensityMethod;"
    },
    {
        "line": 1049,
        "fullcodeline": "SetImageColorspace(image,GRAYColorspace,exception);"
    },
    {
        "line": 1084,
        "fullcodeline": "image->colors=65536L;"
    },
    {
        "line": 1091,
        "fullcodeline": "(void) png_get_PLTE(ping,ping_info,&palette,&number_colors);"
    },
    {
        "line": 1092,
        "fullcodeline": "image->colors=(size_t) number_colors;"
    },
    {
        "line": 1106,
        "fullcodeline": "png_error(ping,\"Memory allocation failed\");"
    },
    {
        "line": 1113,
        "fullcodeline": "(void) png_get_PLTE(ping,ping_info,&palette,&number_colors);"
    },
    {
        "line": 1214,
        "fullcodeline": "image->storage_class=DirectClass;"
    },
    {
        "line": 1222,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1232,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1278,
        "fullcodeline": "for (pass=0; pass < num_passes; pass++)"
    },
    {
        "line": 1569,
        "fullcodeline": "if (found_transparent_pixel != MagickFalse)"
    },
    {
        "line": 1600,
        "fullcodeline": "\"  image->storage_class=%d\\n\",(int) image->storage_class);"
    },
    {
        "line": 1614,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1656,
        "fullcodeline": "(void) SyncImage(image,exception);"
    },
    {
        "line": 1710,
        "fullcodeline": "status = png_get_text(ping,ping_info,&text,&num_text) != 0 ?"
    },
    {
        "line": 1876,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA) ||"
    },
    {
        "line": 2013,
        "fullcodeline": "(image->page.height != 0 && image->page.height != image->rows) ||"
    },
    {
        "line": 345,
        "fullcodeline": "value=GetImageArtifact(image,\"png:preserve-iCCP\");"
    },
    {
        "line": 348,
        "fullcodeline": "ping_preserve_iCCP=MagickTrue;"
    },
    {
        "line": 676,
        "fullcodeline": "png_set_gAMA(ping,ping_info,mng_info->global_gamma);"
    },
    {
        "line": 682,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 731,
        "fullcodeline": "image->chromaticity.white_point.y>0.3289f &&"
    },
    {
        "line": 741,
        "fullcodeline": "(ping_found_cHRM != MagickTrue ||"
    },
    {
        "line": 746,
        "fullcodeline": "Magick_RenderingIntent_to_PNG_RenderingIntent"
    },
    {
        "line": 956,
        "fullcodeline": "(int)ping_trans_color->gray > max_sample) ||"
    },
    {
        "line": 958,
        "fullcodeline": "((int)ping_trans_color->red > max_sample ||"
    },
    {
        "line": 962,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 974,
        "fullcodeline": "scale_to_short = 65535L/((1UL << ping_file_depth)-1);"
    },
    {
        "line": 977,
        "fullcodeline": "transparent_color.red= scale_to_short*ping_trans_color->red;"
    },
    {
        "line": 978,
        "fullcodeline": "transparent_color.green= scale_to_short*ping_trans_color->green;"
    },
    {
        "line": 979,
        "fullcodeline": "transparent_color.blue= scale_to_short*ping_trans_color->blue;"
    },
    {
        "line": 980,
        "fullcodeline": "transparent_color.alpha= scale_to_short*ping_trans_color->gray;"
    },
    {
        "line": 1054,
        "fullcodeline": "save_rendering_intent = image->rendering_intent;"
    },
    {
        "line": 1056,
        "fullcodeline": "save_chromaticity = image->chromaticity;"
    },
    {
        "line": 1058,
        "fullcodeline": "SetImageColorspace(image,GRAYColorspace,exception);"
    },
    {
        "line": 1059,
        "fullcodeline": "image->rendering_intent = save_rendering_intent;"
    },
    {
        "line": 1060,
        "fullcodeline": "image->chromaticity = save_chromaticity;"
    },
    {
        "line": 1094,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1115,
        "fullcodeline": "for (i=0; i < (ssize_t) number_colors; i++)"
    },
    {
        "line": 1122,
        "fullcodeline": "for ( ; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 1135,
        "fullcodeline": "scale = (Quantum) (65535.0/((1UL << ping_file_depth)-1.0));"
    },
    {
        "line": 1174,
        "fullcodeline": "(int) ping_interlace_method);"
    },
    {
        "line": 1176,
        "fullcodeline": "else if (ping_interlace_method == 1)"
    },
    {
        "line": 1192,
        "fullcodeline": "(int) number_colors);"
    },
    {
        "line": 1210,
        "fullcodeline": "(image_info->first_scene+image_info->number_scenes))))"
    },
    {
        "line": 1218,
        "fullcodeline": "(png_get_valid(ping,ping_info,PNG_INFO_tRNS))) ?"
    },
    {
        "line": 1283,
        "fullcodeline": "image->alpha_trait="
    },
    {
        "line": 1389,
        "fullcodeline": "for (pass=0; pass < num_passes; pass++)"
    },
    {
        "line": 1570,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1634,
        "fullcodeline": "if ((int) ping_color_type == PNG_COLOR_TYPE_PALETTE)"
    },
    {
        "line": 1713,
        "fullcodeline": "status = png_get_text(ping,end_info,&text,&num_text) != 0 ?"
    },
    {
        "line": 1717,
        "fullcodeline": "for (i=0; i < (ssize_t) num_text; i++)"
    },
    {
        "line": 2018,
        "fullcodeline": "(double) image->page.width,(double) image->page.height,"
    },
    {
        "line": 2019,
        "fullcodeline": "(double) image->page.x,(double) image->page.y);"
    },
    {
        "line": 2030,
        "fullcodeline": "(double) image->page.width,(double) image->page.height);"
    },
    {
        "line": 730,
        "fullcodeline": "image->chromaticity.white_point.x<0.3128f &&"
    },
    {
        "line": 739,
        "fullcodeline": "(ping_found_gAMA != MagickTrue ||"
    },
    {
        "line": 742,
        "fullcodeline": "ping_found_sRGB_cHRM != MagickFalse) &&"
    },
    {
        "line": 819,
        "fullcodeline": "png_set_PLTE(ping,ping_info,mng_info->global_plte,"
    },
    {
        "line": 960,
        "fullcodeline": "(int)ping_trans_color->blue > max_sample)))"
    },
    {
        "line": 963,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 982,
        "fullcodeline": "if (ping_color_type == PNG_COLOR_TYPE_GRAY)"
    },
    {
        "line": 1095,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1117,
        "fullcodeline": "image->colormap[i].red=ScaleCharToQuantum(palette[i].red);"
    },
    {
        "line": 1118,
        "fullcodeline": "image->colormap[i].green=ScaleCharToQuantum(palette[i].green);"
    },
    {
        "line": 1119,
        "fullcodeline": "image->colormap[i].blue=ScaleCharToQuantum(palette[i].blue);"
    },
    {
        "line": 1124,
        "fullcodeline": "image->colormap[i].red=0;"
    },
    {
        "line": 1125,
        "fullcodeline": "image->colormap[i].green=0;"
    },
    {
        "line": 1126,
        "fullcodeline": "image->colormap[i].blue=0;"
    },
    {
        "line": 1141,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 1178,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d (Adam7 method)\","
    },
    {
        "line": 1217,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA) ||"
    },
    {
        "line": 1223,
        "fullcodeline": "\"    Skipping PNG image data for scene %.20g\",(double)"
    },
    {
        "line": 1284,
        "fullcodeline": "(((int) ping_color_type == PNG_COLOR_TYPE_RGB_ALPHA) ||"
    },
    {
        "line": 1289,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 1378,
        "fullcodeline": "if (num_passes != 1)"
    },
    {
        "line": 1404,
        "fullcodeline": "image->alpha_trait=ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA ?"
    },
    {
        "line": 1407,
        "fullcodeline": "quantum_scanline=(Quantum *) AcquireQuantumMemory(image->columns,"
    },
    {
        "line": 1561,
        "fullcodeline": "quantum_scanline=(Quantum *) RelinquishMagickMemory(quantum_scanline);"
    },
    {
        "line": 1574,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1577,
        "fullcodeline": "ping_color_type&=0x03;"
    },
    {
        "line": 1664,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 729,
        "fullcodeline": "image->chromaticity.white_point.x>0.3126f &&"
    },
    {
        "line": 740,
        "fullcodeline": "(image->gamma > .45 && image->gamma < .46)) &&"
    },
    {
        "line": 820,
        "fullcodeline": "(int) mng_info->global_plte_length);"
    },
    {
        "line": 822,
        "fullcodeline": "if (!png_get_valid(ping,ping_info,PNG_INFO_tRNS))"
    },
    {
        "line": 869,
        "fullcodeline": "png_error(ping,\"No global PLTE in file\");"
    },
    {
        "line": 959,
        "fullcodeline": "(int)ping_trans_color->green > max_sample ||"
    },
    {
        "line": 991,
        "fullcodeline": "transparent_color.red=transparent_color.alpha;"
    },
    {
        "line": 992,
        "fullcodeline": "transparent_color.green=transparent_color.alpha;"
    },
    {
        "line": 993,
        "fullcodeline": "transparent_color.blue=transparent_color.alpha;"
    },
    {
        "line": 1143,
        "fullcodeline": "image->colormap[i].red=(Quantum) (i*scale);"
    },
    {
        "line": 1144,
        "fullcodeline": "image->colormap[i].green=(Quantum) (i*scale);"
    },
    {
        "line": 1145,
        "fullcodeline": "image->colormap[i].blue=(Quantum) (i*scale);"
    },
    {
        "line": 1183,
        "fullcodeline": "(void) FormatLocaleString(msg,MagickPathExtent,\"%d (Unknown method)\","
    },
    {
        "line": 1297,
        "fullcodeline": "png_read_row(ping,ping_pixels+row_offset,NULL);"
    },
    {
        "line": 1302,
        "fullcodeline": "q=GetAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 1380,
        "fullcodeline": "status=SetImageProgress(image,LoadImageTag,pass,num_passes);"
    },
    {
        "line": 1400,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1411,
        "fullcodeline": "if (quantum_scanline == (Quantum *) NULL)"
    },
    {
        "line": 1414,
        "fullcodeline": "for (y=0; y < (ssize_t) image->rows; y++)"
    },
    {
        "line": 1553,
        "fullcodeline": "if (num_passes != 1)"
    },
    {
        "line": 1636,
        "fullcodeline": "for (x=0; x < ping_num_trans; x++)"
    },
    {
        "line": 1666,
        "fullcodeline": "image->storage_class=storage_class;"
    },
    {
        "line": 1667,
        "fullcodeline": "q=GetAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 1721,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1725,
        "fullcodeline": "if (strlen(text[i].key) > 16 &&"
    },
    {
        "line": 728,
        "fullcodeline": "image->chromaticity.blue_primary.y<0.0601f &&"
    },
    {
        "line": 984,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1179,
        "fullcodeline": "(int) ping_interlace_method);"
    },
    {
        "line": 1286,
        "fullcodeline": "(png_get_valid(ping,ping_info,PNG_INFO_tRNS))) ?"
    },
    {
        "line": 1291,
        "fullcodeline": "if (num_passes > 1)"
    },
    {
        "line": 1299,
        "fullcodeline": "if (pass < num_passes-1)"
    },
    {
        "line": 1304,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 1307,
        "fullcodeline": "if ((int) ping_color_type == PNG_COLOR_TYPE_GRAY)"
    },
    {
        "line": 1327,
        "fullcodeline": "if (found_transparent_pixel == MagickFalse)"
    },
    {
        "line": 1366,
        "fullcodeline": "if (num_passes == 1)"
    },
    {
        "line": 1374,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 1381,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1401,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1412,
        "fullcodeline": "png_error(ping,\"Memory allocation failed\");"
    },
    {
        "line": 1425,
        "fullcodeline": "png_read_row(ping,ping_pixels+row_offset,NULL);"
    },
    {
        "line": 1430,
        "fullcodeline": "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 1435,
        "fullcodeline": "p=ping_pixels+row_offset;"
    },
    {
        "line": 1436,
        "fullcodeline": "r=quantum_scanline;"
    },
    {
        "line": 1528,
        "fullcodeline": "r=quantum_scanline;"
    },
    {
        "line": 1530,
        "fullcodeline": "q=GetAuthenticPixels(image,0,y,image->columns,1,exception);"
    },
    {
        "line": 1555,
        "fullcodeline": "status=SetImageProgress(image,LoadImageTag,pass,num_passes);"
    },
    {
        "line": 1638,
        "fullcodeline": "image->colormap[x].alpha_trait=BlendPixelTrait;"
    },
    {
        "line": 1639,
        "fullcodeline": "image->colormap[x].alpha ="
    },
    {
        "line": 1644,
        "fullcodeline": "else if (ping_color_type == PNG_COLOR_TYPE_GRAY)"
    },
    {
        "line": 1669,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 1676,
        "fullcodeline": "for (x=(ssize_t) image->columns-1; x >= 0; x--)"
    },
    {
        "line": 1698,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 1722,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1726,
        "fullcodeline": "memcmp(text[i].key, \"Raw profile type \",17) == 0)"
    },
    {
        "line": 1731,
        "fullcodeline": "value=GetImageOption(image_info,\"profile:skip\");"
    },
    {
        "line": 727,
        "fullcodeline": "image->chromaticity.blue_primary.y>0.0599f &&"
    },
    {
        "line": 986,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1184,
        "fullcodeline": "(int) ping_interlace_method);"
    },
    {
        "line": 1285,
        "fullcodeline": "((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA) ||"
    },
    {
        "line": 1292,
        "fullcodeline": "row_offset=ping_rowbytes*y;"
    },
    {
        "line": 1308,
        "fullcodeline": "(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 1368,
        "fullcodeline": "status=SetImageProgress(image,LoadImageTag,"
    },
    {
        "line": 1408,
        "fullcodeline": "(image->alpha_trait  == BlendPixelTrait?  2 : 1)*"
    },
    {
        "line": 1419,
        "fullcodeline": "if (num_passes > 1)"
    },
    {
        "line": 1427,
        "fullcodeline": "if (pass < num_passes-1)"
    },
    {
        "line": 1432,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 1532,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 1534,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 1540,
        "fullcodeline": "if (SyncAuthenticPixels(image,exception) == MagickFalse)"
    },
    {
        "line": 1543,
        "fullcodeline": "if (num_passes == 1)"
    },
    {
        "line": 1557,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1640,
        "fullcodeline": "ScaleCharToQuantum((unsigned char)ping_trans_alpha[x]);"
    },
    {
        "line": 1695,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 1733,
        "fullcodeline": "if (IsOptionMember(text[i].key+17,value) == MagickFalse)"
    },
    {
        "line": 1756,
        "fullcodeline": "value=(char *) AcquireQuantumMemory(length+MagickPathExtent,"
    },
    {
        "line": 1763,
        "fullcodeline": "*value='\\0';"
    },
    {
        "line": 1764,
        "fullcodeline": "(void) ConcatenateMagickString(value,text[i].text,length+2);"
    },
    {
        "line": 1783,
        "fullcodeline": "value=DestroyString(value);"
    },
    {
        "line": 726,
        "fullcodeline": "image->chromaticity.blue_primary.x<0.1501f &&"
    },
    {
        "line": 826,
        "fullcodeline": "png_warning(ping,"
    },
    {
        "line": 1295,
        "fullcodeline": "row_offset=0;"
    },
    {
        "line": 1330,
        "fullcodeline": "if (y== 0 && logging != MagickFalse)"
    },
    {
        "line": 1334,
        "fullcodeline": "for (x=(ssize_t) image->columns-1; x >= 0; x--)"
    },
    {
        "line": 1371,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1420,
        "fullcodeline": "row_offset=ping_rowbytes*y;"
    },
    {
        "line": 1536,
        "fullcodeline": "SetPixelIndex(image,*r++,q);"
    },
    {
        "line": 1537,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 1545,
        "fullcodeline": "status=SetImageProgress(image,LoadImageTag,(MagickOffsetType) y,"
    },
    {
        "line": 1646,
        "fullcodeline": "for (x=0; x < (int) image->colors; x++)"
    },
    {
        "line": 1678,
        "fullcodeline": "if (ScaleQuantumToShort(GetPixelRed(image,q)) =="
    },
    {
        "line": 1735,
        "fullcodeline": "(void) Magick_png_read_raw_profile(ping,image,image_info,text,"
    },
    {
        "line": 1737,
        "fullcodeline": "num_raw_profiles++;"
    },
    {
        "line": 1758,
        "fullcodeline": "if (value == (char *) NULL)"
    },
    {
        "line": 1769,
        "fullcodeline": "if (!png_get_valid(ping,ping_info,PNG_INFO_pHYs) ||"
    },
    {
        "line": 1774,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 725,
        "fullcodeline": "image->chromaticity.blue_primary.x>0.1499f &&"
    },
    {
        "line": 831,
        "fullcodeline": "png_set_tRNS(ping,ping_info,mng_info->global_trns,"
    },
    {
        "line": 988,
        "fullcodeline": "(int) ping_trans_color->gray,(int) transparent_color.alpha);"
    },
    {
        "line": 1309,
        "fullcodeline": "GrayQuantum,ping_pixels+row_offset,exception);"
    },
    {
        "line": 1311,
        "fullcodeline": "else if ((int) ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA)"
    },
    {
        "line": 1331,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1362,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 1369,
        "fullcodeline": "(MagickOffsetType) y, image->rows);"
    },
    {
        "line": 1423,
        "fullcodeline": "row_offset=0;"
    },
    {
        "line": 1548,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 1682,
        "fullcodeline": "ScaleQuantumToShort(GetPixelBlue(image,q)) =="
    },
    {
        "line": 1685,
        "fullcodeline": "SetPixelAlpha(image,TransparentAlpha,q);"
    },
    {
        "line": 1738,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1760,
        "fullcodeline": "png_error(ping,\"Memory allocation failed\");"
    },
    {
        "line": 1770,
        "fullcodeline": "(LocaleCompare(text[i].key,\"density\") != 0 &&"
    },
    {
        "line": 1772,
        "fullcodeline": "(void) SetImageProperty(image,text[i].key,value,exception);"
    },
    {
        "line": 1776,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 724,
        "fullcodeline": "image->chromaticity.green_primary.y<0.6001f &&"
    },
    {
        "line": 832,
        "fullcodeline": "(int) mng_info->global_trns_length,NULL);"
    },
    {
        "line": 1312,
        "fullcodeline": "(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 1336,
        "fullcodeline": "if ((ping_color_type == PNG_COLOR_TYPE_RGBA ||"
    },
    {
        "line": 1347,
        "fullcodeline": "if ((ping_color_type == PNG_COLOR_TYPE_RGB ||"
    },
    {
        "line": 1443,
        "fullcodeline": "if (ping_color_type == 4)"
    },
    {
        "line": 1467,
        "fullcodeline": "for (x=(ssize_t) image->columns-1; x >= 0; x--)"
    },
    {
        "line": 1648,
        "fullcodeline": "if (ScaleQuantumToShort(image->colormap[x].red) =="
    },
    {
        "line": 1680,
        "fullcodeline": "ScaleQuantumToShort(GetPixelGreen(image,q)) =="
    },
    {
        "line": 1736,
        "fullcodeline": "(int) i,exception);"
    },
    {
        "line": 1739,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1744,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1771,
        "fullcodeline": "LocaleCompare(text[i].key,\"units\") != 0))"
    },
    {
        "line": 723,
        "fullcodeline": "image->chromaticity.green_primary.y>0.5999f &&"
    },
    {
        "line": 1338,
        "fullcodeline": "(GetPixelAlpha(image,q) != OpaqueAlpha))"
    },
    {
        "line": 1344,
        "fullcodeline": "found_transparent_pixel = MagickTrue;"
    },
    {
        "line": 1349,
        "fullcodeline": "(ScaleQuantumToShort(GetPixelRed(image,q)) =="
    },
    {
        "line": 1359,
        "fullcodeline": "found_transparent_pixel = MagickTrue;"
    },
    {
        "line": 1503,
        "fullcodeline": "p++; /* strip low byte */"
    },
    {
        "line": 1651,
        "fullcodeline": "image->colormap[x].alpha_trait=BlendPixelTrait;"
    },
    {
        "line": 1652,
        "fullcodeline": "image->colormap[x].alpha = (Quantum) TransparentAlpha;"
    },
    {
        "line": 1745,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1779,
        "fullcodeline": "(unsigned long) length,"
    },
    {
        "line": 722,
        "fullcodeline": "image->chromaticity.green_primary.x<0.3001f &&"
    },
    {
        "line": 1313,
        "fullcodeline": "GrayAlphaQuantum,ping_pixels+row_offset,exception);"
    },
    {
        "line": 1315,
        "fullcodeline": "else if ((int) ping_color_type == PNG_COLOR_TYPE_RGB_ALPHA)"
    },
    {
        "line": 1337,
        "fullcodeline": "ping_color_type == PNG_COLOR_TYPE_GRAY_ALPHA) &&"
    },
    {
        "line": 1340,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1348,
        "fullcodeline": "ping_color_type == PNG_COLOR_TYPE_GRAY) &&"
    },
    {
        "line": 1353,
        "fullcodeline": "ScaleQuantumToShort(GetPixelBlue(image,q)) =="
    },
    {
        "line": 1356,
        "fullcodeline": "if (logging != MagickFalse)"
    },
    {
        "line": 1444,
        "fullcodeline": "for (x=(ssize_t) image->columns-1; x >= 0; x--)"
    },
    {
        "line": 1505,
        "fullcodeline": "if (ping_color_type == 4)"
    },
    {
        "line": 1740,
        "fullcodeline": "\"    Read raw profile %s\",text[i].key+17);"
    },
    {
        "line": 721,
        "fullcodeline": "image->chromaticity.green_primary.x>0.2999f &&"
    },
    {
        "line": 1316,
        "fullcodeline": "(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 1341,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1351,
        "fullcodeline": "ScaleQuantumToShort(GetPixelGreen(image,q)) =="
    },
    {
        "line": 1357,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 1448,
        "fullcodeline": "alpha=ScaleCharToQuantum((unsigned char)*p++);"
    },
    {
        "line": 1450,
        "fullcodeline": "SetPixelAlpha(image,alpha,q);"
    },
    {
        "line": 1455,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 1459,
        "fullcodeline": "for (x=(ssize_t) image->columns-1; x >= 0; x--)"
    },
    {
        "line": 1502,
        "fullcodeline": "*r++=(*p++);"
    },
    {
        "line": 1507,
        "fullcodeline": "SetPixelAlpha(image,*p++,q);"
    },
    {
        "line": 1512,
        "fullcodeline": "p++;"
    },
    {
        "line": 1513,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 1746,
        "fullcodeline": "\"    Skipping raw profile %s\",text[i].key+17);"
    },
    {
        "line": 720,
        "fullcodeline": "image->chromaticity.red_primary.y<0.3301f &&"
    },
    {
        "line": 1452,
        "fullcodeline": "if (alpha != OpaqueAlpha)"
    },
    {
        "line": 1509,
        "fullcodeline": "if (GetPixelAlpha(image,q) != OpaqueAlpha)"
    },
    {
        "line": 719,
        "fullcodeline": "image->chromaticity.red_primary.y>0.3299f &&"
    },
    {
        "line": 1317,
        "fullcodeline": "RGBAQuantum,ping_pixels+row_offset,exception);"
    },
    {
        "line": 1319,
        "fullcodeline": "else if ((int) ping_color_type == PNG_COLOR_TYPE_PALETTE)"
    },
    {
        "line": 1446,
        "fullcodeline": "*r++=*p++;"
    },
    {
        "line": 1453,
        "fullcodeline": "found_transparent_pixel = MagickTrue;"
    },
    {
        "line": 1460,
        "fullcodeline": "*r++=*p++;"
    },
    {
        "line": 1510,
        "fullcodeline": "found_transparent_pixel = MagickTrue;"
    },
    {
        "line": 718,
        "fullcodeline": "image->chromaticity.red_primary.x<0.6401f &&"
    },
    {
        "line": 1320,
        "fullcodeline": "(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 1324,
        "fullcodeline": "(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,"
    },
    {
        "line": 1321,
        "fullcodeline": "IndexQuantum,ping_pixels+row_offset,exception);"
    },
    {
        "line": 1325,
        "fullcodeline": "RGBQuantum,ping_pixels+row_offset,exception);"
    }
]