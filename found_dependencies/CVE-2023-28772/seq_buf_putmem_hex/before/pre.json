[
    {
        "line": 4,
        "fullcodeline": "unsigned char hex[HEX_CHARS];"
    },
    {
        "line": 5,
        "fullcodeline": "const unsigned char *data = mem;"
    },
    {
        "line": 9,
        "fullcodeline": "WARN_ON(s->size == 0);"
    },
    {
        "line": 12,
        "fullcodeline": "start_len = min(len, HEX_CHARS - 1);"
    },
    {
        "line": 25,
        "fullcodeline": "len -= j / 2;"
    },
    {
        "line": 26,
        "fullcodeline": "hex[j++] = ' ';"
    },
    {
        "line": 28,
        "fullcodeline": "seq_buf_putmem(s, hex, j);"
    },
    {
        "line": 16,
        "fullcodeline": "for (i = start_len-1, j = 0; i >= 0; i--) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (WARN_ON_ONCE(j == 0 || j/2 > len))"
    },
    {
        "line": 29,
        "fullcodeline": "if (seq_buf_has_overflowed(s))"
    },
    {
        "line": 18,
        "fullcodeline": "hex[j++] = hex_asc_hi(data[i]);"
    },
    {
        "line": 19,
        "fullcodeline": "hex[j++] = hex_asc_lo(data[i]);"
    },
    {
        "line": 30,
        "fullcodeline": "return -1;"
    }
]