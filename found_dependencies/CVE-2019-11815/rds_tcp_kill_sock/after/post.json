[
    {
        "line": 4,
        "fullcodeline": "LIST_HEAD(tmp_list);"
    },
    {
        "line": 5,
        "fullcodeline": "struct rds_tcp_net *rtn = net_generic(net, rds_tcp_netid);"
    },
    {
        "line": 6,
        "fullcodeline": "struct socket *lsock = rtn->rds_tcp_listen_sock;"
    },
    {
        "line": 8,
        "fullcodeline": "rtn->rds_tcp_listen_sock = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "rds_tcp_listen_stop(lsock, &rtn->rds_tcp_accept_w);"
    },
    {
        "line": 10,
        "fullcodeline": "spin_lock_irq(&rds_tcp_conn_lock);"
    },
    {
        "line": 11,
        "fullcodeline": "list_for_each_entry_safe(tc, _tc, &rds_tcp_conn_list, t_tcp_node) {"
    },
    {
        "line": 23,
        "fullcodeline": "spin_unlock_irq(&rds_tcp_conn_lock);"
    },
    {
        "line": 24,
        "fullcodeline": "list_for_each_entry_safe(tc, _tc, &tmp_list, t_tcp_node)"
    },
    {
        "line": 25,
        "fullcodeline": "rds_conn_destroy(tc->t_cpath->cp_conn);"
    },
    {
        "line": 12,
        "fullcodeline": "struct net *c_net = read_pnet(&tc->t_cpath->cp_conn->c_net);"
    },
    {
        "line": 14,
        "fullcodeline": "if (net != c_net)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!list_has_conn(&tmp_list, tc->t_cpath->cp_conn)) {"
    },
    {
        "line": 17,
        "fullcodeline": "list_move_tail(&tc->t_tcp_node, &tmp_list);"
    },
    {
        "line": 19,
        "fullcodeline": "list_del(&tc->t_tcp_node);"
    },
    {
        "line": 20,
        "fullcodeline": "tc->t_tcp_node_detached = true;"
    }
]