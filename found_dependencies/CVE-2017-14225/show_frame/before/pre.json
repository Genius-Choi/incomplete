[
    {
        "line": 5,
        "fullcodeline": "char val_str[128];"
    },
    {
        "line": 9,
        "fullcodeline": "av_bprint_init(&pbuf, 1, AV_BPRINT_SIZE_UNLIMITED);"
    },
    {
        "line": 11,
        "fullcodeline": "writer_print_section_header(w, SECTION_ID_FRAME);"
    },
    {
        "line": 13,
        "fullcodeline": "s = av_get_media_type_string(stream->codecpar->codec_type);"
    },
    {
        "line": 16,
        "fullcodeline": "print_int(\"stream_index\",           stream->index);"
    },
    {
        "line": 17,
        "fullcodeline": "print_int(\"key_frame\",              frame->key_frame);"
    },
    {
        "line": 18,
        "fullcodeline": "print_ts  (\"pkt_pts\",               frame->pts);"
    },
    {
        "line": 19,
        "fullcodeline": "print_time(\"pkt_pts_time\",          frame->pts, &stream->time_base);"
    },
    {
        "line": 20,
        "fullcodeline": "print_ts  (\"pkt_dts\",               frame->pkt_dts);"
    },
    {
        "line": 21,
        "fullcodeline": "print_time(\"pkt_dts_time\",          frame->pkt_dts, &stream->time_base);"
    },
    {
        "line": 22,
        "fullcodeline": "print_ts  (\"best_effort_timestamp\", frame->best_effort_timestamp);"
    },
    {
        "line": 23,
        "fullcodeline": "print_time(\"best_effort_timestamp_time\", frame->best_effort_timestamp, &stream->time_base);"
    },
    {
        "line": 24,
        "fullcodeline": "print_duration_ts  (\"pkt_duration\",      frame->pkt_duration);"
    },
    {
        "line": 25,
        "fullcodeline": "print_duration_time(\"pkt_duration_time\", frame->pkt_duration, &stream->time_base);"
    },
    {
        "line": 148,
        "fullcodeline": "writer_print_section_footer(w);"
    },
    {
        "line": 150,
        "fullcodeline": "av_bprint_finalize(&pbuf, NULL);"
    },
    {
        "line": 151,
        "fullcodeline": "fflush(stdout);"
    },
    {
        "line": 28,
        "fullcodeline": "if (frame->pkt_size != -1) print_val    (\"pkt_size\", frame->pkt_size, unit_byte_str);"
    },
    {
        "line": 14,
        "fullcodeline": "if (s) print_str    (\"media_type\", s);"
    },
    {
        "line": 35,
        "fullcodeline": "print_int(\"width\",                  frame->width);"
    },
    {
        "line": 36,
        "fullcodeline": "print_int(\"height\",                 frame->height);"
    },
    {
        "line": 37,
        "fullcodeline": "s = av_get_pix_fmt_name(frame->format);"
    },
    {
        "line": 40,
        "fullcodeline": "sar = av_guess_sample_aspect_ratio(fmt_ctx, stream, frame);"
    },
    {
        "line": 46,
        "fullcodeline": "print_fmt(\"pict_type\",              \"%c\", av_get_picture_type_char(frame->pict_type));"
    },
    {
        "line": 47,
        "fullcodeline": "print_int(\"coded_picture_number\",   frame->coded_picture_number);"
    },
    {
        "line": 48,
        "fullcodeline": "print_int(\"display_picture_number\", frame->display_picture_number);"
    },
    {
        "line": 49,
        "fullcodeline": "print_int(\"interlaced_frame\",       frame->interlaced_frame);"
    },
    {
        "line": 50,
        "fullcodeline": "print_int(\"top_field_first\",        frame->top_field_first);"
    },
    {
        "line": 51,
        "fullcodeline": "print_int(\"repeat_pict\",            frame->repeat_pict);"
    },
    {
        "line": 80,
        "fullcodeline": "s = av_get_sample_fmt_name(frame->format);"
    },
    {
        "line": 83,
        "fullcodeline": "print_int(\"nb_samples\",         frame->nb_samples);"
    },
    {
        "line": 84,
        "fullcodeline": "print_int(\"channels\", frame->channels);"
    },
    {
        "line": 95,
        "fullcodeline": "show_tags(w, frame->metadata, SECTION_ID_FRAME_TAGS);"
    },
    {
        "line": 97,
        "fullcodeline": "show_log(w, SECTION_ID_FRAME_LOGS, SECTION_ID_FRAME_LOG, do_show_log);"
    },
    {
        "line": 99,
        "fullcodeline": "writer_print_section_header(w, SECTION_ID_FRAME_SIDE_DATA_LIST);"
    },
    {
        "line": 145,
        "fullcodeline": "writer_print_section_footer(w);"
    },
    {
        "line": 15,
        "fullcodeline": "else   print_str_opt(\"media_type\", \"unknown\");"
    },
    {
        "line": 29,
        "fullcodeline": "else                       print_str_opt(\"pkt_size\", \"N/A\");"
    },
    {
        "line": 53,
        "fullcodeline": "if (frame->color_range != AVCOL_RANGE_UNSPECIFIED)"
    },
    {
        "line": 58,
        "fullcodeline": "if (frame->colorspace != AVCOL_SPC_UNSPECIFIED)"
    },
    {
        "line": 63,
        "fullcodeline": "if (frame->color_primaries != AVCOL_PRI_UNSPECIFIED)"
    },
    {
        "line": 68,
        "fullcodeline": "if (frame->color_trc != AVCOL_TRC_UNSPECIFIED)"
    },
    {
        "line": 73,
        "fullcodeline": "if (frame->chroma_location != AVCHROMA_LOC_UNSPECIFIED)"
    },
    {
        "line": 100,
        "fullcodeline": "for (i = 0; i < frame->nb_side_data; i++) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (s) print_str    (\"pix_fmt\", s);"
    },
    {
        "line": 42,
        "fullcodeline": "print_q(\"sample_aspect_ratio\", sar, ':');"
    },
    {
        "line": 54,
        "fullcodeline": "print_str(\"color_range\", av_color_range_name(frame->color_range));"
    },
    {
        "line": 59,
        "fullcodeline": "print_str(\"color_space\", av_color_space_name(frame->colorspace));"
    },
    {
        "line": 64,
        "fullcodeline": "print_str(\"color_primaries\", av_color_primaries_name(frame->color_primaries));"
    },
    {
        "line": 69,
        "fullcodeline": "print_str(\"color_transfer\", av_color_transfer_name(frame->color_trc));"
    },
    {
        "line": 74,
        "fullcodeline": "print_str(\"chroma_location\", av_chroma_location_name(frame->chroma_location));"
    },
    {
        "line": 81,
        "fullcodeline": "if (s) print_str    (\"sample_fmt\", s);"
    },
    {
        "line": 86,
        "fullcodeline": "av_bprint_clear(&pbuf);"
    },
    {
        "line": 87,
        "fullcodeline": "av_bprint_channel_layout(&pbuf, frame->channels,"
    },
    {
        "line": 89,
        "fullcodeline": "print_str    (\"channel_layout\", pbuf.str);"
    },
    {
        "line": 101,
        "fullcodeline": "AVFrameSideData *sd = frame->side_data[i];"
    },
    {
        "line": 104,
        "fullcodeline": "writer_print_section_header(w, SECTION_ID_FRAME_SIDE_DATA);"
    },
    {
        "line": 105,
        "fullcodeline": "name = av_frame_side_data_name(sd->type);"
    },
    {
        "line": 106,
        "fullcodeline": "print_str(\"side_data_type\", name ? name : \"unknown\");"
    },
    {
        "line": 143,
        "fullcodeline": "writer_print_section_footer(w);"
    },
    {
        "line": 39,
        "fullcodeline": "else   print_str_opt(\"pix_fmt\", \"unknown\");"
    },
    {
        "line": 44,
        "fullcodeline": "print_str_opt(\"sample_aspect_ratio\", \"N/A\");"
    },
    {
        "line": 56,
        "fullcodeline": "print_str_opt(\"color_range\", av_color_range_name(frame->color_range));"
    },
    {
        "line": 61,
        "fullcodeline": "print_str_opt(\"color_space\", av_color_space_name(frame->colorspace));"
    },
    {
        "line": 66,
        "fullcodeline": "print_str_opt(\"color_primaries\", av_color_primaries_name(frame->color_primaries));"
    },
    {
        "line": 71,
        "fullcodeline": "print_str_opt(\"color_transfer\", av_color_transfer_name(frame->color_trc));"
    },
    {
        "line": 76,
        "fullcodeline": "print_str_opt(\"chroma_location\", av_chroma_location_name(frame->chroma_location));"
    },
    {
        "line": 82,
        "fullcodeline": "else   print_str_opt(\"sample_fmt\", \"unknown\");"
    },
    {
        "line": 91,
        "fullcodeline": "print_str_opt(\"channel_layout\", \"unknown\");"
    },
    {
        "line": 107,
        "fullcodeline": "if (sd->type == AV_FRAME_DATA_DISPLAYMATRIX && sd->size >= 9*4) {"
    },
    {
        "line": 108,
        "fullcodeline": "writer_print_integers(w, \"displaymatrix\", sd->data, 9, \" %11d\", 3, 4, 1);"
    },
    {
        "line": 109,
        "fullcodeline": "print_int(\"rotation\", av_display_rotation_get((int32_t *)sd->data));"
    },
    {
        "line": 110,
        "fullcodeline": "} else if (sd->type == AV_FRAME_DATA_GOP_TIMECODE && sd->size >= 8) {"
    },
    {
        "line": 111,
        "fullcodeline": "char tcbuf[AV_TIMECODE_STR_SIZE];"
    },
    {
        "line": 112,
        "fullcodeline": "av_timecode_make_mpeg_tc_string(tcbuf, *(int64_t *)(sd->data));"
    },
    {
        "line": 113,
        "fullcodeline": "print_str(\"timecode\", tcbuf);"
    },
    {
        "line": 114,
        "fullcodeline": "} else if (sd->type == AV_FRAME_DATA_MASTERING_DISPLAY_METADATA) {"
    },
    {
        "line": 115,
        "fullcodeline": "AVMasteringDisplayMetadata *metadata = (AVMasteringDisplayMetadata *)sd->data;"
    },
    {
        "line": 118,
        "fullcodeline": "print_q(\"red_x\", metadata->display_primaries[0][0], '/');"
    },
    {
        "line": 119,
        "fullcodeline": "print_q(\"red_y\", metadata->display_primaries[0][1], '/');"
    },
    {
        "line": 120,
        "fullcodeline": "print_q(\"green_x\", metadata->display_primaries[1][0], '/');"
    },
    {
        "line": 121,
        "fullcodeline": "print_q(\"green_y\", metadata->display_primaries[1][1], '/');"
    },
    {
        "line": 122,
        "fullcodeline": "print_q(\"blue_x\", metadata->display_primaries[2][0], '/');"
    },
    {
        "line": 123,
        "fullcodeline": "print_q(\"blue_y\", metadata->display_primaries[2][1], '/');"
    },
    {
        "line": 125,
        "fullcodeline": "print_q(\"white_point_x\", metadata->white_point[0], '/');"
    },
    {
        "line": 126,
        "fullcodeline": "print_q(\"white_point_y\", metadata->white_point[1], '/');"
    },
    {
        "line": 130,
        "fullcodeline": "print_q(\"min_luminance\", metadata->min_luminance, '/');"
    },
    {
        "line": 131,
        "fullcodeline": "print_q(\"max_luminance\", metadata->max_luminance, '/');"
    },
    {
        "line": 133,
        "fullcodeline": "} else if (sd->type == AV_FRAME_DATA_CONTENT_LIGHT_LEVEL) {"
    },
    {
        "line": 134,
        "fullcodeline": "AVContentLightMetadata *metadata = (AVContentLightMetadata *)sd->data;"
    },
    {
        "line": 135,
        "fullcodeline": "print_int(\"max_content\", metadata->MaxCLL);"
    },
    {
        "line": 136,
        "fullcodeline": "print_int(\"max_average\", metadata->MaxFALL);"
    },
    {
        "line": 137,
        "fullcodeline": "} else if (sd->type == AV_FRAME_DATA_ICC_PROFILE) {"
    },
    {
        "line": 138,
        "fullcodeline": "AVDictionaryEntry *tag = av_dict_get(sd->metadata, \"name\", NULL, AV_DICT_MATCH_CASE);"
    },
    {
        "line": 141,
        "fullcodeline": "print_int(\"size\", sd->size);"
    },
    {
        "line": 140,
        "fullcodeline": "print_str(tag->key, tag->value);"
    }
]