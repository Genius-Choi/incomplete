[
    {
        "line": 10,
        "fullcodeline": "*match_len = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "ptr = ml_get_buf(ins_buf, cur_match_pos->lnum, FALSE) +"
    },
    {
        "line": 88,
        "fullcodeline": "*match_len = len;"
    },
    {
        "line": 13,
        "fullcodeline": "if (ctrl_x_mode_line_or_eval())"
    },
    {
        "line": 23,
        "fullcodeline": "len = (int)STRLEN(ptr);"
    },
    {
        "line": 15,
        "fullcodeline": "if (compl_status_adding())"
    },
    {
        "line": 27,
        "fullcodeline": "char_u\t*tmp_ptr = ptr;"
    },
    {
        "line": 39,
        "fullcodeline": "tmp_ptr = find_word_end(tmp_ptr);"
    },
    {
        "line": 40,
        "fullcodeline": "len = (int)(tmp_ptr - ptr);"
    },
    {
        "line": 19,
        "fullcodeline": "ptr = ml_get_buf(ins_buf, cur_match_pos->lnum + 1, FALSE);"
    },
    {
        "line": 29,
        "fullcodeline": "if (compl_status_adding() && compl_length <= (int)STRLEN(tmp_ptr))"
    },
    {
        "line": 42,
        "fullcodeline": "if (compl_status_adding() && len == compl_length)"
    },
    {
        "line": 17,
        "fullcodeline": "if (cur_match_pos->lnum >= ins_buf->b_ml.ml_line_count)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!p_paste)"
    },
    {
        "line": 31,
        "fullcodeline": "tmp_ptr += compl_length;"
    },
    {
        "line": 36,
        "fullcodeline": "tmp_ptr = find_word_start(tmp_ptr);"
    },
    {
        "line": 21,
        "fullcodeline": "ptr = skipwhite(ptr);"
    },
    {
        "line": 33,
        "fullcodeline": "if (vim_iswordp(tmp_ptr))"
    },
    {
        "line": 44,
        "fullcodeline": "if (cur_match_pos->lnum < ins_buf->b_ml.ml_line_count)"
    },
    {
        "line": 83,
        "fullcodeline": "if (len == compl_length)"
    },
    {
        "line": 51,
        "fullcodeline": "STRNCPY(IObuff, ptr, len);"
    },
    {
        "line": 52,
        "fullcodeline": "ptr = ml_get_buf(ins_buf, cur_match_pos->lnum + 1, FALSE);"
    },
    {
        "line": 53,
        "fullcodeline": "tmp_ptr = ptr = skipwhite(ptr);"
    },
    {
        "line": 55,
        "fullcodeline": "tmp_ptr = find_word_start(tmp_ptr);"
    },
    {
        "line": 57,
        "fullcodeline": "tmp_ptr = find_word_end(tmp_ptr);"
    },
    {
        "line": 80,
        "fullcodeline": "IObuff[len] = NUL;"
    },
    {
        "line": 81,
        "fullcodeline": "ptr = IObuff;"
    },
    {
        "line": 58,
        "fullcodeline": "if (tmp_ptr > ptr)"
    },
    {
        "line": 76,
        "fullcodeline": "STRNCPY(IObuff + len, ptr, tmp_ptr - ptr);"
    },
    {
        "line": 77,
        "fullcodeline": "len += (int)(tmp_ptr - ptr);"
    },
    {
        "line": 78,
        "fullcodeline": "*cont_s_ipos = TRUE;"
    },
    {
        "line": 60,
        "fullcodeline": "if (*ptr != ')' && IObuff[len - 1] != TAB)"
    },
    {
        "line": 74,
        "fullcodeline": "if (tmp_ptr - ptr >= IOSIZE - len)"
    },
    {
        "line": 75,
        "fullcodeline": "tmp_ptr = ptr + IOSIZE - len - 1;"
    },
    {
        "line": 62,
        "fullcodeline": "if (IObuff[len - 1] != ' ')"
    },
    {
        "line": 65,
        "fullcodeline": "if (p_js"
    },
    {
        "line": 63,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 66,
        "fullcodeline": "&& (IObuff[len - 2] == '.'"
    },
    {
        "line": 71,
        "fullcodeline": "IObuff[len++] = ' ';"
    },
    {
        "line": 67,
        "fullcodeline": "|| (vim_strchr(p_cpo, CPO_JOINSP)"
    },
    {
        "line": 69,
        "fullcodeline": "&& (IObuff[len - 2] == '?'"
    },
    {
        "line": 70,
        "fullcodeline": "|| IObuff[len - 2] == '!'))))"
    }
]