[
    {
        "line": 4,
        "fullcodeline": "int direction = LIST_TAIL;"
    },
    {
        "line": 5,
        "fullcodeline": "long rank = 1, count = -1, maxlen = 0; /* Count -1: option not given. */"
    },
    {
        "line": 61,
        "fullcodeline": "void *arraylenptr = NULL;"
    },
    {
        "line": 66,
        "fullcodeline": "li = listTypeInitIterator(o,direction == LIST_HEAD ? -1 : 0,direction);"
    },
    {
        "line": 68,
        "fullcodeline": "long llen = listTypeLength(o);"
    },
    {
        "line": 69,
        "fullcodeline": "long index = 0, matches = 0, matchindex = -1, arraylen = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "listTypeReleaseIterator(li);"
    },
    {
        "line": 8,
        "fullcodeline": "for (int j = 3; j < c->argc; j++) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (rank < 0) {"
    },
    {
        "line": 51,
        "fullcodeline": "if ((o = lookupKeyRead(c->db,c->argv[1])) == NULL) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (checkType(c,o,OBJ_LIST)) return;"
    },
    {
        "line": 62,
        "fullcodeline": "if (count != -1) arraylenptr = addReplyDeferredLen(c);"
    },
    {
        "line": 70,
        "fullcodeline": "while (listTypeNext(li,&entry) && (maxlen == 0 || index < maxlen)) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (arraylenptr != NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "int moreargs = (c->argc-1)-j;"
    },
    {
        "line": 45,
        "fullcodeline": "rank = -rank;"
    },
    {
        "line": 46,
        "fullcodeline": "direction = LIST_HEAD;"
    },
    {
        "line": 84,
        "fullcodeline": "index++;"
    },
    {
        "line": 85,
        "fullcodeline": "matchindex = -1; /* Remember if we exit the loop without a match. */"
    },
    {
        "line": 92,
        "fullcodeline": "setDeferredArrayLen(c,arraylenptr,arraylen);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!strcasecmp(opt,\"RANK\") && moreargs) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (count != -1)"
    },
    {
        "line": 71,
        "fullcodeline": "if (listTypeEqual(&entry,ele)) {"
    },
    {
        "line": 13,
        "fullcodeline": "j++;"
    },
    {
        "line": 53,
        "fullcodeline": "addReply(c,shared.emptyarray);"
    },
    {
        "line": 72,
        "fullcodeline": "matches++;"
    },
    {
        "line": 73,
        "fullcodeline": "matchindex = (direction == LIST_TAIL) ? index : llen - index - 1;"
    },
    {
        "line": 94,
        "fullcodeline": "if (matchindex != -1)"
    },
    {
        "line": 14,
        "fullcodeline": "if (getLongFromObjectOrReply(c, c->argv[j], &rank, NULL) != C_OK)"
    },
    {
        "line": 16,
        "fullcodeline": "if (rank == 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "addReply(c,shared.null[c->resp]);"
    },
    {
        "line": 74,
        "fullcodeline": "if (matches >= rank) {"
    },
    {
        "line": 95,
        "fullcodeline": "addReplyLongLong(c,matchindex);"
    },
    {
        "line": 17,
        "fullcodeline": "addReplyError(c,\"RANK can't be zero: use 1 to start from \""
    },
    {
        "line": 21,
        "fullcodeline": "} else if (!strcasecmp(opt,\"COUNT\") && moreargs) {"
    },
    {
        "line": 97,
        "fullcodeline": "addReply(c,shared.null[c->resp]);"
    },
    {
        "line": 22,
        "fullcodeline": "j++;"
    },
    {
        "line": 23,
        "fullcodeline": "if (getLongFromObjectOrReply(c, c->argv[j], &count, NULL) != C_OK)"
    },
    {
        "line": 25,
        "fullcodeline": "if (count < 0) {"
    },
    {
        "line": 76,
        "fullcodeline": "arraylen++;"
    },
    {
        "line": 77,
        "fullcodeline": "addReplyLongLong(c,matchindex);"
    },
    {
        "line": 26,
        "fullcodeline": "addReplyError(c,\"COUNT can't be negative\");"
    },
    {
        "line": 29,
        "fullcodeline": "} else if (!strcasecmp(opt,\"MAXLEN\") && moreargs) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (count && matches-rank+1 >= count) break;"
    },
    {
        "line": 30,
        "fullcodeline": "j++;"
    },
    {
        "line": 31,
        "fullcodeline": "if (getLongFromObjectOrReply(c, c->argv[j], &maxlen, NULL) != C_OK)"
    },
    {
        "line": 33,
        "fullcodeline": "if (maxlen < 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "addReply(c,shared.syntaxerr);"
    },
    {
        "line": 34,
        "fullcodeline": "addReplyError(c,\"MAXLEN can't be negative\");"
    }
]