[
    {
        "line": 2,
        "fullcodeline": "quicklistNode *orig_tail = quicklist->tail;"
    },
    {
        "line": 15,
        "fullcodeline": "quicklist->count++;"
    },
    {
        "line": 16,
        "fullcodeline": "quicklist->tail->count++;"
    },
    {
        "line": 3,
        "fullcodeline": "if (likely("
    },
    {
        "line": 17,
        "fullcodeline": "return (orig_tail != quicklist->tail);"
    },
    {
        "line": 4,
        "fullcodeline": "_quicklistNodeAllowInsert(quicklist->tail, quicklist->fill, sz))) {"
    },
    {
        "line": 5,
        "fullcodeline": "quicklist->tail->zl ="
    },
    {
        "line": 7,
        "fullcodeline": "quicklistNodeUpdateSz(quicklist->tail);"
    },
    {
        "line": 6,
        "fullcodeline": "ziplistPush(quicklist->tail->zl, value, sz, ZIPLIST_TAIL);"
    },
    {
        "line": 9,
        "fullcodeline": "quicklistNode *node = quicklistCreateNode();"
    },
    {
        "line": 10,
        "fullcodeline": "node->zl = ziplistPush(ziplistNew(), value, sz, ZIPLIST_TAIL);"
    },
    {
        "line": 12,
        "fullcodeline": "quicklistNodeUpdateSz(node);"
    },
    {
        "line": 13,
        "fullcodeline": "_quicklistInsertNodeAfter(quicklist, quicklist->tail, node);"
    }
]