[
    {
        "line": 10,
        "fullcodeline": "size_t first_bytes = intrev32ifbe(ZIPLIST_BYTES(*first));"
    },
    {
        "line": 11,
        "fullcodeline": "size_t first_len = intrev16ifbe(ZIPLIST_LENGTH(*first));"
    },
    {
        "line": 13,
        "fullcodeline": "size_t second_bytes = intrev32ifbe(ZIPLIST_BYTES(*second));"
    },
    {
        "line": 14,
        "fullcodeline": "size_t second_len = intrev16ifbe(ZIPLIST_LENGTH(*second));"
    },
    {
        "line": 39,
        "fullcodeline": "size_t zlbytes = first_bytes + second_bytes -"
    },
    {
        "line": 41,
        "fullcodeline": "size_t zllength = first_len + second_len;"
    },
    {
        "line": 44,
        "fullcodeline": "zllength = zllength < UINT16_MAX ? zllength : UINT16_MAX;"
    },
    {
        "line": 50,
        "fullcodeline": "size_t first_offset = intrev32ifbe(ZIPLIST_TAIL_OFFSET(*first));"
    },
    {
        "line": 51,
        "fullcodeline": "size_t second_offset = intrev32ifbe(ZIPLIST_TAIL_OFFSET(*second));"
    },
    {
        "line": 54,
        "fullcodeline": "target = zrealloc(target, zlbytes);"
    },
    {
        "line": 74,
        "fullcodeline": "ZIPLIST_BYTES(target) = intrev32ifbe(zlbytes);"
    },
    {
        "line": 75,
        "fullcodeline": "ZIPLIST_LENGTH(target) = intrev16ifbe(zllength);"
    },
    {
        "line": 81,
        "fullcodeline": "ZIPLIST_TAIL_OFFSET(target) = intrev32ifbe("
    },
    {
        "line": 89,
        "fullcodeline": "target = __ziplistCascadeUpdate(target, target+first_offset);"
    },
    {
        "line": 3,
        "fullcodeline": "if (first == NULL || *first == NULL || second == NULL || *second == NULL)"
    },
    {
        "line": 7,
        "fullcodeline": "if (*first == *second)"
    },
    {
        "line": 22,
        "fullcodeline": "if (first_len >= second_len) {"
    },
    {
        "line": 47,
        "fullcodeline": "assert(zlbytes < UINT32_MAX);"
    },
    {
        "line": 24,
        "fullcodeline": "target = *first;"
    },
    {
        "line": 25,
        "fullcodeline": "target_bytes = first_bytes;"
    },
    {
        "line": 26,
        "fullcodeline": "source = *second;"
    },
    {
        "line": 27,
        "fullcodeline": "source_bytes = second_bytes;"
    },
    {
        "line": 31,
        "fullcodeline": "target = *second;"
    },
    {
        "line": 32,
        "fullcodeline": "target_bytes = second_bytes;"
    },
    {
        "line": 33,
        "fullcodeline": "source = *first;"
    },
    {
        "line": 34,
        "fullcodeline": "source_bytes = first_bytes;"
    },
    {
        "line": 59,
        "fullcodeline": "memcpy(target + target_bytes - ZIPLIST_END_SIZE,"
    },
    {
        "line": 61,
        "fullcodeline": "source_bytes - ZIPLIST_HEADER_SIZE);"
    },
    {
        "line": 70,
        "fullcodeline": "memcpy(target, source, source_bytes - ZIPLIST_END_SIZE);"
    },
    {
        "line": 82,
        "fullcodeline": "(first_bytes - ZIPLIST_END_SIZE) +"
    },
    {
        "line": 83,
        "fullcodeline": "(second_offset - ZIPLIST_HEADER_SIZE));"
    },
    {
        "line": 67,
        "fullcodeline": "memmove(target + source_bytes - ZIPLIST_END_SIZE,"
    },
    {
        "line": 69,
        "fullcodeline": "target_bytes - ZIPLIST_HEADER_SIZE);"
    }
]