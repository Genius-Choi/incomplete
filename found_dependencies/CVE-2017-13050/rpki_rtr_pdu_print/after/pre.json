[
    {
        "line": 9,
        "fullcodeline": "ND_TCHECK_8BITS(tptr);"
    },
    {
        "line": 24,
        "fullcodeline": "ND_TCHECK2(*tptr, sizeof(rpki_rtr_pdu));"
    },
    {
        "line": 25,
        "fullcodeline": "pdu_header = (const rpki_rtr_pdu *)tptr;"
    },
    {
        "line": 26,
        "fullcodeline": "pdu_type = pdu_header->pdu_type;"
    },
    {
        "line": 27,
        "fullcodeline": "pdu_len = EXTRACT_32BITS(pdu_header->length);"
    },
    {
        "line": 32,
        "fullcodeline": "hexdump = FALSE;"
    },
    {
        "line": 205,
        "fullcodeline": "ND_TCHECK2(*tptr, len);"
    },
    {
        "line": 10,
        "fullcodeline": "if (*tptr != 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (len < sizeof(rpki_rtr_pdu)) {"
    },
    {
        "line": 34,
        "fullcodeline": "ND_PRINT((ndo, \"%sRPKI-RTRv%u, %s PDU (%u), length: %u\","
    },
    {
        "line": 204,
        "fullcodeline": "ND_PRINT((ndo, \"%s\", istr));"
    },
    {
        "line": 208,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t%s\", tstr));"
    },
    {
        "line": 17,
        "fullcodeline": "ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), *tptr));"
    },
    {
        "line": 39,
        "fullcodeline": "if (pdu_len < sizeof(rpki_rtr_pdu) || pdu_len > len)"
    },
    {
        "line": 52,
        "fullcodeline": "ND_TCHECK2(*tptr, pdu_len);"
    },
    {
        "line": 53,
        "fullcodeline": "msg = (const u_char *)(pdu_header + 1);"
    },
    {
        "line": 189,
        "fullcodeline": "ND_TCHECK2(*tptr, pdu_len);"
    },
    {
        "line": 194,
        "fullcodeline": "hexdump = TRUE;"
    },
    {
        "line": 198,
        "fullcodeline": "if (ndo->ndo_vflag > 1 || (ndo->ndo_vflag && hexdump)) {"
    },
    {
        "line": 199,
        "fullcodeline": "print_unknown_data(ndo,tptr,\"\\n\\t  \", pdu_len);"
    },
    {
        "line": 21,
        "fullcodeline": "ND_PRINT((ndo, \"(%u bytes is too few to decode)\", len));"
    },
    {
        "line": 35,
        "fullcodeline": "indent_string(8),"
    },
    {
        "line": 37,
        "fullcodeline": "tok2str(rpki_rtr_pdu_values, \"Unknown\", pdu_type),"
    },
    {
        "line": 50,
        "fullcodeline": "if (pdu_len != sizeof(rpki_rtr_pdu) + 4)"
    },
    {
        "line": 54,
        "fullcodeline": "ND_PRINT((ndo, \"%sSession ID: 0x%04x, Serial: %u\","
    },
    {
        "line": 65,
        "fullcodeline": "if (pdu_len != sizeof(rpki_rtr_pdu))"
    },
    {
        "line": 75,
        "fullcodeline": "if (pdu_len != sizeof(rpki_rtr_pdu))"
    },
    {
        "line": 78,
        "fullcodeline": "ND_PRINT((ndo, \"%sSession ID: 0x%04x\","
    },
    {
        "line": 89,
        "fullcodeline": "ND_TCHECK2(*tptr, pdu_len);"
    },
    {
        "line": 90,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_ipv4_prefix *)tptr;"
    },
    {
        "line": 105,
        "fullcodeline": "ND_TCHECK2(*tptr, pdu_len);"
    },
    {
        "line": 106,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_ipv6_prefix *)tptr;"
    },
    {
        "line": 120,
        "fullcodeline": "tlen = sizeof(rpki_rtr_pdu);"
    },
    {
        "line": 124,
        "fullcodeline": "ND_TCHECK2(*tptr, tlen + 4);"
    },
    {
        "line": 128,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_error_report *)tptr;"
    },
    {
        "line": 129,
        "fullcodeline": "encapsulated_pdu_length = EXTRACT_32BITS(pdu->encapsulated_pdu_length);"
    },
    {
        "line": 130,
        "fullcodeline": "tlen += 4;"
    },
    {
        "line": 132,
        "fullcodeline": "error_code = EXTRACT_16BITS(pdu->pdu_header.u.error_code);"
    },
    {
        "line": 166,
        "fullcodeline": "ND_TCHECK2(*tptr, tlen + 4);"
    },
    {
        "line": 174,
        "fullcodeline": "text_length = EXTRACT_32BITS(tptr + tlen);"
    },
    {
        "line": 175,
        "fullcodeline": "tlen += 4;"
    },
    {
        "line": 87,
        "fullcodeline": "if (pdu_len != sizeof(rpki_rtr_pdu) + 12)"
    },
    {
        "line": 91,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv4 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\","
    },
    {
        "line": 103,
        "fullcodeline": "if (pdu_len != sizeof(rpki_rtr_pdu) + 24)"
    },
    {
        "line": 107,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv6 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\","
    },
    {
        "line": 122,
        "fullcodeline": "if (pdu_len < tlen + 4)"
    },
    {
        "line": 133,
        "fullcodeline": "ND_PRINT((ndo, \"%sError code: %s (%u), Encapsulated PDU length: %u\","
    },
    {
        "line": 164,
        "fullcodeline": "if (pdu_len < tlen + 4)"
    },
    {
        "line": 55,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 56,
        "fullcodeline": "EXTRACT_16BITS(pdu_header->u.session_id),"
    },
    {
        "line": 57,
        "fullcodeline": "EXTRACT_32BITS(msg)));"
    },
    {
        "line": 79,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 80,
        "fullcodeline": "EXTRACT_16BITS(pdu_header->u.session_id)));"
    },
    {
        "line": 161,
        "fullcodeline": "tlen += encapsulated_pdu_length;"
    },
    {
        "line": 92,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 93,
        "fullcodeline": "ipaddr_string(ndo, pdu->prefix),"
    },
    {
        "line": 95,
        "fullcodeline": "EXTRACT_32BITS(pdu->as), pdu->flags));"
    },
    {
        "line": 108,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 109,
        "fullcodeline": "ip6addr_string(ndo, pdu->prefix),"
    },
    {
        "line": 111,
        "fullcodeline": "EXTRACT_32BITS(pdu->as), pdu->flags));"
    },
    {
        "line": 134,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 135,
        "fullcodeline": "tok2str(rpki_rtr_error_codes, \"Unknown\", error_code),"
    },
    {
        "line": 151,
        "fullcodeline": "if (pdu_len < tlen + encapsulated_pdu_length)"
    },
    {
        "line": 178,
        "fullcodeline": "if (pdu_len < tlen + text_length)"
    },
    {
        "line": 181,
        "fullcodeline": "ND_PRINT((ndo, \"%sError text: \", indent_string(indent+2)));"
    },
    {
        "line": 182,
        "fullcodeline": "if (fn_printn(ndo, tptr + tlen, text_length, ndo->ndo_snapend))"
    },
    {
        "line": 154,
        "fullcodeline": "ND_TCHECK2(*tptr, tlen + encapsulated_pdu_length);"
    },
    {
        "line": 158,
        "fullcodeline": "rpki_rtr_pdu_print(ndo, tptr + tlen,"
    },
    {
        "line": 157,
        "fullcodeline": "ND_PRINT((ndo, \"%s-----encapsulated PDU-----\", indent_string(indent+4)));"
    }
]