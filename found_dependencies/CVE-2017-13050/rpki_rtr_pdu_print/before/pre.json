[
    {
        "line": 7,
        "fullcodeline": "pdu_header = (const rpki_rtr_pdu *)tptr;"
    },
    {
        "line": 8,
        "fullcodeline": "pdu_type = pdu_header->pdu_type;"
    },
    {
        "line": 9,
        "fullcodeline": "pdu_len = EXTRACT_32BITS(pdu_header->length);"
    },
    {
        "line": 10,
        "fullcodeline": "ND_TCHECK2(*tptr, pdu_len);"
    },
    {
        "line": 11,
        "fullcodeline": "hexdump = FALSE;"
    },
    {
        "line": 13,
        "fullcodeline": "ND_PRINT((ndo, \"%sRPKI-RTRv%u, %s PDU (%u), length: %u\","
    },
    {
        "line": 136,
        "fullcodeline": "if (ndo->ndo_vflag > 1 || (ndo->ndo_vflag && hexdump)) {"
    },
    {
        "line": 27,
        "fullcodeline": "msg = (const u_char *)(pdu_header + 1);"
    },
    {
        "line": 28,
        "fullcodeline": "ND_PRINT((ndo, \"%sSession ID: 0x%04x, Serial: %u\","
    },
    {
        "line": 46,
        "fullcodeline": "ND_PRINT((ndo, \"%sSession ID: 0x%04x\","
    },
    {
        "line": 132,
        "fullcodeline": "hexdump = TRUE;"
    },
    {
        "line": 137,
        "fullcodeline": "print_unknown_data(ndo,tptr,\"\\n\\t  \", pdu_len);"
    },
    {
        "line": 14,
        "fullcodeline": "indent_string(8),"
    },
    {
        "line": 16,
        "fullcodeline": "tok2str(rpki_rtr_pdu_values, \"Unknown\", pdu_type),"
    },
    {
        "line": 55,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_ipv4_prefix *)tptr;"
    },
    {
        "line": 56,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv4 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\","
    },
    {
        "line": 68,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_ipv6_prefix *)tptr;"
    },
    {
        "line": 69,
        "fullcodeline": "ND_PRINT((ndo, \"%sIPv6 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\","
    },
    {
        "line": 82,
        "fullcodeline": "pdu = (const rpki_rtr_pdu_error_report *)tptr;"
    },
    {
        "line": 83,
        "fullcodeline": "encapsulated_pdu_length = EXTRACT_32BITS(pdu->encapsulated_pdu_length);"
    },
    {
        "line": 84,
        "fullcodeline": "ND_TCHECK2(*tptr, encapsulated_pdu_length);"
    },
    {
        "line": 85,
        "fullcodeline": "tlen = pdu_len;"
    },
    {
        "line": 87,
        "fullcodeline": "error_code = EXTRACT_16BITS(pdu->pdu_header.u.error_code);"
    },
    {
        "line": 88,
        "fullcodeline": "ND_PRINT((ndo, \"%sError code: %s (%u), Encapsulated PDU length: %u\","
    },
    {
        "line": 93,
        "fullcodeline": "tptr += sizeof(*pdu);"
    },
    {
        "line": 94,
        "fullcodeline": "tlen -= sizeof(*pdu);"
    },
    {
        "line": 106,
        "fullcodeline": "tptr += encapsulated_pdu_length;"
    },
    {
        "line": 107,
        "fullcodeline": "tlen -= encapsulated_pdu_length;"
    },
    {
        "line": 112,
        "fullcodeline": "text_length = 0;"
    },
    {
        "line": 118,
        "fullcodeline": "ND_TCHECK2(*tptr, text_length);"
    },
    {
        "line": 99,
        "fullcodeline": "if (encapsulated_pdu_length &&"
    },
    {
        "line": 113,
        "fullcodeline": "if (tlen > 4) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (text_length && (text_length <= tlen )) {"
    },
    {
        "line": 29,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 30,
        "fullcodeline": "EXTRACT_16BITS(pdu_header->u.session_id),"
    },
    {
        "line": 31,
        "fullcodeline": "EXTRACT_32BITS(msg)));"
    },
    {
        "line": 47,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 48,
        "fullcodeline": "EXTRACT_16BITS(pdu_header->u.session_id)));"
    },
    {
        "line": 100,
        "fullcodeline": "(encapsulated_pdu_length <= tlen)) {"
    },
    {
        "line": 101,
        "fullcodeline": "ND_PRINT((ndo, \"%s-----encapsulated PDU-----\", indent_string(indent+4)));"
    },
    {
        "line": 114,
        "fullcodeline": "text_length = EXTRACT_32BITS(tptr);"
    },
    {
        "line": 115,
        "fullcodeline": "tptr += 4;"
    },
    {
        "line": 116,
        "fullcodeline": "tlen -= 4;"
    },
    {
        "line": 120,
        "fullcodeline": "ND_PRINT((ndo, \"%sError text: \", indent_string(indent+2)));"
    },
    {
        "line": 57,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 58,
        "fullcodeline": "ipaddr_string(ndo, pdu->prefix),"
    },
    {
        "line": 60,
        "fullcodeline": "EXTRACT_32BITS(pdu->as), pdu->flags));"
    },
    {
        "line": 70,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 71,
        "fullcodeline": "ip6addr_string(ndo, pdu->prefix),"
    },
    {
        "line": 73,
        "fullcodeline": "EXTRACT_32BITS(pdu->as), pdu->flags));"
    },
    {
        "line": 89,
        "fullcodeline": "indent_string(indent+2),"
    },
    {
        "line": 90,
        "fullcodeline": "tok2str(rpki_rtr_error_codes, \"Unknown\", error_code),"
    },
    {
        "line": 102,
        "fullcodeline": "if (rpki_rtr_pdu_print(ndo, tptr, indent+2))"
    },
    {
        "line": 121,
        "fullcodeline": "if (fn_printn(ndo, tptr, text_length, ndo->ndo_snapend))"
    }
]