[
    {
        "line": 3,
        "fullcodeline": "struct platform_device *pdev = cqspi->pdev;"
    },
    {
        "line": 4,
        "fullcodeline": "struct device *dev = &pdev->dev;"
    },
    {
        "line": 12,
        "fullcodeline": "for_each_available_child_of_node(dev->of_node, np) {"
    },
    {
        "line": 23,
        "fullcodeline": "f_pdata = &cqspi->f_pdata[cs];"
    },
    {
        "line": 24,
        "fullcodeline": "f_pdata->cqspi = cqspi;"
    },
    {
        "line": 25,
        "fullcodeline": "f_pdata->cs = cs;"
    },
    {
        "line": 27,
        "fullcodeline": "ret = cqspi_of_get_flash_pdata(pdev, f_pdata, np);"
    },
    {
        "line": 31,
        "fullcodeline": "nor = &f_pdata->nor;"
    },
    {
        "line": 32,
        "fullcodeline": "mtd = &nor->mtd;"
    },
    {
        "line": 34,
        "fullcodeline": "mtd->priv = nor;"
    },
    {
        "line": 36,
        "fullcodeline": "nor->dev = dev;"
    },
    {
        "line": 37,
        "fullcodeline": "spi_nor_set_flash_node(nor, np);"
    },
    {
        "line": 38,
        "fullcodeline": "nor->priv = f_pdata;"
    },
    {
        "line": 40,
        "fullcodeline": "nor->read_reg = cqspi_read_reg;"
    },
    {
        "line": 41,
        "fullcodeline": "nor->write_reg = cqspi_write_reg;"
    },
    {
        "line": 42,
        "fullcodeline": "nor->read = cqspi_read;"
    },
    {
        "line": 43,
        "fullcodeline": "nor->write = cqspi_write;"
    },
    {
        "line": 44,
        "fullcodeline": "nor->erase = cqspi_erase;"
    },
    {
        "line": 45,
        "fullcodeline": "nor->prepare = cqspi_prep;"
    },
    {
        "line": 46,
        "fullcodeline": "nor->unprepare = cqspi_unprep;"
    },
    {
        "line": 48,
        "fullcodeline": "mtd->name = devm_kasprintf(dev, GFP_KERNEL, \"%s.%d\","
    },
    {
        "line": 55,
        "fullcodeline": "ret = spi_nor_scan(nor, NULL, SPI_NOR_QUAD);"
    },
    {
        "line": 59,
        "fullcodeline": "ret = mtd_device_register(mtd, NULL, 0);"
    },
    {
        "line": 63,
        "fullcodeline": "f_pdata->registered = true;"
    },
    {
        "line": 69,
        "fullcodeline": "for (i = 0; i < CQSPI_MAX_CHIPSELECT; i++)"
    },
    {
        "line": 13,
        "fullcodeline": "if (of_property_read_u32(np, \"reg\", &cs)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (cs >= CQSPI_MAX_CHIPSELECT) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!mtd->name) {"
    },
    {
        "line": 49,
        "fullcodeline": "dev_name(dev), cs);"
    },
    {
        "line": 51,
        "fullcodeline": "ret = -ENOMEM;"
    }
]