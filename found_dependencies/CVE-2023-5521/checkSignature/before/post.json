[
    {
        "line": 2,
        "fullcodeline": "unsigned char buffer[0x11] = {0};"
    },
    {
        "line": 10,
        "fullcodeline": "int sign = -1;"
    },
    {
        "line": 11,
        "fullcodeline": "int fd = (int) openat(AT_FDCWD, path, O_RDONLY);"
    },
    {
        "line": 19,
        "fullcodeline": "sign = 1;"
    },
    {
        "line": 45,
        "fullcodeline": "lseek(fd, 12, SEEK_CUR);"
    },
    {
        "line": 47,
        "fullcodeline": "read(fd, &size4, 0x4);"
    },
    {
        "line": 48,
        "fullcodeline": "lseek(fd, (off_t) (size4 - 0x18), SEEK_SET);"
    },
    {
        "line": 50,
        "fullcodeline": "read(fd, &size8, 0x8);"
    },
    {
        "line": 51,
        "fullcodeline": "read(fd, buffer, 0x10);"
    },
    {
        "line": 56,
        "fullcodeline": "lseek(fd, (off_t) (size4 - (size8 + 0x8)), SEEK_SET);"
    },
    {
        "line": 57,
        "fullcodeline": "read(fd, &size_of_block, 0x8);"
    },
    {
        "line": 122,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 15,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "for (int i = 0;; ++i) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (!isApkSigBlock42((char *) buffer)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (size_of_block != size8) {"
    },
    {
        "line": 23,
        "fullcodeline": "lseek(fd, -i - 2, SEEK_END);"
    },
    {
        "line": 24,
        "fullcodeline": "read(fd, &n, 2);"
    },
    {
        "line": 65,
        "fullcodeline": "read(fd, &size8, 0x8); // sequence length"
    },
    {
        "line": 69,
        "fullcodeline": "read(fd, &id, 0x4); // id"
    },
    {
        "line": 70,
        "fullcodeline": "offset = 4;"
    },
    {
        "line": 118,
        "fullcodeline": "lseek(fd, (off_t) (size8 - offset), SEEK_CUR);"
    },
    {
        "line": 25,
        "fullcodeline": "if (n == i) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (i == 0xffff) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (size8 == size_of_block) {"
    },
    {
        "line": 74,
        "fullcodeline": "if ((id ^ 0xdeadbeefu) == 0xafa439f5u || (id ^ 0xdeadbeefu) == 0x2efed62f) {"
    },
    {
        "line": 26,
        "fullcodeline": "lseek(fd, -22, SEEK_CUR);"
    },
    {
        "line": 27,
        "fullcodeline": "read(fd, &size4, 4);"
    },
    {
        "line": 75,
        "fullcodeline": "read(fd, &size4, 0x4); // signer-sequence length"
    },
    {
        "line": 76,
        "fullcodeline": "read(fd, &size4, 0x4); // signer length"
    },
    {
        "line": 77,
        "fullcodeline": "read(fd, &size4, 0x4); // signed data length"
    },
    {
        "line": 78,
        "fullcodeline": "offset += 0x4 * 3;"
    },
    {
        "line": 80,
        "fullcodeline": "read(fd, &size4, 0x4); // digests-sequence length"
    },
    {
        "line": 81,
        "fullcodeline": "lseek(fd, (off_t) (size4), SEEK_CUR);// skip digests"
    },
    {
        "line": 82,
        "fullcodeline": "offset += 0x4 + size4;"
    },
    {
        "line": 84,
        "fullcodeline": "read(fd, &size4, 0x4); // certificates length"
    },
    {
        "line": 85,
        "fullcodeline": "read(fd, &size4, 0x4); // certificate length"
    },
    {
        "line": 86,
        "fullcodeline": "offset += 0x4 * 2;"
    },
    {
        "line": 113,
        "fullcodeline": "sign = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "if ((size4 ^ 0xcafebabeu) == 0xccfbf1eeu) {"
    }
]