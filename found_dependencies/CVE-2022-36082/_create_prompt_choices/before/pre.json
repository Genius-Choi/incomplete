[
    {
        "line": 9,
        "fullcodeline": "def print_err(text):"
    },
    {
        "line": 13,
        "fullcodeline": "count = 1"
    },
    {
        "line": 14,
        "fullcodeline": "choices = {}"
    },
    {
        "line": 15,
        "fullcodeline": "paginator = Paginator()"
    },
    {
        "line": 18,
        "fullcodeline": "choices['next'] = \"next\""
    },
    {
        "line": 21,
        "fullcodeline": "choices['previous'] = \"previous\""
    },
    {
        "line": 27,
        "fullcodeline": "fetch = True"
    },
    {
        "line": 25,
        "fullcodeline": "choices['preview'] = \"preview\""
    },
    {
        "line": 53,
        "fullcodeline": "def print_choices():"
    },
    {
        "line": 76,
        "fullcodeline": "print_choices()"
    },
    {
        "line": 79,
        "fullcodeline": "_next = False"
    },
    {
        "line": 80,
        "fullcodeline": "previous = False"
    },
    {
        "line": 81,
        "fullcodeline": "preview = False"
    },
    {
        "line": 30,
        "fullcodeline": "items = []"
    },
    {
        "line": 83,
        "fullcodeline": "choice = input_handle(\"=> \")"
    },
    {
        "line": 111,
        "fullcodeline": "paginator.next()"
    },
    {
        "line": 112,
        "fullcodeline": "fetch = True"
    },
    {
        "line": 32,
        "fullcodeline": "for _ in range(limit):"
    },
    {
        "line": 86,
        "fullcodeline": "if choice.startswith('preview'):"
    },
    {
        "line": 39,
        "fullcodeline": "paginator.add_page(*items)"
    },
    {
        "line": 87,
        "fullcodeline": "choice = choice.split('preview')[1].strip()"
    },
    {
        "line": 88,
        "fullcodeline": "preview = True"
    },
    {
        "line": 91,
        "fullcodeline": "item = choices[choice]"
    },
    {
        "line": 115,
        "fullcodeline": "fetch = False"
    },
    {
        "line": 42,
        "fullcodeline": "for item in items:"
    },
    {
        "line": 47,
        "fullcodeline": "paginator.previous()"
    },
    {
        "line": 93,
        "fullcodeline": "print_err('[ERROR] Invalid choice, try again')"
    },
    {
        "line": 94,
        "fullcodeline": "print_choices()"
    },
    {
        "line": 97,
        "fullcodeline": "if item == \"next\":"
    },
    {
        "line": 118,
        "fullcodeline": "fetch = False"
    },
    {
        "line": 119,
        "fullcodeline": "on_preview(item)"
    },
    {
        "line": 34,
        "fullcodeline": "items.append(next(iterator))"
    },
    {
        "line": 43,
        "fullcodeline": "choices[str(count)] = item"
    },
    {
        "line": 44,
        "fullcodeline": "count += 1"
    },
    {
        "line": 51,
        "fullcodeline": "print_err(\"[ERROR] There are no more results\")"
    },
    {
        "line": 98,
        "fullcodeline": "_next = True"
    },
    {
        "line": 49,
        "fullcodeline": "parser.error(on_empty_err)"
    },
    {
        "line": 99,
        "fullcodeline": "elif item == \"previous\":"
    },
    {
        "line": 107,
        "fullcodeline": "previous = True"
    },
    {
        "line": 101,
        "fullcodeline": "paginator.previous()"
    },
    {
        "line": 103,
        "fullcodeline": "print_err('[ERROR] Choices are out of range, try again')"
    },
    {
        "line": 104,
        "fullcodeline": "print_choices()"
    }
]