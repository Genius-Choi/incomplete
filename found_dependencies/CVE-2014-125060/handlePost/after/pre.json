[
    {
        "line": 2,
        "fullcodeline": "long long sessionId = -1;"
    },
    {
        "line": 3,
        "fullcodeline": "long uid = -1;"
    },
    {
        "line": 4,
        "fullcodeline": "string uri = (*reqHeaders)[\"uri\"];"
    },
    {
        "line": 5,
        "fullcodeline": "cout << \"handling post\" << endl;"
    },
    {
        "line": 14,
        "fullcodeline": "map<string, string> resHeaders;"
    },
    {
        "line": 15,
        "fullcodeline": "resHeaders[\"Server\"] = \"CSE461\";"
    },
    {
        "line": 16,
        "fullcodeline": "resHeaders[\"Content-Type\"] = \"text/html; charset=UTF-8\";"
    },
    {
        "line": 6,
        "fullcodeline": "if (reqHeaders->count(\"Cookie\") != 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (uri.compare(\"/createUser\") == 0) {"
    },
    {
        "line": 182,
        "fullcodeline": "return getResponseHeader(\"HTTP/1.1 200 OK\", &resHeaders, body.size()) + \"\\r\\n\" + body;"
    },
    {
        "line": 7,
        "fullcodeline": "string cookies = (*reqHeaders)[\"Cookie\"];"
    },
    {
        "line": 8,
        "fullcodeline": "string sessionIdString = cookies.substr(cookies.find(\"=\") + 1);"
    },
    {
        "line": 9,
        "fullcodeline": "sessionId = stoll(sessionIdString, nullptr);"
    },
    {
        "line": 10,
        "fullcodeline": "auto sessionIt = sessionMap.find(sessionId);"
    },
    {
        "line": 22,
        "fullcodeline": "cout << \"create user\" << endl;"
    },
    {
        "line": 23,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 24,
        "fullcodeline": "string username = params.substr(9, params.find(\"&\") - 9);"
    },
    {
        "line": 25,
        "fullcodeline": "string password = params.substr(params.find(\"&\") + 10);"
    },
    {
        "line": 27,
        "fullcodeline": "cout << \"username is \" << username << \" password is \" << password << endl;"
    },
    {
        "line": 29,
        "fullcodeline": "long newId = makeUser(username, password);"
    },
    {
        "line": 38,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 11,
        "fullcodeline": "if(sessionIt != sessionMap.end())"
    },
    {
        "line": 12,
        "fullcodeline": "uid = sessionIt->second;"
    },
    {
        "line": 32,
        "fullcodeline": "if (newId == -1) {"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (uri.compare(\"/login\") == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "bodyStream << \"Error: Could not create user '\" << username << \"'\" << endl;"
    },
    {
        "line": 42,
        "fullcodeline": "cout << \"login\" << endl;"
    },
    {
        "line": 43,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 44,
        "fullcodeline": "string username = params.substr(9, params.find(\"&\") - 9);"
    },
    {
        "line": 45,
        "fullcodeline": "string password = params.substr(params.find(\"&\") + 10);"
    },
    {
        "line": 49,
        "fullcodeline": "long long sess = login(username, password);"
    },
    {
        "line": 65,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 35,
        "fullcodeline": "bodyStream << \"Successfully created user '\" << username << \"'! Please log in.\" << endl;"
    },
    {
        "line": 40,
        "fullcodeline": "if (uid != -1)"
    },
    {
        "line": 47,
        "fullcodeline": "cout << \"username is \" << username << \" password is \" << password << endl;"
    },
    {
        "line": 52,
        "fullcodeline": "if (sess == -1) {"
    },
    {
        "line": 53,
        "fullcodeline": "bodyStream << getLogin();"
    },
    {
        "line": 68,
        "fullcodeline": "} else if (uri.compare(\"/createGroup\") == 0 && uid != -1) {"
    },
    {
        "line": 57,
        "fullcodeline": "resHeaders[\"Set-Cookie\"] = cookie.str();"
    },
    {
        "line": 59,
        "fullcodeline": "bodyStream << getHeader(username);"
    },
    {
        "line": 60,
        "fullcodeline": "bodyStream << getEmptyCalendar();"
    },
    {
        "line": 61,
        "fullcodeline": "bodyStream << getFooter();"
    },
    {
        "line": 69,
        "fullcodeline": "cout << \"createGroup\" << endl;"
    },
    {
        "line": 70,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 71,
        "fullcodeline": "string groupName = params.substr(11);"
    },
    {
        "line": 75,
        "fullcodeline": "long groupId = makeGroup(uid, groupName);"
    },
    {
        "line": 84,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 56,
        "fullcodeline": "cookie << \"sessionId=\" << sess;"
    },
    {
        "line": 72,
        "fullcodeline": "replace(groupName.begin(), groupName.end(), '+', ' ');"
    },
    {
        "line": 76,
        "fullcodeline": "if (groupId != -1) {"
    },
    {
        "line": 86,
        "fullcodeline": "} else if (uri.compare(\"/addToGroup\") == 0 && uid != -1) {"
    },
    {
        "line": 77,
        "fullcodeline": "cout << \"made group!\" << endl;"
    },
    {
        "line": 78,
        "fullcodeline": "bodyStream << \"Successfully created group '\" << groupName << \"'\";"
    },
    {
        "line": 87,
        "fullcodeline": "cout << \"addToGroup\" << endl;"
    },
    {
        "line": 88,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 89,
        "fullcodeline": "string groupName = params.substr(11, params.find(\"&\") - 11);"
    },
    {
        "line": 90,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 91,
        "fullcodeline": "string addedName = params.substr(11, params.find(\"&\") - 11);"
    },
    {
        "line": 92,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 93,
        "fullcodeline": "bool admin = params.find(\"admin\") != string::npos;"
    },
    {
        "line": 94,
        "fullcodeline": "long groupId = groupIdByName(groupName);"
    },
    {
        "line": 95,
        "fullcodeline": "long addedId = userIdByName(addedName);"
    },
    {
        "line": 108,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 80,
        "fullcodeline": "cout << \"makeGroup was -1.\" << endl;"
    },
    {
        "line": 81,
        "fullcodeline": "bodyStream << \"Error: could not create group '\" << groupName << \"'\";"
    },
    {
        "line": 98,
        "fullcodeline": "bool added = addToGroup(uid, addedId, groupId, admin);"
    },
    {
        "line": 110,
        "fullcodeline": "} else if (uri.compare(\"/createEvent\") == 0 && uid != -1) {"
    },
    {
        "line": 101,
        "fullcodeline": "cout << \"added to group!\" << endl;"
    },
    {
        "line": 102,
        "fullcodeline": "bodyStream << \"Successfully added '\" << addedName << \"' to '\" << groupName << \"'\";"
    },
    {
        "line": 111,
        "fullcodeline": "cout << \"createEvent\" << endl;"
    },
    {
        "line": 112,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 113,
        "fullcodeline": "string eventName = params.substr(5, params.find(\"&\") - 5);"
    },
    {
        "line": 115,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 116,
        "fullcodeline": "string timeString = params.substr(9, params.find(\"&\") - 9);"
    },
    {
        "line": 117,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 118,
        "fullcodeline": "bool withGroup = params.size() > 11;"
    },
    {
        "line": 120,
        "fullcodeline": "cout << \"eName: \" << eventName << \" tS: \" << timeString << \" wG: \" << withGroup << endl;"
    },
    {
        "line": 124,
        "fullcodeline": "timeStream << timeString;"
    },
    {
        "line": 125,
        "fullcodeline": "timeStream >> eventTime;"
    },
    {
        "line": 147,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 104,
        "fullcodeline": "cout << \"Error: could not add '\" << addedName << \"' to '\" << groupName << \"'\";"
    },
    {
        "line": 105,
        "fullcodeline": "bodyStream << \"Error: could not add '\" << addedName << \"' to '\" << groupName << \"'\";"
    },
    {
        "line": 114,
        "fullcodeline": "replace(eventName.begin(), eventName.end(), '+', ' ');"
    },
    {
        "line": 129,
        "fullcodeline": "string groupName = params.substr(11);"
    },
    {
        "line": 130,
        "fullcodeline": "long groupId = groupIdByName(groupName);"
    },
    {
        "line": 131,
        "fullcodeline": "cout << \"gName: \" << groupName << \" gID: \" << groupId << endl;"
    },
    {
        "line": 133,
        "fullcodeline": "eventId = makeEvent(uid, eventName, eventTime, groupId, true);"
    },
    {
        "line": 139,
        "fullcodeline": "if (eventId != -1) {"
    },
    {
        "line": 149,
        "fullcodeline": "} else if (uri.compare(\"/editEvent\") == 0 && uid != -1) {"
    },
    {
        "line": 135,
        "fullcodeline": "eventId = makeEvent(uid, eventName, eventTime);"
    },
    {
        "line": 140,
        "fullcodeline": "cout << \"made event!\" << endl;"
    },
    {
        "line": 141,
        "fullcodeline": "bodyStream << \"Successfully created event '\" << eventName << \"'\";"
    },
    {
        "line": 150,
        "fullcodeline": "cout << \"editEvent\" << endl;"
    },
    {
        "line": 151,
        "fullcodeline": "string params = (*reqHeaders)[\"params\"];"
    },
    {
        "line": 152,
        "fullcodeline": "long eventId = stol(params.substr(3, params.find(\"&\") - 3), nullptr);"
    },
    {
        "line": 153,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 154,
        "fullcodeline": "string eventName = params.substr(5, params.find(\"&\") - 5);"
    },
    {
        "line": 155,
        "fullcodeline": "params = params.substr(params.find(\"&\") + 1);"
    },
    {
        "line": 156,
        "fullcodeline": "string timeString = params.substr(9, params.find(\"&\") - 9);"
    },
    {
        "line": 158,
        "fullcodeline": "cout << \"eID: \" << eventId << \" eName: \" << eventName << \" dt: \" << timeString << endl;"
    },
    {
        "line": 162,
        "fullcodeline": "timeStream << timeString;"
    },
    {
        "line": 163,
        "fullcodeline": "timeStream >> eventTime;"
    },
    {
        "line": 165,
        "fullcodeline": "renameEvent(uid, eventId, eventName);"
    },
    {
        "line": 170,
        "fullcodeline": "bodyStream << \"Successfully edited event.\";"
    },
    {
        "line": 172,
        "fullcodeline": "body = bodyStream.str();"
    },
    {
        "line": 143,
        "fullcodeline": "cout << \"couldn't make event.\" << endl;"
    },
    {
        "line": 144,
        "fullcodeline": "bodyStream << \"Error: could not create event '\" << eventName << \"'\";"
    },
    {
        "line": 169,
        "fullcodeline": "cout << \"edited event!\" << endl;"
    },
    {
        "line": 175,
        "fullcodeline": "cout << \"error page\" << endl;"
    },
    {
        "line": 177,
        "fullcodeline": "string message = \"404 Page Not Found\";"
    },
    {
        "line": 178,
        "fullcodeline": "return getResponseHeader(\"HTTP/1.1 404 Not Found\", &resHeaders, body.size())"
    }
]