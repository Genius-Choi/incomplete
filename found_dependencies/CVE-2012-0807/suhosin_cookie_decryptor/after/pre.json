[
    {
        "line": 3,
        "fullcodeline": "char *raw_cookie = SG(request_info).cookie_data;"
    },
    {
        "line": 6,
        "fullcodeline": "char cryptkey[33];"
    },
    {
        "line": 16,
        "fullcodeline": "ret = decrypted = emalloc(strlen(raw_cookie)*4+1);"
    },
    {
        "line": 17,
        "fullcodeline": "raw_cookie = estrdup(raw_cookie);"
    },
    {
        "line": 18,
        "fullcodeline": "SUHOSIN_G(raw_cookie) = estrdup(raw_cookie);"
    },
    {
        "line": 21,
        "fullcodeline": "j = 0; tmp = raw_cookie;"
    },
    {
        "line": 51,
        "fullcodeline": "*decrypted++ = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "ret = erealloc(ret, decrypted-ret);"
    },
    {
        "line": 54,
        "fullcodeline": "SUHOSIN_G(decrypted_cookie) = ret;"
    },
    {
        "line": 55,
        "fullcodeline": "efree(raw_cookie);"
    },
    {
        "line": 25,
        "fullcodeline": "var = tmp;"
    },
    {
        "line": 28,
        "fullcodeline": "varlen = tmp-var;"
    },
    {
        "line": 40,
        "fullcodeline": "val = tmp;"
    },
    {
        "line": 49,
        "fullcodeline": "tmp++;"
    },
    {
        "line": 24,
        "fullcodeline": "while (*tmp == '\\t' || *tmp == ' ') tmp++;"
    },
    {
        "line": 26,
        "fullcodeline": "while (*tmp && *tmp != ';' && *tmp != '=') tmp++;"
    },
    {
        "line": 31,
        "fullcodeline": "if (*tmp == 0) break;"
    },
    {
        "line": 33,
        "fullcodeline": "if (*tmp++ == ';') {"
    },
    {
        "line": 41,
        "fullcodeline": "while (*tmp && *tmp != ';') tmp++;"
    },
    {
        "line": 44,
        "fullcodeline": "if (*tmp == ';') {"
    },
    {
        "line": 48,
        "fullcodeline": "if (*tmp == 0) break;"
    },
    {
        "line": 34,
        "fullcodeline": "*decrypted++ = ';';"
    },
    {
        "line": 45,
        "fullcodeline": "*decrypted++ = ';';"
    }
]