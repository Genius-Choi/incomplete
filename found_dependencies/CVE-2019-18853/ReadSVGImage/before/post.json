[
    {
        "line": 4,
        "fullcodeline": "filename[MagickPathExtent];"
    },
    {
        "line": 24,
        "fullcodeline": "message[MagickPathExtent];"
    },
    {
        "line": 35,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 36,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 37,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 41,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 42,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 43,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 334,
        "fullcodeline": "file=(FILE *) NULL;"
    },
    {
        "line": 335,
        "fullcodeline": "unique_file=AcquireUniqueFileResource(filename);"
    },
    {
        "line": 349,
        "fullcodeline": "svg_info=AcquireSVGInfo();"
    },
    {
        "line": 355,
        "fullcodeline": "svg_info->file=file;"
    },
    {
        "line": 356,
        "fullcodeline": "svg_info->exception=exception;"
    },
    {
        "line": 357,
        "fullcodeline": "svg_info->image=image;"
    },
    {
        "line": 358,
        "fullcodeline": "svg_info->image_info=image_info;"
    },
    {
        "line": 359,
        "fullcodeline": "svg_info->bounds.width=image->columns;"
    },
    {
        "line": 360,
        "fullcodeline": "svg_info->bounds.height=image->rows;"
    },
    {
        "line": 361,
        "fullcodeline": "svg_info->svgDepth=0;"
    },
    {
        "line": 366,
        "fullcodeline": "xmlInitParser();"
    },
    {
        "line": 367,
        "fullcodeline": "(void) xmlSubstituteEntitiesDefault(1);"
    },
    {
        "line": 368,
        "fullcodeline": "(void) memset(&sax_modules,0,sizeof(sax_modules));"
    },
    {
        "line": 369,
        "fullcodeline": "sax_modules.internalSubset=SVGInternalSubset;"
    },
    {
        "line": 370,
        "fullcodeline": "sax_modules.isStandalone=SVGIsStandalone;"
    },
    {
        "line": 371,
        "fullcodeline": "sax_modules.hasInternalSubset=SVGHasInternalSubset;"
    },
    {
        "line": 372,
        "fullcodeline": "sax_modules.hasExternalSubset=SVGHasExternalSubset;"
    },
    {
        "line": 373,
        "fullcodeline": "sax_modules.resolveEntity=SVGResolveEntity;"
    },
    {
        "line": 374,
        "fullcodeline": "sax_modules.getEntity=SVGGetEntity;"
    },
    {
        "line": 375,
        "fullcodeline": "sax_modules.entityDecl=SVGEntityDeclaration;"
    },
    {
        "line": 376,
        "fullcodeline": "sax_modules.notationDecl=SVGNotationDeclaration;"
    },
    {
        "line": 377,
        "fullcodeline": "sax_modules.attributeDecl=SVGAttributeDeclaration;"
    },
    {
        "line": 378,
        "fullcodeline": "sax_modules.elementDecl=SVGElementDeclaration;"
    },
    {
        "line": 379,
        "fullcodeline": "sax_modules.unparsedEntityDecl=SVGUnparsedEntityDeclaration;"
    },
    {
        "line": 380,
        "fullcodeline": "sax_modules.setDocumentLocator=SVGSetDocumentLocator;"
    },
    {
        "line": 381,
        "fullcodeline": "sax_modules.startDocument=SVGStartDocument;"
    },
    {
        "line": 382,
        "fullcodeline": "sax_modules.endDocument=SVGEndDocument;"
    },
    {
        "line": 383,
        "fullcodeline": "sax_modules.startElement=SVGStartElement;"
    },
    {
        "line": 384,
        "fullcodeline": "sax_modules.endElement=SVGEndElement;"
    },
    {
        "line": 385,
        "fullcodeline": "sax_modules.reference=SVGReference;"
    },
    {
        "line": 386,
        "fullcodeline": "sax_modules.characters=SVGCharacters;"
    },
    {
        "line": 387,
        "fullcodeline": "sax_modules.ignorableWhitespace=SVGIgnorableWhitespace;"
    },
    {
        "line": 388,
        "fullcodeline": "sax_modules.processingInstruction=SVGProcessingInstructions;"
    },
    {
        "line": 389,
        "fullcodeline": "sax_modules.comment=SVGComment;"
    },
    {
        "line": 390,
        "fullcodeline": "sax_modules.warning=SVGWarning;"
    },
    {
        "line": 391,
        "fullcodeline": "sax_modules.error=SVGError;"
    },
    {
        "line": 392,
        "fullcodeline": "sax_modules.fatalError=SVGError;"
    },
    {
        "line": 393,
        "fullcodeline": "sax_modules.getParameterEntity=SVGGetParameterEntity;"
    },
    {
        "line": 394,
        "fullcodeline": "sax_modules.cdataBlock=SVGCDataBlock;"
    },
    {
        "line": 395,
        "fullcodeline": "sax_modules.externalSubset=SVGExternalSubset;"
    },
    {
        "line": 396,
        "fullcodeline": "sax_handler=(&sax_modules);"
    },
    {
        "line": 397,
        "fullcodeline": "n=ReadBlob(image,MagickPathExtent-1,message);"
    },
    {
        "line": 398,
        "fullcodeline": "message[n]='\\0';"
    },
    {
        "line": 412,
        "fullcodeline": "(void) xmlParseChunk(svg_info->parser,(char *) message,0,1);"
    },
    {
        "line": 413,
        "fullcodeline": "SVGEndDocument(svg_info);"
    },
    {
        "line": 414,
        "fullcodeline": "xmlFreeParserCtxt(svg_info->parser);"
    },
    {
        "line": 417,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 418,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 419,
        "fullcodeline": "image->columns=svg_info->width;"
    },
    {
        "line": 420,
        "fullcodeline": "image->rows=svg_info->height;"
    },
    {
        "line": 465,
        "fullcodeline": "svg_info=DestroySVGInfo(svg_info);"
    },
    {
        "line": 466,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 38,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 44,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 49,
        "fullcodeline": "if ((fabs(image->resolution.x) < MagickEpsilon) ||"
    },
    {
        "line": 64,
        "fullcodeline": "if (LocaleCompare(image_info->magick,\"MSVG\") != 0)"
    },
    {
        "line": 336,
        "fullcodeline": "if (unique_file != -1)"
    },
    {
        "line": 338,
        "fullcodeline": "if ((unique_file == -1) || (file == (FILE *) NULL))"
    },
    {
        "line": 350,
        "fullcodeline": "if (svg_info == (SVGInfo *) NULL)"
    },
    {
        "line": 362,
        "fullcodeline": "if (image_info->size != (char *) NULL)"
    },
    {
        "line": 364,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 399,
        "fullcodeline": "if (n > 0)"
    },
    {
        "line": 415,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 421,
        "fullcodeline": "if (exception->severity >= ErrorException)"
    },
    {
        "line": 428,
        "fullcodeline": "if (image_info->ping == MagickFalse)"
    },
    {
        "line": 451,
        "fullcodeline": "if (image != (Image *) NULL)"
    },
    {
        "line": 459,
        "fullcodeline": "for (next=GetFirstImageInList(image); next != (Image *) NULL; )"
    },
    {
        "line": 467,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 39,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 46,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 50,
        "fullcodeline": "(fabs(image->resolution.y) < MagickEpsilon))"
    },
    {
        "line": 58,
        "fullcodeline": "flags=ParseGeometry(SVGDensityGeometry,&geometry_info);"
    },
    {
        "line": 59,
        "fullcodeline": "image->resolution.x=geometry_info.rho;"
    },
    {
        "line": 60,
        "fullcodeline": "image->resolution.y=geometry_info.sigma;"
    },
    {
        "line": 69,
        "fullcodeline": "svg_image=RenderSVGImage(image_info,image,exception);"
    },
    {
        "line": 337,
        "fullcodeline": "file=fdopen(unique_file,\"w\");"
    },
    {
        "line": 340,
        "fullcodeline": "(void) CopyMagickString(image->filename,filename,MagickPathExtent);"
    },
    {
        "line": 341,
        "fullcodeline": "ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\","
    },
    {
        "line": 343,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 352,
        "fullcodeline": "(void) fclose(file);"
    },
    {
        "line": 353,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 363,
        "fullcodeline": "(void) CloneString(&svg_info->size,image_info->size);"
    },
    {
        "line": 365,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"begin SAX\");"
    },
    {
        "line": 401,
        "fullcodeline": "svg_info->parser=xmlCreatePushParserCtxt(sax_handler,svg_info,(char *)"
    },
    {
        "line": 403,
        "fullcodeline": "(void) xmlCtxtUseOptions(svg_info->parser,XML_PARSE_HUGE);"
    },
    {
        "line": 416,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"end SAX\");"
    },
    {
        "line": 423,
        "fullcodeline": "svg_info=DestroySVGInfo(svg_info);"
    },
    {
        "line": 424,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 425,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 436,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 437,
        "fullcodeline": "image=(Image *) NULL;"
    },
    {
        "line": 438,
        "fullcodeline": "read_info=CloneImageInfo(image_info);"
    },
    {
        "line": 439,
        "fullcodeline": "SetImageInfoBlob(read_info,(void *) NULL,0);"
    },
    {
        "line": 440,
        "fullcodeline": "(void) FormatLocaleString(read_info->filename,MagickPathExtent,\"mvg:%s\","
    },
    {
        "line": 442,
        "fullcodeline": "image=ReadImage(read_info,exception);"
    },
    {
        "line": 443,
        "fullcodeline": "read_info=DestroyImageInfo(read_info);"
    },
    {
        "line": 461,
        "fullcodeline": "(void) CopyMagickString(next->filename,image->filename,MaxTextExtent);"
    },
    {
        "line": 462,
        "fullcodeline": "(void) CopyMagickString(next->magick,image->magick,MaxTextExtent);"
    },
    {
        "line": 463,
        "fullcodeline": "next=GetNextImageInList(next);"
    },
    {
        "line": 47,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 61,
        "fullcodeline": "if ((flags & SigmaValue) == 0)"
    },
    {
        "line": 70,
        "fullcodeline": "if (svg_image != (Image *) NULL)"
    },
    {
        "line": 344,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 404,
        "fullcodeline": "while ((n=ReadBlob(image,MagickPathExtent-1,message)) != 0)"
    },
    {
        "line": 426,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 444,
        "fullcodeline": "if (image != (Image *) NULL)"
    },
    {
        "line": 453,
        "fullcodeline": "if (svg_info->title != (char *) NULL)"
    },
    {
        "line": 455,
        "fullcodeline": "if (svg_info->comment != (char *) NULL)"
    },
    {
        "line": 62,
        "fullcodeline": "image->resolution.y=image->resolution.x;"
    },
    {
        "line": 72,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 406,
        "fullcodeline": "message[n]='\\0';"
    },
    {
        "line": 407,
        "fullcodeline": "status=xmlParseChunk(svg_info->parser,(char *) message,(int) n,0);"
    },
    {
        "line": 445,
        "fullcodeline": "(void) CopyMagickString(image->filename,image_info->filename,"
    },
    {
        "line": 454,
        "fullcodeline": "(void) SetImageProperty(image,\"svg:title\",svg_info->title,exception);"
    },
    {
        "line": 456,
        "fullcodeline": "(void) SetImageProperty(image,\"svg:comment\",svg_info->comment,"
    },
    {
        "line": 408,
        "fullcodeline": "if (status != 0)"
    }
]