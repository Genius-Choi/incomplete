[
    {
        "line": 2,
        "fullcodeline": "unit_name = 'systemdspawner-unittest-' + str(time.time())"
    },
    {
        "line": 3,
        "fullcodeline": "with tempfile.TemporaryDirectory() as d:"
    },
    {
        "line": 4,
        "fullcodeline": "os.chmod(d, 0o777)"
    },
    {
        "line": 5,
        "fullcodeline": "await systemd.start_transient_service("
    },
    {
        "line": 19,
        "fullcodeline": "env_dir = os.path.join(systemd.RUN_ROOT, unit_name)"
    },
    {
        "line": 20,
        "fullcodeline": "assert os.path.isdir(env_dir)"
    },
    {
        "line": 21,
        "fullcodeline": "assert (os.stat(env_dir).st_mode & 0o777) == 0o700"
    },
    {
        "line": 24,
        "fullcodeline": "await asyncio.sleep(0.1)"
    },
    {
        "line": 25,
        "fullcodeline": "assert await systemd.service_running(unit_name)"
    },
    {
        "line": 27,
        "fullcodeline": "env_file = os.path.join(env_dir, f\"{unit_name}.env\")"
    },
    {
        "line": 28,
        "fullcodeline": "assert os.path.exists(env_file)"
    },
    {
        "line": 29,
        "fullcodeline": "assert (os.stat(env_file).st_mode & 0o777) == 0o400"
    },
    {
        "line": 36,
        "fullcodeline": "await systemd.stop_service(unit_name)"
    },
    {
        "line": 37,
        "fullcodeline": "assert not await systemd.service_running(unit_name)"
    },
    {
        "line": 39,
        "fullcodeline": "assert not os.path.exists(env_file)"
    },
    {
        "line": 7,
        "fullcodeline": "[\"/bin/bash\"],"
    },
    {
        "line": 8,
        "fullcodeline": "[\"-c\", \"pwd; ls -la {0}; env > ./env; sleep 3\".format(d)],"
    },
    {
        "line": 31,
        "fullcodeline": "with open(os.path.join(d, 'env')) as f:"
    },
    {
        "line": 10,
        "fullcodeline": "environment_variables={"
    },
    {
        "line": 15,
        "fullcodeline": "properties={"
    },
    {
        "line": 32,
        "fullcodeline": "text = f.read()"
    },
    {
        "line": 33,
        "fullcodeline": "assert \"TESTING_SYSTEMD_ENV_1=TEST 1\" in text"
    },
    {
        "line": 34,
        "fullcodeline": "assert \"TESTING_SYSTEMD_ENV_2=TEST 2\" in text"
    }
]