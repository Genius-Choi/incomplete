[
    {
        "line": 8,
        "fullcodeline": "tmp_path = tmp_path_factory.mktemp(\"special\")"
    },
    {
        "line": 9,
        "fullcodeline": "my_special = tmp_path / \"sock\""
    },
    {
        "line": 10,
        "fullcodeline": "my_socket = socket.socket(socket.AF_UNIX)"
    },
    {
        "line": 11,
        "fullcodeline": "my_socket.bind(str(my_special))"
    },
    {
        "line": 12,
        "fullcodeline": "assert my_special.is_socket()"
    },
    {
        "line": 14,
        "fullcodeline": "app = web.Application()"
    },
    {
        "line": 17,
        "fullcodeline": "client = await aiohttp_client(app)"
    },
    {
        "line": 18,
        "fullcodeline": "r = await client.get(f\"/{my_special.name}\")"
    },
    {
        "line": 19,
        "fullcodeline": "assert r.status == 403"
    },
    {
        "line": 20,
        "fullcodeline": "my_socket.close()"
    },
    {
        "line": 5,
        "fullcodeline": "if not getattr(socket, \"AF_UNIX\", None):"
    },
    {
        "line": 15,
        "fullcodeline": "app.router.add_static(\"/\", str(tmp_path))"
    },
    {
        "line": 6,
        "fullcodeline": "pytest.skip(\"UNIX domain sockets not supported\")"
    }
]