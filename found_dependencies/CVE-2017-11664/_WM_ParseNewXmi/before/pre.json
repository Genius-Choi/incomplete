[
    {
        "line": 2,
        "fullcodeline": "struct _mdi *xmi_mdi = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "uint32_t xmi_tmpdata = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "uint8_t xmi_formcnt = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "uint32_t xmi_catlen = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "uint32_t xmi_subformlen = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "uint32_t i = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "uint32_t j = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "uint32_t xmi_evntlen = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "uint32_t xmi_divisions = 60;"
    },
    {
        "line": 12,
        "fullcodeline": "uint32_t xmi_tempo = 500000;"
    },
    {
        "line": 13,
        "fullcodeline": "uint32_t xmi_sample_count = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "float xmi_sample_count_f = 0.0;"
    },
    {
        "line": 15,
        "fullcodeline": "float xmi_sample_remainder = 0.0;"
    },
    {
        "line": 16,
        "fullcodeline": "float xmi_samples_per_delta_f = 0.0;"
    },
    {
        "line": 17,
        "fullcodeline": "uint8_t xmi_ch = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "uint8_t xmi_note = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "uint32_t *xmi_notelen = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "uint32_t setup_ret = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "uint32_t xmi_delta = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "uint32_t xmi_lowestdelta = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "uint32_t xmi_evnt_cnt = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 34,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 37,
        "fullcodeline": "xmi_tmpdata = *xmi_data++ << 24;"
    },
    {
        "line": 38,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 16;"
    },
    {
        "line": 39,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 8;"
    },
    {
        "line": 40,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++;"
    },
    {
        "line": 41,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 47,
        "fullcodeline": "xmi_data += 8;"
    },
    {
        "line": 48,
        "fullcodeline": "xmi_size -= 8;"
    },
    {
        "line": 54,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 55,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 58,
        "fullcodeline": "xmi_formcnt = *xmi_data++;"
    },
    {
        "line": 63,
        "fullcodeline": "xmi_size--;"
    },
    {
        "line": 69,
        "fullcodeline": "xmi_tmpdata -= 13;"
    },
    {
        "line": 70,
        "fullcodeline": "xmi_data += xmi_tmpdata;"
    },
    {
        "line": 71,
        "fullcodeline": "xmi_size -= xmi_tmpdata;"
    },
    {
        "line": 78,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 79,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 81,
        "fullcodeline": "xmi_catlen = *xmi_data++ << 24;"
    },
    {
        "line": 82,
        "fullcodeline": "xmi_catlen |= *xmi_data++ << 16;"
    },
    {
        "line": 83,
        "fullcodeline": "xmi_catlen |= *xmi_data++ << 8;"
    },
    {
        "line": 84,
        "fullcodeline": "xmi_catlen |= *xmi_data++;"
    },
    {
        "line": 85,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 93,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 94,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 96,
        "fullcodeline": "xmi_mdi = _WM_initMDI();"
    },
    {
        "line": 97,
        "fullcodeline": "_WM_midi_setup_divisions(xmi_mdi, xmi_divisions);"
    },
    {
        "line": 98,
        "fullcodeline": "_WM_midi_setup_tempo(xmi_mdi, xmi_tempo);"
    },
    {
        "line": 100,
        "fullcodeline": "xmi_samples_per_delta_f = _WM_GetSamplesPerTick(xmi_divisions, xmi_tempo);"
    },
    {
        "line": 102,
        "fullcodeline": "xmi_notelen = malloc(sizeof(uint32_t) * 16 * 128);"
    },
    {
        "line": 103,
        "fullcodeline": "memset(xmi_notelen, 0, (sizeof(uint32_t) * 16 * 128));"
    },
    {
        "line": 291,
        "fullcodeline": "xmi_mdi->current_event = &xmi_mdi->events[0];"
    },
    {
        "line": 292,
        "fullcodeline": "xmi_mdi->samples_to_mix = 0;"
    },
    {
        "line": 293,
        "fullcodeline": "xmi_mdi->note = NULL;"
    },
    {
        "line": 298,
        "fullcodeline": "_WM_ResetToStart(xmi_mdi);"
    },
    {
        "line": 28,
        "fullcodeline": "if (memcmp(xmi_data,\"FORM\",4)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (memcmp(xmi_data,\"XDIRINFO\",8)) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (xmi_formcnt == 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (memcmp(xmi_data,\"CAT \",4)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (memcmp(xmi_data,\"XMID\",4)) {"
    },
    {
        "line": 105,
        "fullcodeline": "for (i = 0; i < xmi_formcnt; i++) {"
    },
    {
        "line": 286,
        "fullcodeline": "if ((xmi_mdi->reverb = _WM_init_reverb(_WM_SampleRate, _WM_reverb_room_width, _WM_reverb_room_length, _WM_reverb_listen_posx, _WM_reverb_listen_posy)) == NULL) {"
    },
    {
        "line": 301,
        "fullcodeline": "if (xmi_notelen != NULL) free(xmi_notelen);"
    },
    {
        "line": 29,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 44,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 75,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 90,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 110,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 111,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 113,
        "fullcodeline": "xmi_subformlen = *xmi_data++ << 24;"
    },
    {
        "line": 114,
        "fullcodeline": "xmi_subformlen |= *xmi_data++ << 16;"
    },
    {
        "line": 115,
        "fullcodeline": "xmi_subformlen |= *xmi_data++ << 8;"
    },
    {
        "line": 116,
        "fullcodeline": "xmi_subformlen |= *xmi_data++;"
    },
    {
        "line": 117,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 123,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 124,
        "fullcodeline": "xmi_size -= 4;"
    },
    {
        "line": 125,
        "fullcodeline": "xmi_subformlen -= 4;"
    },
    {
        "line": 287,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_MEM, \"to init reverb\", 0);"
    },
    {
        "line": 296,
        "fullcodeline": "xmi_mdi->is_type2 = 1;"
    },
    {
        "line": 106,
        "fullcodeline": "if (memcmp(xmi_data,\"FORM\",4)) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (memcmp(xmi_data,\"XMID\",4)) {"
    },
    {
        "line": 107,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 120,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 129,
        "fullcodeline": "if (!memcmp(xmi_data,\"TIMB\",4)) {"
    },
    {
        "line": 133,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 135,
        "fullcodeline": "xmi_tmpdata = *xmi_data++ << 24;"
    },
    {
        "line": 136,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 16;"
    },
    {
        "line": 137,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 8;"
    },
    {
        "line": 138,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++;"
    },
    {
        "line": 139,
        "fullcodeline": "xmi_data += xmi_tmpdata;"
    },
    {
        "line": 140,
        "fullcodeline": "xmi_size -= (8 + xmi_tmpdata);"
    },
    {
        "line": 141,
        "fullcodeline": "xmi_subformlen -= (8 + xmi_tmpdata);"
    },
    {
        "line": 143,
        "fullcodeline": "} else if (!memcmp(xmi_data,\"RBRN\",4)) {"
    },
    {
        "line": 146,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 148,
        "fullcodeline": "xmi_tmpdata = *xmi_data++ << 24;"
    },
    {
        "line": 149,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 16;"
    },
    {
        "line": 150,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++ << 8;"
    },
    {
        "line": 151,
        "fullcodeline": "xmi_tmpdata |= *xmi_data++;"
    },
    {
        "line": 152,
        "fullcodeline": "xmi_data += xmi_tmpdata;"
    },
    {
        "line": 153,
        "fullcodeline": "xmi_size -= (8 + xmi_tmpdata);"
    },
    {
        "line": 154,
        "fullcodeline": "xmi_subformlen -= (8 + xmi_tmpdata);"
    },
    {
        "line": 156,
        "fullcodeline": "} else if (!memcmp(xmi_data,\"EVNT\",4)) {"
    },
    {
        "line": 158,
        "fullcodeline": "xmi_data += 4;"
    },
    {
        "line": 160,
        "fullcodeline": "xmi_evnt_cnt++;"
    },
    {
        "line": 162,
        "fullcodeline": "xmi_evntlen = *xmi_data++ << 24;"
    },
    {
        "line": 163,
        "fullcodeline": "xmi_evntlen |= *xmi_data++ << 16;"
    },
    {
        "line": 164,
        "fullcodeline": "xmi_evntlen |= *xmi_data++ << 8;"
    },
    {
        "line": 165,
        "fullcodeline": "xmi_evntlen |= *xmi_data++;"
    },
    {
        "line": 166,
        "fullcodeline": "xmi_size -= 8;"
    },
    {
        "line": 167,
        "fullcodeline": "xmi_subformlen -= 8;"
    },
    {
        "line": 278,
        "fullcodeline": "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"
    },
    {
        "line": 170,
        "fullcodeline": "if (*xmi_data < 0x80) {"
    },
    {
        "line": 171,
        "fullcodeline": "xmi_delta = 0;"
    },
    {
        "line": 180,
        "fullcodeline": "xmi_delta = (xmi_delta << 7) | (*xmi_data++ & 0x7f);"
    },
    {
        "line": 181,
        "fullcodeline": "xmi_size--;"
    },
    {
        "line": 182,
        "fullcodeline": "xmi_evntlen--;"
    },
    {
        "line": 183,
        "fullcodeline": "xmi_subformlen--;"
    },
    {
        "line": 172,
        "fullcodeline": "if (*xmi_data > 0x7f) {"
    },
    {
        "line": 193,
        "fullcodeline": "xmi_sample_count_f= (((float) xmi_tmpdata * xmi_samples_per_delta_f) + xmi_sample_remainder);"
    },
    {
        "line": 195,
        "fullcodeline": "xmi_sample_count = (uint32_t) xmi_sample_count_f;"
    },
    {
        "line": 196,
        "fullcodeline": "xmi_sample_remainder = xmi_sample_count_f - (float) xmi_sample_count;"
    },
    {
        "line": 201,
        "fullcodeline": "xmi_lowestdelta = 0;"
    },
    {
        "line": 223,
        "fullcodeline": "xmi_delta -= xmi_tmpdata;"
    },
    {
        "line": 173,
        "fullcodeline": "while (*xmi_data > 0x7f) {"
    },
    {
        "line": 204,
        "fullcodeline": "for (j = 0; j < (16*128); j++) {"
    },
    {
        "line": 227,
        "fullcodeline": "if ((xmi_data[0] == 0xff) && (xmi_data[1] == 0x51) && (xmi_data[2] == 0x03)) {"
    },
    {
        "line": 229,
        "fullcodeline": "setup_ret = 6;"
    },
    {
        "line": 232,
        "fullcodeline": "if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {"
    },
    {
        "line": 236,
        "fullcodeline": "if ((*xmi_data & 0xf0) == 0x90) {"
    },
    {
        "line": 238,
        "fullcodeline": "xmi_ch = *xmi_data & 0x0f;"
    },
    {
        "line": 239,
        "fullcodeline": "xmi_note = xmi_data[1];"
    },
    {
        "line": 240,
        "fullcodeline": "xmi_data += setup_ret;"
    },
    {
        "line": 241,
        "fullcodeline": "xmi_size -= setup_ret;"
    },
    {
        "line": 242,
        "fullcodeline": "xmi_evntlen -= setup_ret;"
    },
    {
        "line": 243,
        "fullcodeline": "xmi_subformlen -= setup_ret;"
    },
    {
        "line": 245,
        "fullcodeline": "xmi_tmpdata = 0;"
    },
    {
        "line": 255,
        "fullcodeline": "xmi_tmpdata = (xmi_tmpdata << 7) | (*xmi_data++ & 0x7f);"
    },
    {
        "line": 256,
        "fullcodeline": "xmi_size--;"
    },
    {
        "line": 257,
        "fullcodeline": "xmi_evntlen--;"
    },
    {
        "line": 258,
        "fullcodeline": "xmi_subformlen--;"
    },
    {
        "line": 261,
        "fullcodeline": "xmi_notelen[128 * xmi_ch + xmi_note] = xmi_tmpdata;"
    },
    {
        "line": 174,
        "fullcodeline": "xmi_delta = (xmi_delta << 7) | (*xmi_data++ & 0x7f);"
    },
    {
        "line": 175,
        "fullcodeline": "xmi_size--;"
    },
    {
        "line": 176,
        "fullcodeline": "xmi_evntlen--;"
    },
    {
        "line": 177,
        "fullcodeline": "xmi_subformlen--;"
    },
    {
        "line": 187,
        "fullcodeline": "if ((xmi_lowestdelta != 0) && (xmi_lowestdelta <= xmi_delta)) {"
    },
    {
        "line": 188,
        "fullcodeline": "xmi_tmpdata = xmi_lowestdelta;"
    },
    {
        "line": 209,
        "fullcodeline": "xmi_notelen[j] -= xmi_tmpdata;"
    },
    {
        "line": 247,
        "fullcodeline": "if (*xmi_data > 0x7f) {"
    },
    {
        "line": 268,
        "fullcodeline": "xmi_data += setup_ret;"
    },
    {
        "line": 269,
        "fullcodeline": "xmi_size -= setup_ret;"
    },
    {
        "line": 270,
        "fullcodeline": "xmi_evntlen -= setup_ret;"
    },
    {
        "line": 271,
        "fullcodeline": "xmi_subformlen -= setup_ret;"
    },
    {
        "line": 190,
        "fullcodeline": "xmi_tmpdata = xmi_delta;"
    },
    {
        "line": 198,
        "fullcodeline": "xmi_mdi->events[xmi_mdi->event_count - 1].samples_to_next += xmi_sample_count;"
    },
    {
        "line": 206,
        "fullcodeline": "if (xmi_notelen[j] == 0) continue;"
    },
    {
        "line": 212,
        "fullcodeline": "if (xmi_notelen[j] == 0) {"
    },
    {
        "line": 262,
        "fullcodeline": "if ((xmi_tmpdata > 0) && ((xmi_lowestdelta == 0) || (xmi_tmpdata < xmi_lowestdelta))) {"
    },
    {
        "line": 263,
        "fullcodeline": "xmi_lowestdelta = xmi_tmpdata;"
    },
    {
        "line": 213,
        "fullcodeline": "xmi_ch = j / 128;"
    },
    {
        "line": 214,
        "fullcodeline": "xmi_note = j - (xmi_ch * 128);"
    },
    {
        "line": 215,
        "fullcodeline": "_WM_midi_setup_noteoff(xmi_mdi, xmi_ch, xmi_note, 0);"
    },
    {
        "line": 248,
        "fullcodeline": "while (*xmi_data > 0x7f) {"
    },
    {
        "line": 249,
        "fullcodeline": "xmi_tmpdata = (xmi_tmpdata << 7) | (*xmi_data++ & 0x7f);"
    },
    {
        "line": 250,
        "fullcodeline": "xmi_size--;"
    },
    {
        "line": 251,
        "fullcodeline": "xmi_evntlen--;"
    },
    {
        "line": 252,
        "fullcodeline": "xmi_subformlen--;"
    },
    {
        "line": 218,
        "fullcodeline": "if ((xmi_lowestdelta == 0) || (xmi_lowestdelta > xmi_notelen[j])) {"
    },
    {
        "line": 219,
        "fullcodeline": "xmi_lowestdelta = xmi_notelen[j];"
    }
]