[
    {
        "line": 6,
        "fullcodeline": "int expected_count = 1 + extra_count;"
    },
    {
        "line": 24,
        "fullcodeline": "spin_lock_irq(&mapping->tree_lock);"
    },
    {
        "line": 26,
        "fullcodeline": "pslot = radix_tree_lookup_slot(&mapping->page_tree,"
    },
    {
        "line": 29,
        "fullcodeline": "expected_count += 1 + page_has_private(page);"
    },
    {
        "line": 59,
        "fullcodeline": "set_page_memcg(newpage, page_memcg(page));"
    },
    {
        "line": 60,
        "fullcodeline": "newpage->index = page->index;"
    },
    {
        "line": 61,
        "fullcodeline": "newpage->mapping = page->mapping;"
    },
    {
        "line": 65,
        "fullcodeline": "get_page(newpage);\t/* add cache reference */"
    },
    {
        "line": 71,
        "fullcodeline": "radix_tree_replace_slot(pslot, newpage);"
    },
    {
        "line": 78,
        "fullcodeline": "page_unfreeze_refs(page, expected_count - 1);"
    },
    {
        "line": 90,
        "fullcodeline": "__dec_zone_page_state(page, NR_FILE_PAGES);"
    },
    {
        "line": 91,
        "fullcodeline": "__inc_zone_page_state(newpage, NR_FILE_PAGES);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!mapping) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (PageSwapBacked(page))"
    },
    {
        "line": 66,
        "fullcodeline": "if (PageSwapCache(page)) {"
    },
    {
        "line": 15,
        "fullcodeline": "set_page_memcg(newpage, page_memcg(page));"
    },
    {
        "line": 16,
        "fullcodeline": "newpage->index = page->index;"
    },
    {
        "line": 17,
        "fullcodeline": "newpage->mapping = page->mapping;"
    },
    {
        "line": 27,
        "fullcodeline": "page_index(page));"
    },
    {
        "line": 30,
        "fullcodeline": "if (page_count(page) != expected_count ||"
    },
    {
        "line": 31,
        "fullcodeline": "radix_tree_deref_slot_protected(pslot, &mapping->tree_lock) != page) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!page_freeze_refs(page, expected_count)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (mode == MIGRATE_ASYNC && head &&"
    },
    {
        "line": 49,
        "fullcodeline": "!buffer_migrate_lock_buffers(head, mode)) {"
    },
    {
        "line": 63,
        "fullcodeline": "SetPageSwapBacked(newpage);"
    },
    {
        "line": 67,
        "fullcodeline": "SetPageSwapCache(newpage);"
    },
    {
        "line": 68,
        "fullcodeline": "set_page_private(newpage, page_private(page));"
    },
    {
        "line": 92,
        "fullcodeline": "if (!PageSwapCache(page) && PageSwapBacked(page)) {"
    },
    {
        "line": 93,
        "fullcodeline": "__dec_zone_page_state(page, NR_SHMEM);"
    },
    {
        "line": 11,
        "fullcodeline": "if (page_count(page) != expected_count)"
    },
    {
        "line": 33,
        "fullcodeline": "return -EAGAIN;"
    },
    {
        "line": 38,
        "fullcodeline": "return -EAGAIN;"
    },
    {
        "line": 52,
        "fullcodeline": "return -EAGAIN;"
    },
    {
        "line": 12,
        "fullcodeline": "return -EAGAIN;"
    }
]