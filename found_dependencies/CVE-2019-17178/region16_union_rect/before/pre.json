[
    {
        "line": 6,
        "fullcodeline": "REGION16_DATA* newItems = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "RECTANGLE_16* dstRect = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "assert(src);"
    },
    {
        "line": 11,
        "fullcodeline": "assert(src->data);"
    },
    {
        "line": 12,
        "fullcodeline": "assert(dst);"
    },
    {
        "line": 13,
        "fullcodeline": "srcExtents = region16_extents(src);"
    },
    {
        "line": 14,
        "fullcodeline": "dstExtents = region16_extents_noconst(dst);"
    },
    {
        "line": 33,
        "fullcodeline": "newItems = allocateRegion((1 + region16_n_rects(src)) * 4);"
    },
    {
        "line": 38,
        "fullcodeline": "dstRect = (RECTANGLE_16*)(&newItems[1]);"
    },
    {
        "line": 39,
        "fullcodeline": "usedRects = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "currentBand = region16_rects(src, &srcNbRects);"
    },
    {
        "line": 54,
        "fullcodeline": "endSrcRect = currentBand + srcNbRects;"
    },
    {
        "line": 190,
        "fullcodeline": "newItems->size = sizeof(REGION16_DATA) + (usedRects * sizeof(RECTANGLE_16));"
    },
    {
        "line": 191,
        "fullcodeline": "dst->data = realloc(newItems, newItems->size);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!region16_n_rects(src))"
    },
    {
        "line": 35,
        "fullcodeline": "if (!newItems)"
    },
    {
        "line": 42,
        "fullcodeline": "if (rect->top < srcExtents->top)"
    },
    {
        "line": 56,
        "fullcodeline": "while (currentBand < endSrcRect)"
    },
    {
        "line": 173,
        "fullcodeline": "if (srcExtents->bottom < rect->bottom)"
    },
    {
        "line": 186,
        "fullcodeline": "dstExtents->top = MIN(rect->top, srcExtents->top);"
    },
    {
        "line": 187,
        "fullcodeline": "dstExtents->left = MIN(rect->left, srcExtents->left);"
    },
    {
        "line": 188,
        "fullcodeline": "dstExtents->bottom = MAX(rect->bottom, srcExtents->bottom);"
    },
    {
        "line": 189,
        "fullcodeline": "dstExtents->right = MAX(rect->right, srcExtents->right);"
    },
    {
        "line": 193,
        "fullcodeline": "if (!dst->data)"
    },
    {
        "line": 200,
        "fullcodeline": "return region16_simplify_bands(dst);"
    },
    {
        "line": 19,
        "fullcodeline": "dst->extents = *rect;"
    },
    {
        "line": 20,
        "fullcodeline": "dst->data = allocateRegion(1);"
    },
    {
        "line": 44,
        "fullcodeline": "dstRect->top = rect->top;"
    },
    {
        "line": 45,
        "fullcodeline": "dstRect->left = rect->left;"
    },
    {
        "line": 46,
        "fullcodeline": "dstRect->right = rect->right;"
    },
    {
        "line": 47,
        "fullcodeline": "dstRect->bottom = MIN(srcExtents->top, rect->bottom);"
    },
    {
        "line": 48,
        "fullcodeline": "usedRects++;"
    },
    {
        "line": 49,
        "fullcodeline": "dstRect++;"
    },
    {
        "line": 169,
        "fullcodeline": "currentBand = nextBand;"
    },
    {
        "line": 175,
        "fullcodeline": "dstRect->top = MAX(srcExtents->bottom, rect->top);"
    },
    {
        "line": 176,
        "fullcodeline": "dstRect->left = rect->left;"
    },
    {
        "line": 177,
        "fullcodeline": "dstRect->right = rect->right;"
    },
    {
        "line": 178,
        "fullcodeline": "dstRect->bottom = rect->bottom;"
    },
    {
        "line": 179,
        "fullcodeline": "usedRects++;"
    },
    {
        "line": 183,
        "fullcodeline": "if ((src == dst) && (src->data->size > 0) && (src->data != &empty_region))"
    },
    {
        "line": 22,
        "fullcodeline": "if (!dst->data)"
    },
    {
        "line": 25,
        "fullcodeline": "dstRect = region16_rects_noconst(dst);"
    },
    {
        "line": 58,
        "fullcodeline": "if ((currentBand->bottom <= rect->top) || (rect->bottom <= currentBand->top) ||"
    },
    {
        "line": 59,
        "fullcodeline": "rectangle_contained_in_band(currentBand, endSrcRect, rect))"
    },
    {
        "line": 75,
        "fullcodeline": "region16_copy_band_with_union(dstRect,"
    },
    {
        "line": 80,
        "fullcodeline": "topInterBand = rect->top;"
    },
    {
        "line": 158,
        "fullcodeline": "if ((nextBand < endSrcRect) && (nextBand->top != currentBand->bottom) &&"
    },
    {
        "line": 159,
        "fullcodeline": "(rect->bottom > currentBand->bottom) && (rect->top < nextBand->top))"
    },
    {
        "line": 161,
        "fullcodeline": "dstRect->right = rect->right;"
    },
    {
        "line": 162,
        "fullcodeline": "dstRect->left = rect->left;"
    },
    {
        "line": 163,
        "fullcodeline": "dstRect->top = topInterBand;"
    },
    {
        "line": 164,
        "fullcodeline": "dstRect->bottom = MIN(nextBand->top, rect->bottom);"
    },
    {
        "line": 165,
        "fullcodeline": "dstRect++;"
    },
    {
        "line": 166,
        "fullcodeline": "usedRects++;"
    },
    {
        "line": 106,
        "fullcodeline": "UINT16 mergeTop = currentBand->top;"
    },
    {
        "line": 107,
        "fullcodeline": "UINT16 mergeBottom = currentBand->bottom;"
    },
    {
        "line": 124,
        "fullcodeline": "region16_copy_band_with_union(dstRect,"
    },
    {
        "line": 140,
        "fullcodeline": "topInterBand = currentBand->bottom;"
    },
    {
        "line": 110,
        "fullcodeline": "if (rect->top > currentBand->top)"
    },
    {
        "line": 121,
        "fullcodeline": "if (rect->bottom < currentBand->bottom)"
    },
    {
        "line": 131,
        "fullcodeline": "if (rect->bottom < currentBand->bottom)"
    },
    {
        "line": 112,
        "fullcodeline": "region16_copy_band_with_union(dstRect,"
    },
    {
        "line": 117,
        "fullcodeline": "mergeTop = rect->top;"
    },
    {
        "line": 122,
        "fullcodeline": "mergeBottom = rect->bottom;"
    },
    {
        "line": 133,
        "fullcodeline": "region16_copy_band_with_union(dstRect,"
    }
]