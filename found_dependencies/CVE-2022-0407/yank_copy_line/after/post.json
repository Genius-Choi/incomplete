[
    {
        "line": 10,
        "fullcodeline": "y_current->y_array[y_idx] = pnew;"
    },
    {
        "line": 11,
        "fullcodeline": "vim_memset(pnew, ' ', (size_t)bd->startspaces);"
    },
    {
        "line": 12,
        "fullcodeline": "pnew += bd->startspaces;"
    },
    {
        "line": 13,
        "fullcodeline": "mch_memmove(pnew, bd->textstart, (size_t)bd->textlen);"
    },
    {
        "line": 14,
        "fullcodeline": "pnew += bd->textlen;"
    },
    {
        "line": 15,
        "fullcodeline": "vim_memset(pnew, ' ', (size_t)bd->endspaces);"
    },
    {
        "line": 16,
        "fullcodeline": "pnew += bd->endspaces;"
    },
    {
        "line": 27,
        "fullcodeline": "*pnew = NUL;"
    },
    {
        "line": 7,
        "fullcodeline": "if ((pnew = alloc(bd->startspaces + bd->endspaces + bd->textlen + 1))"
    },
    {
        "line": 6,
        "fullcodeline": "bd->endspaces = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "int s = bd->textlen + bd->endspaces;"
    },
    {
        "line": 21,
        "fullcodeline": "while (s > 0 && VIM_ISWHITE(*(bd->textstart + s - 1)))"
    },
    {
        "line": 23,
        "fullcodeline": "s = s - (*mb_head_off)(bd->textstart, bd->textstart + s - 1) - 1;"
    },
    {
        "line": 24,
        "fullcodeline": "pnew--;"
    }
]