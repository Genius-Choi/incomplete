[
    {
        "line": 3,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 4, &input));"
    },
    {
        "line": 6,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->GetAttr(\"pooling_ratio\", &pooling_ratio));"
    },
    {
        "line": 11,
        "fullcodeline": "std::vector<DimensionHandle> output_dims;"
    },
    {
        "line": 36,
        "fullcodeline": "c->set_output(0, c->MakeShape(output_dims));"
    },
    {
        "line": 37,
        "fullcodeline": "c->set_output(1, c->Vector(output_dims[1]));"
    },
    {
        "line": 38,
        "fullcodeline": "c->set_output(2, c->Vector(output_dims[2]));"
    },
    {
        "line": 7,
        "fullcodeline": "if (pooling_ratio.size() != 4) {"
    },
    {
        "line": 12,
        "fullcodeline": "for (int i = 0; i < 4; ++i) {"
    },
    {
        "line": 29,
        "fullcodeline": "for (std::size_t i = 0; i < pooling_ratio.size(); ++i) {"
    },
    {
        "line": 39,
        "fullcodeline": "return OkStatus();"
    },
    {
        "line": 13,
        "fullcodeline": "DimensionHandle d = c->Dim(input, i);"
    },
    {
        "line": 8,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 14,
        "fullcodeline": "if (c->ValueKnown(d)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (pooling_ratio[i] < 1) {"
    },
    {
        "line": 17,
        "fullcodeline": "auto val ="
    },
    {
        "line": 23,
        "fullcodeline": "output_dims.push_back(c->MakeDim(val));"
    },
    {
        "line": 18,
        "fullcodeline": "static_cast<int64_t>(std::floor(c->Value(d) / pooling_ratio[i]));"
    },
    {
        "line": 19,
        "fullcodeline": "if (val < 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "output_dims.push_back(c->UnknownDim());"
    },
    {
        "line": 31,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 20,
        "fullcodeline": "return errors::InvalidArgument(\"Size computed for dim \", i,"
    }
]