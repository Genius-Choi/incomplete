[
    {
        "line": 22,
        "fullcodeline": "int retcode = 0;                               /* assume all succeed */"
    },
    {
        "line": 25,
        "fullcodeline": "perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1, 0, regs, 0);"
    },
    {
        "line": 35,
        "fullcodeline": "if (fpt->thread.fpqdepth == 0) {                   /* no queue, guilty insn is at regs->pc */"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < fpt->thread.fpqdepth; i++) {"
    },
    {
        "line": 52,
        "fullcodeline": "retcode = do_one_mathemu(fpt->thread.fpqueue[i].insn, &(fpt->thread.fsr), fpt->thread.float_regs);"
    },
    {
        "line": 53,
        "fullcodeline": "if (!retcode)                               /* insn failed, no point doing any more */"
    },
    {
        "line": 58,
        "fullcodeline": "fpt->thread.fsr &= ~(0x3000 | FSR_CEXC_MASK);"
    },
    {
        "line": 40,
        "fullcodeline": "retcode = do_one_mathemu(insn, &fpt->thread.fsr, fpt->thread.float_regs);"
    },
    {
        "line": 60,
        "fullcodeline": "fpt->thread.fsr &= ~0x3000;"
    },
    {
        "line": 43,
        "fullcodeline": "regs->pc = regs->npc;"
    },
    {
        "line": 44,
        "fullcodeline": "regs->npc += 4;"
    }
]