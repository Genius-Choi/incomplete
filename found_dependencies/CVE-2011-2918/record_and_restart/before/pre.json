[
    {
        "line": 4,
        "fullcodeline": "u64 period = event->hw.sample_period;"
    },
    {
        "line": 6,
        "fullcodeline": "int record = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "prev = local64_read(&event->hw.prev_count);"
    },
    {
        "line": 15,
        "fullcodeline": "delta = check_and_compute_delta(prev, val);"
    },
    {
        "line": 16,
        "fullcodeline": "local64_add(delta, &event->count);"
    },
    {
        "line": 22,
        "fullcodeline": "val = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "left = local64_read(&event->hw.period_left) - delta;"
    },
    {
        "line": 36,
        "fullcodeline": "write_pmc(event->hw.idx, val);"
    },
    {
        "line": 39,
        "fullcodeline": "perf_event_update_userpage(event);"
    },
    {
        "line": 8,
        "fullcodeline": "if (event->hw.state & PERF_HES_STOPPED) {"
    },
    {
        "line": 9,
        "fullcodeline": "write_pmc(event->hw.idx, 0);"
    },
    {
        "line": 47,
        "fullcodeline": "perf_sample_data_init(&data, ~0ULL);"
    },
    {
        "line": 48,
        "fullcodeline": "data.period = event->hw.last_period;"
    },
    {
        "line": 25,
        "fullcodeline": "if (left <= 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (left < 0x80000000LL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (event->attr.sample_type & PERF_SAMPLE_ADDR)"
    },
    {
        "line": 53,
        "fullcodeline": "if (perf_event_overflow(event, nmi, &data, regs))"
    },
    {
        "line": 26,
        "fullcodeline": "left += period;"
    },
    {
        "line": 33,
        "fullcodeline": "val = 0x80000000LL - left;"
    },
    {
        "line": 51,
        "fullcodeline": "perf_get_data_addr(regs, &data.addr);"
    },
    {
        "line": 27,
        "fullcodeline": "if (left <= 0)"
    },
    {
        "line": 28,
        "fullcodeline": "left = period;"
    }
]