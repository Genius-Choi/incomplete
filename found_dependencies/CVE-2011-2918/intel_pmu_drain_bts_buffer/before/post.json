[
    {
        "line": 3,
        "fullcodeline": "struct cpu_hw_events *cpuc = &__get_cpu_var(cpu_hw_events);"
    },
    {
        "line": 4,
        "fullcodeline": "struct debug_store *ds = cpuc->ds;"
    },
    {
        "line": 23,
        "fullcodeline": "at  = (struct bts_record *)(unsigned long)ds->bts_buffer_base;"
    },
    {
        "line": 24,
        "fullcodeline": "top = (struct bts_record *)(unsigned long)ds->bts_index;"
    },
    {
        "line": 29,
        "fullcodeline": "ds->bts_index = ds->bts_buffer_base;"
    },
    {
        "line": 31,
        "fullcodeline": "perf_sample_data_init(&data, 0);"
    },
    {
        "line": 33,
        "fullcodeline": "regs.ip     = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "perf_prepare_sample(&header, &data, event, &regs);"
    },
    {
        "line": 52,
        "fullcodeline": "perf_output_end(&handle);"
    },
    {
        "line": 56,
        "fullcodeline": "event->pending_kill = POLL_IN;"
    },
    {
        "line": 17,
        "fullcodeline": "if (!event)"
    },
    {
        "line": 26,
        "fullcodeline": "if (top <= at)"
    },
    {
        "line": 42,
        "fullcodeline": "if (perf_output_begin(&handle, event, header.size * (top - at), 1, 1))"
    },
    {
        "line": 45,
        "fullcodeline": "for (; at < top; at++) {"
    },
    {
        "line": 46,
        "fullcodeline": "data.ip\t\t= at->from;"
    },
    {
        "line": 47,
        "fullcodeline": "data.addr\t= at->to;"
    },
    {
        "line": 49,
        "fullcodeline": "perf_output_sample(&handle, &header, &data, event);"
    }
]