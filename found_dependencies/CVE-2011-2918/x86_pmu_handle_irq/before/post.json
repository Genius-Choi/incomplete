[
    {
        "line": 6,
        "fullcodeline": "int idx, handled = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "perf_sample_data_init(&data, 0);"
    },
    {
        "line": 11,
        "fullcodeline": "cpuc = &__get_cpu_var(cpu_hw_events);"
    },
    {
        "line": 21,
        "fullcodeline": "apic_write(APIC_LVTPC, APIC_DM_NMI);"
    },
    {
        "line": 23,
        "fullcodeline": "for (idx = 0; idx < x86_pmu.num_counters; idx++) {"
    },
    {
        "line": 37,
        "fullcodeline": "val = x86_perf_event_update(event);"
    },
    {
        "line": 44,
        "fullcodeline": "handled++;"
    },
    {
        "line": 55,
        "fullcodeline": "inc_irq_stat(apic_perf_irqs);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!test_bit(idx, cpuc->active_mask)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (val & (1ULL << (x86_pmu.cntval_bits - 1)))"
    },
    {
        "line": 47,
        "fullcodeline": "if (!x86_perf_event_set_period(event))"
    },
    {
        "line": 50,
        "fullcodeline": "if (perf_event_overflow(event, 1, &data, regs))"
    },
    {
        "line": 51,
        "fullcodeline": "x86_pmu_stop(event, 0);"
    },
    {
        "line": 30,
        "fullcodeline": "if (__test_and_clear_bit(idx, cpuc->running))"
    },
    {
        "line": 31,
        "fullcodeline": "handled++;"
    }
]