[
    {
        "line": 12,
        "fullcodeline": "error = generate_and_check_address(regs, opcode,"
    },
    {
        "line": 18,
        "fullcodeline": "perf_sw_event(PERF_COUNT_SW_EMULATION_FAULTS, 1, regs, address);"
    },
    {
        "line": 20,
        "fullcodeline": "destreg = (opcode >> 4) & 0x3f;"
    },
    {
        "line": 14,
        "fullcodeline": "if (error < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (user_mode(regs)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!access_ok(VERIFY_READ, (unsigned long) address, 1UL<<width_shift)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (__copy_user(&buffer, (const void *)(int)address, (1 << width_shift)) > 0) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (last_task_used_math == current) {"
    },
    {
        "line": 71,
        "fullcodeline": "die (\"Misaligned FPU load inside kernel\", regs, 0);"
    },
    {
        "line": 36,
        "fullcodeline": "enable_fpu();"
    },
    {
        "line": 37,
        "fullcodeline": "save_fpu(current);"
    },
    {
        "line": 38,
        "fullcodeline": "disable_fpu();"
    },
    {
        "line": 39,
        "fullcodeline": "last_task_used_math = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "regs->sr |= SR_FD;"
    },
    {
        "line": 43,
        "fullcodeline": "buflo = *(__u32*) &buffer;"
    },
    {
        "line": 44,
        "fullcodeline": "bufhi = *(1 + (__u32*) &buffer);"
    },
    {
        "line": 48,
        "fullcodeline": "current->thread.xstate->hardfpu.fp_regs[destreg] = buflo;"
    },
    {
        "line": 65,
        "fullcodeline": "printk(\"Unexpected width_shift %d in misaligned_fpu_load, PC=%08lx\\n\","
    },
    {
        "line": 72,
        "fullcodeline": "return -1;"
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "return -1; /* fault */"
    },
    {
        "line": 66,
        "fullcodeline": "width_shift, (unsigned long) regs->pc);"
    },
    {
        "line": 52,
        "fullcodeline": "current->thread.xstate->hardfpu.fp_regs[destreg] = buflo;"
    },
    {
        "line": 53,
        "fullcodeline": "current->thread.xstate->hardfpu.fp_regs[destreg+1] = bufhi;"
    },
    {
        "line": 59,
        "fullcodeline": "current->thread.xstate->hardfpu.fp_regs[destreg] = buflo;"
    },
    {
        "line": 60,
        "fullcodeline": "current->thread.xstate->hardfpu.fp_regs[destreg+1] = bufhi;"
    }
]