[
    {
        "line": 12,
        "fullcodeline": "error = generate_and_check_address(regs, opcode,"
    },
    {
        "line": 18,
        "fullcodeline": "perf_sw_event(PERF_COUNT_SW_ALIGNMENT_FAULTS, 1, regs, address);"
    },
    {
        "line": 20,
        "fullcodeline": "destreg = (opcode >> 4) & 0x3f;"
    },
    {
        "line": 14,
        "fullcodeline": "if (error < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (user_mode(regs)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!access_ok(VERIFY_READ, (unsigned long) address, 1UL<<width_shift)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (__copy_user(&buffer, (const void *)(int)address, (1 << width_shift)) > 0) {"
    },
    {
        "line": 40,
        "fullcodeline": "regs->regs[destreg] = (__u64)(__s64) *(__s32 *) &buffer;"
    },
    {
        "line": 43,
        "fullcodeline": "regs->regs[destreg] = buffer;"
    },
    {
        "line": 46,
        "fullcodeline": "printk(\"Unexpected width_shift %d in misaligned_load, PC=%08lx\\n\","
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    },
    {
        "line": 29,
        "fullcodeline": "return -1; /* fault */"
    },
    {
        "line": 47,
        "fullcodeline": "width_shift, (unsigned long) regs->pc);"
    },
    {
        "line": 56,
        "fullcodeline": "misaligned_kernel_word_load(address, do_sign_extend, &regs->regs[destreg]);"
    },
    {
        "line": 61,
        "fullcodeline": "regs->regs[destreg] = lo | hi;"
    },
    {
        "line": 66,
        "fullcodeline": "regs->regs[destreg] = lo | hi;"
    },
    {
        "line": 70,
        "fullcodeline": "printk(\"Unexpected width_shift %d in misaligned_load, PC=%08lx\\n\","
    },
    {
        "line": 34,
        "fullcodeline": "regs->regs[destreg] = (__u64)(__s64) *(__s16 *) &buffer;"
    },
    {
        "line": 71,
        "fullcodeline": "width_shift, (unsigned long) regs->pc);"
    },
    {
        "line": 36,
        "fullcodeline": "regs->regs[destreg] = (__u64) *(__u16 *) &buffer;"
    }
]