[
    {
        "line": 19,
        "fullcodeline": "pchg = pi->pchg;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!pi->prgvolfirst) {"
    },
    {
        "line": 44,
        "fullcodeline": "for (pi->y = pi->ystart; pi->y < pi->yend; pi->y += pi->ystep -"
    },
    {
        "line": 23,
        "fullcodeline": "pi->xstep = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "pi->ystep = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "pi->prgvolfirst = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "(pi->y % pi->ystep)) {"
    },
    {
        "line": 46,
        "fullcodeline": "for (pi->x = pi->xstart; pi->x < pi->xend; pi->x += pi->xstep -"
    },
    {
        "line": 25,
        "fullcodeline": "for (compno = 0, picomp = pi->picomps; compno < pi->numcomps;"
    },
    {
        "line": 26,
        "fullcodeline": "++compno, ++picomp) {"
    },
    {
        "line": 50,
        "fullcodeline": "&& pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno,"
    },
    {
        "line": 47,
        "fullcodeline": "(pi->x % pi->xstep)) {"
    },
    {
        "line": 51,
        "fullcodeline": "++pi->picomp) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (rlvlno = 0, pirlvl = picomp->pirlvls; rlvlno <"
    },
    {
        "line": 28,
        "fullcodeline": "picomp->numrlvls; ++rlvlno, ++pirlvl) {"
    },
    {
        "line": 29,
        "fullcodeline": "xstep = picomp->hsamp * (1 <<"
    },
    {
        "line": 32,
        "fullcodeline": "ystep = picomp->vsamp * (1 <<"
    },
    {
        "line": 35,
        "fullcodeline": "pi->xstep = (!pi->xstep) ? xstep :"
    },
    {
        "line": 37,
        "fullcodeline": "pi->ystep = (!pi->ystep) ? ystep :"
    },
    {
        "line": 36,
        "fullcodeline": "JAS_MIN(pi->xstep, xstep);"
    },
    {
        "line": 38,
        "fullcodeline": "JAS_MIN(pi->ystep, ystep);"
    },
    {
        "line": 30,
        "fullcodeline": "(pirlvl->prcwidthexpn + picomp->numrlvls -"
    },
    {
        "line": 33,
        "fullcodeline": "(pirlvl->prcheightexpn + picomp->numrlvls -"
    }
]