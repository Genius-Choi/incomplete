[
    {
        "line": 12,
        "fullcodeline": "byte hash_data[MAX_DER_DIGEST_SZ];"
    },
    {
        "line": 29,
        "fullcodeline": "ret = wc_HashGetDigestSize(hash_type);"
    },
    {
        "line": 34,
        "fullcodeline": "hash_enc_len = hash_len = ret;"
    },
    {
        "line": 52,
        "fullcodeline": "ret = wc_Hash(hash_type, data, data_len, hash_data, hash_len);"
    },
    {
        "line": 16,
        "fullcodeline": "if (data == NULL || data_len <= 0 ||"
    },
    {
        "line": 23,
        "fullcodeline": "if ((int)*sig_len < wc_SignatureGetSize(sig_type, key, key_len)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (sig_type == WC_SIGNATURE_TYPE_RSA_W_ENC) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "key == NULL || key_len <= 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "WOLFSSL_MSG(\"wc_SignatureGenerate: Invalid sig type/len\");"
    },
    {
        "line": 31,
        "fullcodeline": "WOLFSSL_MSG(\"wc_SignatureGenerate: Invalid hash type/len\");"
    },
    {
        "line": 39,
        "fullcodeline": "hash_enc_len += MAX_DER_DIGEST_ASN_SZ;"
    },
    {
        "line": 55,
        "fullcodeline": "if (sig_type == WC_SIGNATURE_TYPE_RSA_W_ENC) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "sig == NULL || sig_len == NULL || *sig_len <= 0 ||"
    },
    {
        "line": 60,
        "fullcodeline": "ret = wc_SignatureDerEncode(hash_type, hash_data, hash_len,"
    },
    {
        "line": 67,
        "fullcodeline": "ret = wc_SignatureGenerateHash(hash_type, sig_type,"
    }
]