[
    {
        "line": 6,
        "fullcodeline": "pr_debug(\"sock=%p\\n\", sock);"
    },
    {
        "line": 19,
        "fullcodeline": "sk = sk_alloc(net, PF_NFC, GFP_ATOMIC, nfc_proto->proto, kern);"
    },
    {
        "line": 23,
        "fullcodeline": "sock_init_data(sock, sk);"
    },
    {
        "line": 24,
        "fullcodeline": "sk->sk_protocol = nfc_proto->id;"
    },
    {
        "line": 25,
        "fullcodeline": "sk->sk_destruct = rawsock_destruct;"
    },
    {
        "line": 26,
        "fullcodeline": "sock->state = SS_UNCONNECTED;"
    },
    {
        "line": 8,
        "fullcodeline": "if ((sock->type != SOCK_SEQPACKET) && (sock->type != SOCK_RAW))"
    },
    {
        "line": 11,
        "fullcodeline": "if (sock->type == SOCK_RAW) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!sk)"
    },
    {
        "line": 14,
        "fullcodeline": "sock->ops = &rawsock_raw_ops;"
    },
    {
        "line": 9,
        "fullcodeline": "return -ESOCKTNOSUPPORT;"
    },
    {
        "line": 16,
        "fullcodeline": "sock->ops = &rawsock_ops;"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 30,
        "fullcodeline": "INIT_WORK(&nfc_rawsock(sk)->tx_work, rawsock_tx_work);"
    },
    {
        "line": 31,
        "fullcodeline": "nfc_rawsock(sk)->tx_work_scheduled = false;"
    },
    {
        "line": 12,
        "fullcodeline": "if (!capable(CAP_NET_RAW))"
    },
    {
        "line": 13,
        "fullcodeline": "return -EPERM;"
    }
]