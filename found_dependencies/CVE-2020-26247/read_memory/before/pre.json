[
    {
        "line": 3,
        "fullcodeline": "xmlRelaxNGParserCtxtPtr ctx = xmlRelaxNGNewMemParserCtxt("
    },
    {
        "line": 8,
        "fullcodeline": "VALUE errors = rb_ary_new();"
    },
    {
        "line": 11,
        "fullcodeline": "xmlSetStructuredErrorFunc((void *)errors, Nokogiri_error_array_pusher);"
    },
    {
        "line": 21,
        "fullcodeline": "schema = xmlRelaxNGParse(ctx);"
    },
    {
        "line": 23,
        "fullcodeline": "xmlSetStructuredErrorFunc(NULL, NULL);"
    },
    {
        "line": 24,
        "fullcodeline": "xmlRelaxNGFreeParserCtxt(ctx);"
    },
    {
        "line": 36,
        "fullcodeline": "rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);"
    },
    {
        "line": 37,
        "fullcodeline": "rb_iv_set(rb_schema, \"@errors\", errors);"
    },
    {
        "line": 26,
        "fullcodeline": "if(NULL == schema) {"
    },
    {
        "line": 4,
        "fullcodeline": "(const char *)StringValuePtr(content),"
    },
    {
        "line": 5,
        "fullcodeline": "(int)RSTRING_LEN(content)"
    },
    {
        "line": 27,
        "fullcodeline": "xmlErrorPtr error = xmlGetLastError();"
    },
    {
        "line": 29,
        "fullcodeline": "Nokogiri_error_raise(NULL, error);"
    },
    {
        "line": 31,
        "fullcodeline": "rb_raise(rb_eRuntimeError, \"Could not parse document\");"
    }
]