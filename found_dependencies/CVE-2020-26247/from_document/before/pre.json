[
    {
        "line": 9,
        "fullcodeline": "Data_Get_Struct(document, xmlDoc, doc);"
    },
    {
        "line": 12,
        "fullcodeline": "doc = doc->doc;"
    },
    {
        "line": 14,
        "fullcodeline": "ctx = xmlRelaxNGNewDocParserCtxt(doc);"
    },
    {
        "line": 16,
        "fullcodeline": "errors = rb_ary_new();"
    },
    {
        "line": 17,
        "fullcodeline": "xmlSetStructuredErrorFunc((void *)errors, Nokogiri_error_array_pusher);"
    },
    {
        "line": 27,
        "fullcodeline": "schema = xmlRelaxNGParse(ctx);"
    },
    {
        "line": 29,
        "fullcodeline": "xmlSetStructuredErrorFunc(NULL, NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "xmlRelaxNGFreeParserCtxt(ctx);"
    },
    {
        "line": 42,
        "fullcodeline": "rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);"
    },
    {
        "line": 43,
        "fullcodeline": "rb_iv_set(rb_schema, \"@errors\", errors);"
    },
    {
        "line": 32,
        "fullcodeline": "if(NULL == schema) {"
    },
    {
        "line": 33,
        "fullcodeline": "xmlErrorPtr error = xmlGetLastError();"
    },
    {
        "line": 35,
        "fullcodeline": "Nokogiri_error_raise(NULL, error);"
    },
    {
        "line": 37,
        "fullcodeline": "rb_raise(rb_eRuntimeError, \"Could not parse document\");"
    }
]