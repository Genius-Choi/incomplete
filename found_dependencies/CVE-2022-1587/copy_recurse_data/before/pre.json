[
    {
        "line": 6,
        "fullcodeline": "sljit_sw private_srcw[2];"
    },
    {
        "line": 7,
        "fullcodeline": "sljit_sw shared_srcw[3];"
    },
    {
        "line": 8,
        "fullcodeline": "sljit_sw kept_shared_srcw[2];"
    },
    {
        "line": 11,
        "fullcodeline": "BOOL setsom_found = FALSE;"
    },
    {
        "line": 12,
        "fullcodeline": "BOOL setmark_found = FALSE;"
    },
    {
        "line": 13,
        "fullcodeline": "BOOL capture_last_found = FALSE;"
    },
    {
        "line": 14,
        "fullcodeline": "BOOL control_head_found = FALSE;"
    },
    {
        "line": 42,
        "fullcodeline": "stackptr = STACK(stackptr);"
    },
    {
        "line": 43,
        "fullcodeline": "stacktop = STACK(stacktop);"
    },
    {
        "line": 45,
        "fullcodeline": "status.tmp_regs[0] = TMP1;"
    },
    {
        "line": 46,
        "fullcodeline": "status.saved_tmp_regs[0] = TMP1;"
    },
    {
        "line": 62,
        "fullcodeline": "status.saved_tmp_regs[2] = TMP3;"
    },
    {
        "line": 68,
        "fullcodeline": "delayed_mem_copy_init(&status, common);"
    },
    {
        "line": 81,
        "fullcodeline": "stackptr += sizeof(sljit_sw);"
    },
    {
        "line": 415,
        "fullcodeline": "SLJIT_ASSERT(cc == ccend && stackptr == stacktop);"
    },
    {
        "line": 417,
        "fullcodeline": "delayed_mem_copy_finish(&status);"
    },
    {
        "line": 48,
        "fullcodeline": "if (base_reg != TMP2)"
    },
    {
        "line": 70,
        "fullcodeline": "if (type != recurse_copy_shared_to_global && type != recurse_copy_kept_shared_to_global)"
    },
    {
        "line": 96,
        "fullcodeline": "while (cc < ccend)"
    },
    {
        "line": 24,
        "fullcodeline": "from_sp = TRUE;"
    },
    {
        "line": 25,
        "fullcodeline": "base_reg = STACK_TOP;"
    },
    {
        "line": 31,
        "fullcodeline": "from_sp = FALSE;"
    },
    {
        "line": 32,
        "fullcodeline": "base_reg = STACK_TOP;"
    },
    {
        "line": 36,
        "fullcodeline": "SLJIT_ASSERT(type == recurse_swap_global);"
    },
    {
        "line": 37,
        "fullcodeline": "from_sp = FALSE;"
    },
    {
        "line": 38,
        "fullcodeline": "base_reg = TMP2;"
    },
    {
        "line": 50,
        "fullcodeline": "status.tmp_regs[1] = TMP2;"
    },
    {
        "line": 51,
        "fullcodeline": "status.saved_tmp_regs[1] = TMP2;"
    },
    {
        "line": 64,
        "fullcodeline": "status.tmp_regs[2] = STR_END;"
    },
    {
        "line": 72,
        "fullcodeline": "SLJIT_ASSERT(type == recurse_copy_from_global || type == recurse_copy_private_to_global || type == recurse_swap_global);"
    },
    {
        "line": 98,
        "fullcodeline": "private_count = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "shared_count = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "kept_shared_count = 0;"
    },
    {
        "line": 55,
        "fullcodeline": "status.saved_tmp_regs[1] = RETURN_ADDR;"
    },
    {
        "line": 66,
        "fullcodeline": "status.tmp_regs[2] = TMP3;"
    },
    {
        "line": 74,
        "fullcodeline": "if (!from_sp)"
    },
    {
        "line": 77,
        "fullcodeline": "if (from_sp || type == recurse_swap_global)"
    },
    {
        "line": 354,
        "fullcodeline": "if (type != recurse_copy_shared_to_global && type != recurse_copy_kept_shared_to_global)"
    },
    {
        "line": 374,
        "fullcodeline": "if (type != recurse_copy_private_to_global && type != recurse_copy_kept_shared_to_global)"
    },
    {
        "line": 394,
        "fullcodeline": "if (type != recurse_copy_private_to_global && type != recurse_swap_global)"
    },
    {
        "line": 75,
        "fullcodeline": "delayed_mem_copy_move(&status, base_reg, stackptr, SLJIT_SP, common->recursive_head_ptr);"
    },
    {
        "line": 78,
        "fullcodeline": "delayed_mem_copy_move(&status, SLJIT_SP, common->recursive_head_ptr, base_reg, stackptr);"
    },
    {
        "line": 105,
        "fullcodeline": "SLJIT_ASSERT(common->has_set_som);"
    },
    {
        "line": 112,
        "fullcodeline": "cc += 1;"
    },
    {
        "line": 137,
        "fullcodeline": "cc += 1 + LINK_SIZE;"
    },
    {
        "line": 148,
        "fullcodeline": "cc += 1 + LINK_SIZE;"
    },
    {
        "line": 163,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 164,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 165,
        "fullcodeline": "cc += 1 + LINK_SIZE;"
    },
    {
        "line": 170,
        "fullcodeline": "offset = (GET2(cc, 1 + LINK_SIZE)) << 1;"
    },
    {
        "line": 171,
        "fullcodeline": "shared_srcw[0] = OVECTOR(offset);"
    },
    {
        "line": 172,
        "fullcodeline": "shared_srcw[1] = OVECTOR(offset + 1);"
    },
    {
        "line": 173,
        "fullcodeline": "shared_count = 2;"
    },
    {
        "line": 187,
        "fullcodeline": "cc += 1 + LINK_SIZE + IMM2_SIZE;"
    },
    {
        "line": 192,
        "fullcodeline": "offset = (GET2(cc, 1 + LINK_SIZE)) << 1;"
    },
    {
        "line": 193,
        "fullcodeline": "shared_srcw[0] = OVECTOR(offset);"
    },
    {
        "line": 194,
        "fullcodeline": "shared_srcw[1] = OVECTOR(offset + 1);"
    },
    {
        "line": 195,
        "fullcodeline": "shared_count = 2;"
    },
    {
        "line": 204,
        "fullcodeline": "private_count = 2;"
    },
    {
        "line": 205,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 206,
        "fullcodeline": "private_srcw[1] = OVECTOR_PRIV(GET2(cc, 1 + LINK_SIZE));"
    },
    {
        "line": 207,
        "fullcodeline": "cc += 1 + LINK_SIZE + IMM2_SIZE;"
    },
    {
        "line": 212,
        "fullcodeline": "alternative = cc + GET(cc, 1);"
    },
    {
        "line": 218,
        "fullcodeline": "cc += 1 + LINK_SIZE;"
    },
    {
        "line": 292,
        "fullcodeline": "i = (*cc == OP_XCLASS) ? GET(cc, 1) : 1 + 32 / (int)sizeof(PCRE2_UCHAR);"
    },
    {
        "line": 314,
        "fullcodeline": "cc += i;"
    },
    {
        "line": 321,
        "fullcodeline": "SLJIT_ASSERT(common->mark_ptr != 0);"
    },
    {
        "line": 334,
        "fullcodeline": "cc += 1 + 2 + cc[1];"
    },
    {
        "line": 338,
        "fullcodeline": "SLJIT_ASSERT(common->control_head_ptr != 0);"
    },
    {
        "line": 345,
        "fullcodeline": "cc++;"
    },
    {
        "line": 349,
        "fullcodeline": "cc = next_opcode(common, cc);"
    },
    {
        "line": 350,
        "fullcodeline": "SLJIT_ASSERT(cc != NULL);"
    },
    {
        "line": 356,
        "fullcodeline": "SLJIT_ASSERT(type == recurse_copy_from_global || type == recurse_copy_private_to_global || type == recurse_swap_global);"
    },
    {
        "line": 376,
        "fullcodeline": "SLJIT_ASSERT(type == recurse_copy_from_global || type == recurse_copy_shared_to_global || type == recurse_swap_global);"
    },
    {
        "line": 396,
        "fullcodeline": "SLJIT_ASSERT(type == recurse_copy_from_global || type == recurse_copy_shared_to_global || type == recurse_copy_kept_shared_to_global);"
    },
    {
        "line": 57,
        "fullcodeline": "status.tmp_regs[1] = STR_PTR;"
    },
    {
        "line": 106,
        "fullcodeline": "if (has_quit && !setsom_found)"
    },
    {
        "line": 131,
        "fullcodeline": "if (common->capture_last_ptr != 0 && !capture_last_found)"
    },
    {
        "line": 141,
        "fullcodeline": "if (PRIVATE_DATA(cc) != 0)"
    },
    {
        "line": 175,
        "fullcodeline": "if (common->capture_last_ptr != 0 && !capture_last_found)"
    },
    {
        "line": 182,
        "fullcodeline": "if (common->optimized_cbracket[GET2(cc, 1 + LINK_SIZE)] == 0)"
    },
    {
        "line": 197,
        "fullcodeline": "if (common->capture_last_ptr != 0 && !capture_last_found)"
    },
    {
        "line": 213,
        "fullcodeline": "if (*alternative == OP_KETRMAX || *alternative == OP_KETRMIN)"
    },
    {
        "line": 296,
        "fullcodeline": "if (PRIVATE_DATA(cc) != 0)"
    },
    {
        "line": 322,
        "fullcodeline": "if (has_quit && !setmark_found)"
    },
    {
        "line": 328,
        "fullcodeline": "if (common->control_head_ptr != 0 && !control_head_found)"
    },
    {
        "line": 339,
        "fullcodeline": "if (!control_head_found)"
    },
    {
        "line": 358,
        "fullcodeline": "for (i = 0; i < private_count; i++)"
    },
    {
        "line": 372,
        "fullcodeline": "stackptr += sizeof(sljit_sw) * private_count;"
    },
    {
        "line": 378,
        "fullcodeline": "for (i = 0; i < shared_count; i++)"
    },
    {
        "line": 392,
        "fullcodeline": "stackptr += sizeof(sljit_sw) * shared_count;"
    },
    {
        "line": 398,
        "fullcodeline": "for (i = 0; i < kept_shared_count; i++)"
    },
    {
        "line": 412,
        "fullcodeline": "stackptr += sizeof(sljit_sw) * kept_shared_count;"
    },
    {
        "line": 59,
        "fullcodeline": "status.tmp_regs[1] = RETURN_ADDR;"
    },
    {
        "line": 108,
        "fullcodeline": "kept_shared_srcw[0] = OVECTOR(0);"
    },
    {
        "line": 109,
        "fullcodeline": "kept_shared_count = 1;"
    },
    {
        "line": 110,
        "fullcodeline": "setsom_found = TRUE;"
    },
    {
        "line": 133,
        "fullcodeline": "shared_srcw[0] = common->capture_last_ptr;"
    },
    {
        "line": 134,
        "fullcodeline": "shared_count = 1;"
    },
    {
        "line": 135,
        "fullcodeline": "capture_last_found = TRUE;"
    },
    {
        "line": 143,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 144,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 145,
        "fullcodeline": "SLJIT_ASSERT(PRIVATE_DATA(cc + 1) != 0);"
    },
    {
        "line": 146,
        "fullcodeline": "cc += PRIVATE_DATA(cc + 1);"
    },
    {
        "line": 177,
        "fullcodeline": "shared_srcw[2] = common->capture_last_ptr;"
    },
    {
        "line": 178,
        "fullcodeline": "shared_count = 3;"
    },
    {
        "line": 179,
        "fullcodeline": "capture_last_found = TRUE;"
    },
    {
        "line": 184,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 185,
        "fullcodeline": "private_srcw[0] = OVECTOR_PRIV(GET2(cc, 1 + LINK_SIZE));"
    },
    {
        "line": 199,
        "fullcodeline": "shared_srcw[2] = common->capture_last_ptr;"
    },
    {
        "line": 200,
        "fullcodeline": "shared_count = 3;"
    },
    {
        "line": 201,
        "fullcodeline": "capture_last_found = TRUE;"
    },
    {
        "line": 215,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 216,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 324,
        "fullcodeline": "kept_shared_srcw[0] = common->mark_ptr;"
    },
    {
        "line": 325,
        "fullcodeline": "kept_shared_count = 1;"
    },
    {
        "line": 326,
        "fullcodeline": "setmark_found = TRUE;"
    },
    {
        "line": 330,
        "fullcodeline": "private_srcw[0] = common->control_head_ptr;"
    },
    {
        "line": 331,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 332,
        "fullcodeline": "control_head_found = TRUE;"
    },
    {
        "line": 341,
        "fullcodeline": "private_srcw[0] = common->control_head_ptr;"
    },
    {
        "line": 342,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 343,
        "fullcodeline": "control_head_found = TRUE;"
    },
    {
        "line": 360,
        "fullcodeline": "SLJIT_ASSERT(private_srcw[i] != 0);"
    },
    {
        "line": 368,
        "fullcodeline": "stackptr += sizeof(sljit_sw);"
    },
    {
        "line": 380,
        "fullcodeline": "SLJIT_ASSERT(shared_srcw[i] != 0);"
    },
    {
        "line": 388,
        "fullcodeline": "stackptr += sizeof(sljit_sw);"
    },
    {
        "line": 400,
        "fullcodeline": "SLJIT_ASSERT(kept_shared_srcw[i] != 0);"
    },
    {
        "line": 408,
        "fullcodeline": "stackptr += sizeof(sljit_sw);"
    },
    {
        "line": 118,
        "fullcodeline": "if (common->has_set_som && !setsom_found)"
    },
    {
        "line": 124,
        "fullcodeline": "if (common->mark_ptr != 0 && !setmark_found)"
    },
    {
        "line": 297,
        "fullcodeline": "switch(get_class_iterator_size(cc + i))"
    },
    {
        "line": 362,
        "fullcodeline": "if (!from_sp)"
    },
    {
        "line": 365,
        "fullcodeline": "if (from_sp || type == recurse_swap_global)"
    },
    {
        "line": 382,
        "fullcodeline": "if (!from_sp)"
    },
    {
        "line": 385,
        "fullcodeline": "if (from_sp || type == recurse_swap_global)"
    },
    {
        "line": 402,
        "fullcodeline": "if (!from_sp)"
    },
    {
        "line": 405,
        "fullcodeline": "if (from_sp || type == recurse_swap_global)"
    },
    {
        "line": 120,
        "fullcodeline": "kept_shared_srcw[0] = OVECTOR(0);"
    },
    {
        "line": 121,
        "fullcodeline": "kept_shared_count = 1;"
    },
    {
        "line": 122,
        "fullcodeline": "setsom_found = TRUE;"
    },
    {
        "line": 126,
        "fullcodeline": "kept_shared_srcw[kept_shared_count] = common->mark_ptr;"
    },
    {
        "line": 127,
        "fullcodeline": "kept_shared_count++;"
    },
    {
        "line": 128,
        "fullcodeline": "setmark_found = TRUE;"
    },
    {
        "line": 300,
        "fullcodeline": "private_count = 1;"
    },
    {
        "line": 301,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 305,
        "fullcodeline": "private_count = 2;"
    },
    {
        "line": 306,
        "fullcodeline": "private_srcw[0] = PRIVATE_DATA(cc);"
    },
    {
        "line": 307,
        "fullcodeline": "private_srcw[1] = private_srcw[0] + sizeof(sljit_sw);"
    },
    {
        "line": 311,
        "fullcodeline": "SLJIT_UNREACHABLE();"
    },
    {
        "line": 363,
        "fullcodeline": "delayed_mem_copy_move(&status, base_reg, stackptr, SLJIT_SP, private_srcw[i]);"
    },
    {
        "line": 366,
        "fullcodeline": "delayed_mem_copy_move(&status, SLJIT_SP, private_srcw[i], base_reg, stackptr);"
    },
    {
        "line": 383,
        "fullcodeline": "delayed_mem_copy_move(&status, base_reg, stackptr, SLJIT_SP, shared_srcw[i]);"
    },
    {
        "line": 386,
        "fullcodeline": "delayed_mem_copy_move(&status, SLJIT_SP, shared_srcw[i], base_reg, stackptr);"
    },
    {
        "line": 403,
        "fullcodeline": "delayed_mem_copy_move(&status, base_reg, stackptr, SLJIT_SP, kept_shared_srcw[i]);"
    },
    {
        "line": 406,
        "fullcodeline": "delayed_mem_copy_move(&status, SLJIT_SP, kept_shared_srcw[i], base_reg, stackptr);"
    }
]