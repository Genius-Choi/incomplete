[
    {
        "line": 3,
        "fullcodeline": "unsigned int offset = sizeof(struct ipv6hdr);"
    },
    {
        "line": 4,
        "fullcodeline": "unsigned int packet_len = skb_tail_pointer(skb) -"
    },
    {
        "line": 6,
        "fullcodeline": "int found_rhdr = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "*nexthdr = &ipv6_hdr(skb)->nexthdr;"
    },
    {
        "line": 9,
        "fullcodeline": "while (offset <= packet_len) {"
    },
    {
        "line": 44,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 5,
        "fullcodeline": "skb_network_header(skb);"
    },
    {
        "line": 35,
        "fullcodeline": "exthdr = (struct ipv6_opt_hdr *)(skb_network_header(skb) +"
    },
    {
        "line": 37,
        "fullcodeline": "len = ipv6_optlen(exthdr);"
    },
    {
        "line": 40,
        "fullcodeline": "offset += len;"
    },
    {
        "line": 41,
        "fullcodeline": "*nexthdr = &exthdr->nexthdr;"
    },
    {
        "line": 32,
        "fullcodeline": "if (offset + sizeof(struct ipv6_opt_hdr) > packet_len)"
    },
    {
        "line": 38,
        "fullcodeline": "if (len + offset >= IPV6_MAXPLEN)"
    },
    {
        "line": 18,
        "fullcodeline": "found_rhdr = 1;"
    },
    {
        "line": 33,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 39,
        "fullcodeline": "return -EINVAL;"
    }
]