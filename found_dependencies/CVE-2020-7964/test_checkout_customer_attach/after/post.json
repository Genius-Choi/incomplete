[
    {
        "line": 4,
        "fullcodeline": "checkout = checkout_with_item"
    },
    {
        "line": 5,
        "fullcodeline": "assert checkout.user is None"
    },
    {
        "line": 7,
        "fullcodeline": "query = \"\"\""
    },
    {
        "line": 21,
        "fullcodeline": "checkout_id = graphene.Node.to_global_id(\"Checkout\", checkout.pk)"
    },
    {
        "line": 22,
        "fullcodeline": "customer_id = graphene.Node.to_global_id(\"User\", customer_user.pk)"
    },
    {
        "line": 23,
        "fullcodeline": "variables = {\"checkoutId\": checkout_id, \"customerId\": customer_id}"
    },
    {
        "line": 26,
        "fullcodeline": "response = api_client.post_graphql(query, variables)"
    },
    {
        "line": 27,
        "fullcodeline": "assert_no_permission(response)"
    },
    {
        "line": 30,
        "fullcodeline": "response = user_api_client.post_graphql(query, variables)"
    },
    {
        "line": 31,
        "fullcodeline": "content = get_graphql_content(response)"
    },
    {
        "line": 33,
        "fullcodeline": "assert not data[\"errors\"]"
    },
    {
        "line": 34,
        "fullcodeline": "checkout.refresh_from_db()"
    },
    {
        "line": 35,
        "fullcodeline": "assert checkout.user == customer_user"
    },
    {
        "line": 38,
        "fullcodeline": "other_customer = User.objects.create_user(\"othercustomer@example.com\", \"password\")"
    },
    {
        "line": 39,
        "fullcodeline": "variables[\"customerId\"] = graphene.Node.to_global_id(\"User\", other_customer.pk)"
    },
    {
        "line": 40,
        "fullcodeline": "response = user_api_client.post_graphql(query, variables)"
    },
    {
        "line": 41,
        "fullcodeline": "assert_no_permission(response)"
    }
]