[
    {
        "line": 2,
        "fullcodeline": "experiment_id = mlflow_client.create_experiment(\"Log models\")"
    },
    {
        "line": 3,
        "fullcodeline": "with TempDir(chdr=True):"
    },
    {
        "line": 4,
        "fullcodeline": "model_paths = [f\"model/path/{i}\" for i in range(3)]"
    },
    {
        "line": 5,
        "fullcodeline": "mlflow.set_tracking_uri(mlflow_client.tracking_uri)"
    },
    {
        "line": 6,
        "fullcodeline": "with mlflow.start_run(experiment_id=experiment_id) as run:"
    },
    {
        "line": 7,
        "fullcodeline": "for i, m in enumerate(model_paths):"
    },
    {
        "line": 14,
        "fullcodeline": "model = Model.load(os.path.join(m, \"MLmodel\"))"
    },
    {
        "line": 15,
        "fullcodeline": "run = mlflow.get_run(run.info.run_id)"
    },
    {
        "line": 17,
        "fullcodeline": "models = json.loads(tag)"
    },
    {
        "line": 20,
        "fullcodeline": "history_model_meta = models[i].copy()"
    },
    {
        "line": 21,
        "fullcodeline": "original_model_uuid = history_model_meta.pop(\"model_uuid\")"
    },
    {
        "line": 22,
        "fullcodeline": "model_meta = model.to_dict().copy()"
    },
    {
        "line": 23,
        "fullcodeline": "new_model_uuid = model_meta.pop(\"model_uuid\")"
    },
    {
        "line": 24,
        "fullcodeline": "assert history_model_meta == model_meta"
    },
    {
        "line": 25,
        "fullcodeline": "assert original_model_uuid != new_model_uuid"
    },
    {
        "line": 26,
        "fullcodeline": "assert len(models) == i + 1"
    },
    {
        "line": 8,
        "fullcodeline": "mlflow.pyfunc.log_model(m, loader_module=\"mlflow.pyfunc\")"
    },
    {
        "line": 9,
        "fullcodeline": "mlflow.pyfunc.save_model("
    },
    {
        "line": 27,
        "fullcodeline": "for j in range(0, i + 1):"
    },
    {
        "line": 11,
        "fullcodeline": "mlflow_model=Model(artifact_path=m, run_id=run.info.run_id),"
    },
    {
        "line": 28,
        "fullcodeline": "assert models[j][\"artifact_path\"] == model_paths[j]"
    }
]