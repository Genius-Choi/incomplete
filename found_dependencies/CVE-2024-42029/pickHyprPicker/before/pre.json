[
    {
        "line": 2,
        "fullcodeline": "const std::string HYPRPICKER_CMD = \"hyprpicker --format=rgb --no-fancy\";"
    },
    {
        "line": 3,
        "fullcodeline": "std::string       rgbColor       = execAndGet(HYPRPICKER_CMD.c_str());"
    },
    {
        "line": 34,
        "fullcodeline": "results[\"color\"] = sdbus::Struct(std::tuple{r / 255.0, g / 255.0, b / 255.0});"
    },
    {
        "line": 36,
        "fullcodeline": "auto reply = call.createReply();"
    },
    {
        "line": 38,
        "fullcodeline": "reply << (uint32_t)0;"
    },
    {
        "line": 39,
        "fullcodeline": "reply << results;"
    },
    {
        "line": 5,
        "fullcodeline": "if (rgbColor.size() > 12) {"
    },
    {
        "line": 11,
        "fullcodeline": "std::array<uint8_t, 3> colors{0, 0, 0};"
    },
    {
        "line": 33,
        "fullcodeline": "std::unordered_map<std::string, sdbus::Variant> results;"
    },
    {
        "line": 6,
        "fullcodeline": "Debug::log(ERR, \"hyprpicker returned strange output: \" + rgbColor);"
    },
    {
        "line": 7,
        "fullcodeline": "sendEmptyDbusMethodReply(call, 1);"
    },
    {
        "line": 14,
        "fullcodeline": "for (uint8_t i = 0; i < 2; i++) {"
    },
    {
        "line": 26,
        "fullcodeline": "colors[2] = std::stoi(rgbColor);"
    },
    {
        "line": 29,
        "fullcodeline": "sendEmptyDbusMethodReply(call, 1);"
    },
    {
        "line": 15,
        "fullcodeline": "uint64_t next = rgbColor.find(' ');"
    },
    {
        "line": 24,
        "fullcodeline": "rgbColor  = rgbColor.substr(next + 1, rgbColor.size() - next);"
    },
    {
        "line": 17,
        "fullcodeline": "if (next == std::string::npos) {"
    },
    {
        "line": 23,
        "fullcodeline": "colors[i] = std::stoi(rgbColor.substr(0, next));"
    }
]