[
    {
        "line": 7,
        "fullcodeline": "http_ctx_t *ctx = f->ctx;"
    },
    {
        "line": 12,
        "fullcodeline": "conf = (core_server_config *)"
    },
    {
        "line": 16,
        "fullcodeline": "if (mode != AP_MODE_READBYTES && mode != AP_MODE_GETLINE) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!ctx) {"
    },
    {
        "line": 13,
        "fullcodeline": "ap_get_module_config(f->r->server->module_config, &core_module);"
    },
    {
        "line": 22,
        "fullcodeline": "f->ctx = ctx = apr_pcalloc(f->r->pool, sizeof(*ctx));"
    },
    {
        "line": 23,
        "fullcodeline": "ctx->state = BODY_NONE;"
    },
    {
        "line": 37,
        "fullcodeline": "tenc = apr_table_get(f->r->headers_in, \"Transfer-Encoding\");"
    },
    {
        "line": 38,
        "fullcodeline": "lenp = apr_table_get(f->r->headers_in, \"Content-Length\");"
    },
    {
        "line": 157,
        "fullcodeline": "e = apr_bucket_eos_create(f->c->bucket_alloc);"
    },
    {
        "line": 158,
        "fullcodeline": "APR_BRIGADE_INSERT_TAIL(b, e);"
    },
    {
        "line": 163,
        "fullcodeline": "apr_brigade_cleanup(b);"
    },
    {
        "line": 164,
        "fullcodeline": "again = 0; /* until further notice */"
    },
    {
        "line": 17,
        "fullcodeline": "return ap_get_brigade(f->next, b, mode, block, readbytes);"
    },
    {
        "line": 108,
        "fullcodeline": "if (ctx->state == BODY_NONE && f->r->proxyreq != PROXYREQ_RESPONSE) {"
    },
    {
        "line": 117,
        "fullcodeline": "if ((ctx->state == BODY_CHUNK"
    },
    {
        "line": 31,
        "fullcodeline": "ctx->limit = ap_get_limit_req_body(f->r);"
    },
    {
        "line": 65,
        "fullcodeline": "lenp = NULL;"
    },
    {
        "line": 70,
        "fullcodeline": "ctx->state = BODY_LENGTH;"
    },
    {
        "line": 109,
        "fullcodeline": "e = apr_bucket_eos_create(f->c->bucket_alloc);"
    },
    {
        "line": 110,
        "fullcodeline": "APR_BRIGADE_INSERT_TAIL(b, e);"
    },
    {
        "line": 111,
        "fullcodeline": "ctx->eos_sent = 1;"
    },
    {
        "line": 120,
        "fullcodeline": "&& !(f->r->eos_sent || f->r->bytes_sent)) {"
    },
    {
        "line": 34,
        "fullcodeline": "ctx->limit = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "if (strcasecmp(tenc, \"chunked\") == 0 /* fast path */"
    },
    {
        "line": 75,
        "fullcodeline": "if (apr_strtoff(&ctx->remaining, lenp, &endstr, 10)"
    },
    {
        "line": 88,
        "fullcodeline": "if (ctx->limit && ctx->limit < ctx->remaining) {"
    },
    {
        "line": 119,
        "fullcodeline": "&& f->r->expecting_100 && f->r->proto_num >= HTTP_VERSION(1,1)"
    },
    {
        "line": 121,
        "fullcodeline": "if (!ap_is_HTTP_SUCCESS(f->r->status)) {"
    },
    {
        "line": 175,
        "fullcodeline": "rv = ap_get_brigade(f->next, b, AP_MODE_GETLINE, block, 0);"
    },
    {
        "line": 192,
        "fullcodeline": "e = APR_BRIGADE_FIRST(b);"
    },
    {
        "line": 215,
        "fullcodeline": "again = 1; /* come around again */"
    },
    {
        "line": 306,
        "fullcodeline": "rv = ap_get_brigade(f->next, b, mode, block, readbytes);"
    },
    {
        "line": 42,
        "fullcodeline": "|| ap_find_last_token(f->r->pool, tenc, \"chunked\")) {"
    },
    {
        "line": 43,
        "fullcodeline": "ctx->state = BODY_CHUNK;"
    },
    {
        "line": 76,
        "fullcodeline": "|| endstr == lenp || *endstr || ctx->remaining < 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "ctx->remaining = 0;"
    },
    {
        "line": 122,
        "fullcodeline": "ctx->state = BODY_NONE;"
    },
    {
        "line": 123,
        "fullcodeline": "ctx->eos_sent = 1;"
    },
    {
        "line": 178,
        "fullcodeline": "if (block == APR_NONBLOCK_READ"
    },
    {
        "line": 184,
        "fullcodeline": "if (rv == APR_EOF) {"
    },
    {
        "line": 188,
        "fullcodeline": "if (rv != APR_SUCCESS) {"
    },
    {
        "line": 193,
        "fullcodeline": "while (e != APR_BRIGADE_SENTINEL(b)) {"
    },
    {
        "line": 217,
        "fullcodeline": "if (ctx->state == BODY_CHUNK_TRAILER) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (ctx->state != BODY_NONE && ctx->remaining < readbytes) {"
    },
    {
        "line": 233,
        "fullcodeline": "if (readbytes > 0) {"
    },
    {
        "line": 281,
        "fullcodeline": "if (ctx->state == BODY_LENGTH && ctx->remaining == 0) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (block == APR_NONBLOCK_READ"
    },
    {
        "line": 315,
        "fullcodeline": "if (rv != APR_SUCCESS) {"
    },
    {
        "line": 118,
        "fullcodeline": "|| (ctx->state == BODY_LENGTH && ctx->remaining > 0))"
    },
    {
        "line": 130,
        "fullcodeline": "bb = apr_brigade_create(f->r->pool, f->c->bucket_alloc);"
    },
    {
        "line": 135,
        "fullcodeline": "f->r->expecting_100 = 0;"
    },
    {
        "line": 138,
        "fullcodeline": "len = strlen(tmp);"
    },
    {
        "line": 139,
        "fullcodeline": "ap_xlate_proto_to_ascii(tmp, len);"
    },
    {
        "line": 140,
        "fullcodeline": "e = apr_bucket_pool_create(tmp, len, f->r->pool,"
    },
    {
        "line": 142,
        "fullcodeline": "APR_BRIGADE_INSERT_HEAD(bb, e);"
    },
    {
        "line": 143,
        "fullcodeline": "e = apr_bucket_flush_create(f->c->bucket_alloc);"
    },
    {
        "line": 144,
        "fullcodeline": "APR_BRIGADE_INSERT_TAIL(bb, e);"
    },
    {
        "line": 146,
        "fullcodeline": "rv = ap_pass_brigade(f->c->output_filters, bb);"
    },
    {
        "line": 147,
        "fullcodeline": "apr_brigade_cleanup(bb);"
    },
    {
        "line": 179,
        "fullcodeline": "&& ((rv == APR_SUCCESS && APR_BRIGADE_EMPTY(b))"
    },
    {
        "line": 212,
        "fullcodeline": "apr_bucket_delete(e);"
    },
    {
        "line": 213,
        "fullcodeline": "e = APR_BRIGADE_FIRST(b);"
    },
    {
        "line": 231,
        "fullcodeline": "readbytes = ctx->remaining;"
    },
    {
        "line": 235,
        "fullcodeline": "rv = ap_get_brigade(f->next, b, mode, block, readbytes);"
    },
    {
        "line": 254,
        "fullcodeline": "apr_brigade_length(b, 0, &totalread);"
    },
    {
        "line": 258,
        "fullcodeline": "AP_DEBUG_ASSERT(totalread >= 0);"
    },
    {
        "line": 282,
        "fullcodeline": "e = apr_bucket_eos_create(f->c->bucket_alloc);"
    },
    {
        "line": 283,
        "fullcodeline": "APR_BRIGADE_INSERT_TAIL(b, e);"
    },
    {
        "line": 284,
        "fullcodeline": "ctx->eos_sent = 1;"
    },
    {
        "line": 292,
        "fullcodeline": "ctx->limit_used += totalread;"
    },
    {
        "line": 310,
        "fullcodeline": "&& ((rv == APR_SUCCESS && APR_BRIGADE_EMPTY(b))"
    },
    {
        "line": 45,
        "fullcodeline": "else if (f->r->proxyreq == PROXYREQ_RESPONSE) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (rv != APR_SUCCESS) {"
    },
    {
        "line": 180,
        "fullcodeline": "|| (APR_STATUS_IS_EAGAIN(rv)))) {"
    },
    {
        "line": 197,
        "fullcodeline": "if (!APR_BUCKET_IS_METADATA(e)) {"
    },
    {
        "line": 219,
        "fullcodeline": "return read_chunked_trailers(ctx, f, b,"
    },
    {
        "line": 238,
        "fullcodeline": "if (block == APR_NONBLOCK_READ"
    },
    {
        "line": 244,
        "fullcodeline": "if (rv == APR_EOF && ctx->state != BODY_NONE"
    },
    {
        "line": 249,
        "fullcodeline": "if (rv != APR_SUCCESS) {"
    },
    {
        "line": 260,
        "fullcodeline": "if (ctx->state != BODY_NONE) {"
    },
    {
        "line": 293,
        "fullcodeline": "if (ctx->limit < ctx->limit_used) {"
    },
    {
        "line": 311,
        "fullcodeline": "|| (APR_STATUS_IS_EAGAIN(rv)))) {"
    },
    {
        "line": 55,
        "fullcodeline": "tenc = NULL;"
    },
    {
        "line": 198,
        "fullcodeline": "rv = apr_bucket_read(e, &buffer, &len, APR_BLOCK_READ);"
    },
    {
        "line": 220,
        "fullcodeline": "conf->merge_trailers == AP_MERGE_TRAILERS_ENABLE);"
    },
    {
        "line": 239,
        "fullcodeline": "&& ((rv == APR_SUCCESS && APR_BRIGADE_EMPTY(b))"
    },
    {
        "line": 245,
        "fullcodeline": "&& ctx->remaining > 0) {"
    },
    {
        "line": 261,
        "fullcodeline": "ctx->remaining -= totalread;"
    },
    {
        "line": 200,
        "fullcodeline": "if (rv == APR_SUCCESS) {"
    },
    {
        "line": 204,
        "fullcodeline": "if (rv != APR_SUCCESS) {"
    },
    {
        "line": 240,
        "fullcodeline": "|| (APR_STATUS_IS_EAGAIN(rv)))) {"
    },
    {
        "line": 262,
        "fullcodeline": "if (ctx->remaining > 0) {"
    },
    {
        "line": 201,
        "fullcodeline": "rv = parse_chunk_size(ctx, buffer, len,"
    },
    {
        "line": 263,
        "fullcodeline": "e = APR_BRIGADE_LAST(b);"
    },
    {
        "line": 264,
        "fullcodeline": "if (APR_BUCKET_IS_EOS(e)) {"
    },
    {
        "line": 265,
        "fullcodeline": "apr_bucket_delete(e);"
    },
    {
        "line": 269,
        "fullcodeline": "else if (ctx->state == BODY_CHUNK_DATA) {"
    },
    {
        "line": 271,
        "fullcodeline": "ctx->state = BODY_CHUNK_END;"
    },
    {
        "line": 272,
        "fullcodeline": "ctx->chunk_used = 0;"
    }
]