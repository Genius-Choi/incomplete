[
    {
        "line": 3,
        "fullcodeline": "raw_name = name.replace(\"archivy_\", \"\").replace(\"archivy-\", \"\")"
    },
    {
        "line": 5,
        "fullcodeline": "os.makedirs(f\"{name}/{name}\")"
    },
    {
        "line": 8,
        "fullcodeline": "with open(f\"{name}/requirements.txt\", \"w\") as fp:"
    },
    {
        "line": 12,
        "fullcodeline": "with open(f\"{name}/README.md\", \"w+\") as fp:"
    },
    {
        "line": 24,
        "fullcodeline": "with open(f\"{name}/setup.py\", \"w\") as setup_f:"
    },
    {
        "line": 50,
        "fullcodeline": "with open(f\"{name}/{name}/__init__.py\", \"w\") as fp:"
    },
    {
        "line": 9,
        "fullcodeline": "fp.writelines([\"archivy\", \"\\nclick\"])"
    },
    {
        "line": 13,
        "fullcodeline": "fp.writelines("
    },
    {
        "line": 25,
        "fullcodeline": "setup_f.writelines("
    },
    {
        "line": 51,
        "fullcodeline": "fp.writelines("
    },
    {
        "line": 14,
        "fullcodeline": "["
    },
    {
        "line": 26,
        "fullcodeline": "["
    },
    {
        "line": 52,
        "fullcodeline": "["
    },
    {
        "line": 15,
        "fullcodeline": "f\"# {name}\","
    },
    {
        "line": 18,
        "fullcodeline": "f\"\\n\\nRun `pip install archivy_{name}`\","
    },
    {
        "line": 33,
        "fullcodeline": "\"\\n\\n#Fill in the details below for distribution purposes\""
    },
    {
        "line": 41,
        "fullcodeline": "'\\n\\tclassifiers=[\"Programming Language :: Python :: 3\"],'"
    },
    {
        "line": 44,
        "fullcodeline": "f'\\n\\tentry_points=\"\"\"\\n\\t\\t[archivy.plugins]'"
    },
    {
        "line": 57,
        "fullcodeline": "f\"\\ndef {raw_name}():\","
    },
    {
        "line": 59,
        "fullcodeline": "f\"\\n\\n@{raw_name}.command()\","
    },
    {
        "line": 62,
        "fullcodeline": "f\"\\n\\n@{raw_name}.command()\","
    },
    {
        "line": 34,
        "fullcodeline": "f'\\nsetup(\\n\\tname=\"{name}\",',"
    },
    {
        "line": 45,
        "fullcodeline": "f'\\n\\t\\t{raw_name}={name}:{raw_name}\"\"\"\\n)',"
    }
]