[
    {
        "line": 4,
        "fullcodeline": "struct expander_device *ex_dev = &parent->ex_dev;"
    },
    {
        "line": 5,
        "fullcodeline": "struct ex_phy *phy = &ex_dev->ex_phy[phy_id];"
    },
    {
        "line": 6,
        "fullcodeline": "struct domain_device *child, *n, *found = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "memset(phy->attached_sas_addr, 0, SAS_ADDR_SIZE);"
    },
    {
        "line": 8,
        "fullcodeline": "list_for_each_entry_safe(child, n,"
    },
    {
        "line": 22,
        "fullcodeline": "sas_disable_routing(parent, phy->attached_sas_addr);"
    },
    {
        "line": 26,
        "fullcodeline": "sas_port_delete_phy(phy->port, phy->phy);"
    },
    {
        "line": 27,
        "fullcodeline": "sas_device_set_phy(found, phy->port);"
    },
    {
        "line": 31,
        "fullcodeline": "phy->port = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "if (phy->port->num_phys == 0)"
    },
    {
        "line": 10,
        "fullcodeline": "if (SAS_ADDR(child->sas_addr) =="
    },
    {
        "line": 29,
        "fullcodeline": "list_add_tail(&phy->port->del_list,"
    },
    {
        "line": 11,
        "fullcodeline": "SAS_ADDR(phy->attached_sas_addr)) {"
    },
    {
        "line": 12,
        "fullcodeline": "set_bit(SAS_DEV_GONE, &child->state);"
    },
    {
        "line": 13,
        "fullcodeline": "if (child->dev_type == SAS_EDGE_EXPANDER_DEVICE ||"
    },
    {
        "line": 14,
        "fullcodeline": "child->dev_type == SAS_FANOUT_EXPANDER_DEVICE)"
    },
    {
        "line": 15,
        "fullcodeline": "sas_unregister_ex_tree(parent->port, child);"
    },
    {
        "line": 17,
        "fullcodeline": "sas_unregister_dev(parent->port, child);"
    }
]