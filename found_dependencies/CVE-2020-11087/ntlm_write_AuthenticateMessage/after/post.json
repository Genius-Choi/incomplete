[
    {
        "line": 7,
        "fullcodeline": "SSPI_CREDENTIALS* credentials = context->credentials;"
    },
    {
        "line": 8,
        "fullcodeline": "message = &context->AUTHENTICATE_MESSAGE;"
    },
    {
        "line": 9,
        "fullcodeline": "ZeroMemory(message, sizeof(NTLM_AUTHENTICATE_MESSAGE));"
    },
    {
        "line": 10,
        "fullcodeline": "s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);"
    },
    {
        "line": 35,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_128;"
    },
    {
        "line": 36,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_EXTENDED_SESSION_SECURITY;"
    },
    {
        "line": 37,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_ALWAYS_SIGN;"
    },
    {
        "line": 38,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_NTLM;"
    },
    {
        "line": 39,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_SIGN;"
    },
    {
        "line": 40,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_REQUEST_TARGET;"
    },
    {
        "line": 41,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_UNICODE;"
    },
    {
        "line": 59,
        "fullcodeline": "message->UserName.Len = (UINT16)credentials->identity.UserLength * 2;"
    },
    {
        "line": 72,
        "fullcodeline": "PayloadBufferOffset = 64;"
    },
    {
        "line": 80,
        "fullcodeline": "message->DomainName.BufferOffset = PayloadBufferOffset;"
    },
    {
        "line": 81,
        "fullcodeline": "message->UserName.BufferOffset = message->DomainName.BufferOffset + message->DomainName.Len;"
    },
    {
        "line": 82,
        "fullcodeline": "message->Workstation.BufferOffset = message->UserName.BufferOffset + message->UserName.Len;"
    },
    {
        "line": 83,
        "fullcodeline": "message->LmChallengeResponse.BufferOffset ="
    },
    {
        "line": 85,
        "fullcodeline": "message->NtChallengeResponse.BufferOffset ="
    },
    {
        "line": 87,
        "fullcodeline": "message->EncryptedRandomSessionKey.BufferOffset ="
    },
    {
        "line": 89,
        "fullcodeline": "ntlm_populate_message_header((NTLM_MESSAGE_HEADER*)message, MESSAGE_TYPE_AUTHENTICATE);"
    },
    {
        "line": 90,
        "fullcodeline": "ntlm_write_message_header(s, (NTLM_MESSAGE_HEADER*)message); /* Message Header (12 bytes) */"
    },
    {
        "line": 91,
        "fullcodeline": "ntlm_write_message_fields("
    },
    {
        "line": 93,
        "fullcodeline": "ntlm_write_message_fields("
    },
    {
        "line": 95,
        "fullcodeline": "ntlm_write_message_fields(s, &(message->DomainName));  /* DomainNameFields (8 bytes) */"
    },
    {
        "line": 96,
        "fullcodeline": "ntlm_write_message_fields(s, &(message->UserName));    /* UserNameFields (8 bytes) */"
    },
    {
        "line": 97,
        "fullcodeline": "ntlm_write_message_fields(s, &(message->Workstation)); /* WorkstationFields (8 bytes) */"
    },
    {
        "line": 98,
        "fullcodeline": "ntlm_write_message_fields("
    },
    {
        "line": 100,
        "fullcodeline": "Stream_Write_UINT32(s, message->NegotiateFlags); /* NegotiateFlags (4 bytes) */"
    },
    {
        "line": 114,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->UserName)); /* UserName */"
    },
    {
        "line": 119,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->LmChallengeResponse)); /* LmChallengeResponse */"
    },
    {
        "line": 120,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->NtChallengeResponse)); /* NtChallengeResponse */"
    },
    {
        "line": 126,
        "fullcodeline": "length = Stream_GetPosition(s);"
    },
    {
        "line": 134,
        "fullcodeline": "CopyMemory(context->AuthenticateMessage.pvBuffer, Stream_Buffer(s), length);"
    },
    {
        "line": 135,
        "fullcodeline": "buffer->cbBuffer = length;"
    },
    {
        "line": 176,
        "fullcodeline": "context->state = NTLM_STATE_FINAL;"
    },
    {
        "line": 177,
        "fullcodeline": "Stream_Free(s, FALSE);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 32,
        "fullcodeline": "if (context->CHALLENGE_MESSAGE.NegotiateFlags & NTLMSSP_NEGOTIATE_KEY_EXCH)"
    },
    {
        "line": 43,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 46,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED)"
    },
    {
        "line": 52,
        "fullcodeline": "if (credentials->identity.DomainLength > 0)"
    },
    {
        "line": 66,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_KEY_EXCH)"
    },
    {
        "line": 74,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 84,
        "fullcodeline": "message->Workstation.BufferOffset + message->Workstation.Len;"
    },
    {
        "line": 86,
        "fullcodeline": "message->LmChallengeResponse.BufferOffset + message->LmChallengeResponse.Len;"
    },
    {
        "line": 88,
        "fullcodeline": "message->NtChallengeResponse.BufferOffset + message->NtChallengeResponse.Len;"
    },
    {
        "line": 102,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 111,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_DOMAIN_SUPPLIED)"
    },
    {
        "line": 116,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED)"
    },
    {
        "line": 122,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_KEY_EXCH)"
    },
    {
        "line": 128,
        "fullcodeline": "if (!sspi_SecBufferAlloc(&context->AuthenticateMessage, length))"
    },
    {
        "line": 17,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_56;"
    },
    {
        "line": 24,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_TARGET_INFO;"
    },
    {
        "line": 27,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED;"
    },
    {
        "line": 30,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_SEAL;"
    },
    {
        "line": 33,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_KEY_EXCH;"
    },
    {
        "line": 44,
        "fullcodeline": "ntlm_get_version_info(&(message->Version));"
    },
    {
        "line": 54,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_DOMAIN_SUPPLIED;"
    },
    {
        "line": 55,
        "fullcodeline": "message->DomainName.Len = (UINT16)credentials->identity.DomainLength * 2;"
    },
    {
        "line": 68,
        "fullcodeline": "message->EncryptedRandomSessionKey.Len = 16;"
    },
    {
        "line": 69,
        "fullcodeline": "message->EncryptedRandomSessionKey.Buffer = context->EncryptedRandomSessionKey;"
    },
    {
        "line": 75,
        "fullcodeline": "PayloadBufferOffset += 8; /* Version (8 bytes) */"
    },
    {
        "line": 78,
        "fullcodeline": "PayloadBufferOffset += 16; /* Message Integrity Check (16 bytes) */"
    },
    {
        "line": 103,
        "fullcodeline": "ntlm_write_version_info(s, &(message->Version)); /* Version (8 bytes) */"
    },
    {
        "line": 107,
        "fullcodeline": "context->MessageIntegrityCheckOffset = (UINT32)Stream_GetPosition(s);"
    },
    {
        "line": 108,
        "fullcodeline": "Stream_Zero(s, 16); /* Message Integrity Check (16 bytes) */"
    },
    {
        "line": 112,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->DomainName)); /* DomainName */"
    },
    {
        "line": 117,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->Workstation)); /* Workstation */"
    },
    {
        "line": 123,
        "fullcodeline": "ntlm_write_message_fields_buffer("
    },
    {
        "line": 130,
        "fullcodeline": "Stream_Free(s, FALSE);"
    },
    {
        "line": 140,
        "fullcodeline": "ntlm_compute_message_integrity_check(context, message->MessageIntegrityCheck, 16);"
    },
    {
        "line": 141,
        "fullcodeline": "Stream_SetPosition(s, context->MessageIntegrityCheckOffset);"
    },
    {
        "line": 142,
        "fullcodeline": "Stream_Write(s, message->MessageIntegrityCheck, 16);"
    },
    {
        "line": 143,
        "fullcodeline": "Stream_SetPosition(s, length);"
    },
    {
        "line": 20,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_VERSION;"
    }
]