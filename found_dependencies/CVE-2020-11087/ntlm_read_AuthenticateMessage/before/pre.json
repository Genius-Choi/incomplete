[
    {
        "line": 9,
        "fullcodeline": "SSPI_CREDENTIALS* credentials = context->credentials;"
    },
    {
        "line": 10,
        "fullcodeline": "flags = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "AvFlags = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "message = &context->AUTHENTICATE_MESSAGE;"
    },
    {
        "line": 13,
        "fullcodeline": "ZeroMemory(message, sizeof(NTLM_AUTHENTICATE_MESSAGE));"
    },
    {
        "line": 14,
        "fullcodeline": "s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);"
    },
    {
        "line": 70,
        "fullcodeline": "Stream_Read_UINT32(s, message->NegotiateFlags); /* NegotiateFlags (4 bytes) */"
    },
    {
        "line": 71,
        "fullcodeline": "context->NegotiateKeyExchange ="
    },
    {
        "line": 90,
        "fullcodeline": "PayloadBufferOffset = Stream_GetPosition(s);"
    },
    {
        "line": 177,
        "fullcodeline": "length = Stream_GetPosition(s);"
    },
    {
        "line": 185,
        "fullcodeline": "CopyMemory(context->AuthenticateMessage.pvBuffer, Stream_Buffer(s), length);"
    },
    {
        "line": 187,
        "fullcodeline": "Stream_SetPosition(s, PayloadBufferOffset);"
    },
    {
        "line": 259,
        "fullcodeline": "context->state = NTLM_STATE_COMPLETION;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 25,
        "fullcodeline": "if (message->MessageType != MESSAGE_TYPE_AUTHENTICATE)"
    },
    {
        "line": 72,
        "fullcodeline": "(message->NegotiateFlags & NTLMSSP_NEGOTIATE_KEY_EXCH) ? TRUE : FALSE;"
    },
    {
        "line": 81,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 124,
        "fullcodeline": "if (message->NtChallengeResponse.Len > 0)"
    },
    {
        "line": 165,
        "fullcodeline": "if (message->EncryptedRandomSessionKey.Len > 0)"
    },
    {
        "line": 189,
        "fullcodeline": "if (flags & MSV_AV_FLAGS_MESSAGE_INTEGRITY_CHECK)"
    },
    {
        "line": 228,
        "fullcodeline": "if (message->UserName.Len > 0)"
    },
    {
        "line": 242,
        "fullcodeline": "if (message->DomainName.Len > 0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)"
    },
    {
        "line": 31,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->LmChallengeResponse)) <"
    },
    {
        "line": 38,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->NtChallengeResponse)) <"
    },
    {
        "line": 45,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->DomainName)) < 0) /* DomainNameFields (8 bytes) */"
    },
    {
        "line": 51,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->UserName)) < 0) /* UserNameFields (8 bytes) */"
    },
    {
        "line": 57,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->Workstation)) < 0) /* WorkstationFields (8 bytes) */"
    },
    {
        "line": 63,
        "fullcodeline": "if (ntlm_read_message_fields(s, &(message->EncryptedRandomSessionKey)) <"
    },
    {
        "line": 74,
        "fullcodeline": "if ((context->NegotiateKeyExchange && !message->EncryptedRandomSessionKey.Len) ||"
    },
    {
        "line": 75,
        "fullcodeline": "(!context->NegotiateKeyExchange && message->EncryptedRandomSessionKey.Len))"
    },
    {
        "line": 92,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->DomainName)) < 0) /* DomainName */"
    },
    {
        "line": 98,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->UserName)) < 0) /* UserName */"
    },
    {
        "line": 104,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->Workstation)) < 0) /* Workstation */"
    },
    {
        "line": 110,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->LmChallengeResponse)) <"
    },
    {
        "line": 117,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->NtChallengeResponse)) <"
    },
    {
        "line": 127,
        "fullcodeline": "wStream* snt ="
    },
    {
        "line": 143,
        "fullcodeline": "Stream_Free(snt, FALSE);"
    },
    {
        "line": 150,
        "fullcodeline": "AvFlags ="
    },
    {
        "line": 158,
        "fullcodeline": "if (ntlm_read_message_fields_buffer(s, &(message->EncryptedRandomSessionKey)) <"
    },
    {
        "line": 179,
        "fullcodeline": "if (!sspi_SecBufferAlloc(&context->AuthenticateMessage, length))"
    },
    {
        "line": 199,
        "fullcodeline": "Stream_Read(s, message->MessageIntegrityCheck, 16);"
    },
    {
        "line": 230,
        "fullcodeline": "credentials->identity.User = (UINT16*)malloc(message->UserName.Len);"
    },
    {
        "line": 238,
        "fullcodeline": "CopyMemory(credentials->identity.User, message->UserName.Buffer, message->UserName.Len);"
    },
    {
        "line": 244,
        "fullcodeline": "credentials->identity.Domain = (UINT16*)malloc(message->DomainName.Len);"
    },
    {
        "line": 252,
        "fullcodeline": "CopyMemory(credentials->identity.Domain, message->DomainName.Buffer,"
    },
    {
        "line": 128,
        "fullcodeline": "Stream_New(message->NtChallengeResponse.Buffer, message->NtChallengeResponse.Len);"
    },
    {
        "line": 130,
        "fullcodeline": "if (!snt)"
    },
    {
        "line": 148,
        "fullcodeline": "context->ChallengeTargetInfo.cbBuffer = message->NtChallengeResponse.Len - (28 + 16);"
    },
    {
        "line": 151,
        "fullcodeline": "ntlm_av_pair_get(context->NTLMv2Response.Challenge.AvPairs,"
    },
    {
        "line": 232,
        "fullcodeline": "if (!credentials->identity.User)"
    },
    {
        "line": 239,
        "fullcodeline": "credentials->identity.UserLength = message->UserName.Len / 2;"
    },
    {
        "line": 246,
        "fullcodeline": "if (!credentials->identity.Domain)"
    },
    {
        "line": 254,
        "fullcodeline": "credentials->identity.DomainLength = message->DomainName.Len / 2;"
    },
    {
        "line": 83,
        "fullcodeline": "if (ntlm_read_version_info(s, &(message->Version)) < 0) /* Version (8 bytes) */"
    },
    {
        "line": 136,
        "fullcodeline": "if (ntlm_read_ntlm_v2_response(snt, &(context->NTLMv2Response)) < 0)"
    },
    {
        "line": 138,
        "fullcodeline": "Stream_Free(s, FALSE);"
    },
    {
        "line": 155,
        "fullcodeline": "Data_Read_UINT32(ntlm_av_pair_get_value_pointer(AvFlags), flags);"
    },
    {
        "line": 191,
        "fullcodeline": "context->MessageIntegrityCheckOffset = (UINT32)Stream_GetPosition(s);"
    },
    {
        "line": 193,
        "fullcodeline": "if (Stream_GetRemainingLength(s) < 16)"
    }
]