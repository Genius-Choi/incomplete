[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 12,
        "fullcodeline": "vcc = ATM_SD(sock);"
    },
    {
        "line": 103,
        "fullcodeline": "error = -ENOIOCTLCMD;"
    },
    {
        "line": 105,
        "fullcodeline": "mutex_lock(&ioctl_mutex);"
    },
    {
        "line": 106,
        "fullcodeline": "list_for_each(pos, &ioctl_list) {"
    },
    {
        "line": 115,
        "fullcodeline": "mutex_unlock(&ioctl_mutex);"
    },
    {
        "line": 117,
        "fullcodeline": "if (error != -ENOIOCTLCMD)"
    },
    {
        "line": 120,
        "fullcodeline": "if (cmd == ATM_GETNAMES) {"
    },
    {
        "line": 40,
        "fullcodeline": "net_warn_ratelimited(\"ATM_SETSC is obsolete; used by %s:%d\\n\","
    },
    {
        "line": 42,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "error = sigd_attach(vcc);"
    },
    {
        "line": 93,
        "fullcodeline": "request_module(\"mpoa\");"
    },
    {
        "line": 96,
        "fullcodeline": "request_module(\"clip\");"
    },
    {
        "line": 99,
        "fullcodeline": "request_module(\"lec\");"
    },
    {
        "line": 136,
        "fullcodeline": "error = atm_getnames(buf, len);"
    },
    {
        "line": 15,
        "fullcodeline": "if (sock->state != SS_CONNECTED ||"
    },
    {
        "line": 33,
        "fullcodeline": "skb = skb_peek(&sk->sk_receive_queue);"
    },
    {
        "line": 34,
        "fullcodeline": "amount = skb ? skb->len : 0;"
    },
    {
        "line": 35,
        "fullcodeline": "spin_unlock_irq(&sk->sk_receive_queue.lock);"
    },
    {
        "line": 41,
        "fullcodeline": "current->comm, task_pid_nr(current));"
    },
    {
        "line": 45,
        "fullcodeline": "if (!capable(CAP_NET_ADMIN)) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (!capable(CAP_SYS_RAWIO)) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (!error)"
    },
    {
        "line": 109,
        "fullcodeline": "error = ic->ioctl(sock, cmd, arg);"
    },
    {
        "line": 110,
        "fullcodeline": "module_put(ic->owner);"
    },
    {
        "line": 121,
        "fullcodeline": "if (IS_ENABLED(CONFIG_COMPAT) && compat) {"
    },
    {
        "line": 161,
        "fullcodeline": "error = atm_dev_ioctl(cmd, buf, len, number, compat);"
    },
    {
        "line": 16,
        "fullcodeline": "!test_bit(ATM_VF_READY, &vcc->flags)) {"
    },
    {
        "line": 17,
        "fullcodeline": "error =  -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "if (sock->state != SS_CONNECTED) {"
    },
    {
        "line": 46,
        "fullcodeline": "error = -EPERM;"
    },
    {
        "line": 57,
        "fullcodeline": "error = -EPERM;"
    },
    {
        "line": 72,
        "fullcodeline": "sock->state = SS_CONNECTED;"
    },
    {
        "line": 111,
        "fullcodeline": "if (error != -ENOIOCTLCMD)"
    },
    {
        "line": 140,
        "fullcodeline": "if (IS_ENABLED(CONFIG_COMPAT) && compat) {"
    },
    {
        "line": 29,
        "fullcodeline": "error = -EINVAL;"
    },
    {
        "line": 83,
        "fullcodeline": "request_module(\"pppoatm\");"
    },
    {
        "line": 86,
        "fullcodeline": "request_module(\"br2684\");"
    },
    {
        "line": 131,
        "fullcodeline": "struct atm_iobuf __user *iobuf = argp;"
    },
    {
        "line": 133,
        "fullcodeline": "if (get_user(buf, &iobuf->buffer))"
    },
    {
        "line": 153,
        "fullcodeline": "struct atmif_sioc __user *sioc = argp;"
    },
    {
        "line": 156,
        "fullcodeline": "if (get_user(buf, &sioc->arg))"
    },
    {
        "line": 158,
        "fullcodeline": "if (get_user(number, &sioc->number))"
    },
    {
        "line": 134,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 157,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 159,
        "fullcodeline": "return -EFAULT;"
    }
]