[
    {
        "line": 5,
        "fullcodeline": "int max_index = -1;"
    },
    {
        "line": 6,
        "fullcodeline": "const int segment_id_size = segment_ids->dims->data[0];"
    },
    {
        "line": 10,
        "fullcodeline": "const int data_rank = NumDimensions(data);"
    },
    {
        "line": 11,
        "fullcodeline": "TfLiteIntArray* output_shape = TfLiteIntArrayCreate(NumDimensions(data));"
    },
    {
        "line": 12,
        "fullcodeline": "output_shape->data[0] = max_index + 1;"
    },
    {
        "line": 7,
        "fullcodeline": "if (segment_id_size > 0) {"
    },
    {
        "line": 13,
        "fullcodeline": "for (int i = 1; i < data_rank; ++i) {"
    },
    {
        "line": 16,
        "fullcodeline": "return context->ResizeTensor(context, output, output_shape);"
    },
    {
        "line": 8,
        "fullcodeline": "max_index = segment_ids->data.i32[segment_id_size - 1];"
    },
    {
        "line": 14,
        "fullcodeline": "output_shape->data[i] = data->dims->data[i];"
    }
]