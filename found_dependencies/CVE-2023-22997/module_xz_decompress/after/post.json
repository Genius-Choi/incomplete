[
    {
        "line": 4,
        "fullcodeline": "static const u8 signature[] = { 0xfd, '7', 'z', 'X', 'Z', 0 };"
    },
    {
        "line": 8,
        "fullcodeline": "size_t new_size = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "xz_dec = xz_dec_init(XZ_DYNALLOC, (u32)-1);"
    },
    {
        "line": 21,
        "fullcodeline": "xz_buf.in_size = size;"
    },
    {
        "line": 22,
        "fullcodeline": "xz_buf.in = buf;"
    },
    {
        "line": 23,
        "fullcodeline": "xz_buf.in_pos = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "retval = new_size;"
    },
    {
        "line": 51,
        "fullcodeline": "xz_dec_end(xz_dec);"
    },
    {
        "line": 11,
        "fullcodeline": "if (size < sizeof(signature) ||"
    },
    {
        "line": 18,
        "fullcodeline": "if (!xz_dec)"
    },
    {
        "line": 40,
        "fullcodeline": "} while (xz_buf.out_pos == PAGE_SIZE && xz_ret == XZ_OK);"
    },
    {
        "line": 42,
        "fullcodeline": "if (xz_ret != XZ_STREAM_END) {"
    },
    {
        "line": 12,
        "fullcodeline": "memcmp(buf, signature, sizeof(signature))) {"
    },
    {
        "line": 13,
        "fullcodeline": "pr_err(\"not an xz compressed module\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "struct page *page = module_get_next_page(info);"
    },
    {
        "line": 33,
        "fullcodeline": "xz_buf.out = kmap_local_page(page);"
    },
    {
        "line": 34,
        "fullcodeline": "xz_buf.out_pos = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "xz_buf.out_size = PAGE_SIZE;"
    },
    {
        "line": 36,
        "fullcodeline": "xz_ret = xz_dec_run(xz_dec, &xz_buf);"
    },
    {
        "line": 37,
        "fullcodeline": "kunmap_local(xz_buf.out);"
    },
    {
        "line": 39,
        "fullcodeline": "new_size += xz_buf.out_pos;"
    },
    {
        "line": 43,
        "fullcodeline": "pr_err(\"decompression failed with status %d\\n\", xz_ret);"
    },
    {
        "line": 44,
        "fullcodeline": "retval = -EINVAL;"
    },
    {
        "line": 14,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 19,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 28,
        "fullcodeline": "if (IS_ERR(page)) {"
    },
    {
        "line": 29,
        "fullcodeline": "retval = PTR_ERR(page);"
    }
]