[
    {
        "line": 3,
        "fullcodeline": "struct yam_port *yp = netdev_priv(dev);"
    },
    {
        "line": 8,
        "fullcodeline": "if (copy_from_user(&ioctl_cmd, ifr->ifr_data, sizeof(int)))"
    },
    {
        "line": 11,
        "fullcodeline": "if (yp->magic != YAM_MAGIC)"
    },
    {
        "line": 14,
        "fullcodeline": "if (!capable(CAP_NET_ADMIN))"
    },
    {
        "line": 17,
        "fullcodeline": "if (cmd != SIOCDEVPRIVATE)"
    },
    {
        "line": 39,
        "fullcodeline": "add_mcs(ym->bits, ym->bitrate, 0);"
    },
    {
        "line": 40,
        "fullcodeline": "kfree(ym);"
    },
    {
        "line": 112,
        "fullcodeline": "yi.cfg.mask = 0xffffffff;"
    },
    {
        "line": 113,
        "fullcodeline": "yi.cfg.iobase = yp->iobase;"
    },
    {
        "line": 114,
        "fullcodeline": "yi.cfg.irq = yp->irq;"
    },
    {
        "line": 115,
        "fullcodeline": "yi.cfg.bitrate = yp->bitrate;"
    },
    {
        "line": 116,
        "fullcodeline": "yi.cfg.baudrate = yp->baudrate;"
    },
    {
        "line": 117,
        "fullcodeline": "yi.cfg.mode = yp->dupmode;"
    },
    {
        "line": 118,
        "fullcodeline": "yi.cfg.txdelay = yp->txd;"
    },
    {
        "line": 119,
        "fullcodeline": "yi.cfg.holddly = yp->holdd;"
    },
    {
        "line": 120,
        "fullcodeline": "yi.cfg.txtail = yp->txtail;"
    },
    {
        "line": 121,
        "fullcodeline": "yi.cfg.persist = yp->pers;"
    },
    {
        "line": 122,
        "fullcodeline": "yi.cfg.slottime = yp->slot;"
    },
    {
        "line": 9,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 12,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 15,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 18,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EINVAL;\t\t\t/* unused */"
    },
    {
        "line": 26,
        "fullcodeline": "if (netif_running(dev))"
    },
    {
        "line": 28,
        "fullcodeline": "if ((ym = kmalloc(sizeof(struct yamdrv_ioctl_mcs), GFP_KERNEL)) == NULL)"
    },
    {
        "line": 30,
        "fullcodeline": "if (copy_from_user(ym, ifr->ifr_data, sizeof(struct yamdrv_ioctl_mcs))) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (ym->bitrate > YAM_MAXBITRATE) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!capable(CAP_SYS_RAWIO))"
    },
    {
        "line": 46,
        "fullcodeline": "if (copy_from_user(&yi, ifr->ifr_data, sizeof(struct yamdrv_ioctl_cfg)))"
    },
    {
        "line": 49,
        "fullcodeline": "if ((yi.cfg.mask & YAM_IOBASE) && netif_running(dev))"
    },
    {
        "line": 51,
        "fullcodeline": "if ((yi.cfg.mask & YAM_IRQ) && netif_running(dev))"
    },
    {
        "line": 53,
        "fullcodeline": "if ((yi.cfg.mask & YAM_BITRATE) && netif_running(dev))"
    },
    {
        "line": 55,
        "fullcodeline": "if ((yi.cfg.mask & YAM_BAUDRATE) && netif_running(dev))"
    },
    {
        "line": 58,
        "fullcodeline": "if (yi.cfg.mask & YAM_IOBASE) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (yi.cfg.mask & YAM_IRQ) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (yi.cfg.mask & YAM_BITRATE) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (yi.cfg.mask & YAM_BAUDRATE) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (yi.cfg.mask & YAM_MODE) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (yi.cfg.mask & YAM_HOLDDLY) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (yi.cfg.mask & YAM_TXDELAY) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (yi.cfg.mask & YAM_TXTAIL) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (yi.cfg.mask & YAM_PERSIST) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (yi.cfg.mask & YAM_SLOTTIME) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (copy_to_user(ifr->ifr_data, &yi, sizeof(struct yamdrv_ioctl_cfg)))"
    },
    {
        "line": 128,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "kfree(ym);"
    },
    {
        "line": 35,
        "fullcodeline": "kfree(ym);"
    },
    {
        "line": 65,
        "fullcodeline": "yp->irq = yi.cfg.irq;"
    },
    {
        "line": 66,
        "fullcodeline": "dev->irq = yi.cfg.irq;"
    },
    {
        "line": 71,
        "fullcodeline": "yp->bitrate = yi.cfg.bitrate;"
    },
    {
        "line": 76,
        "fullcodeline": "yp->baudrate = yi.cfg.baudrate;"
    },
    {
        "line": 81,
        "fullcodeline": "yp->dupmode = yi.cfg.mode;"
    },
    {
        "line": 86,
        "fullcodeline": "yp->holdd = yi.cfg.holddly;"
    },
    {
        "line": 91,
        "fullcodeline": "yp->txd = yi.cfg.txdelay;"
    },
    {
        "line": 96,
        "fullcodeline": "yp->txtail = yi.cfg.txtail;"
    },
    {
        "line": 101,
        "fullcodeline": "yp->pers = yi.cfg.persist;"
    },
    {
        "line": 106,
        "fullcodeline": "yp->slot = yi.cfg.slottime;"
    },
    {
        "line": 107,
        "fullcodeline": "yp->slotcnt = yp->slot / 10;"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;\t\t/* Cannot change this parameter when up */"
    },
    {
        "line": 29,
        "fullcodeline": "return -ENOBUFS;"
    },
    {
        "line": 32,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 36,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 45,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 47,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 50,
        "fullcodeline": "return -EINVAL;\t\t/* Cannot change this parameter when up */"
    },
    {
        "line": 52,
        "fullcodeline": "return -EINVAL;\t\t/* Cannot change this parameter when up */"
    },
    {
        "line": 54,
        "fullcodeline": "return -EINVAL;\t\t/* Cannot change this parameter when up */"
    },
    {
        "line": 56,
        "fullcodeline": "return -EINVAL;\t\t/* Cannot change this parameter when up */"
    },
    {
        "line": 63,
        "fullcodeline": "if (yi.cfg.irq > 15)"
    },
    {
        "line": 69,
        "fullcodeline": "if (yi.cfg.bitrate > YAM_MAXBITRATE)"
    },
    {
        "line": 74,
        "fullcodeline": "if (yi.cfg.baudrate > YAM_MAXBAUDRATE)"
    },
    {
        "line": 79,
        "fullcodeline": "if (yi.cfg.mode > YAM_MAXMODE)"
    },
    {
        "line": 84,
        "fullcodeline": "if (yi.cfg.holddly > YAM_MAXHOLDDLY)"
    },
    {
        "line": 89,
        "fullcodeline": "if (yi.cfg.txdelay > YAM_MAXTXDELAY)"
    },
    {
        "line": 94,
        "fullcodeline": "if (yi.cfg.txtail > YAM_MAXTXTAIL)"
    },
    {
        "line": 99,
        "fullcodeline": "if (yi.cfg.persist > YAM_MAXPERSIST)"
    },
    {
        "line": 104,
        "fullcodeline": "if (yi.cfg.slottime > YAM_MAXSLOTTIME)"
    },
    {
        "line": 124,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 64,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 70,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 75,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 80,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 85,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 90,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 95,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 100,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 105,
        "fullcodeline": "return -EINVAL;"
    }
]