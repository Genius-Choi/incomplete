[
    {
        "line": 13,
        "fullcodeline": "int size = 0, i, type = R_REG_TYPE_GPR;"
    },
    {
        "line": 14,
        "fullcodeline": "int bits = (core->anal->bits & R_SYS_BITS_64)? 64: 32;"
    },
    {
        "line": 15,
        "fullcodeline": "int use_colors = r_config_get_i (core->config, \"scr.color\");"
    },
    {
        "line": 8,
        "fullcodeline": "cmd_debug_reg (core, str);"
    },
    {
        "line": 9,
        "fullcodeline": "core->dbg->reg = reg;"
    },
    {
        "line": 23,
        "fullcodeline": "use_color = ConsP (creg)"
    },
    {
        "line": 54,
        "fullcodeline": "__tableRegList (core, core->anal->reg, str + 1);"
    },
    {
        "line": 266,
        "fullcodeline": "cmd_reg_profile (core, 'a', str);"
    },
    {
        "line": 278,
        "fullcodeline": "name = r_reg_get_name (core->dbg->reg, r_reg_get_name_idx (str + 2));"
    },
    {
        "line": 286,
        "fullcodeline": "r_debug_reg_list (core->dbg, R_REG_TYPE_GPR, bits, NULL, 3, use_color); // XXX detect which one is current usage"
    },
    {
        "line": 289,
        "fullcodeline": "r_reg_arena_swap (core->dbg->reg, false);"
    },
    {
        "line": 290,
        "fullcodeline": "r_debug_reg_list (core->dbg, R_REG_TYPE_GPR, bits, NULL, 0, use_color); // XXX detect which one is current usage"
    },
    {
        "line": 291,
        "fullcodeline": "r_reg_arena_swap (core->dbg->reg, false);"
    },
    {
        "line": 342,
        "fullcodeline": "__anal_reg_list (core, type, size, str[0]);"
    },
    {
        "line": 26,
        "fullcodeline": "use_color = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "const bool use_json = str[1] == 'j';"
    },
    {
        "line": 32,
        "fullcodeline": "RRegSet *rs = r_reg_regset_get (core->anal->reg, R_REG_TYPE_GPR);"
    },
    {
        "line": 61,
        "fullcodeline": "int nargs = 4;"
    },
    {
        "line": 151,
        "fullcodeline": "ut8 *buf = r_reg_get_bytes (core->anal->reg, R_REG_TYPE_GPR, &sz);"
    },
    {
        "line": 152,
        "fullcodeline": "r_cons_printf (\"%d\\n\", sz);"
    },
    {
        "line": 153,
        "fullcodeline": "free (buf);"
    },
    {
        "line": 156,
        "fullcodeline": "int len, type = R_REG_TYPE_GPR;"
    },
    {
        "line": 157,
        "fullcodeline": "arg = strchr (str, ' ');"
    },
    {
        "line": 168,
        "fullcodeline": "ut8 *buf = r_reg_get_bytes (core->dbg->reg, type, &len);"
    },
    {
        "line": 176,
        "fullcodeline": "if (str[1] == 'q') { // \"arcq\""
    },
    {
        "line": 185,
        "fullcodeline": "if (str[1] == 'c') { // \"arcc\""
    },
    {
        "line": 269,
        "fullcodeline": "for (i = 0; (name = r_reg_get_type (i)); i++) {"
    },
    {
        "line": 274,
        "fullcodeline": "if (*(str + 1) == '\\0') {"
    },
    {
        "line": 279,
        "fullcodeline": "if (name && *name) {"
    },
    {
        "line": 295,
        "fullcodeline": "char *p = NULL;"
    },
    {
        "line": 296,
        "fullcodeline": "char *bits = NULL;"
    },
    {
        "line": 327,
        "fullcodeline": "__anal_reg_list (core, type, size, str[0]);"
    },
    {
        "line": 331,
        "fullcodeline": "core->dbg->q_regs = NULL;"
    },
    {
        "line": 332,
        "fullcodeline": "free (p);"
    },
    {
        "line": 345,
        "fullcodeline": "arg = strchr (str + 1, '=');"
    },
    {
        "line": 375,
        "fullcodeline": "char name[32];"
    },
    {
        "line": 376,
        "fullcodeline": "int i = 1, j;"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = 0; i < nargs; i++) {"
    },
    {
        "line": 93,
        "fullcodeline": "r_reg_arena_set_bytes (core->anal->reg, str + 1);"
    },
    {
        "line": 96,
        "fullcodeline": "r_core_cmd_help (core, help_msg_arw);"
    },
    {
        "line": 103,
        "fullcodeline": "r_core_cmd_help (core, help_msg_ara);"
    },
    {
        "line": 106,
        "fullcodeline": "r_reg_arena_swap (core->anal->reg, false);"
    },
    {
        "line": 133,
        "fullcodeline": "ut64 off = r_reg_getv (core->anal->reg, str + 1);"
    },
    {
        "line": 142,
        "fullcodeline": "r_core_debug_rr (core, core->anal->reg, 'j');"
    },
    {
        "line": 145,
        "fullcodeline": "r_core_debug_rr (core, core->anal->reg, 0);"
    },
    {
        "line": 177,
        "fullcodeline": "RRegFlags *rf = r_reg_cond_retrieve (core->dbg->reg, NULL);"
    },
    {
        "line": 186,
        "fullcodeline": "char *s = r_reg_profile_to_cc (core->anal->reg);"
    },
    {
        "line": 240,
        "fullcodeline": "r_debug_reg_sync (core->dbg, R_REG_TYPE_GPR, true);"
    },
    {
        "line": 270,
        "fullcodeline": "r_cons_println (name);"
    },
    {
        "line": 275,
        "fullcodeline": "eprintf (\"Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n\");"
    },
    {
        "line": 280,
        "fullcodeline": "r_cons_println (name);"
    },
    {
        "line": 328,
        "fullcodeline": "if (!r_list_empty (core->dbg->q_regs)) {"
    },
    {
        "line": 34,
        "fullcodeline": "RRegItem *r;"
    },
    {
        "line": 36,
        "fullcodeline": "PJ *pj = pj_new ();"
    },
    {
        "line": 37,
        "fullcodeline": "pj_a (pj);"
    },
    {
        "line": 38,
        "fullcodeline": "r_list_foreach (rs->regs, iter, r) {"
    },
    {
        "line": 50,
        "fullcodeline": "pj_free (pj);"
    },
    {
        "line": 64,
        "fullcodeline": "const char *name = r_reg_get_name (reg, r_reg_get_name_idx (sdb_fmt (\"A%d\", i)));"
    },
    {
        "line": 65,
        "fullcodeline": "ut64 off = r_reg_getv (core->anal->reg, name);"
    },
    {
        "line": 89,
        "fullcodeline": "r_core_cmd_help (core, help_msg_arw);"
    },
    {
        "line": 136,
        "fullcodeline": "r_core_cmd_help (core, help_msg_ar);"
    },
    {
        "line": 159,
        "fullcodeline": "char *string = r_str_trim_dup (arg + 1);"
    },
    {
        "line": 170,
        "fullcodeline": "r_print_hexdump (core->print, 0LL, buf, len, 32, 4, 1);"
    },
    {
        "line": 171,
        "fullcodeline": "free (buf);"
    },
    {
        "line": 192,
        "fullcodeline": "RRegItem *r;"
    },
    {
        "line": 193,
        "fullcodeline": "const char *name = r_str_trim_head_ro (str + 1);"
    },
    {
        "line": 247,
        "fullcodeline": "const char *help_msg[] = {"
    },
    {
        "line": 253,
        "fullcodeline": "r_core_cmd_help (core, help_msg);"
    },
    {
        "line": 258,
        "fullcodeline": "int len = p? r_list_length (p): 0;"
    },
    {
        "line": 259,
        "fullcodeline": "r_cons_printf (\"%d\\n\", len);"
    },
    {
        "line": 282,
        "fullcodeline": "eprintf (\"Oops. try arn [PC|SP|BP|A0|A1|A2|A3|A4|R0|R1|ZF|SF|NF|OF]\\n\");"
    },
    {
        "line": 298,
        "fullcodeline": "p = strdup (str + 1);"
    },
    {
        "line": 312,
        "fullcodeline": "int len = bits ? strlen (bits) : 0;"
    },
    {
        "line": 329,
        "fullcodeline": "r_list_free (core->dbg->q_regs);"
    },
    {
        "line": 347,
        "fullcodeline": "*arg = 0;"
    },
    {
        "line": 348,
        "fullcodeline": "char *ostr = r_str_trim_dup (str + 1);"
    },
    {
        "line": 349,
        "fullcodeline": "char *regname = r_str_trim_nc (ostr);"
    },
    {
        "line": 350,
        "fullcodeline": "r = r_reg_get (core->dbg->reg, regname, -1);"
    },
    {
        "line": 372,
        "fullcodeline": "free (ostr);"
    },
    {
        "line": 118,
        "fullcodeline": "for (i = 0; i < R_REG_TYPE_LAST; i++) {"
    },
    {
        "line": 179,
        "fullcodeline": "r_cons_printf (\"s:%d z:%d c:%d o:%d p:%d\\n\","
    },
    {
        "line": 181,
        "fullcodeline": "free (rf);"
    },
    {
        "line": 188,
        "fullcodeline": "r_cons_printf (\"%s\\n\", s);"
    },
    {
        "line": 189,
        "fullcodeline": "free (s);"
    },
    {
        "line": 194,
        "fullcodeline": "if (*name && name[1]) {"
    },
    {
        "line": 299,
        "fullcodeline": "if (str[1] != ':') {"
    },
    {
        "line": 313,
        "fullcodeline": "if (str[len + 1] == ':') {"
    },
    {
        "line": 351,
        "fullcodeline": "if (!r) {"
    },
    {
        "line": 378,
        "fullcodeline": "if (str[i] == ',') {"
    },
    {
        "line": 46,
        "fullcodeline": "pj_end (pj);"
    },
    {
        "line": 47,
        "fullcodeline": "const char *s = pj_string (pj);"
    },
    {
        "line": 48,
        "fullcodeline": "r_cons_println (s);"
    },
    {
        "line": 70,
        "fullcodeline": "char *nl = strchr (s, '\\n');"
    },
    {
        "line": 75,
        "fullcodeline": "free (s);"
    },
    {
        "line": 120,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 121,
        "fullcodeline": "r_list_foreach (rs->pool, iter, a) {"
    },
    {
        "line": 161,
        "fullcodeline": "type = r_reg_type_by_name (string);"
    },
    {
        "line": 165,
        "fullcodeline": "free (string);"
    },
    {
        "line": 195,
        "fullcodeline": "r = r_reg_cond_get (core->dbg->reg, name);"
    },
    {
        "line": 301,
        "fullcodeline": "bits = strtok (p, \":\");"
    },
    {
        "line": 315,
        "fullcodeline": "char *regs = bits ? strtok (NULL, \":\") : strtok ((char *)str + 1, \":\");"
    },
    {
        "line": 316,
        "fullcodeline": "char *reg = strtok (regs, \" \");"
    },
    {
        "line": 317,
        "fullcodeline": "RList *q_regs = r_list_new ();"
    },
    {
        "line": 352,
        "fullcodeline": "int role = r_reg_get_name_idx (regname);"
    },
    {
        "line": 363,
        "fullcodeline": "r_reg_set_value (core->dbg->reg, r,"
    },
    {
        "line": 365,
        "fullcodeline": "r_debug_reg_sync (core->dbg, R_REG_TYPE_ALL, true);"
    },
    {
        "line": 368,
        "fullcodeline": "r_core_cmdf (core, \".dr*%d\", bits);"
    },
    {
        "line": 379,
        "fullcodeline": "i++;"
    },
    {
        "line": 40,
        "fullcodeline": "pj_s (pj, r->name);"
    },
    {
        "line": 122,
        "fullcodeline": "r_cons_printf (\"%s %p %d %d %s %d\\n\","
    },
    {
        "line": 125,
        "fullcodeline": "j++;"
    },
    {
        "line": 162,
        "fullcodeline": "if (type == -1 && string[0] != 'a') {"
    },
    {
        "line": 212,
        "fullcodeline": "RRegFlags *rf = r_reg_cond_retrieve (core->dbg->reg, NULL);"
    },
    {
        "line": 302,
        "fullcodeline": "if (r_str_isnumber (bits)) {"
    },
    {
        "line": 353,
        "fullcodeline": "if (role != -1) {"
    },
    {
        "line": 364,
        "fullcodeline": "r_num_math (core->num, arg + 1));"
    },
    {
        "line": 370,
        "fullcodeline": "eprintf (\"ar: Unknown register '%s'\\n\", regname);"
    },
    {
        "line": 393,
        "fullcodeline": "i = j;"
    },
    {
        "line": 42,
        "fullcodeline": "r_cons_println (r->name);"
    },
    {
        "line": 72,
        "fullcodeline": "*nl = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "r_cons_printf (\"%s\\n\", s);"
    },
    {
        "line": 123,
        "fullcodeline": "(a == rs->arena)? \"*\": \".\", a,"
    },
    {
        "line": 124,
        "fullcodeline": "i, j, r_reg_get_type (i), a->size);"
    },
    {
        "line": 163,
        "fullcodeline": "type = R_REG_TYPE_GPR;"
    },
    {
        "line": 197,
        "fullcodeline": "r_cons_println (r->name);"
    },
    {
        "line": 303,
        "fullcodeline": "st64 sz = r_num_math (core->num, bits);"
    },
    {
        "line": 323,
        "fullcodeline": "core->dbg->q_regs = q_regs;"
    },
    {
        "line": 354,
        "fullcodeline": "const char *alias = r_reg_get_name (core->dbg->reg, role);"
    },
    {
        "line": 381,
        "fullcodeline": "for (j = i; str[++j] && str[j] != ','; );"
    },
    {
        "line": 382,
        "fullcodeline": "if (j - i + 1 <= sizeof name) {"
    },
    {
        "line": 199,
        "fullcodeline": "int id = r_reg_cond_from_string (name);"
    },
    {
        "line": 200,
        "fullcodeline": "RRegFlags *rf = r_reg_cond_retrieve (core->dbg->reg, NULL);"
    },
    {
        "line": 214,
        "fullcodeline": "r_cons_printf (\"| s:%d z:%d c:%d o:%d p:%d\\n\","
    },
    {
        "line": 230,
        "fullcodeline": "free (rf);"
    },
    {
        "line": 304,
        "fullcodeline": "if (sz > 0) {"
    },
    {
        "line": 308,
        "fullcodeline": "r_core_cmd_help (core, help_msg_ar);"
    },
    {
        "line": 383,
        "fullcodeline": "r_str_ncpy (name, str + i, j - i + 1);"
    },
    {
        "line": 216,
        "fullcodeline": "if (*name == '=') {"
    },
    {
        "line": 305,
        "fullcodeline": "size = sz;"
    },
    {
        "line": 320,
        "fullcodeline": "r_list_append (q_regs, reg);"
    },
    {
        "line": 321,
        "fullcodeline": "reg = strtok (NULL, \" \");"
    },
    {
        "line": 356,
        "fullcodeline": "r = r_reg_get (core->dbg->reg, alias, -1);"
    },
    {
        "line": 384,
        "fullcodeline": "if (IS_DIGIT (name[0])) { // e.g. ar 32"
    },
    {
        "line": 202,
        "fullcodeline": "int o = r_reg_cond_bits (core->dbg->reg, id, rf);"
    },
    {
        "line": 203,
        "fullcodeline": "core->num->value = o;"
    },
    {
        "line": 205,
        "fullcodeline": "r_cons_printf (\"%d\\n\", o);"
    },
    {
        "line": 206,
        "fullcodeline": "free (rf);"
    },
    {
        "line": 222,
        "fullcodeline": "r_cons_newline ();"
    },
    {
        "line": 385,
        "fullcodeline": "__anal_reg_list (core, R_REG_TYPE_GPR, atoi (name), '\\0');"
    },
    {
        "line": 208,
        "fullcodeline": "eprintf (\"unknown conditional or flag register\\n\");"
    },
    {
        "line": 217,
        "fullcodeline": "for (i = 0; i < R_REG_COND_LAST; i++) {"
    },
    {
        "line": 218,
        "fullcodeline": "r_cons_printf (\"%s:%d \","
    },
    {
        "line": 224,
        "fullcodeline": "for (i = 0; i < R_REG_COND_LAST; i++) {"
    },
    {
        "line": 386,
        "fullcodeline": "} else if (showreg (core, name) > 0) { // e.g. ar rax"
    },
    {
        "line": 219,
        "fullcodeline": "r_reg_cond_to_string (i),"
    },
    {
        "line": 220,
        "fullcodeline": "r_reg_cond_bits (core->dbg->reg, i, rf));"
    },
    {
        "line": 225,
        "fullcodeline": "r_cons_printf (\"%d %s\\n\","
    },
    {
        "line": 226,
        "fullcodeline": "r_reg_cond_bits (core->dbg->reg, i, rf),"
    },
    {
        "line": 227,
        "fullcodeline": "r_reg_cond_to_string (i));"
    },
    {
        "line": 388,
        "fullcodeline": "type = r_reg_type_by_name (name);"
    },
    {
        "line": 390,
        "fullcodeline": "__anal_reg_list (core, type, -1, '\\0');"
    }
]