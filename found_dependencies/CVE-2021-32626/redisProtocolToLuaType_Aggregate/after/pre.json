[
    {
        "line": 2,
        "fullcodeline": "char *p = strchr(reply+1,'\\r');"
    },
    {
        "line": 4,
        "fullcodeline": "int j = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "string2ll(reply+1,p-reply-1,&mbulklen);"
    },
    {
        "line": 7,
        "fullcodeline": "if (server.lua_client->resp == 2 || atype == '*') {"
    },
    {
        "line": 8,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 13,
        "fullcodeline": "lua_newtable(lua);"
    },
    {
        "line": 9,
        "fullcodeline": "if (mbulklen == -1) {"
    },
    {
        "line": 14,
        "fullcodeline": "for (j = 0; j < mbulklen; j++) {"
    },
    {
        "line": 10,
        "fullcodeline": "lua_pushboolean(lua,0);"
    },
    {
        "line": 15,
        "fullcodeline": "lua_pushnumber(lua,j+1);"
    },
    {
        "line": 16,
        "fullcodeline": "p = redisProtocolToLuaType(lua,p);"
    },
    {
        "line": 17,
        "fullcodeline": "lua_settable(lua,-3);"
    },
    {
        "line": 24,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 25,
        "fullcodeline": "lua_newtable(lua);"
    },
    {
        "line": 26,
        "fullcodeline": "lua_pushstring(lua,atype == '%' ? \"map\" : \"set\");"
    },
    {
        "line": 27,
        "fullcodeline": "lua_newtable(lua);"
    },
    {
        "line": 28,
        "fullcodeline": "for (j = 0; j < mbulklen; j++) {"
    },
    {
        "line": 42,
        "fullcodeline": "lua_settable(lua,-3);"
    },
    {
        "line": 29,
        "fullcodeline": "p = redisProtocolToLuaType(lua,p);"
    },
    {
        "line": 40,
        "fullcodeline": "lua_settable(lua,-3);"
    },
    {
        "line": 31,
        "fullcodeline": "p = redisProtocolToLuaType(lua,p);"
    },
    {
        "line": 38,
        "fullcodeline": "lua_pushboolean(lua,1);"
    },
    {
        "line": 33,
        "fullcodeline": "if (!lua_checkstack(lua, 1)) {"
    }
]