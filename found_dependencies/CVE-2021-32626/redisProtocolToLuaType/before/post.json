[
    {
        "line": 2,
        "fullcodeline": "char *p = reply;"
    },
    {
        "line": 5,
        "fullcodeline": "case ':': p = redisProtocolToLuaType_Int(lua,reply); break;"
    },
    {
        "line": 6,
        "fullcodeline": "case '$': p = redisProtocolToLuaType_Bulk(lua,reply); break;"
    },
    {
        "line": 7,
        "fullcodeline": "case '+': p = redisProtocolToLuaType_Status(lua,reply); break;"
    },
    {
        "line": 8,
        "fullcodeline": "case '-': p = redisProtocolToLuaType_Error(lua,reply); break;"
    },
    {
        "line": 9,
        "fullcodeline": "case '*': p = redisProtocolToLuaType_Aggregate(lua,reply,*p); break;"
    },
    {
        "line": 10,
        "fullcodeline": "case '%': p = redisProtocolToLuaType_Aggregate(lua,reply,*p); break;"
    },
    {
        "line": 11,
        "fullcodeline": "case '~': p = redisProtocolToLuaType_Aggregate(lua,reply,*p); break;"
    },
    {
        "line": 12,
        "fullcodeline": "case '_': p = redisProtocolToLuaType_Null(lua,reply); break;"
    },
    {
        "line": 13,
        "fullcodeline": "case '#': p = redisProtocolToLuaType_Bool(lua,reply,p[1]); break;"
    },
    {
        "line": 14,
        "fullcodeline": "case ',': p = redisProtocolToLuaType_Double(lua,reply); break;"
    }
]