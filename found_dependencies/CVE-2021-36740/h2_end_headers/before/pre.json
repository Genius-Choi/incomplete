[
    {
        "line": 6,
        "fullcodeline": "ASSERT_RXTHR(h2);"
    },
    {
        "line": 7,
        "fullcodeline": "assert(r2->state == H2_S_OPEN);"
    },
    {
        "line": 8,
        "fullcodeline": "h2e = h2h_decode_fini(h2);"
    },
    {
        "line": 9,
        "fullcodeline": "h2->new_req = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "VSLb_ts_req(req, \"Req\", req->t_req);"
    },
    {
        "line": 23,
        "fullcodeline": "http_CollectHdrSep(req->http, H_Cookie, \"; \");\t// rfc7540,l,3114,3120"
    },
    {
        "line": 48,
        "fullcodeline": "req->req_step = R_STP_TRANSPORT;"
    },
    {
        "line": 49,
        "fullcodeline": "req->task->func = h2_do_req;"
    },
    {
        "line": 50,
        "fullcodeline": "req->task->priv = req;"
    },
    {
        "line": 10,
        "fullcodeline": "if (h2e != NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (req->req_body_status == NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (req->http->hd[HTTP_HDR_METHOD].b == NULL) {"
    },
    {
        "line": 11,
        "fullcodeline": "Lck_Lock(&h2->sess->mtx);"
    },
    {
        "line": 12,
        "fullcodeline": "VSLb(h2->vsl, SLT_Debug, \"HPACK/FINI %s\", h2e->name);"
    },
    {
        "line": 13,
        "fullcodeline": "Lck_Unlock(&h2->sess->mtx);"
    },
    {
        "line": 14,
        "fullcodeline": "assert(!WS_IsReserved(r2->req->ws));"
    },
    {
        "line": 15,
        "fullcodeline": "h2_del_req(wrk, r2);"
    },
    {
        "line": 52,
        "fullcodeline": "if (Pool_Task(wrk->pool, req->task, TASK_QUEUE_STR) != 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "r2->state = H2_S_CLOSED;"
    },
    {
        "line": 33,
        "fullcodeline": "r2->state = H2_S_CLOS_REM;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!http_GetHdr(req->http, H_Content_Length, NULL))"
    },
    {
        "line": 27,
        "fullcodeline": "req->req_body_status = BS_EOF;"
    },
    {
        "line": 32,
        "fullcodeline": "assert (req->req_body_status == BS_NONE);"
    },
    {
        "line": 29,
        "fullcodeline": "req->req_body_status = BS_LENGTH;"
    },
    {
        "line": 34,
        "fullcodeline": "if (http_GetContentLength(req->http) > 0)"
    }
]