[
    {
        "line": 4,
        "fullcodeline": "const uint8_t *buf = avpkt->data;"
    },
    {
        "line": 5,
        "fullcodeline": "int buf_size = avpkt->size;"
    },
    {
        "line": 6,
        "fullcodeline": "UtvideoContext *c = avctx->priv_data;"
    },
    {
        "line": 8,
        "fullcodeline": "const uint8_t *plane_start[5];"
    },
    {
        "line": 9,
        "fullcodeline": "int plane_size, max_slice_size = 0, slice_start, slice_end, slice_size;"
    },
    {
        "line": 12,
        "fullcodeline": "ThreadFrame frame = { .f = data };"
    },
    {
        "line": 18,
        "fullcodeline": "bytestream2_init(&gb, buf, buf_size);"
    },
    {
        "line": 84,
        "fullcodeline": "c->frame_pred = (c->frame_info >> 8) & 3;"
    },
    {
        "line": 91,
        "fullcodeline": "av_fast_malloc(&c->slice_bits, &c->slice_bits_size,"
    },
    {
        "line": 211,
        "fullcodeline": "frame.f->pict_type = AV_PICTURE_TYPE_I;"
    },
    {
        "line": 14,
        "fullcodeline": "if ((ret = ff_thread_get_buffer(avctx, &frame, 0)) < 0)"
    },
    {
        "line": 86,
        "fullcodeline": "if (c->frame_pred == PRED_GRADIENT) {"
    },
    {
        "line": 92,
        "fullcodeline": "max_slice_size + AV_INPUT_BUFFER_PADDING_SIZE);"
    },
    {
        "line": 94,
        "fullcodeline": "if (!c->slice_bits) {"
    },
    {
        "line": 212,
        "fullcodeline": "frame.f->interlaced_frame = !!c->interlaced;"
    },
    {
        "line": 24,
        "fullcodeline": "c->frame_info = bytestream2_get_le32u(&gb);"
    },
    {
        "line": 25,
        "fullcodeline": "c->slices = ((c->frame_info >> 16) & 0xff) + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "if (bytestream2_get_bytes_left(&gb) < c->frame_info_size) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = 0; i < c->planes; i++) {"
    },
    {
        "line": 79,
        "fullcodeline": "c->frame_info = bytestream2_get_le32u(&gb);"
    },
    {
        "line": 96,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 102,
        "fullcodeline": "for (i = 0; i < c->planes; i++) {"
    },
    {
        "line": 127,
        "fullcodeline": "for (i = 0; i < c->planes; i++) {"
    },
    {
        "line": 139,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 160,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 180,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 200,
        "fullcodeline": "for (i = 0; i < 3; i++) {"
    },
    {
        "line": 27,
        "fullcodeline": "plane_start[i] = gb.buffer;"
    },
    {
        "line": 32,
        "fullcodeline": "slice_start = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "slice_end   = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "plane_size = slice_end;"
    },
    {
        "line": 46,
        "fullcodeline": "bytestream2_skipu(&gb, plane_size);"
    },
    {
        "line": 47,
        "fullcodeline": "bytestream2_skipu(&gb, 1024);"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < c->planes; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (bytestream2_get_bytes_left(&gb) < c->frame_info_size) {"
    },
    {
        "line": 103,
        "fullcodeline": "ret = decode_plane(c, i, frame.f->data[0] + ff_ut_rgb_order[i],"
    },
    {
        "line": 128,
        "fullcodeline": "ret = decode_plane10(c, i, (uint16_t *)frame.f->data[i], 1,"
    },
    {
        "line": 140,
        "fullcodeline": "ret = decode_plane(c, i, frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 161,
        "fullcodeline": "ret = decode_plane(c, i, frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 181,
        "fullcodeline": "ret = decode_plane(c, i, frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 201,
        "fullcodeline": "ret = decode_plane10(c, i, (uint16_t *)frame.f->data[i], 1, frame.f->linesize[i] / 2,"
    },
    {
        "line": 34,
        "fullcodeline": "for (j = 0; j < c->slices; j++) {"
    },
    {
        "line": 52,
        "fullcodeline": "plane_start[i] = gb.buffer;"
    },
    {
        "line": 57,
        "fullcodeline": "bytestream2_skipu(&gb, 256);"
    },
    {
        "line": 58,
        "fullcodeline": "slice_start = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "slice_end   = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "plane_size = slice_end;"
    },
    {
        "line": 72,
        "fullcodeline": "bytestream2_skipu(&gb, plane_size);"
    },
    {
        "line": 109,
        "fullcodeline": "if (c->frame_pred == PRED_MEDIAN) {"
    },
    {
        "line": 145,
        "fullcodeline": "if (c->frame_pred == PRED_MEDIAN) {"
    },
    {
        "line": 166,
        "fullcodeline": "if (c->frame_pred == PRED_MEDIAN) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (c->frame_pred == PRED_MEDIAN) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (bytestream2_get_bytes_left(&gb) < 1024 + 4 * c->slices) {"
    },
    {
        "line": 35,
        "fullcodeline": "slice_end   = bytestream2_get_le32u(&gb);"
    },
    {
        "line": 41,
        "fullcodeline": "slice_size  = slice_end - slice_start;"
    },
    {
        "line": 42,
        "fullcodeline": "slice_start = slice_end;"
    },
    {
        "line": 43,
        "fullcodeline": "max_slice_size = FFMAX(max_slice_size, slice_size);"
    },
    {
        "line": 60,
        "fullcodeline": "for (j = 0; j < c->slices; j++) {"
    },
    {
        "line": 106,
        "fullcodeline": "c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 129,
        "fullcodeline": "frame.f->linesize[i] / 2, avctx->width,"
    },
    {
        "line": 131,
        "fullcodeline": "plane_start[i + 1] - 1024,"
    },
    {
        "line": 132,
        "fullcodeline": "c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 141,
        "fullcodeline": "avctx->width >> !!i, avctx->height >> !!i,"
    },
    {
        "line": 142,
        "fullcodeline": "plane_start[i], c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 162,
        "fullcodeline": "avctx->width >> !!i, avctx->height,"
    },
    {
        "line": 163,
        "fullcodeline": "plane_start[i], c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 183,
        "fullcodeline": "plane_start[i], c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 202,
        "fullcodeline": "avctx->width >> !!i, avctx->height,"
    },
    {
        "line": 203,
        "fullcodeline": "plane_start[i], plane_start[i + 1] - 1024, c->frame_pred == PRED_LEFT);"
    },
    {
        "line": 53,
        "fullcodeline": "if (bytestream2_get_bytes_left(&gb) < 256 + 4 * c->slices) {"
    },
    {
        "line": 61,
        "fullcodeline": "slice_end   = bytestream2_get_le32u(&gb);"
    },
    {
        "line": 67,
        "fullcodeline": "slice_size  = slice_end - slice_start;"
    },
    {
        "line": 68,
        "fullcodeline": "slice_start = slice_end;"
    },
    {
        "line": 69,
        "fullcodeline": "max_slice_size = FFMAX(max_slice_size, slice_size);"
    },
    {
        "line": 110,
        "fullcodeline": "if (!c->interlaced) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (!c->interlaced) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (!c->interlaced) {"
    },
    {
        "line": 187,
        "fullcodeline": "if (!c->interlaced) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (slice_end < 0 || slice_end < slice_start ||"
    },
    {
        "line": 37,
        "fullcodeline": "bytestream2_get_bytes_left(&gb) < slice_end + 1024LL) {"
    },
    {
        "line": 111,
        "fullcodeline": "restore_median(frame.f->data[0] + ff_ut_rgb_order[i],"
    },
    {
        "line": 147,
        "fullcodeline": "restore_median(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 168,
        "fullcodeline": "restore_median(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 188,
        "fullcodeline": "restore_median(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 62,
        "fullcodeline": "if (slice_end < 0 || slice_end < slice_start ||"
    },
    {
        "line": 63,
        "fullcodeline": "bytestream2_get_bytes_left(&gb) < slice_end) {"
    },
    {
        "line": 115,
        "fullcodeline": "restore_median_il(frame.f->data[0] + ff_ut_rgb_order[i],"
    },
    {
        "line": 148,
        "fullcodeline": "avctx->width >> !!i, avctx->height >> !!i,"
    },
    {
        "line": 149,
        "fullcodeline": "c->slices, !i);"
    },
    {
        "line": 151,
        "fullcodeline": "restore_median_il(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 169,
        "fullcodeline": "avctx->width >> !!i, avctx->height,"
    },
    {
        "line": 172,
        "fullcodeline": "restore_median_il(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 192,
        "fullcodeline": "restore_median_il(frame.f->data[i], 1, frame.f->linesize[i],"
    },
    {
        "line": 152,
        "fullcodeline": "avctx->width  >> !!i,"
    },
    {
        "line": 153,
        "fullcodeline": "avctx->height >> !!i,"
    },
    {
        "line": 154,
        "fullcodeline": "c->slices, !i);"
    },
    {
        "line": 173,
        "fullcodeline": "avctx->width >> !!i, avctx->height,"
    }
]