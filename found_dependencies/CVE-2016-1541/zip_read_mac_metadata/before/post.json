[
    {
        "line": 6,
        "fullcodeline": "int64_t offset = archive_filter_bytes(&a->archive, 0);"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = ARCHIVE_OK, eof;"
    },
    {
        "line": 34,
        "fullcodeline": "metadata = malloc((size_t)rsrc->uncompressed_size);"
    },
    {
        "line": 47,
        "fullcodeline": "hsize = zip_get_local_file_header_size(a, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "__archive_read_consume(a, hsize);"
    },
    {
        "line": 50,
        "fullcodeline": "remaining_bytes = (size_t)rsrc->compressed_size;"
    },
    {
        "line": 51,
        "fullcodeline": "metadata_bytes = (size_t)rsrc->uncompressed_size;"
    },
    {
        "line": 52,
        "fullcodeline": "mp = metadata;"
    },
    {
        "line": 53,
        "fullcodeline": "eof = 0;"
    },
    {
        "line": 126,
        "fullcodeline": "archive_entry_copy_mac_metadata(entry, metadata,"
    },
    {
        "line": 130,
        "fullcodeline": "__archive_read_seek(a, offset, SEEK_SET);"
    },
    {
        "line": 131,
        "fullcodeline": "zip->decompress_init = 0;"
    },
    {
        "line": 132,
        "fullcodeline": "free(metadata);"
    },
    {
        "line": 27,
        "fullcodeline": "if (rsrc->uncompressed_size > (4 * 1024 * 1024)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (metadata == NULL) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (offset < rsrc->local_header_offset)"
    },
    {
        "line": 54,
        "fullcodeline": "while (!eof && remaining_bytes) {"
    },
    {
        "line": 127,
        "fullcodeline": "(size_t)rsrc->uncompressed_size - metadata_bytes);"
    },
    {
        "line": 19,
        "fullcodeline": "archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,"
    },
    {
        "line": 28,
        "fullcodeline": "archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,"
    },
    {
        "line": 36,
        "fullcodeline": "archive_set_error(&a->archive, ENOMEM,"
    },
    {
        "line": 42,
        "fullcodeline": "__archive_read_consume(a, rsrc->local_header_offset - offset);"
    },
    {
        "line": 59,
        "fullcodeline": "p = __archive_read_ahead(a, 1, &bytes_avail);"
    },
    {
        "line": 123,
        "fullcodeline": "__archive_read_consume(a, bytes_used);"
    },
    {
        "line": 124,
        "fullcodeline": "remaining_bytes -= bytes_used;"
    },
    {
        "line": 21,
        "fullcodeline": "compression_name(rsrc->compression));"
    },
    {
        "line": 30,
        "fullcodeline": "(intmax_t)rsrc->uncompressed_size);"
    },
    {
        "line": 60,
        "fullcodeline": "if (p == NULL) {"
    },
    {
        "line": 67,
        "fullcodeline": "if ((size_t)bytes_avail > remaining_bytes)"
    },
    {
        "line": 43,
        "fullcodeline": "else if (offset != rsrc->local_header_offset) {"
    },
    {
        "line": 61,
        "fullcodeline": "archive_set_error(&a->archive,"
    },
    {
        "line": 64,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 68,
        "fullcodeline": "bytes_avail = remaining_bytes;"
    },
    {
        "line": 71,
        "fullcodeline": "memcpy(mp, p, bytes_avail);"
    },
    {
        "line": 72,
        "fullcodeline": "bytes_used = (size_t)bytes_avail;"
    },
    {
        "line": 73,
        "fullcodeline": "metadata_bytes -= bytes_used;"
    },
    {
        "line": 74,
        "fullcodeline": "mp += bytes_used;"
    },
    {
        "line": 120,
        "fullcodeline": "bytes_used = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "__archive_read_seek(a, rsrc->local_header_offset, SEEK_SET);"
    },
    {
        "line": 75,
        "fullcodeline": "if (metadata_bytes == 0)"
    },
    {
        "line": 76,
        "fullcodeline": "eof = 1;"
    }
]