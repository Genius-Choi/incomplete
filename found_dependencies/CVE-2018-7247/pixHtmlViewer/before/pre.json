[
    {
        "line": 11,
        "fullcodeline": "char       charbuf[512];"
    },
    {
        "line": 12,
        "fullcodeline": "char       htmlstring[] = \"<html>\";"
    },
    {
        "line": 13,
        "fullcodeline": "char       framestring[] = \"</frameset></html>\";"
    },
    {
        "line": 19,
        "fullcodeline": "PROCNAME(\"pixHtmlViewer\");"
    },
    {
        "line": 43,
        "fullcodeline": "snprintf(charbuf, sizeof(charbuf), \"mkdir -p %s\", dirout);"
    },
    {
        "line": 58,
        "fullcodeline": "sprintf(charbuf, \"%s/%s.html\", dirout, rootname);"
    },
    {
        "line": 59,
        "fullcodeline": "mainname = stringNew(charbuf);"
    },
    {
        "line": 60,
        "fullcodeline": "sprintf(charbuf, \"%s/%s-links.html\", dirout, rootname);"
    },
    {
        "line": 61,
        "fullcodeline": "linkname = stringNew(charbuf);"
    },
    {
        "line": 62,
        "fullcodeline": "linknameshort = stringJoin(rootname, \"-links.html\");"
    },
    {
        "line": 65,
        "fullcodeline": "sathumbs = sarrayCreate(0);"
    },
    {
        "line": 66,
        "fullcodeline": "saviews = sarrayCreate(0);"
    },
    {
        "line": 67,
        "fullcodeline": "nfiles = sarrayGetCount(safiles);"
    },
    {
        "line": 68,
        "fullcodeline": "index = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "sahtml = sarrayCreate(0);"
    },
    {
        "line": 109,
        "fullcodeline": "sarrayAddString(sahtml, htmlstring, L_COPY);"
    },
    {
        "line": 110,
        "fullcodeline": "sprintf(charbuf, \"<frameset cols=\\\"%d, *\\\">\", thumbwidth + 30);"
    },
    {
        "line": 111,
        "fullcodeline": "sarrayAddString(sahtml, charbuf, L_COPY);"
    },
    {
        "line": 112,
        "fullcodeline": "sprintf(charbuf, \"<frame name=\\\"thumbs\\\" src=\\\"%s\\\">\", linknameshort);"
    },
    {
        "line": 113,
        "fullcodeline": "sarrayAddString(sahtml, charbuf, L_COPY);"
    },
    {
        "line": 114,
        "fullcodeline": "sprintf(charbuf, \"<frame name=\\\"views\\\" src=\\\"%s\\\">\","
    },
    {
        "line": 116,
        "fullcodeline": "sarrayAddString(sahtml, charbuf, L_COPY);"
    },
    {
        "line": 117,
        "fullcodeline": "sarrayAddString(sahtml, framestring, L_COPY);"
    },
    {
        "line": 118,
        "fullcodeline": "shtml = sarrayToString(sahtml, 1);"
    },
    {
        "line": 119,
        "fullcodeline": "l_binaryWrite(mainname, \"w\", shtml, strlen(shtml));"
    },
    {
        "line": 120,
        "fullcodeline": "fprintf(stderr, \"******************************************\\n\""
    },
    {
        "line": 127,
        "fullcodeline": "nimages = sarrayGetCount(saviews);"
    },
    {
        "line": 128,
        "fullcodeline": "fprintf(stderr, \"num. images = %d\\n\", nimages);"
    },
    {
        "line": 129,
        "fullcodeline": "salink = sarrayCreate(0);"
    },
    {
        "line": 137,
        "fullcodeline": "slink = sarrayToString(salink, 1);"
    },
    {
        "line": 138,
        "fullcodeline": "l_binaryWrite(linkname, \"w\", slink, strlen(slink));"
    },
    {
        "line": 21,
        "fullcodeline": "if (!dirin)"
    },
    {
        "line": 23,
        "fullcodeline": "if (!dirout)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!rootname)"
    },
    {
        "line": 28,
        "fullcodeline": "if (thumbwidth == 0)"
    },
    {
        "line": 30,
        "fullcodeline": "if (thumbwidth < MIN_THUMB_WIDTH) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (viewwidth == 0)"
    },
    {
        "line": 36,
        "fullcodeline": "if (viewwidth < MIN_VIEW_WIDTH) {"
    },
    {
        "line": 44,
        "fullcodeline": "ret = system(charbuf);"
    },
    {
        "line": 54,
        "fullcodeline": "if ((safiles = getFilenamesInDirectory(dirin)) == NULL)"
    },
    {
        "line": 69,
        "fullcodeline": "for (i = 0; i < nfiles; i++) {"
    },
    {
        "line": 115,
        "fullcodeline": "sarrayGetString(saviews, 0, L_NOCOPY));"
    },
    {
        "line": 130,
        "fullcodeline": "for (i = 0; i < nimages; i++) {"
    },
    {
        "line": 29,
        "fullcodeline": "thumbwidth = DEFAULT_THUMB_WIDTH;"
    },
    {
        "line": 31,
        "fullcodeline": "L_WARNING(\"thumbwidth too small; using min value\\n\", procName);"
    },
    {
        "line": 32,
        "fullcodeline": "thumbwidth = MIN_THUMB_WIDTH;"
    },
    {
        "line": 35,
        "fullcodeline": "viewwidth = DEFAULT_VIEW_WIDTH;"
    },
    {
        "line": 37,
        "fullcodeline": "L_WARNING(\"viewwidth too small; using min value\\n\", procName);"
    },
    {
        "line": 38,
        "fullcodeline": "viewwidth = MIN_VIEW_WIDTH;"
    },
    {
        "line": 70,
        "fullcodeline": "fname = sarrayGetString(safiles, i, L_NOCOPY);"
    },
    {
        "line": 71,
        "fullcodeline": "fullname = genPathname(dirin, fname);"
    },
    {
        "line": 72,
        "fullcodeline": "fprintf(stderr, \"name: %s\\n\", fullname);"
    },
    {
        "line": 81,
        "fullcodeline": "pixGetDimensions(pix, &w, NULL, &d);"
    },
    {
        "line": 82,
        "fullcodeline": "factor = (l_float32)thumbwidth / (l_float32)w;"
    },
    {
        "line": 83,
        "fullcodeline": "pixthumb = pixScale(pix, factor, factor);"
    },
    {
        "line": 84,
        "fullcodeline": "sprintf(charbuf, \"%s_thumb_%03d\", rootname, index);"
    },
    {
        "line": 85,
        "fullcodeline": "sarrayAddString(sathumbs, charbuf, L_COPY);"
    },
    {
        "line": 86,
        "fullcodeline": "outname = genPathname(dirout, charbuf);"
    },
    {
        "line": 87,
        "fullcodeline": "WriteFormattedPix(outname, pixthumb);"
    },
    {
        "line": 89,
        "fullcodeline": "pixDestroy(&pixthumb);"
    },
    {
        "line": 92,
        "fullcodeline": "factor = (l_float32)viewwidth / (l_float32)w;"
    },
    {
        "line": 97,
        "fullcodeline": "snprintf(charbuf, sizeof(charbuf), \"%s_view_%03d\", rootname, index);"
    },
    {
        "line": 98,
        "fullcodeline": "sarrayAddString(saviews, charbuf, L_COPY);"
    },
    {
        "line": 99,
        "fullcodeline": "outname = genPathname(dirout, charbuf);"
    },
    {
        "line": 100,
        "fullcodeline": "WriteFormattedPix(outname, pixview);"
    },
    {
        "line": 102,
        "fullcodeline": "pixDestroy(&pixview);"
    },
    {
        "line": 103,
        "fullcodeline": "pixDestroy(&pix);"
    },
    {
        "line": 104,
        "fullcodeline": "index++;"
    },
    {
        "line": 131,
        "fullcodeline": "viewfile = sarrayGetString(saviews, i, L_NOCOPY);"
    },
    {
        "line": 132,
        "fullcodeline": "thumbfile = sarrayGetString(sathumbs, i, L_NOCOPY);"
    },
    {
        "line": 133,
        "fullcodeline": "sprintf(charbuf, \"<a href=\\\"%s\\\" TARGET=views><img src=\\\"%s\\\"></a>\","
    },
    {
        "line": 135,
        "fullcodeline": "sarrayAddString(salink, charbuf, L_COPY);"
    },
    {
        "line": 22,
        "fullcodeline": "return ERROR_INT(\"dirin not defined\", procName, 1);"
    },
    {
        "line": 24,
        "fullcodeline": "return ERROR_INT(\"dirout not defined\", procName, 1);"
    },
    {
        "line": 26,
        "fullcodeline": "return ERROR_INT(\"rootname not defined\", procName, 1);"
    },
    {
        "line": 55,
        "fullcodeline": "return ERROR_INT(\"safiles not made\", procName, 1);"
    },
    {
        "line": 73,
        "fullcodeline": "if ((pix = pixRead(fullname)) == NULL) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (factor >= 1.0)"
    },
    {
        "line": 74,
        "fullcodeline": "fprintf(stderr, \"file %s not a readable image\\n\", fullname);"
    },
    {
        "line": 94,
        "fullcodeline": "pixview = pixClone(pix);   /* no upscaling */"
    },
    {
        "line": 96,
        "fullcodeline": "pixview = pixScale(pix, factor, factor);"
    }
]