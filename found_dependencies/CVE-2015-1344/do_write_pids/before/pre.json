[
    {
        "line": 3,
        "fullcodeline": "int sock[2] = {-1, -1};"
    },
    {
        "line": 4,
        "fullcodeline": "pid_t qpid, cpid = -1;"
    },
    {
        "line": 5,
        "fullcodeline": "FILE *pids_file = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "bool answer = false, fail = false;"
    },
    {
        "line": 8,
        "fullcodeline": "pids_file = open_pids_file(contrl, cg);"
    },
    {
        "line": 21,
        "fullcodeline": "cpid = fork();"
    },
    {
        "line": 30,
        "fullcodeline": "const char *ptr = buf;"
    },
    {
        "line": 55,
        "fullcodeline": "qpid = -1;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!pids_file)"
    },
    {
        "line": 22,
        "fullcodeline": "if (cpid == -1)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!cpid) { // child"
    },
    {
        "line": 63,
        "fullcodeline": "if (cpid != -1)"
    },
    {
        "line": 65,
        "fullcodeline": "if (sock[0] != -1) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (socketpair(AF_UNIX, SOCK_DGRAM, 0, sock) < 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "fclose(pids_file);"
    },
    {
        "line": 27,
        "fullcodeline": "pid_from_ns_wrapper(sock[1], tpid);"
    },
    {
        "line": 31,
        "fullcodeline": "while (sscanf(ptr, \"%d\", &qpid) == 1) {"
    },
    {
        "line": 48,
        "fullcodeline": "ptr = strchr(ptr, '\\n');"
    },
    {
        "line": 51,
        "fullcodeline": "ptr++;"
    },
    {
        "line": 56,
        "fullcodeline": "if (write(sock[0], &qpid ,sizeof(qpid)) != sizeof(qpid))"
    },
    {
        "line": 60,
        "fullcodeline": "answer = true;"
    },
    {
        "line": 41,
        "fullcodeline": "if (recv_creds(sock[0], &cred, &v)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (!ptr)"
    },
    {
        "line": 35,
        "fullcodeline": "if (write(sock[0], &qpid, sizeof(qpid)) != sizeof(qpid)) {"
    },
    {
        "line": 36,
        "fullcodeline": "fprintf(stderr, \"%s: error writing pid to child: %s\\n\","
    },
    {
        "line": 70,
        "fullcodeline": "if (fclose(pids_file) != 0)"
    },
    {
        "line": 71,
        "fullcodeline": "answer = false;"
    },
    {
        "line": 37,
        "fullcodeline": "__func__, strerror(errno));"
    },
    {
        "line": 42,
        "fullcodeline": "if (v == '0') {"
    },
    {
        "line": 43,
        "fullcodeline": "if (fprintf(pids_file, \"%d\", (int) cred.pid) < 0)"
    },
    {
        "line": 44,
        "fullcodeline": "fail = true;"
    }
]