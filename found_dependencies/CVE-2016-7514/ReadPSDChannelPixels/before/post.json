[
    {
        "line": 23,
        "fullcodeline": "p=pixels;"
    },
    {
        "line": 24,
        "fullcodeline": "q=GetAuthenticPixels(image,0,row,image->columns,1,exception);"
    },
    {
        "line": 27,
        "fullcodeline": "packet_size=GetPSDPacketSize(image);"
    },
    {
        "line": 25,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 122,
        "fullcodeline": "return(SyncAuthenticPixels(image,exception));"
    },
    {
        "line": 120,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 30,
        "fullcodeline": "if (packet_size == 1)"
    },
    {
        "line": 31,
        "fullcodeline": "pixel=ScaleCharToQuantum(*p++);"
    },
    {
        "line": 39,
        "fullcodeline": "case -1:"
    },
    {
        "line": 44,
        "fullcodeline": "case -2:"
    },
    {
        "line": 34,
        "fullcodeline": "p=PushShortPixel(MSBEndian,p,&nibble);"
    },
    {
        "line": 35,
        "fullcodeline": "pixel=ScaleShortToQuantum(nibble);"
    },
    {
        "line": 41,
        "fullcodeline": "SetPixelAlpha(image,pixel,q);"
    },
    {
        "line": 47,
        "fullcodeline": "SetPixelRed(image,pixel,q);"
    },
    {
        "line": 48,
        "fullcodeline": "if (channels == 1 || type == -2)"
    },
    {
        "line": 50,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 85,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 93,
        "fullcodeline": "if (image->storage_class == PseudoClass)"
    },
    {
        "line": 101,
        "fullcodeline": "if (image->colorspace == CMYKColorspace)"
    },
    {
        "line": 110,
        "fullcodeline": "if ((IssRGBCompatibleColorspace(image->colorspace) != MagickFalse) &&"
    },
    {
        "line": 113,
        "fullcodeline": "if (image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 49,
        "fullcodeline": "SetPixelGray(image,pixel,q);"
    },
    {
        "line": 56,
        "fullcodeline": "SetPixelViaPixelInfo(image,image->colormap+(ssize_t)"
    },
    {
        "line": 86,
        "fullcodeline": "SetPixelAlpha(image,pixel,q);"
    },
    {
        "line": 94,
        "fullcodeline": "SetPixelAlpha(image,pixel,q);"
    },
    {
        "line": 102,
        "fullcodeline": "SetPixelBlack(image,pixel,q);"
    },
    {
        "line": 111,
        "fullcodeline": "(channels > 3))"
    },
    {
        "line": 114,
        "fullcodeline": "SetPixelAlpha(image,pixel,q);"
    },
    {
        "line": 52,
        "fullcodeline": "if (packet_size == 1)"
    },
    {
        "line": 58,
        "fullcodeline": "if (image->depth == 1)"
    },
    {
        "line": 88,
        "fullcodeline": "SetPixelGreen(image,pixel,q);"
    },
    {
        "line": 96,
        "fullcodeline": "SetPixelBlue(image,pixel,q);"
    },
    {
        "line": 53,
        "fullcodeline": "SetPixelIndex(image,ScaleQuantumToChar(pixel),q);"
    },
    {
        "line": 64,
        "fullcodeline": "number_bits=image->columns-x;"
    },
    {
        "line": 77,
        "fullcodeline": "x--;"
    },
    {
        "line": 104,
        "fullcodeline": "if (image->alpha_trait != UndefinedPixelTrait)"
    },
    {
        "line": 55,
        "fullcodeline": "SetPixelIndex(image,ScaleQuantumToShort(pixel),q);"
    },
    {
        "line": 57,
        "fullcodeline": "ConstrainColormapIndex(image,GetPixelIndex(image,q),exception),q);"
    },
    {
        "line": 65,
        "fullcodeline": "if (number_bits > 8)"
    },
    {
        "line": 67,
        "fullcodeline": "for (bit=0; bit < number_bits; bit++)"
    },
    {
        "line": 105,
        "fullcodeline": "SetPixelAlpha(image,pixel,q);"
    },
    {
        "line": 66,
        "fullcodeline": "number_bits=8;"
    },
    {
        "line": 69,
        "fullcodeline": "SetPixelIndex(image,(((unsigned char) pixel) &"
    },
    {
        "line": 71,
        "fullcodeline": "SetPixelViaPixelInfo(image,image->colormap+(ssize_t)"
    },
    {
        "line": 74,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 75,
        "fullcodeline": "x++;"
    },
    {
        "line": 72,
        "fullcodeline": "ConstrainColormapIndex(image,GetPixelIndex(image,q),"
    },
    {
        "line": 70,
        "fullcodeline": "(0x01 << (7-bit))) != 0 ? 0 : 255,q);"
    }
]