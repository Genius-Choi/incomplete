[
    {
        "line": 3,
        "fullcodeline": "static char line[4 * 4096];"
    },
    {
        "line": 5,
        "fullcodeline": "address_t peername = { .sa.sa_family = AF_UNSPEC, };"
    },
    {
        "line": 6,
        "fullcodeline": "socklen_t peerlen = sizeof(peername);"
    },
    {
        "line": 7,
        "fullcodeline": "char *peer=0, *tag[32];"
    },
    {
        "line": 11,
        "fullcodeline": "if (fstat(0, &sb))"
    },
    {
        "line": 14,
        "fullcodeline": "switch (sb.st_mode & S_IFMT) {"
    },
    {
        "line": 28,
        "fullcodeline": "while ( conn_gets(line, sizeof(line)) ) {"
    },
    {
        "line": 12,
        "fullcodeline": "csync_fatal(\"Can't run fstat on fd 0: %s\", strerror(errno));"
    },
    {
        "line": 20,
        "fullcodeline": "set_peername_from_env(&peername, \"SSH_CLIENT\");"
    },
    {
        "line": 24,
        "fullcodeline": "csync_fatal(\"I'm only talking to sockets or pipes! %x\\n\", sb.st_mode & S_IFMT);"
    },
    {
        "line": 42,
        "fullcodeline": "cmd_error = 0;"
    },
    {
        "line": 330,
        "fullcodeline": "destroy_tag(tag);"
    },
    {
        "line": 16,
        "fullcodeline": "if ( getpeername(0, &peername.sa, &peerlen) == -1 )"
    },
    {
        "line": 31,
        "fullcodeline": "if (!setup_tag(tag, line))"
    },
    {
        "line": 34,
        "fullcodeline": "for (cmdnr=0; cmdtab[cmdnr].text; cmdnr++)"
    },
    {
        "line": 37,
        "fullcodeline": "if ( !cmdtab[cmdnr].text ) {"
    },
    {
        "line": 44,
        "fullcodeline": "if ( cmdtab[cmdnr].need_ident && !peer ) {"
    },
    {
        "line": 69,
        "fullcodeline": "if ( cmdtab[cmdnr].check_dirty &&"
    },
    {
        "line": 317,
        "fullcodeline": "if ( cmdtab[cmdnr].update == 1 ) {"
    },
    {
        "line": 17,
        "fullcodeline": "csync_fatal(\"Can't run getpeername on fd 0: %s\", strerror(errno));"
    },
    {
        "line": 35,
        "fullcodeline": "if ( !strcasecmp(cmdtab[cmdnr].text, tag[0]) ) break;"
    },
    {
        "line": 38,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_UNKNOWN_COMMAND);"
    },
    {
        "line": 45,
        "fullcodeline": "conn_printf(\"Dear %s, please identify first.\\n\","
    },
    {
        "line": 51,
        "fullcodeline": "on_cygwin_lowercase(tag[2]);"
    },
    {
        "line": 56,
        "fullcodeline": "int perm = csync_perm(tag[2], tag[1], peer);"
    },
    {
        "line": 70,
        "fullcodeline": "csync_check_dirty(tag[2], peer, cmdtab[cmdnr].action == A_FLUSH) )"
    },
    {
        "line": 74,
        "fullcodeline": "csync_unlink(tag[2], cmdtab[cmdnr].unlink);"
    },
    {
        "line": 109,
        "fullcodeline": "csync_mark(tag[2], peer, 0);"
    },
    {
        "line": 148,
        "fullcodeline": "SQL(\"Flushing dirty entry (if any) for file\","
    },
    {
        "line": 238,
        "fullcodeline": "SQL_BEGIN(\"DB Dump - Files for sync pair\","
    },
    {
        "line": 250,
        "fullcodeline": "csync_debug_out = stdout;"
    },
    {
        "line": 310,
        "fullcodeline": "conn_resp(CR_OK_CU_LATER);"
    },
    {
        "line": 315,
        "fullcodeline": "csync_file_update(tag[2], peer);"
    },
    {
        "line": 318,
        "fullcodeline": "csync_debug(1, \"Updated %s from %s.\\n\","
    },
    {
        "line": 320,
        "fullcodeline": "csync_schedule_commands(tag[2], 0);"
    },
    {
        "line": 325,
        "fullcodeline": "conn_printf(\"%s\\n\", cmd_error);"
    },
    {
        "line": 46,
        "fullcodeline": "csync_inet_ntop(&peername) ?: \"stranger\");"
    },
    {
        "line": 54,
        "fullcodeline": "if ( cmdtab[cmdnr].check_perm == 2 )"
    },
    {
        "line": 57,
        "fullcodeline": "if ( cmdtab[cmdnr].check_perm == 2 )"
    },
    {
        "line": 99,
        "fullcodeline": "conn_resp(CR_OK_DATA_FOLLOWS);"
    },
    {
        "line": 100,
        "fullcodeline": "conn_printf(\"%s\\n\", csync_genchecktxt(&st, tag[2], 1));"
    },
    {
        "line": 113,
        "fullcodeline": "FILE *f = fopen(prefixsubst(tag[2]), \"rb\");"
    },
    {
        "line": 131,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 138,
        "fullcodeline": "conn_resp(CR_OK_DATA_FOLLOWS);"
    },
    {
        "line": 150,
        "fullcodeline": "url_encode(tag[2]));"
    },
    {
        "line": 153,
        "fullcodeline": "if (!csync_file_backup(tag[2]))"
    },
    {
        "line": 157,
        "fullcodeline": "if (!csync_file_backup(tag[2])) {"
    },
    {
        "line": 188,
        "fullcodeline": "if ( mkdir(prefixsubst(tag[2]), 0700) ) {"
    },
    {
        "line": 196,
        "fullcodeline": "if ( mknod(prefixsubst(tag[2]), 0700|S_IFCHR, atoi(tag[3])) )"
    },
    {
        "line": 200,
        "fullcodeline": "if ( mknod(prefixsubst(tag[2]), 0700|S_IFBLK, atoi(tag[3])) )"
    },
    {
        "line": 204,
        "fullcodeline": "if ( mknod(prefixsubst(tag[2]), 0700|S_IFIFO, 0) )"
    },
    {
        "line": 208,
        "fullcodeline": "if ( symlink(tag[3], prefixsubst(tag[2])) )"
    },
    {
        "line": 215,
        "fullcodeline": "if ( !csync_ignore_uid || !csync_ignore_gid ) {"
    },
    {
        "line": 223,
        "fullcodeline": "if ( !csync_ignore_mod ) {"
    },
    {
        "line": 231,
        "fullcodeline": "utb.actime = atoll(tag[3]);"
    },
    {
        "line": 232,
        "fullcodeline": "utb.modtime = atoll(tag[3]);"
    },
    {
        "line": 241,
        "fullcodeline": "strcmp(tag[2], \"-\") ? url_encode(tag[2]) : \"\","
    },
    {
        "line": 242,
        "fullcodeline": "strcmp(tag[2], \"-\") ? \"'\" : \"\")"
    },
    {
        "line": 259,
        "fullcodeline": "if (verify_peername(tag[1], &peername)) {"
    },
    {
        "line": 308,
        "fullcodeline": "for (i=0; i<32; i++)"
    },
    {
        "line": 319,
        "fullcodeline": "tag[2], peer ? peer : \"???\");"
    },
    {
        "line": 327,
        "fullcodeline": "conn_resp(CR_OK_CMD_FINISHED);"
    },
    {
        "line": 55,
        "fullcodeline": "csync_compare_mode = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "csync_compare_mode = 0;"
    },
    {
        "line": 82,
        "fullcodeline": "if ( lstat_strict(prefixsubst(tag[2]), &st) != 0 ) {"
    },
    {
        "line": 102,
        "fullcodeline": "if ( S_ISREG(st.st_mode) )"
    },
    {
        "line": 115,
        "fullcodeline": "if (!f && errno == ENOENT)"
    },
    {
        "line": 139,
        "fullcodeline": "if (!lstat_strict(prefixsubst(tag[2]), &sbuf))"
    },
    {
        "line": 154,
        "fullcodeline": "csync_unlink(tag[2], 0);"
    },
    {
        "line": 158,
        "fullcodeline": "conn_resp(CR_OK_SEND_DATA);"
    },
    {
        "line": 159,
        "fullcodeline": "csync_rs_sig(tag[2]);"
    },
    {
        "line": 197,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 201,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 205,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 209,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 216,
        "fullcodeline": "int uid = csync_ignore_uid ? -1 : atoi(tag[3]);"
    },
    {
        "line": 217,
        "fullcodeline": "int gid = csync_ignore_gid ? -1 : atoi(tag[4]);"
    },
    {
        "line": 233,
        "fullcodeline": "if ( utime(prefixsubst(tag[2]), &utb) )"
    },
    {
        "line": 240,
        "fullcodeline": "strcmp(tag[2], \"-\") ? \"WHERE filename = '\" : \"\","
    },
    {
        "line": 244,
        "fullcodeline": "if ( csync_match_file_host(url_decode(SQL_V(1)), tag[1], peer, (const char **)&tag[3]) )"
    },
    {
        "line": 252,
        "fullcodeline": "csync_debug_level = atoi(tag[1]);"
    },
    {
        "line": 257,
        "fullcodeline": "peer = NULL;"
    },
    {
        "line": 260,
        "fullcodeline": "peer = strdup(tag[1]);"
    },
    {
        "line": 282,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_GROUP_LIST_ALREADY_SET);"
    },
    {
        "line": 60,
        "fullcodeline": "if ( perm == 2 ) {"
    },
    {
        "line": 103,
        "fullcodeline": "csync_rs_sig(tag[2]);"
    },
    {
        "line": 116,
        "fullcodeline": "f = fopen(\"/dev/null\", \"rb\");"
    },
    {
        "line": 119,
        "fullcodeline": "char buffer[512];"
    },
    {
        "line": 122,
        "fullcodeline": "conn_resp(CR_OK_DATA_FOLLOWS);"
    },
    {
        "line": 128,
        "fullcodeline": "fclose(f);"
    },
    {
        "line": 140,
        "fullcodeline": "conn_printf(\"%ld\\n\", cmdtab[cmdnr].action == A_GETTM ?"
    },
    {
        "line": 160,
        "fullcodeline": "if (csync_rs_patch(tag[2]))"
    },
    {
        "line": 190,
        "fullcodeline": "if ( lstat_strict((prefixsubst(tag[2])), &st) != 0 || !S_ISDIR(st.st_mode))"
    },
    {
        "line": 218,
        "fullcodeline": "if ( lchown(prefixsubst(tag[2]), uid, gid) )"
    },
    {
        "line": 224,
        "fullcodeline": "if ( chmod(prefixsubst(tag[2]), atoi(tag[3])) )"
    },
    {
        "line": 234,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 245,
        "fullcodeline": "conn_printf(\"%s\\t%s\\n\", SQL_V(0), SQL_V(1));"
    },
    {
        "line": 262,
        "fullcodeline": "peer = NULL;"
    },
    {
        "line": 263,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_IDENTIFICATION_FAILED);"
    },
    {
        "line": 287,
        "fullcodeline": "active_grouplist = strdup(tag[1]);"
    },
    {
        "line": 61,
        "fullcodeline": "csync_mark(tag[2], peer, 0);"
    },
    {
        "line": 62,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_PERM_DENIED_FOR_SLAVE);"
    },
    {
        "line": 83,
        "fullcodeline": "if ( errno == ENOENT ) {"
    },
    {
        "line": 105,
        "fullcodeline": "conn_printf(\"octet-stream 0\\n\");"
    },
    {
        "line": 123,
        "fullcodeline": "while ( (rc=fread(buffer, 1, 512, f)) > 0 )"
    },
    {
        "line": 143,
        "fullcodeline": "conn_printf(\"-1\\n\");"
    },
    {
        "line": 161,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 191,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 219,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 225,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 288,
        "fullcodeline": "for (g=csync_group; g; g=g->next) {"
    },
    {
        "line": 64,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_PERM_DENIED);"
    },
    {
        "line": 85,
        "fullcodeline": "char parent_dirname[strlen(tag[2])];"
    },
    {
        "line": 86,
        "fullcodeline": "split_dirname_basename(parent_dirname, NULL, tag[2]);"
    },
    {
        "line": 95,
        "fullcodeline": "if ( csync_check_pure(tag[2]) ) {"
    },
    {
        "line": 124,
        "fullcodeline": "if ( conn_write(buffer, rc) != rc ) {"
    },
    {
        "line": 141,
        "fullcodeline": "(long)sbuf.st_mtime : (long)sbuf.st_size);"
    },
    {
        "line": 291,
        "fullcodeline": "i=0;"
    },
    {
        "line": 292,
        "fullcodeline": "gnamelen = strlen(csync_group->gname);"
    },
    {
        "line": 302,
        "fullcodeline": "csync_group->myname = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "if ( lstat_strict(prefixsubst(parent_dirname), &sb) != 0 )"
    },
    {
        "line": 92,
        "fullcodeline": "cmd_error = strerror(errno);"
    },
    {
        "line": 96,
        "fullcodeline": "conn_resp_zero(CR_OK_NOT_FOUND);"
    },
    {
        "line": 125,
        "fullcodeline": "conn_printf(\"[[ %s ]]\", strerror(errno));"
    },
    {
        "line": 289,
        "fullcodeline": "if (!g->myname) continue;"
    },
    {
        "line": 88,
        "fullcodeline": "cmd_error = conn_response(CR_ERR_PARENT_DIR_MISSING);"
    },
    {
        "line": 90,
        "fullcodeline": "conn_resp_zero(CR_OK_PATH_NOT_FOUND);"
    },
    {
        "line": 295,
        "fullcodeline": "if ( !strncmp(active_grouplist+i, csync_group->gname, gnamelen) &&"
    },
    {
        "line": 296,
        "fullcodeline": "(active_grouplist[i+gnamelen] == ',' ||"
    },
    {
        "line": 300,
        "fullcodeline": "if (active_grouplist[i++]==',') break;"
    },
    {
        "line": 297,
        "fullcodeline": "!active_grouplist[i+gnamelen]) )"
    }
]