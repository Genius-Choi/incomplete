[
    {
        "line": 11,
        "fullcodeline": "result = {}"
    },
    {
        "line": 12,
        "fullcodeline": "result[\"configs\"] = {}"
    },
    {
        "line": 13,
        "fullcodeline": "with open(config_path) as f:"
    },
    {
        "line": 14,
        "fullcodeline": "cfg = yaml.load(f.read(), Loader=yaml.SafeLoader)"
    },
    {
        "line": 16,
        "fullcodeline": "result[\"world_path\"] = cfg.get(\"world_module\")"
    },
    {
        "line": 19,
        "fullcodeline": "result[\"overworld\"] = cfg.get(\"overworld\")"
    },
    {
        "line": 22,
        "fullcodeline": "result[\"max_workers\"] = cfg.get(\"max_workers\")"
    },
    {
        "line": 25,
        "fullcodeline": "result[\"task_name\"] = cfg.get(\"task_name\")"
    },
    {
        "line": 28,
        "fullcodeline": "task_world = cfg.get(\"tasks\")"
    },
    {
        "line": 44,
        "fullcodeline": "result[\"world_opt\"] = cfg.get(\"opt\", {})"
    },
    {
        "line": 45,
        "fullcodeline": "result[\"additional_args\"] = cfg.get(\"additional_args\", {})"
    },
    {
        "line": 17,
        "fullcodeline": "if not result[\"world_path\"]:"
    },
    {
        "line": 20,
        "fullcodeline": "if not result[\"overworld\"]:"
    },
    {
        "line": 23,
        "fullcodeline": "if not result[\"max_workers\"]:"
    },
    {
        "line": 26,
        "fullcodeline": "if not result[\"task_name\"]:"
    },
    {
        "line": 29,
        "fullcodeline": "if task_world is None or len(task_world) == 0:"
    },
    {
        "line": 32,
        "fullcodeline": "for task_name, configuration in task_world.items():"
    },
    {
        "line": 18,
        "fullcodeline": "raise ValueError(\"Did not specify world module\")"
    },
    {
        "line": 21,
        "fullcodeline": "raise ValueError(\"Did not specify overworld\")"
    },
    {
        "line": 24,
        "fullcodeline": "raise ValueError(\"Did not specify max_workers\")"
    },
    {
        "line": 27,
        "fullcodeline": "raise ValueError(\"Did not specify task name\")"
    },
    {
        "line": 30,
        "fullcodeline": "raise ValueError(\"task not in config file\")"
    },
    {
        "line": 35,
        "fullcodeline": "result[\"configs\"][task_name] = WorldConfig("
    },
    {
        "line": 33,
        "fullcodeline": "if \"task_world\" not in configuration:"
    },
    {
        "line": 34,
        "fullcodeline": "raise ValueError(\"{} does not specify a task\".format(task_name))"
    },
    {
        "line": 37,
        "fullcodeline": "onboarding_name=configuration.get(\"onboard_world\"),"
    },
    {
        "line": 38,
        "fullcodeline": "task_name=configuration.get(\"task_world\"),"
    },
    {
        "line": 39,
        "fullcodeline": "max_time_in_pool=configuration.get(\"timeout\") or 300,"
    },
    {
        "line": 40,
        "fullcodeline": "agents_required=configuration.get(\"agents_required\") or 1,"
    },
    {
        "line": 41,
        "fullcodeline": "backup_task=configuration.get(\"backup_task\"),"
    }
]