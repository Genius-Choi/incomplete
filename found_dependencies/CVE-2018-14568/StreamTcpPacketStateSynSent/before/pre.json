[
    {
        "line": 7,
        "fullcodeline": "SCLogDebug(\"ssn %p: pkt received: %s\", ssn, PKT_IS_TOCLIENT(p) ?"
    },
    {
        "line": 4,
        "fullcodeline": "if (ssn == NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "if (p->tcph->th_flags & TH_RST) {"
    },
    {
        "line": 5,
        "fullcodeline": "return -1;"
    },
    {
        "line": 15,
        "fullcodeline": "if (PKT_IS_TOSERVER(p)) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!StreamTcpValidateRst(ssn, p))"
    },
    {
        "line": 31,
        "fullcodeline": "} else if (p->tcph->th_flags & TH_FIN) {"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 25,
        "fullcodeline": "StreamTcpPacketSetState(p, ssn, TCP_CLOSED);"
    },
    {
        "line": 16,
        "fullcodeline": "if (SEQ_EQ(TCP_GET_SEQ(p), ssn->client.isn) &&"
    },
    {
        "line": 18,
        "fullcodeline": "SEQ_EQ(TCP_GET_ACK(p), (ssn->client.isn + 1)))"
    },
    {
        "line": 20,
        "fullcodeline": "StreamTcpPacketSetState(p, ssn, TCP_CLOSED);"
    },
    {
        "line": 17,
        "fullcodeline": "SEQ_EQ(TCP_GET_WINDOW(p), 0) &&"
    },
    {
        "line": 35,
        "fullcodeline": "} else if ((p->tcph->th_flags & (TH_SYN|TH_ACK)) == (TH_SYN|TH_ACK)) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (PKT_IS_TOSERVER(p)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if ((ssn->flags & STREAMTCP_FLAG_4WHS) && PKT_IS_TOSERVER(p)) {"
    },
    {
        "line": 37,
        "fullcodeline": "SCLogDebug(\"ssn %p: SYN/ACK received on 4WHS session\", ssn);"
    },
    {
        "line": 63,
        "fullcodeline": "StreamTcpPacketSetState(p, ssn, TCP_SYN_RECV);"
    },
    {
        "line": 64,
        "fullcodeline": "SCLogDebug(\"ssn %p: =~ 4WHS ssn state is now TCP_SYN_RECV\", ssn);"
    },
    {
        "line": 67,
        "fullcodeline": "ssn->client.isn = TCP_GET_SEQ(p);"
    },
    {
        "line": 68,
        "fullcodeline": "STREAMTCP_SET_RA_BASE_SEQ(&ssn->client, ssn->client.isn);"
    },
    {
        "line": 71,
        "fullcodeline": "ssn->server.window = TCP_GET_WINDOW(p);"
    },
    {
        "line": 94,
        "fullcodeline": "ssn->server.last_ack = TCP_GET_ACK(p);"
    },
    {
        "line": 95,
        "fullcodeline": "ssn->client.last_ack = ssn->client.isn + 1;"
    },
    {
        "line": 131,
        "fullcodeline": "StreamTcpSetEvent(p, STREAM_3WHS_SYNACK_IN_WRONG_DIRECTION);"
    },
    {
        "line": 138,
        "fullcodeline": "if (!(SEQ_EQ(TCP_GET_ACK(p), ssn->client.isn + 1))) {"
    },
    {
        "line": 139,
        "fullcodeline": "StreamTcpSetEvent(p, STREAM_3WHS_SYNACK_WITH_WRONG_ACK);"
    },
    {
        "line": 148,
        "fullcodeline": "} else if (p->tcph->th_flags & TH_SYN) {"
    },
    {
        "line": 133,
        "fullcodeline": "return -1;"
    },
    {
        "line": 143,
        "fullcodeline": "return -1;"
    },
    {
        "line": 149,
        "fullcodeline": "SCLogDebug(\"ssn %p: SYN packet on state SYN_SENT... resent\", ssn);"
    },
    {
        "line": 41,
        "fullcodeline": "if (!(SEQ_EQ(TCP_GET_ACK(p), ssn->server.isn + 1))) {"
    },
    {
        "line": 42,
        "fullcodeline": "StreamTcpSetEvent(p, STREAM_4WHS_SYNACK_WITH_WRONG_ACK);"
    },
    {
        "line": 52,
        "fullcodeline": "if (!(SEQ_EQ(TCP_GET_SEQ(p), ssn->client.isn))) {"
    },
    {
        "line": 53,
        "fullcodeline": "StreamTcpSetEvent(p, STREAM_4WHS_SYNACK_WITH_WRONG_SYN);"
    },
    {
        "line": 77,
        "fullcodeline": "if ((TCP_HAS_TS(p)) &&"
    },
    {
        "line": 78,
        "fullcodeline": "(ssn->server.flags & STREAMTCP_STREAM_FLAG_TIMESTAMP))"
    },
    {
        "line": 80,
        "fullcodeline": "ssn->client.last_ts = TCP_GET_TSVAL(p);"
    },
    {
        "line": 84,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_TIMESTAMP;"
    },
    {
        "line": 99,
        "fullcodeline": "if ((ssn->flags & STREAMTCP_FLAG_SERVER_WSCALE) &&"
    },
    {
        "line": 100,
        "fullcodeline": "(TCP_HAS_WSCALE(p)))"
    },
    {
        "line": 107,
        "fullcodeline": "if ((ssn->flags & STREAMTCP_FLAG_CLIENT_SACKOK) &&"
    },
    {
        "line": 108,
        "fullcodeline": "TCP_GET_SACKOK(p) == 1) {"
    },
    {
        "line": 109,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_SACKOK;"
    },
    {
        "line": 150,
        "fullcodeline": "if (ssn->flags & STREAMTCP_FLAG_4WHS) {"
    },
    {
        "line": 155,
        "fullcodeline": "if (PKT_IS_TOCLIENT(p)) {"
    },
    {
        "line": 47,
        "fullcodeline": "return -1;"
    },
    {
        "line": 58,
        "fullcodeline": "return -1;"
    },
    {
        "line": 102,
        "fullcodeline": "ssn->server.wscale = TCP_GET_WSCALE(p);"
    },
    {
        "line": 151,
        "fullcodeline": "SCLogDebug(\"ssn %p: SYN packet on state SYN_SENT... resent of \""
    },
    {
        "line": 163,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_4WHS;"
    },
    {
        "line": 164,
        "fullcodeline": "SCLogDebug(\"ssn %p: STREAMTCP_FLAG_4WHS flag set\", ssn);"
    },
    {
        "line": 170,
        "fullcodeline": "ssn->server.isn = TCP_GET_SEQ(p);"
    },
    {
        "line": 171,
        "fullcodeline": "STREAMTCP_SET_RA_BASE_SEQ(&ssn->server, ssn->server.isn);"
    },
    {
        "line": 91,
        "fullcodeline": "ssn->server.flags &= ~STREAMTCP_STREAM_FLAG_ZERO_TIMESTAMP;"
    },
    {
        "line": 176,
        "fullcodeline": "if (TCP_HAS_TS(p)) {"
    },
    {
        "line": 186,
        "fullcodeline": "ssn->server.window = TCP_GET_WINDOW(p);"
    },
    {
        "line": 187,
        "fullcodeline": "if (TCP_HAS_WSCALE(p)) {"
    },
    {
        "line": 235,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_ASYNC;"
    },
    {
        "line": 236,
        "fullcodeline": "StreamTcpPacketSetState(p, ssn, TCP_ESTABLISHED);"
    },
    {
        "line": 237,
        "fullcodeline": "SCLogDebug(\"ssn %p: =~ ssn state is now TCP_ESTABLISHED\", ssn);"
    },
    {
        "line": 239,
        "fullcodeline": "ssn->client.window = TCP_GET_WINDOW(p);"
    },
    {
        "line": 240,
        "fullcodeline": "ssn->client.last_ack = TCP_GET_SEQ(p);"
    },
    {
        "line": 241,
        "fullcodeline": "ssn->client.next_win = ssn->client.last_ack + ssn->client.window;"
    },
    {
        "line": 244,
        "fullcodeline": "ssn->server.isn = TCP_GET_ACK(p) - 1;"
    },
    {
        "line": 245,
        "fullcodeline": "STREAMTCP_SET_RA_BASE_SEQ(&ssn->server, ssn->server.isn);"
    },
    {
        "line": 246,
        "fullcodeline": "ssn->server.next_seq = ssn->server.isn + 1;"
    },
    {
        "line": 247,
        "fullcodeline": "ssn->server.last_ack = ssn->server.next_seq;"
    },
    {
        "line": 177,
        "fullcodeline": "ssn->server.last_ts = TCP_GET_TSVAL(p);"
    },
    {
        "line": 178,
        "fullcodeline": "SCLogDebug(\"ssn %p: %02x\", ssn, ssn->server.last_ts);"
    },
    {
        "line": 188,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_SERVER_WSCALE;"
    },
    {
        "line": 195,
        "fullcodeline": "if (TCP_GET_SACKOK(p) == 1) {"
    },
    {
        "line": 219,
        "fullcodeline": "if (stream_config.async_oneside == FALSE)"
    },
    {
        "line": 258,
        "fullcodeline": "if (ssn->flags & STREAMTCP_FLAG_SERVER_WSCALE) {"
    },
    {
        "line": 275,
        "fullcodeline": "if (ssn->flags & STREAMTCP_FLAG_CLIENT_SACKOK) {"
    },
    {
        "line": 189,
        "fullcodeline": "ssn->server.wscale = TCP_GET_WSCALE(p);"
    },
    {
        "line": 191,
        "fullcodeline": "ssn->flags &= ~STREAMTCP_FLAG_SERVER_WSCALE;"
    },
    {
        "line": 226,
        "fullcodeline": "if (!(SEQ_EQ(TCP_GET_SEQ(p), ssn->client.next_seq))) {"
    },
    {
        "line": 227,
        "fullcodeline": "StreamTcpSetEvent(p, STREAM_3WHS_ASYNC_WRONG_SEQ);"
    },
    {
        "line": 259,
        "fullcodeline": "ssn->client.wscale = TCP_WSCALE_MAX;"
    },
    {
        "line": 264,
        "fullcodeline": "if (TCP_HAS_TS(p) &&"
    },
    {
        "line": 265,
        "fullcodeline": "(ssn->client.flags & STREAMTCP_STREAM_FLAG_TIMESTAMP))"
    },
    {
        "line": 267,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_TIMESTAMP;"
    },
    {
        "line": 268,
        "fullcodeline": "ssn->client.flags &= ~STREAMTCP_STREAM_FLAG_TIMESTAMP;"
    },
    {
        "line": 269,
        "fullcodeline": "ssn->client.last_pkt_ts = p->ts.tv_sec;"
    },
    {
        "line": 276,
        "fullcodeline": "ssn->flags |= STREAMTCP_FLAG_SACKOK;"
    },
    {
        "line": 181,
        "fullcodeline": "ssn->server.flags |= STREAMTCP_STREAM_FLAG_ZERO_TIMESTAMP;"
    },
    {
        "line": 198,
        "fullcodeline": "ssn->flags &= ~STREAMTCP_FLAG_CLIENT_SACKOK;"
    },
    {
        "line": 232,
        "fullcodeline": "return -1;"
    },
    {
        "line": 271,
        "fullcodeline": "ssn->client.last_ts = 0;"
    },
    {
        "line": 272,
        "fullcodeline": "ssn->client.flags &= ~STREAMTCP_STREAM_FLAG_ZERO_TIMESTAMP;"
    }
]