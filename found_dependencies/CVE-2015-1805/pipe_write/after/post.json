[
    {
        "line": 3,
        "fullcodeline": "struct file *filp = iocb->ki_filp;"
    },
    {
        "line": 4,
        "fullcodeline": "struct pipe_inode_info *pipe = filp->private_data;"
    },
    {
        "line": 5,
        "fullcodeline": "ssize_t ret = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int do_wakeup = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t total_len = iov_iter_count(from);"
    },
    {
        "line": 14,
        "fullcodeline": "__pipe_lock(pipe);"
    },
    {
        "line": 23,
        "fullcodeline": "chars = total_len & (PAGE_SIZE-1); /* size of the last buffer */"
    },
    {
        "line": 125,
        "fullcodeline": "__pipe_unlock(pipe);"
    },
    {
        "line": 11,
        "fullcodeline": "if (unlikely(total_len == 0))"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pipe->readers) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (pipe->nrbufs && chars != 0) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (ret > 0 && sb_start_write_trylock(file_inode(filp)->i_sb)) {"
    },
    {
        "line": 17,
        "fullcodeline": "send_sig(SIGPIPE, current, 0);"
    },
    {
        "line": 18,
        "fullcodeline": "ret = -EPIPE;"
    },
    {
        "line": 25,
        "fullcodeline": "int lastbuf = (pipe->curbuf + pipe->nrbufs - 1) &"
    },
    {
        "line": 27,
        "fullcodeline": "struct pipe_buffer *buf = pipe->bufs + lastbuf;"
    },
    {
        "line": 28,
        "fullcodeline": "const struct pipe_buf_operations *ops = buf->ops;"
    },
    {
        "line": 29,
        "fullcodeline": "int offset = buf->offset + buf->len;"
    },
    {
        "line": 58,
        "fullcodeline": "bufs = pipe->nrbufs;"
    },
    {
        "line": 120,
        "fullcodeline": "pipe->waiting_writers++;"
    },
    {
        "line": 121,
        "fullcodeline": "pipe_wait(pipe);"
    },
    {
        "line": 122,
        "fullcodeline": "pipe->waiting_writers--;"
    },
    {
        "line": 127,
        "fullcodeline": "wake_up_interruptible_sync_poll(&pipe->wait, POLLIN | POLLRDNORM);"
    },
    {
        "line": 128,
        "fullcodeline": "kill_fasync(&pipe->fasync_readers, SIGIO, POLL_IN);"
    },
    {
        "line": 131,
        "fullcodeline": "int err = file_update_time(filp);"
    },
    {
        "line": 134,
        "fullcodeline": "sb_end_write(file_inode(filp)->i_sb);"
    },
    {
        "line": 31,
        "fullcodeline": "if (ops->can_merge && offset + chars <= PAGE_SIZE) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (!pipe->readers) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (bufs < pipe->buffers) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (bufs < pipe->buffers)"
    },
    {
        "line": 105,
        "fullcodeline": "if (filp->f_flags & O_NONBLOCK) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (signal_pending(current)) {"
    },
    {
        "line": 26,
        "fullcodeline": "(pipe->buffers - 1);"
    },
    {
        "line": 32,
        "fullcodeline": "int error = ops->confirm(pipe, buf);"
    },
    {
        "line": 36,
        "fullcodeline": "ret = copy_page_from_iter(buf->page, offset, chars, from);"
    },
    {
        "line": 41,
        "fullcodeline": "do_wakeup = 1;"
    },
    {
        "line": 42,
        "fullcodeline": "buf->len += chars;"
    },
    {
        "line": 43,
        "fullcodeline": "ret = chars;"
    },
    {
        "line": 53,
        "fullcodeline": "send_sig(SIGPIPE, current, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "int newbuf = (pipe->curbuf + bufs) & (pipe->buffers-1);"
    },
    {
        "line": 61,
        "fullcodeline": "struct pipe_buffer *buf = pipe->bufs + newbuf;"
    },
    {
        "line": 62,
        "fullcodeline": "struct page *page = pipe->tmp_page;"
    },
    {
        "line": 78,
        "fullcodeline": "do_wakeup = 1;"
    },
    {
        "line": 79,
        "fullcodeline": "copied = copy_page_from_iter(page, 0, PAGE_SIZE, from);"
    },
    {
        "line": 85,
        "fullcodeline": "ret += copied;"
    },
    {
        "line": 88,
        "fullcodeline": "buf->page = page;"
    },
    {
        "line": 89,
        "fullcodeline": "buf->ops = &anon_pipe_buf_ops;"
    },
    {
        "line": 90,
        "fullcodeline": "buf->offset = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "buf->len = copied;"
    },
    {
        "line": 92,
        "fullcodeline": "buf->flags = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "pipe->nrbufs = ++bufs;"
    },
    {
        "line": 98,
        "fullcodeline": "pipe->tmp_page = NULL;"
    },
    {
        "line": 116,
        "fullcodeline": "wake_up_interruptible_sync_poll(&pipe->wait, POLLIN | POLLRDNORM);"
    },
    {
        "line": 117,
        "fullcodeline": "kill_fasync(&pipe->fasync_readers, SIGIO, POLL_IN);"
    },
    {
        "line": 118,
        "fullcodeline": "do_wakeup = 0;"
    },
    {
        "line": 133,
        "fullcodeline": "ret = err;"
    },
    {
        "line": 37,
        "fullcodeline": "if (unlikely(ret < chars)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!iov_iter_count(from))"
    },
    {
        "line": 54,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 65,
        "fullcodeline": "if (!page) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (unlikely(copied < PAGE_SIZE && iov_iter_count(from))) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (is_packetized(filp)) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (!iov_iter_count(from))"
    },
    {
        "line": 106,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 111,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 38,
        "fullcodeline": "error = -EFAULT;"
    },
    {
        "line": 55,
        "fullcodeline": "ret = -EPIPE;"
    },
    {
        "line": 66,
        "fullcodeline": "page = alloc_page(GFP_HIGHUSER);"
    },
    {
        "line": 71,
        "fullcodeline": "pipe->tmp_page = page;"
    },
    {
        "line": 94,
        "fullcodeline": "buf->ops = &packet_pipe_buf_ops;"
    },
    {
        "line": 95,
        "fullcodeline": "buf->flags = PIPE_BUF_FLAG_PACKET;"
    },
    {
        "line": 107,
        "fullcodeline": "ret = -EAGAIN;"
    },
    {
        "line": 112,
        "fullcodeline": "ret = -ERESTARTSYS;"
    },
    {
        "line": 67,
        "fullcodeline": "if (unlikely(!page)) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 68,
        "fullcodeline": "ret = ret ? : -ENOMEM;"
    },
    {
        "line": 82,
        "fullcodeline": "ret = -EFAULT;"
    }
]