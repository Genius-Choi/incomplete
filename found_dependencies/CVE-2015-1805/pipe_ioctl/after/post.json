[
    {
        "line": 3,
        "fullcodeline": "struct pipe_inode_info *pipe = filp->private_data;"
    },
    {
        "line": 8,
        "fullcodeline": "__pipe_lock(pipe);"
    },
    {
        "line": 9,
        "fullcodeline": "count = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "buf = pipe->curbuf;"
    },
    {
        "line": 11,
        "fullcodeline": "nrbufs = pipe->nrbufs;"
    },
    {
        "line": 16,
        "fullcodeline": "__pipe_unlock(pipe);"
    },
    {
        "line": 12,
        "fullcodeline": "while (--nrbufs >= 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "return -ENOIOCTLCMD;"
    },
    {
        "line": 13,
        "fullcodeline": "count += pipe->bufs[buf].len;"
    },
    {
        "line": 14,
        "fullcodeline": "buf = (buf+1) & (pipe->buffers - 1);"
    }
]