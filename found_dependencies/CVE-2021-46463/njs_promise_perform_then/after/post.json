[
    {
        "line": 6,
        "fullcodeline": "njs_value_t             arguments[2];"
    },
    {
        "line": 12,
        "fullcodeline": "njs_assert(njs_is_promise(value));"
    },
    {
        "line": 22,
        "fullcodeline": "promise = njs_promise(value);"
    },
    {
        "line": 23,
        "fullcodeline": "data = njs_data(&promise->value);"
    },
    {
        "line": 25,
        "fullcodeline": "fulfilled_reaction = njs_mp_alloc(vm->mem_pool,"
    },
    {
        "line": 32,
        "fullcodeline": "fulfilled_reaction->capability = capability;"
    },
    {
        "line": 34,
        "fullcodeline": "fulfilled_reaction->type = NJS_PROMISE_FULFILL;"
    },
    {
        "line": 36,
        "fullcodeline": "rejected_reaction = njs_mp_alloc(vm->mem_pool,"
    },
    {
        "line": 43,
        "fullcodeline": "rejected_reaction->capability = capability;"
    },
    {
        "line": 45,
        "fullcodeline": "rejected_reaction->type = NJS_PROMISE_REJECTED;"
    },
    {
        "line": 77,
        "fullcodeline": "data->is_handled = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "if (!njs_is_function(fulfilled)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!njs_is_function(rejected)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (njs_slow_path(fulfilled_reaction == NULL)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (njs_slow_path(rejected_reaction == NULL)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (data->state == NJS_PROMISE_PENDING) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (capability == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "fulfilled = njs_value_arg(&njs_value_undefined);"
    },
    {
        "line": 19,
        "fullcodeline": "rejected = njs_value_arg(&njs_value_undefined);"
    },
    {
        "line": 28,
        "fullcodeline": "njs_memory_error(vm);"
    },
    {
        "line": 39,
        "fullcodeline": "njs_memory_error(vm);"
    },
    {
        "line": 48,
        "fullcodeline": "njs_queue_insert_tail(&data->fulfill_queue, &fulfilled_reaction->link);"
    },
    {
        "line": 49,
        "fullcodeline": "njs_queue_insert_tail(&data->reject_queue, &rejected_reaction->link);"
    },
    {
        "line": 80,
        "fullcodeline": "njs_vm_retval_set(vm, &njs_value_undefined);"
    },
    {
        "line": 52,
        "fullcodeline": "function = njs_promise_create_function(vm,"
    },
    {
        "line": 54,
        "fullcodeline": "function->u.native = njs_promise_reaction_job;"
    },
    {
        "line": 69,
        "fullcodeline": "arguments[1] = data->result;"
    },
    {
        "line": 71,
        "fullcodeline": "ret = njs_promise_add_event(vm, function, arguments, 2);"
    },
    {
        "line": 83,
        "fullcodeline": "njs_vm_retval_set(vm, &capability->promise);"
    },
    {
        "line": 56,
        "fullcodeline": "if (data->state == NJS_PROMISE_REJECTED) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 57,
        "fullcodeline": "njs_set_data(&arguments[0], rejected_reaction, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "ret = njs_promise_host_rejection_tracker(vm, promise,"
    },
    {
        "line": 61,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 66,
        "fullcodeline": "njs_set_data(&arguments[0], fulfilled_reaction, 0);"
    }
]