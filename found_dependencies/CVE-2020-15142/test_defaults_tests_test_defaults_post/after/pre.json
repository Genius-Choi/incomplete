[
    {
        "line": 21,
        "fullcodeline": "url = \"{}/tests/test_defaults\".format(client.base_url)"
    },
    {
        "line": 23,
        "fullcodeline": "headers: Dict[str, Any] = client.get_headers()"
    },
    {
        "line": 25,
        "fullcodeline": "json_datetime_prop = datetime_prop.isoformat() if datetime_prop else None"
    },
    {
        "line": 27,
        "fullcodeline": "json_date_prop = date_prop.isoformat() if date_prop else None"
    },
    {
        "line": 45,
        "fullcodeline": "json_enum_prop = enum_prop.value if enum_prop else None"
    },
    {
        "line": 47,
        "fullcodeline": "params: Dict[str, Any] = {}"
    },
    {
        "line": 67,
        "fullcodeline": "json_json_body = json_body"
    },
    {
        "line": 69,
        "fullcodeline": "response = httpx.post(url=url, headers=headers, json=json_json_body, params=params,)"
    },
    {
        "line": 29,
        "fullcodeline": "if list_prop is None:"
    },
    {
        "line": 38,
        "fullcodeline": "if union_prop is None:"
    },
    {
        "line": 48,
        "fullcodeline": "if string_prop is not None:"
    },
    {
        "line": 50,
        "fullcodeline": "if datetime_prop is not None:"
    },
    {
        "line": 52,
        "fullcodeline": "if date_prop is not None:"
    },
    {
        "line": 54,
        "fullcodeline": "if float_prop is not None:"
    },
    {
        "line": 56,
        "fullcodeline": "if int_prop is not None:"
    },
    {
        "line": 58,
        "fullcodeline": "if boolean_prop is not None:"
    },
    {
        "line": 60,
        "fullcodeline": "if list_prop is not None:"
    },
    {
        "line": 62,
        "fullcodeline": "if union_prop is not None:"
    },
    {
        "line": 64,
        "fullcodeline": "if enum_prop is not None:"
    },
    {
        "line": 71,
        "fullcodeline": "if response.status_code == 200:"
    },
    {
        "line": 73,
        "fullcodeline": "if response.status_code == 422:"
    },
    {
        "line": 30,
        "fullcodeline": "json_list_prop = None"
    },
    {
        "line": 32,
        "fullcodeline": "json_list_prop = []"
    },
    {
        "line": 39,
        "fullcodeline": "json_union_prop: Optional[Union[Optional[float], Optional[str]]] = None"
    },
    {
        "line": 49,
        "fullcodeline": "params[\"string_prop\"] = string_prop"
    },
    {
        "line": 51,
        "fullcodeline": "params[\"datetime_prop\"] = json_datetime_prop"
    },
    {
        "line": 53,
        "fullcodeline": "params[\"date_prop\"] = json_date_prop"
    },
    {
        "line": 55,
        "fullcodeline": "params[\"float_prop\"] = float_prop"
    },
    {
        "line": 57,
        "fullcodeline": "params[\"int_prop\"] = int_prop"
    },
    {
        "line": 59,
        "fullcodeline": "params[\"boolean_prop\"] = boolean_prop"
    },
    {
        "line": 61,
        "fullcodeline": "params[\"list_prop\"] = json_list_prop"
    },
    {
        "line": 63,
        "fullcodeline": "params[\"union_prop\"] = json_union_prop"
    },
    {
        "line": 65,
        "fullcodeline": "params[\"enum_prop\"] = json_enum_prop"
    },
    {
        "line": 33,
        "fullcodeline": "for list_prop_item_data in list_prop:"
    },
    {
        "line": 40,
        "fullcodeline": "elif isinstance(union_prop, float):"
    },
    {
        "line": 74,
        "fullcodeline": "return HTTPValidationError.from_dict(cast(Dict[str, Any], response.json()))"
    },
    {
        "line": 76,
        "fullcodeline": "raise ApiResponseError(response=response)"
    },
    {
        "line": 41,
        "fullcodeline": "json_union_prop = union_prop"
    },
    {
        "line": 43,
        "fullcodeline": "json_union_prop = union_prop"
    },
    {
        "line": 34,
        "fullcodeline": "list_prop_item = list_prop_item_data.value"
    },
    {
        "line": 36,
        "fullcodeline": "json_list_prop.append(list_prop_item)"
    }
]