[
    {
        "line": 4,
        "fullcodeline": "u_int caplen = ND_BYTES_AVAILABLE_AFTER(p);"
    },
    {
        "line": 16,
        "fullcodeline": "b = (u_char *)nd_malloc(ndo, caplen);"
    },
    {
        "line": 42,
        "fullcodeline": "sb = ndo->ndo_packetp;"
    },
    {
        "line": 43,
        "fullcodeline": "se = ndo->ndo_snapend;"
    },
    {
        "line": 44,
        "fullcodeline": "ndo->ndo_packetp = b;"
    },
    {
        "line": 45,
        "fullcodeline": "ndo->ndo_snapend = t;"
    },
    {
        "line": 46,
        "fullcodeline": "length = ND_BYTES_AVAILABLE_AFTER(b);"
    },
    {
        "line": 51,
        "fullcodeline": "proto = GET_U_1(b); /* start with a one-octet codepoint guess */"
    },
    {
        "line": 66,
        "fullcodeline": "proto = GET_BE_U_2(b); /* next guess - load two octets */"
    },
    {
        "line": 87,
        "fullcodeline": "ndo->ndo_packetp = sb;"
    },
    {
        "line": 88,
        "fullcodeline": "ndo->ndo_snapend = se;"
    },
    {
        "line": 92,
        "fullcodeline": "ndo->ndo_packetp = sb;"
    },
    {
        "line": 93,
        "fullcodeline": "ndo->ndo_snapend = se;"
    },
    {
        "line": 94,
        "fullcodeline": "nd_print_trunc(ndo);"
    },
    {
        "line": 10,
        "fullcodeline": "if (caplen == 0)"
    },
    {
        "line": 13,
        "fullcodeline": "if (length == 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (b == NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "for (s = p, t = b, i = caplen; i != 0; i--) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (length < 1)"
    },
    {
        "line": 64,
        "fullcodeline": "if (length < 2)"
    },
    {
        "line": 26,
        "fullcodeline": "c = GET_U_1(s);"
    },
    {
        "line": 27,
        "fullcodeline": "s++;"
    },
    {
        "line": 35,
        "fullcodeline": "*t++ = c;"
    },
    {
        "line": 55,
        "fullcodeline": "ip_print(ndo, b + 1, length - 1);"
    },
    {
        "line": 58,
        "fullcodeline": "ip6_print(ndo, b + 1, length - 1);"
    },
    {
        "line": 69,
        "fullcodeline": "case (PPP_ADDRESS << 8 | PPP_CONTROL): /* looks like a PPP frame */"
    },
    {
        "line": 72,
        "fullcodeline": "proto = GET_BE_U_2(b + 2); /* load the PPP proto-id */"
    },
    {
        "line": 28,
        "fullcodeline": "if (c == 0x7d) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (length < 4)"
    },
    {
        "line": 73,
        "fullcodeline": "if ((proto & 0xff00) == 0x7e00)"
    },
    {
        "line": 79,
        "fullcodeline": "if ((proto & 0xff00) == 0x7e00)"
    },
    {
        "line": 31,
        "fullcodeline": "i--;"
    },
    {
        "line": 32,
        "fullcodeline": "c = GET_U_1(s) ^ 0x20;"
    },
    {
        "line": 33,
        "fullcodeline": "s++;"
    },
    {
        "line": 74,
        "fullcodeline": "ND_PRINT(\"(protocol 0x%04x invalid)\", proto);"
    },
    {
        "line": 80,
        "fullcodeline": "ND_PRINT(\"(protocol 0x%04x invalid)\", proto);"
    },
    {
        "line": 29,
        "fullcodeline": "if (i <= 1)"
    },
    {
        "line": 76,
        "fullcodeline": "handle_ppp(ndo, proto, b + 4, length - 4);"
    },
    {
        "line": 82,
        "fullcodeline": "handle_ppp(ndo, proto, b + 2, length - 2);"
    }
]