[
    {
        "line": 4,
        "fullcodeline": "u_int caplen = ND_BYTES_AVAILABLE_AFTER(p);"
    },
    {
        "line": 15,
        "fullcodeline": "b = (u_char *)malloc(caplen);"
    },
    {
        "line": 49,
        "fullcodeline": "length = ND_BYTES_AVAILABLE_AFTER(b);"
    },
    {
        "line": 54,
        "fullcodeline": "proto = GET_U_1(b); /* start with a one-octet codepoint guess */"
    },
    {
        "line": 69,
        "fullcodeline": "proto = GET_BE_U_2(b); /* next guess - load two octets */"
    },
    {
        "line": 90,
        "fullcodeline": "nd_pop_packet_info(ndo);"
    },
    {
        "line": 94,
        "fullcodeline": "nd_pop_packet_info(ndo);"
    },
    {
        "line": 95,
        "fullcodeline": "nd_print_trunc(ndo);"
    },
    {
        "line": 9,
        "fullcodeline": "if (caplen == 0)"
    },
    {
        "line": 12,
        "fullcodeline": "if (length == 0)"
    },
    {
        "line": 16,
        "fullcodeline": "if (b == NULL) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (s = p, t = b, i = caplen; i != 0; i--) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!nd_push_buffer(ndo, b, b, (u_int)(t - b))) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (length < 1)"
    },
    {
        "line": 67,
        "fullcodeline": "if (length < 2)"
    },
    {
        "line": 17,
        "fullcodeline": "(*ndo->ndo_error)(ndo, S_ERR_ND_MEM_ALLOC,"
    },
    {
        "line": 27,
        "fullcodeline": "c = GET_U_1(s);"
    },
    {
        "line": 28,
        "fullcodeline": "s++;"
    },
    {
        "line": 36,
        "fullcodeline": "*t++ = c;"
    },
    {
        "line": 45,
        "fullcodeline": "free(b);"
    },
    {
        "line": 46,
        "fullcodeline": "(*ndo->ndo_error)(ndo, S_ERR_ND_MEM_ALLOC,"
    },
    {
        "line": 58,
        "fullcodeline": "ip_print(ndo, b + 1, length - 1);"
    },
    {
        "line": 61,
        "fullcodeline": "ip6_print(ndo, b + 1, length - 1);"
    },
    {
        "line": 72,
        "fullcodeline": "case (PPP_ADDRESS << 8 | PPP_CONTROL): /* looks like a PPP frame */"
    },
    {
        "line": 75,
        "fullcodeline": "proto = GET_BE_U_2(b + 2); /* load the PPP proto-id */"
    },
    {
        "line": 29,
        "fullcodeline": "if (c == 0x7d) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (length < 4)"
    },
    {
        "line": 76,
        "fullcodeline": "if ((proto & 0xff00) == 0x7e00)"
    },
    {
        "line": 82,
        "fullcodeline": "if ((proto & 0xff00) == 0x7e00)"
    },
    {
        "line": 32,
        "fullcodeline": "i--;"
    },
    {
        "line": 33,
        "fullcodeline": "c = GET_U_1(s) ^ 0x20;"
    },
    {
        "line": 34,
        "fullcodeline": "s++;"
    },
    {
        "line": 77,
        "fullcodeline": "ND_PRINT(\"(protocol 0x%04x invalid)\", proto);"
    },
    {
        "line": 83,
        "fullcodeline": "ND_PRINT(\"(protocol 0x%04x invalid)\", proto);"
    },
    {
        "line": 30,
        "fullcodeline": "if (i <= 1)"
    },
    {
        "line": 79,
        "fullcodeline": "handle_ppp(ndo, proto, b + 4, length - 4);"
    },
    {
        "line": 85,
        "fullcodeline": "handle_ppp(ndo, proto, b + 2, length - 2);"
    }
]