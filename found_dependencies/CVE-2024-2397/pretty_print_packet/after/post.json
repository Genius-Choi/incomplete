[
    {
        "line": 4,
        "fullcodeline": "u_int hdrlen = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int invalid_header = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "ts_print(ndo, &tvbuf);"
    },
    {
        "line": 91,
        "fullcodeline": "ndo->ndo_snapend = sp + h->caplen;"
    },
    {
        "line": 92,
        "fullcodeline": "ndo->ndo_packetp = sp;"
    },
    {
        "line": 94,
        "fullcodeline": "ndo->ndo_protocol = \"\";"
    },
    {
        "line": 95,
        "fullcodeline": "ndo->ndo_ll_hdr_len = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "hdrlen = ndo->ndo_ll_hdr_len;"
    },
    {
        "line": 120,
        "fullcodeline": "nd_pop_all_packet_info(ndo);"
    },
    {
        "line": 129,
        "fullcodeline": "ndo->ndo_snapend = sp + h->caplen;"
    },
    {
        "line": 130,
        "fullcodeline": "ndo->ndo_packetp = sp;"
    },
    {
        "line": 189,
        "fullcodeline": "ND_PRINT(\"\\n\");"
    },
    {
        "line": 190,
        "fullcodeline": "nd_free_all(ndo);"
    },
    {
        "line": 7,
        "fullcodeline": "if (ndo->ndo_print_sampling && packets_captured % ndo->ndo_print_sampling != 0)"
    },
    {
        "line": 22,
        "fullcodeline": "if (h->caplen == 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (h->len == 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (h->caplen > MAXIMUM_SNAPLEN) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (h->len > MAXIMUM_SNAPLEN) {"
    },
    {
        "line": 96,
        "fullcodeline": "switch (setjmp(ndo->ndo_early_end)) {"
    },
    {
        "line": 16,
        "fullcodeline": "ND_PRINT(\"%5u  \", packets_captured);"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT(\"caplen %u len %u \", h->caplen, h->len);"
    },
    {
        "line": 23,
        "fullcodeline": "invalid_header = 1;"
    },
    {
        "line": 24,
        "fullcodeline": "ND_PRINT(\"[Invalid header: caplen==0\");"
    },
    {
        "line": 32,
        "fullcodeline": "ND_PRINT(\" len==0\");"
    },
    {
        "line": 47,
        "fullcodeline": "ND_PRINT(\" caplen(%u) > %u\", h->caplen, MAXIMUM_SNAPLEN);"
    },
    {
        "line": 55,
        "fullcodeline": "ND_PRINT(\" len(%u) > %u\", h->len, MAXIMUM_SNAPLEN);"
    },
    {
        "line": 58,
        "fullcodeline": "ND_PRINT(\"]\\n\");"
    },
    {
        "line": 99,
        "fullcodeline": "(ndo->ndo_if_printer)(ndo, h, sp);"
    },
    {
        "line": 103,
        "fullcodeline": "nd_print_trunc(ndo);"
    },
    {
        "line": 105,
        "fullcodeline": "ndo->ndo_ll_hdr_len = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "if (!invalid_header) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (!invalid_header) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!invalid_header) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (ndo->ndo_Xflag > 1) {"
    },
    {
        "line": 28,
        "fullcodeline": "invalid_header = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "ND_PRINT(\"[Invalid header:\");"
    },
    {
        "line": 33,
        "fullcodeline": "} else if (h->len < h->caplen) {"
    },
    {
        "line": 43,
        "fullcodeline": "invalid_header = 1;"
    },
    {
        "line": 44,
        "fullcodeline": "ND_PRINT(\"[Invalid header:\");"
    },
    {
        "line": 51,
        "fullcodeline": "invalid_header = 1;"
    },
    {
        "line": 52,
        "fullcodeline": "ND_PRINT(\"[Invalid header:\");"
    },
    {
        "line": 139,
        "fullcodeline": "hex_and_ascii_print(ndo, \"\\n\\t\", sp, h->caplen);"
    },
    {
        "line": 31,
        "fullcodeline": "ND_PRINT(\",\");"
    },
    {
        "line": 39,
        "fullcodeline": "ND_PRINT(\" len(%u) < caplen(%u)\", h->len, h->caplen);"
    },
    {
        "line": 46,
        "fullcodeline": "ND_PRINT(\",\");"
    },
    {
        "line": 54,
        "fullcodeline": "ND_PRINT(\",\");"
    },
    {
        "line": 34,
        "fullcodeline": "if (!invalid_header) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (h->caplen > hdrlen)"
    },
    {
        "line": 154,
        "fullcodeline": "if (ndo->ndo_xflag > 1) {"
    },
    {
        "line": 35,
        "fullcodeline": "invalid_header = 1;"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT(\"[Invalid header:\");"
    },
    {
        "line": 147,
        "fullcodeline": "hex_and_ascii_print(ndo, \"\\n\\t\", sp + hdrlen,"
    },
    {
        "line": 158,
        "fullcodeline": "hex_print(ndo, \"\\n\\t\", sp, h->caplen);"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT(\",\");"
    },
    {
        "line": 148,
        "fullcodeline": "h->caplen - hdrlen);"
    },
    {
        "line": 165,
        "fullcodeline": "if (h->caplen > hdrlen)"
    },
    {
        "line": 173,
        "fullcodeline": "if (ndo->ndo_Aflag > 1) {"
    },
    {
        "line": 166,
        "fullcodeline": "hex_print(ndo, \"\\n\\t\", sp + hdrlen,"
    },
    {
        "line": 177,
        "fullcodeline": "ascii_print(ndo, sp, h->caplen);"
    },
    {
        "line": 167,
        "fullcodeline": "h->caplen - hdrlen);"
    },
    {
        "line": 184,
        "fullcodeline": "if (h->caplen > hdrlen)"
    },
    {
        "line": 185,
        "fullcodeline": "ascii_print(ndo, sp + hdrlen, h->caplen - hdrlen);"
    }
]