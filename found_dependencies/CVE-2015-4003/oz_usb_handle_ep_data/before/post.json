[
    {
        "line": 4,
        "fullcodeline": "struct oz_data *data_hdr = (struct oz_data *)usb_hdr;"
    },
    {
        "line": 8,
        "fullcodeline": "struct oz_multiple_fixed *body ="
    },
    {
        "line": 10,
        "fullcodeline": "u8 *data = body->data;"
    },
    {
        "line": 11,
        "fullcodeline": "int n = (len - sizeof(struct oz_multiple_fixed)+1)"
    },
    {
        "line": 21,
        "fullcodeline": "struct oz_isoc_fixed *body ="
    },
    {
        "line": 23,
        "fullcodeline": "int data_len = len-sizeof(struct oz_isoc_fixed)+1;"
    },
    {
        "line": 24,
        "fullcodeline": "int unit_size = body->unit_size;"
    },
    {
        "line": 25,
        "fullcodeline": "u8 *data = body->data;"
    },
    {
        "line": 31,
        "fullcodeline": "count = data_len/unit_size;"
    },
    {
        "line": 9,
        "fullcodeline": "(struct oz_multiple_fixed *)data_hdr;"
    },
    {
        "line": 13,
        "fullcodeline": "while (n--) {"
    },
    {
        "line": 22,
        "fullcodeline": "(struct oz_isoc_fixed *)data_hdr;"
    },
    {
        "line": 29,
        "fullcodeline": "if (!unit_size)"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 14,
        "fullcodeline": "oz_hcd_data_ind(usb_ctx->hport, body->endpoint,"
    },
    {
        "line": 16,
        "fullcodeline": "data += body->unit_size;"
    },
    {
        "line": 33,
        "fullcodeline": "oz_hcd_data_ind(usb_ctx->hport,"
    },
    {
        "line": 35,
        "fullcodeline": "data += unit_size;"
    }
]