[
    {
        "line": 13,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 27,
        "fullcodeline": "base_gfn = mem->guest_phys_addr >> PAGE_SHIFT;"
    },
    {
        "line": 28,
        "fullcodeline": "npages = mem->memory_size >> PAGE_SHIFT;"
    },
    {
        "line": 30,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 37,
        "fullcodeline": "new = old = *memslot;"
    },
    {
        "line": 39,
        "fullcodeline": "new.id = mem->slot;"
    },
    {
        "line": 40,
        "fullcodeline": "new.base_gfn = base_gfn;"
    },
    {
        "line": 41,
        "fullcodeline": "new.npages = npages;"
    },
    {
        "line": 42,
        "fullcodeline": "new.flags = mem->flags;"
    },
    {
        "line": 45,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 50,
        "fullcodeline": "r = -EEXIST;"
    },
    {
        "line": 65,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 157,
        "fullcodeline": "r = kvm_arch_prepare_memory_region(kvm, &new, old, mem, user_alloc);"
    },
    {
        "line": 168,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 169,
        "fullcodeline": "slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);"
    },
    {
        "line": 172,
        "fullcodeline": "memcpy(slots, kvm->memslots, sizeof(struct kvm_memslots));"
    },
    {
        "line": 175,
        "fullcodeline": "slots->generation++;"
    },
    {
        "line": 185,
        "fullcodeline": "slots->memslots[mem->slot] = new;"
    },
    {
        "line": 186,
        "fullcodeline": "old_memslots = kvm->memslots;"
    },
    {
        "line": 187,
        "fullcodeline": "rcu_assign_pointer(kvm->memslots, slots);"
    },
    {
        "line": 188,
        "fullcodeline": "synchronize_srcu_expedited(&kvm->srcu);"
    },
    {
        "line": 190,
        "fullcodeline": "kvm_arch_commit_memory_region(kvm, mem, old, user_alloc);"
    },
    {
        "line": 192,
        "fullcodeline": "kvm_free_physmem_slot(&old, &new);"
    },
    {
        "line": 193,
        "fullcodeline": "kfree(old_memslots);"
    },
    {
        "line": 198,
        "fullcodeline": "kvm_free_physmem_slot(&new, &old);"
    },
    {
        "line": 15,
        "fullcodeline": "if (mem->memory_size & (PAGE_SIZE - 1))"
    },
    {
        "line": 17,
        "fullcodeline": "if (mem->guest_phys_addr & (PAGE_SIZE - 1))"
    },
    {
        "line": 19,
        "fullcodeline": "if (user_alloc && (mem->userspace_addr & (PAGE_SIZE - 1)))"
    },
    {
        "line": 21,
        "fullcodeline": "if (mem->slot >= KVM_MEMORY_SLOTS + KVM_PRIVATE_MEM_SLOTS)"
    },
    {
        "line": 23,
        "fullcodeline": "if (mem->guest_phys_addr + mem->memory_size < mem->guest_phys_addr)"
    },
    {
        "line": 31,
        "fullcodeline": "if (npages > KVM_MEM_MAX_NR_PAGES)"
    },
    {
        "line": 34,
        "fullcodeline": "if (!npages)"
    },
    {
        "line": 46,
        "fullcodeline": "if (npages && old.npages && npages != old.npages)"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < KVM_MEMORY_SLOTS; ++i) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (!(new.flags & KVM_MEM_LOG_DIRTY_PAGES))"
    },
    {
        "line": 69,
        "fullcodeline": "if (npages && !new.rmap) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!npages)"
    },
    {
        "line": 81,
        "fullcodeline": "for (i = 0; i < KVM_NR_PAGE_SIZES - 1; ++i) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((new.flags & KVM_MEM_LOG_DIRTY_PAGES) && !new.dirty_bitmap) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (!npages) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (!slots)"
    },
    {
        "line": 173,
        "fullcodeline": "if (mem->slot >= slots->nmemslots)"
    },
    {
        "line": 178,
        "fullcodeline": "if (!npages) {"
    },
    {
        "line": 35,
        "fullcodeline": "mem->flags &= ~KVM_MEM_LOG_DIRTY_PAGES;"
    },
    {
        "line": 63,
        "fullcodeline": "new.dirty_bitmap = NULL;"
    },
    {
        "line": 70,
        "fullcodeline": "new.rmap = vzalloc(npages * sizeof(*new.rmap));"
    },
    {
        "line": 75,
        "fullcodeline": "new.user_alloc = user_alloc;"
    },
    {
        "line": 76,
        "fullcodeline": "new.userspace_addr = mem->userspace_addr;"
    },
    {
        "line": 85,
        "fullcodeline": "int level = i + 2;"
    },
    {
        "line": 88,
        "fullcodeline": "(void)level;"
    },
    {
        "line": 93,
        "fullcodeline": "lpages = 1 + ((base_gfn + npages - 1)"
    },
    {
        "line": 95,
        "fullcodeline": "lpages -= base_gfn >> KVM_HPAGE_GFN_SHIFT(level);"
    },
    {
        "line": 97,
        "fullcodeline": "new.lpage_info[i] = vzalloc(lpages * sizeof(*new.lpage_info[i]));"
    },
    {
        "line": 106,
        "fullcodeline": "ugfn = new.userspace_addr >> PAGE_SHIFT;"
    },
    {
        "line": 133,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 134,
        "fullcodeline": "slots = kzalloc(sizeof(struct kvm_memslots), GFP_KERNEL);"
    },
    {
        "line": 137,
        "fullcodeline": "memcpy(slots, kvm->memslots, sizeof(struct kvm_memslots));"
    },
    {
        "line": 140,
        "fullcodeline": "slots->generation++;"
    },
    {
        "line": 141,
        "fullcodeline": "slots->memslots[mem->slot].flags |= KVM_MEMSLOT_INVALID;"
    },
    {
        "line": 143,
        "fullcodeline": "old_memslots = kvm->memslots;"
    },
    {
        "line": 144,
        "fullcodeline": "rcu_assign_pointer(kvm->memslots, slots);"
    },
    {
        "line": 145,
        "fullcodeline": "synchronize_srcu_expedited(&kvm->srcu);"
    },
    {
        "line": 153,
        "fullcodeline": "kvm_arch_flush_shadow(kvm);"
    },
    {
        "line": 154,
        "fullcodeline": "kfree(old_memslots);"
    },
    {
        "line": 163,
        "fullcodeline": "r = kvm_iommu_map_pages(kvm, &new);"
    },
    {
        "line": 174,
        "fullcodeline": "slots->nmemslots = mem->slot + 1;"
    },
    {
        "line": 179,
        "fullcodeline": "new.rmap = NULL;"
    },
    {
        "line": 180,
        "fullcodeline": "new.dirty_bitmap = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "if (s == memslot || !s->npages)"
    },
    {
        "line": 56,
        "fullcodeline": "if (!((base_gfn + npages <= s->base_gfn) ||"
    },
    {
        "line": 72,
        "fullcodeline": "if (!new.rmap)"
    },
    {
        "line": 99,
        "fullcodeline": "if (!new.lpage_info[i])"
    },
    {
        "line": 102,
        "fullcodeline": "if (base_gfn & (KVM_PAGES_PER_HPAGE(level) - 1))"
    },
    {
        "line": 104,
        "fullcodeline": "if ((base_gfn+npages) & (KVM_PAGES_PER_HPAGE(level) - 1))"
    },
    {
        "line": 112,
        "fullcodeline": "if ((base_gfn ^ ugfn) & (KVM_PAGES_PER_HPAGE(level) - 1) ||"
    },
    {
        "line": 122,
        "fullcodeline": "if (kvm_create_dirty_bitmap(&new) < 0)"
    },
    {
        "line": 135,
        "fullcodeline": "if (!slots)"
    },
    {
        "line": 138,
        "fullcodeline": "if (mem->slot >= slots->nmemslots)"
    },
    {
        "line": 181,
        "fullcodeline": "for (i = 0; i < KVM_NR_PAGE_SIZES - 1; ++i)"
    },
    {
        "line": 182,
        "fullcodeline": "new.lpage_info[i] = NULL;"
    },
    {
        "line": 103,
        "fullcodeline": "new.lpage_info[i][0].write_count = 1;"
    },
    {
        "line": 105,
        "fullcodeline": "new.lpage_info[i][lpages - 1].write_count = 1;"
    },
    {
        "line": 113,
        "fullcodeline": "!largepages_enabled)"
    },
    {
        "line": 139,
        "fullcodeline": "slots->nmemslots = mem->slot + 1;"
    },
    {
        "line": 57,
        "fullcodeline": "(base_gfn >= s->base_gfn + s->npages)))"
    },
    {
        "line": 94,
        "fullcodeline": ">> KVM_HPAGE_GFN_SHIFT(level));"
    },
    {
        "line": 114,
        "fullcodeline": "for (j = 0; j < lpages; ++j)"
    },
    {
        "line": 115,
        "fullcodeline": "new.lpage_info[i][j].write_count = 1;"
    }
]