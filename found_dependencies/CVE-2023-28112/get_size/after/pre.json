[
    {
        "line": 4,
        "fullcodeline": "absolute_url = url"
    },
    {
        "line": 20,
        "fullcodeline": "upload = Upload.get_from_url(absolute_url)"
    },
    {
        "line": 2,
        "fullcodeline": "return @size_cache[url] if @size_cache.has_key?(url)"
    },
    {
        "line": 5,
        "fullcodeline": "absolute_url = Discourse.base_url_no_prefix + absolute_url if absolute_url =~ %r{\\A/[^/]}"
    },
    {
        "line": 7,
        "fullcodeline": "return unless absolute_url"
    },
    {
        "line": 10,
        "fullcodeline": "absolute_url = SiteSetting.scheme + \":\" + absolute_url if absolute_url.start_with?(\"//\")"
    },
    {
        "line": 14,
        "fullcodeline": "if url && Upload.secure_uploads_url?(url)"
    },
    {
        "line": 15,
        "fullcodeline": "absolute_url = Upload.signed_url_from_secure_uploads_url(absolute_url)"
    },
    {
        "line": 18,
        "fullcodeline": "return unless is_valid_image_url?(absolute_url)"
    },
    {
        "line": 21,
        "fullcodeline": "if upload && upload.width && upload.width > 0"
    },
    {
        "line": 22,
        "fullcodeline": "@size_cache[url] = [upload.width, upload.height]"
    },
    {
        "line": 24,
        "fullcodeline": "@size_cache[url] = FinalDestination::FastImage.size(absolute_url)"
    }
]