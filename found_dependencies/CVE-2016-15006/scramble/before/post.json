[
    {
        "line": 2,
        "fullcodeline": "for (int j = 0; j < 16; ++j)"
    },
    {
        "line": 4,
        "fullcodeline": "char temp = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "for (int i = 0; i < 256; ++i)"
    },
    {
        "line": 11,
        "fullcodeline": "if (keyFile != NULL){"
    },
    {
        "line": 8,
        "fullcodeline": "scrambleAsciiTables[j][i] = i;"
    },
    {
        "line": 13,
        "fullcodeline": "char extractedString[BUFFER_SIZE] = \"\";"
    },
    {
        "line": 22,
        "fullcodeline": "rewind(keyFile);"
    },
    {
        "line": 14,
        "fullcodeline": "while((size = fread(extractedString, 1, BUFFER_SIZE, keyFile)) > 0){"
    },
    {
        "line": 25,
        "fullcodeline": "for (int i = 0; i < 10 * 256; ++i)"
    },
    {
        "line": 15,
        "fullcodeline": "for (int i = 0; i < size; ++i)"
    },
    {
        "line": 27,
        "fullcodeline": "random256 = generateNumber() ^ passPhrase[passIndex];"
    },
    {
        "line": 28,
        "fullcodeline": "passIndex++;"
    },
    {
        "line": 29,
        "fullcodeline": "passIndex %= 16384;"
    },
    {
        "line": 30,
        "fullcodeline": "temp = scrambleAsciiTables[j][i%256];"
    },
    {
        "line": 31,
        "fullcodeline": "scrambleAsciiTables[j][i%256] = scrambleAsciiTables[j][random256];"
    },
    {
        "line": 32,
        "fullcodeline": "scrambleAsciiTables[j][random256] = temp;"
    },
    {
        "line": 17,
        "fullcodeline": "temp = scrambleAsciiTables[j][i%256];"
    },
    {
        "line": 18,
        "fullcodeline": "scrambleAsciiTables[j][i%256] = scrambleAsciiTables[j][(unsigned char)(extractedString[i])];"
    },
    {
        "line": 19,
        "fullcodeline": "scrambleAsciiTables[j][(unsigned char)(extractedString[i])] = temp;"
    }
]