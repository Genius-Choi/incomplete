[
    {
        "line": 2,
        "fullcodeline": "printf(\"scrambling substitution's tables...\\n\");"
    },
    {
        "line": 3,
        "fullcodeline": "for (int j = 0; j < 16; ++j)"
    },
    {
        "line": 5,
        "fullcodeline": "char temp = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "int j = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "char temp[BUFFER_SIZE];"
    },
    {
        "line": 7,
        "fullcodeline": "for (int i = 0; i < 256; ++i)"
    },
    {
        "line": 42,
        "fullcodeline": "while(j < BUFFER_SIZE){"
    },
    {
        "line": 9,
        "fullcodeline": "scrambleAsciiTables[j][i] = i;"
    },
    {
        "line": 14,
        "fullcodeline": "char extractedString[BUFFER_SIZE] = \"\";"
    },
    {
        "line": 25,
        "fullcodeline": "rewind(keyFile);"
    },
    {
        "line": 43,
        "fullcodeline": "int charactersRead = fread(temp, 1, BUFFER_SIZE, keyFile);"
    },
    {
        "line": 16,
        "fullcodeline": "while((size = fread(extractedString, 1, BUFFER_SIZE, keyFile)) > 0){"
    },
    {
        "line": 44,
        "fullcodeline": "if(charactersRead == 0){"
    },
    {
        "line": 48,
        "fullcodeline": "for (int i = 0; i < charactersRead; ++i)"
    },
    {
        "line": 28,
        "fullcodeline": "for (int i = 0; i < 10 * 256; ++i)"
    },
    {
        "line": 45,
        "fullcodeline": "rewind(keyFile);"
    },
    {
        "line": 50,
        "fullcodeline": "scramblingTablesOrder[j] = temp[i] & (1+2+4+8);"
    },
    {
        "line": 51,
        "fullcodeline": "j++;"
    },
    {
        "line": 17,
        "fullcodeline": "for (int i = 0; i < size; ++i)"
    },
    {
        "line": 30,
        "fullcodeline": "random256 = generateNumber() ^ passPhrase[passIndex];"
    },
    {
        "line": 31,
        "fullcodeline": "passIndex++;"
    },
    {
        "line": 32,
        "fullcodeline": "passIndex %= 16384;"
    },
    {
        "line": 33,
        "fullcodeline": "temp = scrambleAsciiTables[j][i%256];"
    },
    {
        "line": 34,
        "fullcodeline": "scrambleAsciiTables[j][i%256] = scrambleAsciiTables[j][random256];"
    },
    {
        "line": 35,
        "fullcodeline": "scrambleAsciiTables[j][random256] = temp;"
    },
    {
        "line": 52,
        "fullcodeline": "if(j == BUFFER_SIZE){"
    },
    {
        "line": 19,
        "fullcodeline": "random256 = generateNumber() ^ extractedString[i];"
    },
    {
        "line": 20,
        "fullcodeline": "temp = scrambleAsciiTables[j][i%256];"
    },
    {
        "line": 21,
        "fullcodeline": "scrambleAsciiTables[j][i%256] = scrambleAsciiTables[j][random256];"
    },
    {
        "line": 22,
        "fullcodeline": "scrambleAsciiTables[j][random256] = temp;"
    }
]