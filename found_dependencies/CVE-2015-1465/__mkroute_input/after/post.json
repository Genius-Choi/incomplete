[
    {
        "line": 10,
        "fullcodeline": "unsigned int flags = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "u32 itag = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "out_dev = __in_dev_get_rcu(FIB_RES_DEV(*res));"
    },
    {
        "line": 21,
        "fullcodeline": "err = fib_validate_source(skb, saddr, daddr, tos, FIB_RES_OIF(*res),"
    },
    {
        "line": 30,
        "fullcodeline": "do_cache = res->fi && !itag;"
    },
    {
        "line": 52,
        "fullcodeline": "fnhe = find_exception(&FIB_RES_NH(*res), daddr);"
    },
    {
        "line": 65,
        "fullcodeline": "rth = rt_dst_alloc(out_dev->dev,"
    },
    {
        "line": 73,
        "fullcodeline": "rth->rt_genid = rt_genid_ipv4(dev_net(rth->dst.dev));"
    },
    {
        "line": 74,
        "fullcodeline": "rth->rt_flags = flags;"
    },
    {
        "line": 75,
        "fullcodeline": "rth->rt_type = res->type;"
    },
    {
        "line": 76,
        "fullcodeline": "rth->rt_is_input = 1;"
    },
    {
        "line": 77,
        "fullcodeline": "rth->rt_iif \t= 0;"
    },
    {
        "line": 78,
        "fullcodeline": "rth->rt_pmtu\t= 0;"
    },
    {
        "line": 79,
        "fullcodeline": "rth->rt_gateway\t= 0;"
    },
    {
        "line": 80,
        "fullcodeline": "rth->rt_uses_gateway = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "INIT_LIST_HEAD(&rth->rt_uncached);"
    },
    {
        "line": 82,
        "fullcodeline": "RT_CACHE_STAT_INC(in_slow_tot);"
    },
    {
        "line": 84,
        "fullcodeline": "rth->dst.input = ip_forward;"
    },
    {
        "line": 85,
        "fullcodeline": "rth->dst.output = ip_output;"
    },
    {
        "line": 87,
        "fullcodeline": "rt_set_nexthop(rth, daddr, res, fnhe, res->fi, res->type, itag);"
    },
    {
        "line": 88,
        "fullcodeline": "skb_dst_set(skb, &rth->dst);"
    },
    {
        "line": 90,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "if (out_dev == NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (out_dev == in_dev && err && IN_DEV_TX_REDIRECTS(out_dev) &&"
    },
    {
        "line": 37,
        "fullcodeline": "if (skb->protocol != htons(ETH_P_IP)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (!rth) {"
    },
    {
        "line": 17,
        "fullcodeline": "net_crit_ratelimited(\"Bug in ip_route_input_slow(). Please report.\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "ip_handle_martian_source(in_dev->dev, in_dev, skb, daddr,"
    },
    {
        "line": 33,
        "fullcodeline": "(IN_DEV_SHARED_MEDIA(out_dev) ||"
    },
    {
        "line": 35,
        "fullcodeline": "IPCB(skb)->flags |= IPSKB_DOREDIRECT;"
    },
    {
        "line": 66,
        "fullcodeline": "IN_DEV_CONF_GET(in_dev, NOPOLICY),"
    },
    {
        "line": 67,
        "fullcodeline": "IN_DEV_CONF_GET(out_dev, NOXFRM), do_cache);"
    },
    {
        "line": 69,
        "fullcodeline": "err = -ENOBUFS;"
    },
    {
        "line": 18,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "skb->protocol == htons(ETH_P_IP) &&"
    },
    {
        "line": 34,
        "fullcodeline": "inet_addr_onlink(out_dev, saddr, FIB_RES_GW(*res))))"
    },
    {
        "line": 45,
        "fullcodeline": "if (out_dev == in_dev &&"
    },
    {
        "line": 54,
        "fullcodeline": "if (fnhe != NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "if (rt_cache_valid(rth)) {"
    },
    {
        "line": 46,
        "fullcodeline": "IN_DEV_PROXY_ARP_PVLAN(in_dev) == 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 55,
        "fullcodeline": "rth = rcu_dereference(fnhe->fnhe_rth_input);"
    },
    {
        "line": 60,
        "fullcodeline": "skb_dst_set_noref(skb, &rth->dst);"
    },
    {
        "line": 57,
        "fullcodeline": "rth = rcu_dereference(FIB_RES_NH(*res).nh_rth_input);"
    }
]