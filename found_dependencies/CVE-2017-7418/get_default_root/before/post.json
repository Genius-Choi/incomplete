[
    {
        "line": 2,
        "fullcodeline": "config_rec *c = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "char *dir = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "c = find_config(main_server->conf, CONF_PARAM, \"DefaultRoot\", FALSE);"
    },
    {
        "line": 125,
        "fullcodeline": "*root = dir;"
    },
    {
        "line": 8,
        "fullcodeline": "pr_signals_handle();"
    },
    {
        "line": 16,
        "fullcodeline": "res = pr_expr_eval_group_and(((char **) c->argv)+1);"
    },
    {
        "line": 22,
        "fullcodeline": "c = find_config_next(c, c->next, CONF_PARAM, \"DefaultRoot\", FALSE);"
    },
    {
        "line": 29,
        "fullcodeline": "new_dir = path_subst_uservar(p, &dir);"
    },
    {
        "line": 11,
        "fullcodeline": "if (c->argc < 2) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (new_dir != NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (strncmp(dir, \"/\", 2) == 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "dir = new_dir;"
    },
    {
        "line": 35,
        "fullcodeline": "dir = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "int xerrno = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "realdir = dir_realpath(p, dir);"
    },
    {
        "line": 103,
        "fullcodeline": "xerrno = errno;"
    },
    {
        "line": 41,
        "fullcodeline": "if (allow_symlinks == FALSE) {"
    },
    {
        "line": 42,
        "fullcodeline": "char *path, target_path[PR_TUNABLE_PATH_MAX + 1];"
    },
    {
        "line": 51,
        "fullcodeline": "path = dir;"
    },
    {
        "line": 68,
        "fullcodeline": "pathlen = strlen(path);"
    },
    {
        "line": 74,
        "fullcodeline": "pr_fs_clear_cache();"
    },
    {
        "line": 75,
        "fullcodeline": "res = pr_fsio_lstat(path, &st);"
    },
    {
        "line": 107,
        "fullcodeline": "dir = realdir;"
    },
    {
        "line": 52,
        "fullcodeline": "if (*path != '/') {"
    },
    {
        "line": 69,
        "fullcodeline": "if (pathlen > 1 &&"
    },
    {
        "line": 76,
        "fullcodeline": "if (res < 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (S_ISLNK(st.st_mode)) {"
    },
    {
        "line": 111,
        "fullcodeline": "char interp_dir[PR_TUNABLE_PATH_MAX + 1];"
    },
    {
        "line": 113,
        "fullcodeline": "memset(interp_dir, '\\0', sizeof(interp_dir));"
    },
    {
        "line": 114,
        "fullcodeline": "(void) pr_fs_interpolate(dir, interp_dir, sizeof(interp_dir)-1);"
    },
    {
        "line": 116,
        "fullcodeline": "pr_log_pri(PR_LOG_NOTICE,"
    },
    {
        "line": 120,
        "fullcodeline": "errno = xerrno;"
    },
    {
        "line": 70,
        "fullcodeline": "path[pathlen-1] == '/') {"
    },
    {
        "line": 71,
        "fullcodeline": "path[pathlen-1] = '\\0';"
    },
    {
        "line": 77,
        "fullcodeline": "xerrno = errno;"
    },
    {
        "line": 79,
        "fullcodeline": "pr_log_pri(PR_LOG_WARNING, \"error: unable to check %s: %s\", path,"
    },
    {
        "line": 82,
        "fullcodeline": "errno = xerrno;"
    },
    {
        "line": 87,
        "fullcodeline": "pr_log_pri(PR_LOG_WARNING,"
    },
    {
        "line": 90,
        "fullcodeline": "errno = EPERM;"
    },
    {
        "line": 118,
        "fullcodeline": "dir, interp_dir, strerror(xerrno));"
    },
    {
        "line": 53,
        "fullcodeline": "if (*path == '~') {"
    },
    {
        "line": 80,
        "fullcodeline": "strerror(xerrno));"
    },
    {
        "line": 83,
        "fullcodeline": "return -1;"
    },
    {
        "line": 91,
        "fullcodeline": "return -1;"
    },
    {
        "line": 59,
        "fullcodeline": "path = target_path;"
    },
    {
        "line": 54,
        "fullcodeline": "if (pr_fs_interpolate(dir, target_path,"
    },
    {
        "line": 55,
        "fullcodeline": "sizeof(target_path)-1) < 0) {"
    },
    {
        "line": 56,
        "fullcodeline": "return -1;"
    }
]