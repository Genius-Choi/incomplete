[
    {
        "line": 2,
        "fullcodeline": "int res, xerrno = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "pr_fs_clear_cache();"
    },
    {
        "line": 11,
        "fullcodeline": "res = pr_fsio_lstat(path, &st);"
    },
    {
        "line": 32,
        "fullcodeline": "ptr = strrchr(path, '/');"
    },
    {
        "line": 6,
        "fullcodeline": "if (pathlen == 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (res < 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (S_ISLNK(st.st_mode)) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (ptr != NULL) {"
    },
    {
        "line": 13,
        "fullcodeline": "xerrno = errno;"
    },
    {
        "line": 15,
        "fullcodeline": "pr_log_pri(PR_LOG_WARNING, \"error: unable to check %s: %s\", path,"
    },
    {
        "line": 18,
        "fullcodeline": "errno = xerrno;"
    },
    {
        "line": 23,
        "fullcodeline": "errno = EPERM;"
    },
    {
        "line": 37,
        "fullcodeline": "pr_signals_handle();"
    },
    {
        "line": 39,
        "fullcodeline": "new_pathlen = ptr - path;"
    },
    {
        "line": 46,
        "fullcodeline": "new_path = pstrndup(p, path, new_pathlen);"
    },
    {
        "line": 48,
        "fullcodeline": "pr_log_debug(DEBUG10,"
    },
    {
        "line": 51,
        "fullcodeline": "res = is_symlink_path(p, new_path, new_pathlen);"
    },
    {
        "line": 16,
        "fullcodeline": "strerror(xerrno));"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 42,
        "fullcodeline": "if (new_pathlen == pathlen) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (res < 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "return -1;"
    }
]