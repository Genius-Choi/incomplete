[
    {
        "line": 3,
        "fullcodeline": "struct inode *dir = file_inode(file);"
    },
    {
        "line": 4,
        "fullcodeline": "struct udf_inode_info *iinfo = UDF_I(dir);"
    },
    {
        "line": 5,
        "fullcodeline": "struct udf_fileident_bh fibh = { .sbh = NULL, .ebh = NULL};"
    },
    {
        "line": 6,
        "fullcodeline": "struct fileIdentDesc *fi = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned char *fname = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "loff_t size = udf_ext0_offset(dir) + dir->i_size;"
    },
    {
        "line": 16,
        "fullcodeline": "struct buffer_head *tmp, *bha[16];"
    },
    {
        "line": 20,
        "fullcodeline": "int i, num, ret = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "struct extent_position epos = { NULL, 0, {0, 0} };"
    },
    {
        "line": 28,
        "fullcodeline": "nf_pos = (ctx->pos - 1) << 2;"
    },
    {
        "line": 32,
        "fullcodeline": "fname = kmalloc(UDF_NAME_LEN, GFP_NOFS);"
    },
    {
        "line": 41,
        "fullcodeline": "fibh.soffset = fibh.eoffset = nf_pos & (dir->i_sb->s_blocksize - 1);"
    },
    {
        "line": 143,
        "fullcodeline": "ctx->pos = (nf_pos >> 2) + 1;"
    },
    {
        "line": 148,
        "fullcodeline": "brelse(fibh.sbh);"
    },
    {
        "line": 149,
        "fullcodeline": "brelse(epos.bh);"
    },
    {
        "line": 150,
        "fullcodeline": "kfree(fname);"
    },
    {
        "line": 23,
        "fullcodeline": "if (ctx->pos == 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (nf_pos >= size)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!fname) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (nf_pos == 0)"
    },
    {
        "line": 42,
        "fullcodeline": "if (iinfo->i_alloc_type != ICBTAG_FLAG_AD_IN_ICB) {"
    },
    {
        "line": 85,
        "fullcodeline": "while (nf_pos < size) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (fibh.sbh != fibh.ebh)"
    },
    {
        "line": 26,
        "fullcodeline": "ctx->pos = 1;"
    },
    {
        "line": 34,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 39,
        "fullcodeline": "nf_pos = udf_ext0_offset(dir);"
    },
    {
        "line": 49,
        "fullcodeline": "block = udf_get_lb_pblock(dir->i_sb, &eloc, offset);"
    },
    {
        "line": 88,
        "fullcodeline": "ctx->pos = (nf_pos >> 2) + 1;"
    },
    {
        "line": 90,
        "fullcodeline": "fi = udf_fileident_read(dir, &nf_pos, &fibh, &cfi, &epos, &eloc,"
    },
    {
        "line": 95,
        "fullcodeline": "liu = le16_to_cpu(cfi.lengthOfImpUse);"
    },
    {
        "line": 96,
        "fullcodeline": "lfi = cfi.lengthFileIdent;"
    },
    {
        "line": 132,
        "fullcodeline": "flen = udf_get_filename(dir->i_sb, nameptr, lfi, fname,"
    },
    {
        "line": 137,
        "fullcodeline": "tloc = lelb_to_cpu(cfi.icb.extLocation);"
    },
    {
        "line": 138,
        "fullcodeline": "iblock = udf_get_lb_pblock(dir->i_sb, &tloc, 0);"
    },
    {
        "line": 147,
        "fullcodeline": "brelse(fibh.ebh);"
    },
    {
        "line": 24,
        "fullcodeline": "if (!dir_emit_dot(file, ctx))"
    },
    {
        "line": 43,
        "fullcodeline": "if (inode_bmap(dir, nf_pos >> dir->i_sb->s_blocksize_bits,"
    },
    {
        "line": 50,
        "fullcodeline": "if ((++offset << dir->i_sb->s_blocksize_bits) < elen) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (!(fibh.sbh = fibh.ebh = udf_tread(dir->i_sb, block))) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (!(offset & ((16 >> (dir->i_sb->s_blocksize_bits - 9)) - 1))) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (!fi)"
    },
    {
        "line": 98,
        "fullcodeline": "if (fibh.sbh == fibh.ebh) {"
    },
    {
        "line": 116,
        "fullcodeline": "if ((cfi.fileCharacteristics & FID_FILE_CHAR_DELETED) != 0) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((cfi.fileCharacteristics & FID_FILE_CHAR_HIDDEN) != 0) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (cfi.fileCharacteristics & FID_FILE_CHAR_PARENT) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!flen)"
    },
    {
        "line": 139,
        "fullcodeline": "if (!dir_emit(ctx, fname, flen, iblock, DT_UNKNOWN))"
    },
    {
        "line": 45,
        "fullcodeline": "!= (EXT_RECORDED_ALLOCATED >> 30)) {"
    },
    {
        "line": 46,
        "fullcodeline": "ret = -ENOENT;"
    },
    {
        "line": 61,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 66,
        "fullcodeline": "i = 16 >> (dir->i_sb->s_blocksize_bits - 9);"
    },
    {
        "line": 99,
        "fullcodeline": "nameptr = fi->fileIdent + liu;"
    },
    {
        "line": 51,
        "fullcodeline": "if (iinfo->i_alloc_type == ICBTAG_FLAG_AD_SHORT)"
    },
    {
        "line": 57,
        "fullcodeline": "offset = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "if (i + offset > (elen >> dir->i_sb->s_blocksize_bits))"
    },
    {
        "line": 69,
        "fullcodeline": "for (num = 0; i > 0; i--) {"
    },
    {
        "line": 103,
        "fullcodeline": "poffset = fibh.soffset + sizeof(struct fileIdentDesc) + liu + lfi;"
    },
    {
        "line": 117,
        "fullcodeline": "if (!UDF_QUERY_FLAG(dir->i_sb, UDF_FLAG_UNDELETE))"
    },
    {
        "line": 122,
        "fullcodeline": "if (!UDF_QUERY_FLAG(dir->i_sb, UDF_FLAG_UNHIDE))"
    },
    {
        "line": 127,
        "fullcodeline": "if (!dir_emit_dotdot(file, ctx))"
    },
    {
        "line": 52,
        "fullcodeline": "epos.offset -= sizeof(struct short_ad);"
    },
    {
        "line": 68,
        "fullcodeline": "i = (elen >> dir->i_sb->s_blocksize_bits) - offset;"
    },
    {
        "line": 70,
        "fullcodeline": "block = udf_get_lb_pblock(dir->i_sb, &eloc, offset + i);"
    },
    {
        "line": 71,
        "fullcodeline": "tmp = udf_tgetblk(dir->i_sb, block);"
    },
    {
        "line": 78,
        "fullcodeline": "ll_rw_block(READA, num, bha);"
    },
    {
        "line": 105,
        "fullcodeline": "if (poffset >= lfi) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (tmp && !buffer_uptodate(tmp) && !buffer_locked(tmp))"
    },
    {
        "line": 79,
        "fullcodeline": "for (i = 0; i < num; i++)"
    },
    {
        "line": 80,
        "fullcodeline": "brelse(bha[i]);"
    },
    {
        "line": 106,
        "fullcodeline": "nameptr = (char *)(fibh.ebh->b_data + poffset - lfi);"
    },
    {
        "line": 53,
        "fullcodeline": "else if (iinfo->i_alloc_type =="
    },
    {
        "line": 73,
        "fullcodeline": "bha[num++] = tmp;"
    },
    {
        "line": 108,
        "fullcodeline": "nameptr = fname;"
    },
    {
        "line": 109,
        "fullcodeline": "memcpy(nameptr, fi->fileIdent + liu,"
    },
    {
        "line": 111,
        "fullcodeline": "memcpy(nameptr + lfi - poffset,"
    },
    {
        "line": 55,
        "fullcodeline": "epos.offset -= sizeof(struct long_ad);"
    },
    {
        "line": 75,
        "fullcodeline": "brelse(tmp);"
    },
    {
        "line": 110,
        "fullcodeline": "lfi - poffset);"
    }
]