[
    {
        "line": 5,
        "fullcodeline": "unsigned int hook = state->hook;"
    },
    {
        "line": 6,
        "fullcodeline": "static const char nulldevname[IFNAMSIZ] __attribute__((aligned(sizeof(long))));"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned int verdict = NF_DROP;"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned int cpu, stackidx = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "indev = state->in ? state->in->name : nulldevname;"
    },
    {
        "line": 21,
        "fullcodeline": "outdev = state->out ? state->out->name : nulldevname;"
    },
    {
        "line": 24,
        "fullcodeline": "addend = xt_write_recseq_begin();"
    },
    {
        "line": 25,
        "fullcodeline": "private = READ_ONCE(table->private); /* Address dependency. */"
    },
    {
        "line": 27,
        "fullcodeline": "table_base = private->entries;"
    },
    {
        "line": 28,
        "fullcodeline": "jumpstack  = (struct arpt_entry **)private->jumpstack[cpu];"
    },
    {
        "line": 33,
        "fullcodeline": "e = get_entry(table_base, private->hook_entry[hook]);"
    },
    {
        "line": 35,
        "fullcodeline": "acpar.state   = state;"
    },
    {
        "line": 36,
        "fullcodeline": "acpar.hotdrop = false;"
    },
    {
        "line": 38,
        "fullcodeline": "arp = arp_hdr(skb);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!pskb_may_pull(skb, arp_hdr_len(skb->dev)))"
    },
    {
        "line": 94,
        "fullcodeline": "} while (!acpar.hotdrop);"
    },
    {
        "line": 51,
        "fullcodeline": "t = arpt_get_target_c(e);"
    },
    {
        "line": 82,
        "fullcodeline": "acpar.target   = t->u.kernel.target;"
    },
    {
        "line": 83,
        "fullcodeline": "acpar.targinfo = t->data;"
    },
    {
        "line": 84,
        "fullcodeline": "verdict = t->u.kernel.target->target(skb, &acpar);"
    },
    {
        "line": 48,
        "fullcodeline": "counter = xt_get_this_cpu_counter(&e->counters);"
    },
    {
        "line": 49,
        "fullcodeline": "ADD_COUNTER(*counter, arp_hdr_len(skb->dev), 1);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!t->u.kernel.target->target) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (verdict == XT_CONTINUE) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (!arp_packet_match(arp, skb->dev, indev, outdev, &e->arp)) {"
    },
    {
        "line": 44,
        "fullcodeline": "e = arpt_next_entry(e);"
    },
    {
        "line": 57,
        "fullcodeline": "v = ((struct xt_standard_target *)t)->verdict;"
    },
    {
        "line": 78,
        "fullcodeline": "e = get_entry(table_base, v);"
    },
    {
        "line": 88,
        "fullcodeline": "arp = arp_hdr(skb);"
    },
    {
        "line": 89,
        "fullcodeline": "e = arpt_next_entry(e);"
    },
    {
        "line": 58,
        "fullcodeline": "if (v < 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "!= arpt_next_entry(e)) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (v != XT_RETURN) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (stackidx == 0) {"
    },
    {
        "line": 61,
        "fullcodeline": "verdict = (unsigned int)(-v) - 1;"
    },
    {
        "line": 65,
        "fullcodeline": "e = get_entry(table_base,"
    },
    {
        "line": 75,
        "fullcodeline": "jumpstack[stackidx++] = e;"
    },
    {
        "line": 68,
        "fullcodeline": "e = jumpstack[--stackidx];"
    },
    {
        "line": 69,
        "fullcodeline": "e = arpt_next_entry(e);"
    }
]