[
    {
        "line": 3,
        "fullcodeline": "TPM_RC rc = TPM_RC_SUCCESS;"
    },
    {
        "line": 6,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 15,
        "fullcodeline": "for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {"
    },
    {
        "line": 7,
        "fullcodeline": "rc = UINT32_Unmarshal(&target->count, buffer, size);"
    },
    {
        "line": 16,
        "fullcodeline": "rc = TPMS_PCR_SELECTION_Unmarshal(&target->pcrSelections[i], buffer, size);"
    },
    {
        "line": 10,
        "fullcodeline": "if (target->count > HASH_COUNT) {"
    },
    {
        "line": 11,
        "fullcodeline": "rc = TPM_RC_SIZE;"
    },
    {
        "line": 12,
        "fullcodeline": "target->count = 0; // libtpms added"
    }
]