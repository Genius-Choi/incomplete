[
    {
        "line": 3,
        "fullcodeline": "TPM_RC rc = TPM_RC_SUCCESS;"
    },
    {
        "line": 5,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (rc == TPM_RC_SUCCESS) {"
    },
    {
        "line": 6,
        "fullcodeline": "rc = TPMI_ALG_HASH_Unmarshal(&target->hash, buffer, size, NO);"
    },
    {
        "line": 9,
        "fullcodeline": "rc = UINT8_Unmarshal(&target->sizeofSelect, buffer, size);"
    },
    {
        "line": 19,
        "fullcodeline": "rc = Array_Unmarshal(target->pcrSelect, target->sizeofSelect, buffer, size);"
    },
    {
        "line": 12,
        "fullcodeline": "if ((target->sizeofSelect < PCR_SELECT_MIN) ||"
    },
    {
        "line": 13,
        "fullcodeline": "(target->sizeofSelect > PCR_SELECT_MAX)) {"
    },
    {
        "line": 14,
        "fullcodeline": "rc = TPM_RC_VALUE;"
    },
    {
        "line": 15,
        "fullcodeline": "target->sizeofSelect = 0; // libtpms added"
    }
]