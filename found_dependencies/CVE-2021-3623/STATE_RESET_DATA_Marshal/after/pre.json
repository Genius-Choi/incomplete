[
    {
        "line": 9,
        "fullcodeline": "written = NV_HEADER_Marshal(buffer, size,"
    },
    {
        "line": 12,
        "fullcodeline": "written += TPM2B_PROOF_Marshal(&data->nullProof, buffer, size);"
    },
    {
        "line": 13,
        "fullcodeline": "written += TPM2B_Marshal(&data->nullSeed.b, sizeof(data->nullSeed.t.buffer), buffer, size);"
    },
    {
        "line": 14,
        "fullcodeline": "written += UINT32_Marshal(&data->clearCount, buffer, size);"
    },
    {
        "line": 15,
        "fullcodeline": "written += UINT64_Marshal(&data->objectContextID, buffer, size);"
    },
    {
        "line": 17,
        "fullcodeline": "array_size = ARRAY_SIZE(data->contextArray);"
    },
    {
        "line": 18,
        "fullcodeline": "written += UINT16_Marshal(&array_size, buffer, size);"
    },
    {
        "line": 21,
        "fullcodeline": "written += UINT16_Marshal(&s_ContextSlotMask, buffer, size);"
    },
    {
        "line": 23,
        "fullcodeline": "written += UINT64_Marshal(&data->contextCounter, buffer, size);"
    },
    {
        "line": 24,
        "fullcodeline": "written += TPM2B_DIGEST_Marshal(&data->commandAuditDigest,"
    },
    {
        "line": 26,
        "fullcodeline": "written += UINT32_Marshal(&data->restartCount, buffer, size);"
    },
    {
        "line": 27,
        "fullcodeline": "written += UINT32_Marshal(&data->pcrCounter, buffer, size);"
    },
    {
        "line": 31,
        "fullcodeline": "has_block = FALSE;"
    },
    {
        "line": 33,
        "fullcodeline": "written += BLOCK_SKIP_WRITE_PUSH(has_block, buffer, size);"
    },
    {
        "line": 44,
        "fullcodeline": "BLOCK_SKIP_WRITE_POP(size);"
    },
    {
        "line": 46,
        "fullcodeline": "written += BLOCK_SKIP_WRITE_PUSH(TRUE, buffer, size);"
    },
    {
        "line": 47,
        "fullcodeline": "written += SEED_COMPAT_LEVEL_Marshal(&data->nullSeedCompatLevel,"
    },
    {
        "line": 50,
        "fullcodeline": "written += BLOCK_SKIP_WRITE_PUSH(TRUE, buffer, size);"
    },
    {
        "line": 53,
        "fullcodeline": "BLOCK_SKIP_WRITE_POP(size);"
    },
    {
        "line": 54,
        "fullcodeline": "BLOCK_SKIP_WRITE_POP(size);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i = 0; i < array_size; i++)"
    },
    {
        "line": 20,
        "fullcodeline": "written += UINT16_Marshal(&data->contextArray[i], buffer, size);"
    }
]