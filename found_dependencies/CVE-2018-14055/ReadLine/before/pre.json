[
    {
        "line": 2,
        "fullcodeline": "CLanguageScope user_lang(GetUser() ? GetUser()->GetLanguage() : \"\");"
    },
    {
        "line": 3,
        "fullcodeline": "CString sLine = sData;"
    },
    {
        "line": 5,
        "fullcodeline": "sLine.TrimRight(\"\\n\\r\");"
    },
    {
        "line": 7,
        "fullcodeline": "DEBUG(\"(\" << GetFullName() << \") CLI -> ZNC [\""
    },
    {
        "line": 10,
        "fullcodeline": "bool bReturn = false;"
    },
    {
        "line": 20,
        "fullcodeline": "Message.SetClient(this);"
    },
    {
        "line": 30,
        "fullcodeline": "CString sCommand = Message.GetCommand();"
    },
    {
        "line": 11,
        "fullcodeline": "if (IsAttached()) {"
    },
    {
        "line": 85,
        "fullcodeline": "switch (Message.GetType()) {"
    },
    {
        "line": 126,
        "fullcodeline": "PutIRC(Message.ToString(CMessage::ExcludePrefix | CMessage::ExcludeTags));"
    },
    {
        "line": 12,
        "fullcodeline": "NETWORKMODULECALL(OnUserRaw(sLine), m_pUser, m_pNetwork, this,"
    },
    {
        "line": 23,
        "fullcodeline": "NETWORKMODULECALL(OnUserRawMessage(Message), m_pUser, m_pNetwork, this,"
    },
    {
        "line": 72,
        "fullcodeline": "if (Message.GetType() == CMessage::Type::Capability) {"
    },
    {
        "line": 8,
        "fullcodeline": "<< CDebug::Filter(sLine) << \"]\");"
    },
    {
        "line": 15,
        "fullcodeline": "GLOBALMODULECALL(OnUnknownUserRaw(this, sLine), &bReturn);"
    },
    {
        "line": 34,
        "fullcodeline": "if (sCommand.Equals(\"PASS\")) {"
    },
    {
        "line": 87,
        "fullcodeline": "bReturn = OnActionMessage(Message);"
    },
    {
        "line": 90,
        "fullcodeline": "bReturn = OnCTCPMessage(Message);"
    },
    {
        "line": 93,
        "fullcodeline": "bReturn = OnJoinMessage(Message);"
    },
    {
        "line": 96,
        "fullcodeline": "bReturn = OnModeMessage(Message);"
    },
    {
        "line": 99,
        "fullcodeline": "bReturn = OnNoticeMessage(Message);"
    },
    {
        "line": 102,
        "fullcodeline": "bReturn = OnPartMessage(Message);"
    },
    {
        "line": 105,
        "fullcodeline": "bReturn = OnPingMessage(Message);"
    },
    {
        "line": 108,
        "fullcodeline": "bReturn = OnPongMessage(Message);"
    },
    {
        "line": 111,
        "fullcodeline": "bReturn = OnQuitMessage(Message);"
    },
    {
        "line": 114,
        "fullcodeline": "bReturn = OnTextMessage(Message);"
    },
    {
        "line": 117,
        "fullcodeline": "bReturn = OnTopicMessage(Message);"
    },
    {
        "line": 120,
        "fullcodeline": "bReturn = OnOtherMessage(Message);"
    },
    {
        "line": 26,
        "fullcodeline": "GLOBALMODULECALL(OnUnknownUserRawMessage(Message), &bReturn);"
    },
    {
        "line": 35,
        "fullcodeline": "m_bGotPass = true;"
    },
    {
        "line": 37,
        "fullcodeline": "CString sAuthLine = Message.GetParam(0);"
    },
    {
        "line": 43,
        "fullcodeline": "} else if (sCommand.Equals(\"NICK\")) {"
    },
    {
        "line": 44,
        "fullcodeline": "CString sNick = Message.GetParam(0);"
    },
    {
        "line": 46,
        "fullcodeline": "m_sNick = sNick;"
    },
    {
        "line": 47,
        "fullcodeline": "m_bGotNick = true;"
    },
    {
        "line": 54,
        "fullcodeline": "CString sAuthLine = Message.GetParam(0);"
    },
    {
        "line": 60,
        "fullcodeline": "m_bGotUser = true;"
    },
    {
        "line": 56,
        "fullcodeline": "if (m_sUser.empty() && !sAuthLine.empty()) {"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (!m_bInCap) {"
    }
]