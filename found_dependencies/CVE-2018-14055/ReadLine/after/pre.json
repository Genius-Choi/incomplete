[
    {
        "line": 2,
        "fullcodeline": "CLanguageScope user_lang(GetUser() ? GetUser()->GetLanguage() : \"\");"
    },
    {
        "line": 3,
        "fullcodeline": "CString sLine = sData;"
    },
    {
        "line": 5,
        "fullcodeline": "sLine.Replace(\"\\n\", \"\");"
    },
    {
        "line": 6,
        "fullcodeline": "sLine.Replace(\"\\r\", \"\");"
    },
    {
        "line": 8,
        "fullcodeline": "DEBUG(\"(\" << GetFullName() << \") CLI -> ZNC [\""
    },
    {
        "line": 11,
        "fullcodeline": "bool bReturn = false;"
    },
    {
        "line": 21,
        "fullcodeline": "Message.SetClient(this);"
    },
    {
        "line": 31,
        "fullcodeline": "CString sCommand = Message.GetCommand();"
    },
    {
        "line": 12,
        "fullcodeline": "if (IsAttached()) {"
    },
    {
        "line": 86,
        "fullcodeline": "switch (Message.GetType()) {"
    },
    {
        "line": 127,
        "fullcodeline": "PutIRC(Message.ToString(CMessage::ExcludePrefix | CMessage::ExcludeTags));"
    },
    {
        "line": 13,
        "fullcodeline": "NETWORKMODULECALL(OnUserRaw(sLine), m_pUser, m_pNetwork, this,"
    },
    {
        "line": 24,
        "fullcodeline": "NETWORKMODULECALL(OnUserRawMessage(Message), m_pUser, m_pNetwork, this,"
    },
    {
        "line": 73,
        "fullcodeline": "if (Message.GetType() == CMessage::Type::Capability) {"
    },
    {
        "line": 9,
        "fullcodeline": "<< CDebug::Filter(sLine) << \"]\");"
    },
    {
        "line": 16,
        "fullcodeline": "GLOBALMODULECALL(OnUnknownUserRaw(this, sLine), &bReturn);"
    },
    {
        "line": 35,
        "fullcodeline": "if (sCommand.Equals(\"PASS\")) {"
    },
    {
        "line": 88,
        "fullcodeline": "bReturn = OnActionMessage(Message);"
    },
    {
        "line": 91,
        "fullcodeline": "bReturn = OnCTCPMessage(Message);"
    },
    {
        "line": 94,
        "fullcodeline": "bReturn = OnJoinMessage(Message);"
    },
    {
        "line": 97,
        "fullcodeline": "bReturn = OnModeMessage(Message);"
    },
    {
        "line": 100,
        "fullcodeline": "bReturn = OnNoticeMessage(Message);"
    },
    {
        "line": 103,
        "fullcodeline": "bReturn = OnPartMessage(Message);"
    },
    {
        "line": 106,
        "fullcodeline": "bReturn = OnPingMessage(Message);"
    },
    {
        "line": 109,
        "fullcodeline": "bReturn = OnPongMessage(Message);"
    },
    {
        "line": 112,
        "fullcodeline": "bReturn = OnQuitMessage(Message);"
    },
    {
        "line": 115,
        "fullcodeline": "bReturn = OnTextMessage(Message);"
    },
    {
        "line": 118,
        "fullcodeline": "bReturn = OnTopicMessage(Message);"
    },
    {
        "line": 121,
        "fullcodeline": "bReturn = OnOtherMessage(Message);"
    },
    {
        "line": 27,
        "fullcodeline": "GLOBALMODULECALL(OnUnknownUserRawMessage(Message), &bReturn);"
    },
    {
        "line": 36,
        "fullcodeline": "m_bGotPass = true;"
    },
    {
        "line": 38,
        "fullcodeline": "CString sAuthLine = Message.GetParam(0);"
    },
    {
        "line": 44,
        "fullcodeline": "} else if (sCommand.Equals(\"NICK\")) {"
    },
    {
        "line": 45,
        "fullcodeline": "CString sNick = Message.GetParam(0);"
    },
    {
        "line": 47,
        "fullcodeline": "m_sNick = sNick;"
    },
    {
        "line": 48,
        "fullcodeline": "m_bGotNick = true;"
    },
    {
        "line": 55,
        "fullcodeline": "CString sAuthLine = Message.GetParam(0);"
    },
    {
        "line": 61,
        "fullcodeline": "m_bGotUser = true;"
    },
    {
        "line": 57,
        "fullcodeline": "if (m_sUser.empty() && !sAuthLine.empty()) {"
    },
    {
        "line": 64,
        "fullcodeline": "} else if (!m_bInCap) {"
    }
]