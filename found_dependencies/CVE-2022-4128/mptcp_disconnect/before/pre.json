[
    {
        "line": 4,
        "fullcodeline": "struct mptcp_sock *msk = mptcp_sk(sk);"
    },
    {
        "line": 6,
        "fullcodeline": "inet_sk_state_store(sk, TCP_CLOSE);"
    },
    {
        "line": 8,
        "fullcodeline": "mptcp_for_each_subflow(msk, subflow) {"
    },
    {
        "line": 14,
        "fullcodeline": "mptcp_stop_timer(sk);"
    },
    {
        "line": 15,
        "fullcodeline": "sk_stop_timer(sk, &sk->sk_timer);"
    },
    {
        "line": 20,
        "fullcodeline": "mptcp_destroy_common(msk);"
    },
    {
        "line": 21,
        "fullcodeline": "msk->last_snd = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "WRITE_ONCE(msk->flags, 0);"
    },
    {
        "line": 23,
        "fullcodeline": "msk->cb_flags = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "msk->push_pending = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "msk->recovery = false;"
    },
    {
        "line": 26,
        "fullcodeline": "msk->can_ack = false;"
    },
    {
        "line": 27,
        "fullcodeline": "msk->fully_established = false;"
    },
    {
        "line": 28,
        "fullcodeline": "msk->rcv_data_fin = false;"
    },
    {
        "line": 29,
        "fullcodeline": "msk->snd_data_fin_enable = false;"
    },
    {
        "line": 30,
        "fullcodeline": "msk->rcv_fastclose = false;"
    },
    {
        "line": 31,
        "fullcodeline": "msk->use_64bit_ack = false;"
    },
    {
        "line": 32,
        "fullcodeline": "WRITE_ONCE(msk->csum_enabled, mptcp_is_checksum_enabled(sock_net(sk)));"
    },
    {
        "line": 33,
        "fullcodeline": "mptcp_pm_data_reset(msk);"
    },
    {
        "line": 34,
        "fullcodeline": "mptcp_ca_reset(sk);"
    },
    {
        "line": 36,
        "fullcodeline": "sk->sk_shutdown = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "sk_error_report(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "struct sock *ssk = mptcp_subflow_tcp_sock(subflow);"
    },
    {
        "line": 11,
        "fullcodeline": "__mptcp_close_ssk(sk, ssk, subflow, MPTCP_CF_FASTCLOSE);"
    },
    {
        "line": 17,
        "fullcodeline": "if (mptcp_sk(sk)->token)"
    },
    {
        "line": 18,
        "fullcodeline": "mptcp_event(MPTCP_EVENT_CLOSED, mptcp_sk(sk), NULL, GFP_KERNEL);"
    }
]