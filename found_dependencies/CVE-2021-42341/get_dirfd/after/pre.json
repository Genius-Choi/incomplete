[
    {
        "line": 5,
        "fullcodeline": "char *linkpath = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int components = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int flags = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "dirfd = openat(dirfd, \"/\", O_RDONLY);"
    },
    {
        "line": 21,
        "fullcodeline": "ch = path;"
    },
    {
        "line": 27,
        "fullcodeline": "path_dupe = xstrdup(path);"
    },
    {
        "line": 28,
        "fullcodeline": "item = strtok(path_dupe, \"/\");"
    },
    {
        "line": 34,
        "fullcodeline": "flags |= O_RDONLY;"
    },
    {
        "line": 68,
        "fullcodeline": "free(path_dupe);"
    },
    {
        "line": 69,
        "fullcodeline": "free(linkpath);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!path || *path != '/')"
    },
    {
        "line": 18,
        "fullcodeline": "if (dirfd == -1)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!symlinks)"
    },
    {
        "line": 35,
        "fullcodeline": "while (dirfd > 0 && item && components > 1) {"
    },
    {
        "line": 16,
        "fullcodeline": "eerrorx(\"%s: empty or relative path\", applet);"
    },
    {
        "line": 19,
        "fullcodeline": "eerrorx(\"%s: unable to open the root directory: %s\","
    },
    {
        "line": 25,
        "fullcodeline": "ch++;"
    },
    {
        "line": 33,
        "fullcodeline": "flags |= O_NOFOLLOW;"
    },
    {
        "line": 36,
        "fullcodeline": "str = xstrdup(linkpath ? linkpath : item);"
    },
    {
        "line": 37,
        "fullcodeline": "new_dirfd = openat(dirfd, str, flags);"
    },
    {
        "line": 65,
        "fullcodeline": "item = strtok(NULL, \"/\");"
    },
    {
        "line": 66,
        "fullcodeline": "components--;"
    },
    {
        "line": 20,
        "fullcodeline": "applet, strerror(errno));"
    },
    {
        "line": 23,
        "fullcodeline": "if (*ch == '/')"
    },
    {
        "line": 38,
        "fullcodeline": "if (new_dirfd == -1)"
    },
    {
        "line": 41,
        "fullcodeline": "if (fstat(new_dirfd, &st) == -1)"
    },
    {
        "line": 44,
        "fullcodeline": "if (S_ISLNK(st.st_mode) ) {"
    },
    {
        "line": 24,
        "fullcodeline": "components++;"
    },
    {
        "line": 39,
        "fullcodeline": "eerrorx(\"%s: %s: could not open %s: %s\", applet, path, str,"
    },
    {
        "line": 42,
        "fullcodeline": "eerrorx(\"%s: %s: unable to stat %s: %s\", applet, path, item,"
    },
    {
        "line": 48,
        "fullcodeline": "linksize = st.st_size+1;"
    },
    {
        "line": 51,
        "fullcodeline": "linkpath = xmalloc(linksize);"
    },
    {
        "line": 52,
        "fullcodeline": "memset(linkpath, 0, linksize);"
    },
    {
        "line": 58,
        "fullcodeline": "close(new_dirfd);"
    },
    {
        "line": 40,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 43,
        "fullcodeline": "strerror(errno));"
    },
    {
        "line": 45,
        "fullcodeline": "if (st.st_uid != 0)"
    },
    {
        "line": 53,
        "fullcodeline": "if (readlinkat(new_dirfd, \"\", linkpath, linksize) != st.st_size)"
    },
    {
        "line": 60,
        "fullcodeline": "close(dirfd);"
    },
    {
        "line": 61,
        "fullcodeline": "dirfd = new_dirfd;"
    },
    {
        "line": 63,
        "fullcodeline": "linkpath = NULL;"
    },
    {
        "line": 46,
        "fullcodeline": "eerrorx(\"%s: %s: symbolic link %s not owned by root\","
    },
    {
        "line": 54,
        "fullcodeline": "eerrorx(\"%s: symbolic link destination changed\", applet);"
    }
]