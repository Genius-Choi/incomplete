[
    {
        "line": 2,
        "fullcodeline": "assert is_local_uri(\"mlruns\")"
    },
    {
        "line": 3,
        "fullcodeline": "assert is_local_uri(\"./mlruns\")"
    },
    {
        "line": 4,
        "fullcodeline": "assert is_local_uri(\"file:///foo/mlruns\")"
    },
    {
        "line": 5,
        "fullcodeline": "assert is_local_uri(\"file:foo/mlruns\")"
    },
    {
        "line": 6,
        "fullcodeline": "assert is_local_uri(\"file://./mlruns\")"
    },
    {
        "line": 7,
        "fullcodeline": "assert is_local_uri(\"file://localhost/mlruns\")"
    },
    {
        "line": 8,
        "fullcodeline": "assert is_local_uri(\"file://localhost:5000/mlruns\")"
    },
    {
        "line": 9,
        "fullcodeline": "assert is_local_uri(\"file://127.0.0.1/mlruns\")"
    },
    {
        "line": 10,
        "fullcodeline": "assert is_local_uri(\"file://127.0.0.1:5000/mlruns\")"
    },
    {
        "line": 11,
        "fullcodeline": "assert is_local_uri(\"//proc/self/root\")"
    },
    {
        "line": 12,
        "fullcodeline": "assert is_local_uri(\"/proc/self/root\")"
    },
    {
        "line": 14,
        "fullcodeline": "assert not is_local_uri(\"https://whatever\")"
    },
    {
        "line": 15,
        "fullcodeline": "assert not is_local_uri(\"http://whatever\")"
    },
    {
        "line": 16,
        "fullcodeline": "assert not is_local_uri(\"databricks\")"
    },
    {
        "line": 17,
        "fullcodeline": "assert not is_local_uri(\"databricks:whatever\")"
    },
    {
        "line": 18,
        "fullcodeline": "assert not is_local_uri(\"databricks://whatever\")"
    },
    {
        "line": 20,
        "fullcodeline": "with pytest.raises(MlflowException, match=\"is not a valid remote uri.\"):"
    },
    {
        "line": 21,
        "fullcodeline": "is_local_uri(\"file://myhostname/path/to/file\")"
    }
]