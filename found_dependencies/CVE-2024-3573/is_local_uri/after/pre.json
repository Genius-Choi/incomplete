[
    {
        "line": 17,
        "fullcodeline": "parsed_uri = urllib.parse.urlparse(uri)"
    },
    {
        "line": 18,
        "fullcodeline": "scheme = parsed_uri.scheme"
    },
    {
        "line": 10,
        "fullcodeline": "if uri == \"databricks\" and is_tracking_or_registry_uri:"
    },
    {
        "line": 19,
        "fullcodeline": "if scheme == \"\":"
    },
    {
        "line": 22,
        "fullcodeline": "is_remote_hostname = parsed_uri.hostname and not ("
    },
    {
        "line": 27,
        "fullcodeline": "if scheme == \"file\":"
    },
    {
        "line": 13,
        "fullcodeline": "if is_windows() and uri.startswith(\"\\\\\\\\\"):"
    },
    {
        "line": 39,
        "fullcodeline": "if is_windows() and len(scheme) == 1 and scheme.lower() == pathlib.Path(uri).drive.lower()[0]:"
    },
    {
        "line": 23,
        "fullcodeline": "parsed_uri.hostname == \".\""
    },
    {
        "line": 24,
        "fullcodeline": "or parsed_uri.hostname.startswith(\"localhost\")"
    },
    {
        "line": 25,
        "fullcodeline": "or parsed_uri.hostname.startswith(\"127.0.0.1\")"
    },
    {
        "line": 29,
        "fullcodeline": "raise MlflowException("
    },
    {
        "line": 30,
        "fullcodeline": "f\"{uri} is not a valid remote uri. For remote access \""
    }
]