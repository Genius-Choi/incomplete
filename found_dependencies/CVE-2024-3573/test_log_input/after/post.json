[
    {
        "line": 2,
        "fullcodeline": "df = pd.DataFrame([[1, 2, 3], [1, 2, 3]], columns=[\"a\", \"b\", \"c\"])"
    },
    {
        "line": 3,
        "fullcodeline": "path = tmp_path / \"temp.csv\""
    },
    {
        "line": 4,
        "fullcodeline": "df.to_csv(path)"
    },
    {
        "line": 5,
        "fullcodeline": "dataset = from_pandas(df, source=path)"
    },
    {
        "line": 7,
        "fullcodeline": "mlflow.set_tracking_uri(mlflow_client.tracking_uri)"
    },
    {
        "line": 14,
        "fullcodeline": "assert len(dataset_inputs) == 1"
    },
    {
        "line": 15,
        "fullcodeline": "assert dataset_inputs[0].dataset.name == \"dataset\""
    },
    {
        "line": 16,
        "fullcodeline": "assert dataset_inputs[0].dataset.digest == \"f0f3e026\""
    },
    {
        "line": 17,
        "fullcodeline": "assert dataset_inputs[0].dataset.source_type == \"local\""
    },
    {
        "line": 18,
        "fullcodeline": "assert json.loads(dataset_inputs[0].dataset.source) == {\"uri\": str(path)}"
    },
    {
        "line": 19,
        "fullcodeline": "assert json.loads(dataset_inputs[0].dataset.schema) == {"
    },
    {
        "line": 26,
        "fullcodeline": "assert json.loads(dataset_inputs[0].dataset.profile) == {\"num_rows\": 2, \"num_elements\": 6}"
    },
    {
        "line": 28,
        "fullcodeline": "assert len(dataset_inputs[0].tags) == 2"
    },
    {
        "line": 29,
        "fullcodeline": "assert dataset_inputs[0].tags[0].key == \"foo\""
    },
    {
        "line": 30,
        "fullcodeline": "assert dataset_inputs[0].tags[0].value == \"baz\""
    },
    {
        "line": 31,
        "fullcodeline": "assert dataset_inputs[0].tags[1].key == mlflow_tags.MLFLOW_DATASET_CONTEXT"
    },
    {
        "line": 32,
        "fullcodeline": "assert dataset_inputs[0].tags[1].value == \"train\""
    },
    {
        "line": 9,
        "fullcodeline": "with mlflow.start_run() as run:"
    },
    {
        "line": 10,
        "fullcodeline": "mlflow.log_input(dataset, \"train\", {\"foo\": \"baz\"})"
    },
    {
        "line": 12,
        "fullcodeline": "dataset_inputs = mlflow_client.get_run(run.info.run_id).inputs.dataset_inputs"
    },
    {
        "line": 20,
        "fullcodeline": "\"mlflow_colspec\": ["
    },
    {
        "line": 21,
        "fullcodeline": "{\"name\": \"a\", \"type\": \"long\", \"required\": True},"
    },
    {
        "line": 22,
        "fullcodeline": "{\"name\": \"b\", \"type\": \"long\", \"required\": True},"
    },
    {
        "line": 23,
        "fullcodeline": "{\"name\": \"c\", \"type\": \"long\", \"required\": True},"
    }
]