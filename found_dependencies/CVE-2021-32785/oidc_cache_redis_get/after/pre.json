[
    {
        "line": 4,
        "fullcodeline": "oidc_cfg *cfg = ap_get_module_config(r->server->module_config,"
    },
    {
        "line": 6,
        "fullcodeline": "oidc_cache_cfg_redis_t *context = (oidc_cache_cfg_redis_t *) cfg->cache_cfg;"
    },
    {
        "line": 7,
        "fullcodeline": "redisReply *reply = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "apr_byte_t rv = FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "reply ="
    },
    {
        "line": 46,
        "fullcodeline": "rv = TRUE;"
    },
    {
        "line": 11,
        "fullcodeline": "if (oidc_cache_mutex_lock(r->server, context->mutex) == FALSE)"
    },
    {
        "line": 16,
        "fullcodeline": "oidc_cache_redis_command(r, context, \"GET %s\", oidc_cache_redis_get_key(r->pool, section, key));"
    },
    {
        "line": 18,
        "fullcodeline": "if (reply == NULL)"
    },
    {
        "line": 22,
        "fullcodeline": "if (reply->type == REDIS_REPLY_NIL) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (reply->type != REDIS_REPLY_STRING) {"
    },
    {
        "line": 43,
        "fullcodeline": "*value = apr_pstrdup(r->pool, reply->str);"
    },
    {
        "line": 24,
        "fullcodeline": "rv = TRUE;"
    },
    {
        "line": 29,
        "fullcodeline": "oidc_error(r, \"redisCommand reply type is not string: %d\", reply->type);"
    },
    {
        "line": 34,
        "fullcodeline": "if ((reply->str == NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "|| (reply->len != strlen(reply->str))) {"
    },
    {
        "line": 36,
        "fullcodeline": "oidc_error(r,"
    }
]