[
    {
        "line": 3,
        "fullcodeline": "UNUSED(mcs_data);"
    },
    {
        "line": 11,
        "fullcodeline": "logger(Protocol, Debug, \"%s()\", __func__);"
    },
    {
        "line": 12,
        "fullcodeline": "s = iso_recv(&is_fastpath, &fastpath_hdr);"
    },
    {
        "line": 19,
        "fullcodeline": "ber_parse_header(s, MCS_CONNECT_RESPONSE, &length);"
    },
    {
        "line": 21,
        "fullcodeline": "ber_parse_header(s, BER_TAG_RESULT, &length);"
    },
    {
        "line": 22,
        "fullcodeline": "in_uint8(s, result);"
    },
    {
        "line": 29,
        "fullcodeline": "ber_parse_header(s, BER_TAG_INTEGER, &length);"
    },
    {
        "line": 30,
        "fullcodeline": "in_uint8s(s, length);\t/* connect id */"
    },
    {
        "line": 37,
        "fullcodeline": "mcs_parse_domain_params(s);"
    },
    {
        "line": 39,
        "fullcodeline": "ber_parse_header(s, BER_TAG_OCTET_STRING, &length);"
    },
    {
        "line": 41,
        "fullcodeline": "sec_process_mcs_data(s);"
    },
    {
        "line": 14,
        "fullcodeline": "if (s == NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (result != 0)"
    },
    {
        "line": 32,
        "fullcodeline": "if (!s_check_rem(s, length))"
    },
    {
        "line": 53,
        "fullcodeline": "return s_check_end(s);"
    },
    {
        "line": 25,
        "fullcodeline": "logger(Protocol, Error, \"mcs_recv_connect_response(), result=%d\", result);"
    },
    {
        "line": 34,
        "fullcodeline": "rdp_protocol_error(\"mcs_recv_connect_response(), consume connect id from stream would overrun\", &packet);"
    }
]