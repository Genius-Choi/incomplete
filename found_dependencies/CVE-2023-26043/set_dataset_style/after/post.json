[
    {
        "line": 22,
        "fullcodeline": "match = None"
    },
    {
        "line": 23,
        "fullcodeline": "styles = list(saved_dataset.styles.all()) + ["
    },
    {
        "line": 29,
        "fullcodeline": "layer = gs_catalog.get_layer(title)"
    },
    {
        "line": 30,
        "fullcodeline": "style = None"
    },
    {
        "line": 25,
        "fullcodeline": "for style in styles:"
    },
    {
        "line": 31,
        "fullcodeline": "if match is None:"
    },
    {
        "line": 50,
        "fullcodeline": "if layer and style:"
    },
    {
        "line": 51,
        "fullcodeline": "_old_styles = []"
    },
    {
        "line": 52,
        "fullcodeline": "_old_styles.append(gs_catalog.get_style("
    },
    {
        "line": 54,
        "fullcodeline": "_old_styles.append(gs_catalog.get_style("
    },
    {
        "line": 62,
        "fullcodeline": "layer.default_style = style"
    },
    {
        "line": 63,
        "fullcodeline": "gs_catalog.save(layer)"
    },
    {
        "line": 73,
        "fullcodeline": "set_styles(saved_dataset, gs_catalog)"
    },
    {
        "line": 56,
        "fullcodeline": "if layer.default_style and layer.default_style.name:"
    },
    {
        "line": 64,
        "fullcodeline": "for _s in _old_styles:"
    },
    {
        "line": 12,
        "fullcodeline": "etree.XML(sld, parser=etree.XMLParser(resolve_entities=False))"
    },
    {
        "line": 18,
        "fullcodeline": "logger.exception(\"The uploaded SLD file is not valid XML\")"
    },
    {
        "line": 19,
        "fullcodeline": "raise Exception(\"The uploaded SLD file is not valid XML\")"
    },
    {
        "line": 26,
        "fullcodeline": "if style and style.name == saved_dataset.name:"
    },
    {
        "line": 33,
        "fullcodeline": "style = gs_catalog.get_style(saved_dataset.name, workspace=saved_dataset.workspace) or \\"
    },
    {
        "line": 42,
        "fullcodeline": "_sld_format = _extract_style_version_from_sld(sld)"
    },
    {
        "line": 43,
        "fullcodeline": "style = gs_catalog.create_style("
    },
    {
        "line": 55,
        "fullcodeline": "name=f\"{saved_dataset.workspace}_{saved_dataset.name}\"))"
    },
    {
        "line": 57,
        "fullcodeline": "_old_styles.append(gs_catalog.get_style("
    },
    {
        "line": 59,
        "fullcodeline": "_old_styles.append(gs_catalog.get_style("
    },
    {
        "line": 5,
        "fullcodeline": "if isfile(sld):"
    },
    {
        "line": 13,
        "fullcodeline": "elif base_file and isfile(base_file):"
    },
    {
        "line": 27,
        "fullcodeline": "match = style"
    },
    {
        "line": 35,
        "fullcodeline": "if not style:"
    },
    {
        "line": 16,
        "fullcodeline": "dlxml.parse(base_file)"
    },
    {
        "line": 34,
        "fullcodeline": "gs_catalog.get_style(saved_dataset.name)"
    },
    {
        "line": 36,
        "fullcodeline": "style = gs_catalog.create_style("
    },
    {
        "line": 39,
        "fullcodeline": "logger.exception(e)"
    },
    {
        "line": 48,
        "fullcodeline": "logger.exception(e)"
    },
    {
        "line": 6,
        "fullcodeline": "with open(sld, \"rb\") as sld_file:"
    },
    {
        "line": 9,
        "fullcodeline": "elif isinstance(sld, str):"
    },
    {
        "line": 14,
        "fullcodeline": "with open(base_file, \"rb\") as sld_file:"
    },
    {
        "line": 66,
        "fullcodeline": "gs_catalog.delete(_s)"
    },
    {
        "line": 10,
        "fullcodeline": "sld = sld.strip('b\\'\\n')"
    },
    {
        "line": 11,
        "fullcodeline": "sld = re.sub(r'(\\\\r)|(\\\\n)', '', sld).encode(\"UTF-8\")"
    },
    {
        "line": 67,
        "fullcodeline": "Link.objects.filter("
    },
    {
        "line": 7,
        "fullcodeline": "sld = sld_file.read()"
    },
    {
        "line": 15,
        "fullcodeline": "sld = sld_file.read()"
    },
    {
        "line": 72,
        "fullcodeline": "logger.debug(e)"
    },
    {
        "line": 70,
        "fullcodeline": "url__contains=f'STYLE={_s.name}').delete()"
    }
]