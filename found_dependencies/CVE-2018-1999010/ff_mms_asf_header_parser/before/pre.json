[
    {
        "line": 3,
        "fullcodeline": "uint8_t *p = mms->asf_header;"
    },
    {
        "line": 6,
        "fullcodeline": "mms->stream_num = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "end = mms->asf_header + mms->asf_header_size;"
    },
    {
        "line": 18,
        "fullcodeline": "p += sizeof(ff_asf_guid) + 14;"
    },
    {
        "line": 8,
        "fullcodeline": "if (mms->asf_header_size < sizeof(ff_asf_guid) * 2 + 22 ||"
    },
    {
        "line": 9,
        "fullcodeline": "memcmp(p, ff_asf_header, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 10,
        "fullcodeline": "av_log(NULL, AV_LOG_ERROR,"
    },
    {
        "line": 19,
        "fullcodeline": "while(end - p >= sizeof(ff_asf_guid) + 8) {"
    },
    {
        "line": 94,
        "fullcodeline": "p += chunksize;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!memcmp(p, ff_asf_data_header, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 22,
        "fullcodeline": "chunksize = 50; // see Reference [2] section 5.1"
    },
    {
        "line": 26,
        "fullcodeline": "if (!chunksize || chunksize > end - p) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!memcmp(p, ff_asf_file_header, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 24,
        "fullcodeline": "chunksize = AV_RL64(p + sizeof(ff_asf_guid));"
    },
    {
        "line": 34,
        "fullcodeline": "if (end - p > sizeof(ff_asf_guid) * 2 + 68) {"
    },
    {
        "line": 35,
        "fullcodeline": "mms->asf_packet_len = AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64);"
    },
    {
        "line": 43,
        "fullcodeline": "} else if (!memcmp(p, ff_asf_stream_header, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 44,
        "fullcodeline": "flags     = AV_RL16(p + sizeof(ff_asf_guid)*3 + 24);"
    },
    {
        "line": 45,
        "fullcodeline": "stream_id = flags & 0x7F;"
    },
    {
        "line": 36,
        "fullcodeline": "if (mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (mms->stream_num < MMS_MAX_STREAMS &&"
    },
    {
        "line": 50,
        "fullcodeline": "46 + mms->stream_num * 6 < sizeof(mms->out_buffer)) {"
    },
    {
        "line": 51,
        "fullcodeline": "mms->streams = av_fast_realloc(mms->streams,"
    },
    {
        "line": 57,
        "fullcodeline": "mms->stream_num++;"
    },
    {
        "line": 54,
        "fullcodeline": "if (!mms->streams)"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (!memcmp(p, ff_asf_ext_stream_header, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 53,
        "fullcodeline": "(mms->stream_num + 1) * sizeof(MMSStream));"
    },
    {
        "line": 55,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 64,
        "fullcodeline": "if (end - p >= 88) {"
    },
    {
        "line": 65,
        "fullcodeline": "int stream_count = AV_RL16(p + 84), ext_len_count = AV_RL16(p + 86);"
    },
    {
        "line": 66,
        "fullcodeline": "uint64_t skip_bytes = 88;"
    },
    {
        "line": 83,
        "fullcodeline": "if (end - p < skip_bytes) {"
    },
    {
        "line": 91,
        "fullcodeline": "} else if (!memcmp(p, ff_asf_head1_guid, sizeof(ff_asf_guid))) {"
    },
    {
        "line": 92,
        "fullcodeline": "chunksize = 46; // see references [2] section 3.4. This should be set 46."
    },
    {
        "line": 73,
        "fullcodeline": "skip_bytes += 4 + AV_RL16(p + skip_bytes + 2);"
    },
    {
        "line": 81,
        "fullcodeline": "skip_bytes += 22 + AV_RL32(p + skip_bytes + 18);"
    },
    {
        "line": 88,
        "fullcodeline": "if (chunksize - skip_bytes > 24)"
    },
    {
        "line": 89,
        "fullcodeline": "chunksize = skip_bytes;"
    },
    {
        "line": 68,
        "fullcodeline": "if (end - p < skip_bytes + 4) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (end - p < skip_bytes + 22) {"
    }
]