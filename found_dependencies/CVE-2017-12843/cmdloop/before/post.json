[
    {
        "line": 6,
        "fullcodeline": "char *p, shut[MAX_MAILBOX_PATH+1], cmdname[100];"
    },
    {
        "line": 9,
        "fullcodeline": "double commandmintimerd = 0.0;"
    },
    {
        "line": 10,
        "fullcodeline": "struct sync_reserve_list *reserve_list ="
    },
    {
        "line": 14,
        "fullcodeline": "prot_printf(imapd_out, \"* OK [CAPABILITY \");"
    },
    {
        "line": 15,
        "fullcodeline": "capa_response(CAPA_PREAUTH);"
    },
    {
        "line": 16,
        "fullcodeline": "prot_printf(imapd_out, \"]\");"
    },
    {
        "line": 21,
        "fullcodeline": "prot_printf(imapd_out, \" server ready\\r\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "cmd_cancelled();"
    },
    {
        "line": 26,
        "fullcodeline": "motd_file();"
    },
    {
        "line": 31,
        "fullcodeline": "commandmintimer = config_getstring(IMAPOPT_COMMANDMINTIMER);"
    },
    {
        "line": 32,
        "fullcodeline": "cmdtime_settimer(commandmintimer ? 1 : 0);"
    },
    {
        "line": 1273,
        "fullcodeline": "cmd_syncrestart(NULL, &reserve_list, 0);"
    },
    {
        "line": 11,
        "fullcodeline": "sync_reserve_list_create(SYNC_MESSAGE_LIST_HASH_SIZE);"
    },
    {
        "line": 18,
        "fullcodeline": "if (config_serverinfo == IMAP_ENUM_SERVERINFO_ON) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (config_serverinfo) prot_printf(imapd_out, \" %s\", config_servername);"
    },
    {
        "line": 19,
        "fullcodeline": "prot_printf(imapd_out, \" Cyrus IMAP %s\", cyrus_version());"
    },
    {
        "line": 34,
        "fullcodeline": "commandmintimerd = atof(commandmintimer);"
    },
    {
        "line": 39,
        "fullcodeline": "index_release(imapd_index);"
    },
    {
        "line": 42,
        "fullcodeline": "prot_flush(imapd_out);"
    },
    {
        "line": 46,
        "fullcodeline": "proc_register(config_ident, imapd_clienthost, imapd_userid, index_mboxname(imapd_index), NULL);"
    },
    {
        "line": 58,
        "fullcodeline": "signals_poll();"
    },
    {
        "line": 68,
        "fullcodeline": "c = getword(imapd_in, &tag);"
    },
    {
        "line": 84,
        "fullcodeline": "c = getword(imapd_in, &cmd);"
    },
    {
        "line": 90,
        "fullcodeline": "lcase(cmd.s);"
    },
    {
        "line": 91,
        "fullcodeline": "xstrncpy(cmdname, cmd.s, 99);"
    },
    {
        "line": 92,
        "fullcodeline": "cmd.s[0] = toupper((unsigned char) cmd.s[0]);"
    },
    {
        "line": 97,
        "fullcodeline": "proc_register(config_ident, imapd_clienthost, imapd_userid, index_mboxname(imapd_index), cmd.s);"
    },
    {
        "line": 116,
        "fullcodeline": "cmdtime_starttimer();"
    },
    {
        "line": 1225,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Please login first\\r\\n\", tag.s);"
    },
    {
        "line": 1226,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1230,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 1232,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1236,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_account_id);"
    },
    {
        "line": 1237,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_device_token);"
    },
    {
        "line": 1238,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_subtopic);"
    },
    {
        "line": 1239,
        "fullcodeline": "strarray_fini(&applepushserviceargs.mailboxes);"
    },
    {
        "line": 1242,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 1244,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1248,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_account_id);"
    },
    {
        "line": 1249,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_device_token);"
    },
    {
        "line": 1250,
        "fullcodeline": "buf_free(&applepushserviceargs.aps_subtopic);"
    },
    {
        "line": 1251,
        "fullcodeline": "strarray_fini(&applepushserviceargs.mailboxes);"
    },
    {
        "line": 1254,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 1256,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1260,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 1262,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1266,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 1268,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 49,
        "fullcodeline": "if ( !imapd_userisadmin && imapd_userid &&"
    },
    {
        "line": 60,
        "fullcodeline": "if (!proxy_check_input(protin, imapd_in, imapd_out,"
    },
    {
        "line": 69,
        "fullcodeline": "if (c == EOF) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (c != ' ' || !imparse_isatom(tag.s) || (tag.s[0] == '*' && !tag.s[1])) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (!cmd.s[0]) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (config_getswitch(IMAPOPT_CHATTY))"
    },
    {
        "line": 113,
        "fullcodeline": "if (!imapd_userid && !strchr(\"AELNCIS\", cmd.s[0])) goto nologin;"
    },
    {
        "line": 1211,
        "fullcodeline": "if (commandmintimer && strcmp(\"idle\", cmdname)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (backend_current) prot_flush(backend_current->out);"
    },
    {
        "line": 50,
        "fullcodeline": "(shutdown_file(shut, sizeof(shut)) ||"
    },
    {
        "line": 53,
        "fullcodeline": "prot_printf(imapd_out, \"* BYE [ALERT] %s\\r\\n\", p);"
    },
    {
        "line": 54,
        "fullcodeline": "telemetry_rusage(imapd_userid);"
    },
    {
        "line": 55,
        "fullcodeline": "shut_down(0);"
    },
    {
        "line": 78,
        "fullcodeline": "prot_printf(imapd_out, \"* BAD Invalid tag\\r\\n\");"
    },
    {
        "line": 79,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 86,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Null command\\r\\n\", tag.s);"
    },
    {
        "line": 87,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 95,
        "fullcodeline": "syslog(LOG_NOTICE, \"command: %s %s\", tag.s, cmd.s);"
    },
    {
        "line": 101,
        "fullcodeline": "kick_mupdate();"
    },
    {
        "line": 102,
        "fullcodeline": "referral_kick = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "prot_printf(imapd_out, \"* OK [ALERT] %s\\r\\n\","
    },
    {
        "line": 108,
        "fullcodeline": "plaintextloginalert = NULL;"
    },
    {
        "line": 1206,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Unrecognized command\\r\\n\", tag.s);"
    },
    {
        "line": 1207,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1213,
        "fullcodeline": "const char *mboxname = index_mboxname(imapd_index);"
    },
    {
        "line": 1215,
        "fullcodeline": "cmdtime_endtimer(&cmdtime, &nettime);"
    },
    {
        "line": 51,
        "fullcodeline": "userdeny(imapd_userid, config_ident, shut, sizeof(shut)))) {"
    },
    {
        "line": 52,
        "fullcodeline": "for (p = shut; *p == '['; p++); /* can't have [ be first char */"
    },
    {
        "line": 61,
        "fullcodeline": "backend_current ? backend_current->in : NULL,"
    },
    {
        "line": 70,
        "fullcodeline": "if ((err = prot_error(imapd_in))!=NULL"
    },
    {
        "line": 123,
        "fullcodeline": "if (!strcmp(cmd.s, \"Authenticate\")) {"
    },
    {
        "line": 163,
        "fullcodeline": "if (!strcmp(cmd.s, \"Capability\")) {"
    },
    {
        "line": 240,
        "fullcodeline": "if (!strcmp(cmd.s, \"Delete\")) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (!imapd_userid) goto nologin;"
    },
    {
        "line": 312,
        "fullcodeline": "if (!strcmp(cmd.s, \"Fetch\")) {"
    },
    {
        "line": 329,
        "fullcodeline": "if (!strcmp(cmd.s, \"Getacl\")) {"
    },
    {
        "line": 387,
        "fullcodeline": "if (!strcmp(cmd.s, \"Id\")) {"
    },
    {
        "line": 405,
        "fullcodeline": "if (!strcmp(cmd.s, \"Login\")) {"
    },
    {
        "line": 523,
        "fullcodeline": "if (!strcmp(cmd.s, \"Myrights\")) {"
    },
    {
        "line": 563,
        "fullcodeline": "if (!strcmp(cmd.s, \"Noop\")) {"
    },
    {
        "line": 583,
        "fullcodeline": "if (!strcmp(cmd.s, \"Rename\")) {"
    },
    {
        "line": 683,
        "fullcodeline": "if (!strcmp(cmd.s, \"Starttls\")) {"
    },
    {
        "line": 721,
        "fullcodeline": "if (!imapd_userid) {"
    },
    {
        "line": 889,
        "fullcodeline": "if (!strcmp(cmd.s, \"Thread\")) {"
    },
    {
        "line": 902,
        "fullcodeline": "if (!strcmp(cmd.s, \"Uid\")) {"
    },
    {
        "line": 1002,
        "fullcodeline": "if (!strcmp(cmd.s, \"Xbackup\")) {"
    },
    {
        "line": 1214,
        "fullcodeline": "if (!mboxname) mboxname = \"<none>\";"
    },
    {
        "line": 1216,
        "fullcodeline": "if (cmdtime >= commandmintimerd) {"
    },
    {
        "line": 71,
        "fullcodeline": "&& strcmp(err, PROT_EOF_STRING)) {"
    },
    {
        "line": 72,
        "fullcodeline": "syslog(LOG_WARNING, \"%s, closing connection\", err);"
    },
    {
        "line": 73,
        "fullcodeline": "prot_printf(imapd_out, \"* BYE %s\\r\\n\", err);"
    },
    {
        "line": 124,
        "fullcodeline": "int haveinitresp = 0;"
    },
    {
        "line": 127,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 145,
        "fullcodeline": "cmd_authenticate(tag.s, arg1.s, haveinitresp ? arg2.s : NULL);"
    },
    {
        "line": 147,
        "fullcodeline": "snmp_increment(AUTHENTICATE_COUNT, 1);"
    },
    {
        "line": 166,
        "fullcodeline": "cmd_capability(tag.s);"
    },
    {
        "line": 168,
        "fullcodeline": "snmp_increment(CAPABILITY_COUNT, 1);"
    },
    {
        "line": 242,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 246,
        "fullcodeline": "cmd_delete(tag.s, arg1.s, 0, 0);"
    },
    {
        "line": 248,
        "fullcodeline": "snmp_increment(DELETE_COUNT, 1);"
    },
    {
        "line": 314,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 317,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 321,
        "fullcodeline": "cmd_fetch(tag.s, arg1.s, usinguid);"
    },
    {
        "line": 323,
        "fullcodeline": "snmp_increment(FETCH_COUNT, 1);"
    },
    {
        "line": 331,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 335,
        "fullcodeline": "cmd_getacl(tag.s, arg1.s);"
    },
    {
        "line": 337,
        "fullcodeline": "snmp_increment(GETACL_COUNT, 1);"
    },
    {
        "line": 389,
        "fullcodeline": "cmd_id(tag.s);"
    },
    {
        "line": 391,
        "fullcodeline": "snmp_increment(ID_COUNT, 1);"
    },
    {
        "line": 407,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 410,
        "fullcodeline": "cmd_login(tag.s, arg1.s);"
    },
    {
        "line": 412,
        "fullcodeline": "snmp_increment(LOGIN_COUNT, 1);"
    },
    {
        "line": 525,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 529,
        "fullcodeline": "cmd_myrights(tag.s, arg1.s);"
    },
    {
        "line": 567,
        "fullcodeline": "cmd_noop(tag.s, cmd.s);"
    },
    {
        "line": 584,
        "fullcodeline": "havepartition = 0;"
    },
    {
        "line": 586,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 588,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 597,
        "fullcodeline": "cmd_rename(tag.s, arg1.s, arg2.s, havepartition ? arg3.s : 0);"
    },
    {
        "line": 693,
        "fullcodeline": "prot_flush(imapd_in);"
    },
    {
        "line": 716,
        "fullcodeline": "cmd_starttls(tag.s, 0);"
    },
    {
        "line": 718,
        "fullcodeline": "snmp_increment(STARTTLS_COUNT, 1);"
    },
    {
        "line": 891,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 894,
        "fullcodeline": "cmd_thread(tag.s, usinguid);"
    },
    {
        "line": 896,
        "fullcodeline": "snmp_increment(THREAD_COUNT, 1);"
    },
    {
        "line": 904,
        "fullcodeline": "usinguid = 1;"
    },
    {
        "line": 906,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 908,
        "fullcodeline": "lcase(arg1.s);"
    },
    {
        "line": 909,
        "fullcodeline": "xstrncpy(cmdname, arg1.s, 99);"
    },
    {
        "line": 1003,
        "fullcodeline": "int havechannel = 0;"
    },
    {
        "line": 1010,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 1022,
        "fullcodeline": "cmd_xbackup(tag.s, arg1.s, havechannel ? arg2.s : NULL);"
    },
    {
        "line": 1217,
        "fullcodeline": "syslog(LOG_NOTICE, \"cmdtimer: '%s' '%s' '%s' '%f' '%f' '%f'\","
    },
    {
        "line": 126,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 128,
        "fullcodeline": "if (!imparse_isatom(arg1.s)) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 138,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 139,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 164,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 165,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 241,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 243,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 244,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 245,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 313,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 315,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 318,
        "fullcodeline": "if (c == '\\r') goto missingargs;"
    },
    {
        "line": 319,
        "fullcodeline": "if (c != ' ' || !imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 330,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 332,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 333,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 334,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 388,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 406,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 408,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 524,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 526,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 527,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 528,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 564,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 565,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 585,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 587,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 589,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 590,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 595,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 596,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 684,
        "fullcodeline": "if (!tls_enabled()) {"
    },
    {
        "line": 689,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 690,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 696,
        "fullcodeline": "if (imapd_userid != NULL) {"
    },
    {
        "line": 703,
        "fullcodeline": "if (imapd_compress_done == 1) {"
    },
    {
        "line": 710,
        "fullcodeline": "if (imapd_starttls_done == 1) {"
    },
    {
        "line": 890,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 892,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 903,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 905,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 907,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 910,
        "fullcodeline": "if (!strcmp(arg1.s, \"fetch\")) {"
    },
    {
        "line": 1005,
        "fullcodeline": "if (!config_getswitch(IMAPOPT_XBACKUP_ENABLED))"
    },
    {
        "line": 1009,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1013,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 1019,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1020,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 1218,
        "fullcodeline": "imapd_userid ? imapd_userid : \"<none>\", cmdname, mboxname,"
    },
    {
        "line": 1219,
        "fullcodeline": "cmdtime, nettime, cmdtime + nettime);"
    },
    {
        "line": 129,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Invalid authenticate mechanism\\r\\n\", tag.s);"
    },
    {
        "line": 130,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 134,
        "fullcodeline": "haveinitresp = 1;"
    },
    {
        "line": 135,
        "fullcodeline": "c = getword(imapd_in, &arg2);"
    },
    {
        "line": 142,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Already authenticated\\r\\n\", tag.s);"
    },
    {
        "line": 149,
        "fullcodeline": "else if (!imapd_userid) goto nologin;"
    },
    {
        "line": 170,
        "fullcodeline": "else if (!imapd_userid) goto nologin;"
    },
    {
        "line": 250,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Deleteacl\")) {"
    },
    {
        "line": 284,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Enable\")) {"
    },
    {
        "line": 339,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Getannotation\")) {"
    },
    {
        "line": 393,
        "fullcodeline": "else if (!imapd_userid) goto nologin;"
    },
    {
        "line": 414,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Logout\")) {"
    },
    {
        "line": 533,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Mupdatepush\")) {"
    },
    {
        "line": 571,
        "fullcodeline": "else if (!imapd_userid) goto nologin;"
    },
    {
        "line": 591,
        "fullcodeline": "havepartition = 1;"
    },
    {
        "line": 592,
        "fullcodeline": "c = getword(imapd_in, &arg3);"
    },
    {
        "line": 600,
        "fullcodeline": "} else if(!strcmp(cmd.s, \"Reconstruct\")) {"
    },
    {
        "line": 697,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 704,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 711,
        "fullcodeline": "prot_printf(imapd_out,"
    },
    {
        "line": 723,
        "fullcodeline": "} else if (!strcmp(cmd.s, \"Store\")) {"
    },
    {
        "line": 951,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Unsubscribe\")) {"
    },
    {
        "line": 1014,
        "fullcodeline": "havechannel = 1;"
    },
    {
        "line": 1015,
        "fullcodeline": "c = getword(imapd_in, &arg2);"
    },
    {
        "line": 1026,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xconvfetch\")) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 252,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 254,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 258,
        "fullcodeline": "cmd_setacl(tag.s, arg1.s, arg2.s, NULL);"
    },
    {
        "line": 260,
        "fullcodeline": "snmp_increment(DELETEACL_COUNT, 1);"
    },
    {
        "line": 287,
        "fullcodeline": "cmd_enable(tag.s);"
    },
    {
        "line": 341,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 344,
        "fullcodeline": "cmd_getannotation(tag.s, arg1.s);"
    },
    {
        "line": 346,
        "fullcodeline": "snmp_increment(GETANNOTATION_COUNT, 1);"
    },
    {
        "line": 418,
        "fullcodeline": "snmp_increment(LOGOUT_COUNT, 1);"
    },
    {
        "line": 423,
        "fullcodeline": "prot_printf(imapd_out, \"* BYE %s\\r\\n\","
    },
    {
        "line": 425,
        "fullcodeline": "prot_printf(imapd_out, \"%s OK %s\\r\\n\", tag.s,"
    },
    {
        "line": 535,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 539,
        "fullcodeline": "cmd_mupdatepush(tag.s, arg1.s);"
    },
    {
        "line": 593,
        "fullcodeline": "if (!imparse_isatom(arg3.s)) goto badpartition;"
    },
    {
        "line": 601,
        "fullcodeline": "recursive = 0;"
    },
    {
        "line": 603,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 616,
        "fullcodeline": "cmd_reconstruct(tag.s, arg1.s, recursive);"
    },
    {
        "line": 725,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 728,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 731,
        "fullcodeline": "cmd_store(tag.s, arg1.s, usinguid);"
    },
    {
        "line": 733,
        "fullcodeline": "snmp_increment(STORE_COUNT, 1);"
    },
    {
        "line": 953,
        "fullcodeline": "havenamespace = 0;"
    },
    {
        "line": 954,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 969,
        "fullcodeline": "snmp_increment(UNSUBSCRIBE_COUNT, 1);"
    },
    {
        "line": 1016,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 1027,
        "fullcodeline": "cmd_xconvfetch(tag.s);"
    },
    {
        "line": 251,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 253,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 255,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 256,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 257,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 285,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 340,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 342,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 415,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 416,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 424,
        "fullcodeline": "error_message(IMAP_BYE_LOGOUT));"
    },
    {
        "line": 426,
        "fullcodeline": "error_message(IMAP_OK_COMPLETED));"
    },
    {
        "line": 428,
        "fullcodeline": "if (imapd_userid && *imapd_userid) {"
    },
    {
        "line": 534,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 536,
        "fullcodeline": "if(c == EOF) goto missingargs;"
    },
    {
        "line": 537,
        "fullcodeline": "if(c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 538,
        "fullcodeline": "if(c != '\\n') goto extraargs;"
    },
    {
        "line": 602,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 604,
        "fullcodeline": "if(c == ' ') {"
    },
    {
        "line": 614,
        "fullcodeline": "if(c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 615,
        "fullcodeline": "if(c != '\\n') goto extraargs;"
    },
    {
        "line": 724,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 726,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 729,
        "fullcodeline": "if (c != ' ' || !imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 913,
        "fullcodeline": "else if (!strcmp(arg1.s, \"store\")) {"
    },
    {
        "line": 952,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 955,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 959,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 960,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 961,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 150,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Append\")) {"
    },
    {
        "line": 184,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Check\")) {"
    },
    {
        "line": 262,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Dump\")) {"
    },
    {
        "line": 289,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Expunge\")) {"
    },
    {
        "line": 348,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Getmetadata\")) {"
    },
    {
        "line": 394,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Idle\") && idle_enabled()) {"
    },
    {
        "line": 421,
        "fullcodeline": "if (backend_current) imapd_check(NULL, 0);"
    },
    {
        "line": 429,
        "fullcodeline": "telemetry_rusage(imapd_userid);"
    },
    {
        "line": 434,
        "fullcodeline": "else if (!imapd_userid) goto nologin;"
    },
    {
        "line": 543,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Move\")) {"
    },
    {
        "line": 572,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Namespace\")) {"
    },
    {
        "line": 606,
        "fullcodeline": "c = getword(imapd_in, &arg2);"
    },
    {
        "line": 620,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Rlist\")) {"
    },
    {
        "line": 735,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Select\")) {"
    },
    {
        "line": 956,
        "fullcodeline": "havenamespace = 1;"
    },
    {
        "line": 957,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 963,
        "fullcodeline": "cmd_changesub(tag.s, arg1.s, arg2.s, 0);"
    },
    {
        "line": 971,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Unselect\")) {"
    },
    {
        "line": 1031,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xconvmultisort\")) {"
    },
    {
        "line": 152,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 155,
        "fullcodeline": "cmd_append(tag.s, arg1.s, NULL);"
    },
    {
        "line": 157,
        "fullcodeline": "snmp_increment(APPEND_COUNT, 1);"
    },
    {
        "line": 189,
        "fullcodeline": "cmd_noop(tag.s, cmd.s);"
    },
    {
        "line": 191,
        "fullcodeline": "snmp_increment(CHECK_COUNT, 1);"
    },
    {
        "line": 263,
        "fullcodeline": "int uid_start = 0;"
    },
    {
        "line": 266,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 276,
        "fullcodeline": "cmd_dump(tag.s, arg1.s, uid_start);"
    },
    {
        "line": 294,
        "fullcodeline": "cmd_expunge(tag.s, 0);"
    },
    {
        "line": 296,
        "fullcodeline": "snmp_increment(EXPUNGE_COUNT, 1);"
    },
    {
        "line": 351,
        "fullcodeline": "cmd_getmetadata(tag.s);"
    },
    {
        "line": 353,
        "fullcodeline": "snmp_increment(GETANNOTATION_COUNT, 1);"
    },
    {
        "line": 397,
        "fullcodeline": "cmd_idle(tag.s);"
    },
    {
        "line": 399,
        "fullcodeline": "snmp_increment(IDLE_COUNT, 1);"
    },
    {
        "line": 545,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 548,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 551,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 556,
        "fullcodeline": "cmd_copy(tag.s, arg1.s, arg2.s, usinguid, /*ismove*/1);"
    },
    {
        "line": 558,
        "fullcodeline": "snmp_increment(COPY_COUNT, 1);"
    },
    {
        "line": 575,
        "fullcodeline": "cmd_namespace(tag.s);"
    },
    {
        "line": 607,
        "fullcodeline": "if(!imparse_isatom(arg2.s))"
    },
    {
        "line": 623,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 625,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 629,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 630,
        "fullcodeline": "listargs.sel = LIST_SEL_REMOTE;"
    },
    {
        "line": 631,
        "fullcodeline": "listargs.ret = LIST_RET_CHILDREN;"
    },
    {
        "line": 632,
        "fullcodeline": "listargs.ref = arg1.s;"
    },
    {
        "line": 633,
        "fullcodeline": "strarray_append(&listargs.pat, arg2.s);"
    },
    {
        "line": 635,
        "fullcodeline": "cmd_list(tag.s, &listargs);"
    },
    {
        "line": 737,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 739,
        "fullcodeline": "prot_ungetc(c, imapd_in);"
    },
    {
        "line": 741,
        "fullcodeline": "cmd_select(tag.s, cmd.s, arg1.s);"
    },
    {
        "line": 743,
        "fullcodeline": "snmp_increment(SELECT_COUNT, 1);"
    },
    {
        "line": 966,
        "fullcodeline": "cmd_changesub(tag.s, (char *)0, arg1.s, 0);"
    },
    {
        "line": 976,
        "fullcodeline": "cmd_close(tag.s, cmd.s);"
    },
    {
        "line": 978,
        "fullcodeline": "snmp_increment(UNSELECT_COUNT, 1);"
    },
    {
        "line": 1034,
        "fullcodeline": "cmd_xconvmultisort(tag.s);"
    },
    {
        "line": 151,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 153,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 185,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 186,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 187,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 265,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 267,
        "fullcodeline": "if(c == ' ') {"
    },
    {
        "line": 273,
        "fullcodeline": "if(c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 274,
        "fullcodeline": "if(c != '\\n') goto extraargs;"
    },
    {
        "line": 290,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 291,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 292,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 349,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 395,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 396,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 544,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 546,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 549,
        "fullcodeline": "if (c == '\\r') goto missingargs;"
    },
    {
        "line": 550,
        "fullcodeline": "if (c != ' ' || !imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 552,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 553,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 554,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 573,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 574,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 624,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 626,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 627,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 736,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 738,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 916,
        "fullcodeline": "else if (!strcmp(arg1.s, \"search\")) {"
    },
    {
        "line": 972,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 973,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 974,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 1032,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1033,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 193,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Copy\")) {"
    },
    {
        "line": 268,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 270,
        "fullcodeline": "uid_start = atoi(arg2.s);"
    },
    {
        "line": 298,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Examine\")) {"
    },
    {
        "line": 355,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Getquota\")) {"
    },
    {
        "line": 435,
        "fullcodeline": "else if (!strcmp(cmd.s, \"List\")) {"
    },
    {
        "line": 639,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Rlsub\")) {"
    },
    {
        "line": 745,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Search\")) {"
    },
    {
        "line": 980,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Undump\")) {"
    },
    {
        "line": 1038,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xconvsort\")) {"
    },
    {
        "line": 195,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 198,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 201,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 206,
        "fullcodeline": "cmd_copy(tag.s, arg1.s, arg2.s, usinguid, /*ismove*/0);"
    },
    {
        "line": 208,
        "fullcodeline": "snmp_increment(COPY_COUNT, 1);"
    },
    {
        "line": 269,
        "fullcodeline": "if(!imparse_isnumber(arg2.s)) goto extraargs;"
    },
    {
        "line": 300,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 302,
        "fullcodeline": "prot_ungetc(c, imapd_in);"
    },
    {
        "line": 304,
        "fullcodeline": "cmd_select(tag.s, cmd.s, arg1.s);"
    },
    {
        "line": 306,
        "fullcodeline": "snmp_increment(EXAMINE_COUNT, 1);"
    },
    {
        "line": 357,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 361,
        "fullcodeline": "cmd_getquota(tag.s, arg1.s);"
    },
    {
        "line": 363,
        "fullcodeline": "snmp_increment(GETQUOTA_COUNT, 1);"
    },
    {
        "line": 440,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 441,
        "fullcodeline": "listargs.ret = LIST_RET_CHILDREN;"
    },
    {
        "line": 442,
        "fullcodeline": "getlistargs(tag.s, &listargs);"
    },
    {
        "line": 445,
        "fullcodeline": "snmp_increment(LIST_COUNT, 1);"
    },
    {
        "line": 609,
        "fullcodeline": "else if(!strcasecmp(arg2.s, \"RECURSIVE\"))"
    },
    {
        "line": 642,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 644,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 648,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 649,
        "fullcodeline": "listargs.cmd = LIST_CMD_LSUB;"
    },
    {
        "line": 650,
        "fullcodeline": "listargs.sel = LIST_SEL_REMOTE | LIST_SEL_SUBSCRIBED;"
    },
    {
        "line": 651,
        "fullcodeline": "listargs.ref = arg1.s;"
    },
    {
        "line": 652,
        "fullcodeline": "strarray_append(&listargs.pat, arg2.s);"
    },
    {
        "line": 654,
        "fullcodeline": "cmd_list(tag.s, &listargs);"
    },
    {
        "line": 747,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 751,
        "fullcodeline": "cmd_search(tag.s, usinguid);"
    },
    {
        "line": 753,
        "fullcodeline": "snmp_increment(SEARCH_COUNT, 1);"
    },
    {
        "line": 982,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 987,
        "fullcodeline": "cmd_undump(tag.s, arg1.s);"
    },
    {
        "line": 1041,
        "fullcodeline": "cmd_xconvsort(tag.s, 0);"
    },
    {
        "line": 194,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 196,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 199,
        "fullcodeline": "if (c == '\\r') goto missingargs;"
    },
    {
        "line": 200,
        "fullcodeline": "if (c != ' ' || !imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 202,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 203,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 204,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 299,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 301,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 356,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 358,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 359,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 360,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 438,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 610,
        "fullcodeline": "recursive = 1;"
    },
    {
        "line": 643,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 645,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 646,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 746,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 748,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 919,
        "fullcodeline": "else if (!strcmp(arg1.s, \"sort\")) {"
    },
    {
        "line": 981,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 985,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 1039,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1040,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 210,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Create\")) {"
    },
    {
        "line": 365,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Getquotaroot\")) {"
    },
    {
        "line": 443,
        "fullcodeline": "if (listargs.pat.count) cmd_list(tag.s, &listargs);"
    },
    {
        "line": 447,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Lsub\")) {"
    },
    {
        "line": 755,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Subscribe\")) {"
    },
    {
        "line": 1045,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xconvupdates\")) {"
    },
    {
        "line": 211,
        "fullcodeline": "struct dlist *extargs = NULL;"
    },
    {
        "line": 214,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 222,
        "fullcodeline": "cmd_create(tag.s, arg1.s, extargs, 0);"
    },
    {
        "line": 223,
        "fullcodeline": "dlist_free(&extargs);"
    },
    {
        "line": 225,
        "fullcodeline": "snmp_increment(CREATE_COUNT, 1);"
    },
    {
        "line": 367,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 371,
        "fullcodeline": "cmd_getquotaroot(tag.s, arg1.s);"
    },
    {
        "line": 373,
        "fullcodeline": "snmp_increment(GETQUOTAROOT_COUNT, 1);"
    },
    {
        "line": 450,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 452,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 456,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 457,
        "fullcodeline": "listargs.cmd = LIST_CMD_LSUB;"
    },
    {
        "line": 458,
        "fullcodeline": "listargs.sel = LIST_SEL_SUBSCRIBED;"
    },
    {
        "line": 461,
        "fullcodeline": "listargs.ref = arg1.s;"
    },
    {
        "line": 462,
        "fullcodeline": "strarray_append(&listargs.pat, arg2.s);"
    },
    {
        "line": 464,
        "fullcodeline": "cmd_list(tag.s, &listargs);"
    },
    {
        "line": 466,
        "fullcodeline": "snmp_increment(LSUB_COUNT, 1);"
    },
    {
        "line": 757,
        "fullcodeline": "havenamespace = 0;"
    },
    {
        "line": 758,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 772,
        "fullcodeline": "snmp_increment(SUBSCRIBE_COUNT, 1);"
    },
    {
        "line": 1048,
        "fullcodeline": "cmd_xconvsort(tag.s, 1);"
    },
    {
        "line": 213,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 215,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 216,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 220,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 221,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 366,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 368,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 369,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 370,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 451,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 453,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 454,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 459,
        "fullcodeline": "if (!strcasecmpsafe(imapd_magicplus, \"+dav\"))"
    },
    {
        "line": 756,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 759,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 763,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 764,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 765,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 922,
        "fullcodeline": "else if (!strcmp(arg1.s, \"thread\")) {"
    },
    {
        "line": 1046,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1047,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 217,
        "fullcodeline": "c = parsecreateargs(&extargs);"
    },
    {
        "line": 227,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Close\")) {"
    },
    {
        "line": 460,
        "fullcodeline": "listargs.sel |= LIST_SEL_DAV;"
    },
    {
        "line": 468,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Listrights\")) {"
    },
    {
        "line": 760,
        "fullcodeline": "havenamespace = 1;"
    },
    {
        "line": 761,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 767,
        "fullcodeline": "cmd_changesub(tag.s, arg1.s, arg2.s, 1);"
    },
    {
        "line": 774,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Setacl\")) {"
    },
    {
        "line": 1052,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xfer\")) {"
    },
    {
        "line": 218,
        "fullcodeline": "if (c == EOF) goto badpartition;"
    },
    {
        "line": 232,
        "fullcodeline": "cmd_close(tag.s, cmd.s);"
    },
    {
        "line": 234,
        "fullcodeline": "snmp_increment(CLOSE_COUNT, 1);"
    },
    {
        "line": 469,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 471,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 474,
        "fullcodeline": "cmd_listrights(tag.s, arg1.s, arg2.s);"
    },
    {
        "line": 476,
        "fullcodeline": "snmp_increment(LISTRIGHTS_COUNT, 1);"
    },
    {
        "line": 770,
        "fullcodeline": "cmd_changesub(tag.s, (char *)0, arg1.s, 1);"
    },
    {
        "line": 776,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 778,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 780,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg3);"
    },
    {
        "line": 784,
        "fullcodeline": "cmd_setacl(tag.s, arg1.s, arg2.s, arg3.s);"
    },
    {
        "line": 786,
        "fullcodeline": "snmp_increment(SETACL_COUNT, 1);"
    },
    {
        "line": 1053,
        "fullcodeline": "int havepartition = 0;"
    },
    {
        "line": 1057,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 1061,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 1073,
        "fullcodeline": "cmd_xfer(tag.s, arg1.s, arg2.s,"
    },
    {
        "line": 228,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 229,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 230,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 470,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 472,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 473,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 775,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 777,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 779,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 781,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 782,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 783,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 925,
        "fullcodeline": "else if (!strcmp(arg1.s, \"copy\")) {"
    },
    {
        "line": 1056,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 1060,
        "fullcodeline": "if(c != ' ') goto missingargs;"
    },
    {
        "line": 1063,
        "fullcodeline": "if(c == ' ') {"
    },
    {
        "line": 1070,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1071,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 1074,
        "fullcodeline": "(havepartition ? arg3.s : NULL));"
    },
    {
        "line": 478,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Localappend\")) {"
    },
    {
        "line": 788,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Setannotation\")) {"
    },
    {
        "line": 1065,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg3);"
    },
    {
        "line": 1067,
        "fullcodeline": "havepartition = 1;"
    },
    {
        "line": 1077,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xconvmeta\")) {"
    },
    {
        "line": 481,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 483,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 486,
        "fullcodeline": "cmd_append(tag.s, arg1.s, *arg2.s ? arg2.s : NULL);"
    },
    {
        "line": 488,
        "fullcodeline": "snmp_increment(APPEND_COUNT, 1);"
    },
    {
        "line": 790,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 793,
        "fullcodeline": "cmd_setannotation(tag.s, arg1.s);"
    },
    {
        "line": 795,
        "fullcodeline": "snmp_increment(SETANNOTATION_COUNT, 1);"
    },
    {
        "line": 1066,
        "fullcodeline": "if (!imparse_isatom(arg3.s)) goto badpartition;"
    },
    {
        "line": 1078,
        "fullcodeline": "cmd_xconvmeta(tag.s);"
    },
    {
        "line": 480,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 482,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 484,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 789,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 791,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 928,
        "fullcodeline": "else if (!strcmp(arg1.s, \"move\")) {"
    },
    {
        "line": 490,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Localcreate\")) {"
    },
    {
        "line": 797,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Setmetadata\")) {"
    },
    {
        "line": 1080,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xlist\")) {"
    },
    {
        "line": 492,
        "fullcodeline": "struct dlist *extargs = NULL;"
    },
    {
        "line": 495,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 503,
        "fullcodeline": "cmd_create(tag.s, arg1.s, extargs, 1);"
    },
    {
        "line": 504,
        "fullcodeline": "dlist_free(&extargs);"
    },
    {
        "line": 799,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 802,
        "fullcodeline": "cmd_setmetadata(tag.s, arg1.s);"
    },
    {
        "line": 804,
        "fullcodeline": "snmp_increment(SETANNOTATION_COUNT, 1);"
    },
    {
        "line": 1085,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 1086,
        "fullcodeline": "listargs.cmd = LIST_CMD_XLIST;"
    },
    {
        "line": 1087,
        "fullcodeline": "listargs.ret = LIST_RET_CHILDREN | LIST_RET_SPECIALUSE;"
    },
    {
        "line": 1088,
        "fullcodeline": "getlistargs(tag.s, &listargs);"
    },
    {
        "line": 1091,
        "fullcodeline": "snmp_increment(LIST_COUNT, 1);"
    },
    {
        "line": 494,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 496,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 497,
        "fullcodeline": "if (c == ' ') {"
    },
    {
        "line": 501,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 502,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 798,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 800,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 931,
        "fullcodeline": "else if (!strcmp(arg1.s, \"xmove\")) {"
    },
    {
        "line": 1083,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 498,
        "fullcodeline": "c = parsecreateargs(&extargs);"
    },
    {
        "line": 508,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Localdelete\")) {"
    },
    {
        "line": 806,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Setquota\")) {"
    },
    {
        "line": 1089,
        "fullcodeline": "if (listargs.pat.count) cmd_list(tag.s, &listargs);"
    },
    {
        "line": 1093,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xmove\")) {"
    },
    {
        "line": 499,
        "fullcodeline": "if (c == EOF) goto badpartition;"
    },
    {
        "line": 511,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 515,
        "fullcodeline": "cmd_delete(tag.s, arg1.s, 1, 1);"
    },
    {
        "line": 808,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 810,
        "fullcodeline": "cmd_setquota(tag.s, arg1.s);"
    },
    {
        "line": 812,
        "fullcodeline": "snmp_increment(SETQUOTA_COUNT, 1);"
    },
    {
        "line": 1095,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 510,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 512,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 513,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 514,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 807,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 809,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 934,
        "fullcodeline": "else if (!strcmp(arg1.s, \"expunge\")) {"
    },
    {
        "line": 1094,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 1096,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 814,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Sort\")) {"
    },
    {
        "line": 935,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 939,
        "fullcodeline": "cmd_expunge(tag.s, arg1.s);"
    },
    {
        "line": 941,
        "fullcodeline": "snmp_increment(EXPUNGE_COUNT, 1);"
    },
    {
        "line": 1099,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xrunannotator\")) {"
    },
    {
        "line": 816,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 819,
        "fullcodeline": "cmd_sort(tag.s, usinguid);"
    },
    {
        "line": 821,
        "fullcodeline": "snmp_increment(SORT_COUNT, 1);"
    },
    {
        "line": 936,
        "fullcodeline": "if (!imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 937,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 938,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 1101,
        "fullcodeline": "usinguid = 0;"
    },
    {
        "line": 1104,
        "fullcodeline": "c = getword(imapd_in, &arg1);"
    },
    {
        "line": 1106,
        "fullcodeline": "cmd_xrunannotator(tag.s, arg1.s, usinguid);"
    },
    {
        "line": 815,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 817,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 943,
        "fullcodeline": "else if (!strcmp(arg1.s, \"xrunannotator\")) {"
    },
    {
        "line": 1100,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 1102,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1105,
        "fullcodeline": "if (!arg1.len || !imparse_issequence(arg1.s)) goto badsequence;"
    },
    {
        "line": 823,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Status\")) {"
    },
    {
        "line": 1109,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xsnippets\")) {"
    },
    {
        "line": 825,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 827,
        "fullcodeline": "cmd_status(tag.s, arg1.s);"
    },
    {
        "line": 829,
        "fullcodeline": "snmp_increment(STATUS_COUNT, 1);"
    },
    {
        "line": 947,
        "fullcodeline": "prot_printf(imapd_out, \"%s BAD Unrecognized UID subcommand\\r\\n\", tag.s);"
    },
    {
        "line": 948,
        "fullcodeline": "eatline(imapd_in, c);"
    },
    {
        "line": 1112,
        "fullcodeline": "cmd_xsnippets(tag.s);"
    },
    {
        "line": 824,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 826,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1110,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1111,
        "fullcodeline": "if (!imapd_index && !backend_current) goto nomailbox;"
    },
    {
        "line": 831,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Scan\")) {"
    },
    {
        "line": 1116,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xstats\")) {"
    },
    {
        "line": 834,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 836,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 838,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg3);"
    },
    {
        "line": 842,
        "fullcodeline": "memset(&listargs, 0, sizeof(struct listargs));"
    },
    {
        "line": 843,
        "fullcodeline": "listargs.ref = arg1.s;"
    },
    {
        "line": 844,
        "fullcodeline": "strarray_append(&listargs.pat, arg2.s);"
    },
    {
        "line": 845,
        "fullcodeline": "listargs.scan = arg3.s;"
    },
    {
        "line": 847,
        "fullcodeline": "cmd_list(tag.s, &listargs);"
    },
    {
        "line": 849,
        "fullcodeline": "snmp_increment(SCAN_COUNT, 1);"
    },
    {
        "line": 1117,
        "fullcodeline": "cmd_xstats(tag.s, c);"
    },
    {
        "line": 835,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 837,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 839,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 840,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 851,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Syncapply\")) {"
    },
    {
        "line": 1119,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xwarmup\")) {"
    },
    {
        "line": 852,
        "fullcodeline": "struct dlist *kl = sync_parseline(imapd_in);"
    },
    {
        "line": 1122,
        "fullcodeline": "cmd_xwarmup(tag.s);"
    },
    {
        "line": 1121,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 855,
        "fullcodeline": "cmd_syncapply(tag.s, kl, reserve_list);"
    },
    {
        "line": 856,
        "fullcodeline": "dlist_free(&kl);"
    },
    {
        "line": 860,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Syncget\")) {"
    },
    {
        "line": 1125,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xkillmy\")) {"
    },
    {
        "line": 861,
        "fullcodeline": "struct dlist *kl = sync_parseline(imapd_in);"
    },
    {
        "line": 1127,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 1131,
        "fullcodeline": "cmd_xkillmy(tag.s, arg1.s);"
    },
    {
        "line": 1126,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1128,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 1129,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1130,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 864,
        "fullcodeline": "cmd_syncget(tag.s, kl);"
    },
    {
        "line": 865,
        "fullcodeline": "dlist_free(&kl);"
    },
    {
        "line": 869,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Syncrestart\")) {"
    },
    {
        "line": 1133,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xforever\")) {"
    },
    {
        "line": 874,
        "fullcodeline": "cmd_syncrestart(tag.s, &reserve_list, 1);"
    },
    {
        "line": 1136,
        "fullcodeline": "cmd_xforever(tag.s);"
    },
    {
        "line": 870,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 871,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 1134,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1135,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 876,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Syncrestore\")) {"
    },
    {
        "line": 1138,
        "fullcodeline": "else if (!strcmp(cmd.s, \"Xmeid\")) {"
    },
    {
        "line": 877,
        "fullcodeline": "struct dlist *kl = sync_parseline(imapd_in);"
    },
    {
        "line": 1140,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 1144,
        "fullcodeline": "cmd_xmeid(tag.s, arg1.s);"
    },
    {
        "line": 1139,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1141,
        "fullcodeline": "if (c == EOF) goto missingargs;"
    },
    {
        "line": 1142,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1143,
        "fullcodeline": "if (c != '\\n') goto extraargs;"
    },
    {
        "line": 880,
        "fullcodeline": "cmd_syncrestore(tag.s, kl, reserve_list);"
    },
    {
        "line": 881,
        "fullcodeline": "dlist_free(&kl);"
    },
    {
        "line": 1147,
        "fullcodeline": "else if (apns_enabled && !strcmp(cmd.s, \"Xapplepushservice\")) {"
    },
    {
        "line": 1150,
        "fullcodeline": "memset(&applepushserviceargs, 0, sizeof(struct applepushserviceargs));"
    },
    {
        "line": 1198,
        "fullcodeline": "cmd_xapplepushservice(tag.s, &applepushserviceargs);"
    },
    {
        "line": 1148,
        "fullcodeline": "if (c != ' ') goto missingargs;"
    },
    {
        "line": 1193,
        "fullcodeline": "} while (c == ' ');"
    },
    {
        "line": 1195,
        "fullcodeline": "if (c == '\\r') c = prot_getc(imapd_in);"
    },
    {
        "line": 1196,
        "fullcodeline": "if (c != '\\n') goto aps_extraargs;"
    },
    {
        "line": 1153,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg1);"
    },
    {
        "line": 1154,
        "fullcodeline": "if (c == EOF) goto aps_missingargs;"
    },
    {
        "line": 1156,
        "fullcodeline": "if (!strcmp(arg1.s, \"mailboxes\")) {"
    },
    {
        "line": 1157,
        "fullcodeline": "c = prot_getc(imapd_in);"
    },
    {
        "line": 1161,
        "fullcodeline": "c = prot_getc(imapd_in);"
    },
    {
        "line": 1173,
        "fullcodeline": "c = prot_getc(imapd_in);"
    },
    {
        "line": 1158,
        "fullcodeline": "if (c != '(')"
    },
    {
        "line": 1162,
        "fullcodeline": "if (c != ')') {"
    },
    {
        "line": 1171,
        "fullcodeline": "if (c != ')')"
    },
    {
        "line": 1177,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 1163,
        "fullcodeline": "prot_ungetc(c, imapd_in);"
    },
    {
        "line": 1180,
        "fullcodeline": "if (!strcmp(arg1.s, \"aps-version\")) {"
    },
    {
        "line": 1168,
        "fullcodeline": "} while (c == ' ');"
    },
    {
        "line": 1182,
        "fullcodeline": "applepushserviceargs.aps_version = atoi(arg2.s);"
    },
    {
        "line": 1165,
        "fullcodeline": "c = getastring(imapd_in, imapd_out, &arg2);"
    },
    {
        "line": 1167,
        "fullcodeline": "strarray_push(&applepushserviceargs.mailboxes, arg2.s);"
    },
    {
        "line": 1181,
        "fullcodeline": "if (!imparse_isnumber(arg2.s)) goto aps_extraargs;"
    },
    {
        "line": 1166,
        "fullcodeline": "if (c == EOF) break;"
    },
    {
        "line": 1184,
        "fullcodeline": "else if (!strcmp(arg1.s, \"aps-account-id\"))"
    },
    {
        "line": 1185,
        "fullcodeline": "buf_copy(&applepushserviceargs.aps_account_id, &arg2);"
    },
    {
        "line": 1186,
        "fullcodeline": "else if (!strcmp(arg1.s, \"aps-device-token\"))"
    },
    {
        "line": 1187,
        "fullcodeline": "buf_copy(&applepushserviceargs.aps_device_token, &arg2);"
    },
    {
        "line": 1188,
        "fullcodeline": "else if (!strcmp(arg1.s, \"aps-subtopic\"))"
    },
    {
        "line": 1189,
        "fullcodeline": "buf_copy(&applepushserviceargs.aps_subtopic, &arg2);"
    }
]