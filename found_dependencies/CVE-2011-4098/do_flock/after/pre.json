[
    {
        "line": 3,
        "fullcodeline": "struct gfs2_file *fp = file->private_data;"
    },
    {
        "line": 4,
        "fullcodeline": "struct gfs2_holder *fl_gh = &fp->f_fl_gh;"
    },
    {
        "line": 5,
        "fullcodeline": "struct gfs2_inode *ip = GFS2_I(file->f_path.dentry->d_inode);"
    },
    {
        "line": 9,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "state = (fl->fl_type == F_WRLCK) ? LM_ST_EXCLUSIVE : LM_ST_SHARED;"
    },
    {
        "line": 12,
        "fullcodeline": "flags = (IS_SETLKW(cmd) ? 0 : LM_FLAG_TRY) | GL_EXACT | GL_NOCACHE;"
    },
    {
        "line": 14,
        "fullcodeline": "mutex_lock(&fp->f_fl_mutex);"
    },
    {
        "line": 16,
        "fullcodeline": "gl = fl_gh->gh_gl;"
    },
    {
        "line": 32,
        "fullcodeline": "error = gfs2_glock_nq(fl_gh);"
    },
    {
        "line": 43,
        "fullcodeline": "mutex_unlock(&fp->f_fl_mutex);"
    },
    {
        "line": 20,
        "fullcodeline": "flock_lock_file_wait(file,"
    },
    {
        "line": 22,
        "fullcodeline": "gfs2_glock_dq_wait(fl_gh);"
    },
    {
        "line": 23,
        "fullcodeline": "gfs2_holder_reinit(state, flags, fl_gh);"
    },
    {
        "line": 34,
        "fullcodeline": "gfs2_holder_uninit(fl_gh);"
    },
    {
        "line": 18,
        "fullcodeline": "if (fl_gh->gh_state == state)"
    },
    {
        "line": 25,
        "fullcodeline": "error = gfs2_glock_get(GFS2_SB(&ip->i_inode), ip->i_no_addr,"
    },
    {
        "line": 29,
        "fullcodeline": "gfs2_holder_init(gl, state, flags, fl_gh);"
    },
    {
        "line": 30,
        "fullcodeline": "gfs2_glock_put(gl);"
    },
    {
        "line": 35,
        "fullcodeline": "if (error == GLR_TRYFAILED)"
    },
    {
        "line": 38,
        "fullcodeline": "error = flock_lock_file_wait(file, fl);"
    },
    {
        "line": 39,
        "fullcodeline": "gfs2_assert_warn(GFS2_SB(&ip->i_inode), !error);"
    },
    {
        "line": 21,
        "fullcodeline": "&(struct file_lock){.fl_type = F_UNLCK});"
    },
    {
        "line": 36,
        "fullcodeline": "error = -EAGAIN;"
    }
]