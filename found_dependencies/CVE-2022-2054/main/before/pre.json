[
    {
        "line": 28,
        "fullcodeline": "needs_re_execution = False"
    },
    {
        "line": 51,
        "fullcodeline": "import warnings"
    },
    {
        "line": 53,
        "fullcodeline": "warnings.simplefilter(\"ignore\", DeprecationWarning)"
    },
    {
        "line": 55,
        "fullcodeline": "from nuitka import Options  # isort:skip"
    },
    {
        "line": 57,
        "fullcodeline": "Options.parseArgs()"
    },
    {
        "line": 59,
        "fullcodeline": "Options.commentArgs()"
    },
    {
        "line": 62,
        "fullcodeline": "from nuitka.plugins.Plugins import activatePlugins"
    },
    {
        "line": 64,
        "fullcodeline": "activatePlugins()"
    },
    {
        "line": 90,
        "fullcodeline": "from nuitka import MainControl  # isort:skip"
    },
    {
        "line": 92,
        "fullcodeline": "MainControl.main()"
    },
    {
        "line": 8,
        "fullcodeline": "if \"NUITKA_BINARY_NAME\" in os.environ:"
    },
    {
        "line": 11,
        "fullcodeline": "if \"NUITKA_PYTHONPATH\" in os.environ:"
    },
    {
        "line": 30,
        "fullcodeline": "if sys.flags.no_site == 0:"
    },
    {
        "line": 38,
        "fullcodeline": "if os.environ.get(\"PYTHONHASHSEED\", \"-1\") != \"0\":"
    },
    {
        "line": 66,
        "fullcodeline": "if Options.isShowMemory():"
    },
    {
        "line": 71,
        "fullcodeline": "if \"NUITKA_NAMESPACES\" in os.environ:"
    },
    {
        "line": 80,
        "fullcodeline": "if \"NUITKA_PTH_IMPORTED\" in os.environ:"
    },
    {
        "line": 94,
        "fullcodeline": "if Options.isShowMemory():"
    },
    {
        "line": 9,
        "fullcodeline": "sys.argv[0] = os.environ[\"NUITKA_BINARY_NAME\"]"
    },
    {
        "line": 14,
        "fullcodeline": "sys.path = eval(os.environ[\"NUITKA_PYTHONPATH\"])"
    },
    {
        "line": 15,
        "fullcodeline": "del os.environ[\"NUITKA_PYTHONPATH\"]"
    },
    {
        "line": 20,
        "fullcodeline": "sys.path = ["
    },
    {
        "line": 31,
        "fullcodeline": "needs_re_execution = True"
    },
    {
        "line": 39,
        "fullcodeline": "needs_re_execution = True"
    },
    {
        "line": 43,
        "fullcodeline": "from nuitka.utils.ReExecute import reExecuteNuitka  # isort:skip"
    },
    {
        "line": 46,
        "fullcodeline": "reExecuteNuitka(pgo_filename=None)"
    },
    {
        "line": 67,
        "fullcodeline": "from nuitka.utils import MemoryUsage"
    },
    {
        "line": 69,
        "fullcodeline": "MemoryUsage.startMemoryTracing()"
    },
    {
        "line": 75,
        "fullcodeline": "from nuitka.importing.PreloadedPackages import setPreloadedPackagePaths"
    },
    {
        "line": 77,
        "fullcodeline": "setPreloadedPackagePaths(eval(os.environ[\"NUITKA_NAMESPACES\"]))"
    },
    {
        "line": 78,
        "fullcodeline": "del os.environ[\"NUITKA_NAMESPACES\"]"
    },
    {
        "line": 84,
        "fullcodeline": "from nuitka.importing.PreloadedPackages import setPthImportedPackages"
    },
    {
        "line": 86,
        "fullcodeline": "setPthImportedPackages(eval(os.environ[\"NUITKA_PTH_IMPORTED\"]))"
    },
    {
        "line": 87,
        "fullcodeline": "del os.environ[\"NUITKA_PTH_IMPORTED\"]"
    },
    {
        "line": 95,
        "fullcodeline": "MemoryUsage.showMemoryTrace()"
    },
    {
        "line": 23,
        "fullcodeline": "if os.path.dirname(os.path.abspath(__file__)) != path_element"
    }
]