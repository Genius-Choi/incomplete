[
    {
        "line": 5,
        "fullcodeline": "int leftLimit = -1, rightLimit;"
    },
    {
        "line": 6,
        "fullcodeline": "int i, restoreAlphaBlending = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "restoreAlphaBlending = im->alphaBlendingFlag;"
    },
    {
        "line": 20,
        "fullcodeline": "im->alphaBlendingFlag = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "rightLimit = x;"
    },
    {
        "line": 86,
        "fullcodeline": "im->alphaBlendingFlag = restoreAlphaBlending;"
    },
    {
        "line": 8,
        "fullcodeline": "if (border < 0) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (!im->trueColor) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (x >= im->sx) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (y >= im->sy) {"
    },
    {
        "line": 33,
        "fullcodeline": "for (i = x; i >= 0; i--) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (leftLimit == -1) {"
    },
    {
        "line": 46,
        "fullcodeline": "for (i = (x + 1); i < im->sx; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (y > 0) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (y < ((im->sy) - 1)) {"
    },
    {
        "line": 23,
        "fullcodeline": "x = im->sx - 1;"
    },
    {
        "line": 28,
        "fullcodeline": "y = im->sy - 1;"
    },
    {
        "line": 37,
        "fullcodeline": "gdImageSetPixel(im, i, y, color);"
    },
    {
        "line": 38,
        "fullcodeline": "leftLimit = i;"
    },
    {
        "line": 41,
        "fullcodeline": "im->alphaBlendingFlag = restoreAlphaBlending;"
    },
    {
        "line": 50,
        "fullcodeline": "gdImageSetPixel(im, i, y, color);"
    },
    {
        "line": 51,
        "fullcodeline": "rightLimit = i;"
    },
    {
        "line": 56,
        "fullcodeline": "lastBorder = 1;"
    },
    {
        "line": 72,
        "fullcodeline": "lastBorder = 1;"
    },
    {
        "line": 14,
        "fullcodeline": "if ((color > (im->colorsTotal - 1)) || (border > (im->colorsTotal - 1)) || (color < 0)) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (gdImageGetPixel(im, i, y) == border) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (gdImageGetPixel(im, i, y) == border) {"
    },
    {
        "line": 57,
        "fullcodeline": "for (i = leftLimit; i <= rightLimit; i++) {"
    },
    {
        "line": 73,
        "fullcodeline": "for (i = leftLimit; i <= rightLimit; i++) {"
    },
    {
        "line": 24,
        "fullcodeline": "} else if (x < 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "} else if (y < 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "int c = gdImageGetPixel(im, i, y - 1);"
    },
    {
        "line": 74,
        "fullcodeline": "int c = gdImageGetPixel(im, i, y + 1);"
    },
    {
        "line": 25,
        "fullcodeline": "x = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "y = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "if ((c != border) && (c != color)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if ((c != border) && (c != color)) {"
    },
    {
        "line": 61,
        "fullcodeline": "gdImageFillToBorder(im, i, y - 1, border, color);"
    },
    {
        "line": 62,
        "fullcodeline": "lastBorder = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "} else if ((c == border) || (c == color)) {"
    },
    {
        "line": 78,
        "fullcodeline": "gdImageFillToBorder(im, i, y + 1, border, color);"
    },
    {
        "line": 79,
        "fullcodeline": "lastBorder = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "} else if ((c == border) || (c == color)) {"
    },
    {
        "line": 65,
        "fullcodeline": "lastBorder = 1;"
    },
    {
        "line": 82,
        "fullcodeline": "lastBorder = 1;"
    }
]