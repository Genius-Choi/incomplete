[
    {
        "line": 20,
        "fullcodeline": "col_params->name = name_;"
    },
    {
        "line": 21,
        "fullcodeline": "col_params->group.device_type = device_type_;"
    },
    {
        "line": 22,
        "fullcodeline": "col_params->group.group_size = group_size.unaligned_flat<int32>()(0);"
    },
    {
        "line": 28,
        "fullcodeline": "col_params->group.group_key = group_key.unaligned_flat<int32>()(0);"
    },
    {
        "line": 29,
        "fullcodeline": "col_params->instance.type = collective_type;"
    },
    {
        "line": 30,
        "fullcodeline": "col_params->instance.instance_key = instance_key.unaligned_flat<int32>()(0);"
    },
    {
        "line": 31,
        "fullcodeline": "col_params->instance.data_type = data_type_;"
    },
    {
        "line": 32,
        "fullcodeline": "col_params->instance.impl_details.communication_hint = communication_hint_;"
    },
    {
        "line": 33,
        "fullcodeline": "col_params->instance.impl_details.timeout_seconds = timeout_seconds_;"
    },
    {
        "line": 5,
        "fullcodeline": "if (group_size.dims() > 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (group_key.dims() > 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (instance_key.dims() > 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (col_params->group.group_size <= 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 6,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 11,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 16,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 24,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 8,
        "fullcodeline": "group_size.shape().DebugString());"
    },
    {
        "line": 13,
        "fullcodeline": "group_key.shape().DebugString());"
    },
    {
        "line": 18,
        "fullcodeline": "instance_key.shape().DebugString());"
    }
]