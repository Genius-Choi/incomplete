[
    {
        "line": 13,
        "fullcodeline": "auto group_size = group_size_t.unaligned_flat<int32>()(0);"
    },
    {
        "line": 2,
        "fullcodeline": "if (group_size_t.dims() > 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (group_size <= 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 8,
        "fullcodeline": "if (group_key_t.dims() > 0) {"
    },
    {
        "line": 3,
        "fullcodeline": "return errors::Internal("
    },
    {
        "line": 9,
        "fullcodeline": "return errors::Internal(\"Unexpected dimensions on input group_key, got \","
    },
    {
        "line": 15,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 6,
        "fullcodeline": "group_size_t.shape().DebugString());"
    },
    {
        "line": 10,
        "fullcodeline": "group_key_t.shape().DebugString());"
    }
]