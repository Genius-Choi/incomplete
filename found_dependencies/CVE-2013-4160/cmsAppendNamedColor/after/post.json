[
    {
        "line": 29,
        "fullcodeline": "NamedColorList ->nColors++;"
    },
    {
        "line": 7,
        "fullcodeline": "if (NamedColorList == NULL) return FALSE;"
    },
    {
        "line": 9,
        "fullcodeline": "if (NamedColorList ->nColors + 1 > NamedColorList ->Allocated) {"
    },
    {
        "line": 13,
        "fullcodeline": "for (i=0; i < NamedColorList ->ColorantCount; i++)"
    },
    {
        "line": 14,
        "fullcodeline": "NamedColorList ->List[NamedColorList ->nColors].DeviceColorant[i] = Colorant == NULL? 0 : Colorant[i];"
    },
    {
        "line": 16,
        "fullcodeline": "for (i=0; i < 3; i++)"
    },
    {
        "line": 17,
        "fullcodeline": "NamedColorList ->List[NamedColorList ->nColors].PCS[i] = PCS == NULL ? 0 : PCS[i];"
    },
    {
        "line": 19,
        "fullcodeline": "if (Name != NULL) {"
    },
    {
        "line": 21,
        "fullcodeline": "strncpy(NamedColorList ->List[NamedColorList ->nColors].Name, Name, cmsMAX_PATH-1);"
    },
    {
        "line": 22,
        "fullcodeline": "NamedColorList ->List[NamedColorList ->nColors].Name[cmsMAX_PATH-1] = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "if (!GrowNamedColorList(NamedColorList)) return FALSE;"
    },
    {
        "line": 26,
        "fullcodeline": "NamedColorList ->List[NamedColorList ->nColors].Name[0] = 0;"
    }
]