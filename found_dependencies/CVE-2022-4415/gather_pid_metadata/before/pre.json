[
    {
        "line": 11,
        "fullcodeline": "pid = context->pid;"
    },
    {
        "line": 14,
        "fullcodeline": "r = get_process_comm(pid, &t);"
    },
    {
        "line": 18,
        "fullcodeline": "r = iovw_put_string_field_free(iovw, \"COREDUMP_COMM=\", t);"
    },
    {
        "line": 23,
        "fullcodeline": "r = get_process_exe(pid, &t);"
    },
    {
        "line": 56,
        "fullcodeline": "p = procfs_file_alloca(pid, \"status\");"
    },
    {
        "line": 60,
        "fullcodeline": "p = procfs_file_alloca(pid, \"maps\");"
    },
    {
        "line": 64,
        "fullcodeline": "p = procfs_file_alloca(pid, \"limits\");"
    },
    {
        "line": 68,
        "fullcodeline": "p = procfs_file_alloca(pid, \"cgroup\");"
    },
    {
        "line": 72,
        "fullcodeline": "p = procfs_file_alloca(pid, \"mountinfo\");"
    },
    {
        "line": 15,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 24,
        "fullcodeline": "if (r >= 0)"
    },
    {
        "line": 26,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 96,
        "fullcodeline": "return save_context(context, iovw);"
    },
    {
        "line": 25,
        "fullcodeline": "r = iovw_put_string_field_free(iovw, \"COREDUMP_EXE=\", t);"
    },
    {
        "line": 29,
        "fullcodeline": "if (cg_pid_get_unit(pid, &t) >= 0)"
    },
    {
        "line": 32,
        "fullcodeline": "if (cg_pid_get_user_unit(pid, &t) >= 0)"
    },
    {
        "line": 35,
        "fullcodeline": "if (sd_pid_get_session(pid, &t) >= 0)"
    },
    {
        "line": 38,
        "fullcodeline": "if (sd_pid_get_owner_uid(pid, &owner_uid) >= 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "r = asprintf(&t, UID_FMT, owner_uid);"
    },
    {
        "line": 44,
        "fullcodeline": "if (sd_pid_get_slice(pid, &t) >= 0)"
    },
    {
        "line": 47,
        "fullcodeline": "if (get_process_cmdline(pid, SIZE_MAX, PROCESS_CMDLINE_QUOTE_POSIX, &t) >= 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (cg_pid_get_path_shifted(pid, NULL, &t) >= 0)"
    },
    {
        "line": 53,
        "fullcodeline": "if (compose_open_fds(pid, &t) >= 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if (read_full_virtual_file(p, &t, NULL) >= 0)"
    },
    {
        "line": 61,
        "fullcodeline": "if (read_full_virtual_file(p, &t, NULL) >= 0)"
    },
    {
        "line": 65,
        "fullcodeline": "if (read_full_virtual_file(p, &t, NULL) >= 0)"
    },
    {
        "line": 69,
        "fullcodeline": "if (read_full_virtual_file(p, &t, NULL) >=0)"
    },
    {
        "line": 73,
        "fullcodeline": "if (read_full_virtual_file(p, &t, NULL) >=0)"
    },
    {
        "line": 76,
        "fullcodeline": "if (get_process_cwd(pid, &t) >= 0)"
    },
    {
        "line": 79,
        "fullcodeline": "if (get_process_root(pid, &t) >= 0) {"
    },
    {
        "line": 82,
        "fullcodeline": "proc_self_root_is_slash = strcmp(t, \"/\") == 0;"
    },
    {
        "line": 92,
        "fullcodeline": "if (get_process_environ(pid, &t) >= 0)"
    },
    {
        "line": 16,
        "fullcodeline": "return log_error_errno(r, \"Failed to get COMM: %m\");"
    },
    {
        "line": 30,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_UNIT=\", t);"
    },
    {
        "line": 33,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_USER_UNIT=\", t);"
    },
    {
        "line": 36,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_SESSION=\", t);"
    },
    {
        "line": 45,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_SLICE=\", t);"
    },
    {
        "line": 48,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_CMDLINE=\", t);"
    },
    {
        "line": 51,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_CGROUP=\", t);"
    },
    {
        "line": 54,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_OPEN_FDS=\", t);"
    },
    {
        "line": 58,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_STATUS=\", t);"
    },
    {
        "line": 62,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_MAPS=\", t);"
    },
    {
        "line": 66,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_LIMITS=\", t);"
    },
    {
        "line": 70,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_CGROUP=\", t);"
    },
    {
        "line": 74,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_MOUNTINFO=\", t);"
    },
    {
        "line": 77,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_CWD=\", t);"
    },
    {
        "line": 84,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_ROOT=\", t);"
    },
    {
        "line": 93,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_ENVIRON=\", t);"
    },
    {
        "line": 88,
        "fullcodeline": "if (proc_self_root_is_slash && get_process_container_parent_cmdline(pid, &t) > 0)"
    },
    {
        "line": 41,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_OWNER_UID=\", t);"
    },
    {
        "line": 89,
        "fullcodeline": "(void) iovw_put_string_field_free(iovw, \"COREDUMP_CONTAINER_CMDLINE=\", t);"
    }
]