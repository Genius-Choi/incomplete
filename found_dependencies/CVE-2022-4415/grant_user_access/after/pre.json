[
    {
        "line": 2,
        "fullcodeline": "int at_secure = -1;"
    },
    {
        "line": 3,
        "fullcodeline": "uid_t uid = UID_INVALID, euid = UID_INVALID;"
    },
    {
        "line": 4,
        "fullcodeline": "uid_t gid = GID_INVALID, egid = GID_INVALID;"
    },
    {
        "line": 7,
        "fullcodeline": "assert(core_fd >= 0);"
    },
    {
        "line": 8,
        "fullcodeline": "assert(context);"
    },
    {
        "line": 13,
        "fullcodeline": "uint8_t elf[EI_NIDENT];"
    },
    {
        "line": 14,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "bool ret ="
    },
    {
        "line": 10,
        "fullcodeline": "if (!context->meta[META_PROC_AUXV])"
    },
    {
        "line": 43,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 49,
        "fullcodeline": "at_secure == 0 &&"
    },
    {
        "line": 15,
        "fullcodeline": "if (pread(core_fd, &elf, sizeof(elf), 0) != sizeof(elf))"
    },
    {
        "line": 19,
        "fullcodeline": "if (elf[EI_MAG0] != ELFMAG0 ||"
    },
    {
        "line": 23,
        "fullcodeline": "elf[EI_VERSION] != EV_CURRENT)"
    },
    {
        "line": 26,
        "fullcodeline": "if (!IN_SET(elf[EI_CLASS], ELFCLASS32, ELFCLASS64) ||"
    },
    {
        "line": 27,
        "fullcodeline": "!IN_SET(elf[EI_DATA], ELFDATA2LSB, ELFDATA2MSB))"
    },
    {
        "line": 31,
        "fullcodeline": "if ((elf[EI_DATA] == ELFDATA2LSB) != (__BYTE_ORDER == __LITTLE_ENDIAN))"
    },
    {
        "line": 36,
        "fullcodeline": "r = parse_auxv64((const uint64_t*) context->meta[META_PROC_AUXV],"
    },
    {
        "line": 51,
        "fullcodeline": "gid != GID_INVALID && egid != GID_INVALID && gid == egid;"
    },
    {
        "line": 11,
        "fullcodeline": "return log_warning_errno(SYNTHETIC_ERRNO(ENODATA), \"No auxv data, not adjusting permissions.\");"
    },
    {
        "line": 16,
        "fullcodeline": "return log_warning_errno(errno_or_else(EIO),"
    },
    {
        "line": 22,
        "fullcodeline": "elf[EI_MAG3] != ELFMAG3 ||"
    },
    {
        "line": 24,
        "fullcodeline": "return log_info_errno(SYNTHETIC_ERRNO(EUCLEAN),"
    },
    {
        "line": 28,
        "fullcodeline": "return log_info_errno(SYNTHETIC_ERRNO(EUCLEAN),"
    },
    {
        "line": 32,
        "fullcodeline": "return log_info_errno(SYNTHETIC_ERRNO(EUCLEAN),"
    },
    {
        "line": 40,
        "fullcodeline": "r = parse_auxv32((const uint32_t*) context->meta[META_PROC_AUXV],"
    },
    {
        "line": 17,
        "fullcodeline": "\"Failed to pread from coredump fd: %s\", STRERROR_OR_EOF(errno));"
    },
    {
        "line": 21,
        "fullcodeline": "elf[EI_MAG2] != ELFMAG2 ||"
    },
    {
        "line": 20,
        "fullcodeline": "elf[EI_MAG1] != ELFMAG1 ||"
    },
    {
        "line": 50,
        "fullcodeline": "uid != UID_INVALID && euid != UID_INVALID && uid == euid &&"
    }
]