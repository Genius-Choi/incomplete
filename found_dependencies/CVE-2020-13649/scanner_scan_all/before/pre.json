[
    {
        "line": 16,
        "fullcodeline": "scanner_context.context_status_flags = context_p->status_flags;"
    },
    {
        "line": 17,
        "fullcodeline": "scanner_context.status_flags = SCANNER_CONTEXT_NO_FLAGS;"
    },
    {
        "line": 28,
        "fullcodeline": "scanner_context.active_literal_pool_p = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "scanner_context.active_switch_statement.last_case_p = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "scanner_context.end_arguments_p = NULL;"
    },
    {
        "line": 36,
        "fullcodeline": "context_p->u.scanner_context_p = &scanner_context;"
    },
    {
        "line": 38,
        "fullcodeline": "parser_stack_init (context_p);"
    },
    {
        "line": 40,
        "fullcodeline": "PARSER_TRY (context_p->try_buffer)"
    },
    {
        "line": 961,
        "fullcodeline": "scanner_reverse_info_list (context_p);"
    },
    {
        "line": 1233,
        "fullcodeline": "parser_stack_free (context_p);"
    },
    {
        "line": 42,
        "fullcodeline": "context_p->line = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "context_p->column = 1;"
    },
    {
        "line": 893,
        "fullcodeline": "scanner_pop_literal_pool (context_p, &scanner_context);"
    },
    {
        "line": 898,
        "fullcodeline": "JERRY_ASSERT (scanner_context.active_literal_pool_p == NULL);"
    },
    {
        "line": 901,
        "fullcodeline": "scanner_context.context_status_flags |= PARSER_SCANNING_SUCCESSFUL;"
    },
    {
        "line": 920,
        "fullcodeline": "PARSER_TRY (context_p->try_buffer)"
    },
    {
        "line": 45,
        "fullcodeline": "if (arg_list_p == NULL)"
    },
    {
        "line": 887,
        "fullcodeline": "if (context_p->stack_top_uint8 != SCAN_STACK_SCRIPT"
    },
    {
        "line": 907,
        "fullcodeline": "if (context_p->error != PARSER_ERR_OUT_OF_MEMORY)"
    },
    {
        "line": 940,
        "fullcodeline": "JERRY_ASSERT (context_p->error == PARSER_ERR_NO_ERROR);"
    },
    {
        "line": 47,
        "fullcodeline": "context_p->source_p = source_p;"
    },
    {
        "line": 48,
        "fullcodeline": "context_p->source_end_p = source_end_p;"
    },
    {
        "line": 50,
        "fullcodeline": "uint16_t status_flags = SCANNER_LITERAL_POOL_FUNCTION_WITHOUT_ARGUMENTS | SCANNER_LITERAL_POOL_CAN_EVAL;"
    },
    {
        "line": 57,
        "fullcodeline": "scanner_literal_pool_t *literal_pool_p = scanner_push_literal_pool (context_p, &scanner_context, status_flags);"
    },
    {
        "line": 58,
        "fullcodeline": "literal_pool_p->source_p = source_p;"
    },
    {
        "line": 60,
        "fullcodeline": "parser_stack_push_uint8 (context_p, SCAN_STACK_SCRIPT);"
    },
    {
        "line": 62,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 63,
        "fullcodeline": "scanner_check_directives (context_p, &scanner_context);"
    },
    {
        "line": 94,
        "fullcodeline": "lexer_token_type_t type = (lexer_token_type_t) context_p->token.type;"
    },
    {
        "line": 95,
        "fullcodeline": "scan_stack_modes_t stack_top = (scan_stack_modes_t) context_p->stack_top_uint8;"
    },
    {
        "line": 883,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 888,
        "fullcodeline": "&& context_p->stack_top_uint8 != SCAN_STACK_SCRIPT_FUNCTION)"
    },
    {
        "line": 890,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 909,
        "fullcodeline": "context_p->error = PARSER_ERR_NO_ERROR;"
    },
    {
        "line": 933,
        "fullcodeline": "while (scanner_context.active_literal_pool_p != NULL)"
    },
    {
        "line": 942,
        "fullcodeline": "while (scanner_context.active_literal_pool_p != NULL)"
    },
    {
        "line": 52,
        "fullcodeline": "if (context_p->status_flags & PARSER_IS_STRICT)"
    },
    {
        "line": 67,
        "fullcodeline": "context_p->source_p = arg_list_p;"
    },
    {
        "line": 68,
        "fullcodeline": "context_p->source_end_p = arg_list_end_p;"
    },
    {
        "line": 70,
        "fullcodeline": "uint16_t status_flags = SCANNER_LITERAL_POOL_FUNCTION;"
    },
    {
        "line": 84,
        "fullcodeline": "scanner_push_literal_pool (context_p, &scanner_context, status_flags);"
    },
    {
        "line": 85,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_FUNCTION_ARGUMENTS;"
    },
    {
        "line": 86,
        "fullcodeline": "parser_stack_push_uint8 (context_p, SCAN_STACK_SCRIPT_FUNCTION);"
    },
    {
        "line": 89,
        "fullcodeline": "context_p->token.type = LEXER_LEFT_PAREN;"
    },
    {
        "line": 935,
        "fullcodeline": "scanner_pop_literal_pool (context_p, &scanner_context);"
    },
    {
        "line": 944,
        "fullcodeline": "scanner_literal_pool_t *literal_pool_p = scanner_context.active_literal_pool_p;"
    },
    {
        "line": 946,
        "fullcodeline": "scanner_context.active_literal_pool_p = literal_pool_p->prev_p;"
    },
    {
        "line": 948,
        "fullcodeline": "parser_list_free (&literal_pool_p->literal_pool);"
    },
    {
        "line": 949,
        "fullcodeline": "scanner_free (literal_pool_p, sizeof (scanner_literal_pool_t));"
    },
    {
        "line": 54,
        "fullcodeline": "status_flags |= SCANNER_LITERAL_POOL_IS_STRICT;"
    },
    {
        "line": 72,
        "fullcodeline": "if (context_p->status_flags & PARSER_IS_STRICT)"
    },
    {
        "line": 74,
        "fullcodeline": "status_flags |= SCANNER_LITERAL_POOL_IS_STRICT;"
    },
    {
        "line": 259,
        "fullcodeline": "type = (lexer_token_type_t) context_p->token.type;"
    },
    {
        "line": 338,
        "fullcodeline": "lexer_lit_location_t *literal_p = scanner_add_literal (context_p, &scanner_context);"
    },
    {
        "line": 386,
        "fullcodeline": "literal_p->type |= SCANNER_LITERAL_IS_VAR;"
    },
    {
        "line": 393,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 437,
        "fullcodeline": "JERRY_ASSERT (stack_top == SCAN_STACK_VAR);"
    },
    {
        "line": 444,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_STATEMENT_END;"
    },
    {
        "line": 445,
        "fullcodeline": "parser_stack_pop_uint8 (context_p);"
    },
    {
        "line": 450,
        "fullcodeline": "JERRY_ASSERT (stack_top == SCAN_STACK_SCRIPT_FUNCTION"
    },
    {
        "line": 455,
        "fullcodeline": "scanner_literal_pool_t *literal_pool_p = scanner_context.active_literal_pool_p;"
    },
    {
        "line": 457,
        "fullcodeline": "JERRY_ASSERT (literal_pool_p != NULL && (literal_pool_p->status_flags & SCANNER_LITERAL_POOL_FUNCTION));"
    },
    {
        "line": 459,
        "fullcodeline": "literal_pool_p->source_p = context_p->source_p;"
    },
    {
        "line": 474,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 596,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 603,
        "fullcodeline": "scanner_filter_arguments (context_p, &scanner_context);"
    },
    {
        "line": 604,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 605,
        "fullcodeline": "scanner_check_directives (context_p, &scanner_context);"
    },
    {
        "line": 610,
        "fullcodeline": "JERRY_ASSERT (stack_top == SCAN_STACK_OBJECT_LITERAL);"
    },
    {
        "line": 690,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 747,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_PRIMARY_EXPRESSION;"
    },
    {
        "line": 101,
        "fullcodeline": "if (type == LEXER_ADD"
    },
    {
        "line": 111,
        "fullcodeline": "if (scanner_scan_primary_expression (context_p, &scanner_context, type, stack_top) != SCAN_NEXT_TOKEN)"
    },
    {
        "line": 255,
        "fullcodeline": "if (scanner_scan_post_primary_expression (context_p, &scanner_context, type, stack_top))"
    },
    {
        "line": 264,
        "fullcodeline": "if (scanner_scan_primary_expression_end (context_p, &scanner_context, type, stack_top) != SCAN_NEXT_TOKEN)"
    },
    {
        "line": 272,
        "fullcodeline": "if (type == LEXER_RIGHT_BRACE || type == LEXER_EOS)"
    },
    {
        "line": 281,
        "fullcodeline": "if (scanner_scan_statement (context_p, &scanner_context, type, stack_top) != SCAN_NEXT_TOKEN)"
    },
    {
        "line": 289,
        "fullcodeline": "if (scanner_scan_statement_end (context_p, &scanner_context, type) != SCAN_NEXT_TOKEN)"
    },
    {
        "line": 294,
        "fullcodeline": "if (context_p->token.type == LEXER_EOS)"
    },
    {
        "line": 332,
        "fullcodeline": "if (type != LEXER_LITERAL"
    },
    {
        "line": 388,
        "fullcodeline": "if (scanner_context.active_literal_pool_p->status_flags & SCANNER_LITERAL_POOL_IN_WITH)"
    },
    {
        "line": 417,
        "fullcodeline": "if (SCANNER_IS_FOR_START (stack_top))"
    },
    {
        "line": 470,
        "fullcodeline": "if (type != LEXER_LEFT_PAREN)"
    },
    {
        "line": 482,
        "fullcodeline": "if (context_p->token.type != LEXER_RIGHT_PAREN && context_p->token.type != LEXER_EOS)"
    },
    {
        "line": 570,
        "fullcodeline": "if (context_p->token.type == LEXER_EOS && stack_top == SCAN_STACK_SCRIPT_FUNCTION)"
    },
    {
        "line": 591,
        "fullcodeline": "if (context_p->token.type != LEXER_RIGHT_PAREN)"
    },
    {
        "line": 598,
        "fullcodeline": "if (context_p->token.type != LEXER_LEFT_BRACE)"
    },
    {
        "line": 612,
        "fullcodeline": "if (lexer_scan_identifier (context_p))"
    },
    {
        "line": 626,
        "fullcodeline": "if (context_p->token.type == LEXER_RIGHT_BRACE)"
    },
    {
        "line": 632,
        "fullcodeline": "if (context_p->token.type == LEXER_PROPERTY_GETTER"
    },
    {
        "line": 679,
        "fullcodeline": "if (context_p->token.type != LEXER_LITERAL)"
    },
    {
        "line": 742,
        "fullcodeline": "if (context_p->token.type != LEXER_COLON)"
    },
    {
        "line": 103,
        "fullcodeline": "|| LEXER_IS_UNARY_OP_TOKEN (type))"
    },
    {
        "line": 274,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_STATEMENT_END;"
    },
    {
        "line": 333,
        "fullcodeline": "|| context_p->token.lit_location.type != LEXER_IDENT_LITERAL)"
    },
    {
        "line": 335,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 390,
        "fullcodeline": "literal_p->type |= SCANNER_LITERAL_NO_REG;"
    },
    {
        "line": 430,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_PRIMARY_EXPRESSION_END;"
    },
    {
        "line": 453,
        "fullcodeline": "|| stack_top == SCAN_STACK_FUNCTION_PROPERTY);"
    },
    {
        "line": 472,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 573,
        "fullcodeline": "scanner_info_t *scanner_info_p = (scanner_info_t *) scanner_malloc (context_p, sizeof (scanner_info_t));"
    },
    {
        "line": 574,
        "fullcodeline": "scanner_info_p->next_p = context_p->next_scanner_info_p;"
    },
    {
        "line": 575,
        "fullcodeline": "scanner_info_p->source_p = NULL;"
    },
    {
        "line": 576,
        "fullcodeline": "scanner_info_p->type = SCANNER_TYPE_END_ARGUMENTS;"
    },
    {
        "line": 577,
        "fullcodeline": "scanner_context.end_arguments_p = scanner_info_p;"
    },
    {
        "line": 579,
        "fullcodeline": "context_p->next_scanner_info_p = scanner_info_p;"
    },
    {
        "line": 580,
        "fullcodeline": "context_p->source_p = source_p;"
    },
    {
        "line": 581,
        "fullcodeline": "context_p->source_end_p = source_end_p;"
    },
    {
        "line": 582,
        "fullcodeline": "context_p->line = 1;"
    },
    {
        "line": 583,
        "fullcodeline": "context_p->column = 1;"
    },
    {
        "line": 585,
        "fullcodeline": "scanner_filter_arguments (context_p, &scanner_context);"
    },
    {
        "line": 586,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 587,
        "fullcodeline": "scanner_check_directives (context_p, &scanner_context);"
    },
    {
        "line": 593,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 600,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 614,
        "fullcodeline": "lexer_check_property_modifier (context_p);"
    },
    {
        "line": 628,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_PRIMARY_EXPRESSION_END;"
    },
    {
        "line": 637,
        "fullcodeline": "|| context_p->token.type == LEXER_PROPERTY_SETTER)"
    },
    {
        "line": 639,
        "fullcodeline": "uint16_t literal_pool_flags = SCANNER_LITERAL_POOL_FUNCTION;"
    },
    {
        "line": 657,
        "fullcodeline": "parser_stack_push_uint8 (context_p, SCAN_STACK_FUNCTION_PROPERTY);"
    },
    {
        "line": 658,
        "fullcodeline": "lexer_scan_identifier (context_p);"
    },
    {
        "line": 674,
        "fullcodeline": "scanner_push_literal_pool (context_p, &scanner_context, literal_pool_flags);"
    },
    {
        "line": 675,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_FUNCTION_ARGUMENTS;"
    },
    {
        "line": 681,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 744,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 102,
        "fullcodeline": "|| type == LEXER_SUBTRACT"
    },
    {
        "line": 407,
        "fullcodeline": "scanner_context.mode = SCAN_MODE_PRIMARY_EXPRESSION;"
    },
    {
        "line": 412,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 423,
        "fullcodeline": "if (context_p->token.type != LEXER_SEMICOLON"
    },
    {
        "line": 452,
        "fullcodeline": "|| stack_top == SCAN_STACK_FUNCTION_EXPRESSION"
    },
    {
        "line": 669,
        "fullcodeline": "if (context_p->token.type != LEXER_LITERAL)"
    },
    {
        "line": 425,
        "fullcodeline": "&& !SCANNER_IDENTIFIER_IS_OF ())"
    },
    {
        "line": 427,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 451,
        "fullcodeline": "|| stack_top == SCAN_STACK_FUNCTION_STATEMENT"
    },
    {
        "line": 514,
        "fullcodeline": "scanner_append_argument (context_p, &scanner_context);"
    },
    {
        "line": 517,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 523,
        "fullcodeline": "lexer_next_token (context_p);"
    },
    {
        "line": 671,
        "fullcodeline": "scanner_raise_error (context_p);"
    },
    {
        "line": 424,
        "fullcodeline": "&& context_p->token.type != LEXER_KEYW_IN"
    },
    {
        "line": 505,
        "fullcodeline": "if (context_p->token.type != LEXER_LITERAL"
    },
    {
        "line": 519,
        "fullcodeline": "if (context_p->token.type != LEXER_COMMA)"
    },
    {
        "line": 506,
        "fullcodeline": "|| context_p->token.lit_location.type != LEXER_IDENT_LITERAL)"
    },
    {
        "line": 508,
        "fullcodeline": "scanner_raise_error (context_p);"
    }
]