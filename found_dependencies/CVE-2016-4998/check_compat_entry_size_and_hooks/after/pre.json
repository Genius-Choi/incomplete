[
    {
        "line": 15,
        "fullcodeline": "duprintf(\"check_compat_entry_size_and_hooks %p\\n\", e);"
    },
    {
        "line": 31,
        "fullcodeline": "ret = check_entry((struct arpt_entry *)e);"
    },
    {
        "line": 35,
        "fullcodeline": "off = sizeof(struct arpt_entry) - sizeof(struct compat_arpt_entry);"
    },
    {
        "line": 36,
        "fullcodeline": "entry_offset = (void *)e - (void *)base;"
    },
    {
        "line": 39,
        "fullcodeline": "target = xt_request_find_target(NFPROTO_ARP, t->u.user.name,"
    },
    {
        "line": 49,
        "fullcodeline": "off += xt_compat_target_offset(target);"
    },
    {
        "line": 51,
        "fullcodeline": "ret = xt_compat_add_offset(NFPROTO_ARP, entry_offset, off);"
    },
    {
        "line": 16,
        "fullcodeline": "if ((unsigned long)e % __alignof__(struct compat_arpt_entry) != 0 ||"
    },
    {
        "line": 23,
        "fullcodeline": "if (e->next_offset < sizeof(struct compat_arpt_entry) +"
    },
    {
        "line": 38,
        "fullcodeline": "t = compat_arpt_get_target(e);"
    },
    {
        "line": 41,
        "fullcodeline": "if (IS_ERR(target)) {"
    },
    {
        "line": 56,
        "fullcodeline": "for (h = 0; h < NF_ARP_NUMHOOKS; h++) {"
    },
    {
        "line": 18,
        "fullcodeline": "(unsigned char *)e + e->next_offset > limit) {"
    },
    {
        "line": 19,
        "fullcodeline": "duprintf(\"Bad offset %p, limit = %p\\n\", e, limit);"
    },
    {
        "line": 44,
        "fullcodeline": "ret = PTR_ERR(target);"
    },
    {
        "line": 17,
        "fullcodeline": "(unsigned char *)e + sizeof(struct compat_arpt_entry) >= limit ||"
    },
    {
        "line": 20,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "sizeof(struct compat_xt_entry_target)) {"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 57,
        "fullcodeline": "if ((unsigned char *)e - base == hook_entries[h])"
    },
    {
        "line": 59,
        "fullcodeline": "if ((unsigned char *)e - base == underflows[h])"
    }
]