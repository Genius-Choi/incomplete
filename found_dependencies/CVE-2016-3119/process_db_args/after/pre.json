[
    {
        "line": 4,
        "fullcodeline": "int                   i=0;"
    },
    {
        "line": 5,
        "fullcodeline": "krb5_error_code       st=0;"
    },
    {
        "line": 6,
        "fullcodeline": "char                  *arg=NULL, *arg_val=NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "char                  **dptr=NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned int          arg_val_len=0;"
    },
    {
        "line": 11,
        "fullcodeline": "for (i=0; db_args[i]; ++i) {"
    },
    {
        "line": 12,
        "fullcodeline": "arg = strtok_r(db_args[i], \"=\", &arg_val);"
    },
    {
        "line": 13,
        "fullcodeline": "arg = (arg != NULL) ? arg : \"\";"
    },
    {
        "line": 63,
        "fullcodeline": "arg_val_len = strlen(arg_val) + 1;"
    },
    {
        "line": 14,
        "fullcodeline": "if (strcmp(arg, TKTPOLICY_ARG) == 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (arg_val == NULL) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (strcmp(arg, TKTPOLICY_ARG) == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "dptr = &xargs->tktpolicydn;"
    },
    {
        "line": 59,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 60,
        "fullcodeline": "k5_setmsg(context, st, _(\"%s option value missing\"), arg);"
    },
    {
        "line": 50,
        "fullcodeline": "xargs->dn_from_kbd = TRUE;"
    },
    {
        "line": 66,
        "fullcodeline": "if ((st = krb5_ldap_name_to_policydn (context,"
    },
    {
        "line": 71,
        "fullcodeline": "*dptr = k5memdup(arg_val, arg_val_len, &st);"
    },
    {
        "line": 17,
        "fullcodeline": "if (strcmp(arg, USERDN_ARG) == 0) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (arg_val == NULL || strlen(arg_val) == 0) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (*dptr == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "dptr = &xargs->dn;"
    },
    {
        "line": 52,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 53,
        "fullcodeline": "k5_setmsg(context, st, _(\"%s option value missing\"), arg);"
    },
    {
        "line": 18,
        "fullcodeline": "if (optype == MODIFY_PRINCIPAL ||"
    },
    {
        "line": 20,
        "fullcodeline": "xargs->linkdn != NULL) {"
    },
    {
        "line": 21,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 22,
        "fullcodeline": "k5_setmsg(context, st, _(\"%s option not supported\"),"
    },
    {
        "line": 27,
        "fullcodeline": "} else if (strcmp(arg, CONTAINERDN_ARG) == 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "xargs->dn != NULL || xargs->containerdn != NULL ||"
    },
    {
        "line": 35,
        "fullcodeline": "dptr = &xargs->containerdn;"
    },
    {
        "line": 28,
        "fullcodeline": "if (optype == MODIFY_PRINCIPAL ||"
    },
    {
        "line": 29,
        "fullcodeline": "xargs->dn != NULL || xargs->containerdn != NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "k5_setmsg(context, st, _(\"%s option not supported\"),"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (strcmp(arg, LINKDN_ARG) == 0) {"
    },
    {
        "line": 43,
        "fullcodeline": "dptr = &xargs->linkdn;"
    },
    {
        "line": 37,
        "fullcodeline": "if (xargs->dn != NULL || xargs->linkdn != NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 46,
        "fullcodeline": "k5_setmsg(context, st, _(\"unknown option: %s\"), arg);"
    },
    {
        "line": 38,
        "fullcodeline": "st = EINVAL;"
    },
    {
        "line": 39,
        "fullcodeline": "k5_setmsg(context, st, _(\"%s option not supported\"),"
    }
]