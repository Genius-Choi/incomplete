[
    {
        "line": 4,
        "fullcodeline": "unsigned char opt_data[DNS_MAX_OPT_LEN];"
    },
    {
        "line": 5,
        "fullcodeline": "struct dns_opt *opt = (struct dns_opt *)opt_data;"
    },
    {
        "line": 6,
        "fullcodeline": "int len = DNS_MAX_OPT_LEN;"
    },
    {
        "line": 7,
        "fullcodeline": "int ttl = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned char *data = NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "data = opt->data;"
    },
    {
        "line": 10,
        "fullcodeline": "if (_dns_get_opt_RAW(rrs, NULL, 0, &ttl, opt, &len) != 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (opt->code != DNS_OPT_T_TCP_KEEPALIVE) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (opt->length == 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "*timeout = _dns_read_short(&data);"
    },
    {
        "line": 27,
        "fullcodeline": "if (opt->length != sizeof(unsigned short)) {"
    },
    {
        "line": 11,
        "fullcodeline": "return -1;"
    },
    {
        "line": 15,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 28,
        "fullcodeline": "return -1;"
    }
]