[
    {
        "line": 4,
        "fullcodeline": "int qtype = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char *data = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int rr_len = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "data = dns_get_rr_nested_start(rrs, domain, maxsize, &qtype, ttl, &rr_len);"
    },
    {
        "line": 21,
        "fullcodeline": "*priority = _dns_read_short(&data);"
    },
    {
        "line": 22,
        "fullcodeline": "rr_len -= 2;"
    },
    {
        "line": 27,
        "fullcodeline": "int len = strnlen((char *)data, rr_len);"
    },
    {
        "line": 28,
        "fullcodeline": "safe_strncpy(target, (char *)data, target_size);"
    },
    {
        "line": 29,
        "fullcodeline": "data += len + 1;"
    },
    {
        "line": 30,
        "fullcodeline": "rr_len -= len + 1;"
    },
    {
        "line": 40,
        "fullcodeline": "*https_param = (struct dns_https_param *)data;"
    },
    {
        "line": 9,
        "fullcodeline": "if (data == NULL) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (qtype != DNS_T_HTTPS) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (rr_len < 2) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (rr_len <= 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (rr_len < 0) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (rr_len == 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "*https_param = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "return -1;"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    }
]