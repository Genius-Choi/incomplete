[
    {
        "line": 4,
        "fullcodeline": "int len = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "memset(rr_nested_buffer, 0, sizeof(*rr_nested_buffer));"
    },
    {
        "line": 6,
        "fullcodeline": "rr_nested_buffer->type = type;"
    },
    {
        "line": 7,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "ret = _dns_add_rrs_start(packet, &rr_nested_buffer->context);"
    },
    {
        "line": 19,
        "fullcodeline": "rr_nested_buffer->rr_start = rr_nested_buffer->context.ptr;"
    },
    {
        "line": 22,
        "fullcodeline": "len = _dns_add_rr_head(&rr_nested_buffer->context, domain, rtype, DNS_C_IN, ttl, 0);"
    },
    {
        "line": 26,
        "fullcodeline": "rr_nested_buffer->rr_len_ptr = rr_nested_buffer->context.ptr - 2;"
    },
    {
        "line": 27,
        "fullcodeline": "rr_nested_buffer->rr_head_len = len;"
    },
    {
        "line": 16,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (len < 0) {"
    }
]