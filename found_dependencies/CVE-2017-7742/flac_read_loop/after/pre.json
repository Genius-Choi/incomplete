[
    {
        "line": 2,
        "fullcodeline": "{\tFLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;"
    },
    {
        "line": 5,
        "fullcodeline": "pflac->pos = 0 ;"
    },
    {
        "line": 6,
        "fullcodeline": "pflac->len = len ;"
    },
    {
        "line": 7,
        "fullcodeline": "pflac->remain = len ;"
    },
    {
        "line": 9,
        "fullcodeline": "state = FLAC__stream_decoder_get_state (pflac->fsd) ;"
    },
    {
        "line": 33,
        "fullcodeline": "pflac->ptr = NULL ;"
    },
    {
        "line": 10,
        "fullcodeline": "if (state > FLAC__STREAM_DECODER_END_OF_STREAM)"
    },
    {
        "line": 17,
        "fullcodeline": "if (pflac->frame != NULL && pflac->bufferpos < pflac->frame->header.blocksize)"
    },
    {
        "line": 21,
        "fullcodeline": "while (pflac->pos < pflac->len)"
    },
    {
        "line": 11,
        "fullcodeline": "{\tpsf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;"
    },
    {
        "line": 13,
        "fullcodeline": "pflac->frame = NULL ;"
    },
    {
        "line": 18,
        "fullcodeline": "flac_buffer_copy (psf) ;"
    },
    {
        "line": 24,
        "fullcodeline": "state = FLAC__stream_decoder_get_state (pflac->fsd) ;"
    },
    {
        "line": 22,
        "fullcodeline": "{\tif (FLAC__stream_decoder_process_single (pflac->fsd) == 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (state >= FLAC__STREAM_DECODER_END_OF_STREAM)"
    },
    {
        "line": 26,
        "fullcodeline": "{\tpsf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;"
    },
    {
        "line": 28,
        "fullcodeline": "pflac->frame = NULL ;"
    }
]