[
    {
        "line": 5,
        "fullcodeline": "struct readbuffer *obuf = h_env->obuf;"
    },
    {
        "line": 6,
        "fullcodeline": "struct environment *envs = h_env->envs;"
    },
    {
        "line": 14,
        "fullcodeline": "cmd = tag->tagid;"
    },
    {
        "line": 16,
        "fullcodeline": "if (obuf->flag & RB_PRE) {"
    },
    {
        "line": 28,
        "fullcodeline": "obuf->in_bold++;"
    },
    {
        "line": 42,
        "fullcodeline": "obuf->in_italic++;"
    },
    {
        "line": 56,
        "fullcodeline": "obuf->in_under++;"
    },
    {
        "line": 95,
        "fullcodeline": "obuf->flag |= RB_IGNORE_P;"
    },
    {
        "line": 115,
        "fullcodeline": "HTMLlineproc1(\"</b>\", h_env);"
    },
    {
        "line": 119,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 120,
        "fullcodeline": "RB_RESTORE_FLAG(obuf);"
    },
    {
        "line": 121,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 135,
        "fullcodeline": "PUSH_ENV(cmd);"
    },
    {
        "line": 308,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 311,
        "fullcodeline": "obuf->end_tag = HTML_N_TITLE;"
    },
    {
        "line": 318,
        "fullcodeline": "tmp = process_n_title(tag);"
    },
    {
        "line": 328,
        "fullcodeline": "push_charp(obuf, 9, \"--FRAME--\", PC_ASCII);"
    },
    {
        "line": 339,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 345,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 349,
        "fullcodeline": "q = r = NULL;"
    },
    {
        "line": 350,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_SRC, &q);"
    },
    {
        "line": 351,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_NAME, &r);"
    },
    {
        "line": 364,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 365,
        "fullcodeline": "tmp = process_hr(tag, h_env->limit, envs[h_env->envc].indent);"
    },
    {
        "line": 370,
        "fullcodeline": "x = parsedtag_exists(tag, ATTR_FOR_TABLE);"
    },
    {
        "line": 384,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 391,
        "fullcodeline": "obuf->flag &= ~RB_PRE;"
    },
    {
        "line": 395,
        "fullcodeline": "i = obuf->line->length;"
    },
    {
        "line": 396,
        "fullcodeline": "append_tags(obuf);"
    },
    {
        "line": 403,
        "fullcodeline": "push_tag(obuf, \"</pre_int>\", HTML_N_PRE_INT);"
    },
    {
        "line": 404,
        "fullcodeline": "obuf->flag &= ~RB_PRE_INT;"
    },
    {
        "line": 475,
        "fullcodeline": "obuf->end_tag = HTML_N_SCRIPT;"
    },
    {
        "line": 479,
        "fullcodeline": "obuf->end_tag = HTML_N_STYLE;"
    },
    {
        "line": 493,
        "fullcodeline": "hseq = 0;"
    },
    {
        "line": 521,
        "fullcodeline": "tmp = process_img(tag, h_env->limit);"
    },
    {
        "line": 548,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 553,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 588,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 589,
        "fullcodeline": "obuf->table_level++;"
    },
    {
        "line": 592,
        "fullcodeline": "w = BORDER_NONE;"
    },
    {
        "line": 594,
        "fullcodeline": "x = 2;"
    },
    {
        "line": 595,
        "fullcodeline": "y = 1;"
    },
    {
        "line": 596,
        "fullcodeline": "z = 0;"
    },
    {
        "line": 597,
        "fullcodeline": "width = 0;"
    },
    {
        "line": 622,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_CELLSPACING, &x);"
    },
    {
        "line": 623,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_CELLPADDING, &y);"
    },
    {
        "line": 624,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_VSPACE, &z);"
    },
    {
        "line": 658,
        "fullcodeline": "RB_SAVE_FLAG(obuf);"
    },
    {
        "line": 659,
        "fullcodeline": "RB_SET_ALIGN(obuf, RB_CENTER);"
    },
    {
        "line": 675,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 686,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 693,
        "fullcodeline": "tmp = process_form(tag);"
    },
    {
        "line": 699,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 704,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 705,
        "fullcodeline": "tmp = process_input(tag);"
    },
    {
        "line": 710,
        "fullcodeline": "tmp = process_button(tag);"
    },
    {
        "line": 715,
        "fullcodeline": "tmp = process_n_button();"
    },
    {
        "line": 720,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 721,
        "fullcodeline": "tmp = process_select(tag);"
    },
    {
        "line": 725,
        "fullcodeline": "obuf->end_tag = HTML_N_SELECT;"
    },
    {
        "line": 730,
        "fullcodeline": "tmp = process_n_select();"
    },
    {
        "line": 738,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 739,
        "fullcodeline": "tmp = process_textarea(tag, h_env->limit);"
    },
    {
        "line": 743,
        "fullcodeline": "obuf->end_tag = HTML_N_TEXTAREA;"
    },
    {
        "line": 748,
        "fullcodeline": "tmp = process_n_textarea();"
    },
    {
        "line": 753,
        "fullcodeline": "p = \"\";"
    },
    {
        "line": 754,
        "fullcodeline": "q = \"!CURRENT_URL!\";"
    },
    {
        "line": 755,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_PROMPT, &p);"
    },
    {
        "line": 756,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_ACTION, &q);"
    },
    {
        "line": 757,
        "fullcodeline": "tmp = Strnew_m_charp(\"<form method=get action=\\\"\","
    },
    {
        "line": 766,
        "fullcodeline": "p = q = r = NULL;"
    },
    {
        "line": 767,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_HTTP_EQUIV, &p);"
    },
    {
        "line": 768,
        "fullcodeline": "parsedtag_get_value(tag, ATTR_CONTENT, &q);"
    },
    {
        "line": 35,
        "fullcodeline": "if (obuf->in_bold > 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (obuf->in_italic > 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (obuf->in_under > 0) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (cmd == HTML_P) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (cmd == HTML_OL) {"
    },
    {
        "line": 157,
        "fullcodeline": "if (h_env->envc > 0) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (parsedtag_exists(tag, ATTR_COMPACT))"
    },
    {
        "line": 187,
        "fullcodeline": "if (h_env->envc > 0) {"
    },
    {
        "line": 277,
        "fullcodeline": "if (h_env->envc > 0) {"
    },
    {
        "line": 316,
        "fullcodeline": "obuf->flag &= ~RB_TITLE;"
    },
    {
        "line": 323,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TITLE, &p))"
    },
    {
        "line": 332,
        "fullcodeline": "if (h_env->envc > 0) {"
    },
    {
        "line": 340,
        "fullcodeline": "obuf->flag |= (RB_NOFRAMES | RB_IGNORE_P);"
    },
    {
        "line": 346,
        "fullcodeline": "obuf->flag &= ~RB_NOFRAMES;"
    },
    {
        "line": 380,
        "fullcodeline": "obuf->flag |= (RB_PRE | RB_IGNORE_P);"
    },
    {
        "line": 415,
        "fullcodeline": "if (obuf->nobr_level > 0)"
    },
    {
        "line": 427,
        "fullcodeline": "obuf->flag |= (RB_PRE | RB_IGNORE_P);"
    },
    {
        "line": 437,
        "fullcodeline": "obuf->flag &= ~RB_PRE;"
    },
    {
        "line": 448,
        "fullcodeline": "obuf->flag |= (RB_PLAIN | RB_IGNORE_P);"
    },
    {
        "line": 470,
        "fullcodeline": "obuf->flag &= ~RB_PLAIN;"
    },
    {
        "line": 482,
        "fullcodeline": "obuf->flag &= ~RB_SCRIPT;"
    },
    {
        "line": 486,
        "fullcodeline": "obuf->flag &= ~RB_STYLE;"
    },
    {
        "line": 495,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_HREF, &p))"
    },
    {
        "line": 497,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TARGET, &p))"
    },
    {
        "line": 499,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_REFERER, &p))"
    },
    {
        "line": 501,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TITLE, &p))"
    },
    {
        "line": 503,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_ACCESSKEY, &p))"
    },
    {
        "line": 505,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_HSEQ, &hseq))"
    },
    {
        "line": 525,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_SRC, &p))"
    },
    {
        "line": 549,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TOP_MARGIN, &i)) {"
    },
    {
        "line": 554,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_BOTTOM_MARGIN, &i)) {"
    },
    {
        "line": 558,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_HSEQ, &hseq)) {"
    },
    {
        "line": 561,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_FID, &i)) {"
    },
    {
        "line": 564,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TYPE, &p)) {"
    },
    {
        "line": 567,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_VALUE, &p)) {"
    },
    {
        "line": 570,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_NAME, &p)) {"
    },
    {
        "line": 590,
        "fullcodeline": "if (obuf->table_level >= MAX_TABLE)"
    },
    {
        "line": 598,
        "fullcodeline": "if (parsedtag_exists(tag, ATTR_BORDER)) {"
    },
    {
        "line": 609,
        "fullcodeline": "if (DisplayBorders && w == BORDER_NONE)"
    },
    {
        "line": 611,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_WIDTH, &i)) {"
    },
    {
        "line": 617,
        "fullcodeline": "if (parsedtag_exists(tag, ATTR_HBORDER))"
    },
    {
        "line": 625,
        "fullcodeline": "if (x > MAX_CELLSPACING)"
    },
    {
        "line": 627,
        "fullcodeline": "if (y > MAX_CELLPADDING)"
    },
    {
        "line": 629,
        "fullcodeline": "if (z > MAX_VSPACE)"
    },
    {
        "line": 634,
        "fullcodeline": "tables[obuf->table_level] = begin_table(w, x, y, z);"
    },
    {
        "line": 728,
        "fullcodeline": "obuf->flag &= ~RB_INSELECT;"
    },
    {
        "line": 746,
        "fullcodeline": "obuf->flag &= ~RB_INTXTA;"
    },
    {
        "line": 33,
        "fullcodeline": "if (obuf->in_bold == 1 && close_effect0(obuf, HTML_B))"
    },
    {
        "line": 34,
        "fullcodeline": "obuf->in_bold = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "obuf->in_bold--;"
    },
    {
        "line": 47,
        "fullcodeline": "if (obuf->in_italic == 1 && close_effect0(obuf, HTML_I))"
    },
    {
        "line": 48,
        "fullcodeline": "obuf->in_italic = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "obuf->in_italic--;"
    },
    {
        "line": 61,
        "fullcodeline": "if (obuf->in_under == 1 && close_effect0(obuf, HTML_U))"
    },
    {
        "line": 62,
        "fullcodeline": "obuf->in_under = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "obuf->in_under--;"
    },
    {
        "line": 90,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 91,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 1, h_env->limit);"
    },
    {
        "line": 92,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 97,
        "fullcodeline": "set_alignment(obuf, tag);"
    },
    {
        "line": 98,
        "fullcodeline": "obuf->flag |= RB_P;"
    },
    {
        "line": 106,
        "fullcodeline": "if (!(obuf->flag & (RB_PREMODE | RB_IGNORE_P))) {"
    },
    {
        "line": 107,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 108,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 116,
        "fullcodeline": "if (!(obuf->flag & RB_PREMODE)) {"
    },
    {
        "line": 117,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 128,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 129,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 136,
        "fullcodeline": "if (cmd == HTML_UL || cmd == HTML_OL) {"
    },
    {
        "line": 158,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc - 1].indent, 0,"
    },
    {
        "line": 173,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 174,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 189,
        "fullcodeline": "flushline(h_env, obuf,"
    },
    {
        "line": 191,
        "fullcodeline": "envs[h_env->envc].count++;"
    },
    {
        "line": 271,
        "fullcodeline": "if (h_env->envc == 0 ||"
    },
    {
        "line": 272,
        "fullcodeline": "(h_env->envc_real < h_env->nenv &&"
    },
    {
        "line": 278,
        "fullcodeline": "flushline(h_env, obuf,"
    },
    {
        "line": 281,
        "fullcodeline": "if (!(obuf->flag & RB_IN_DT)) {"
    },
    {
        "line": 283,
        "fullcodeline": "obuf->flag |= RB_IN_DT;"
    },
    {
        "line": 290,
        "fullcodeline": "if (h_env->envc == 0 ||"
    },
    {
        "line": 291,
        "fullcodeline": "(h_env->envc_real < h_env->nenv &&"
    },
    {
        "line": 314,
        "fullcodeline": "if (!(obuf->flag & RB_TITLE))"
    },
    {
        "line": 353,
        "fullcodeline": "q = html_quote(q);"
    },
    {
        "line": 354,
        "fullcodeline": "push_tag(obuf, Sprintf(\"<a hseq=\\\"%d\\\" href=\\\"%s\\\">\","
    },
    {
        "line": 358,
        "fullcodeline": "push_charp(obuf, get_strwidth(q), q, PC_ASCII);"
    },
    {
        "line": 359,
        "fullcodeline": "push_tag(obuf, \"</a>\", HTML_N_A);"
    },
    {
        "line": 372,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 373,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 385,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 386,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 388,
        "fullcodeline": "obuf->flag |= RB_IGNORE_P;"
    },
    {
        "line": 389,
        "fullcodeline": "h_env->blank_lines++;"
    },
    {
        "line": 397,
        "fullcodeline": "if (!(obuf->flag & RB_SPECIAL)) {"
    },
    {
        "line": 398,
        "fullcodeline": "set_breakpoint(obuf, obuf->line->length - i);"
    },
    {
        "line": 405,
        "fullcodeline": "if (!(obuf->flag & RB_SPECIAL) && obuf->pos > obuf->bp.pos) {"
    },
    {
        "line": 407,
        "fullcodeline": "obuf->prev_ctype = PC_CTRL;"
    },
    {
        "line": 416,
        "fullcodeline": "obuf->nobr_level--;"
    },
    {
        "line": 422,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 423,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 424,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 431,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 432,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 433,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 435,
        "fullcodeline": "obuf->flag |= RB_IGNORE_P;"
    },
    {
        "line": 443,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 444,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 445,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 451,
        "fullcodeline": "obuf->end_tag = HTML_N_LISTING;"
    },
    {
        "line": 454,
        "fullcodeline": "obuf->end_tag = HTML_N_XMP;"
    },
    {
        "line": 457,
        "fullcodeline": "obuf->end_tag = MAX_HTMLTAG;"
    },
    {
        "line": 464,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P)) {"
    },
    {
        "line": 465,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 466,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 468,
        "fullcodeline": "obuf->flag |= RB_IGNORE_P;"
    },
    {
        "line": 491,
        "fullcodeline": "close_anchor(h_env, obuf);"
    },
    {
        "line": 496,
        "fullcodeline": "obuf->anchor.url = Strnew_charp(p)->ptr;"
    },
    {
        "line": 508,
        "fullcodeline": "if (hseq == 0 && obuf->anchor.url) {"
    },
    {
        "line": 510,
        "fullcodeline": "tmp = process_anchor(tag, h_env->tagbuf->ptr);"
    },
    {
        "line": 610,
        "fullcodeline": "w = BORDER_THIN;"
    },
    {
        "line": 618,
        "fullcodeline": "w = BORDER_NOWIN;"
    },
    {
        "line": 626,
        "fullcodeline": "x = MAX_CELLSPACING;"
    },
    {
        "line": 628,
        "fullcodeline": "y = MAX_CELLPADDING;"
    },
    {
        "line": 630,
        "fullcodeline": "z = MAX_VSPACE;"
    },
    {
        "line": 656,
        "fullcodeline": "if (!(obuf->flag & (RB_PREMODE | RB_IGNORE_P)))"
    },
    {
        "line": 657,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 663,
        "fullcodeline": "if (!(obuf->flag & RB_PREMODE))"
    },
    {
        "line": 664,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 669,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P))"
    },
    {
        "line": 670,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 680,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P))"
    },
    {
        "line": 681,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 691,
        "fullcodeline": "if (!(obuf->flag & RB_IGNORE_P))"
    },
    {
        "line": 692,
        "fullcodeline": "flushline(h_env, obuf, envs[h_env->envc].indent, 0, h_env->limit);"
    },
    {
        "line": 758,
        "fullcodeline": "html_quote(q),"
    },
    {
        "line": 760,
        "fullcodeline": "html_quote(p),"
    },
    {
        "line": 789,
        "fullcodeline": "if (p && q && !strcasecmp(p, \"refresh\")) {"
    },
    {
        "line": 791,
        "fullcodeline": "tmp = NULL;"
    },
    {
        "line": 792,
        "fullcodeline": "refresh_interval = getMetaRefreshParam(q, &tmp);"
    },
    {
        "line": 833,
        "fullcodeline": "obuf->in_strike++;"
    },
    {
        "line": 870,
        "fullcodeline": "obuf->in_strike++;"
    },
    {
        "line": 906,
        "fullcodeline": "obuf->in_ins++;"
    },
    {
        "line": 935,
        "fullcodeline": "if (!(obuf->flag & (RB_DEL | RB_S)))"
    },
    {
        "line": 941,
        "fullcodeline": "if (!(obuf->flag & (RB_DEL | RB_S)))"
    },
    {
        "line": 945,
        "fullcodeline": "if (!(obuf->flag & (RB_DEL | RB_S)))"
    },
    {
        "line": 137,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_START, &count)) {"
    },
    {
        "line": 143,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_TYPE, &p)) {"
    },
    {
        "line": 148,
        "fullcodeline": "envs[h_env->envc].type = ul_type(tag, 0);"
    },
    {
        "line": 192,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_VALUE, &p)) {"
    },
    {
        "line": 265,
        "fullcodeline": "flushline(h_env, obuf, 0, 0, h_env->limit);"
    },
    {
        "line": 274,
        "fullcodeline": "envs[h_env->envc].env != HTML_DL_COMPACT)) {"
    },
    {
        "line": 293,
        "fullcodeline": "envs[h_env->envc].env != HTML_DL_COMPACT)) {"
    },
    {
        "line": 297,
        "fullcodeline": "if (obuf->pos > envs[h_env->envc].indent)"
    },
    {
        "line": 324,
        "fullcodeline": "h_env->title = html_unquote(p);"
    },
    {
        "line": 379,
        "fullcodeline": "fillline(obuf, envs[h_env->envc].indent);"
    },
    {
        "line": 418,
        "fullcodeline": "obuf->flag &= ~RB_NOBR;"
    },
    {
        "line": 526,
        "fullcodeline": "obuf->img_alt = Strnew_charp(p);"
    },
    {
        "line": 550,
        "fullcodeline": "if (i > obuf->top_margin)"
    },
    {
        "line": 555,
        "fullcodeline": "if (i > obuf->bottom_margin)"
    },
    {
        "line": 565,
        "fullcodeline": "obuf->input_alt.type = Strnew_charp(p);"
    },
    {
        "line": 568,
        "fullcodeline": "obuf->input_alt.value = Strnew_charp(p);"
    },
    {
        "line": 571,
        "fullcodeline": "obuf->input_alt.name = Strnew_charp(p);"
    },
    {
        "line": 580,
        "fullcodeline": "obuf->input_alt.fid = -1;"
    },
    {
        "line": 599,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_BORDER, &w)) {"
    },
    {
        "line": 834,
        "fullcodeline": "if (obuf->in_strike == 1) {"
    },
    {
        "line": 843,
        "fullcodeline": "obuf->flag &= ~RB_DEL;"
    },
    {
        "line": 848,
        "fullcodeline": "if (obuf->in_strike == 0)"
    },
    {
        "line": 852,
        "fullcodeline": "if (obuf->in_strike > 0) {"
    },
    {
        "line": 871,
        "fullcodeline": "if (obuf->in_strike == 1) {"
    },
    {
        "line": 880,
        "fullcodeline": "obuf->flag &= ~RB_S;"
    },
    {
        "line": 886,
        "fullcodeline": "if (obuf->in_strike == 0)"
    },
    {
        "line": 890,
        "fullcodeline": "if (obuf->in_strike > 0) {"
    },
    {
        "line": 907,
        "fullcodeline": "if (obuf->in_ins == 1) {"
    },
    {
        "line": 921,
        "fullcodeline": "if (obuf->in_ins == 0)"
    },
    {
        "line": 925,
        "fullcodeline": "if (obuf->in_ins > 0) {"
    },
    {
        "line": 954,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_SRC, &p)) {"
    },
    {
        "line": 964,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_SRC, &p)) {"
    },
    {
        "line": 974,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_ARCHIVE, &p)) {"
    },
    {
        "line": 984,
        "fullcodeline": "if (parsedtag_get_value(tag, ATTR_BACKGROUND, &p)) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (!(obuf->flag & RB_PREMODE) &&"
    },
    {
        "line": 131,
        "fullcodeline": "(h_env->envc == 0 || cmd == HTML_BLQ))"
    },
    {
        "line": 132,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 161,
        "fullcodeline": "if (!(obuf->flag & RB_PREMODE) &&"
    },
    {
        "line": 162,
        "fullcodeline": "(h_env->envc == 0 || cmd == HTML_N_DL || cmd == HTML_N_BLQ)) {"
    },
    {
        "line": 163,
        "fullcodeline": "do_blankline(h_env, obuf,"
    },
    {
        "line": 166,
        "fullcodeline": "obuf->flag |= RB_IGNORE_P;"
    },
    {
        "line": 175,
        "fullcodeline": "if (!(obuf->flag & RB_PREMODE))"
    },
    {
        "line": 176,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 193,
        "fullcodeline": "count = atoi(p);"
    },
    {
        "line": 204,
        "fullcodeline": "tmp = Strnew();"
    },
    {
        "line": 224,
        "fullcodeline": "push_str(obuf, symbol_width, tmp, PC_ASCII);"
    },
    {
        "line": 225,
        "fullcodeline": "push_charp(obuf, 1, NBSP, PC_ASCII);"
    },
    {
        "line": 254,
        "fullcodeline": "push_spaces(obuf, 1, INDENT_INCR - num->length);"
    },
    {
        "line": 255,
        "fullcodeline": "push_str(obuf, num->length, num, PC_ASCII);"
    },
    {
        "line": 260,
        "fullcodeline": "push_spaces(obuf, 1, INDENT_INCR);"
    },
    {
        "line": 273,
        "fullcodeline": "envs[h_env->envc].env != HTML_DL &&"
    },
    {
        "line": 292,
        "fullcodeline": "envs[h_env->envc].env != HTML_DL &&"
    },
    {
        "line": 357,
        "fullcodeline": "q = html_quote(r);"
    },
    {
        "line": 375,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 498,
        "fullcodeline": "obuf->anchor.target = Strnew_charp(p)->ptr;"
    },
    {
        "line": 500,
        "fullcodeline": "obuf->anchor.referer = Strnew_charp(p)->ptr;"
    },
    {
        "line": 502,
        "fullcodeline": "obuf->anchor.title = Strnew_charp(p)->ptr;"
    },
    {
        "line": 542,
        "fullcodeline": "if (!close_effect0(obuf, HTML_IMG_ALT))"
    },
    {
        "line": 543,
        "fullcodeline": "push_tag(obuf, \"</img_alt>\", HTML_N_IMG_ALT);"
    },
    {
        "line": 577,
        "fullcodeline": "if (!close_effect0(obuf, HTML_INPUT_ALT))"
    },
    {
        "line": 578,
        "fullcodeline": "push_tag(obuf, \"</input_alt>\", HTML_N_INPUT_ALT);"
    },
    {
        "line": 613,
        "fullcodeline": "width = REAL_WIDTH(i, h_env->limit - envs[h_env->envc].indent);"
    },
    {
        "line": 794,
        "fullcodeline": "q = html_quote(tmp->ptr);"
    },
    {
        "line": 795,
        "fullcodeline": "tmp = Sprintf(\"Refresh (%d sec) <a href=\\\"%s\\\">%s</a>\","
    },
    {
        "line": 801,
        "fullcodeline": "HTMLlineproc1(tmp->ptr, h_env);"
    },
    {
        "line": 802,
        "fullcodeline": "do_blankline(h_env, obuf, envs[h_env->envc].indent, 0,"
    },
    {
        "line": 850,
        "fullcodeline": "if (obuf->in_strike == 1 && close_effect0(obuf, HTML_S))"
    },
    {
        "line": 851,
        "fullcodeline": "obuf->in_strike = 0;"
    },
    {
        "line": 853,
        "fullcodeline": "obuf->in_strike--;"
    },
    {
        "line": 888,
        "fullcodeline": "if (obuf->in_strike == 1 && close_effect0(obuf, HTML_S))"
    },
    {
        "line": 889,
        "fullcodeline": "obuf->in_strike = 0;"
    },
    {
        "line": 891,
        "fullcodeline": "obuf->in_strike--;"
    },
    {
        "line": 923,
        "fullcodeline": "if (obuf->in_ins == 1 && close_effect0(obuf, HTML_INS))"
    },
    {
        "line": 924,
        "fullcodeline": "obuf->in_ins = 0;"
    },
    {
        "line": 926,
        "fullcodeline": "obuf->in_ins--;"
    },
    {
        "line": 956,
        "fullcodeline": "q = html_quote(p);"
    },
    {
        "line": 957,
        "fullcodeline": "s = Sprintf(\"<A HREF=\\\"%s\\\">bgsound(%s)</A>\", q, q);"
    },
    {
        "line": 966,
        "fullcodeline": "q = html_quote(p);"
    },
    {
        "line": 967,
        "fullcodeline": "s = Sprintf(\"<A HREF=\\\"%s\\\">embed(%s)</A>\", q, q);"
    },
    {
        "line": 976,
        "fullcodeline": "q = html_quote(p);"
    },
    {
        "line": 977,
        "fullcodeline": "s = Sprintf(\"<A HREF=\\\"%s\\\">applet archive(%s)</A>\", q, q);"
    },
    {
        "line": 986,
        "fullcodeline": "q = html_quote(p);"
    },
    {
        "line": 987,
        "fullcodeline": "s = Sprintf(\"<IMG SRC=\\\"%s\\\" ALT=\\\"bg image(%s)\\\"><BR>\", q, q);"
    },
    {
        "line": 988,
        "fullcodeline": "HTMLlineproc1(s->ptr, h_env);"
    },
    {
        "line": 138,
        "fullcodeline": "envs[h_env->envc].count = count - 1;"
    },
    {
        "line": 190,
        "fullcodeline": "envs[h_env->envc - 1].indent, 0, h_env->limit);"
    },
    {
        "line": 194,
        "fullcodeline": "if (count > 0)"
    },
    {
        "line": 201,
        "fullcodeline": "envs[h_env->envc].type = ul_type(tag, envs[h_env->envc].type);"
    },
    {
        "line": 202,
        "fullcodeline": "for (i = 0; i < INDENT_INCR - 3; i++)"
    },
    {
        "line": 203,
        "fullcodeline": "push_charp(obuf, 1, NBSP, PC_ASCII);"
    },
    {
        "line": 222,
        "fullcodeline": "if (symbol_width == 1)"
    },
    {
        "line": 250,
        "fullcodeline": "if (INDENT_INCR >= 4)"
    },
    {
        "line": 279,
        "fullcodeline": "envs[h_env->envc - 1].indent, 0, h_env->limit);"
    },
    {
        "line": 355,
        "fullcodeline": "cur_hseq++, q)->ptr, HTML_A);"
    },
    {
        "line": 600,
        "fullcodeline": "if (w > 2)"
    },
    {
        "line": 607,
        "fullcodeline": "w = BORDER_THIN;"
    },
    {
        "line": 615,
        "fullcodeline": "width = RELATIVE_WIDTH(i);"
    },
    {
        "line": 854,
        "fullcodeline": "if (obuf->in_strike == 0) {"
    },
    {
        "line": 892,
        "fullcodeline": "if (obuf->in_strike == 0) {"
    },
    {
        "line": 927,
        "fullcodeline": "if (obuf->in_ins == 0) {"
    },
    {
        "line": 195,
        "fullcodeline": "envs[h_env->envc].count = count;"
    },
    {
        "line": 207,
        "fullcodeline": "push_symbol(tmp, UL_SYMBOL_DISC, symbol_width, 1);"
    },
    {
        "line": 210,
        "fullcodeline": "push_symbol(tmp, UL_SYMBOL_CIRCLE, symbol_width, 1);"
    },
    {
        "line": 213,
        "fullcodeline": "push_symbol(tmp, UL_SYMBOL_SQUARE, symbol_width, 1);"
    },
    {
        "line": 216,
        "fullcodeline": "push_symbol(tmp,"
    },
    {
        "line": 223,
        "fullcodeline": "push_charp(obuf, 1, NBSP, PC_ASCII);"
    },
    {
        "line": 230,
        "fullcodeline": "envs[h_env->envc].type = (int)*p;"
    },
    {
        "line": 231,
        "fullcodeline": "switch ((envs[h_env->envc].count > 0)? envs[h_env->envc].type: '1') {"
    },
    {
        "line": 233,
        "fullcodeline": "num = romanNumeral(envs[h_env->envc].count);"
    },
    {
        "line": 236,
        "fullcodeline": "num = romanNumeral(envs[h_env->envc].count);"
    },
    {
        "line": 237,
        "fullcodeline": "Strupper(num);"
    },
    {
        "line": 240,
        "fullcodeline": "num = romanAlphabet(envs[h_env->envc].count);"
    },
    {
        "line": 243,
        "fullcodeline": "num = romanAlphabet(envs[h_env->envc].count);"
    },
    {
        "line": 244,
        "fullcodeline": "Strupper(num);"
    },
    {
        "line": 247,
        "fullcodeline": "num = Sprintf(\"%d\", envs[h_env->envc].count);"
    },
    {
        "line": 251,
        "fullcodeline": "Strcat_charp(num, \". \");"
    },
    {
        "line": 301,
        "fullcodeline": "push_spaces(obuf, 1, envs[h_env->envc].indent - obuf->pos);"
    },
    {
        "line": 601,
        "fullcodeline": "w = BORDER_THICK;"
    },
    {
        "line": 798,
        "fullcodeline": "else if (refresh_interval > 0)"
    },
    {
        "line": 804,
        "fullcodeline": "if (!is_redisplay &&"
    },
    {
        "line": 805,
        "fullcodeline": "!((obuf->flag & RB_NOFRAMES) && RenderFrame)) {"
    },
    {
        "line": 806,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    },
    {
        "line": 928,
        "fullcodeline": "push_tag(obuf, \"</ins>\", HTML_N_INS);"
    },
    {
        "line": 197,
        "fullcodeline": "envs[h_env->envc].count = 0;"
    },
    {
        "line": 217,
        "fullcodeline": "UL_SYMBOL((h_env->envc_real -"
    },
    {
        "line": 253,
        "fullcodeline": "Strcat_char(num, '.');"
    },
    {
        "line": 513,
        "fullcodeline": "HTMLlineproc1(getLinkNumberStr(-1)->ptr, h_env);"
    },
    {
        "line": 799,
        "fullcodeline": "tmp = Sprintf(\"Refresh (%d sec)\", refresh_interval);"
    },
    {
        "line": 602,
        "fullcodeline": "else if (w < 0) {\t/* weird */"
    },
    {
        "line": 603,
        "fullcodeline": "w = BORDER_THIN;"
    }
]