[
    {
        "line": 3,
        "fullcodeline": "struct parsed_tag *tag = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char tagname[MAX_TAG_LEN], attrname[MAX_TAG_LEN];"
    },
    {
        "line": 7,
        "fullcodeline": "int i, attr_id = 0, nattr;"
    },
    {
        "line": 10,
        "fullcodeline": "tagname[0] = '\\0';"
    },
    {
        "line": 11,
        "fullcodeline": "q = (*s) + 1;"
    },
    {
        "line": 12,
        "fullcodeline": "p = tagname;"
    },
    {
        "line": 22,
        "fullcodeline": "*p = '\\0';"
    },
    {
        "line": 27,
        "fullcodeline": "tag_id = getHash_si(&tagtable, tagname, HTML_UNKNOWN);"
    },
    {
        "line": 34,
        "fullcodeline": "bzero(tag, sizeof(struct parsed_tag));"
    },
    {
        "line": 35,
        "fullcodeline": "tag->tagid = tag_id;"
    },
    {
        "line": 48,
        "fullcodeline": "SKIP_BLANKS(q);"
    },
    {
        "line": 156,
        "fullcodeline": "*s = q;"
    },
    {
        "line": 13,
        "fullcodeline": "if (*q == '/') {"
    },
    {
        "line": 17,
        "fullcodeline": "while (*q && !IS_SPACE(*q) && !(tagname[0] != '/' && *q == '/') &&"
    },
    {
        "line": 23,
        "fullcodeline": "while (*q && !IS_SPACE(*q) && !(tagname[0] != '/' && *q == '/') &&"
    },
    {
        "line": 25,
        "fullcodeline": "q++;"
    },
    {
        "line": 29,
        "fullcodeline": "if (tag_id == HTML_UNKNOWN ||"
    },
    {
        "line": 37,
        "fullcodeline": "if ((nattr = TagMAP[tag_id].max_attribute) > 0) {"
    },
    {
        "line": 151,
        "fullcodeline": "while (*q != '>' && *q)"
    },
    {
        "line": 152,
        "fullcodeline": "q++;"
    },
    {
        "line": 154,
        "fullcodeline": "if (*q == '>')"
    },
    {
        "line": 14,
        "fullcodeline": "*(p++) = *(q++);"
    },
    {
        "line": 15,
        "fullcodeline": "SKIP_BLANKS(q);"
    },
    {
        "line": 18,
        "fullcodeline": "*q != '>' && p - tagname < MAX_TAG_LEN - 1) {"
    },
    {
        "line": 19,
        "fullcodeline": "*(p++) = TOLOWER(*q);"
    },
    {
        "line": 20,
        "fullcodeline": "q++;"
    },
    {
        "line": 24,
        "fullcodeline": "*q != '>')"
    },
    {
        "line": 30,
        "fullcodeline": "(!internal && TagMAP[tag_id].flag & TFLG_INT))"
    },
    {
        "line": 41,
        "fullcodeline": "memset(tag->map, MAX_TAGATTR, MAX_TAGATTR);"
    },
    {
        "line": 42,
        "fullcodeline": "memset(tag->attrid, ATTR_UNKNOWN, nattr);"
    },
    {
        "line": 50,
        "fullcodeline": "Str value = NULL, value_tmp = NULL;"
    },
    {
        "line": 53,
        "fullcodeline": "p = attrname;"
    },
    {
        "line": 59,
        "fullcodeline": "*p = '\\0';"
    },
    {
        "line": 62,
        "fullcodeline": "SKIP_BLANKS(q);"
    },
    {
        "line": 155,
        "fullcodeline": "q++;"
    },
    {
        "line": 43,
        "fullcodeline": "for (i = 0; i < nattr; i++)"
    },
    {
        "line": 44,
        "fullcodeline": "tag->map[TagMAP[tag_id].accept_attribute[i]] = i;"
    },
    {
        "line": 51,
        "fullcodeline": "if (*q == '>' || *q == '\\0')"
    },
    {
        "line": 54,
        "fullcodeline": "while (*q && *q != '=' && !IS_SPACE(*q) &&"
    },
    {
        "line": 60,
        "fullcodeline": "while (*q && *q != '=' && !IS_SPACE(*q) && *q != '>')"
    },
    {
        "line": 61,
        "fullcodeline": "q++;"
    },
    {
        "line": 63,
        "fullcodeline": "if (*q == '=') {"
    },
    {
        "line": 99,
        "fullcodeline": "for (i = 0; i < nattr; i++) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (i != nattr) {"
    },
    {
        "line": 55,
        "fullcodeline": "*q != '>' && p - attrname < MAX_TAG_LEN - 1) {"
    },
    {
        "line": 56,
        "fullcodeline": "*(p++) = TOLOWER(*q);"
    },
    {
        "line": 57,
        "fullcodeline": "q++;"
    },
    {
        "line": 65,
        "fullcodeline": "value_tmp = Strnew();"
    },
    {
        "line": 66,
        "fullcodeline": "q++;"
    },
    {
        "line": 67,
        "fullcodeline": "SKIP_BLANKS(q);"
    },
    {
        "line": 109,
        "fullcodeline": "int j, hidden=FALSE;"
    },
    {
        "line": 139,
        "fullcodeline": "tag->attrid[i] = attr_id;"
    },
    {
        "line": 68,
        "fullcodeline": "if (*q == '\"') {"
    },
    {
        "line": 100,
        "fullcodeline": "if ((tag)->attrid[i] == ATTR_UNKNOWN &&"
    },
    {
        "line": 110,
        "fullcodeline": "for (j=0; j<i; j++) {"
    },
    {
        "line": 118,
        "fullcodeline": "if ((tag_id == HTML_INPUT || tag_id == HTML_INPUT_ALT) &&"
    },
    {
        "line": 132,
        "fullcodeline": "if (!internal &&"
    },
    {
        "line": 146,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    },
    {
        "line": 69,
        "fullcodeline": "q++;"
    },
    {
        "line": 101,
        "fullcodeline": "strcmp(AttrMAP[TagMAP[tag_id].accept_attribute[i]].name,"
    },
    {
        "line": 103,
        "fullcodeline": "attr_id = TagMAP[tag_id].accept_attribute[i];"
    },
    {
        "line": 120,
        "fullcodeline": "value = value_tmp;"
    },
    {
        "line": 133,
        "fullcodeline": "((AttrMAP[attr_id].flag & AFLG_INT) ||"
    },
    {
        "line": 136,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    },
    {
        "line": 141,
        "fullcodeline": "tag->value[i] = html_unquote(value->ptr);"
    },
    {
        "line": 70,
        "fullcodeline": "while (*q && *q != '\"') {"
    },
    {
        "line": 76,
        "fullcodeline": "if (*q == '\"')"
    },
    {
        "line": 111,
        "fullcodeline": "if (tag->attrid[j] == ATTR_TYPE &&"
    },
    {
        "line": 119,
        "fullcodeline": "attr_id == ATTR_VALUE && hidden) {"
    },
    {
        "line": 123,
        "fullcodeline": "value = Strnew();"
    },
    {
        "line": 134,
        "fullcodeline": "(value && AttrMAP[attr_id].vtype == VTYPE_METHOD &&"
    },
    {
        "line": 143,
        "fullcodeline": "tag->value[i] = NULL;"
    },
    {
        "line": 71,
        "fullcodeline": "Strcat_char(value_tmp, *q);"
    },
    {
        "line": 74,
        "fullcodeline": "q++;"
    },
    {
        "line": 77,
        "fullcodeline": "q++;"
    },
    {
        "line": 79,
        "fullcodeline": "else if (*q == '\\'') {"
    },
    {
        "line": 113,
        "fullcodeline": "strcmp(\"hidden\",tag->value[j]) == 0) {"
    },
    {
        "line": 114,
        "fullcodeline": "hidden=TRUE;"
    },
    {
        "line": 124,
        "fullcodeline": "for (x = value_tmp->ptr; *x; x++) {"
    },
    {
        "line": 135,
        "fullcodeline": "!strcasecmp(value->ptr, \"internal\")))) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!tag->need_reconstruct && is_html_quote(*q))"
    },
    {
        "line": 80,
        "fullcodeline": "q++;"
    },
    {
        "line": 73,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    },
    {
        "line": 81,
        "fullcodeline": "while (*q && *q != '\\'') {"
    },
    {
        "line": 87,
        "fullcodeline": "if (*q == '\\'')"
    },
    {
        "line": 125,
        "fullcodeline": "if (*x != '\\n')"
    },
    {
        "line": 82,
        "fullcodeline": "Strcat_char(value_tmp, *q);"
    },
    {
        "line": 85,
        "fullcodeline": "q++;"
    },
    {
        "line": 88,
        "fullcodeline": "q++;"
    },
    {
        "line": 126,
        "fullcodeline": "Strcat_char(value, *x);"
    },
    {
        "line": 83,
        "fullcodeline": "if (!tag->need_reconstruct && is_html_quote(*q))"
    },
    {
        "line": 84,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    },
    {
        "line": 91,
        "fullcodeline": "while (*q && !IS_SPACE(*q) && *q != '>') {"
    },
    {
        "line": 92,
        "fullcodeline": "Strcat_char(value_tmp, *q);"
    },
    {
        "line": 95,
        "fullcodeline": "q++;"
    },
    {
        "line": 93,
        "fullcodeline": "if (!tag->need_reconstruct && is_html_quote(*q))"
    },
    {
        "line": 94,
        "fullcodeline": "tag->need_reconstruct = TRUE;"
    }
]