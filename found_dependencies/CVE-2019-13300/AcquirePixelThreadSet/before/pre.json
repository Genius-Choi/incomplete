[
    {
        "line": 12,
        "fullcodeline": "number_threads=(size_t) GetMagickResourceLimit(ThreadResource);"
    },
    {
        "line": 13,
        "fullcodeline": "pixels=(PixelChannels **) AcquireQuantumMemory(number_threads,"
    },
    {
        "line": 15,
        "fullcodeline": "if (pixels == (PixelChannels **) NULL)"
    },
    {
        "line": 17,
        "fullcodeline": "(void) memset(pixels,0,number_threads*sizeof(*pixels));"
    },
    {
        "line": 18,
        "fullcodeline": "for (i=0; i < (ssize_t) number_threads; i++)"
    },
    {
        "line": 23,
        "fullcodeline": "pixels[i]=(PixelChannels *) AcquireQuantumMemory(image->columns,"
    },
    {
        "line": 14,
        "fullcodeline": "sizeof(*pixels));"
    },
    {
        "line": 16,
        "fullcodeline": "return((PixelChannels **) NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "if (pixels[i] == (PixelChannels *) NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "for (j=0; j < (ssize_t) image->columns; j++)"
    },
    {
        "line": 26,
        "fullcodeline": "return(DestroyPixelThreadSet(pixels));"
    },
    {
        "line": 32,
        "fullcodeline": "for (k=0; k < MaxPixelChannels; k++)"
    }
]