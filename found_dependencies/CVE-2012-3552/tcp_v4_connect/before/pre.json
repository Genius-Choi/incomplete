[
    {
        "line": 3,
        "fullcodeline": "struct sockaddr_in *usin = (struct sockaddr_in *)uaddr;"
    },
    {
        "line": 4,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct tcp_sock *tp = tcp_sk(sk);"
    },
    {
        "line": 18,
        "fullcodeline": "nexthop = daddr = usin->sin_addr.s_addr;"
    },
    {
        "line": 25,
        "fullcodeline": "orig_sport = inet->inet_sport;"
    },
    {
        "line": 26,
        "fullcodeline": "orig_dport = usin->sin_port;"
    },
    {
        "line": 27,
        "fullcodeline": "rt = ip_route_connect(&fl4, nexthop, inet->inet_saddr,"
    },
    {
        "line": 75,
        "fullcodeline": "inet->inet_dport = usin->sin_port;"
    },
    {
        "line": 76,
        "fullcodeline": "inet->inet_daddr = daddr;"
    },
    {
        "line": 82,
        "fullcodeline": "tp->rx_opt.mss_clamp = TCP_MSS_DEFAULT;"
    },
    {
        "line": 89,
        "fullcodeline": "tcp_set_state(sk, TCP_SYN_SENT);"
    },
    {
        "line": 90,
        "fullcodeline": "err = inet_hash_connect(&tcp_death_row, sk);"
    },
    {
        "line": 94,
        "fullcodeline": "rt = ip_route_newports(&fl4, rt, orig_sport, orig_dport,"
    },
    {
        "line": 102,
        "fullcodeline": "sk->sk_gso_type = SKB_GSO_TCPV4;"
    },
    {
        "line": 103,
        "fullcodeline": "sk_setup_caps(sk, &rt->dst);"
    },
    {
        "line": 113,
        "fullcodeline": "err = tcp_connect(sk);"
    },
    {
        "line": 114,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 125,
        "fullcodeline": "tcp_set_state(sk, TCP_CLOSE);"
    },
    {
        "line": 12,
        "fullcodeline": "if (addr_len < sizeof(struct sockaddr_in))"
    },
    {
        "line": 15,
        "fullcodeline": "if (usin->sin_family != AF_INET)"
    },
    {
        "line": 19,
        "fullcodeline": "if (inet->opt && inet->opt->srr) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (IS_ERR(rt)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (rt->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST)) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!inet->inet_saddr)"
    },
    {
        "line": 50,
        "fullcodeline": "if (tp->rx_opt.ts_recent_stamp && inet->inet_daddr != daddr) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (IS_ERR(rt)) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (!tp->write_seq)"
    },
    {
        "line": 111,
        "fullcodeline": "inet->inet_id = tp->write_seq ^ jiffies;"
    },
    {
        "line": 22,
        "fullcodeline": "nexthop = inet->opt->faddr;"
    },
    {
        "line": 28,
        "fullcodeline": "RT_CONN_FLAGS(sk), sk->sk_bound_dev_if,"
    },
    {
        "line": 32,
        "fullcodeline": "err = PTR_ERR(rt);"
    },
    {
        "line": 43,
        "fullcodeline": "if (!inet->opt || !inet->opt->srr)"
    },
    {
        "line": 44,
        "fullcodeline": "daddr = rt->rt_dst;"
    },
    {
        "line": 47,
        "fullcodeline": "inet->inet_saddr = rt->rt_src;"
    },
    {
        "line": 53,
        "fullcodeline": "tp->rx_opt.ts_recent_stamp = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "tp->write_seq\t\t   = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "if (tcp_death_row.sysctl_tw_recycle &&"
    },
    {
        "line": 58,
        "fullcodeline": "!tp->rx_opt.ts_recent_stamp && rt->rt_dst == daddr) {"
    },
    {
        "line": 59,
        "fullcodeline": "struct inet_peer *peer = rt_get_peer(rt);"
    },
    {
        "line": 78,
        "fullcodeline": "inet_csk(sk)->icsk_ext_hdr_len = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "err = PTR_ERR(rt);"
    },
    {
        "line": 98,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 106,
        "fullcodeline": "tp->write_seq = secure_tcp_sequence_number(inet->inet_saddr,"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 16,
        "fullcodeline": "return -EAFNOSUPPORT;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!daddr)"
    },
    {
        "line": 33,
        "fullcodeline": "if (err == -ENETUNREACH)"
    },
    {
        "line": 40,
        "fullcodeline": "return -ENETUNREACH;"
    },
    {
        "line": 34,
        "fullcodeline": "IP_INC_STATS_BH(sock_net(sk), IPSTATS_MIB_OUTNOROUTES);"
    },
    {
        "line": 67,
        "fullcodeline": "inet_peer_refcheck(peer);"
    },
    {
        "line": 80,
        "fullcodeline": "inet_csk(sk)->icsk_ext_hdr_len = inet->opt->optlen;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 68,
        "fullcodeline": "if ((u32)get_seconds() - peer->tcp_ts_stamp <= TCP_PAWS_MSL) {"
    }
]