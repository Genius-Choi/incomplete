[
    {
        "line": 4,
        "fullcodeline": "unsigned char *iph = skb_network_header(skb);"
    },
    {
        "line": 6,
        "fullcodeline": "memcpy(&(IPCB(skb)->opt), opt, sizeof(struct ip_options));"
    },
    {
        "line": 7,
        "fullcodeline": "memcpy(iph+sizeof(struct iphdr), opt->__data, opt->optlen);"
    },
    {
        "line": 8,
        "fullcodeline": "opt = &(IPCB(skb)->opt);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!is_frag) {"
    },
    {
        "line": 11,
        "fullcodeline": "memcpy(iph+opt->srr+iph[opt->srr+1]-4, &daddr, 4);"
    },
    {
        "line": 28,
        "fullcodeline": "memset(iph+opt->rr, IPOPT_NOP, iph[opt->rr+1]);"
    },
    {
        "line": 29,
        "fullcodeline": "opt->rr = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "opt->rr_needaddr = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "memset(iph+opt->ts, IPOPT_NOP, iph[opt->ts+1]);"
    },
    {
        "line": 34,
        "fullcodeline": "opt->ts = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "opt->ts_needaddr = opt->ts_needtime = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "ip_rt_get_source(iph+opt->rr+iph[opt->rr+2]-5, rt);"
    },
    {
        "line": 17,
        "fullcodeline": "ip_rt_get_source(iph+opt->ts+iph[opt->ts+2]-9, rt);"
    },
    {
        "line": 21,
        "fullcodeline": "getnstimeofday(&tv);"
    },
    {
        "line": 22,
        "fullcodeline": "midtime = htonl((tv.tv_sec % 86400) * MSEC_PER_SEC + tv.tv_nsec / NSEC_PER_MSEC);"
    },
    {
        "line": 23,
        "fullcodeline": "memcpy(iph+opt->ts+iph[opt->ts+2]-5, &midtime, 4);"
    }
]