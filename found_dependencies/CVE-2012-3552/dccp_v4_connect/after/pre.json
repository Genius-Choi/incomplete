[
    {
        "line": 3,
        "fullcodeline": "const struct sockaddr_in *usin = (struct sockaddr_in *)uaddr;"
    },
    {
        "line": 4,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct dccp_sock *dp = dccp_sk(sk);"
    },
    {
        "line": 13,
        "fullcodeline": "dp->dccps_role = DCCP_ROLE_CLIENT;"
    },
    {
        "line": 21,
        "fullcodeline": "nexthop = daddr = usin->sin_addr.s_addr;"
    },
    {
        "line": 23,
        "fullcodeline": "inet_opt = rcu_dereference_protected(inet->inet_opt,"
    },
    {
        "line": 31,
        "fullcodeline": "orig_sport = inet->inet_sport;"
    },
    {
        "line": 32,
        "fullcodeline": "orig_dport = usin->sin_port;"
    },
    {
        "line": 33,
        "fullcodeline": "rt = ip_route_connect(&fl4, nexthop, inet->inet_saddr,"
    },
    {
        "line": 52,
        "fullcodeline": "inet->inet_dport = usin->sin_port;"
    },
    {
        "line": 53,
        "fullcodeline": "inet->inet_daddr = daddr;"
    },
    {
        "line": 64,
        "fullcodeline": "dccp_set_state(sk, DCCP_REQUESTING);"
    },
    {
        "line": 65,
        "fullcodeline": "err = inet_hash_connect(&dccp_death_row, sk);"
    },
    {
        "line": 69,
        "fullcodeline": "rt = ip_route_newports(&fl4, rt, orig_sport, orig_dport,"
    },
    {
        "line": 76,
        "fullcodeline": "sk_setup_caps(sk, &rt->dst);"
    },
    {
        "line": 78,
        "fullcodeline": "dp->dccps_iss = secure_dccp_sequence_number(inet->inet_saddr,"
    },
    {
        "line": 84,
        "fullcodeline": "err = dccp_connect(sk);"
    },
    {
        "line": 85,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 94,
        "fullcodeline": "dccp_set_state(sk, DCCP_CLOSED);"
    },
    {
        "line": 15,
        "fullcodeline": "if (addr_len < sizeof(struct sockaddr_in))"
    },
    {
        "line": 18,
        "fullcodeline": "if (usin->sin_family != AF_INET)"
    },
    {
        "line": 37,
        "fullcodeline": "if (IS_ERR(rt))"
    },
    {
        "line": 40,
        "fullcodeline": "if (rt->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (inet->inet_saddr == 0)"
    },
    {
        "line": 66,
        "fullcodeline": "if (err != 0)"
    },
    {
        "line": 71,
        "fullcodeline": "if (IS_ERR(rt)) {"
    },
    {
        "line": 82,
        "fullcodeline": "inet->inet_id = dp->dccps_iss ^ jiffies;"
    },
    {
        "line": 86,
        "fullcodeline": "if (err != 0)"
    },
    {
        "line": 24,
        "fullcodeline": "sock_owned_by_user(sk));"
    },
    {
        "line": 25,
        "fullcodeline": "if (inet_opt != NULL && inet_opt->opt.srr) {"
    },
    {
        "line": 28,
        "fullcodeline": "nexthop = inet_opt->opt.faddr;"
    },
    {
        "line": 34,
        "fullcodeline": "RT_CONN_FLAGS(sk), sk->sk_bound_dev_if,"
    },
    {
        "line": 45,
        "fullcodeline": "if (inet_opt == NULL || !inet_opt->opt.srr)"
    },
    {
        "line": 46,
        "fullcodeline": "daddr = rt->rt_dst;"
    },
    {
        "line": 49,
        "fullcodeline": "inet->inet_saddr = rt->rt_src;"
    },
    {
        "line": 55,
        "fullcodeline": "inet_csk(sk)->icsk_ext_hdr_len = 0;"
    },
    {
        "line": 72,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 19,
        "fullcodeline": "return -EAFNOSUPPORT;"
    },
    {
        "line": 26,
        "fullcodeline": "if (daddr == 0)"
    },
    {
        "line": 38,
        "fullcodeline": "return PTR_ERR(rt);"
    },
    {
        "line": 42,
        "fullcodeline": "return -ENETUNREACH;"
    },
    {
        "line": 57,
        "fullcodeline": "inet_csk(sk)->icsk_ext_hdr_len = inet_opt->opt.optlen;"
    },
    {
        "line": 27,
        "fullcodeline": "return -EINVAL;"
    }
]