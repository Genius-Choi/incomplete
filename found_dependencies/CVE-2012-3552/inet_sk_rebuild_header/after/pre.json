[
    {
        "line": 3,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 4,
        "fullcodeline": "struct rtable *rt = (struct rtable *)__sk_dst_check(sk, 0);"
    },
    {
        "line": 15,
        "fullcodeline": "inet_opt = rcu_dereference(inet->inet_opt);"
    },
    {
        "line": 16,
        "fullcodeline": "daddr = inet->inet_daddr;"
    },
    {
        "line": 20,
        "fullcodeline": "rt = ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,"
    },
    {
        "line": 18,
        "fullcodeline": "daddr = inet_opt->opt.faddr;"
    },
    {
        "line": 22,
        "fullcodeline": "sk->sk_protocol, RT_CONN_FLAGS(sk),"
    },
    {
        "line": 24,
        "fullcodeline": "if (!IS_ERR(rt)) {"
    },
    {
        "line": 25,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "err = PTR_ERR(rt);"
    },
    {
        "line": 31,
        "fullcodeline": "sk->sk_route_caps = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!sysctl_ip_dynaddr ||"
    },
    {
        "line": 39,
        "fullcodeline": "(err = inet_sk_reselect_saddr(sk)) != 0)"
    },
    {
        "line": 38,
        "fullcodeline": "(sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||"
    },
    {
        "line": 40,
        "fullcodeline": "sk->sk_err_soft = -err;"
    },
    {
        "line": 37,
        "fullcodeline": "sk->sk_state != TCP_SYN_SENT ||"
    }
]