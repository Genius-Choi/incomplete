[
    {
        "line": 4,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 11,
        "fullcodeline": "opt = ipc->opt;"
    },
    {
        "line": 23,
        "fullcodeline": "rt = *rtp;"
    },
    {
        "line": 20,
        "fullcodeline": "cork->flags |= IPCORK_OPT;"
    },
    {
        "line": 24,
        "fullcodeline": "if (unlikely(!rt))"
    },
    {
        "line": 30,
        "fullcodeline": "cork->fragsize = inet->pmtudisc == IP_PMTUDISC_PROBE ?"
    },
    {
        "line": 31,
        "fullcodeline": "rt->dst.dev->mtu : dst_mtu(rt->dst.path);"
    },
    {
        "line": 13,
        "fullcodeline": "if (cork->opt == NULL) {"
    },
    {
        "line": 25,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 14,
        "fullcodeline": "cork->opt = kmalloc(sizeof(struct ip_options) + 40,"
    },
    {
        "line": 16,
        "fullcodeline": "if (unlikely(cork->opt == NULL))"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOBUFS;"
    }
]