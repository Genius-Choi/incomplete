[
    {
        "line": 4,
        "fullcodeline": "int strict = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int advertise_refs = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int stateless_rpc = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int timeout = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "struct option options[] = {"
    },
    {
        "line": 21,
        "fullcodeline": "packet_trace_identity(\"upload-pack\");"
    },
    {
        "line": 22,
        "fullcodeline": "read_replace_refs = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "xsetenv(\"GIT_NO_LAZY_FETCH\", \"1\", 0);"
    },
    {
        "line": 26,
        "fullcodeline": "argc = parse_options(argc, argv, prefix, options, upload_pack_usage, 0);"
    },
    {
        "line": 31,
        "fullcodeline": "setup_path();"
    },
    {
        "line": 33,
        "fullcodeline": "dir = argv[0];"
    },
    {
        "line": 28,
        "fullcodeline": "if (argc != 1)"
    },
    {
        "line": 35,
        "fullcodeline": "if (!enter_repo(dir, strict))"
    },
    {
        "line": 38,
        "fullcodeline": "switch (determine_protocol_version_server()) {"
    },
    {
        "line": 9,
        "fullcodeline": "OPT_BOOL(0, \"stateless-rpc\", &stateless_rpc,"
    },
    {
        "line": 11,
        "fullcodeline": "OPT_HIDDEN_BOOL(0, \"http-backend-info-refs\", &advertise_refs,"
    },
    {
        "line": 13,
        "fullcodeline": "OPT_ALIAS(0, \"advertise-refs\", \"http-backend-info-refs\"),"
    },
    {
        "line": 14,
        "fullcodeline": "OPT_BOOL(0, \"strict\", &strict,"
    },
    {
        "line": 16,
        "fullcodeline": "OPT_INTEGER(0, \"timeout\", &timeout,"
    },
    {
        "line": 29,
        "fullcodeline": "usage_with_options(upload_pack_usage, options);"
    },
    {
        "line": 36,
        "fullcodeline": "die(\"'%s' does not appear to be a git repository\", dir);"
    },
    {
        "line": 55,
        "fullcodeline": "upload_pack(advertise_refs, stateless_rpc, timeout);"
    },
    {
        "line": 58,
        "fullcodeline": "BUG(\"unknown protocol version\");"
    },
    {
        "line": 10,
        "fullcodeline": "N_(\"quit after a single request/response exchange\")),"
    },
    {
        "line": 12,
        "fullcodeline": "N_(\"serve up the info/refs for git-http-backend\")),"
    },
    {
        "line": 15,
        "fullcodeline": "N_(\"do not try <directory>/.git/ if <directory> is no Git directory\")),"
    },
    {
        "line": 17,
        "fullcodeline": "N_(\"interrupt transfer after <n> seconds of inactivity\")),"
    },
    {
        "line": 50,
        "fullcodeline": "if (advertise_refs || !stateless_rpc)"
    },
    {
        "line": 41,
        "fullcodeline": "protocol_v2_advertise_capabilities();"
    },
    {
        "line": 51,
        "fullcodeline": "packet_write_fmt(1, \"version 1\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "protocol_v2_serve_loop(stateless_rpc);"
    }
]