[
    {
        "line": 14,
        "fullcodeline": "u = PyBytes_FromStringAndSize((char *)NULL, len * 6);"
    },
    {
        "line": 17,
        "fullcodeline": "p = buf = PyBytes_AsString(u);"
    },
    {
        "line": 18,
        "fullcodeline": "end = s + len;"
    },
    {
        "line": 52,
        "fullcodeline": "len = p - buf;"
    },
    {
        "line": 53,
        "fullcodeline": "s = buf;"
    },
    {
        "line": 10,
        "fullcodeline": "if (len > SIZE_MAX / 6)"
    },
    {
        "line": 15,
        "fullcodeline": "if (u == NULL)"
    },
    {
        "line": 19,
        "fullcodeline": "while (s < end) {"
    },
    {
        "line": 55,
        "fullcodeline": "return PyUnicode_DecodeUnicodeEscape(s, len, NULL);"
    },
    {
        "line": 20,
        "fullcodeline": "if (*s == '\\\\') {"
    },
    {
        "line": 27,
        "fullcodeline": "if (*s & 0x80) { /* XXX inefficient */"
    },
    {
        "line": 32,
        "fullcodeline": "w = decode_utf8(c, &s, end);"
    },
    {
        "line": 37,
        "fullcodeline": "kind = PyUnicode_KIND(w);"
    },
    {
        "line": 38,
        "fullcodeline": "data = PyUnicode_DATA(w);"
    },
    {
        "line": 39,
        "fullcodeline": "len = PyUnicode_GET_LENGTH(w);"
    },
    {
        "line": 22,
        "fullcodeline": "if (*s & 0x80) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (w == NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "assert(p - buf <= Py_SIZE(u));"
    },
    {
        "line": 21,
        "fullcodeline": "*p++ = *s++;"
    },
    {
        "line": 23,
        "fullcodeline": "strcpy(p, \"u005c\");"
    },
    {
        "line": 24,
        "fullcodeline": "p += 5;"
    },
    {
        "line": 41,
        "fullcodeline": "Py_UCS4 chr = PyUnicode_READ(kind, data, i);"
    },
    {
        "line": 42,
        "fullcodeline": "sprintf(p, \"\\\\U%08x\", chr);"
    },
    {
        "line": 43,
        "fullcodeline": "p += 10;"
    },
    {
        "line": 49,
        "fullcodeline": "*p++ = *s++;"
    }
]