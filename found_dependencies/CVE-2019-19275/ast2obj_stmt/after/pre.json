[
    {
        "line": 3,
        "fullcodeline": "stmt_ty o = (stmt_ty)_o;"
    },
    {
        "line": 4,
        "fullcodeline": "PyObject *result = NULL, *value = NULL;"
    },
    {
        "line": 442,
        "fullcodeline": "value = ast2obj_int(o->lineno);"
    },
    {
        "line": 447,
        "fullcodeline": "value = ast2obj_int(o->col_offset);"
    },
    {
        "line": 451,
        "fullcodeline": "Py_DECREF(value);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!o) {"
    },
    {
        "line": 443,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 444,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_lineno, value) < 0)"
    },
    {
        "line": 448,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 449,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_col_offset, value) < 0)"
    },
    {
        "line": 11,
        "fullcodeline": "result = PyType_GenericNew(FunctionDef_type, NULL, NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "value = ast2obj_identifier(o->v.FunctionDef.name);"
    },
    {
        "line": 18,
        "fullcodeline": "value = ast2obj_arguments(o->v.FunctionDef.args);"
    },
    {
        "line": 23,
        "fullcodeline": "value = ast2obj_list(o->v.FunctionDef.body, ast2obj_stmt);"
    },
    {
        "line": 28,
        "fullcodeline": "value = ast2obj_list(o->v.FunctionDef.decorator_list, ast2obj_expr);"
    },
    {
        "line": 33,
        "fullcodeline": "value = ast2obj_expr(o->v.FunctionDef.returns);"
    },
    {
        "line": 38,
        "fullcodeline": "value = ast2obj_string(o->v.FunctionDef.type_comment);"
    },
    {
        "line": 45,
        "fullcodeline": "result = PyType_GenericNew(AsyncFunctionDef_type, NULL, NULL);"
    },
    {
        "line": 47,
        "fullcodeline": "value = ast2obj_identifier(o->v.AsyncFunctionDef.name);"
    },
    {
        "line": 52,
        "fullcodeline": "value = ast2obj_arguments(o->v.AsyncFunctionDef.args);"
    },
    {
        "line": 57,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncFunctionDef.body, ast2obj_stmt);"
    },
    {
        "line": 62,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncFunctionDef.decorator_list,"
    },
    {
        "line": 68,
        "fullcodeline": "value = ast2obj_expr(o->v.AsyncFunctionDef.returns);"
    },
    {
        "line": 73,
        "fullcodeline": "value = ast2obj_string(o->v.AsyncFunctionDef.type_comment);"
    },
    {
        "line": 80,
        "fullcodeline": "result = PyType_GenericNew(ClassDef_type, NULL, NULL);"
    },
    {
        "line": 82,
        "fullcodeline": "value = ast2obj_identifier(o->v.ClassDef.name);"
    },
    {
        "line": 87,
        "fullcodeline": "value = ast2obj_list(o->v.ClassDef.bases, ast2obj_expr);"
    },
    {
        "line": 92,
        "fullcodeline": "value = ast2obj_list(o->v.ClassDef.keywords, ast2obj_keyword);"
    },
    {
        "line": 97,
        "fullcodeline": "value = ast2obj_list(o->v.ClassDef.body, ast2obj_stmt);"
    },
    {
        "line": 102,
        "fullcodeline": "value = ast2obj_list(o->v.ClassDef.decorator_list, ast2obj_expr);"
    },
    {
        "line": 109,
        "fullcodeline": "result = PyType_GenericNew(Return_type, NULL, NULL);"
    },
    {
        "line": 111,
        "fullcodeline": "value = ast2obj_expr(o->v.Return.value);"
    },
    {
        "line": 118,
        "fullcodeline": "result = PyType_GenericNew(Delete_type, NULL, NULL);"
    },
    {
        "line": 120,
        "fullcodeline": "value = ast2obj_list(o->v.Delete.targets, ast2obj_expr);"
    },
    {
        "line": 127,
        "fullcodeline": "result = PyType_GenericNew(Assign_type, NULL, NULL);"
    },
    {
        "line": 129,
        "fullcodeline": "value = ast2obj_list(o->v.Assign.targets, ast2obj_expr);"
    },
    {
        "line": 134,
        "fullcodeline": "value = ast2obj_expr(o->v.Assign.value);"
    },
    {
        "line": 139,
        "fullcodeline": "value = ast2obj_string(o->v.Assign.type_comment);"
    },
    {
        "line": 146,
        "fullcodeline": "result = PyType_GenericNew(AugAssign_type, NULL, NULL);"
    },
    {
        "line": 148,
        "fullcodeline": "value = ast2obj_expr(o->v.AugAssign.target);"
    },
    {
        "line": 153,
        "fullcodeline": "value = ast2obj_operator(o->v.AugAssign.op);"
    },
    {
        "line": 158,
        "fullcodeline": "value = ast2obj_expr(o->v.AugAssign.value);"
    },
    {
        "line": 165,
        "fullcodeline": "result = PyType_GenericNew(AnnAssign_type, NULL, NULL);"
    },
    {
        "line": 167,
        "fullcodeline": "value = ast2obj_expr(o->v.AnnAssign.target);"
    },
    {
        "line": 172,
        "fullcodeline": "value = ast2obj_expr(o->v.AnnAssign.annotation);"
    },
    {
        "line": 177,
        "fullcodeline": "value = ast2obj_expr(o->v.AnnAssign.value);"
    },
    {
        "line": 182,
        "fullcodeline": "value = ast2obj_int(o->v.AnnAssign.simple);"
    },
    {
        "line": 189,
        "fullcodeline": "result = PyType_GenericNew(For_type, NULL, NULL);"
    },
    {
        "line": 191,
        "fullcodeline": "value = ast2obj_expr(o->v.For.target);"
    },
    {
        "line": 196,
        "fullcodeline": "value = ast2obj_expr(o->v.For.iter);"
    },
    {
        "line": 201,
        "fullcodeline": "value = ast2obj_list(o->v.For.body, ast2obj_stmt);"
    },
    {
        "line": 206,
        "fullcodeline": "value = ast2obj_list(o->v.For.orelse, ast2obj_stmt);"
    },
    {
        "line": 211,
        "fullcodeline": "value = ast2obj_string(o->v.For.type_comment);"
    },
    {
        "line": 218,
        "fullcodeline": "result = PyType_GenericNew(AsyncFor_type, NULL, NULL);"
    },
    {
        "line": 220,
        "fullcodeline": "value = ast2obj_expr(o->v.AsyncFor.target);"
    },
    {
        "line": 225,
        "fullcodeline": "value = ast2obj_expr(o->v.AsyncFor.iter);"
    },
    {
        "line": 230,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncFor.body, ast2obj_stmt);"
    },
    {
        "line": 235,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncFor.orelse, ast2obj_stmt);"
    },
    {
        "line": 240,
        "fullcodeline": "value = ast2obj_string(o->v.AsyncFor.type_comment);"
    },
    {
        "line": 247,
        "fullcodeline": "result = PyType_GenericNew(While_type, NULL, NULL);"
    },
    {
        "line": 249,
        "fullcodeline": "value = ast2obj_expr(o->v.While.test);"
    },
    {
        "line": 254,
        "fullcodeline": "value = ast2obj_list(o->v.While.body, ast2obj_stmt);"
    },
    {
        "line": 259,
        "fullcodeline": "value = ast2obj_list(o->v.While.orelse, ast2obj_stmt);"
    },
    {
        "line": 266,
        "fullcodeline": "result = PyType_GenericNew(If_type, NULL, NULL);"
    },
    {
        "line": 268,
        "fullcodeline": "value = ast2obj_expr(o->v.If.test);"
    },
    {
        "line": 273,
        "fullcodeline": "value = ast2obj_list(o->v.If.body, ast2obj_stmt);"
    },
    {
        "line": 278,
        "fullcodeline": "value = ast2obj_list(o->v.If.orelse, ast2obj_stmt);"
    },
    {
        "line": 285,
        "fullcodeline": "result = PyType_GenericNew(With_type, NULL, NULL);"
    },
    {
        "line": 287,
        "fullcodeline": "value = ast2obj_list(o->v.With.items, ast2obj_withitem);"
    },
    {
        "line": 292,
        "fullcodeline": "value = ast2obj_list(o->v.With.body, ast2obj_stmt);"
    },
    {
        "line": 297,
        "fullcodeline": "value = ast2obj_string(o->v.With.type_comment);"
    },
    {
        "line": 304,
        "fullcodeline": "result = PyType_GenericNew(AsyncWith_type, NULL, NULL);"
    },
    {
        "line": 306,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncWith.items, ast2obj_withitem);"
    },
    {
        "line": 311,
        "fullcodeline": "value = ast2obj_list(o->v.AsyncWith.body, ast2obj_stmt);"
    },
    {
        "line": 316,
        "fullcodeline": "value = ast2obj_string(o->v.AsyncWith.type_comment);"
    },
    {
        "line": 323,
        "fullcodeline": "result = PyType_GenericNew(Raise_type, NULL, NULL);"
    },
    {
        "line": 325,
        "fullcodeline": "value = ast2obj_expr(o->v.Raise.exc);"
    },
    {
        "line": 330,
        "fullcodeline": "value = ast2obj_expr(o->v.Raise.cause);"
    },
    {
        "line": 337,
        "fullcodeline": "result = PyType_GenericNew(Try_type, NULL, NULL);"
    },
    {
        "line": 339,
        "fullcodeline": "value = ast2obj_list(o->v.Try.body, ast2obj_stmt);"
    },
    {
        "line": 344,
        "fullcodeline": "value = ast2obj_list(o->v.Try.handlers, ast2obj_excepthandler);"
    },
    {
        "line": 349,
        "fullcodeline": "value = ast2obj_list(o->v.Try.orelse, ast2obj_stmt);"
    },
    {
        "line": 354,
        "fullcodeline": "value = ast2obj_list(o->v.Try.finalbody, ast2obj_stmt);"
    },
    {
        "line": 361,
        "fullcodeline": "result = PyType_GenericNew(Assert_type, NULL, NULL);"
    },
    {
        "line": 363,
        "fullcodeline": "value = ast2obj_expr(o->v.Assert.test);"
    },
    {
        "line": 368,
        "fullcodeline": "value = ast2obj_expr(o->v.Assert.msg);"
    },
    {
        "line": 375,
        "fullcodeline": "result = PyType_GenericNew(Import_type, NULL, NULL);"
    },
    {
        "line": 377,
        "fullcodeline": "value = ast2obj_list(o->v.Import.names, ast2obj_alias);"
    },
    {
        "line": 384,
        "fullcodeline": "result = PyType_GenericNew(ImportFrom_type, NULL, NULL);"
    },
    {
        "line": 386,
        "fullcodeline": "value = ast2obj_identifier(o->v.ImportFrom.module);"
    },
    {
        "line": 391,
        "fullcodeline": "value = ast2obj_list(o->v.ImportFrom.names, ast2obj_alias);"
    },
    {
        "line": 396,
        "fullcodeline": "value = ast2obj_int(o->v.ImportFrom.level);"
    },
    {
        "line": 403,
        "fullcodeline": "result = PyType_GenericNew(Global_type, NULL, NULL);"
    },
    {
        "line": 405,
        "fullcodeline": "value = ast2obj_list(o->v.Global.names, ast2obj_identifier);"
    },
    {
        "line": 412,
        "fullcodeline": "result = PyType_GenericNew(Nonlocal_type, NULL, NULL);"
    },
    {
        "line": 414,
        "fullcodeline": "value = ast2obj_list(o->v.Nonlocal.names, ast2obj_identifier);"
    },
    {
        "line": 421,
        "fullcodeline": "result = PyType_GenericNew(Expr_type, NULL, NULL);"
    },
    {
        "line": 423,
        "fullcodeline": "value = ast2obj_expr(o->v.Expr.value);"
    },
    {
        "line": 430,
        "fullcodeline": "result = PyType_GenericNew(Pass_type, NULL, NULL);"
    },
    {
        "line": 434,
        "fullcodeline": "result = PyType_GenericNew(Break_type, NULL, NULL);"
    },
    {
        "line": 438,
        "fullcodeline": "result = PyType_GenericNew(Continue_type, NULL, NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 14,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 15,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_name, value) == -1)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 20,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_args, value) == -1)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 25,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 29,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 30,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_decorator_list, value) == -1)"
    },
    {
        "line": 34,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 35,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_returns, value) == -1)"
    },
    {
        "line": 39,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 40,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 46,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 48,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 49,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_name, value) == -1)"
    },
    {
        "line": 53,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 54,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_args, value) == -1)"
    },
    {
        "line": 58,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 59,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 64,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 65,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_decorator_list, value) == -1)"
    },
    {
        "line": 69,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 70,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_returns, value) == -1)"
    },
    {
        "line": 74,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 75,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 81,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 83,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 84,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_name, value) == -1)"
    },
    {
        "line": 88,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 89,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_bases, value) == -1)"
    },
    {
        "line": 93,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 94,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_keywords, value) == -1)"
    },
    {
        "line": 98,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 99,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 103,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 104,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_decorator_list, value) == -1)"
    },
    {
        "line": 110,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 112,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 113,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_value, value) == -1)"
    },
    {
        "line": 119,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 121,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 122,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_targets, value) == -1)"
    },
    {
        "line": 128,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 130,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 131,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_targets, value) == -1)"
    },
    {
        "line": 135,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 136,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_value, value) == -1)"
    },
    {
        "line": 140,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 141,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 147,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 149,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 150,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_target, value) == -1)"
    },
    {
        "line": 154,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 155,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_op, value) == -1)"
    },
    {
        "line": 159,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 160,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_value, value) == -1)"
    },
    {
        "line": 166,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 168,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 169,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_target, value) == -1)"
    },
    {
        "line": 173,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 174,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_annotation, value) == -1)"
    },
    {
        "line": 178,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 179,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_value, value) == -1)"
    },
    {
        "line": 183,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 184,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_simple, value) == -1)"
    },
    {
        "line": 190,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 192,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 193,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_target, value) == -1)"
    },
    {
        "line": 197,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 198,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_iter, value) == -1)"
    },
    {
        "line": 202,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 203,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 207,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 208,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_orelse, value) == -1)"
    },
    {
        "line": 212,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 213,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 219,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 221,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 222,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_target, value) == -1)"
    },
    {
        "line": 226,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 227,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_iter, value) == -1)"
    },
    {
        "line": 231,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 232,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 236,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 237,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_orelse, value) == -1)"
    },
    {
        "line": 241,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 242,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 248,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 250,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 251,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_test, value) == -1)"
    },
    {
        "line": 255,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 256,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 260,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 261,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_orelse, value) == -1)"
    },
    {
        "line": 267,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 269,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 270,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_test, value) == -1)"
    },
    {
        "line": 274,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 275,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 279,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 280,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_orelse, value) == -1)"
    },
    {
        "line": 286,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 288,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 289,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_items, value) == -1)"
    },
    {
        "line": 293,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 294,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 298,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 299,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 305,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 307,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 308,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_items, value) == -1)"
    },
    {
        "line": 312,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 313,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 317,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 318,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_type_comment, value) == -1)"
    },
    {
        "line": 324,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 326,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 327,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_exc, value) == -1)"
    },
    {
        "line": 331,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 332,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_cause, value) == -1)"
    },
    {
        "line": 338,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 340,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 341,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"
    },
    {
        "line": 345,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 346,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_handlers, value) == -1)"
    },
    {
        "line": 350,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 351,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_orelse, value) == -1)"
    },
    {
        "line": 355,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 356,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_finalbody, value) == -1)"
    },
    {
        "line": 362,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 364,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 365,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_test, value) == -1)"
    },
    {
        "line": 369,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 370,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_msg, value) == -1)"
    },
    {
        "line": 376,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 378,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 379,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_names, value) == -1)"
    },
    {
        "line": 385,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 387,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 388,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_module, value) == -1)"
    },
    {
        "line": 392,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 393,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_names, value) == -1)"
    },
    {
        "line": 397,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 398,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_level, value) == -1)"
    },
    {
        "line": 404,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 406,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 407,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_names, value) == -1)"
    },
    {
        "line": 413,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 415,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 416,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_names, value) == -1)"
    },
    {
        "line": 422,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 424,
        "fullcodeline": "if (!value) goto failed;"
    },
    {
        "line": 425,
        "fullcodeline": "if (_PyObject_SetAttrId(result, &PyId_value, value) == -1)"
    },
    {
        "line": 431,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 435,
        "fullcodeline": "if (!result) goto failed;"
    },
    {
        "line": 439,
        "fullcodeline": "if (!result) goto failed;"
    }
]