[
    {
        "line": 6,
        "fullcodeline": "int exec_input = start == file_input;"
    },
    {
        "line": 21,
        "fullcodeline": "Py_INCREF(err_ret->filename);"
    },
    {
        "line": 22,
        "fullcodeline": "tok->filename = err_ret->filename;"
    },
    {
        "line": 8,
        "fullcodeline": "if (initerr(err_ret, filename) < 0)"
    },
    {
        "line": 11,
        "fullcodeline": "if (*flags & PyPARSE_IGNORE_COOKIE)"
    },
    {
        "line": 15,
        "fullcodeline": "if (tok == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "return parsetok(tok, g, start, err_ret, flags);"
    },
    {
        "line": 12,
        "fullcodeline": "tok = PyTokenizer_FromUTF8(s, exec_input);"
    },
    {
        "line": 14,
        "fullcodeline": "tok = PyTokenizer_FromString(s, exec_input);"
    },
    {
        "line": 16,
        "fullcodeline": "err_ret->error = PyErr_Occurred() ? E_DECODE : E_NOMEM;"
    }
]