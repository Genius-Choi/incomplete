[
    {
        "line": 3,
        "fullcodeline": "PyObject* tmp = NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "*out = arg(arg, annotation, type_comment, lineno, col_offset, arena);"
    },
    {
        "line": 66,
        "fullcodeline": "Py_XDECREF(tmp);"
    },
    {
        "line": 10,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_arg)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (exists_not_none(obj, &PyId_annotation)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_lineno)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_col_offset)) {"
    },
    {
        "line": 12,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_arg);"
    },
    {
        "line": 14,
        "fullcodeline": "res = obj2ast_identifier(tmp, &arg, arena);"
    },
    {
        "line": 16,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 23,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_annotation);"
    },
    {
        "line": 25,
        "fullcodeline": "res = obj2ast_expr(tmp, &annotation, arena);"
    },
    {
        "line": 27,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 33,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 35,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 37,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 43,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_lineno);"
    },
    {
        "line": 45,
        "fullcodeline": "res = obj2ast_int(tmp, &lineno, arena);"
    },
    {
        "line": 47,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 54,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"
    },
    {
        "line": 56,
        "fullcodeline": "res = obj2ast_int(tmp, &col_offset, arena);"
    },
    {
        "line": 58,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 13,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 15,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 18,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"arg\\\" missing from arg\");"
    },
    {
        "line": 24,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 26,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 29,
        "fullcodeline": "annotation = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 36,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 39,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 44,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 46,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 49,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from arg\");"
    },
    {
        "line": 55,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 57,
        "fullcodeline": "if (res != 0) goto failed;"
    },
    {
        "line": 60,
        "fullcodeline": "PyErr_SetString(PyExc_TypeError, \"required field \\\"col_offset\\\" missing from arg\");"
    }
]