[
    {
        "line": 14,
        "fullcodeline": "REQ(n, import_stmt);"
    },
    {
        "line": 15,
        "fullcodeline": "lineno = LINENO(n);"
    },
    {
        "line": 16,
        "fullcodeline": "col_offset = n->n_col_offset;"
    },
    {
        "line": 17,
        "fullcodeline": "n = CHILD(n, 0);"
    },
    {
        "line": 111,
        "fullcodeline": "PyErr_Format(PyExc_SystemError,"
    },
    {
        "line": 18,
        "fullcodeline": "if (TYPE(n) == import_name) {"
    },
    {
        "line": 113,
        "fullcodeline": "STR(CHILD(n, 0)));"
    },
    {
        "line": 19,
        "fullcodeline": "n = CHILD(n, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "REQ(n, dotted_as_names);"
    },
    {
        "line": 21,
        "fullcodeline": "aliases = _Py_asdl_seq_new((NCH(n) + 1) / 2, c->c_arena);"
    },
    {
        "line": 22,
        "fullcodeline": "if (!aliases)"
    },
    {
        "line": 24,
        "fullcodeline": "for (i = 0; i < NCH(n); i += 2) {"
    },
    {
        "line": 31,
        "fullcodeline": "return Import(aliases, lineno, col_offset,"
    },
    {
        "line": 25,
        "fullcodeline": "alias_ty import_alias = alias_for_import_name(c, CHILD(n, i), 1);"
    },
    {
        "line": 28,
        "fullcodeline": "asdl_seq_SET(aliases, i / 2, import_alias);"
    },
    {
        "line": 34,
        "fullcodeline": "else if (TYPE(n) == import_from) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!import_alias)"
    },
    {
        "line": 36,
        "fullcodeline": "int idx, ndots = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "const node *n_copy = n;"
    },
    {
        "line": 38,
        "fullcodeline": "alias_ty mod = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "identifier modname = NULL;"
    },
    {
        "line": 59,
        "fullcodeline": "idx++; /* skip over the 'import' keyword */"
    },
    {
        "line": 86,
        "fullcodeline": "aliases = _Py_asdl_seq_new((n_children + 1) / 2, c->c_arena);"
    },
    {
        "line": 43,
        "fullcodeline": "for (idx = 1; idx < NCH(n); idx++) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (!aliases)"
    },
    {
        "line": 91,
        "fullcodeline": "if (TYPE(n) == STAR) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (mod != NULL)"
    },
    {
        "line": 107,
        "fullcodeline": "return ImportFrom(modname, aliases, ndots, lineno, col_offset,"
    },
    {
        "line": 57,
        "fullcodeline": "ndots++;"
    },
    {
        "line": 60,
        "fullcodeline": "switch (TYPE(CHILD(n, idx))) {"
    },
    {
        "line": 63,
        "fullcodeline": "n = CHILD(n, idx);"
    },
    {
        "line": 64,
        "fullcodeline": "n_children = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "n = CHILD(n, idx + 1);"
    },
    {
        "line": 69,
        "fullcodeline": "n_children = NCH(n);"
    },
    {
        "line": 73,
        "fullcodeline": "n = CHILD(n, idx);"
    },
    {
        "line": 74,
        "fullcodeline": "n_children = NCH(n);"
    },
    {
        "line": 92,
        "fullcodeline": "alias_ty import_alias = alias_for_import_name(c, n, 1);"
    },
    {
        "line": 95,
        "fullcodeline": "asdl_seq_SET(aliases, 0, import_alias);"
    },
    {
        "line": 106,
        "fullcodeline": "modname = mod->name;"
    },
    {
        "line": 44,
        "fullcodeline": "if (TYPE(CHILD(n, idx)) == dotted_name) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (!import_alias)"
    },
    {
        "line": 45,
        "fullcodeline": "mod = alias_for_import_name(c, CHILD(n, idx), 0);"
    },
    {
        "line": 48,
        "fullcodeline": "idx++;"
    },
    {
        "line": 75,
        "fullcodeline": "if (n_children % 2 == 0) {"
    },
    {
        "line": 98,
        "fullcodeline": "for (i = 0; i < NCH(n); i += 2) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!mod)"
    },
    {
        "line": 99,
        "fullcodeline": "alias_ty import_alias = alias_for_import_name(c, CHILD(n, i), 1);"
    },
    {
        "line": 102,
        "fullcodeline": "asdl_seq_SET(aliases, i / 2, import_alias);"
    },
    {
        "line": 50,
        "fullcodeline": "} else if (TYPE(CHILD(n, idx)) == ELLIPSIS) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (!import_alias)"
    },
    {
        "line": 52,
        "fullcodeline": "ndots += 3;"
    },
    {
        "line": 54,
        "fullcodeline": "} else if (TYPE(CHILD(n, idx)) != DOT) {"
    }
]