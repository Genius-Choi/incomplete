[
    {
        "line": 15,
        "fullcodeline": "REQ(n, flow_stmt);"
    },
    {
        "line": 16,
        "fullcodeline": "ch = CHILD(n, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "switch (TYPE(ch)) {"
    },
    {
        "line": 53,
        "fullcodeline": "PyErr_Format(PyExc_SystemError,"
    },
    {
        "line": 19,
        "fullcodeline": "return Break(LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 21,
        "fullcodeline": "return Continue(LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 23,
        "fullcodeline": "expr_ty exp = ast_for_expr(c, CHILD(ch, 0));"
    },
    {
        "line": 54,
        "fullcodeline": "\"unexpected flow_stmt: %d\", TYPE(ch));"
    },
    {
        "line": 24,
        "fullcodeline": "if (!exp)"
    },
    {
        "line": 26,
        "fullcodeline": "return Expr(exp, LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 29,
        "fullcodeline": "if (NCH(ch) == 1)"
    },
    {
        "line": 38,
        "fullcodeline": "if (NCH(ch) == 1)"
    },
    {
        "line": 30,
        "fullcodeline": "return Return(NULL, LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 32,
        "fullcodeline": "expr_ty expression = ast_for_testlist(c, CHILD(ch, 1));"
    },
    {
        "line": 39,
        "fullcodeline": "return Raise(NULL, NULL, LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 33,
        "fullcodeline": "if (!expression)"
    },
    {
        "line": 35,
        "fullcodeline": "return Return(expression, LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 40,
        "fullcodeline": "else if (NCH(ch) >= 2) {"
    },
    {
        "line": 41,
        "fullcodeline": "expr_ty cause = NULL;"
    },
    {
        "line": 42,
        "fullcodeline": "expr_ty expression = ast_for_expr(c, CHILD(ch, 1));"
    },
    {
        "line": 43,
        "fullcodeline": "if (!expression)"
    },
    {
        "line": 50,
        "fullcodeline": "return Raise(expression, cause, LINENO(n), n->n_col_offset, c->c_arena);"
    },
    {
        "line": 45,
        "fullcodeline": "if (NCH(ch) == 4) {"
    },
    {
        "line": 46,
        "fullcodeline": "cause = ast_for_expr(c, CHILD(ch, 3));"
    },
    {
        "line": 47,
        "fullcodeline": "if (!cause)"
    }
]