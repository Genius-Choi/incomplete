[
    {
        "line": 3,
        "fullcodeline": "const uint8_t *q = (const uint8_t *)p;"
    },
    {
        "line": 4,
        "fullcodeline": "char msgbuf[64];"
    },
    {
        "line": 17,
        "fullcodeline": "id = (char)q[-SST];"
    },
    {
        "line": 36,
        "fullcodeline": "nbytes = read_size_t(q - 2*SST);"
    },
    {
        "line": 37,
        "fullcodeline": "tail = q + nbytes;"
    },
    {
        "line": 11,
        "fullcodeline": "if (p == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (id != api) {"
    },
    {
        "line": 29,
        "fullcodeline": "for (i = SST-1; i >= 1; --i) {"
    },
    {
        "line": 38,
        "fullcodeline": "for (i = 0; i < SST; ++i) {"
    },
    {
        "line": 12,
        "fullcodeline": "msg = \"didn't expect a NULL pointer\";"
    },
    {
        "line": 19,
        "fullcodeline": "msg = msgbuf;"
    },
    {
        "line": 20,
        "fullcodeline": "snprintf(msg, sizeof(msgbuf), \"bad ID: Allocated using API '%c', verified using API '%c'\", id, api);"
    },
    {
        "line": 30,
        "fullcodeline": "if (*(q-i) != FORBIDDENBYTE) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (tail[i] != FORBIDDENBYTE) {"
    },
    {
        "line": 31,
        "fullcodeline": "msg = \"bad leading pad byte\";"
    },
    {
        "line": 40,
        "fullcodeline": "msg = \"bad trailing pad byte\";"
    }
]