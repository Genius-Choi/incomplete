[
    {
        "line": 6,
        "fullcodeline": "asdl_seq *stmts = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "asdl_seq *type_ignores = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "mod_ty res = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "asdl_seq *argtypes = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "c.c_arena = arena;"
    },
    {
        "line": 17,
        "fullcodeline": "c.c_filename = filename;"
    },
    {
        "line": 18,
        "fullcodeline": "c.c_normalize = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "c.c_feature_version = feature_version;"
    },
    {
        "line": 24,
        "fullcodeline": "k = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "if (TYPE(n) == encoding_decl)"
    },
    {
        "line": 25,
        "fullcodeline": "switch (TYPE(n)) {"
    },
    {
        "line": 22,
        "fullcodeline": "n = CHILD(n, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "stmts = _Ta3_asdl_seq_new(num_stmts(n), arena);"
    },
    {
        "line": 55,
        "fullcodeline": "ch = CHILD(n, NCH(n) - 1);"
    },
    {
        "line": 56,
        "fullcodeline": "REQ(ch, ENDMARKER);"
    },
    {
        "line": 57,
        "fullcodeline": "num = NCH(ch);"
    },
    {
        "line": 58,
        "fullcodeline": "type_ignores = _Ta3_asdl_seq_new(num, arena);"
    },
    {
        "line": 69,
        "fullcodeline": "res = Module(stmts, type_ignores, arena);"
    },
    {
        "line": 121,
        "fullcodeline": "n = CHILD(n, 0);"
    },
    {
        "line": 122,
        "fullcodeline": "REQ(n, func_type);"
    },
    {
        "line": 149,
        "fullcodeline": "ret = ast_for_expr(&c, CHILD(n, NCH(n) - 1));"
    },
    {
        "line": 152,
        "fullcodeline": "res = FunctionType(argtypes, ret, arena);"
    },
    {
        "line": 155,
        "fullcodeline": "PyErr_Format(PyExc_SystemError,"
    },
    {
        "line": 161,
        "fullcodeline": "Py_DECREF(c.c_normalize);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!stmts)"
    },
    {
        "line": 30,
        "fullcodeline": "for (i = 0; i < NCH(n) - 1; i++) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (!type_ignores)"
    },
    {
        "line": 62,
        "fullcodeline": "for (i = 0; i < num; i++) {"
    },
    {
        "line": 75,
        "fullcodeline": "testlist_ast = ast_for_testlist(&c, CHILD(n, 0));"
    },
    {
        "line": 78,
        "fullcodeline": "res = Expression(testlist_ast, arena);"
    },
    {
        "line": 82,
        "fullcodeline": "if (TYPE(CHILD(n, 0)) == NEWLINE) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (TYPE(CHILD(n, 1)) == typelist) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 156,
        "fullcodeline": "\"invalid node %d for Ta3AST_FromNode\", TYPE(n));"
    },
    {
        "line": 31,
        "fullcodeline": "ch = CHILD(n, i);"
    },
    {
        "line": 34,
        "fullcodeline": "REQ(ch, stmt);"
    },
    {
        "line": 35,
        "fullcodeline": "num = num_stmts(ch);"
    },
    {
        "line": 63,
        "fullcodeline": "type_ignore_ty ti = TypeIgnore(LINENO(CHILD(ch, i)), arena);"
    },
    {
        "line": 66,
        "fullcodeline": "asdl_seq_SET(type_ignores, i, ti);"
    },
    {
        "line": 76,
        "fullcodeline": "if (!testlist_ast)"
    },
    {
        "line": 83,
        "fullcodeline": "stmts = _Ta3_asdl_seq_new(1, arena);"
    },
    {
        "line": 86,
        "fullcodeline": "asdl_seq_SET(stmts, 0, Pass(n->n_lineno, n->n_col_offset,"
    },
    {
        "line": 90,
        "fullcodeline": "res = Interactive(stmts, arena);"
    },
    {
        "line": 125,
        "fullcodeline": "ch = CHILD(n, 1);"
    },
    {
        "line": 128,
        "fullcodeline": "num = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "argtypes = _Ta3_asdl_seq_new(num, arena);"
    },
    {
        "line": 136,
        "fullcodeline": "j = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "if (TYPE(ch) == NEWLINE)"
    },
    {
        "line": 36,
        "fullcodeline": "if (num == 1) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!ti)"
    },
    {
        "line": 84,
        "fullcodeline": "if (!stmts)"
    },
    {
        "line": 88,
        "fullcodeline": "if (!asdl_seq_GET(stmts, 0))"
    },
    {
        "line": 93,
        "fullcodeline": "n = CHILD(n, 0);"
    },
    {
        "line": 94,
        "fullcodeline": "num = num_stmts(n);"
    },
    {
        "line": 95,
        "fullcodeline": "stmts = _Ta3_asdl_seq_new(num, arena);"
    },
    {
        "line": 117,
        "fullcodeline": "res = Interactive(stmts, arena);"
    },
    {
        "line": 129,
        "fullcodeline": "for (i = 0; i < NCH(ch); i++) {"
    },
    {
        "line": 137,
        "fullcodeline": "for (i = 0; i < NCH(ch); i++) {"
    },
    {
        "line": 147,
        "fullcodeline": "argtypes = _Ta3_asdl_seq_new(0, arena);"
    },
    {
        "line": 37,
        "fullcodeline": "s = ast_for_stmt(&c, ch);"
    },
    {
        "line": 40,
        "fullcodeline": "asdl_seq_SET(stmts, k++, s);"
    },
    {
        "line": 96,
        "fullcodeline": "if (!stmts)"
    },
    {
        "line": 98,
        "fullcodeline": "if (num == 1) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 43,
        "fullcodeline": "ch = CHILD(ch, 0);"
    },
    {
        "line": 44,
        "fullcodeline": "REQ(ch, simple_stmt);"
    },
    {
        "line": 99,
        "fullcodeline": "s = ast_for_stmt(&c, n);"
    },
    {
        "line": 102,
        "fullcodeline": "asdl_seq_SET(stmts, 0, s);"
    },
    {
        "line": 130,
        "fullcodeline": "if (TYPE(CHILD(ch, i)) == test)"
    },
    {
        "line": 138,
        "fullcodeline": "if (TYPE(CHILD(ch, i)) == test) {"
    },
    {
        "line": 45,
        "fullcodeline": "for (j = 0; j < num; j++) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 106,
        "fullcodeline": "REQ(n, simple_stmt);"
    },
    {
        "line": 131,
        "fullcodeline": "num++;"
    },
    {
        "line": 139,
        "fullcodeline": "arg = ast_for_expr(&c, CHILD(ch, i));"
    },
    {
        "line": 142,
        "fullcodeline": "asdl_seq_SET(argtypes, j++, arg);"
    },
    {
        "line": 46,
        "fullcodeline": "s = ast_for_stmt(&c, CHILD(ch, j * 2));"
    },
    {
        "line": 49,
        "fullcodeline": "asdl_seq_SET(stmts, k++, s);"
    },
    {
        "line": 107,
        "fullcodeline": "for (i = 0; i < NCH(n); i += 2) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (!arg)"
    },
    {
        "line": 47,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 110,
        "fullcodeline": "s = ast_for_stmt(&c, CHILD(n, i));"
    },
    {
        "line": 113,
        "fullcodeline": "asdl_seq_SET(stmts, i / 2, s);"
    },
    {
        "line": 108,
        "fullcodeline": "if (TYPE(CHILD(n, i)) == NEWLINE)"
    },
    {
        "line": 111,
        "fullcodeline": "if (!s)"
    }
]