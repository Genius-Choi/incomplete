[
    {
        "line": 5,
        "fullcodeline": "PyObject *tmp = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)FunctionDef_type);"
    },
    {
        "line": 150,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)AsyncFunctionDef_type);"
    },
    {
        "line": 265,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)ClassDef_type);"
    },
    {
        "line": 404,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Return_type);"
    },
    {
        "line": 425,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Delete_type);"
    },
    {
        "line": 464,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Assign_type);"
    },
    {
        "line": 526,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)AugAssign_type);"
    },
    {
        "line": 572,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)AnnAssign_type);"
    },
    {
        "line": 630,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)For_type);"
    },
    {
        "line": 734,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)AsyncFor_type);"
    },
    {
        "line": 838,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)While_type);"
    },
    {
        "line": 918,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)If_type);"
    },
    {
        "line": 998,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)With_type);"
    },
    {
        "line": 1077,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)AsyncWith_type);"
    },
    {
        "line": 1156,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Raise_type);"
    },
    {
        "line": 1188,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Try_type);"
    },
    {
        "line": 1315,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Assert_type);"
    },
    {
        "line": 1348,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Import_type);"
    },
    {
        "line": 1387,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)ImportFrom_type);"
    },
    {
        "line": 1448,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Global_type);"
    },
    {
        "line": 1487,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Nonlocal_type);"
    },
    {
        "line": 1526,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Expr_type);"
    },
    {
        "line": 1548,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Pass_type);"
    },
    {
        "line": 1558,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Break_type);"
    },
    {
        "line": 1568,
        "fullcodeline": "isinstance = PyObject_IsInstance(obj, (PyObject*)Continue_type);"
    },
    {
        "line": 9,
        "fullcodeline": "if (obj == Py_None) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_lineno)) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_col_offset)) {"
    },
    {
        "line": 10,
        "fullcodeline": "*out = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_lineno);"
    },
    {
        "line": 17,
        "fullcodeline": "res = obj2ast_int(tmp, &lineno, arena);"
    },
    {
        "line": 26,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"
    },
    {
        "line": 28,
        "fullcodeline": "res = obj2ast_int(tmp, &col_offset, arena);"
    },
    {
        "line": 30,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 36,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 145,
        "fullcodeline": "*out = FunctionDef(name, args, body, decorator_list, returns,"
    },
    {
        "line": 151,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 260,
        "fullcodeline": "*out = AsyncFunctionDef(name, args, body, decorator_list, returns,"
    },
    {
        "line": 266,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 399,
        "fullcodeline": "*out = ClassDef(name, bases, keywords, body, decorator_list, lineno,"
    },
    {
        "line": 405,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 421,
        "fullcodeline": "*out = Return(value, lineno, col_offset, arena);"
    },
    {
        "line": 426,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 460,
        "fullcodeline": "*out = Delete(targets, lineno, col_offset, arena);"
    },
    {
        "line": 465,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 522,
        "fullcodeline": "*out = Assign(targets, value, type_comment, lineno, col_offset, arena);"
    },
    {
        "line": 527,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 568,
        "fullcodeline": "*out = AugAssign(target, op, value, lineno, col_offset, arena);"
    },
    {
        "line": 573,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 625,
        "fullcodeline": "*out = AnnAssign(target, annotation, value, simple, lineno, col_offset,"
    },
    {
        "line": 631,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 729,
        "fullcodeline": "*out = For(target, iter, body, orelse, type_comment, lineno,"
    },
    {
        "line": 735,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 833,
        "fullcodeline": "*out = AsyncFor(target, iter, body, orelse, type_comment, lineno,"
    },
    {
        "line": 839,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 914,
        "fullcodeline": "*out = While(test, body, orelse, lineno, col_offset, arena);"
    },
    {
        "line": 919,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 994,
        "fullcodeline": "*out = If(test, body, orelse, lineno, col_offset, arena);"
    },
    {
        "line": 999,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1073,
        "fullcodeline": "*out = With(items, body, type_comment, lineno, col_offset, arena);"
    },
    {
        "line": 1078,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1152,
        "fullcodeline": "*out = AsyncWith(items, body, type_comment, lineno, col_offset, arena);"
    },
    {
        "line": 1157,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1184,
        "fullcodeline": "*out = Raise(exc, cause, lineno, col_offset, arena);"
    },
    {
        "line": 1189,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1310,
        "fullcodeline": "*out = Try(body, handlers, orelse, finalbody, lineno, col_offset,"
    },
    {
        "line": 1316,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1344,
        "fullcodeline": "*out = Assert(test, msg, lineno, col_offset, arena);"
    },
    {
        "line": 1349,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1383,
        "fullcodeline": "*out = Import(names, lineno, col_offset, arena);"
    },
    {
        "line": 1388,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1444,
        "fullcodeline": "*out = ImportFrom(module, names, level, lineno, col_offset, arena);"
    },
    {
        "line": 1449,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1483,
        "fullcodeline": "*out = Global(names, lineno, col_offset, arena);"
    },
    {
        "line": 1488,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1522,
        "fullcodeline": "*out = Nonlocal(names, lineno, col_offset, arena);"
    },
    {
        "line": 1527,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1544,
        "fullcodeline": "*out = Expr(value, lineno, col_offset, arena);"
    },
    {
        "line": 1549,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1554,
        "fullcodeline": "*out = Pass(lineno, col_offset, arena);"
    },
    {
        "line": 1559,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1564,
        "fullcodeline": "*out = Break(lineno, col_offset, arena);"
    },
    {
        "line": 1569,
        "fullcodeline": "if (isinstance == -1) {"
    },
    {
        "line": 1574,
        "fullcodeline": "*out = Continue(lineno, col_offset, arena);"
    },
    {
        "line": 16,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 27,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 47,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_name)) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_args)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_decorator_list)) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (exists_not_none(obj, &PyId_returns)) {"
    },
    {
        "line": 135,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 162,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_name)) {"
    },
    {
        "line": 173,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_args)) {"
    },
    {
        "line": 184,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 212,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_decorator_list)) {"
    },
    {
        "line": 240,
        "fullcodeline": "if (exists_not_none(obj, &PyId_returns)) {"
    },
    {
        "line": 250,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 276,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_name)) {"
    },
    {
        "line": 287,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_bases)) {"
    },
    {
        "line": 315,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_keywords)) {"
    },
    {
        "line": 343,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 371,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_decorator_list)) {"
    },
    {
        "line": 411,
        "fullcodeline": "if (exists_not_none(obj, &PyId_value)) {"
    },
    {
        "line": 432,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_targets)) {"
    },
    {
        "line": 473,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_targets)) {"
    },
    {
        "line": 501,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 512,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 535,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_target)) {"
    },
    {
        "line": 546,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_op)) {"
    },
    {
        "line": 557,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 582,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_target)) {"
    },
    {
        "line": 593,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_annotation)) {"
    },
    {
        "line": 604,
        "fullcodeline": "if (exists_not_none(obj, &PyId_value)) {"
    },
    {
        "line": 614,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_simple)) {"
    },
    {
        "line": 641,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_target)) {"
    },
    {
        "line": 652,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_iter)) {"
    },
    {
        "line": 663,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 691,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 719,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 745,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_target)) {"
    },
    {
        "line": 756,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_iter)) {"
    },
    {
        "line": 767,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 795,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 823,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 847,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_test)) {"
    },
    {
        "line": 858,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 886,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 927,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_test)) {"
    },
    {
        "line": 938,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 966,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 1007,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_items)) {"
    },
    {
        "line": 1035,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 1063,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 1086,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_items)) {"
    },
    {
        "line": 1114,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 1142,
        "fullcodeline": "if (exists_not_none(obj, &PyId_type_comment)) {"
    },
    {
        "line": 1164,
        "fullcodeline": "if (exists_not_none(obj, &PyId_exc)) {"
    },
    {
        "line": 1174,
        "fullcodeline": "if (exists_not_none(obj, &PyId_cause)) {"
    },
    {
        "line": 1198,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_body)) {"
    },
    {
        "line": 1226,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_handlers)) {"
    },
    {
        "line": 1254,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_orelse)) {"
    },
    {
        "line": 1282,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_finalbody)) {"
    },
    {
        "line": 1323,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_test)) {"
    },
    {
        "line": 1334,
        "fullcodeline": "if (exists_not_none(obj, &PyId_msg)) {"
    },
    {
        "line": 1355,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_names)) {"
    },
    {
        "line": 1396,
        "fullcodeline": "if (exists_not_none(obj, &PyId_module)) {"
    },
    {
        "line": 1406,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_names)) {"
    },
    {
        "line": 1434,
        "fullcodeline": "if (exists_not_none(obj, &PyId_level)) {"
    },
    {
        "line": 1455,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_names)) {"
    },
    {
        "line": 1494,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_names)) {"
    },
    {
        "line": 1533,
        "fullcodeline": "if (_PyObject_HasAttrId(obj, &PyId_value)) {"
    },
    {
        "line": 49,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_name);"
    },
    {
        "line": 51,
        "fullcodeline": "res = obj2ast_identifier(tmp, &name, arena);"
    },
    {
        "line": 60,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_args);"
    },
    {
        "line": 62,
        "fullcodeline": "res = obj2ast_arguments(tmp, &args, arena);"
    },
    {
        "line": 73,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 79,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 80,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 101,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_decorator_list);"
    },
    {
        "line": 107,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 108,
        "fullcodeline": "decorator_list = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 120,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 127,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_returns);"
    },
    {
        "line": 129,
        "fullcodeline": "res = obj2ast_expr(tmp, &returns, arena);"
    },
    {
        "line": 131,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 137,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 139,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 141,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 164,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_name);"
    },
    {
        "line": 166,
        "fullcodeline": "res = obj2ast_identifier(tmp, &name, arena);"
    },
    {
        "line": 175,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_args);"
    },
    {
        "line": 177,
        "fullcodeline": "res = obj2ast_arguments(tmp, &args, arena);"
    },
    {
        "line": 188,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 194,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 195,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 216,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_decorator_list);"
    },
    {
        "line": 222,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 223,
        "fullcodeline": "decorator_list = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 235,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 242,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_returns);"
    },
    {
        "line": 244,
        "fullcodeline": "res = obj2ast_expr(tmp, &returns, arena);"
    },
    {
        "line": 246,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 252,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 254,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 256,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 278,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_name);"
    },
    {
        "line": 280,
        "fullcodeline": "res = obj2ast_identifier(tmp, &name, arena);"
    },
    {
        "line": 291,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_bases);"
    },
    {
        "line": 297,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 298,
        "fullcodeline": "bases = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 319,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_keywords);"
    },
    {
        "line": 325,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 326,
        "fullcodeline": "keywords = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 347,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 353,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 354,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 375,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_decorator_list);"
    },
    {
        "line": 381,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 382,
        "fullcodeline": "decorator_list = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 394,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 413,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 415,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 417,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 436,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_targets);"
    },
    {
        "line": 442,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 443,
        "fullcodeline": "targets = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 455,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 477,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_targets);"
    },
    {
        "line": 483,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 484,
        "fullcodeline": "targets = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 503,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 505,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 507,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 514,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 516,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 518,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 537,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_target);"
    },
    {
        "line": 539,
        "fullcodeline": "res = obj2ast_expr(tmp, &target, arena);"
    },
    {
        "line": 548,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_op);"
    },
    {
        "line": 550,
        "fullcodeline": "res = obj2ast_operator(tmp, &op, arena);"
    },
    {
        "line": 559,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 561,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 563,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 584,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_target);"
    },
    {
        "line": 586,
        "fullcodeline": "res = obj2ast_expr(tmp, &target, arena);"
    },
    {
        "line": 595,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_annotation);"
    },
    {
        "line": 597,
        "fullcodeline": "res = obj2ast_expr(tmp, &annotation, arena);"
    },
    {
        "line": 606,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 608,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 616,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_simple);"
    },
    {
        "line": 618,
        "fullcodeline": "res = obj2ast_int(tmp, &simple, arena);"
    },
    {
        "line": 620,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 643,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_target);"
    },
    {
        "line": 645,
        "fullcodeline": "res = obj2ast_expr(tmp, &target, arena);"
    },
    {
        "line": 654,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_iter);"
    },
    {
        "line": 656,
        "fullcodeline": "res = obj2ast_expr(tmp, &iter, arena);"
    },
    {
        "line": 667,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 673,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 674,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 695,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 701,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 702,
        "fullcodeline": "orelse = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 714,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 721,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 723,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 725,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 747,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_target);"
    },
    {
        "line": 749,
        "fullcodeline": "res = obj2ast_expr(tmp, &target, arena);"
    },
    {
        "line": 758,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_iter);"
    },
    {
        "line": 760,
        "fullcodeline": "res = obj2ast_expr(tmp, &iter, arena);"
    },
    {
        "line": 771,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 777,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 778,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 799,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 805,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 806,
        "fullcodeline": "orelse = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 818,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 825,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 827,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 829,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 849,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_test);"
    },
    {
        "line": 851,
        "fullcodeline": "res = obj2ast_expr(tmp, &test, arena);"
    },
    {
        "line": 862,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 868,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 869,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 890,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 896,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 897,
        "fullcodeline": "orelse = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 909,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 929,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_test);"
    },
    {
        "line": 931,
        "fullcodeline": "res = obj2ast_expr(tmp, &test, arena);"
    },
    {
        "line": 942,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 948,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 949,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 970,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 976,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 977,
        "fullcodeline": "orelse = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 989,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1011,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_items);"
    },
    {
        "line": 1017,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1018,
        "fullcodeline": "items = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1039,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 1045,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1046,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1058,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1065,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 1067,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 1069,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1090,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_items);"
    },
    {
        "line": 1096,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1097,
        "fullcodeline": "items = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1118,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 1124,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1125,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1137,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1144,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_type_comment);"
    },
    {
        "line": 1146,
        "fullcodeline": "res = obj2ast_string(tmp, &type_comment, arena);"
    },
    {
        "line": 1148,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1166,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_exc);"
    },
    {
        "line": 1168,
        "fullcodeline": "res = obj2ast_expr(tmp, &exc, arena);"
    },
    {
        "line": 1170,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1176,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_cause);"
    },
    {
        "line": 1178,
        "fullcodeline": "res = obj2ast_expr(tmp, &cause, arena);"
    },
    {
        "line": 1180,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1202,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_body);"
    },
    {
        "line": 1208,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1209,
        "fullcodeline": "body = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1230,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_handlers);"
    },
    {
        "line": 1236,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1237,
        "fullcodeline": "handlers = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1258,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_orelse);"
    },
    {
        "line": 1264,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1265,
        "fullcodeline": "orelse = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1286,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_finalbody);"
    },
    {
        "line": 1292,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1293,
        "fullcodeline": "finalbody = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1305,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1325,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_test);"
    },
    {
        "line": 1327,
        "fullcodeline": "res = obj2ast_expr(tmp, &test, arena);"
    },
    {
        "line": 1329,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1336,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_msg);"
    },
    {
        "line": 1338,
        "fullcodeline": "res = obj2ast_expr(tmp, &msg, arena);"
    },
    {
        "line": 1340,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1359,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_names);"
    },
    {
        "line": 1365,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1366,
        "fullcodeline": "names = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1378,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1398,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_module);"
    },
    {
        "line": 1400,
        "fullcodeline": "res = obj2ast_identifier(tmp, &module, arena);"
    },
    {
        "line": 1410,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_names);"
    },
    {
        "line": 1416,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1417,
        "fullcodeline": "names = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1429,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1436,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_level);"
    },
    {
        "line": 1438,
        "fullcodeline": "res = obj2ast_int(tmp, &level, arena);"
    },
    {
        "line": 1440,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1459,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_names);"
    },
    {
        "line": 1465,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1466,
        "fullcodeline": "names = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1478,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1498,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_names);"
    },
    {
        "line": 1504,
        "fullcodeline": "len = PyList_GET_SIZE(tmp);"
    },
    {
        "line": 1505,
        "fullcodeline": "names = _Ta3_asdl_seq_new(len, arena);"
    },
    {
        "line": 1517,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 1535,
        "fullcodeline": "tmp = _PyObject_GetAttrId(obj, &PyId_value);"
    },
    {
        "line": 1537,
        "fullcodeline": "res = obj2ast_expr(tmp, &value, arena);"
    },
    {
        "line": 1539,
        "fullcodeline": "Py_CLEAR(tmp);"
    },
    {
        "line": 50,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 61,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 74,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 81,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 82,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 109,
        "fullcodeline": "if (decorator_list == NULL) goto failed;"
    },
    {
        "line": 110,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 128,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 133,
        "fullcodeline": "returns = NULL;"
    },
    {
        "line": 138,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 143,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 165,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 176,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 189,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 196,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 197,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 217,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 224,
        "fullcodeline": "if (decorator_list == NULL) goto failed;"
    },
    {
        "line": 225,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 243,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 248,
        "fullcodeline": "returns = NULL;"
    },
    {
        "line": 253,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 258,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 279,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 292,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 299,
        "fullcodeline": "if (bases == NULL) goto failed;"
    },
    {
        "line": 300,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 320,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 327,
        "fullcodeline": "if (keywords == NULL) goto failed;"
    },
    {
        "line": 328,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 348,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 355,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 356,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 376,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 383,
        "fullcodeline": "if (decorator_list == NULL) goto failed;"
    },
    {
        "line": 384,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 414,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 419,
        "fullcodeline": "value = NULL;"
    },
    {
        "line": 437,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 444,
        "fullcodeline": "if (targets == NULL) goto failed;"
    },
    {
        "line": 445,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 478,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 485,
        "fullcodeline": "if (targets == NULL) goto failed;"
    },
    {
        "line": 486,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 504,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 515,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 520,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 538,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 549,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 560,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 585,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 596,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 607,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 612,
        "fullcodeline": "value = NULL;"
    },
    {
        "line": 617,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 644,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 655,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 668,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 675,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 676,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 696,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 703,
        "fullcodeline": "if (orelse == NULL) goto failed;"
    },
    {
        "line": 704,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 722,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 727,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 748,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 759,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 772,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 779,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 780,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 800,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 807,
        "fullcodeline": "if (orelse == NULL) goto failed;"
    },
    {
        "line": 808,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 826,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 831,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 850,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 863,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 870,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 871,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 891,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 898,
        "fullcodeline": "if (orelse == NULL) goto failed;"
    },
    {
        "line": 899,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 930,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 943,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 950,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 951,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 971,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 978,
        "fullcodeline": "if (orelse == NULL) goto failed;"
    },
    {
        "line": 979,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1012,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1019,
        "fullcodeline": "if (items == NULL) goto failed;"
    },
    {
        "line": 1020,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1040,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1047,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 1048,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1066,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1071,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 1091,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1098,
        "fullcodeline": "if (items == NULL) goto failed;"
    },
    {
        "line": 1099,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1119,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1126,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 1127,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1145,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1150,
        "fullcodeline": "type_comment = NULL;"
    },
    {
        "line": 1167,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1172,
        "fullcodeline": "exc = NULL;"
    },
    {
        "line": 1177,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1182,
        "fullcodeline": "cause = NULL;"
    },
    {
        "line": 1203,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1210,
        "fullcodeline": "if (body == NULL) goto failed;"
    },
    {
        "line": 1211,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1231,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1238,
        "fullcodeline": "if (handlers == NULL) goto failed;"
    },
    {
        "line": 1239,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1259,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1266,
        "fullcodeline": "if (orelse == NULL) goto failed;"
    },
    {
        "line": 1267,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1287,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1294,
        "fullcodeline": "if (finalbody == NULL) goto failed;"
    },
    {
        "line": 1295,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1326,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1337,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1342,
        "fullcodeline": "msg = NULL;"
    },
    {
        "line": 1360,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1367,
        "fullcodeline": "if (names == NULL) goto failed;"
    },
    {
        "line": 1368,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1399,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1404,
        "fullcodeline": "module = NULL;"
    },
    {
        "line": 1411,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1418,
        "fullcodeline": "if (names == NULL) goto failed;"
    },
    {
        "line": 1419,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1437,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1442,
        "fullcodeline": "level = 0;"
    },
    {
        "line": 1460,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1467,
        "fullcodeline": "if (names == NULL) goto failed;"
    },
    {
        "line": 1468,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1499,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 1506,
        "fullcodeline": "if (names == NULL) goto failed;"
    },
    {
        "line": 1507,
        "fullcodeline": "for (i = 0; i < len; i++) {"
    },
    {
        "line": 1536,
        "fullcodeline": "if (tmp == NULL) goto failed;"
    },
    {
        "line": 75,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 84,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 90,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 103,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 112,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 118,
        "fullcodeline": "asdl_seq_SET(decorator_list, i, value);"
    },
    {
        "line": 190,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 199,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 205,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 218,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 227,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 233,
        "fullcodeline": "asdl_seq_SET(decorator_list, i, value);"
    },
    {
        "line": 293,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 302,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 308,
        "fullcodeline": "asdl_seq_SET(bases, i, value);"
    },
    {
        "line": 321,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 330,
        "fullcodeline": "res = obj2ast_keyword(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 336,
        "fullcodeline": "asdl_seq_SET(keywords, i, value);"
    },
    {
        "line": 349,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 358,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 364,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 377,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 386,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 392,
        "fullcodeline": "asdl_seq_SET(decorator_list, i, value);"
    },
    {
        "line": 438,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 447,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 453,
        "fullcodeline": "asdl_seq_SET(targets, i, value);"
    },
    {
        "line": 479,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 488,
        "fullcodeline": "res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 494,
        "fullcodeline": "asdl_seq_SET(targets, i, value);"
    },
    {
        "line": 669,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 678,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 684,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 697,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 706,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 712,
        "fullcodeline": "asdl_seq_SET(orelse, i, value);"
    },
    {
        "line": 773,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 782,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 788,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 801,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 810,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 816,
        "fullcodeline": "asdl_seq_SET(orelse, i, value);"
    },
    {
        "line": 864,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 873,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 879,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 892,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 901,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 907,
        "fullcodeline": "asdl_seq_SET(orelse, i, value);"
    },
    {
        "line": 944,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 953,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 959,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 972,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 981,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 987,
        "fullcodeline": "asdl_seq_SET(orelse, i, value);"
    },
    {
        "line": 1013,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1022,
        "fullcodeline": "res = obj2ast_withitem(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1028,
        "fullcodeline": "asdl_seq_SET(items, i, value);"
    },
    {
        "line": 1041,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1050,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1056,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 1092,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1101,
        "fullcodeline": "res = obj2ast_withitem(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1107,
        "fullcodeline": "asdl_seq_SET(items, i, value);"
    },
    {
        "line": 1120,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1129,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1135,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 1204,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1213,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1219,
        "fullcodeline": "asdl_seq_SET(body, i, value);"
    },
    {
        "line": 1232,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1241,
        "fullcodeline": "res = obj2ast_excepthandler(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1247,
        "fullcodeline": "asdl_seq_SET(handlers, i, value);"
    },
    {
        "line": 1260,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1269,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1275,
        "fullcodeline": "asdl_seq_SET(orelse, i, value);"
    },
    {
        "line": 1288,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1297,
        "fullcodeline": "res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1303,
        "fullcodeline": "asdl_seq_SET(finalbody, i, value);"
    },
    {
        "line": 1361,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1370,
        "fullcodeline": "res = obj2ast_alias(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1376,
        "fullcodeline": "asdl_seq_SET(names, i, value);"
    },
    {
        "line": 1412,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1421,
        "fullcodeline": "res = obj2ast_alias(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1427,
        "fullcodeline": "asdl_seq_SET(names, i, value);"
    },
    {
        "line": 1461,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1470,
        "fullcodeline": "res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1476,
        "fullcodeline": "asdl_seq_SET(names, i, value);"
    },
    {
        "line": 1500,
        "fullcodeline": "if (!PyList_Check(tmp)) {"
    },
    {
        "line": 1509,
        "fullcodeline": "res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);"
    },
    {
        "line": 1515,
        "fullcodeline": "asdl_seq_SET(names, i, value);"
    },
    {
        "line": 86,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 229,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 304,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 332,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 388,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 449,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 490,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 680,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 708,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 784,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 812,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 875,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 903,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 955,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 983,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1024,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1052,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1103,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1131,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1215,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1243,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1271,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1299,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1372,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1423,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1472,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    },
    {
        "line": 1511,
        "fullcodeline": "if (len != PyList_GET_SIZE(tmp)) {"
    }
]