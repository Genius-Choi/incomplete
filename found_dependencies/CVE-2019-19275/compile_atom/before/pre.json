[
    {
        "line": 5,
        "fullcodeline": "REQ(n, ATOM);"
    },
    {
        "line": 6,
        "fullcodeline": "i = n->n_nchildren;"
    },
    {
        "line": 7,
        "fullcodeline": "(void)i; /* Don't warn about set but unused */"
    },
    {
        "line": 8,
        "fullcodeline": "REQN(i, 1);"
    },
    {
        "line": 9,
        "fullcodeline": "n = n->n_child;"
    },
    {
        "line": 10,
        "fullcodeline": "if (n->n_type == LPAR) {"
    },
    {
        "line": 11,
        "fullcodeline": "REQN(i, 3);"
    },
    {
        "line": 12,
        "fullcodeline": "n++;"
    },
    {
        "line": 13,
        "fullcodeline": "REQ(n, RHS);"
    },
    {
        "line": 14,
        "fullcodeline": "compile_rhs(ll, nf, n, pa, pb);"
    },
    {
        "line": 15,
        "fullcodeline": "n++;"
    },
    {
        "line": 16,
        "fullcodeline": "REQ(n, RPAR);"
    },
    {
        "line": 18,
        "fullcodeline": "else if (n->n_type == NAME || n->n_type == STRING) {"
    },
    {
        "line": 19,
        "fullcodeline": "*pa = addnfastate(nf);"
    },
    {
        "line": 20,
        "fullcodeline": "*pb = addnfastate(nf);"
    },
    {
        "line": 21,
        "fullcodeline": "addnfaarc(nf, *pa, *pb, addlabel(ll, n->n_type, n->n_str));"
    }
]