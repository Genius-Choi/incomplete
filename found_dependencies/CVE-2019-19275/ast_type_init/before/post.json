[
    {
        "line": 3,
        "fullcodeline": "_Py_IDENTIFIER(_fields);"
    },
    {
        "line": 4,
        "fullcodeline": "Py_ssize_t i, numfields = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int res = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "fields = _PyObject_GetAttrId((PyObject*)Py_TYPE(self), &PyId__fields);"
    },
    {
        "line": 15,
        "fullcodeline": "res = 0; /* if no error occurs, this stays 0 to the end */"
    },
    {
        "line": 48,
        "fullcodeline": "Py_XDECREF(fields);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!fields)"
    },
    {
        "line": 16,
        "fullcodeline": "if (PyTuple_GET_SIZE(args) > 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "PyErr_Clear();"
    },
    {
        "line": 11,
        "fullcodeline": "numfields = PySequence_Size(fields);"
    },
    {
        "line": 40,
        "fullcodeline": "i = 0;  /* needed by PyDict_Next */"
    },
    {
        "line": 12,
        "fullcodeline": "if (numfields == -1)"
    },
    {
        "line": 17,
        "fullcodeline": "if (numfields != PyTuple_GET_SIZE(args)) {"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = 0; i < PyTuple_GET_SIZE(args); i++) {"
    },
    {
        "line": 41,
        "fullcodeline": "while (PyDict_Next(kw, &i, &key, &value)) {"
    },
    {
        "line": 18,
        "fullcodeline": "PyErr_Format(PyExc_TypeError, \"%.400s constructor takes %s\""
    },
    {
        "line": 23,
        "fullcodeline": "res = -1;"
    },
    {
        "line": 28,
        "fullcodeline": "PyObject *name = PySequence_GetItem(fields, i);"
    },
    {
        "line": 33,
        "fullcodeline": "res = PyObject_SetAttr(self, name, PyTuple_GET_ITEM(args, i));"
    },
    {
        "line": 34,
        "fullcodeline": "Py_DECREF(name);"
    },
    {
        "line": 42,
        "fullcodeline": "res = PyObject_SetAttr(self, key, value);"
    },
    {
        "line": 21,
        "fullcodeline": "numfields == 0 ? \"\" : \"either 0 or \","
    },
    {
        "line": 22,
        "fullcodeline": "numfields, numfields == 1 ? \"\" : \"s\");"
    },
    {
        "line": 29,
        "fullcodeline": "if (!name) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 43,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 20,
        "fullcodeline": "Py_TYPE(self)->tp_name,"
    },
    {
        "line": 30,
        "fullcodeline": "res = -1;"
    }
]