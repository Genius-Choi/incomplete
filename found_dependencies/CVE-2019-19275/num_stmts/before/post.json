[
    {
        "line": 47,
        "fullcodeline": "assert(0);"
    },
    {
        "line": 6,
        "fullcodeline": "switch (TYPE(n)) {"
    },
    {
        "line": 13,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (TYPE(CHILD(n, 0)) == NEWLINE)"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = 0; i < NCH(n); i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "return num_stmts(CHILD(n, 0));"
    },
    {
        "line": 25,
        "fullcodeline": "return NCH(n) / 2; /* Divide by 2 to remove count of semi-colons */"
    },
    {
        "line": 28,
        "fullcodeline": "if (NCH(n) == 1)"
    },
    {
        "line": 40,
        "fullcodeline": "char buf[128];"
    },
    {
        "line": 42,
        "fullcodeline": "sprintf(buf, \"Non-statement found: %d %d\","
    },
    {
        "line": 44,
        "fullcodeline": "Py_FatalError(buf);"
    },
    {
        "line": 15,
        "fullcodeline": "ch = CHILD(n, i);"
    },
    {
        "line": 43,
        "fullcodeline": "TYPE(n), NCH(n));"
    },
    {
        "line": 16,
        "fullcodeline": "if (TYPE(ch) == stmt)"
    },
    {
        "line": 29,
        "fullcodeline": "return num_stmts(CHILD(n, 0));"
    },
    {
        "line": 31,
        "fullcodeline": "i = 2;"
    },
    {
        "line": 32,
        "fullcodeline": "l = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "return num_stmts(CHILD(n, 0));"
    },
    {
        "line": 17,
        "fullcodeline": "l += num_stmts(ch);"
    },
    {
        "line": 33,
        "fullcodeline": "if (TYPE(CHILD(n, 1)) == TYPE_COMMENT)"
    },
    {
        "line": 35,
        "fullcodeline": "for (; i < (NCH(n) - 1); i++)"
    },
    {
        "line": 36,
        "fullcodeline": "l += num_stmts(CHILD(n, i));"
    },
    {
        "line": 34,
        "fullcodeline": "i += 2;"
    }
]