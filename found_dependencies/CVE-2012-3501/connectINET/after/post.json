[
    {
        "line": 7,
        "fullcodeline": "action.sa_handler = connect_timeout;"
    },
    {
        "line": 9,
        "fullcodeline": "memset ((char *) &server, 0, sizeof (server));"
    },
    {
        "line": 10,
        "fullcodeline": "server.sin_addr.s_addr = inet_addr(serverHost);"
    },
    {
        "line": 16,
        "fullcodeline": "server.sin_family = AF_INET;"
    },
    {
        "line": 17,
        "fullcodeline": "server.sin_port = htons(serverPort);"
    },
    {
        "line": 26,
        "fullcodeline": "sigaction(SIGALRM, &action, NULL);"
    },
    {
        "line": 27,
        "fullcodeline": "alarm(timeout);"
    },
    {
        "line": 34,
        "fullcodeline": "int err = errno;"
    },
    {
        "line": 35,
        "fullcodeline": "alarm(0);"
    },
    {
        "line": 11,
        "fullcodeline": "if ((asockd = socket (AF_INET, SOCK_STREAM, 0)) < 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "if ((he = gethostbyname(serverHost)) == 0)"
    },
    {
        "line": 29,
        "fullcodeline": "if (connect (asockd, (struct sockaddr *) &server, sizeof (struct sockaddr_in)) < 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (err == EINTR) {"
    },
    {
        "line": 12,
        "fullcodeline": "ci_debug_printf(0, \"ERROR connectINET: Can't create a socket.\\n\");"
    },
    {
        "line": 21,
        "fullcodeline": "close(asockd);"
    },
    {
        "line": 22,
        "fullcodeline": "ci_debug_printf(0, \"ERROR connectINET: Can't lookup hostname of %s\\n\", serverHost);"
    },
    {
        "line": 30,
        "fullcodeline": "close (asockd);"
    },
    {
        "line": 31,
        "fullcodeline": "ci_debug_printf(0, \"ERROR connectINET: Can't connect on %s:%d.\\n\", serverHost,serverPort);"
    },
    {
        "line": 37,
        "fullcodeline": "close(asockd);"
    },
    {
        "line": 38,
        "fullcodeline": "ci_debug_printf(0, \"ERROR connectINET: Timeout connecting to clamd on %s:%d.\\n\", serverHost,serverPort);"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "return -1;"
    }
]