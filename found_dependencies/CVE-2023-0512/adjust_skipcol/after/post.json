[
    {
        "line": 8,
        "fullcodeline": "int\t    width1 = curwin->w_width - curwin_col_off();"
    },
    {
        "line": 12,
        "fullcodeline": "int\t    width2 = width1 + curwin_col_off2();"
    },
    {
        "line": 13,
        "fullcodeline": "long    so = get_scrolloff_value();"
    },
    {
        "line": 14,
        "fullcodeline": "int\t    scrolloff_cols = so == 0 ? 0 : width1 + (so - 1) * width2;"
    },
    {
        "line": 15,
        "fullcodeline": "int\t    scrolled = FALSE;"
    },
    {
        "line": 17,
        "fullcodeline": "validate_cheight();"
    },
    {
        "line": 29,
        "fullcodeline": "validate_virtcol();"
    },
    {
        "line": 45,
        "fullcodeline": "int col = curwin->w_virtcol - curwin->w_skipcol + scrolloff_cols;"
    },
    {
        "line": 46,
        "fullcodeline": "int row = 0;"
    },
    {
        "line": 3,
        "fullcodeline": "if (!curwin->w_p_wrap"
    },
    {
        "line": 9,
        "fullcodeline": "if (width1 <= 0)"
    },
    {
        "line": 18,
        "fullcodeline": "if (curwin->w_cline_height == curwin->w_height"
    },
    {
        "line": 30,
        "fullcodeline": "while (curwin->w_skipcol > 0"
    },
    {
        "line": 47,
        "fullcodeline": "if (col >= width1)"
    },
    {
        "line": 52,
        "fullcodeline": "if (col > width2)"
    },
    {
        "line": 57,
        "fullcodeline": "if (row >= curwin->w_height)"
    },
    {
        "line": 21,
        "fullcodeline": "&& plines_win(curwin, curwin->w_cursor.lnum, FALSE)"
    },
    {
        "line": 25,
        "fullcodeline": "reset_skipcol();"
    },
    {
        "line": 31,
        "fullcodeline": "&& curwin->w_virtcol < curwin->w_skipcol + 3 + scrolloff_cols)"
    },
    {
        "line": 38,
        "fullcodeline": "redraw_later(UPD_NOT_VALID);"
    },
    {
        "line": 39,
        "fullcodeline": "scrolled = TRUE;"
    },
    {
        "line": 40,
        "fullcodeline": "validate_virtcol();"
    },
    {
        "line": 49,
        "fullcodeline": "col -= width1;"
    },
    {
        "line": 50,
        "fullcodeline": "++row;"
    },
    {
        "line": 54,
        "fullcodeline": "row += col / width2;"
    },
    {
        "line": 55,
        "fullcodeline": "col = col % width2;"
    },
    {
        "line": 66,
        "fullcodeline": "redraw_later(UPD_NOT_VALID);"
    },
    {
        "line": 34,
        "fullcodeline": "if (curwin->w_skipcol >= width1 + width2)"
    },
    {
        "line": 59,
        "fullcodeline": "if (curwin->w_skipcol == 0)"
    },
    {
        "line": 64,
        "fullcodeline": "if (row >= curwin->w_height)"
    },
    {
        "line": 35,
        "fullcodeline": "curwin->w_skipcol -= width2;"
    },
    {
        "line": 61,
        "fullcodeline": "curwin->w_skipcol += width1;"
    },
    {
        "line": 62,
        "fullcodeline": "--row;"
    },
    {
        "line": 65,
        "fullcodeline": "curwin->w_skipcol += (row - curwin->w_height) * width2;"
    },
    {
        "line": 37,
        "fullcodeline": "curwin->w_skipcol -= width1;"
    }
]