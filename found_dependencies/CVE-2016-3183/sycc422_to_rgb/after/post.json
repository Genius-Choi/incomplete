[
    {
        "line": 10,
        "fullcodeline": "offset = 1<<(upb - 1); upb = (1<<upb)-1;"
    },
    {
        "line": 13,
        "fullcodeline": "max = maxw * maxh;"
    },
    {
        "line": 19,
        "fullcodeline": "d0 = r = (int*)malloc(sizeof(int) * max);"
    },
    {
        "line": 20,
        "fullcodeline": "d1 = g = (int*)malloc(sizeof(int) * max);"
    },
    {
        "line": 21,
        "fullcodeline": "d2 = b = (int*)malloc(sizeof(int) * max);"
    },
    {
        "line": 26,
        "fullcodeline": "offx = img->x0 & 1U;"
    },
    {
        "line": 27,
        "fullcodeline": "loopmaxw = maxw - offx;"
    },
    {
        "line": 51,
        "fullcodeline": "free(img->comps[0].data); img->comps[0].data = d0;"
    },
    {
        "line": 52,
        "fullcodeline": "free(img->comps[1].data); img->comps[1].data = d1;"
    },
    {
        "line": 53,
        "fullcodeline": "free(img->comps[2].data); img->comps[2].data = d2;"
    },
    {
        "line": 55,
        "fullcodeline": "img->comps[1].w = img->comps[2].w = img->comps[0].w;"
    },
    {
        "line": 56,
        "fullcodeline": "img->comps[1].h = img->comps[2].h = img->comps[0].h;"
    },
    {
        "line": 57,
        "fullcodeline": "img->comps[1].dx = img->comps[2].dx = img->comps[0].dx;"
    },
    {
        "line": 58,
        "fullcodeline": "img->comps[1].dy = img->comps[2].dy = img->comps[0].dy;"
    },
    {
        "line": 59,
        "fullcodeline": "img->color_space = OPJ_CLRSPC_SRGB;"
    },
    {
        "line": 63,
        "fullcodeline": "free(r);"
    },
    {
        "line": 64,
        "fullcodeline": "free(g);"
    },
    {
        "line": 65,
        "fullcodeline": "free(b);"
    },
    {
        "line": 23,
        "fullcodeline": "if(r == NULL || g == NULL || b == NULL) goto fails;"
    },
    {
        "line": 29,
        "fullcodeline": "for(i=0U; i < maxh; ++i)"
    },
    {
        "line": 33,
        "fullcodeline": "if (offx > 0U) {"
    },
    {
        "line": 38,
        "fullcodeline": "for(j=0U; j < (loopmaxw & ~(size_t)1U); j += 2U)"
    },
    {
        "line": 45,
        "fullcodeline": "if (j < loopmaxw) {"
    },
    {
        "line": 34,
        "fullcodeline": "sycc_to_rgb(offset, upb, *y, 0, 0, r, g, b);"
    },
    {
        "line": 35,
        "fullcodeline": "++y; ++r; ++g; ++b;"
    },
    {
        "line": 40,
        "fullcodeline": "sycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);"
    },
    {
        "line": 41,
        "fullcodeline": "++y; ++r; ++g; ++b;"
    },
    {
        "line": 42,
        "fullcodeline": "sycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);"
    },
    {
        "line": 43,
        "fullcodeline": "++y; ++r; ++g; ++b; ++cb; ++cr;"
    },
    {
        "line": 46,
        "fullcodeline": "sycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);"
    },
    {
        "line": 47,
        "fullcodeline": "++y; ++r; ++g; ++b; ++cb; ++cr;"
    }
]