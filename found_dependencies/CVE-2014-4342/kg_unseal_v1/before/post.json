[
    {
        "line": 14,
        "fullcodeline": "int conflen = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "unsigned int cksum_len = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "krb5_keyusage sign_usage = KG_USAGE_SIGN;"
    },
    {
        "line": 38,
        "fullcodeline": "signalg = ptr[0] + (ptr[1]<<8);"
    },
    {
        "line": 39,
        "fullcodeline": "sealalg = ptr[2] + (ptr[3]<<8);"
    },
    {
        "line": 194,
        "fullcodeline": "code = krb5_c_checksum_length(context, md5cksum.checksum_type, &sumlen);"
    },
    {
        "line": 197,
        "fullcodeline": "md5cksum.length = sumlen;"
    },
    {
        "line": 340,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 378,
        "fullcodeline": "retval = g_order_check(&(ctx->seqstate), (gssint_uint64)seqnum);"
    },
    {
        "line": 382,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG) {"
    },
    {
        "line": 43,
        "fullcodeline": "if ((ptr[4] != 0xff) || (ptr[5] != 0xff)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if ((toktype != KG_TOK_SEAL_MSG) &&"
    },
    {
        "line": 57,
        "fullcodeline": "if ((toktype == KG_TOK_SEAL_MSG) &&"
    },
    {
        "line": 67,
        "fullcodeline": "if ((ctx->sealalg == SEAL_ALG_NONE && signalg > 1) ||"
    },
    {
        "line": 98,
        "fullcodeline": "if ((code = kg_get_seq_num(context, ctx->seq, ptr+14, ptr+6, &direction,"
    },
    {
        "line": 106,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG) {"
    },
    {
        "line": 341,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 356,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 367,
        "fullcodeline": "if ((ctx->initiate && direction != 0xff) ||"
    },
    {
        "line": 32,
        "fullcodeline": "message_buffer->length = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "message_buffer->value = NULL;"
    },
    {
        "line": 44,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "(sealalg != 0xffff)) {"
    },
    {
        "line": 50,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "!((sealalg == 0xffff) ||"
    },
    {
        "line": 60,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_MICROSOFT_RC4 &&"
    },
    {
        "line": 73,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "cksum_len = 8;"
    },
    {
        "line": 86,
        "fullcodeline": "cksum_len = 16;"
    },
    {
        "line": 89,
        "fullcodeline": "cksum_len = 20;"
    },
    {
        "line": 92,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 107,
        "fullcodeline": "size_t tmsglen = bodysize-(14+cksum_len);"
    },
    {
        "line": 147,
        "fullcodeline": "plainlen = tmsglen;"
    },
    {
        "line": 149,
        "fullcodeline": "conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);"
    },
    {
        "line": 150,
        "fullcodeline": "token.length = tmsglen - conflen - plain[tmsglen-1];"
    },
    {
        "line": 182,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_RSA_MD5;"
    },
    {
        "line": 185,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_MD5_ARCFOUR;"
    },
    {
        "line": 188,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_SHA1_DES3;"
    },
    {
        "line": 191,
        "fullcodeline": "abort ();"
    },
    {
        "line": 215,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 217,
        "fullcodeline": "(void) memcpy(data_ptr+8, plain, plainlen);"
    },
    {
        "line": 219,
        "fullcodeline": "plaind.length = 8 + plainlen;"
    },
    {
        "line": 220,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 221,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 224,
        "fullcodeline": "xfree(data_ptr);"
    },
    {
        "line": 233,
        "fullcodeline": "code = kg_encrypt_inplace(context, ctx->seq, KG_USAGE_SEAL,"
    },
    {
        "line": 250,
        "fullcodeline": "cksum.contents = md5cksum.contents + 16 - cksum.length;"
    },
    {
        "line": 252,
        "fullcodeline": "code = k5_bcmp(cksum.contents, ptr + 14, cksum.length);"
    },
    {
        "line": 276,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 277,
        "fullcodeline": "(void) memcpy(data_ptr+8, ctx->seed, sizeof(ctx->seed));"
    },
    {
        "line": 278,
        "fullcodeline": "(void) memcpy(data_ptr+8+sizeof(ctx->seed), plain, plainlen);"
    },
    {
        "line": 279,
        "fullcodeline": "plaind.length = 8 + sizeof(ctx->seed) + plainlen;"
    },
    {
        "line": 280,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 281,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 282,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 285,
        "fullcodeline": "xfree(data_ptr);"
    },
    {
        "line": 296,
        "fullcodeline": "code = k5_bcmp(md5cksum.contents, ptr + 14, 8);"
    },
    {
        "line": 300,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 318,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 320,
        "fullcodeline": "(void) memcpy(data_ptr+8, plain, plainlen);"
    },
    {
        "line": 322,
        "fullcodeline": "plaind.length = 8 + plainlen;"
    },
    {
        "line": 323,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 324,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 327,
        "fullcodeline": "xfree(data_ptr);"
    },
    {
        "line": 336,
        "fullcodeline": "code = k5_bcmp(md5cksum.contents, ptr + 14, cksum_len);"
    },
    {
        "line": 342,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 349,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 357,
        "fullcodeline": "*message_buffer = token;"
    },
    {
        "line": 360,
        "fullcodeline": "*conf_state = (sealalg != 0xffff);"
    },
    {
        "line": 363,
        "fullcodeline": "*qop_state = GSS_C_QOP_DEFAULT;"
    },
    {
        "line": 368,
        "fullcodeline": "(!ctx->initiate && direction != 0)) {"
    },
    {
        "line": 374,
        "fullcodeline": "*minor_status = (OM_uint32)G_BAD_DIRECTION;"
    },
    {
        "line": 69,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_DES3KD &&"
    },
    {
        "line": 72,
        "fullcodeline": "signalg != SGN_ALG_HMAC_MD5)) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (toktype != KG_TOK_SEAL_MSG)"
    },
    {
        "line": 108,
        "fullcodeline": "if (sealalg != 0xffff) {"
    },
    {
        "line": 206,
        "fullcodeline": "if (! (data_ptr = xmalloc(8 + plainlen))) {"
    },
    {
        "line": 246,
        "fullcodeline": "if (signalg == 0)"
    },
    {
        "line": 256,
        "fullcodeline": "if (!ctx->seed_init &&"
    },
    {
        "line": 267,
        "fullcodeline": "if (! (data_ptr = xmalloc(sizeof(ctx->seed) + 8 + plainlen))) {"
    },
    {
        "line": 309,
        "fullcodeline": "if (! (data_ptr = xmalloc(8 + plainlen))) {"
    },
    {
        "line": 347,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 369,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG) {"
    },
    {
        "line": 59,
        "fullcodeline": "(sealalg == ctx->sealalg))) {"
    },
    {
        "line": 68,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_1 && signalg != SGN_ALG_3) ||"
    },
    {
        "line": 70,
        "fullcodeline": "signalg != SGN_ALG_HMAC_SHA1_DES3_KD)||"
    },
    {
        "line": 83,
        "fullcodeline": "sign_usage = 15;"
    },
    {
        "line": 159,
        "fullcodeline": "memcpy(token.value, plain+conflen, token.length);"
    },
    {
        "line": 163,
        "fullcodeline": "} else if (toktype == KG_TOK_SIGN_MSG) {"
    },
    {
        "line": 211,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 229,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 234,
        "fullcodeline": "(g_OID_equal(ctx->mech_used,"
    },
    {
        "line": 239,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 242,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 247,
        "fullcodeline": "cksum.length = 8;"
    },
    {
        "line": 257,
        "fullcodeline": "(code = kg_make_seed(context, ctx->subkey, ctx->seed))) {"
    },
    {
        "line": 258,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 263,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 268,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 273,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 292,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 314,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 332,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 348,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 370,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 371,
        "fullcodeline": "message_buffer->value = NULL;"
    },
    {
        "line": 372,
        "fullcodeline": "message_buffer->length = 0;"
    },
    {
        "line": 109,
        "fullcodeline": "if ((plain = (unsigned char *) xmalloc(tmsglen)) == NULL) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (ctx->sealalg == SEAL_ALG_MICROSOFT_RC4) {"
    },
    {
        "line": 144,
        "fullcodeline": "plain = ptr+14+cksum_len;"
    },
    {
        "line": 153,
        "fullcodeline": "if ((token.value = (void *) gssalloc_malloc(token.length)) == NULL) {"
    },
    {
        "line": 161,
        "fullcodeline": "token.value = NULL;"
    },
    {
        "line": 165,
        "fullcodeline": "plain = token.value;"
    },
    {
        "line": 166,
        "fullcodeline": "plainlen = token.length;"
    },
    {
        "line": 207,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 209,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 227,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 240,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 249,
        "fullcodeline": "cksum.length = 16;"
    },
    {
        "line": 259,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 261,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 269,
        "fullcodeline": "if (sealalg == 0)"
    },
    {
        "line": 271,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 288,
        "fullcodeline": "if (sealalg == 0)"
    },
    {
        "line": 290,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 310,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 312,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 330,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 110,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 114,
        "fullcodeline": "unsigned char bigend_seqnum[4];"
    },
    {
        "line": 117,
        "fullcodeline": "store_32_be(seqnum, bigend_seqnum);"
    },
    {
        "line": 118,
        "fullcodeline": "code = krb5_k_key_keyblock(context, ctx->enc, &enc_key);"
    },
    {
        "line": 126,
        "fullcodeline": "assert (enc_key->length == 16);"
    },
    {
        "line": 129,
        "fullcodeline": "code = kg_arcfour_docrypt (enc_key, 0,"
    },
    {
        "line": 133,
        "fullcodeline": "krb5_free_keyblock (context, enc_key);"
    },
    {
        "line": 139,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 140,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 156,
        "fullcodeline": "*minor_status = ENOMEM;"
    },
    {
        "line": 168,
        "fullcodeline": "token.length = 0;"
    },
    {
        "line": 169,
        "fullcodeline": "token.value = NULL;"
    },
    {
        "line": 170,
        "fullcodeline": "plain = token.value;"
    },
    {
        "line": 171,
        "fullcodeline": "plainlen = token.length;"
    },
    {
        "line": 208,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 210,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 228,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 241,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 260,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 262,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 270,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 272,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 289,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 291,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 311,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 313,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 331,
        "fullcodeline": "gssalloc_free(token.value);"
    },
    {
        "line": 127,
        "fullcodeline": "for (i = 0; i <= 15; i++)"
    },
    {
        "line": 128,
        "fullcodeline": "((char *) enc_key->contents)[i] ^=0xf0;"
    },
    {
        "line": 135,
        "fullcodeline": "code = kg_decrypt(context, ctx->enc, KG_USAGE_SEAL, NULL,"
    },
    {
        "line": 154,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 121,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 122,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 131,
        "fullcodeline": "ptr+14+cksum_len, tmsglen,"
    },
    {
        "line": 155,
        "fullcodeline": "xfree(plain);"
    },
    {
        "line": 136,
        "fullcodeline": "ptr+14+cksum_len, plain, tmsglen);"
    }
]