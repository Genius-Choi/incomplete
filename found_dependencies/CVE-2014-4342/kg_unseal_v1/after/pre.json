[
    {
        "line": 14,
        "fullcodeline": "int conflen = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "int bad_pad = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "unsigned int cksum_len = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "krb5_keyusage sign_usage = KG_USAGE_SIGN;"
    },
    {
        "line": 52,
        "fullcodeline": "signalg = ptr[0] + (ptr[1]<<8);"
    },
    {
        "line": 53,
        "fullcodeline": "sealalg = ptr[2] + (ptr[3]<<8);"
    },
    {
        "line": 219,
        "fullcodeline": "code = krb5_c_checksum_length(context, md5cksum.checksum_type, &sumlen);"
    },
    {
        "line": 222,
        "fullcodeline": "md5cksum.length = sumlen;"
    },
    {
        "line": 403,
        "fullcodeline": "retval = g_order_check(&(ctx->seqstate), (gssint_uint64)seqnum);"
    },
    {
        "line": 33,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (ctx->seq == NULL) {"
    },
    {
        "line": 110,
        "fullcodeline": "if ((code = kg_get_seq_num(context, ctx->seq, ptr+14, ptr+6, &direction,"
    },
    {
        "line": 118,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG) {"
    },
    {
        "line": 366,
        "fullcodeline": "if (sealalg != 0xffff)"
    },
    {
        "line": 381,
        "fullcodeline": "if (toktype == KG_TOK_SEAL_MSG)"
    },
    {
        "line": 34,
        "fullcodeline": "message_buffer->length = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "message_buffer->value = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "if ((bodysize < 22) || (ptr[4] != 0xff) || (ptr[5] != 0xff)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if ((toktype != KG_TOK_SEAL_MSG) &&"
    },
    {
        "line": 56,
        "fullcodeline": "(sealalg != 0xffff)) {"
    },
    {
        "line": 64,
        "fullcodeline": "if ((toktype == KG_TOK_SEAL_MSG) &&"
    },
    {
        "line": 65,
        "fullcodeline": "!((sealalg == 0xffff) ||"
    },
    {
        "line": 74,
        "fullcodeline": "if ((ctx->sealalg == SEAL_ALG_NONE && signalg > 1) ||"
    },
    {
        "line": 78,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_MICROSOFT_RC4 &&"
    },
    {
        "line": 88,
        "fullcodeline": "cksum_len = 8;"
    },
    {
        "line": 93,
        "fullcodeline": "cksum_len = 16;"
    },
    {
        "line": 96,
        "fullcodeline": "cksum_len = 20;"
    },
    {
        "line": 119,
        "fullcodeline": "size_t tmsglen = bodysize-(14+cksum_len);"
    },
    {
        "line": 159,
        "fullcodeline": "plainlen = tmsglen;"
    },
    {
        "line": 161,
        "fullcodeline": "conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);"
    },
    {
        "line": 168,
        "fullcodeline": "padlen = plain[tmsglen - 1];"
    },
    {
        "line": 175,
        "fullcodeline": "token.length = tmsglen - conflen - padlen;"
    },
    {
        "line": 207,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_RSA_MD5;"
    },
    {
        "line": 210,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_MD5_ARCFOUR;"
    },
    {
        "line": 213,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_SHA1_DES3;"
    },
    {
        "line": 244,
        "fullcodeline": "plaind.length = 8 + plainlen;"
    },
    {
        "line": 245,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 246,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 258,
        "fullcodeline": "code = kg_encrypt_inplace(context, ctx->seq, KG_USAGE_SEAL,"
    },
    {
        "line": 275,
        "fullcodeline": "cksum.contents = md5cksum.contents + 16 - cksum.length;"
    },
    {
        "line": 277,
        "fullcodeline": "code = k5_bcmp(cksum.contents, ptr + 14, cksum.length);"
    },
    {
        "line": 304,
        "fullcodeline": "plaind.length = 8 + sizeof(ctx->seed) + plainlen;"
    },
    {
        "line": 305,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 306,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 307,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 347,
        "fullcodeline": "plaind.length = 8 + plainlen;"
    },
    {
        "line": 348,
        "fullcodeline": "plaind.data = data_ptr;"
    },
    {
        "line": 349,
        "fullcodeline": "code = krb5_k_make_checksum(context, md5cksum.checksum_type,"
    },
    {
        "line": 361,
        "fullcodeline": "code = k5_bcmp(md5cksum.contents, ptr + 14, cksum_len);"
    },
    {
        "line": 388,
        "fullcodeline": "*qop_state = GSS_C_QOP_DEFAULT;"
    },
    {
        "line": 392,
        "fullcodeline": "if ((ctx->initiate && direction != 0xff) ||"
    },
    {
        "line": 393,
        "fullcodeline": "(!ctx->initiate && direction != 0)) {"
    },
    {
        "line": 76,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_DES3KD &&"
    },
    {
        "line": 79,
        "fullcodeline": "signalg != SGN_ALG_HMAC_MD5)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (toktype != KG_TOK_SEAL_MSG)"
    },
    {
        "line": 120,
        "fullcodeline": "if (sealalg != 0xffff) {"
    },
    {
        "line": 162,
        "fullcodeline": "if (tmsglen < conflen) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (tmsglen - conflen < padlen) {"
    },
    {
        "line": 240,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 242,
        "fullcodeline": "(void) memcpy(data_ptr+8, plain, plainlen);"
    },
    {
        "line": 301,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 302,
        "fullcodeline": "(void) memcpy(data_ptr+8, ctx->seed, sizeof(ctx->seed));"
    },
    {
        "line": 303,
        "fullcodeline": "(void) memcpy(data_ptr+8+sizeof(ctx->seed), plain, plainlen);"
    },
    {
        "line": 321,
        "fullcodeline": "code = k5_bcmp(md5cksum.contents, ptr + 14, 8);"
    },
    {
        "line": 343,
        "fullcodeline": "(void) memcpy(data_ptr, ptr-2, 8);"
    },
    {
        "line": 345,
        "fullcodeline": "(void) memcpy(data_ptr+8, plain, plainlen);"
    },
    {
        "line": 385,
        "fullcodeline": "*conf_state = (sealalg != 0xffff);"
    },
    {
        "line": 399,
        "fullcodeline": "*minor_status = (OM_uint32)G_BAD_DIRECTION;"
    },
    {
        "line": 66,
        "fullcodeline": "(sealalg == ctx->sealalg))) {"
    },
    {
        "line": 75,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_1 && signalg != SGN_ALG_3) ||"
    },
    {
        "line": 77,
        "fullcodeline": "signalg != SGN_ALG_HMAC_SHA1_DES3_KD)||"
    },
    {
        "line": 90,
        "fullcodeline": "sign_usage = 15;"
    },
    {
        "line": 172,
        "fullcodeline": "padlen = 0;"
    },
    {
        "line": 173,
        "fullcodeline": "bad_pad = 1;"
    },
    {
        "line": 184,
        "fullcodeline": "memcpy(token.value, plain+conflen, token.length);"
    },
    {
        "line": 188,
        "fullcodeline": "} else if (toktype == KG_TOK_SIGN_MSG) {"
    },
    {
        "line": 231,
        "fullcodeline": "if (! (data_ptr = xmalloc(8 + plainlen))) {"
    },
    {
        "line": 272,
        "fullcodeline": "cksum.length = 8;"
    },
    {
        "line": 281,
        "fullcodeline": "if (!ctx->seed_init &&"
    },
    {
        "line": 282,
        "fullcodeline": "(code = kg_make_seed(context, ctx->subkey, ctx->seed))) {"
    },
    {
        "line": 292,
        "fullcodeline": "if (! (data_ptr = xmalloc(sizeof(ctx->seed) + 8 + plainlen))) {"
    },
    {
        "line": 334,
        "fullcodeline": "if (! (data_ptr = xmalloc(8 + plainlen))) {"
    },
    {
        "line": 121,
        "fullcodeline": "if ((plain = (unsigned char *) xmalloc(tmsglen)) == NULL) {"
    },
    {
        "line": 156,
        "fullcodeline": "plain = ptr+14+cksum_len;"
    },
    {
        "line": 178,
        "fullcodeline": "if ((token.value = (void *) gssalloc_malloc(token.length)) == NULL) {"
    },
    {
        "line": 186,
        "fullcodeline": "token.value = NULL;"
    },
    {
        "line": 189,
        "fullcodeline": "token = *message_buffer;"
    },
    {
        "line": 190,
        "fullcodeline": "plain = token.value;"
    },
    {
        "line": 191,
        "fullcodeline": "plainlen = token.length;"
    },
    {
        "line": 259,
        "fullcodeline": "(g_OID_equal(ctx->mech_used,"
    },
    {
        "line": 274,
        "fullcodeline": "cksum.length = 16;"
    },
    {
        "line": 126,
        "fullcodeline": "unsigned char bigend_seqnum[4];"
    },
    {
        "line": 129,
        "fullcodeline": "store_32_be(seqnum, bigend_seqnum);"
    },
    {
        "line": 130,
        "fullcodeline": "code = krb5_k_key_keyblock(context, ctx->enc, &enc_key);"
    },
    {
        "line": 141,
        "fullcodeline": "code = kg_arcfour_docrypt (enc_key, 0,"
    },
    {
        "line": 145,
        "fullcodeline": "krb5_free_keyblock (context, enc_key);"
    },
    {
        "line": 193,
        "fullcodeline": "token.length = 0;"
    },
    {
        "line": 194,
        "fullcodeline": "token.value = NULL;"
    },
    {
        "line": 195,
        "fullcodeline": "plain = token.value;"
    },
    {
        "line": 196,
        "fullcodeline": "plainlen = token.length;"
    },
    {
        "line": 138,
        "fullcodeline": "assert (enc_key->length == 16);"
    },
    {
        "line": 139,
        "fullcodeline": "for (i = 0; i <= 15; i++)"
    },
    {
        "line": 147,
        "fullcodeline": "code = kg_decrypt(context, ctx->enc, KG_USAGE_SEAL, NULL,"
    }
]