[
    {
        "line": 19,
        "fullcodeline": "size_t cksum_len = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "size_t conflen = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "krb5_keyusage sign_usage = KG_USAGE_SIGN;"
    },
    {
        "line": 27,
        "fullcodeline": "md5cksum.length = cksum.length = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "md5cksum.contents = cksum.contents = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "header = kg_locate_header_iov(iov, iov_count, toktype);"
    },
    {
        "line": 31,
        "fullcodeline": "assert(header != NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "trailer = kg_locate_iov(iov, iov_count, GSS_IOV_BUFFER_TYPE_TRAILER);"
    },
    {
        "line": 51,
        "fullcodeline": "ptr = (unsigned char *)header->buffer.value + token_wrapper_len;"
    },
    {
        "line": 53,
        "fullcodeline": "signalg  = ptr[0];"
    },
    {
        "line": 54,
        "fullcodeline": "signalg |= ptr[1] << 8;"
    },
    {
        "line": 56,
        "fullcodeline": "sealalg  = ptr[2];"
    },
    {
        "line": 57,
        "fullcodeline": "sealalg |= ptr[3] << 8;"
    },
    {
        "line": 105,
        "fullcodeline": "code = kg_get_seq_num(context, ctx->seq, ptr + 14, ptr + 6, &direction,"
    },
    {
        "line": 178,
        "fullcodeline": "code = krb5_c_checksum_length(context, md5cksum.checksum_type, &sumlen);"
    },
    {
        "line": 183,
        "fullcodeline": "md5cksum.length = sumlen;"
    },
    {
        "line": 186,
        "fullcodeline": "code = kg_make_checksum_iov_v1(context, md5cksum.checksum_type,"
    },
    {
        "line": 256,
        "fullcodeline": "code = 0;"
    },
    {
        "line": 257,
        "fullcodeline": "retval = g_order_check(&ctx->seqstate, (gssint_uint64)seqnum);"
    },
    {
        "line": 260,
        "fullcodeline": "krb5_free_checksum_contents(context, &md5cksum);"
    },
    {
        "line": 262,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 34,
        "fullcodeline": "if (trailer != NULL && trailer->buffer.length != 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (ctx->seq == NULL) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (header->buffer.length < token_wrapper_len + 22) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (ptr[4] != 0xFF || ptr[5] != 0xFF) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (toktype != KG_TOK_WRAP_MSG && sealalg != 0xFFFF) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (toktype == KG_TOK_WRAP_MSG &&"
    },
    {
        "line": 75,
        "fullcodeline": "if ((ctx->sealalg == SEAL_ALG_NONE && signalg > 1) ||"
    },
    {
        "line": 107,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (toktype == KG_TOK_WRAP_MSG) {"
    },
    {
        "line": 152,
        "fullcodeline": "if (header->buffer.length != token_wrapper_len + 14 + cksum_len + conflen) {"
    },
    {
        "line": 179,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 190,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 224,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 237,
        "fullcodeline": "if (toktype == KG_TOK_WRAP_MSG &&"
    },
    {
        "line": 244,
        "fullcodeline": "if (conf_state != NULL)"
    },
    {
        "line": 247,
        "fullcodeline": "if (qop_state != NULL)"
    },
    {
        "line": 250,
        "fullcodeline": "if ((ctx->initiate && direction != 0xff) ||"
    },
    {
        "line": 35,
        "fullcodeline": "*minor_status = (OM_uint32)KRB5_BAD_MSIZE;"
    },
    {
        "line": 42,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 47,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "!(sealalg == 0xFFFF || sealalg == ctx->sealalg)) {"
    },
    {
        "line": 71,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_MICROSOFT_RC4 &&"
    },
    {
        "line": 81,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 89,
        "fullcodeline": "cksum_len = 8;"
    },
    {
        "line": 94,
        "fullcodeline": "cksum_len = 16;"
    },
    {
        "line": 97,
        "fullcodeline": "cksum_len = 20;"
    },
    {
        "line": 100,
        "fullcodeline": "*minor_status = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "*minor_status = code;"
    },
    {
        "line": 149,
        "fullcodeline": "conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);"
    },
    {
        "line": 153,
        "fullcodeline": "retval = GSS_S_DEFECTIVE_TOKEN;"
    },
    {
        "line": 166,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_RSA_MD5;"
    },
    {
        "line": 169,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_MD5_ARCFOUR;"
    },
    {
        "line": 172,
        "fullcodeline": "md5cksum.checksum_type = CKSUMTYPE_HMAC_SHA1_DES3;"
    },
    {
        "line": 175,
        "fullcodeline": "abort();"
    },
    {
        "line": 180,
        "fullcodeline": "retval = GSS_S_FAILURE;"
    },
    {
        "line": 191,
        "fullcodeline": "retval = GSS_S_FAILURE;"
    },
    {
        "line": 198,
        "fullcodeline": "code = kg_encrypt_inplace(context, ctx->seq, KG_USAGE_SEAL,"
    },
    {
        "line": 208,
        "fullcodeline": "cksum.length = cksum_len;"
    },
    {
        "line": 209,
        "fullcodeline": "cksum.contents = md5cksum.contents + 16 - cksum.length;"
    },
    {
        "line": 211,
        "fullcodeline": "code = k5_bcmp(cksum.contents, ptr + 14, cksum.length);"
    },
    {
        "line": 215,
        "fullcodeline": "code = k5_bcmp(md5cksum.contents, ptr + 14, cksum_len);"
    },
    {
        "line": 218,
        "fullcodeline": "code = 0;"
    },
    {
        "line": 219,
        "fullcodeline": "retval = GSS_S_DEFECTIVE_TOKEN;"
    },
    {
        "line": 225,
        "fullcodeline": "code = 0;"
    },
    {
        "line": 226,
        "fullcodeline": "retval = GSS_S_BAD_SIG;"
    },
    {
        "line": 238,
        "fullcodeline": "(ctx->gss_flags & GSS_C_DCE_STYLE) == 0) {"
    },
    {
        "line": 239,
        "fullcodeline": "retval = kg_fixup_padding_iov(&code, iov, iov_count);"
    },
    {
        "line": 245,
        "fullcodeline": "*conf_state = (sealalg != 0xFFFF);"
    },
    {
        "line": 248,
        "fullcodeline": "*qop_state = GSS_C_QOP_DEFAULT;"
    },
    {
        "line": 251,
        "fullcodeline": "(!ctx->initiate && direction != 0)) {"
    },
    {
        "line": 252,
        "fullcodeline": "*minor_status = (OM_uint32)G_BAD_DIRECTION;"
    },
    {
        "line": 253,
        "fullcodeline": "retval = GSS_S_BAD_SIG;"
    },
    {
        "line": 77,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_DES3KD &&"
    },
    {
        "line": 80,
        "fullcodeline": "signalg != SGN_ALG_HMAC_MD5)) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (toktype != KG_TOK_WRAP_MSG)"
    },
    {
        "line": 114,
        "fullcodeline": "if (sealalg != 0xFFFF) {"
    },
    {
        "line": 203,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 240,
        "fullcodeline": "if (retval != GSS_S_COMPLETE)"
    },
    {
        "line": 76,
        "fullcodeline": "(ctx->sealalg == SEAL_ALG_1 && signalg != SGN_ALG_3) ||"
    },
    {
        "line": 78,
        "fullcodeline": "signalg != SGN_ALG_HMAC_SHA1_DES3_KD)||"
    },
    {
        "line": 91,
        "fullcodeline": "sign_usage = 15;"
    },
    {
        "line": 199,
        "fullcodeline": "(g_OID_equal(ctx->mech_used,"
    },
    {
        "line": 204,
        "fullcodeline": "retval = GSS_S_FAILURE;"
    },
    {
        "line": 115,
        "fullcodeline": "if (ctx->sealalg == SEAL_ALG_MICROSOFT_RC4) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 116,
        "fullcodeline": "unsigned char bigend_seqnum[4];"
    },
    {
        "line": 120,
        "fullcodeline": "store_32_be(seqnum, bigend_seqnum);"
    },
    {
        "line": 122,
        "fullcodeline": "code = krb5_k_key_keyblock(context, ctx->enc, &enc_key);"
    },
    {
        "line": 128,
        "fullcodeline": "assert(enc_key->length == 16);"
    },
    {
        "line": 133,
        "fullcodeline": "code = kg_arcfour_docrypt_iov(context, enc_key, 0,"
    },
    {
        "line": 136,
        "fullcodeline": "krb5_free_keyblock(context, enc_key);"
    },
    {
        "line": 145,
        "fullcodeline": "retval = GSS_S_FAILURE;"
    },
    {
        "line": 123,
        "fullcodeline": "if (code != 0) {"
    },
    {
        "line": 130,
        "fullcodeline": "for (i = 0; i < enc_key->length; i++)"
    },
    {
        "line": 131,
        "fullcodeline": "((char *)enc_key->contents)[i] ^= 0xF0;"
    },
    {
        "line": 138,
        "fullcodeline": "code = kg_decrypt_iov(context, 0,"
    },
    {
        "line": 124,
        "fullcodeline": "retval = GSS_S_FAILURE;"
    },
    {
        "line": 139,
        "fullcodeline": "((ctx->gss_flags & GSS_C_DCE_STYLE) != 0),"
    }
]