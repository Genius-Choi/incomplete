[
    {
        "line": 3,
        "fullcodeline": "key_t key = params->key;"
    },
    {
        "line": 4,
        "fullcodeline": "int shmflg = params->flg;"
    },
    {
        "line": 5,
        "fullcodeline": "size_t size = params->u.size;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t numpages = (size + PAGE_SIZE - 1) >> PAGE_SHIFT;"
    },
    {
        "line": 10,
        "fullcodeline": "char name[13];"
    },
    {
        "line": 12,
        "fullcodeline": "vm_flags_t acctflag = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "shp = ipc_rcu_alloc(sizeof(*shp));"
    },
    {
        "line": 30,
        "fullcodeline": "shp->mlock_user = NULL;"
    },
    {
        "line": 33,
        "fullcodeline": "error = security_shm_alloc(shp);"
    },
    {
        "line": 39,
        "fullcodeline": "sprintf(name, \"SYSV%08x\", key);"
    },
    {
        "line": 67,
        "fullcodeline": "error = PTR_ERR(file);"
    },
    {
        "line": 71,
        "fullcodeline": "shp->shm_cprid = task_tgid_vnr(current);"
    },
    {
        "line": 72,
        "fullcodeline": "shp->shm_lprid = 0;"
    },
    {
        "line": 73,
        "fullcodeline": "shp->shm_atim = shp->shm_dtim = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "shp->shm_ctim = get_seconds();"
    },
    {
        "line": 75,
        "fullcodeline": "shp->shm_segsz = size;"
    },
    {
        "line": 76,
        "fullcodeline": "shp->shm_nattch = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "shp->shm_file = file;"
    },
    {
        "line": 78,
        "fullcodeline": "shp->shm_creator = current;"
    },
    {
        "line": 80,
        "fullcodeline": "id = ipc_addid(&shm_ids(ns), &shp->shm_perm, ns->shm_ctlmni);"
    },
    {
        "line": 95,
        "fullcodeline": "error = shp->shm_perm.id;"
    },
    {
        "line": 106,
        "fullcodeline": "ipc_rcu_putref(shp, shm_rcu_free);"
    },
    {
        "line": 14,
        "fullcodeline": "if (size < SHMMIN || size > ns->shm_ctlmax)"
    },
    {
        "line": 17,
        "fullcodeline": "if (numpages << PAGE_SHIFT < size)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!shp)"
    },
    {
        "line": 29,
        "fullcodeline": "shp->shm_perm.mode = (shmflg & S_IRWXUGO);"
    },
    {
        "line": 40,
        "fullcodeline": "if (shmflg & SHM_HUGETLB) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (IS_ERR(file))"
    },
    {
        "line": 81,
        "fullcodeline": "if (id < 0) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (is_file_hugepages(file) && shp->mlock_user)"
    },
    {
        "line": 20,
        "fullcodeline": "if (ns->shm_tot + numpages < ns->shm_tot ||"
    },
    {
        "line": 21,
        "fullcodeline": "ns->shm_tot + numpages > ns->shm_ctlall)"
    },
    {
        "line": 35,
        "fullcodeline": "ipc_rcu_putref(shp, ipc_rcu_free);"
    },
    {
        "line": 44,
        "fullcodeline": "hs = hstate_sizelog((shmflg >> SHM_HUGE_SHIFT) & SHM_HUGE_MASK);"
    },
    {
        "line": 49,
        "fullcodeline": "hugesize = ALIGN(size, huge_page_size(hs));"
    },
    {
        "line": 54,
        "fullcodeline": "file = hugetlb_file_setup(name, hugesize, acctflag,"
    },
    {
        "line": 82,
        "fullcodeline": "error = id;"
    },
    {
        "line": 103,
        "fullcodeline": "user_shm_unlock(size, shp->mlock_user);"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "return -ENOSPC;"
    },
    {
        "line": 22,
        "fullcodeline": "return -ENOSPC;"
    },
    {
        "line": 26,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 45,
        "fullcodeline": "if (!hs) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (shmflg & SHM_NORESERVE)"
    },
    {
        "line": 65,
        "fullcodeline": "file = shmem_kernel_file_setup(name, size, acctflag);"
    },
    {
        "line": 46,
        "fullcodeline": "error = -EINVAL;"
    },
    {
        "line": 53,
        "fullcodeline": "acctflag = VM_NORESERVE;"
    },
    {
        "line": 56,
        "fullcodeline": "(shmflg >> SHM_HUGE_SHIFT) & SHM_HUGE_MASK);"
    },
    {
        "line": 62,
        "fullcodeline": "if  ((shmflg & SHM_NORESERVE) &&"
    },
    {
        "line": 63,
        "fullcodeline": "sysctl_overcommit_memory != OVERCOMMIT_NEVER)"
    },
    {
        "line": 64,
        "fullcodeline": "acctflag = VM_NORESERVE;"
    }
]