[
    {
        "line": 18,
        "fullcodeline": "QString scriptDir = QFileInfo(absPath).dir().path();"
    },
    {
        "line": 20,
        "fullcodeline": "QFile fic(absPath);"
    },
    {
        "line": 32,
        "fullcodeline": "bool ok = false;"
    },
    {
        "line": 5,
        "fullcodeline": "if (QFileInfo(fileName).isAbsolute())"
    },
    {
        "line": 10,
        "fullcodeline": "if (absPath.isEmpty())"
    },
    {
        "line": 6,
        "fullcodeline": "absPath = fileName;"
    },
    {
        "line": 12,
        "fullcodeline": "QString msg = QString(\"WARNING: could not find script file %1\").arg(QDir::toNativeSeparators(fileName));"
    },
    {
        "line": 13,
        "fullcodeline": "emit scriptDebug(msg);"
    },
    {
        "line": 14,
        "fullcodeline": "qWarning() << msg;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!fic.open(QIODevice::ReadOnly))"
    },
    {
        "line": 23,
        "fullcodeline": "QString msg = QString(\"WARNING: cannot open script: %1\").arg(QDir::toNativeSeparators(fileName));"
    },
    {
        "line": 24,
        "fullcodeline": "emit scriptDebug(msg);"
    },
    {
        "line": 29,
        "fullcodeline": "if (!includePath.isEmpty())"
    },
    {
        "line": 30,
        "fullcodeline": "scriptDir = includePath;"
    },
    {
        "line": 34,
        "fullcodeline": "ok = preprocessFile(absPath, fic, script, scriptDir);"
    },
    {
        "line": 8,
        "fullcodeline": "absPath = StelFileMgr::findFile(\"scripts/\" + fileName);"
    }
]