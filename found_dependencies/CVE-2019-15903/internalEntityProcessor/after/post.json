[
    {
        "line": 7,
        "fullcodeline": "OPEN_INTERNAL_ENTITY *openEntity = parser->m_openInternalEntities;"
    },
    {
        "line": 11,
        "fullcodeline": "entity = openEntity->entity;"
    },
    {
        "line": 12,
        "fullcodeline": "textStart = ((char *)entity->textPtr) + entity->processed;"
    },
    {
        "line": 13,
        "fullcodeline": "textEnd = (char *)(entity->textPtr + entity->textLen);"
    },
    {
        "line": 15,
        "fullcodeline": "next = textStart;"
    },
    {
        "line": 25,
        "fullcodeline": "result = doContent(parser, openEntity->startTagLevel,"
    },
    {
        "line": 8,
        "fullcodeline": "if (! openEntity)"
    },
    {
        "line": 29,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 53,
        "fullcodeline": "parser->m_processor = contentProcessor;"
    },
    {
        "line": 55,
        "fullcodeline": "return doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,"
    },
    {
        "line": 57,
        "fullcodeline": "(XML_Bool)! parser->m_parsingStatus.finalBuffer);"
    },
    {
        "line": 31,
        "fullcodeline": "else if (textEnd != next"
    },
    {
        "line": 32,
        "fullcodeline": "&& parser->m_parsingStatus.parsing == XML_SUSPENDED) {"
    },
    {
        "line": 33,
        "fullcodeline": "entity->processed = (int)(next - (char *)entity->textPtr);"
    },
    {
        "line": 36,
        "fullcodeline": "entity->open = XML_FALSE;"
    },
    {
        "line": 37,
        "fullcodeline": "parser->m_openInternalEntities = openEntity->next;"
    },
    {
        "line": 39,
        "fullcodeline": "openEntity->next = parser->m_freeInternalEntities;"
    },
    {
        "line": 40,
        "fullcodeline": "parser->m_freeInternalEntities = openEntity;"
    }
]