[
    {
        "line": 6,
        "fullcodeline": "static const XML_Char atypeCDATA[]"
    },
    {
        "line": 8,
        "fullcodeline": "static const XML_Char atypeID[] = {ASCII_I, ASCII_D, '\\0'};"
    },
    {
        "line": 9,
        "fullcodeline": "static const XML_Char atypeIDREF[]"
    },
    {
        "line": 11,
        "fullcodeline": "static const XML_Char atypeIDREFS[]"
    },
    {
        "line": 13,
        "fullcodeline": "static const XML_Char atypeENTITY[]"
    },
    {
        "line": 15,
        "fullcodeline": "static const XML_Char atypeENTITIES[]"
    },
    {
        "line": 18,
        "fullcodeline": "static const XML_Char atypeNMTOKEN[]"
    },
    {
        "line": 20,
        "fullcodeline": "static const XML_Char atypeNMTOKENS[]"
    },
    {
        "line": 23,
        "fullcodeline": "static const XML_Char notationPrefix[]"
    },
    {
        "line": 26,
        "fullcodeline": "static const XML_Char enumValueSep[] = {ASCII_PIPE, '\\0'};"
    },
    {
        "line": 27,
        "fullcodeline": "static const XML_Char enumValueStart[] = {ASCII_LPAREN, '\\0'};"
    },
    {
        "line": 30,
        "fullcodeline": "DTD *const dtd = parser->m_dtd;"
    },
    {
        "line": 7,
        "fullcodeline": "= {ASCII_C, ASCII_D, ASCII_A, ASCII_T, ASCII_A, '\\0'};"
    },
    {
        "line": 10,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, '\\0'};"
    },
    {
        "line": 12,
        "fullcodeline": "= {ASCII_I, ASCII_D, ASCII_R, ASCII_E, ASCII_F, ASCII_S, '\\0'};"
    },
    {
        "line": 14,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T, ASCII_Y, '\\0'};"
    },
    {
        "line": 16,
        "fullcodeline": "= {ASCII_E, ASCII_N, ASCII_T, ASCII_I, ASCII_T,"
    },
    {
        "line": 19,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K, ASCII_E, ASCII_N, '\\0'};"
    },
    {
        "line": 21,
        "fullcodeline": "= {ASCII_N, ASCII_M, ASCII_T, ASCII_O, ASCII_K,"
    },
    {
        "line": 24,
        "fullcodeline": "= {ASCII_N, ASCII_O, ASCII_T, ASCII_A,      ASCII_T,"
    },
    {
        "line": 36,
        "fullcodeline": "if (enc == parser->m_encoding) {"
    },
    {
        "line": 37,
        "fullcodeline": "eventPP = &parser->m_eventPtr;"
    },
    {
        "line": 38,
        "fullcodeline": "eventEndPP = &parser->m_eventEndPtr;"
    },
    {
        "line": 46,
        "fullcodeline": "XML_Bool handleDefault = XML_TRUE;"
    },
    {
        "line": 47,
        "fullcodeline": "*eventPP = s;"
    },
    {
        "line": 48,
        "fullcodeline": "*eventEndPP = next;"
    },
    {
        "line": 92,
        "fullcodeline": "role = XmlTokenRole(&parser->m_prologState, tok, s, next, enc);"
    },
    {
        "line": 49,
        "fullcodeline": "if (tok <= 0) {"
    },
    {
        "line": 965,
        "fullcodeline": "if (handleDefault && parser->m_defaultHandler)"
    },
    {
        "line": 111,
        "fullcodeline": "parser->m_doctypeSysid = NULL; /* always initialize to NULL */"
    },
    {
        "line": 140,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 266,
        "fullcodeline": "parser->m_processor = contentProcessor;"
    },
    {
        "line": 269,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 274,
        "fullcodeline": "parser->m_declAttributeId = getAttributeId(parser, enc, s, next);"
    },
    {
        "line": 277,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_FALSE;"
    },
    {
        "line": 278,
        "fullcodeline": "parser->m_declAttributeType = NULL;"
    },
    {
        "line": 279,
        "fullcodeline": "parser->m_declAttributeIsId = XML_FALSE;"
    },
    {
        "line": 282,
        "fullcodeline": "parser->m_declAttributeIsCdata = XML_TRUE;"
    },
    {
        "line": 283,
        "fullcodeline": "parser->m_declAttributeType = atypeCDATA;"
    },
    {
        "line": 286,
        "fullcodeline": "parser->m_declAttributeIsId = XML_TRUE;"
    },
    {
        "line": 287,
        "fullcodeline": "parser->m_declAttributeType = atypeID;"
    },
    {
        "line": 290,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREF;"
    },
    {
        "line": 293,
        "fullcodeline": "parser->m_declAttributeType = atypeIDREFS;"
    },
    {
        "line": 296,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITY;"
    },
    {
        "line": 299,
        "fullcodeline": "parser->m_declAttributeType = atypeENTITIES;"
    },
    {
        "line": 302,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKEN;"
    },
    {
        "line": 305,
        "fullcodeline": "parser->m_declAttributeType = atypeNMTOKENS;"
    },
    {
        "line": 421,
        "fullcodeline": "dtd->hasParamEntityRefs = XML_TRUE;"
    },
    {
        "line": 570,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 574,
        "fullcodeline": "parser->m_declNotationPublicId = NULL;"
    },
    {
        "line": 575,
        "fullcodeline": "parser->m_declNotationName = NULL;"
    },
    {
        "line": 614,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 624,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 681,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = 0;"
    },
    {
        "line": 697,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_COMMA;"
    },
    {
        "line": 713,
        "fullcodeline": "parser->m_groupConnector[parser->m_prologState.level] = ASCII_PIPE;"
    },
    {
        "line": 857,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 860,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 863,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 866,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 894,
        "fullcodeline": "quant = XML_CQUANT_NONE;"
    },
    {
        "line": 897,
        "fullcodeline": "quant = XML_CQUANT_OPT;"
    },
    {
        "line": 900,
        "fullcodeline": "quant = XML_CQUANT_REP;"
    },
    {
        "line": 903,
        "fullcodeline": "quant = XML_CQUANT_PLUS;"
    },
    {
        "line": 929,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 934,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 966,
        "fullcodeline": "reportDefault(parser, enc, s, next);"
    },
    {
        "line": 970,
        "fullcodeline": "*nextPtr = next;"
    },
    {
        "line": 975,
        "fullcodeline": "s = next;"
    },
    {
        "line": 976,
        "fullcodeline": "tok = XmlPrologTok(enc, s, end, &next);"
    },
    {
        "line": 50,
        "fullcodeline": "if (haveMore && tok != XML_TOK_INVALID) {"
    },
    {
        "line": 95,
        "fullcodeline": "enum XML_Error result = processXmlDecl(parser, 0, s, next);"
    },
    {
        "line": 98,
        "fullcodeline": "enc = parser->m_encoding;"
    },
    {
        "line": 99,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 158,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 161,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 267,
        "fullcodeline": "return contentProcessor(parser, s, end, nextPtr);"
    },
    {
        "line": 270,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 275,
        "fullcodeline": "if (! parser->m_declAttributeId)"
    },
    {
        "line": 307,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 312,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler) {"
    },
    {
        "line": 437,
        "fullcodeline": "if (! dtd->standalone"
    },
    {
        "line": 457,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 473,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity"
    },
    {
        "line": 484,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_declEntity) {"
    },
    {
        "line": 586,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 602,
        "fullcodeline": "if (parser->m_declNotationName && parser->m_notationDeclHandler) {"
    },
    {
        "line": 617,
        "fullcodeline": "if (parser->m_declNotationPublicId && parser->m_notationDeclHandler) {"
    },
    {
        "line": 653,
        "fullcodeline": "if (parser->m_prologState.level >= parser->m_groupSize) {"
    },
    {
        "line": 695,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_PIPE)"
    },
    {
        "line": 698,
        "fullcodeline": "if (dtd->in_eldecl && parser->m_elementDeclHandler)"
    },
    {
        "line": 702,
        "fullcodeline": "if (parser->m_groupConnector[parser->m_prologState.level] == ASCII_COMMA)"
    },
    {
        "line": 704,
        "fullcodeline": "if (dtd->in_eldecl"
    },
    {
        "line": 805,
        "fullcodeline": "if (! dtd->standalone && parser->m_notStandaloneHandler"
    },
    {
        "line": 927,
        "fullcodeline": "if (! reportProcessingInstruction(parser, enc, s, next))"
    },
    {
        "line": 932,
        "fullcodeline": "if (! reportComment(parser, enc, s, next))"
    },
    {
        "line": 948,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_entityDeclHandler)"
    },
    {
        "line": 956,
        "fullcodeline": "if (dtd->keepProcessing && parser->m_attlistDeclHandler)"
    },
    {
        "line": 51,
        "fullcodeline": "*nextPtr = s;"
    },
    {
        "line": 56,
        "fullcodeline": "*eventPP = next;"
    },
    {
        "line": 62,
        "fullcodeline": "case -XML_TOK_PROLOG_S:"
    },
    {
        "line": 63,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 87,
        "fullcodeline": "tok = -tok;"
    },
    {
        "line": 88,
        "fullcodeline": "next = end;"
    },
    {
        "line": 96,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 103,
        "fullcodeline": "parser->m_doctypeName"
    },
    {
        "line": 107,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 108,
        "fullcodeline": "parser->m_doctypePubid = NULL;"
    },
    {
        "line": 109,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 115,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 118,
        "fullcodeline": "parser->m_doctypeName = NULL;"
    },
    {
        "line": 119,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 120,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 145,
        "fullcodeline": "pubId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 150,
        "fullcodeline": "normalizePublicId(pubId);"
    },
    {
        "line": 151,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 152,
        "fullcodeline": "parser->m_doctypePubid = pubId;"
    },
    {
        "line": 153,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 162,
        "fullcodeline": "XML_Char *tem"
    },
    {
        "line": 167,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 168,
        "fullcodeline": "parser->m_declEntity->publicId = tem;"
    },
    {
        "line": 169,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 179,
        "fullcodeline": "parser->m_startDoctypeDeclHandler("
    },
    {
        "line": 182,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 183,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 228,
        "fullcodeline": "parser->m_endDoctypeDeclHandler(parser->m_handlerArg);"
    },
    {
        "line": 229,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 308,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 325,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 361,
        "fullcodeline": "enum XML_Error result = storeAttributeValue("
    },
    {
        "line": 366,
        "fullcodeline": "attVal = poolStart(&dtd->pool);"
    },
    {
        "line": 367,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 396,
        "fullcodeline": "enum XML_Error result = storeEntityValue("
    },
    {
        "line": 423,
        "fullcodeline": "parser->m_doctypeSysid = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 428,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 429,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 442,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 458,
        "fullcodeline": "parser->m_declEntity->systemId"
    },
    {
        "line": 463,
        "fullcodeline": "parser->m_declEntity->base = parser->m_curBase;"
    },
    {
        "line": 464,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 475,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 476,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 480,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 485,
        "fullcodeline": "parser->m_declEntity->notation"
    },
    {
        "line": 489,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 508,
        "fullcodeline": "if (XmlPredefinedEntityName(enc, s, next)) {"
    },
    {
        "line": 577,
        "fullcodeline": "parser->m_declNotationName"
    },
    {
        "line": 581,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 582,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 590,
        "fullcodeline": "XML_Char *tem = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 595,
        "fullcodeline": "normalizePublicId(tem);"
    },
    {
        "line": 596,
        "fullcodeline": "parser->m_declNotationPublicId = tem;"
    },
    {
        "line": 597,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 598,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 603,
        "fullcodeline": "const XML_Char *systemId = poolStoreString(&parser->m_tempPool, enc,"
    },
    {
        "line": 608,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 609,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 612,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 618,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 619,
        "fullcodeline": "parser->m_notationDeclHandler("
    },
    {
        "line": 622,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 683,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 686,
        "fullcodeline": "assert(dtd->scaffIndex != NULL);"
    },
    {
        "line": 687,
        "fullcodeline": "dtd->scaffIndex[dtd->scaffLevel] = myindex;"
    },
    {
        "line": 688,
        "fullcodeline": "dtd->scaffLevel++;"
    },
    {
        "line": 689,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_SEQ;"
    },
    {
        "line": 699,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 706,
        "fullcodeline": "&& (dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 708,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 806,
        "fullcodeline": "&& ! parser->m_notStandaloneHandler(parser->m_handlerArg))"
    },
    {
        "line": 814,
        "fullcodeline": "parser->m_declElementType = getElementType(parser, enc, s, next);"
    },
    {
        "line": 817,
        "fullcodeline": "dtd->scaffLevel = 0;"
    },
    {
        "line": 818,
        "fullcodeline": "dtd->scaffCount = 0;"
    },
    {
        "line": 819,
        "fullcodeline": "dtd->in_eldecl = XML_TRUE;"
    },
    {
        "line": 820,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 843,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 849,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel - 1]].type"
    },
    {
        "line": 872,
        "fullcodeline": "const char *nxt"
    },
    {
        "line": 874,
        "fullcodeline": "int myindex = nextScaffoldPart(parser);"
    },
    {
        "line": 877,
        "fullcodeline": "dtd->scaffold[myindex].type = XML_CTYPE_NAME;"
    },
    {
        "line": 878,
        "fullcodeline": "dtd->scaffold[myindex].quant = quant;"
    },
    {
        "line": 879,
        "fullcodeline": "el = getElementType(parser, enc, s, nxt);"
    },
    {
        "line": 882,
        "fullcodeline": "name = el->name;"
    },
    {
        "line": 883,
        "fullcodeline": "dtd->scaffold[myindex].name = name;"
    },
    {
        "line": 884,
        "fullcodeline": "nameLen = 0;"
    },
    {
        "line": 887,
        "fullcodeline": "dtd->contentStringLen += nameLen;"
    },
    {
        "line": 908,
        "fullcodeline": "dtd->scaffLevel--;"
    },
    {
        "line": 909,
        "fullcodeline": "dtd->scaffold[dtd->scaffIndex[dtd->scaffLevel]].quant = quant;"
    },
    {
        "line": 939,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 945,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 949,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 953,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 957,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 961,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 104,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 105,
        "fullcodeline": "if (! parser->m_doctypeName)"
    },
    {
        "line": 143,
        "fullcodeline": "if (! XmlIsPublicId(enc, s, next, eventPP))"
    },
    {
        "line": 148,
        "fullcodeline": "if (! pubId)"
    },
    {
        "line": 163,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 165,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 173,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_PUBLIC_ID)"
    },
    {
        "line": 320,
        "fullcodeline": "if (! poolAppendString(&parser->m_tempPool, prefix))"
    },
    {
        "line": 322,
        "fullcodeline": "if (! poolAppend(&parser->m_tempPool, enc, s, next))"
    },
    {
        "line": 331,
        "fullcodeline": "if (! defineAttribute(parser->m_declElementType,"
    },
    {
        "line": 336,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 369,
        "fullcodeline": "if (! defineAttribute("
    },
    {
        "line": 373,
        "fullcodeline": "if (parser->m_attlistDeclHandler && parser->m_declAttributeType) {"
    },
    {
        "line": 413,
        "fullcodeline": "if (result != XML_ERROR_NONE)"
    },
    {
        "line": 426,
        "fullcodeline": "if (parser->m_doctypeSysid == NULL)"
    },
    {
        "line": 459,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s + enc->minBytesPerChar,"
    },
    {
        "line": 461,
        "fullcodeline": "if (! parser->m_declEntity->systemId)"
    },
    {
        "line": 468,
        "fullcodeline": "if (parser->m_entityDeclHandler && role == XML_ROLE_ENTITY_SYSTEM_ID)"
    },
    {
        "line": 486,
        "fullcodeline": "= poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 487,
        "fullcodeline": "if (! parser->m_declEntity->notation)"
    },
    {
        "line": 509,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 513,
        "fullcodeline": "const XML_Char *name = poolStoreString(&dtd->pool, enc, s, next);"
    },
    {
        "line": 516,
        "fullcodeline": "parser->m_declEntity = (ENTITY *)lookup(parser, &dtd->generalEntities,"
    },
    {
        "line": 578,
        "fullcodeline": "= poolStoreString(&parser->m_tempPool, enc, s, next);"
    },
    {
        "line": 579,
        "fullcodeline": "if (! parser->m_declNotationName)"
    },
    {
        "line": 593,
        "fullcodeline": "if (! tem)"
    },
    {
        "line": 606,
        "fullcodeline": "if (! systemId)"
    },
    {
        "line": 684,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 705,
        "fullcodeline": "&& ! parser->m_groupConnector[parser->m_prologState.level]"
    },
    {
        "line": 815,
        "fullcodeline": "if (! parser->m_declElementType)"
    },
    {
        "line": 873,
        "fullcodeline": "= (quant == XML_CQUANT_NONE ? next : next - enc->minBytesPerChar);"
    },
    {
        "line": 875,
        "fullcodeline": "if (myindex < 0)"
    },
    {
        "line": 880,
        "fullcodeline": "if (! el)"
    },
    {
        "line": 910,
        "fullcodeline": "if (dtd->scaffLevel == 0) {"
    },
    {
        "line": 146,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 147,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 164,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 174,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 315,
        "fullcodeline": "prefix = enumValueSep;"
    },
    {
        "line": 347,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 348,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 352,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 353,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 363,
        "fullcodeline": "s + enc->minBytesPerChar, next - enc->minBytesPerChar, &dtd->pool);"
    },
    {
        "line": 384,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 385,
        "fullcodeline": "parser->m_attlistDeclHandler("
    },
    {
        "line": 389,
        "fullcodeline": "poolClear(&parser->m_tempPool);"
    },
    {
        "line": 390,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 397,
        "fullcodeline": "parser, enc, s + enc->minBytesPerChar, next - enc->minBytesPerChar);"
    },
    {
        "line": 399,
        "fullcodeline": "parser->m_declEntity->textPtr = poolStart(&dtd->entityValuePool);"
    },
    {
        "line": 400,
        "fullcodeline": "parser->m_declEntity->textLen"
    },
    {
        "line": 402,
        "fullcodeline": "poolFinish(&dtd->entityValuePool);"
    },
    {
        "line": 424,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 425,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 460,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 469,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 491,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 492,
        "fullcodeline": "parser->m_unparsedEntityDeclHandler("
    },
    {
        "line": 496,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 514,
        "fullcodeline": "if (! name)"
    },
    {
        "line": 518,
        "fullcodeline": "if (! parser->m_declEntity)"
    },
    {
        "line": 520,
        "fullcodeline": "if (parser->m_declEntity->name != name) {"
    },
    {
        "line": 536,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 537,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 591,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 592,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 604,
        "fullcodeline": "s + enc->minBytesPerChar,"
    },
    {
        "line": 605,
        "fullcodeline": "next - enc->minBytesPerChar);"
    },
    {
        "line": 691,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 711,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 828,
        "fullcodeline": "XML_Content *content"
    },
    {
        "line": 832,
        "fullcodeline": "content->quant = XML_CQUANT_NONE;"
    },
    {
        "line": 833,
        "fullcodeline": "content->name = NULL;"
    },
    {
        "line": 834,
        "fullcodeline": "content->numchildren = 0;"
    },
    {
        "line": 835,
        "fullcodeline": "content->children = NULL;"
    },
    {
        "line": 836,
        "fullcodeline": "content->type = ((role == XML_ROLE_CONTENT_ANY) ? XML_CTYPE_ANY"
    },
    {
        "line": 838,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 839,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 841,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 852,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 885,
        "fullcodeline": "for (; name[nameLen++];)"
    },
    {
        "line": 889,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 907,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 919,
        "fullcodeline": "dtd->in_eldecl = XML_FALSE;"
    },
    {
        "line": 920,
        "fullcodeline": "dtd->contentStringLen = 0;"
    },
    {
        "line": 317,
        "fullcodeline": "prefix = (role == XML_ROLE_ATTRIBUTE_NOTATION_VALUE ? notationPrefix"
    },
    {
        "line": 337,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 351,
        "fullcodeline": "role == XML_ROLE_REQUIRED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 374,
        "fullcodeline": "if (*parser->m_declAttributeType == XML_T(ASCII_LPAREN)"
    },
    {
        "line": 388,
        "fullcodeline": "attVal, role == XML_ROLE_FIXED_ATTRIBUTE_VALUE);"
    },
    {
        "line": 401,
        "fullcodeline": "= (int)(poolLength(&dtd->entityValuePool));"
    },
    {
        "line": 412,
        "fullcodeline": "poolDiscard(&dtd->entityValuePool);"
    },
    {
        "line": 521,
        "fullcodeline": "poolDiscard(&dtd->pool);"
    },
    {
        "line": 522,
        "fullcodeline": "parser->m_declEntity = NULL;"
    },
    {
        "line": 656,
        "fullcodeline": "char *const new_connector = (char *)REALLOC("
    },
    {
        "line": 662,
        "fullcodeline": "parser->m_groupConnector = new_connector;"
    },
    {
        "line": 673,
        "fullcodeline": "parser->m_groupConnector"
    },
    {
        "line": 829,
        "fullcodeline": "= (XML_Content *)MALLOC(parser, sizeof(XML_Content));"
    },
    {
        "line": 830,
        "fullcodeline": "if (! content)"
    },
    {
        "line": 911,
        "fullcodeline": "if (! handleDefault) {"
    },
    {
        "line": 338,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 345,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 375,
        "fullcodeline": "|| (*parser->m_declAttributeType == XML_T(ASCII_N)"
    },
    {
        "line": 382,
        "fullcodeline": "poolFinish(&parser->m_tempPool);"
    },
    {
        "line": 404,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 405,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 409,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 524,
        "fullcodeline": "poolFinish(&dtd->pool);"
    },
    {
        "line": 525,
        "fullcodeline": "parser->m_declEntity->publicId = NULL;"
    },
    {
        "line": 526,
        "fullcodeline": "parser->m_declEntity->is_param = XML_FALSE;"
    },
    {
        "line": 530,
        "fullcodeline": "parser->m_declEntity->is_internal"
    },
    {
        "line": 658,
        "fullcodeline": "if (new_connector == NULL) {"
    },
    {
        "line": 666,
        "fullcodeline": "int *const new_scaff_index = (int *)REALLOC("
    },
    {
        "line": 670,
        "fullcodeline": "dtd->scaffIndex = new_scaff_index;"
    },
    {
        "line": 674,
        "fullcodeline": "= (char *)MALLOC(parser, parser->m_groupSize = 32);"
    },
    {
        "line": 675,
        "fullcodeline": "if (! parser->m_groupConnector) {"
    },
    {
        "line": 912,
        "fullcodeline": "XML_Content *model = build_model(parser);"
    },
    {
        "line": 915,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 916,
        "fullcodeline": "parser->m_elementDeclHandler("
    },
    {
        "line": 339,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 341,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 376,
        "fullcodeline": "&& parser->m_declAttributeType[1] == XML_T(ASCII_O))) {"
    },
    {
        "line": 378,
        "fullcodeline": "if (! poolAppendChar(&parser->m_tempPool, XML_T(ASCII_RPAREN))"
    },
    {
        "line": 498,
        "fullcodeline": "*eventEndPP = s;"
    },
    {
        "line": 499,
        "fullcodeline": "parser->m_entityDeclHandler("
    },
    {
        "line": 503,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 531,
        "fullcodeline": "= ! (parser->m_parentParser || parser->m_openInternalEntities);"
    },
    {
        "line": 659,
        "fullcodeline": "parser->m_groupSize /= 2;"
    },
    {
        "line": 668,
        "fullcodeline": "if (new_scaff_index == NULL)"
    },
    {
        "line": 676,
        "fullcodeline": "parser->m_groupSize = 0;"
    },
    {
        "line": 913,
        "fullcodeline": "if (! model)"
    },
    {
        "line": 342,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 379,
        "fullcodeline": "|| ! poolAppendChar(&parser->m_tempPool, XML_T('\\0')))"
    },
    {
        "line": 533,
        "fullcodeline": "handleDefault = XML_FALSE;"
    },
    {
        "line": 657,
        "fullcodeline": "parser, parser->m_groupConnector, parser->m_groupSize *= 2);"
    },
    {
        "line": 667,
        "fullcodeline": "parser, dtd->scaffIndex, parser->m_groupSize * sizeof(int));"
    }
]