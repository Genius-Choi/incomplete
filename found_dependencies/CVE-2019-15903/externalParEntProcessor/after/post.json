[
    {
        "line": 3,
        "fullcodeline": "const char *next = s;"
    },
    {
        "line": 6,
        "fullcodeline": "tok = XmlPrologTok(parser->m_encoding, s, end, &next);"
    },
    {
        "line": 33,
        "fullcodeline": "parser->m_processor = prologProcessor;"
    },
    {
        "line": 7,
        "fullcodeline": "if (tok <= 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "return doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,"
    },
    {
        "line": 35,
        "fullcodeline": "(XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE);"
    },
    {
        "line": 8,
        "fullcodeline": "if (! parser->m_parsingStatus.finalBuffer && tok != XML_TOK_INVALID) {"
    },
    {
        "line": 9,
        "fullcodeline": "*nextPtr = s;"
    },
    {
        "line": 28,
        "fullcodeline": "else if (tok == XML_TOK_BOM) {"
    },
    {
        "line": 29,
        "fullcodeline": "s = next;"
    },
    {
        "line": 30,
        "fullcodeline": "tok = XmlPrologTok(parser->m_encoding, s, end, &next);"
    }
]