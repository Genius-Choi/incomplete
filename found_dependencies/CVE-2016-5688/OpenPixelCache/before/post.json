[
    {
        "line": 5,
        "fullcodeline": "*magick_restrict cache_info,"
    },
    {
        "line": 9,
        "fullcodeline": "format[MagickPathExtent],"
    },
    {
        "line": 10,
        "fullcodeline": "message[MagickPathExtent];"
    },
    {
        "line": 26,
        "fullcodeline": "assert(image != (const Image *) NULL);"
    },
    {
        "line": 27,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 28,
        "fullcodeline": "assert(image->cache != (Cache) NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "cache_info=(CacheInfo *) image->cache;"
    },
    {
        "line": 34,
        "fullcodeline": "assert(cache_info->signature == MagickCoreSignature);"
    },
    {
        "line": 40,
        "fullcodeline": "source_info.file=(-1);"
    },
    {
        "line": 41,
        "fullcodeline": "(void) FormatLocaleString(cache_info->filename,MagickPathExtent,\"%s[%.20g]\","
    },
    {
        "line": 43,
        "fullcodeline": "cache_info->storage_class=image->storage_class;"
    },
    {
        "line": 44,
        "fullcodeline": "cache_info->colorspace=image->colorspace;"
    },
    {
        "line": 45,
        "fullcodeline": "cache_info->alpha_trait=image->alpha_trait;"
    },
    {
        "line": 46,
        "fullcodeline": "cache_info->read_mask=image->read_mask;"
    },
    {
        "line": 47,
        "fullcodeline": "cache_info->write_mask=image->write_mask;"
    },
    {
        "line": 48,
        "fullcodeline": "cache_info->rows=image->rows;"
    },
    {
        "line": 49,
        "fullcodeline": "cache_info->columns=image->columns;"
    },
    {
        "line": 50,
        "fullcodeline": "InitializePixelChannelMap(image);"
    },
    {
        "line": 51,
        "fullcodeline": "cache_info->number_channels=GetPixelChannels(image);"
    },
    {
        "line": 52,
        "fullcodeline": "(void) memcpy(cache_info->channel_map,image->channel_map,MaxPixelChannels*"
    },
    {
        "line": 54,
        "fullcodeline": "cache_info->metacontent_extent=image->metacontent_extent;"
    },
    {
        "line": 55,
        "fullcodeline": "cache_info->mode=mode;"
    },
    {
        "line": 56,
        "fullcodeline": "number_pixels=(MagickSizeType) cache_info->columns*cache_info->rows;"
    },
    {
        "line": 57,
        "fullcodeline": "packet_size=cache_info->number_channels*sizeof(Quantum);"
    },
    {
        "line": 60,
        "fullcodeline": "length=number_pixels*packet_size;"
    },
    {
        "line": 61,
        "fullcodeline": "columns=(size_t) (length/cache_info->rows/packet_size);"
    },
    {
        "line": 66,
        "fullcodeline": "cache_info->length=length;"
    },
    {
        "line": 74,
        "fullcodeline": "status=AcquireMagickResource(AreaResource,cache_info->length);"
    },
    {
        "line": 75,
        "fullcodeline": "length=number_pixels*(cache_info->number_channels*sizeof(Quantum)+"
    },
    {
        "line": 129,
        "fullcodeline": "status=AcquireMagickResource(DiskResource,cache_info->length);"
    },
    {
        "line": 202,
        "fullcodeline": "status=SetPixelCacheExtent(image,(MagickSizeType) cache_info->offset+"
    },
    {
        "line": 210,
        "fullcodeline": "length=number_pixels*(cache_info->number_channels*sizeof(Quantum)+"
    },
    {
        "line": 269,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 29,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 31,
        "fullcodeline": "if ((image->columns == 0) || (image->rows == 0))"
    },
    {
        "line": 35,
        "fullcodeline": "if ((AcquireMagickResource(WidthResource,image->columns) == MagickFalse) ||"
    },
    {
        "line": 58,
        "fullcodeline": "if (image->metacontent_extent != 0)"
    },
    {
        "line": 62,
        "fullcodeline": "if ((cache_info->columns != columns) || ((ssize_t) cache_info->columns < 0) ||"
    },
    {
        "line": 67,
        "fullcodeline": "if (image->ping != MagickFalse)"
    },
    {
        "line": 77,
        "fullcodeline": "if ((status != MagickFalse) && (length == (MagickSizeType) ((size_t) length)))"
    },
    {
        "line": 130,
        "fullcodeline": "if ((status == MagickFalse) || (cache_info->type == DistributedCache))"
    },
    {
        "line": 190,
        "fullcodeline": "if ((source_info.storage_class != UndefinedClass) && (mode != ReadMode))"
    },
    {
        "line": 195,
        "fullcodeline": "if (OpenPixelCacheOnDisk(cache_info,mode) == MagickFalse)"
    },
    {
        "line": 204,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 212,
        "fullcodeline": "if (length != (MagickSizeType) ((size_t) length))"
    },
    {
        "line": 270,
        "fullcodeline": "if ((source_info.storage_class != UndefinedClass) && (mode != ReadMode))"
    },
    {
        "line": 275,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 30,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 32,
        "fullcodeline": "ThrowBinaryException(CacheError,\"NoPixelsDefinedInCache\",image->filename);"
    },
    {
        "line": 36,
        "fullcodeline": "(AcquireMagickResource(HeightResource,image->rows) == MagickFalse))"
    },
    {
        "line": 37,
        "fullcodeline": "ThrowBinaryException(ImageError,\"WidthOrHeightExceedsLimit\","
    },
    {
        "line": 42,
        "fullcodeline": "image->filename,(double) GetImageIndexInList(image));"
    },
    {
        "line": 59,
        "fullcodeline": "packet_size+=cache_info->metacontent_extent;"
    },
    {
        "line": 63,
        "fullcodeline": "((ssize_t) cache_info->rows < 0))"
    },
    {
        "line": 64,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"PixelCacheAllocationFailed\","
    },
    {
        "line": 69,
        "fullcodeline": "cache_info->storage_class=image->storage_class;"
    },
    {
        "line": 70,
        "fullcodeline": "cache_info->colorspace=image->colorspace;"
    },
    {
        "line": 71,
        "fullcodeline": "cache_info->type=PingCache;"
    },
    {
        "line": 79,
        "fullcodeline": "status=AcquireMagickResource(MemoryResource,cache_info->length);"
    },
    {
        "line": 124,
        "fullcodeline": "RelinquishMagickResource(MemoryResource,cache_info->length);"
    },
    {
        "line": 137,
        "fullcodeline": "server_info=AcquireDistributeCacheInfo(exception);"
    },
    {
        "line": 185,
        "fullcodeline": "RelinquishMagickResource(DiskResource,cache_info->length);"
    },
    {
        "line": 186,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),CacheError,"
    },
    {
        "line": 192,
        "fullcodeline": "(void) ClosePixelCacheOnDisk(cache_info);"
    },
    {
        "line": 193,
        "fullcodeline": "*cache_info->cache_filename='\\0';"
    },
    {
        "line": 197,
        "fullcodeline": "RelinquishMagickResource(DiskResource,cache_info->length);"
    },
    {
        "line": 198,
        "fullcodeline": "ThrowFileException(exception,CacheError,\"UnableToOpenPixelCache\","
    },
    {
        "line": 206,
        "fullcodeline": "ThrowFileException(exception,CacheError,\"UnableToExtendCache\","
    },
    {
        "line": 213,
        "fullcodeline": "cache_info->type=DiskCache;"
    },
    {
        "line": 272,
        "fullcodeline": "status=ClonePixelCacheRepository(cache_info,&source_info,exception);"
    },
    {
        "line": 273,
        "fullcodeline": "RelinquishPixelCachePixels(&source_info);"
    },
    {
        "line": 277,
        "fullcodeline": "(void) FormatMagickSize(cache_info->length,MagickFalse,\"B\","
    },
    {
        "line": 279,
        "fullcodeline": "type=CommandOptionToMnemonic(MagickCacheOptions,(ssize_t)"
    },
    {
        "line": 281,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,"
    },
    {
        "line": 286,
        "fullcodeline": "(void) LogMagickEvent(CacheEvent,GetMagickModule(),\"%s\",message);"
    },
    {
        "line": 80,
        "fullcodeline": "if (((cache_info->type == UndefinedCache) && (status != MagickFalse)) ||"
    },
    {
        "line": 135,
        "fullcodeline": "if (cache_info->type == DistributedCache)"
    },
    {
        "line": 138,
        "fullcodeline": "if (server_info != (DistributeCacheInfo *) NULL)"
    },
    {
        "line": 216,
        "fullcodeline": "status=AcquireMagickResource(MapResource,cache_info->length);"
    },
    {
        "line": 267,
        "fullcodeline": "RelinquishMagickResource(MapResource,cache_info->length);"
    },
    {
        "line": 81,
        "fullcodeline": "(cache_info->type == MemoryCache))"
    },
    {
        "line": 83,
        "fullcodeline": "cache_info->mapped=MagickFalse;"
    },
    {
        "line": 84,
        "fullcodeline": "cache_info->pixels=(Quantum *) MagickAssumeAligned("
    },
    {
        "line": 136,
        "fullcodeline": "RelinquishMagickResource(DiskResource,cache_info->length);"
    },
    {
        "line": 140,
        "fullcodeline": "status=OpenDistributePixelCache(server_info,image);"
    },
    {
        "line": 217,
        "fullcodeline": "if ((status == MagickFalse) && (cache_info->type != MapCache) &&"
    },
    {
        "line": 283,
        "fullcodeline": "cache_info->cache_filename,cache_info->file,type,(double)"
    },
    {
        "line": 284,
        "fullcodeline": "cache_info->columns,(double) cache_info->rows,(double)"
    },
    {
        "line": 86,
        "fullcodeline": "if (cache_info->pixels == (Quantum *) NULL)"
    },
    {
        "line": 141,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 218,
        "fullcodeline": "(cache_info->type != MemoryCache))"
    },
    {
        "line": 219,
        "fullcodeline": "cache_info->type=DiskCache;"
    },
    {
        "line": 87,
        "fullcodeline": "cache_info->pixels=source_info.pixels;"
    },
    {
        "line": 143,
        "fullcodeline": "ThrowFileException(exception,CacheError,\"UnableToOpenPixelCache\","
    },
    {
        "line": 145,
        "fullcodeline": "server_info=DestroyDistributeCacheInfo(server_info);"
    },
    {
        "line": 222,
        "fullcodeline": "cache_info->pixels=(Quantum *) MapBlob(cache_info->file,mode,"
    },
    {
        "line": 85,
        "fullcodeline": "AcquireAlignedMemory(1,(size_t) cache_info->length));"
    },
    {
        "line": 93,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 94,
        "fullcodeline": "cache_info->type=MemoryCache;"
    },
    {
        "line": 95,
        "fullcodeline": "cache_info->metacontent=(void *) NULL;"
    },
    {
        "line": 144,
        "fullcodeline": "GetDistributeCacheHostname(server_info));"
    },
    {
        "line": 152,
        "fullcodeline": "cache_info->type=DistributedCache;"
    },
    {
        "line": 153,
        "fullcodeline": "cache_info->server_info=server_info;"
    },
    {
        "line": 154,
        "fullcodeline": "(void) FormatLocaleString(cache_info->cache_filename,"
    },
    {
        "line": 224,
        "fullcodeline": "if (cache_info->pixels == (Quantum *) NULL)"
    },
    {
        "line": 96,
        "fullcodeline": "if (cache_info->metacontent_extent != 0)"
    },
    {
        "line": 99,
        "fullcodeline": "if ((source_info.storage_class != UndefinedClass) &&"
    },
    {
        "line": 106,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 159,
        "fullcodeline": "if ((source_info.storage_class != UndefinedClass) &&"
    },
    {
        "line": 166,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 226,
        "fullcodeline": "cache_info->type=DiskCache;"
    },
    {
        "line": 227,
        "fullcodeline": "cache_info->pixels=source_info.pixels;"
    },
    {
        "line": 97,
        "fullcodeline": "cache_info->metacontent=(void *) (cache_info->pixels+"
    },
    {
        "line": 100,
        "fullcodeline": "(mode != ReadMode))"
    },
    {
        "line": 102,
        "fullcodeline": "status=ClonePixelCacheRepository(cache_info,&source_info,"
    },
    {
        "line": 104,
        "fullcodeline": "RelinquishPixelCachePixels(&source_info);"
    },
    {
        "line": 108,
        "fullcodeline": "(void) FormatMagickSize(cache_info->length,MagickTrue,\"B\","
    },
    {
        "line": 110,
        "fullcodeline": "type=CommandOptionToMnemonic(MagickCacheOptions,(ssize_t)"
    },
    {
        "line": 112,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,"
    },
    {
        "line": 118,
        "fullcodeline": "(void) LogMagickEvent(CacheEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 155,
        "fullcodeline": "MagickPathExtent,\"%s:%d\",GetDistributeCacheHostname("
    },
    {
        "line": 157,
        "fullcodeline": "GetDistributeCachePort((DistributeCacheInfo *)"
    },
    {
        "line": 160,
        "fullcodeline": "(mode != ReadMode))"
    },
    {
        "line": 162,
        "fullcodeline": "status=ClonePixelCacheRepository(cache_info,&source_info,"
    },
    {
        "line": 164,
        "fullcodeline": "RelinquishPixelCachePixels(&source_info);"
    },
    {
        "line": 168,
        "fullcodeline": "(void) FormatMagickSize(cache_info->length,MagickFalse,\"B\","
    },
    {
        "line": 170,
        "fullcodeline": "type=CommandOptionToMnemonic(MagickCacheOptions,(ssize_t)"
    },
    {
        "line": 172,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,"
    },
    {
        "line": 179,
        "fullcodeline": "(void) LogMagickEvent(CacheEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 223,
        "fullcodeline": "cache_info->offset,(size_t) cache_info->length);"
    },
    {
        "line": 234,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 235,
        "fullcodeline": "(void) ClosePixelCacheOnDisk(cache_info);"
    },
    {
        "line": 236,
        "fullcodeline": "cache_info->type=MapCache;"
    },
    {
        "line": 237,
        "fullcodeline": "cache_info->mapped=MagickTrue;"
    },
    {
        "line": 238,
        "fullcodeline": "cache_info->metacontent=(void *) NULL;"
    },
    {
        "line": 156,
        "fullcodeline": "(DistributeCacheInfo *) cache_info->server_info),"
    },
    {
        "line": 239,
        "fullcodeline": "if (cache_info->metacontent_extent != 0)"
    },
    {
        "line": 242,
        "fullcodeline": "if ((source_info.storage_class != UndefinedClass) &&"
    },
    {
        "line": 249,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 114,
        "fullcodeline": "cache_info->filename,cache_info->mapped != MagickFalse ?"
    },
    {
        "line": 115,
        "fullcodeline": "\"Anonymous\" : \"Heap\",type,(double) cache_info->columns,"
    },
    {
        "line": 116,
        "fullcodeline": "(double) cache_info->rows,(double)"
    },
    {
        "line": 175,
        "fullcodeline": "GetDistributeCacheFile((DistributeCacheInfo *)"
    },
    {
        "line": 176,
        "fullcodeline": "cache_info->server_info),type,(double) cache_info->columns,"
    },
    {
        "line": 177,
        "fullcodeline": "(double) cache_info->rows,(double)"
    },
    {
        "line": 240,
        "fullcodeline": "cache_info->metacontent=(void *) (cache_info->pixels+"
    },
    {
        "line": 243,
        "fullcodeline": "(mode != ReadMode))"
    },
    {
        "line": 245,
        "fullcodeline": "status=ClonePixelCacheRepository(cache_info,&source_info,"
    },
    {
        "line": 247,
        "fullcodeline": "RelinquishPixelCachePixels(&source_info);"
    },
    {
        "line": 251,
        "fullcodeline": "(void) FormatMagickSize(cache_info->length,MagickTrue,\"B\","
    },
    {
        "line": 253,
        "fullcodeline": "type=CommandOptionToMnemonic(MagickCacheOptions,(ssize_t)"
    },
    {
        "line": 255,
        "fullcodeline": "(void) FormatLocaleString(message,MagickPathExtent,"
    },
    {
        "line": 261,
        "fullcodeline": "(void) LogMagickEvent(CacheEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 98,
        "fullcodeline": "number_pixels*cache_info->number_channels);"
    },
    {
        "line": 258,
        "fullcodeline": "cache_info->file,type,(double) cache_info->columns,(double)"
    },
    {
        "line": 259,
        "fullcodeline": "cache_info->rows,(double) cache_info->number_channels,"
    },
    {
        "line": 241,
        "fullcodeline": "number_pixels*cache_info->number_channels);"
    }
]