[
    {
        "line": 3,
        "fullcodeline": "int ret_sz = 0, i, k, rem_sz, num, mx_sc_elems;"
    },
    {
        "line": 4,
        "fullcodeline": "int sg_tablesize = sfp->parentdp->sg_tablesize;"
    },
    {
        "line": 5,
        "fullcodeline": "int blk_size = buff_size, order;"
    },
    {
        "line": 6,
        "fullcodeline": "gfp_t gfp_mask = GFP_ATOMIC | __GFP_COMP | __GFP_NOWARN;"
    },
    {
        "line": 7,
        "fullcodeline": "struct sg_device *sdp = sfp->parentdp;"
    },
    {
        "line": 14,
        "fullcodeline": "blk_size = ALIGN(blk_size, SG_SECTOR_SZ);"
    },
    {
        "line": 20,
        "fullcodeline": "mx_sc_elems = sg_build_sgat(schp, sfp, sg_tablesize);"
    },
    {
        "line": 24,
        "fullcodeline": "num = scatter_elem_sz;"
    },
    {
        "line": 39,
        "fullcodeline": "order = get_order(num);"
    },
    {
        "line": 41,
        "fullcodeline": "ret_sz = 1 << (PAGE_SHIFT + order);"
    },
    {
        "line": 9,
        "fullcodeline": "if (blk_size < 0)"
    },
    {
        "line": 11,
        "fullcodeline": "if (0 == blk_size)"
    },
    {
        "line": 15,
        "fullcodeline": "SCSI_LOG_TIMEOUT(4, sg_printk(KERN_INFO, sfp->parentdp,"
    },
    {
        "line": 21,
        "fullcodeline": "if (mx_sc_elems < 0)"
    },
    {
        "line": 67,
        "fullcodeline": "SCSI_LOG_TIMEOUT(5, sg_printk(KERN_INFO, sfp->parentdp,"
    },
    {
        "line": 76,
        "fullcodeline": "for (i = 0; i < k; i++)"
    },
    {
        "line": 77,
        "fullcodeline": "__free_pages(schp->pages[i], order);"
    },
    {
        "line": 82,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 12,
        "fullcodeline": "++blk_size;\t/* don't know why */"
    },
    {
        "line": 25,
        "fullcodeline": "if (unlikely(num != scatter_elem_sz_prev)) {"
    },
    {
        "line": 34,
        "fullcodeline": "gfp_mask |= GFP_DMA;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!capable(CAP_SYS_ADMIN) || !capable(CAP_SYS_RAWIO))"
    },
    {
        "line": 37,
        "fullcodeline": "gfp_mask |= __GFP_ZERO;"
    },
    {
        "line": 43,
        "fullcodeline": "for (k = 0, rem_sz = blk_size; rem_sz > 0 && k < mx_sc_elems;"
    },
    {
        "line": 44,
        "fullcodeline": "k++, rem_sz -= ret_sz) {"
    },
    {
        "line": 46,
        "fullcodeline": "num = (rem_sz > scatter_elem_sz_prev) ?"
    },
    {
        "line": 49,
        "fullcodeline": "schp->pages[k] = alloc_pages(gfp_mask, order);"
    },
    {
        "line": 79,
        "fullcodeline": "if (--order >= 0)"
    },
    {
        "line": 10,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 26,
        "fullcodeline": "if (num < PAGE_SIZE) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (num == scatter_elem_sz_prev) {"
    },
    {
        "line": 60,
        "fullcodeline": "SCSI_LOG_TIMEOUT(5, sg_printk(KERN_INFO, sfp->parentdp,"
    },
    {
        "line": 73,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 28,
        "fullcodeline": "scatter_elem_sz_prev = PAGE_SIZE;"
    },
    {
        "line": 30,
        "fullcodeline": "scatter_elem_sz_prev = num;"
    },
    {
        "line": 54,
        "fullcodeline": "if (unlikely(ret_sz > scatter_elem_sz_prev)) {"
    },
    {
        "line": 56,
        "fullcodeline": "scatter_elem_sz_prev = ret_sz;"
    }
]