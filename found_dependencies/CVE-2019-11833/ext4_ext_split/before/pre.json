[
    {
        "line": 6,
        "fullcodeline": "struct buffer_head *bh = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "int depth = ext_depth(inode);"
    },
    {
        "line": 10,
        "fullcodeline": "int i = at, k, m, a;"
    },
    {
        "line": 13,
        "fullcodeline": "ext4_fsblk_t *ablocks = NULL; /* array of allocated blocks */"
    },
    {
        "line": 14,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "ablocks = kcalloc(depth, sizeof(ext4_fsblk_t), GFP_NOFS);"
    },
    {
        "line": 64,
        "fullcodeline": "newblock = ablocks[--a];"
    },
    {
        "line": 70,
        "fullcodeline": "bh = sb_getblk_gfp(inode->i_sb, newblock, __GFP_MOVABLE | GFP_NOFS);"
    },
    {
        "line": 75,
        "fullcodeline": "lock_buffer(bh);"
    },
    {
        "line": 77,
        "fullcodeline": "err = ext4_journal_get_create_access(handle, bh);"
    },
    {
        "line": 81,
        "fullcodeline": "neh = ext_block_hdr(bh);"
    },
    {
        "line": 82,
        "fullcodeline": "neh->eh_entries = 0;"
    },
    {
        "line": 83,
        "fullcodeline": "neh->eh_max = cpu_to_le16(ext4_ext_space_block(inode, 0));"
    },
    {
        "line": 84,
        "fullcodeline": "neh->eh_magic = EXT4_EXT_MAGIC;"
    },
    {
        "line": 85,
        "fullcodeline": "neh->eh_depth = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "m = EXT_MAX_EXTENT(path[depth].p_hdr) - path[depth].p_ext++;"
    },
    {
        "line": 98,
        "fullcodeline": "ext4_ext_show_move(inode, path, newblock, depth);"
    },
    {
        "line": 106,
        "fullcodeline": "ext4_extent_block_csum_set(inode, neh);"
    },
    {
        "line": 107,
        "fullcodeline": "set_buffer_uptodate(bh);"
    },
    {
        "line": 108,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 110,
        "fullcodeline": "err = ext4_handle_dirty_metadata(handle, inode, bh);"
    },
    {
        "line": 114,
        "fullcodeline": "bh = NULL;"
    },
    {
        "line": 129,
        "fullcodeline": "k = depth - at - 1;"
    },
    {
        "line": 139,
        "fullcodeline": "i = depth - 1;"
    },
    {
        "line": 210,
        "fullcodeline": "err = ext4_ext_insert_index(handle, inode, path + at,"
    },
    {
        "line": 21,
        "fullcodeline": "if (unlikely(path[depth].p_ext > EXT_MAX_EXTENT(path[depth].p_hdr))) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!ablocks)"
    },
    {
        "line": 54,
        "fullcodeline": "ext_debug(\"allocate %d blocks for indexes/leaf\\n\", depth - at);"
    },
    {
        "line": 55,
        "fullcodeline": "for (a = 0; a < depth - at; a++) {"
    },
    {
        "line": 22,
        "fullcodeline": "EXT4_ERROR_INODE(inode, \"p_ext > EXT_MAX_EXTENT!\");"
    },
    {
        "line": 25,
        "fullcodeline": "if (path[depth].p_ext != EXT_MAX_EXTENT(path[depth].p_hdr)) {"
    },
    {
        "line": 26,
        "fullcodeline": "border = path[depth].p_ext[1].ee_block;"
    },
    {
        "line": 56,
        "fullcodeline": "newblock = ext4_ext_new_meta_block(handle, inode, path,"
    },
    {
        "line": 60,
        "fullcodeline": "ablocks[a] = newblock;"
    },
    {
        "line": 65,
        "fullcodeline": "if (unlikely(newblock == 0)) {"
    },
    {
        "line": 66,
        "fullcodeline": "EXT4_ERROR_INODE(inode, \"newblock == 0!\");"
    },
    {
        "line": 67,
        "fullcodeline": "err = -EFSCORRUPTED;"
    },
    {
        "line": 71,
        "fullcodeline": "if (unlikely(!bh)) {"
    },
    {
        "line": 72,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 88,
        "fullcodeline": "if (unlikely(path[depth].p_hdr->eh_entries !="
    },
    {
        "line": 90,
        "fullcodeline": "EXT4_ERROR_INODE(inode, \"eh_entries %d != eh_max %d!\","
    },
    {
        "line": 93,
        "fullcodeline": "err = -EFSCORRUPTED;"
    },
    {
        "line": 101,
        "fullcodeline": "ex = EXT_FIRST_EXTENT(neh);"
    },
    {
        "line": 103,
        "fullcodeline": "le16_add_cpu(&neh->eh_entries, m);"
    },
    {
        "line": 118,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 122,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + depth);"
    },
    {
        "line": 130,
        "fullcodeline": "if (unlikely(k < 0)) {"
    },
    {
        "line": 131,
        "fullcodeline": "EXT4_ERROR_INODE(inode, \"k %d < 0!\", k);"
    },
    {
        "line": 132,
        "fullcodeline": "err = -EFSCORRUPTED;"
    },
    {
        "line": 136,
        "fullcodeline": "ext_debug(\"create %d intermediate indices\\n\", k);"
    },
    {
        "line": 141,
        "fullcodeline": "oldblock = newblock;"
    },
    {
        "line": 142,
        "fullcodeline": "newblock = ablocks[--a];"
    },
    {
        "line": 143,
        "fullcodeline": "bh = sb_getblk(inode->i_sb, newblock);"
    },
    {
        "line": 148,
        "fullcodeline": "lock_buffer(bh);"
    },
    {
        "line": 150,
        "fullcodeline": "err = ext4_journal_get_create_access(handle, bh);"
    },
    {
        "line": 154,
        "fullcodeline": "neh = ext_block_hdr(bh);"
    },
    {
        "line": 155,
        "fullcodeline": "neh->eh_entries = cpu_to_le16(1);"
    },
    {
        "line": 156,
        "fullcodeline": "neh->eh_magic = EXT4_EXT_MAGIC;"
    },
    {
        "line": 157,
        "fullcodeline": "neh->eh_max = cpu_to_le16(ext4_ext_space_block_idx(inode, 0));"
    },
    {
        "line": 158,
        "fullcodeline": "neh->eh_depth = cpu_to_le16(depth - i);"
    },
    {
        "line": 159,
        "fullcodeline": "fidx = EXT_FIRST_INDEX(neh);"
    },
    {
        "line": 160,
        "fullcodeline": "fidx->ei_block = border;"
    },
    {
        "line": 161,
        "fullcodeline": "ext4_idx_store_pblock(fidx, oldblock);"
    },
    {
        "line": 163,
        "fullcodeline": "ext_debug(\"int.index at %d (block %llu): %u -> %llu\\n\","
    },
    {
        "line": 176,
        "fullcodeline": "m = EXT_MAX_INDEX(path[i].p_hdr) - path[i].p_idx++;"
    },
    {
        "line": 179,
        "fullcodeline": "ext4_ext_show_move(inode, path, newblock, i);"
    },
    {
        "line": 185,
        "fullcodeline": "ext4_extent_block_csum_set(inode, neh);"
    },
    {
        "line": 186,
        "fullcodeline": "set_buffer_uptodate(bh);"
    },
    {
        "line": 187,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 189,
        "fullcodeline": "err = ext4_handle_dirty_metadata(handle, inode, bh);"
    },
    {
        "line": 193,
        "fullcodeline": "bh = NULL;"
    },
    {
        "line": 206,
        "fullcodeline": "i--;"
    },
    {
        "line": 211,
        "fullcodeline": "le32_to_cpu(border), newblock);"
    },
    {
        "line": 23,
        "fullcodeline": "return -EFSCORRUPTED;"
    },
    {
        "line": 29,
        "fullcodeline": "le32_to_cpu(border));"
    },
    {
        "line": 31,
        "fullcodeline": "border = newext->ee_block;"
    },
    {
        "line": 51,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 58,
        "fullcodeline": "if (newblock == 0)"
    },
    {
        "line": 102,
        "fullcodeline": "memmove(ex, path[depth].p_ext, sizeof(struct ext4_extent) * m);"
    },
    {
        "line": 121,
        "fullcodeline": "le16_add_cpu(&path[depth].p_hdr->eh_entries, -m);"
    },
    {
        "line": 164,
        "fullcodeline": "i, newblock, le32_to_cpu(border), oldblock);"
    },
    {
        "line": 178,
        "fullcodeline": "EXT_MAX_INDEX(path[i].p_hdr));"
    },
    {
        "line": 215,
        "fullcodeline": "if (buffer_locked(bh))"
    },
    {
        "line": 222,
        "fullcodeline": "for (i = 0; i < depth; i++) {"
    },
    {
        "line": 34,
        "fullcodeline": "le32_to_cpu(border));"
    },
    {
        "line": 144,
        "fullcodeline": "if (unlikely(!bh)) {"
    },
    {
        "line": 145,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 167,
        "fullcodeline": "if (unlikely(EXT_MAX_INDEX(path[i].p_hdr) !="
    },
    {
        "line": 169,
        "fullcodeline": "EXT4_ERROR_INODE(inode,"
    },
    {
        "line": 172,
        "fullcodeline": "err = -EFSCORRUPTED;"
    },
    {
        "line": 183,
        "fullcodeline": "le16_add_cpu(&neh->eh_entries, m);"
    },
    {
        "line": 197,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + i);"
    },
    {
        "line": 200,
        "fullcodeline": "le16_add_cpu(&path[i].p_hdr->eh_entries, -m);"
    },
    {
        "line": 201,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + i);"
    },
    {
        "line": 216,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 225,
        "fullcodeline": "ext4_free_blocks(handle, inode, NULL, ablocks[i], 1,"
    },
    {
        "line": 168,
        "fullcodeline": "EXT_LAST_INDEX(path[i].p_hdr))) {"
    },
    {
        "line": 171,
        "fullcodeline": "le32_to_cpu(path[i].p_ext->ee_block));"
    },
    {
        "line": 181,
        "fullcodeline": "memmove(++fidx, path[i].p_idx,"
    },
    {
        "line": 182,
        "fullcodeline": "sizeof(struct ext4_extent_idx) * m);"
    },
    {
        "line": 223,
        "fullcodeline": "if (!ablocks[i])"
    }
]