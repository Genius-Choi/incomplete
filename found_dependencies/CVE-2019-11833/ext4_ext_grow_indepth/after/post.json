[
    {
        "line": 6,
        "fullcodeline": "ext4_fsblk_t newblock, goal = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "size_t ext_size = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "newblock = ext4_new_meta_blocks(handle, inode, goal, flags,"
    },
    {
        "line": 24,
        "fullcodeline": "bh = sb_getblk_gfp(inode->i_sb, newblock, __GFP_MOVABLE | GFP_NOFS);"
    },
    {
        "line": 27,
        "fullcodeline": "lock_buffer(bh);"
    },
    {
        "line": 29,
        "fullcodeline": "err = ext4_journal_get_create_access(handle, bh);"
    },
    {
        "line": 37,
        "fullcodeline": "memmove(bh->b_data, EXT4_I(inode)->i_data, ext_size);"
    },
    {
        "line": 39,
        "fullcodeline": "memset(bh->b_data + ext_size, 0, inode->i_sb->s_blocksize - ext_size);"
    },
    {
        "line": 42,
        "fullcodeline": "neh = ext_block_hdr(bh);"
    },
    {
        "line": 49,
        "fullcodeline": "neh->eh_magic = EXT4_EXT_MAGIC;"
    },
    {
        "line": 50,
        "fullcodeline": "ext4_extent_block_csum_set(inode, neh);"
    },
    {
        "line": 51,
        "fullcodeline": "set_buffer_uptodate(bh);"
    },
    {
        "line": 52,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 54,
        "fullcodeline": "err = ext4_handle_dirty_metadata(handle, inode, bh);"
    },
    {
        "line": 59,
        "fullcodeline": "neh = ext_inode_hdr(inode);"
    },
    {
        "line": 60,
        "fullcodeline": "neh->eh_entries = cpu_to_le16(1);"
    },
    {
        "line": 61,
        "fullcodeline": "ext4_idx_store_pblock(EXT_FIRST_INDEX(neh), newblock);"
    },
    {
        "line": 68,
        "fullcodeline": "ext_debug(\"new root: num %d(%d), lblock %d, ptr %llu\\n\","
    },
    {
        "line": 73,
        "fullcodeline": "le16_add_cpu(&neh->eh_depth, 1);"
    },
    {
        "line": 74,
        "fullcodeline": "ext4_mark_inode_dirty(handle, inode);"
    },
    {
        "line": 76,
        "fullcodeline": "brelse(bh);"
    },
    {
        "line": 12,
        "fullcodeline": "if (ext_depth(inode))"
    },
    {
        "line": 14,
        "fullcodeline": "if (goal > le32_to_cpu(es->s_first_data_block)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (newblock == 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (unlikely(!bh))"
    },
    {
        "line": 45,
        "fullcodeline": "if (ext_depth(inode))"
    },
    {
        "line": 62,
        "fullcodeline": "if (neh->eh_depth == 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "le16_to_cpu(neh->eh_entries), le16_to_cpu(neh->eh_max),"
    },
    {
        "line": 70,
        "fullcodeline": "le32_to_cpu(EXT_FIRST_INDEX(neh)->ei_block),"
    },
    {
        "line": 71,
        "fullcodeline": "ext4_idx_pblock(EXT_FIRST_INDEX(neh)));"
    },
    {
        "line": 7,
        "fullcodeline": "struct ext4_super_block *es = EXT4_SB(inode->i_sb)->s_es;"
    },
    {
        "line": 13,
        "fullcodeline": "goal = ext4_idx_pblock(EXT_FIRST_INDEX(ext_inode_hdr(inode)));"
    },
    {
        "line": 15,
        "fullcodeline": "flags |= EXT4_MB_HINT_TRY_GOAL;"
    },
    {
        "line": 16,
        "fullcodeline": "goal--;"
    },
    {
        "line": 31,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 46,
        "fullcodeline": "neh->eh_max = cpu_to_le16(ext4_ext_space_block_idx(inode, 0));"
    },
    {
        "line": 64,
        "fullcodeline": "neh->eh_max = cpu_to_le16(ext4_ext_space_root_idx(inode, 0));"
    },
    {
        "line": 18,
        "fullcodeline": "goal = ext4_inode_to_goal_block(inode);"
    },
    {
        "line": 26,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 35,
        "fullcodeline": "ext_size = sizeof(EXT4_I(inode)->i_data);"
    },
    {
        "line": 48,
        "fullcodeline": "neh->eh_max = cpu_to_le16(ext4_ext_space_block(inode, 0));"
    },
    {
        "line": 65,
        "fullcodeline": "EXT_FIRST_INDEX(neh)->ei_block ="
    },
    {
        "line": 66,
        "fullcodeline": "EXT_FIRST_EXTENT(neh)->ee_block;"
    }
]