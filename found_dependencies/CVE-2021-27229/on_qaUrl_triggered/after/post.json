[
    {
        "line": 2,
        "fullcodeline": "auto *si = static_cast< const ServerItem * >(qtwServers->currentItem());"
    },
    {
        "line": 7,
        "fullcodeline": "const QStringList allowedSchemes = { QLatin1String(\"http\"), QLatin1String(\"https\") };"
    },
    {
        "line": 9,
        "fullcodeline": "const auto url = QUrl(si->qsUrl);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!si || si->qsUrl.isEmpty()) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (allowedSchemes.contains(url.scheme())) {"
    },
    {
        "line": 11,
        "fullcodeline": "QDesktopServices::openUrl(url);"
    },
    {
        "line": 15,
        "fullcodeline": "msgBox.setText(QObject::tr(\"<b>Blocked URL scheme \\\"%1\\\"</b>\").arg(url.scheme()));"
    },
    {
        "line": 16,
        "fullcodeline": "msgBox.setInformativeText(QObject::tr(\"The URL uses a scheme that has been blocked for security reasons.\"));"
    },
    {
        "line": 17,
        "fullcodeline": "msgBox.setDetailedText(QObject::tr(\"Blocked URL: \\\"%1\\\"\").arg(url.toString()));"
    },
    {
        "line": 18,
        "fullcodeline": "msgBox.setIcon(QMessageBox::Warning);"
    },
    {
        "line": 19,
        "fullcodeline": "msgBox.exec();"
    }
]