[
    {
        "line": 3,
        "fullcodeline": "const struct net_device_ops *ops = dev->netdev_ops;"
    },
    {
        "line": 6,
        "fullcodeline": "ASSERT_RTNL();"
    },
    {
        "line": 14,
        "fullcodeline": "ret = call_netdevice_notifiers(NETDEV_PRE_UP, dev);"
    },
    {
        "line": 15,
        "fullcodeline": "ret = notifier_to_errno(ret);"
    },
    {
        "line": 22,
        "fullcodeline": "set_bit(__LINK_STATE_START, &dev->state);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!netif_device_present(dev))"
    },
    {
        "line": 27,
        "fullcodeline": "if (!ret && ops->ndo_open)"
    },
    {
        "line": 25,
        "fullcodeline": "ret = ops->ndo_validate_addr(dev);"
    },
    {
        "line": 28,
        "fullcodeline": "ret = ops->ndo_open(dev);"
    },
    {
        "line": 35,
        "fullcodeline": "clear_bit(__LINK_STATE_START, &dev->state);"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 40,
        "fullcodeline": "dev->flags |= IFF_UP;"
    },
    {
        "line": 45,
        "fullcodeline": "net_dmaengine_get();"
    },
    {
        "line": 50,
        "fullcodeline": "dev_set_rx_mode(dev);"
    },
    {
        "line": 55,
        "fullcodeline": "dev_activate(dev);"
    }
]