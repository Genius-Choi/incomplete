[
    {
        "line": 3,
        "fullcodeline": "unsigned char code_verifier_hash[32] = {0}, code_verifier_hash_b64[64] = {0};"
    },
    {
        "line": 4,
        "fullcodeline": "size_t code_verifier_hash_len = 32, code_verifier_hash_b64_len = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "if (json_object_get(config->j_params, \"pkce-allowed\") != json_true()) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (o_strnullempty(code_verifier)) {"
    },
    {
        "line": 9,
        "fullcodeline": "ret = G_OK;"
    },
    {
        "line": 14,
        "fullcodeline": "} else if ((!o_strnullempty(code_verifier) && json_string_null_or_empty(json_object_get(j_result_code, \"code_challenge\"))) || (o_strnullempty(code_verifier) && !json_string_null_or_empty(json_object_get(j_result_code, \"code_challenge\")))) {"
    },
    {
        "line": 11,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_DEBUG, \"oidc validate_code_challenge - code_verifier unauthorized\");"
    },
    {
        "line": 12,
        "fullcodeline": "ret = G_ERROR_UNAUTHORIZED;"
    },
    {
        "line": 15,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_DEBUG, \"oidc validate_code_challenge - Invalid code_challenge or code_verifier\");"
    },
    {
        "line": 16,
        "fullcodeline": "ret = G_ERROR_UNAUTHORIZED;"
    },
    {
        "line": 18,
        "fullcodeline": "if (is_pkce_char_valid(code_verifier)) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (0 == o_strncmp(GLEWLWYD_CODE_CHALLENGE_S256_PREFIX, json_string_value(json_object_get(j_result_code, \"code_challenge\")), o_strlen(GLEWLWYD_CODE_CHALLENGE_S256_PREFIX))) {"
    },
    {
        "line": 48,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_DEBUG, \"oidc validate_code_challenge - Invalid code_challenge character set\");"
    },
    {
        "line": 49,
        "fullcodeline": "ret = G_ERROR_UNAUTHORIZED;"
    },
    {
        "line": 20,
        "fullcodeline": "key_data.data = (unsigned char *)code_verifier;"
    },
    {
        "line": 21,
        "fullcodeline": "key_data.size = (unsigned int)o_strlen(code_verifier);"
    },
    {
        "line": 22,
        "fullcodeline": "if (gnutls_fingerprint(GNUTLS_DIG_SHA256, &key_data, code_verifier_hash, &code_verifier_hash_len) == GNUTLS_E_SUCCESS) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (0 == o_strcmp(json_string_value(json_object_get(j_result_code, \"code_challenge\")), code_verifier)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (o_base64url_encode(code_verifier_hash, code_verifier_hash_len, code_verifier_hash_b64, &code_verifier_hash_b64_len)) {"
    },
    {
        "line": 36,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"oidc validate_code_challenge - Error gnutls_fingerprint\");"
    },
    {
        "line": 37,
        "fullcodeline": "ret = G_ERROR;"
    },
    {
        "line": 41,
        "fullcodeline": "ret = G_OK;"
    },
    {
        "line": 24,
        "fullcodeline": "code_verifier_hash_b64[code_verifier_hash_b64_len] = '\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_DEBUG, \"oidc validate_code_challenge - Invalid code_challenge value\");"
    },
    {
        "line": 44,
        "fullcodeline": "ret = G_ERROR_UNAUTHORIZED;"
    },
    {
        "line": 25,
        "fullcodeline": "if (0 == o_strcmp(json_string_value(json_object_get(j_result_code, \"code_challenge\"))+o_strlen(GLEWLWYD_CODE_CHALLENGE_S256_PREFIX), (const char *)code_verifier_hash_b64)) {"
    },
    {
        "line": 32,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"oidc validate_code_challenge - Error o_base64url_encode\");"
    },
    {
        "line": 33,
        "fullcodeline": "ret = G_ERROR;"
    },
    {
        "line": 26,
        "fullcodeline": "ret = G_OK;"
    },
    {
        "line": 28,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_DEBUG, \"oidc validate_code_challenge - Invalid code_challenge value\");"
    },
    {
        "line": 29,
        "fullcodeline": "ret = G_ERROR_UNAUTHORIZED;"
    }
]