[
    {
        "line": 5,
        "fullcodeline": "struct file_system_type *fstype = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "const char *requested_type = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "const char *requested_dir_name = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "const char *requested_dev_name = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "int need_dev = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int error = -ENOMEM;"
    },
    {
        "line": 16,
        "fullcodeline": "requested_type = tomoyo_encode(type);"
    },
    {
        "line": 19,
        "fullcodeline": "rtype.name = requested_type;"
    },
    {
        "line": 20,
        "fullcodeline": "tomoyo_fill_path_info(&rtype);"
    },
    {
        "line": 23,
        "fullcodeline": "requested_dir_name = tomoyo_realpath_from_path(dir);"
    },
    {
        "line": 28,
        "fullcodeline": "rdir.name = requested_dir_name;"
    },
    {
        "line": 29,
        "fullcodeline": "tomoyo_fill_path_info(&rdir);"
    },
    {
        "line": 74,
        "fullcodeline": "rdev.name = requested_dev_name;"
    },
    {
        "line": 75,
        "fullcodeline": "tomoyo_fill_path_info(&rdev);"
    },
    {
        "line": 76,
        "fullcodeline": "r->param_type = TOMOYO_TYPE_MOUNT_ACL;"
    },
    {
        "line": 77,
        "fullcodeline": "r->param.mount.need_dev = need_dev;"
    },
    {
        "line": 78,
        "fullcodeline": "r->param.mount.dev = &rdev;"
    },
    {
        "line": 79,
        "fullcodeline": "r->param.mount.dir = &rdir;"
    },
    {
        "line": 80,
        "fullcodeline": "r->param.mount.type = &rtype;"
    },
    {
        "line": 81,
        "fullcodeline": "r->param.mount.flags = flags;"
    },
    {
        "line": 87,
        "fullcodeline": "kfree(requested_dev_name);"
    },
    {
        "line": 88,
        "fullcodeline": "kfree(requested_dir_name);"
    },
    {
        "line": 91,
        "fullcodeline": "kfree(requested_type);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!requested_type)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!requested_dir_name) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!strcmp(type, TOMOYO_MOUNT_REMOUNT_KEYWORD)) {"
    },
    {
        "line": 85,
        "fullcodeline": "} while (error == TOMOYO_RETRY_REQUEST);"
    },
    {
        "line": 25,
        "fullcodeline": "error = -ENOMEM;"
    },
    {
        "line": 58,
        "fullcodeline": "requested_dev_name = tomoyo_realpath_from_path(&path);"
    },
    {
        "line": 59,
        "fullcodeline": "path_put(&path);"
    },
    {
        "line": 83,
        "fullcodeline": "tomoyo_check_acl(r, tomoyo_check_mount_acl);"
    },
    {
        "line": 84,
        "fullcodeline": "error = tomoyo_audit_mount_log(r);"
    },
    {
        "line": 90,
        "fullcodeline": "put_filesystem(fstype);"
    },
    {
        "line": 54,
        "fullcodeline": "if (!dev_name || kern_path(dev_name, LOOKUP_FOLLOW, &path)) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (!requested_dev_name) {"
    },
    {
        "line": 68,
        "fullcodeline": "requested_dev_name = tomoyo_encode(dev_name);"
    },
    {
        "line": 34,
        "fullcodeline": "} else if (!strcmp(type, TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD) ||"
    },
    {
        "line": 55,
        "fullcodeline": "error = -ENOENT;"
    },
    {
        "line": 61,
        "fullcodeline": "error = -ENOENT;"
    },
    {
        "line": 66,
        "fullcodeline": "if (!dev_name)"
    },
    {
        "line": 69,
        "fullcodeline": "if (!requested_dev_name) {"
    },
    {
        "line": 37,
        "fullcodeline": "!strcmp(type, TOMOYO_MOUNT_MAKE_SHARED_KEYWORD)) {"
    },
    {
        "line": 67,
        "fullcodeline": "dev_name = \"<NULL>\";"
    },
    {
        "line": 70,
        "fullcodeline": "error = -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "!strcmp(type, TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD) ||"
    },
    {
        "line": 35,
        "fullcodeline": "!strcmp(type, TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD) ||"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (!strcmp(type, TOMOYO_MOUNT_BIND_KEYWORD) ||"
    },
    {
        "line": 40,
        "fullcodeline": "!strcmp(type, TOMOYO_MOUNT_MOVE_KEYWORD)) {"
    },
    {
        "line": 41,
        "fullcodeline": "need_dev = -1; /* dev_name is a directory */"
    },
    {
        "line": 43,
        "fullcodeline": "fstype = get_fs_type(type);"
    },
    {
        "line": 44,
        "fullcodeline": "if (!fstype) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (fstype->fs_flags & FS_REQUIRES_DEV)"
    },
    {
        "line": 45,
        "fullcodeline": "error = -ENODEV;"
    },
    {
        "line": 50,
        "fullcodeline": "need_dev = 1;"
    }
]