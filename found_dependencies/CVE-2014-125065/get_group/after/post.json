[
    {
        "line": 2,
        "fullcodeline": "groups_table = db.get_table('groups')"
    },
    {
        "line": 3,
        "fullcodeline": "group = groups_table.find(name=group_name)"
    },
    {
        "line": 4,
        "fullcodeline": "rows = [x for x in group]"
    },
    {
        "line": 8,
        "fullcodeline": "userids = [x['userid'] for x in rows if x['userid']]"
    },
    {
        "line": 12,
        "fullcodeline": "params = {}"
    },
    {
        "line": 15,
        "fullcodeline": "where_clause = 'userid IN(:' + \",:\".join(params.keys()) + ')' # b/c sqlalchemy can't use a list!?"
    },
    {
        "line": 16,
        "fullcodeline": "q = \"SELECT * FROM users WHERE \" + where_clause"
    },
    {
        "line": 17,
        "fullcodeline": "users = db.executable.execute(q, params).fetchall()"
    },
    {
        "line": 18,
        "fullcodeline": "ret = {group_name: [dict(x.items()) for x in users] }"
    },
    {
        "line": 5,
        "fullcodeline": "if not rows:"
    },
    {
        "line": 9,
        "fullcodeline": "if not userids:"
    },
    {
        "line": 13,
        "fullcodeline": "for i, userid in enumerate(userids,1):"
    },
    {
        "line": 6,
        "fullcodeline": "return error(404, {'error': 'Not a valid group'})"
    },
    {
        "line": 14,
        "fullcodeline": "params['userid_' + str(i)] = str(userid)"
    },
    {
        "line": 10,
        "fullcodeline": "return {group_name: []}"
    }
]