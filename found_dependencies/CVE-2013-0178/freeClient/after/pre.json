[
    {
        "line": 9,
        "fullcodeline": "sdsfree(c->querybuf);"
    },
    {
        "line": 10,
        "fullcodeline": "c->querybuf = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "unwatchAllKeys(c);"
    },
    {
        "line": 16,
        "fullcodeline": "listRelease(c->watched_keys);"
    },
    {
        "line": 18,
        "fullcodeline": "pubsubUnsubscribeAllChannels(c,0);"
    },
    {
        "line": 19,
        "fullcodeline": "pubsubUnsubscribeAllPatterns(c,0);"
    },
    {
        "line": 20,
        "fullcodeline": "dictRelease(c->pubsub_channels);"
    },
    {
        "line": 21,
        "fullcodeline": "listRelease(c->pubsub_patterns);"
    },
    {
        "line": 23,
        "fullcodeline": "aeDeleteFileEvent(server.el,c->fd,AE_READABLE);"
    },
    {
        "line": 24,
        "fullcodeline": "aeDeleteFileEvent(server.el,c->fd,AE_WRITABLE);"
    },
    {
        "line": 25,
        "fullcodeline": "listRelease(c->reply);"
    },
    {
        "line": 26,
        "fullcodeline": "freeClientArgv(c);"
    },
    {
        "line": 27,
        "fullcodeline": "close(c->fd);"
    },
    {
        "line": 29,
        "fullcodeline": "ln = listSearchKey(server.clients,c);"
    },
    {
        "line": 30,
        "fullcodeline": "redisAssert(ln != NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "listDelNode(server.clients,ln);"
    },
    {
        "line": 51,
        "fullcodeline": "listRelease(c->io_keys);"
    },
    {
        "line": 79,
        "fullcodeline": "zfree(c->argv);"
    },
    {
        "line": 80,
        "fullcodeline": "freeClientMultiState(c);"
    },
    {
        "line": 81,
        "fullcodeline": "zfree(c);"
    },
    {
        "line": 11,
        "fullcodeline": "if (c->flags & REDIS_BLOCKED)"
    },
    {
        "line": 34,
        "fullcodeline": "if (c->flags & REDIS_IO_WAIT) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (c->flags & REDIS_SLAVE) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (c->flags & REDIS_MASTER) {"
    },
    {
        "line": 12,
        "fullcodeline": "unblockClientWaitingData(c);"
    },
    {
        "line": 35,
        "fullcodeline": "redisAssert(server.ds_enabled);"
    },
    {
        "line": 49,
        "fullcodeline": "server.cache_blocked_clients--;"
    },
    {
        "line": 57,
        "fullcodeline": "list *l = (c->flags & REDIS_MONITOR) ? server.monitors : server.slaves;"
    },
    {
        "line": 58,
        "fullcodeline": "ln = listSearchKey(l,c);"
    },
    {
        "line": 59,
        "fullcodeline": "redisAssert(ln != NULL);"
    },
    {
        "line": 60,
        "fullcodeline": "listDelNode(l,ln);"
    },
    {
        "line": 65,
        "fullcodeline": "server.master = NULL;"
    },
    {
        "line": 67,
        "fullcodeline": "server.replstate = REDIS_REPL_CONNECT;"
    },
    {
        "line": 36,
        "fullcodeline": "if (listLength(c->io_keys) == 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (c->replstate == REDIS_REPL_SEND_BULK && c->repldbfd != -1)"
    },
    {
        "line": 73,
        "fullcodeline": "while (listLength(server.slaves)) {"
    },
    {
        "line": 37,
        "fullcodeline": "ln = listSearchKey(server.io_ready_clients,c);"
    },
    {
        "line": 41,
        "fullcodeline": "redisAssert(ln != NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "listDelNode(server.io_ready_clients,ln);"
    },
    {
        "line": 56,
        "fullcodeline": "close(c->repldbfd);"
    },
    {
        "line": 74,
        "fullcodeline": "ln = listFirst(server.slaves);"
    },
    {
        "line": 75,
        "fullcodeline": "freeClient((redisClient*)ln->value);"
    },
    {
        "line": 44,
        "fullcodeline": "while (listLength(c->io_keys)) {"
    },
    {
        "line": 45,
        "fullcodeline": "ln = listFirst(c->io_keys);"
    },
    {
        "line": 46,
        "fullcodeline": "dontWaitForSwappedKey(c,ln->value);"
    }
]