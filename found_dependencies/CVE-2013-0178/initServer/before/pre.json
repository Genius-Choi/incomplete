[
    {
        "line": 4,
        "fullcodeline": "signal(SIGHUP, SIG_IGN);"
    },
    {
        "line": 5,
        "fullcodeline": "signal(SIGPIPE, SIG_IGN);"
    },
    {
        "line": 6,
        "fullcodeline": "setupSigSegvAction();"
    },
    {
        "line": 13,
        "fullcodeline": "server.mainthread = pthread_self();"
    },
    {
        "line": 14,
        "fullcodeline": "server.clients = listCreate();"
    },
    {
        "line": 15,
        "fullcodeline": "server.slaves = listCreate();"
    },
    {
        "line": 16,
        "fullcodeline": "server.monitors = listCreate();"
    },
    {
        "line": 17,
        "fullcodeline": "server.unblocked_clients = listCreate();"
    },
    {
        "line": 18,
        "fullcodeline": "createSharedObjects();"
    },
    {
        "line": 19,
        "fullcodeline": "server.el = aeCreateEventLoop();"
    },
    {
        "line": 20,
        "fullcodeline": "server.db = zmalloc(sizeof(redisDb)*server.dbnum);"
    },
    {
        "line": 21,
        "fullcodeline": "server.ipfd = anetTcpServer(server.neterr,server.port,server.bindaddr);"
    },
    {
        "line": 47,
        "fullcodeline": "server.pubsub_channels = dictCreate(&keylistDictType,NULL);"
    },
    {
        "line": 48,
        "fullcodeline": "server.pubsub_patterns = listCreate();"
    },
    {
        "line": 49,
        "fullcodeline": "listSetFreeMethod(server.pubsub_patterns,freePubsubPattern);"
    },
    {
        "line": 50,
        "fullcodeline": "listSetMatchMethod(server.pubsub_patterns,listMatchPubsubPattern);"
    },
    {
        "line": 51,
        "fullcodeline": "server.cronloops = 0;"
    },
    {
        "line": 52,
        "fullcodeline": "server.bgsavechildpid = -1;"
    },
    {
        "line": 53,
        "fullcodeline": "server.bgrewritechildpid = -1;"
    },
    {
        "line": 54,
        "fullcodeline": "server.bgrewritebuf = sdsempty();"
    },
    {
        "line": 55,
        "fullcodeline": "server.aofbuf = sdsempty();"
    },
    {
        "line": 56,
        "fullcodeline": "server.lastsave = time(NULL);"
    },
    {
        "line": 57,
        "fullcodeline": "server.dirty = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "server.stat_numcommands = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "server.stat_numconnections = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "server.stat_expiredkeys = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "server.stat_evictedkeys = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "server.stat_starttime = time(NULL);"
    },
    {
        "line": 63,
        "fullcodeline": "server.stat_keyspace_misses = 0;"
    },
    {
        "line": 64,
        "fullcodeline": "server.stat_keyspace_hits = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "server.unixtime = time(NULL);"
    },
    {
        "line": 66,
        "fullcodeline": "aeCreateTimeEvent(server.el, 1, serverCron, NULL, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "if (server.ipfd == ANET_ERR) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (server.unixsocket != NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (server.ipfd < 0 && server.sofd < 0) {"
    },
    {
        "line": 38,
        "fullcodeline": "for (j = 0; j < server.dbnum; j++) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (server.ipfd > 0 && aeCreateFileEvent(server.el,server.ipfd,AE_READABLE,"
    },
    {
        "line": 69,
        "fullcodeline": "if (server.sofd > 0 && aeCreateFileEvent(server.el,server.sofd,AE_READABLE,"
    },
    {
        "line": 9,
        "fullcodeline": "openlog(server.syslog_ident, LOG_PID | LOG_NDELAY | LOG_NOWAIT,"
    },
    {
        "line": 23,
        "fullcodeline": "redisLog(REDIS_WARNING, \"Opening port: %s\", server.neterr);"
    },
    {
        "line": 27,
        "fullcodeline": "unlink(server.unixsocket); /* don't care if this fails */"
    },
    {
        "line": 28,
        "fullcodeline": "server.sofd = anetUnixServer(server.neterr,server.unixsocket);"
    },
    {
        "line": 35,
        "fullcodeline": "redisLog(REDIS_WARNING, \"Configured to not listen anywhere, exiting.\");"
    },
    {
        "line": 39,
        "fullcodeline": "server.db[j].dict = dictCreate(&dbDictType,NULL);"
    },
    {
        "line": 40,
        "fullcodeline": "server.db[j].expires = dictCreate(&keyptrDictType,NULL);"
    },
    {
        "line": 41,
        "fullcodeline": "server.db[j].blocking_keys = dictCreate(&keylistDictType,NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "server.db[j].watched_keys = dictCreate(&keylistDictType,NULL);"
    },
    {
        "line": 45,
        "fullcodeline": "server.db[j].id = j;"
    },
    {
        "line": 68,
        "fullcodeline": "acceptTcpHandler,NULL) == AE_ERR) oom(\"creating file event\");"
    },
    {
        "line": 70,
        "fullcodeline": "acceptUnixHandler,NULL) == AE_ERR) oom(\"creating file event\");"
    },
    {
        "line": 73,
        "fullcodeline": "server.appendfd = open(server.appendfilename,O_WRONLY|O_APPEND|O_CREAT,0644);"
    },
    {
        "line": 81,
        "fullcodeline": "if (server.vm_enabled) vmInit();"
    },
    {
        "line": 29,
        "fullcodeline": "if (server.sofd == ANET_ERR) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (server.appendfd == -1) {"
    },
    {
        "line": 30,
        "fullcodeline": "redisLog(REDIS_WARNING, \"Opening socket: %s\", server.neterr);"
    },
    {
        "line": 44,
        "fullcodeline": "server.db[j].io_keys = dictCreate(&keylistDictType,NULL);"
    },
    {
        "line": 75,
        "fullcodeline": "redisLog(REDIS_WARNING, \"Can't open the append-only file: %s\","
    },
    {
        "line": 76,
        "fullcodeline": "strerror(errno));"
    }
]