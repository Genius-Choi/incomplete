[
    {
        "line": 2,
        "fullcodeline": "REDIS_NOTUSED(eventLoop);"
    },
    {
        "line": 44,
        "fullcodeline": "flushAppendOnlyFile();"
    },
    {
        "line": 7,
        "fullcodeline": "if (server.ds_enabled && listLength(server.io_ready_clients)) {"
    },
    {
        "line": 32,
        "fullcodeline": "while (listLength(server.unblocked_clients)) {"
    },
    {
        "line": 10,
        "fullcodeline": "listRewind(server.io_ready_clients,&li);"
    },
    {
        "line": 33,
        "fullcodeline": "ln = listFirst(server.unblocked_clients);"
    },
    {
        "line": 34,
        "fullcodeline": "redisAssert(ln != NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "c = ln->value;"
    },
    {
        "line": 36,
        "fullcodeline": "listDelNode(server.unblocked_clients,ln);"
    },
    {
        "line": 11,
        "fullcodeline": "while((ln = listNext(&li))) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (c->querybuf && sdslen(c->querybuf) > 0)"
    },
    {
        "line": 12,
        "fullcodeline": "c = ln->value;"
    },
    {
        "line": 16,
        "fullcodeline": "listDelNode(server.io_ready_clients,ln);"
    },
    {
        "line": 17,
        "fullcodeline": "c->flags &= (~REDIS_IO_WAIT);"
    },
    {
        "line": 18,
        "fullcodeline": "server.cache_blocked_clients--;"
    },
    {
        "line": 19,
        "fullcodeline": "aeCreateFileEvent(server.el, c->fd, AE_READABLE,"
    },
    {
        "line": 21,
        "fullcodeline": "cmd = lookupCommand(c->argv[0]->ptr);"
    },
    {
        "line": 22,
        "fullcodeline": "redisAssert(cmd != NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "call(c,cmd);"
    },
    {
        "line": 24,
        "fullcodeline": "resetClient(c);"
    },
    {
        "line": 40,
        "fullcodeline": "processInputBuffer(c);"
    },
    {
        "line": 26,
        "fullcodeline": "if (c->querybuf && sdslen(c->querybuf) > 0)"
    },
    {
        "line": 27,
        "fullcodeline": "processInputBuffer(c);"
    }
]