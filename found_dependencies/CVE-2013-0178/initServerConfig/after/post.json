[
    {
        "line": 2,
        "fullcodeline": "server.port = REDIS_SERVERPORT;"
    },
    {
        "line": 3,
        "fullcodeline": "server.bindaddr = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "server.unixsocket = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "server.ipfd = -1;"
    },
    {
        "line": 6,
        "fullcodeline": "server.sofd = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "server.dbnum = REDIS_DEFAULT_DBNUM;"
    },
    {
        "line": 8,
        "fullcodeline": "server.verbosity = REDIS_VERBOSE;"
    },
    {
        "line": 9,
        "fullcodeline": "server.maxidletime = REDIS_MAXIDLETIME;"
    },
    {
        "line": 10,
        "fullcodeline": "server.saveparams = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "server.loading = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "server.logfile = NULL; /* NULL = log on standard output */"
    },
    {
        "line": 13,
        "fullcodeline": "server.syslog_enabled = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "server.syslog_ident = zstrdup(\"redis\");"
    },
    {
        "line": 15,
        "fullcodeline": "server.syslog_facility = LOG_LOCAL0;"
    },
    {
        "line": 16,
        "fullcodeline": "server.glueoutputbuf = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "server.daemonize = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "server.appendonly = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "server.appendfsync = APPENDFSYNC_EVERYSEC;"
    },
    {
        "line": 20,
        "fullcodeline": "server.no_appendfsync_on_rewrite = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "server.lastfsync = time(NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "server.appendfd = -1;"
    },
    {
        "line": 23,
        "fullcodeline": "server.appendseldb = -1; /* Make sure the first time will not match */"
    },
    {
        "line": 24,
        "fullcodeline": "server.pidfile = zstrdup(\"/var/run/redis.pid\");"
    },
    {
        "line": 25,
        "fullcodeline": "server.dbfilename = zstrdup(\"dump.rdb\");"
    },
    {
        "line": 26,
        "fullcodeline": "server.appendfilename = zstrdup(\"appendonly.aof\");"
    },
    {
        "line": 27,
        "fullcodeline": "server.requirepass = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "server.rdbcompression = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "server.activerehashing = 1;"
    },
    {
        "line": 30,
        "fullcodeline": "server.maxclients = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "server.bpop_blocked_clients = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "server.maxmemory = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "server.maxmemory_policy = REDIS_MAXMEMORY_VOLATILE_LRU;"
    },
    {
        "line": 34,
        "fullcodeline": "server.maxmemory_samples = 3;"
    },
    {
        "line": 35,
        "fullcodeline": "server.ds_enabled = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "server.ds_path = zstrdup(\"/tmp/redis.ds\");"
    },
    {
        "line": 37,
        "fullcodeline": "server.cache_max_memory = 64LL*1024*1024; /* 64 MB of RAM */"
    },
    {
        "line": 38,
        "fullcodeline": "server.cache_blocked_clients = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "server.hash_max_zipmap_entries = REDIS_HASH_MAX_ZIPMAP_ENTRIES;"
    },
    {
        "line": 40,
        "fullcodeline": "server.hash_max_zipmap_value = REDIS_HASH_MAX_ZIPMAP_VALUE;"
    },
    {
        "line": 41,
        "fullcodeline": "server.list_max_ziplist_entries = REDIS_LIST_MAX_ZIPLIST_ENTRIES;"
    },
    {
        "line": 42,
        "fullcodeline": "server.list_max_ziplist_value = REDIS_LIST_MAX_ZIPLIST_VALUE;"
    },
    {
        "line": 43,
        "fullcodeline": "server.set_max_intset_entries = REDIS_SET_MAX_INTSET_ENTRIES;"
    },
    {
        "line": 44,
        "fullcodeline": "server.shutdown_asap = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "updateLRUClock();"
    },
    {
        "line": 47,
        "fullcodeline": "resetServerSaveParams();"
    },
    {
        "line": 49,
        "fullcodeline": "appendServerSaveParams(60*60,1);  /* save after 1 hour and 1 change */"
    },
    {
        "line": 50,
        "fullcodeline": "appendServerSaveParams(300,100);  /* save after 5 minutes and 100 changes */"
    },
    {
        "line": 51,
        "fullcodeline": "appendServerSaveParams(60,10000); /* save after 1 minute and 10000 changes */"
    },
    {
        "line": 53,
        "fullcodeline": "server.isslave = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "server.masterauth = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "server.masterhost = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "server.masterport = 6379;"
    },
    {
        "line": 57,
        "fullcodeline": "server.master = NULL;"
    },
    {
        "line": 58,
        "fullcodeline": "server.replstate = REDIS_REPL_NONE;"
    },
    {
        "line": 59,
        "fullcodeline": "server.repl_serve_stale_data = 1;"
    },
    {
        "line": 62,
        "fullcodeline": "R_Zero = 0.0;"
    },
    {
        "line": 63,
        "fullcodeline": "R_PosInf = 1.0/R_Zero;"
    },
    {
        "line": 64,
        "fullcodeline": "R_NegInf = -1.0/R_Zero;"
    },
    {
        "line": 65,
        "fullcodeline": "R_Nan = R_Zero/R_Zero;"
    },
    {
        "line": 70,
        "fullcodeline": "server.commands = dictCreate(&commandTableDictType,NULL);"
    },
    {
        "line": 71,
        "fullcodeline": "populateCommandTable();"
    },
    {
        "line": 72,
        "fullcodeline": "server.delCommand = lookupCommandByCString(\"del\");"
    },
    {
        "line": 73,
        "fullcodeline": "server.multiCommand = lookupCommandByCString(\"multi\");"
    }
]