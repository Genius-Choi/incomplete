[
    {
        "line": 5,
        "fullcodeline": "if ((tls_io == NULL) ||"
    },
    {
        "line": 7,
        "fullcodeline": "(size == 0))"
    },
    {
        "line": 9,
        "fullcodeline": "LogError(\"invalid argument detected: CONCRETE_IO_HANDLE tls_io = %p, const void* buffer = %p, size_t size = %lu\", tls_io, buffer, (unsigned long)size);"
    },
    {
        "line": 10,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 6,
        "fullcodeline": "(buffer == NULL) ||"
    },
    {
        "line": 14,
        "fullcodeline": "TLS_IO_INSTANCE* tls_io_instance = (TLS_IO_INSTANCE*)tls_io;"
    },
    {
        "line": 15,
        "fullcodeline": "if (tls_io_instance->tlsio_state != TLSIO_STATE_OPEN)"
    },
    {
        "line": 18,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 23,
        "fullcodeline": "SECURITY_STATUS status = QueryContextAttributes(&tls_io_instance->security_context, SECPKG_ATTR_STREAM_SIZES, &sizes);"
    },
    {
        "line": 24,
        "fullcodeline": "if (status != SEC_E_OK)"
    },
    {
        "line": 26,
        "fullcodeline": "LogError(\"QueryContextAttributes failed: %x\", status);"
    },
    {
        "line": 27,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 31,
        "fullcodeline": "SecBuffer security_buffers[4];"
    },
    {
        "line": 33,
        "fullcodeline": "size_t needed_buffer = sizes.cbHeader + size + sizes.cbTrailer;"
    },
    {
        "line": 34,
        "fullcodeline": "unsigned char* out_buffer = (unsigned char*)malloc(needed_buffer);"
    },
    {
        "line": 35,
        "fullcodeline": "if (out_buffer == NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "LogError(\"malloc failed\");"
    },
    {
        "line": 38,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 42,
        "fullcodeline": "(void)memcpy(out_buffer + sizes.cbHeader, buffer, size);"
    },
    {
        "line": 44,
        "fullcodeline": "security_buffers[0].BufferType = SECBUFFER_STREAM_HEADER;"
    },
    {
        "line": 45,
        "fullcodeline": "security_buffers[0].cbBuffer = sizes.cbHeader;"
    },
    {
        "line": 46,
        "fullcodeline": "security_buffers[0].pvBuffer = out_buffer;"
    },
    {
        "line": 47,
        "fullcodeline": "security_buffers[1].BufferType = SECBUFFER_DATA;"
    },
    {
        "line": 48,
        "fullcodeline": "security_buffers[1].cbBuffer = (unsigned long)size;"
    },
    {
        "line": 49,
        "fullcodeline": "security_buffers[1].pvBuffer = out_buffer + sizes.cbHeader;"
    },
    {
        "line": 50,
        "fullcodeline": "security_buffers[2].BufferType = SECBUFFER_STREAM_TRAILER;"
    },
    {
        "line": 51,
        "fullcodeline": "security_buffers[2].cbBuffer = sizes.cbTrailer;"
    },
    {
        "line": 52,
        "fullcodeline": "security_buffers[2].pvBuffer = out_buffer + sizes.cbHeader + size;"
    },
    {
        "line": 53,
        "fullcodeline": "security_buffers[3].cbBuffer = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "security_buffers[3].BufferType = SECBUFFER_EMPTY;"
    },
    {
        "line": 55,
        "fullcodeline": "security_buffers[3].pvBuffer = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "security_buffers_desc.pBuffers = security_buffers;"
    },
    {
        "line": 59,
        "fullcodeline": "security_buffers_desc.ulVersion = SECBUFFER_VERSION;"
    },
    {
        "line": 61,
        "fullcodeline": "status = EncryptMessage(&tls_io_instance->security_context, 0, &security_buffers_desc, 0);"
    },
    {
        "line": 80,
        "fullcodeline": "free(out_buffer);"
    },
    {
        "line": 62,
        "fullcodeline": "if (FAILED(status))"
    },
    {
        "line": 64,
        "fullcodeline": "LogError(\"EncryptMessage failed: %x\", status);"
    },
    {
        "line": 65,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 69,
        "fullcodeline": "if (xio_send(tls_io_instance->socket_io, out_buffer, (size_t)security_buffers[0].cbBuffer + (size_t)security_buffers[1].cbBuffer + (size_t)security_buffers[2].cbBuffer, on_send_complete, callback_context) != 0)"
    },
    {
        "line": 71,
        "fullcodeline": "LogError(\"xio_send failed\");"
    },
    {
        "line": 72,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 76,
        "fullcodeline": "result = 0;"
    }
]