[
    {
        "line": 3,
        "fullcodeline": "HTTP_RESPONSE_CONTENT_BUFFER* responseContentBuffer = (HTTP_RESPONSE_CONTENT_BUFFER*)userdata;"
    },
    {
        "line": 4,
        "fullcodeline": "if ((userdata != NULL) &&"
    },
    {
        "line": 26,
        "fullcodeline": "return size * nmemb;"
    },
    {
        "line": 6,
        "fullcodeline": "(size * nmemb > 0))"
    },
    {
        "line": 8,
        "fullcodeline": "void* newBuffer = realloc(responseContentBuffer->buffer, responseContentBuffer->bufferSize + (size * nmemb));"
    },
    {
        "line": 5,
        "fullcodeline": "(ptr != NULL) &&"
    },
    {
        "line": 9,
        "fullcodeline": "if (newBuffer != NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "responseContentBuffer->buffer = newBuffer;"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy(responseContentBuffer->buffer + responseContentBuffer->bufferSize, ptr, size * nmemb);"
    },
    {
        "line": 13,
        "fullcodeline": "responseContentBuffer->bufferSize += size * nmemb;"
    },
    {
        "line": 17,
        "fullcodeline": "LogError(\"Could not allocate buffer of size %lu\", (unsigned long)(responseContentBuffer->bufferSize + (size * nmemb)));"
    },
    {
        "line": 18,
        "fullcodeline": "responseContentBuffer->error = 1;"
    },
    {
        "line": 19,
        "fullcodeline": "if (responseContentBuffer->buffer != NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "free(responseContentBuffer->buffer);"
    }
]