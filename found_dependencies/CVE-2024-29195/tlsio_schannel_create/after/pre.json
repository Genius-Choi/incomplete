[
    {
        "line": 3,
        "fullcodeline": "TLSIO_CONFIG* tls_io_config = (TLSIO_CONFIG *) io_create_parameters;"
    },
    {
        "line": 6,
        "fullcodeline": "if (tls_io_config == NULL)"
    },
    {
        "line": 8,
        "fullcodeline": "LogError(\"invalid argument detected: void* io_create_parameters = %p\", tls_io_config);"
    },
    {
        "line": 9,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "result = (TLS_IO_INSTANCE*)malloc(sizeof(TLS_IO_INSTANCE));"
    },
    {
        "line": 14,
        "fullcodeline": "if (result == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "LogError(\"malloc failed\");"
    },
    {
        "line": 20,
        "fullcodeline": "(void)memset(result, 0, sizeof(TLS_IO_INSTANCE));"
    },
    {
        "line": 22,
        "fullcodeline": "size_t malloc_size = safe_add_size_t(strlen(tls_io_config->hostname), 1);"
    },
    {
        "line": 23,
        "fullcodeline": "malloc_size = safe_multiply_size_t(malloc_size, sizeof(SEC_TCHAR));"
    },
    {
        "line": 24,
        "fullcodeline": "if (malloc_size == SIZE_MAX ||"
    },
    {
        "line": 25,
        "fullcodeline": "(result->host_name = (SEC_TCHAR*)malloc(malloc_size)) == NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "LogError(\"malloc failed, size:%zu\", malloc_size);"
    },
    {
        "line": 29,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "(void)strcpy(result->host_name, tls_io_config->hostname);"
    },
    {
        "line": 39,
        "fullcodeline": "if (tls_io_config->underlying_io_interface != NULL)"
    },
    {
        "line": 54,
        "fullcodeline": "if (underlying_io_interface == NULL)"
    },
    {
        "line": 41,
        "fullcodeline": "underlying_io_interface = tls_io_config->underlying_io_interface;"
    },
    {
        "line": 42,
        "fullcodeline": "io_interface_parameters = tls_io_config->underlying_io_parameters;"
    },
    {
        "line": 56,
        "fullcodeline": "LogError(\"socketio_get_interface_description failed\");"
    },
    {
        "line": 57,
        "fullcodeline": "free(result->host_name);"
    },
    {
        "line": 59,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 46,
        "fullcodeline": "socketio_config.hostname = tls_io_config->hostname;"
    },
    {
        "line": 47,
        "fullcodeline": "socketio_config.port = tls_io_config->port;"
    },
    {
        "line": 48,
        "fullcodeline": "socketio_config.accepted_socket = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "underlying_io_interface = socketio_get_interface_description();"
    },
    {
        "line": 51,
        "fullcodeline": "io_interface_parameters = &socketio_config;"
    },
    {
        "line": 63,
        "fullcodeline": "result->socket_io = xio_create(underlying_io_interface, io_interface_parameters);"
    },
    {
        "line": 64,
        "fullcodeline": "if (result->socket_io == NULL)"
    },
    {
        "line": 66,
        "fullcodeline": "LogError(\"xio_create failed\");"
    },
    {
        "line": 67,
        "fullcodeline": "free(result->host_name);"
    },
    {
        "line": 69,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 73,
        "fullcodeline": "result->pending_io_list = singlylinkedlist_create();"
    },
    {
        "line": 74,
        "fullcodeline": "if (result->pending_io_list == NULL)"
    },
    {
        "line": 76,
        "fullcodeline": "LogError(\"Failed creating pending IO list.\");"
    },
    {
        "line": 77,
        "fullcodeline": "xio_destroy(result->socket_io);"
    },
    {
        "line": 78,
        "fullcodeline": "free(result->host_name);"
    },
    {
        "line": 80,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "result->received_bytes = NULL;"
    },
    {
        "line": 85,
        "fullcodeline": "result->received_byte_count = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "result->buffer_size = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "result->tlsio_state = TLSIO_STATE_NOT_OPEN;"
    },
    {
        "line": 88,
        "fullcodeline": "result->x509certificate = NULL;"
    },
    {
        "line": 89,
        "fullcodeline": "result->x509privatekey = NULL;"
    },
    {
        "line": 90,
        "fullcodeline": "result->x509_schannel_handle = NULL;"
    }
]