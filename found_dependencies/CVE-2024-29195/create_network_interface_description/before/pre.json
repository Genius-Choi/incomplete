[
    {
        "line": 5,
        "fullcodeline": "if ((result = (NETWORK_INTERFACE_DESCRIPTION*)malloc(sizeof(NETWORK_INTERFACE_DESCRIPTION))) == NULL)"
    },
    {
        "line": 7,
        "fullcodeline": "LogError(\"Failed allocating NETWORK_INTERFACE_DESCRIPTION\");"
    },
    {
        "line": 9,
        "fullcodeline": "else if ((result->name = (char*)malloc(sizeof(char) * (strlen(ifr->ifr_name) + 1))) == NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "LogError(\"failed setting interface description name (malloc failed)\");"
    },
    {
        "line": 12,
        "fullcodeline": "destroy_network_interface_descriptions(result);"
    },
    {
        "line": 13,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "strcpy(result->name, ifr->ifr_name);"
    },
    {
        "line": 20,
        "fullcodeline": "unsigned char* mac = (unsigned char*)ifr->ifr_hwaddr.sa_data;"
    },
    {
        "line": 22,
        "fullcodeline": "if ((result->mac_address = (char*)malloc(sizeof(char) * MAC_ADDRESS_STRING_LENGTH)) == NULL)"
    },
    {
        "line": 24,
        "fullcodeline": "LogError(\"failed formatting mac address (malloc failed)\");"
    },
    {
        "line": 25,
        "fullcodeline": "destroy_network_interface_descriptions(result);"
    },
    {
        "line": 26,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "else if (sprintf(result->mac_address, \"%02X:%02X:%02X:%02X:%02X:%02X\", mac[0],mac[1],mac[2],mac[3],mac[4],mac[5]) <= 0)"
    },
    {
        "line": 30,
        "fullcodeline": "LogError(\"failed formatting mac address (sprintf failed)\");"
    },
    {
        "line": 31,
        "fullcodeline": "destroy_network_interface_descriptions(result);"
    },
    {
        "line": 32,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "else if ((ip_address = inet_ntoa(((struct sockaddr_in*)&ifr->ifr_addr)->sin_addr)) == NULL)"
    },
    {
        "line": 36,
        "fullcodeline": "LogError(\"failed setting the ip address (inet_ntoa failed)\");"
    },
    {
        "line": 37,
        "fullcodeline": "destroy_network_interface_descriptions(result);"
    },
    {
        "line": 38,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "else if ((result->ip_address = (char*)malloc(sizeof(char) * (strlen(ip_address) + 1))) == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "LogError(\"failed setting the ip address (malloc failed)\");"
    },
    {
        "line": 43,
        "fullcodeline": "destroy_network_interface_descriptions(result);"
    },
    {
        "line": 44,
        "fullcodeline": "result = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "strcpy(result->ip_address, ip_address);"
    },
    {
        "line": 49,
        "fullcodeline": "result->next = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "if (previous_nid != NULL)"
    },
    {
        "line": 53,
        "fullcodeline": "previous_nid->next = result;"
    }
]