[
    {
        "line": 6,
        "fullcodeline": "if (HTTPHeaders_GetHeaderCount(httpHeadersHandle, &headersCount) != HTTP_HEADERS_OK)"
    },
    {
        "line": 8,
        "fullcodeline": "result = HTTPAPI_ERROR;"
    },
    {
        "line": 16,
        "fullcodeline": "size_t toAlloc = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "for (i = 0; i < headersCount; i++)"
    },
    {
        "line": 33,
        "fullcodeline": "if (i < headersCount)"
    },
    {
        "line": 35,
        "fullcodeline": "result = HTTPAPI_ERROR;"
    },
    {
        "line": 20,
        "fullcodeline": "if (HTTPHeaders_GetHeader(httpHeadersHandle, i, &temp) == HTTP_HEADERS_OK)"
    },
    {
        "line": 69,
        "fullcodeline": "free(httpHeadersA);"
    },
    {
        "line": 22,
        "fullcodeline": "toAlloc += strlen(temp);"
    },
    {
        "line": 23,
        "fullcodeline": "toAlloc += 2;"
    },
    {
        "line": 24,
        "fullcodeline": "free(temp);"
    },
    {
        "line": 42,
        "fullcodeline": "if ((httpHeadersA = ConcatHttpHeaders(httpHeadersHandle, toAlloc, headersCount)) == NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "LogError(\"HTTPHeaders_GetHeader failed\");"
    },
    {
        "line": 44,
        "fullcodeline": "result = HTTPAPI_ERROR;"
    },
    {
        "line": 45,
        "fullcodeline": "LogError(\"Cannot concatenate headers\");"
    },
    {
        "line": 47,
        "fullcodeline": "else if ((requiredCharactersForHeaders = MultiByteToWideChar(CP_ACP, 0, httpHeadersA, -1, NULL, 0)) == 0)"
    },
    {
        "line": 49,
        "fullcodeline": "result = HTTPAPI_STRING_PROCESSING_ERROR;"
    },
    {
        "line": 52,
        "fullcodeline": "else if ((*httpHeaders = (wchar_t*)malloc((requiredCharactersForHeaders + 1) * sizeof(wchar_t))) == NULL)"
    },
    {
        "line": 54,
        "fullcodeline": "result = HTTPAPI_ALLOC_FAILED;"
    },
    {
        "line": 57,
        "fullcodeline": "else if (MultiByteToWideChar(CP_ACP, 0, httpHeadersA, -1, *httpHeaders, (int)requiredCharactersForHeaders) == 0)"
    },
    {
        "line": 59,
        "fullcodeline": "result = HTTPAPI_STRING_PROCESSING_ERROR;"
    },
    {
        "line": 62,
        "fullcodeline": "*httpHeaders = NULL;"
    },
    {
        "line": 66,
        "fullcodeline": "result = HTTPAPI_OK;"
    }
]