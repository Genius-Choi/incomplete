[
    {
        "line": 8,
        "fullcodeline": "(optionName == NULL) ||"
    },
    {
        "line": 10,
        "fullcodeline": "(savedValue == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "result = HTTPAPI_INVALID_ARG;"
    },
    {
        "line": 9,
        "fullcodeline": "(value == NULL) ||"
    },
    {
        "line": 18,
        "fullcodeline": "else if (strcmp(OPTION_TRUSTED_CERT, optionName) == 0)"
    },
    {
        "line": 24,
        "fullcodeline": "certLen = strlen((const char*)value);"
    },
    {
        "line": 25,
        "fullcodeline": "tempCert = (char*)malloc((certLen + 1) * sizeof(char));"
    },
    {
        "line": 26,
        "fullcodeline": "if (tempCert == NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "result = HTTPAPI_ALLOC_FAILED;"
    },
    {
        "line": 40,
        "fullcodeline": "else if (strcmp(SU_OPTION_X509_CERT, optionName) == 0 || strcmp(OPTION_X509_ECC_CERT, optionName) == 0)"
    },
    {
        "line": 34,
        "fullcodeline": "(void)strcpy(tempCert, (const char*)value);"
    },
    {
        "line": 35,
        "fullcodeline": "*savedValue = tempCert;"
    },
    {
        "line": 36,
        "fullcodeline": "result = HTTPAPI_OK;"
    },
    {
        "line": 42,
        "fullcodeline": "certLen = strlen((const char*)value);"
    },
    {
        "line": 43,
        "fullcodeline": "tempCert = (char*)malloc((certLen + 1) * sizeof(char));"
    },
    {
        "line": 44,
        "fullcodeline": "if (tempCert == NULL)"
    },
    {
        "line": 47,
        "fullcodeline": "result = HTTPAPI_ALLOC_FAILED;"
    },
    {
        "line": 57,
        "fullcodeline": "else if (strcmp(SU_OPTION_X509_PRIVATE_KEY, optionName) == 0 || strcmp(OPTION_X509_ECC_KEY, optionName) == 0)"
    },
    {
        "line": 52,
        "fullcodeline": "(void)strcpy(tempCert, (const char*)value);"
    },
    {
        "line": 53,
        "fullcodeline": "*savedValue = tempCert;"
    },
    {
        "line": 54,
        "fullcodeline": "result = HTTPAPI_OK;"
    },
    {
        "line": 59,
        "fullcodeline": "certLen = strlen((const char*)value);"
    },
    {
        "line": 60,
        "fullcodeline": "tempCert = (char*)malloc((certLen + 1) * sizeof(char));"
    },
    {
        "line": 61,
        "fullcodeline": "if (tempCert == NULL)"
    },
    {
        "line": 64,
        "fullcodeline": "result = HTTPAPI_ALLOC_FAILED;"
    },
    {
        "line": 74,
        "fullcodeline": "else if (strcmp(OPTION_HTTP_PROXY, optionName) == 0)"
    },
    {
        "line": 69,
        "fullcodeline": "(void)strcpy(tempCert, (const char*)value);"
    },
    {
        "line": 70,
        "fullcodeline": "*savedValue = tempCert;"
    },
    {
        "line": 71,
        "fullcodeline": "result = HTTPAPI_OK;"
    },
    {
        "line": 76,
        "fullcodeline": "HTTP_PROXY_OPTIONS* proxy_data = (HTTP_PROXY_OPTIONS*)value;"
    },
    {
        "line": 79,
        "fullcodeline": "if (new_proxy_info == NULL)"
    },
    {
        "line": 81,
        "fullcodeline": "LogError(\"unable to allocate proxy option information\");"
    },
    {
        "line": 82,
        "fullcodeline": "result = HTTPAPI_ERROR;"
    },
    {
        "line": 94,
        "fullcodeline": "else if (strcmp(OPTION_SET_TLS_RENEGOTIATION, optionName) == 0)"
    },
    {
        "line": 86,
        "fullcodeline": "new_proxy_info->host_address = proxy_data->host_address;"
    },
    {
        "line": 87,
        "fullcodeline": "new_proxy_info->port = proxy_data->port;"
    },
    {
        "line": 88,
        "fullcodeline": "new_proxy_info->password = proxy_data->password;"
    },
    {
        "line": 89,
        "fullcodeline": "new_proxy_info->username = proxy_data->username;"
    },
    {
        "line": 90,
        "fullcodeline": "*savedValue = new_proxy_info;"
    },
    {
        "line": 91,
        "fullcodeline": "result = HTTPAPI_OK;"
    },
    {
        "line": 97,
        "fullcodeline": "if (temp == NULL)"
    },
    {
        "line": 112,
        "fullcodeline": "result = HTTPAPI_INVALID_ARG;"
    },
    {
        "line": 113,
        "fullcodeline": "LogInfo(\"unknown option %s\", optionName);"
    },
    {
        "line": 99,
        "fullcodeline": "result = HTTPAPI_ERROR;"
    },
    {
        "line": 105,
        "fullcodeline": "*savedValue = temp;"
    },
    {
        "line": 106,
        "fullcodeline": "result = HTTPAPI_OK;"
    },
    {
        "line": 104,
        "fullcodeline": "*temp = *(bool*)value;"
    }
]