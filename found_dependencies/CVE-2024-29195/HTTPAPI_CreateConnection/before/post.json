[
    {
        "line": 5,
        "fullcodeline": "if (hostName == NULL)"
    },
    {
        "line": 110,
        "fullcodeline": "return (HTTP_HANDLE)httpHandleData;"
    },
    {
        "line": 7,
        "fullcodeline": "LogError(\"invalid arg const char* hostName = %p\", hostName);"
    },
    {
        "line": 8,
        "fullcodeline": "httpHandleData = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "if (httpHandleData != NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "size_t hostURL_size = strlen(\"https://\") + strlen(hostName) + 1;"
    },
    {
        "line": 16,
        "fullcodeline": "httpHandleData->hostURL = malloc(hostURL_size);"
    },
    {
        "line": 18,
        "fullcodeline": "if (httpHandleData->hostURL == NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "LogError(\"unable to malloc\");"
    },
    {
        "line": 21,
        "fullcodeline": "free(httpHandleData);"
    },
    {
        "line": 22,
        "fullcodeline": "httpHandleData = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "else if ((strcpy_s(httpHandleData->hostURL, hostURL_size, \"https://\") != 0) ||"
    },
    {
        "line": 25,
        "fullcodeline": "(strcat_s(httpHandleData->hostURL, hostURL_size, hostName) != 0))"
    },
    {
        "line": 27,
        "fullcodeline": "LogError(\"unable to set hostURL\");"
    },
    {
        "line": 28,
        "fullcodeline": "free(httpHandleData->hostURL);"
    },
    {
        "line": 29,
        "fullcodeline": "free(httpHandleData);"
    },
    {
        "line": 30,
        "fullcodeline": "httpHandleData = NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "else if ((httpHandleData->curl = curl_easy_init()) == NULL)"
    },
    {
        "line": 34,
        "fullcodeline": "LogError(\"unable to init cURL structure\");"
    },
    {
        "line": 35,
        "fullcodeline": "free(httpHandleData->hostURL);"
    },
    {
        "line": 36,
        "fullcodeline": "free(httpHandleData);"
    },
    {
        "line": 37,
        "fullcodeline": "httpHandleData = NULL;"
    },
    {
        "line": 82,
        "fullcodeline": "LogInfo(\"If using SecureTransport with the C SDK, please confirm cURL is also configured to use SecureTransport.\");"
    },
    {
        "line": 84,
        "fullcodeline": "httpHandleData->timeout = 242 * 1000; /*242 seconds seems like a nice enough time. Reasone for 242:"
    },
    {
        "line": 87,
        "fullcodeline": "httpHandleData->lowSpeedTime = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "httpHandleData->lowSpeedLimit = 0;"
    },
    {
        "line": 89,
        "fullcodeline": "httpHandleData->forbidReuse = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "httpHandleData->freshConnect = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "httpHandleData->verbose = 0;"
    },
    {
        "line": 92,
        "fullcodeline": "httpHandleData->x509certificate = NULL;"
    },
    {
        "line": 93,
        "fullcodeline": "httpHandleData->x509privatekey = NULL;"
    },
    {
        "line": 94,
        "fullcodeline": "httpHandleData->certificates = NULL;"
    }
]