[
    {
        "line": 3,
        "fullcodeline": "char *out=0;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!item) return 0;"
    },
    {
        "line": 7,
        "fullcodeline": "switch ((item->type)&255)"
    },
    {
        "line": 12,
        "fullcodeline": "case cJSON_Number:\tout=print_number(item,p);break;"
    },
    {
        "line": 13,
        "fullcodeline": "case cJSON_String:\tout=print_string(item,p);break;"
    },
    {
        "line": 14,
        "fullcodeline": "case cJSON_Array:\tout=print_array(item,depth,fmt,p);break;"
    },
    {
        "line": 15,
        "fullcodeline": "case cJSON_Object:\tout=print_object(item,depth,fmt,p);break;"
    },
    {
        "line": 20,
        "fullcodeline": "switch ((item->type)&255)"
    },
    {
        "line": 9,
        "fullcodeline": "case cJSON_NULL:\t{out=ensure(p,5);\tif (out) strcpy(out,\"null\");\tbreak;}"
    },
    {
        "line": 10,
        "fullcodeline": "case cJSON_False:\t{out=ensure(p,6);\tif (out) strcpy(out,\"false\");\tbreak;}"
    },
    {
        "line": 11,
        "fullcodeline": "case cJSON_True:\t{out=ensure(p,5);\tif (out) strcpy(out,\"true\");\tbreak;}"
    },
    {
        "line": 22,
        "fullcodeline": "case cJSON_NULL:\tout=cJSON_strdup(\"null\");\tbreak;"
    },
    {
        "line": 23,
        "fullcodeline": "case cJSON_False:\tout=cJSON_strdup(\"false\");break;"
    },
    {
        "line": 24,
        "fullcodeline": "case cJSON_True:\tout=cJSON_strdup(\"true\"); break;"
    },
    {
        "line": 25,
        "fullcodeline": "case cJSON_Number:\tout=print_number(item,0);break;"
    },
    {
        "line": 26,
        "fullcodeline": "case cJSON_String:\tout=print_string(item,0);break;"
    },
    {
        "line": 27,
        "fullcodeline": "case cJSON_Array:\tout=print_array(item,depth,fmt,0);break;"
    },
    {
        "line": 28,
        "fullcodeline": "case cJSON_Object:\tout=print_object(item,depth,fmt,0);break;"
    }
]