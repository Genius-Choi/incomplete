[
    {
        "line": 3,
        "fullcodeline": "char *into=json;"
    },
    {
        "line": 15,
        "fullcodeline": "*into=0;\t/* and null-terminate. */"
    },
    {
        "line": 6,
        "fullcodeline": "if (*json==' ') json++;"
    },
    {
        "line": 7,
        "fullcodeline": "else if (*json=='\\t') json++;\t/* Whitespace characters. */"
    },
    {
        "line": 8,
        "fullcodeline": "else if (*json=='\\r') json++;"
    },
    {
        "line": 9,
        "fullcodeline": "else if (*json=='\\n') json++;"
    },
    {
        "line": 10,
        "fullcodeline": "else if (*json=='/' && json[1]=='/')  while (*json && *json!='\\n') json++;\t/* double-slash comments, to end of line. */"
    },
    {
        "line": 11,
        "fullcodeline": "else if (*json=='/' && json[1]=='*') {while (*json && !(*json=='*' && json[1]=='/')) json++;json+=2;}\t/* multiline comments. */"
    },
    {
        "line": 12,
        "fullcodeline": "else if (*json=='\\\"'){*into++=*json++;while (*json && *json!='\\\"'){if (*json=='\\\\') *into++=*json++;*into++=*json++;}*into++=*json++;} /* string literals, which are \\\" sensitive. */"
    },
    {
        "line": 13,
        "fullcodeline": "else *into++=*json++;\t\t\t/* All other characters. */"
    }
]