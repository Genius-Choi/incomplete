[
    {
        "line": 3,
        "fullcodeline": "const char *end=0,**ep=return_parse_end?return_parse_end:&global_ep;"
    },
    {
        "line": 4,
        "fullcodeline": "cJSON *c=cJSON_New_Item();"
    },
    {
        "line": 5,
        "fullcodeline": "*ep=0;"
    },
    {
        "line": 8,
        "fullcodeline": "end=parse_value(c,skip(value),ep);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!c) return 0;       /* memory fail */"
    },
    {
        "line": 9,
        "fullcodeline": "if (!end)\t{cJSON_Delete(c);return 0;}\t/* parse failure. ep is set. */"
    },
    {
        "line": 12,
        "fullcodeline": "if (require_null_terminated) {end=skip(end);if (*end) {cJSON_Delete(c);*ep=end;return 0;}}"
    },
    {
        "line": 13,
        "fullcodeline": "if (return_parse_end) *return_parse_end=end;"
    }
]