[
    {
        "line": 3,
        "fullcodeline": "int64_t i = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "double f = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int isint = 1;"
    },
    {
        "line": 6,
        "fullcodeline": "int sign = 1, scale = 0, subscale = 0, signsubscale = 1;"
    },
    {
        "line": 62,
        "fullcodeline": "item->type = cJSON_Number;"
    },
    {
        "line": 9,
        "fullcodeline": "if ( *num == '-' ) {"
    },
    {
        "line": 14,
        "fullcodeline": "if ( *num == '0' )"
    },
    {
        "line": 17,
        "fullcodeline": "if ( *num >= '1' && *num<='9' ) {"
    },
    {
        "line": 25,
        "fullcodeline": "if ( *num == '.' && num[1] >= '0' && num[1] <= '9' ) {"
    },
    {
        "line": 34,
        "fullcodeline": "if ( *num == 'e' || *num == 'E' ) {"
    },
    {
        "line": 11,
        "fullcodeline": "sign = -1;"
    },
    {
        "line": 12,
        "fullcodeline": "++num;"
    },
    {
        "line": 16,
        "fullcodeline": "++num;"
    },
    {
        "line": 27,
        "fullcodeline": "isint = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "++num;"
    },
    {
        "line": 36,
        "fullcodeline": "isint = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "++num;"
    },
    {
        "line": 52,
        "fullcodeline": "i = sign * i;"
    },
    {
        "line": 53,
        "fullcodeline": "item->valueint = i;"
    },
    {
        "line": 54,
        "fullcodeline": "item->valuefloat = i;"
    },
    {
        "line": 23,
        "fullcodeline": "} while ( *num >= '0' && *num <= '9' );"
    },
    {
        "line": 32,
        "fullcodeline": "} while ( *num >= '0' && *num <= '9' );"
    },
    {
        "line": 38,
        "fullcodeline": "if ( *num == '+' )"
    },
    {
        "line": 45,
        "fullcodeline": "while ( *num >= '0' && *num <= '9' )"
    },
    {
        "line": 46,
        "fullcodeline": "subscale = ( subscale * 10 ) + ( *num++ - '0' );"
    },
    {
        "line": 57,
        "fullcodeline": "f = sign * f * ipow( 10.0, scale + subscale * signsubscale );"
    },
    {
        "line": 58,
        "fullcodeline": "item->valueint = f;"
    },
    {
        "line": 59,
        "fullcodeline": "item->valuefloat = f;"
    },
    {
        "line": 20,
        "fullcodeline": "i = ( i * 10 ) + ( *num - '0' );"
    },
    {
        "line": 21,
        "fullcodeline": "f = ( f * 10.0 ) + ( *num - '0' );"
    },
    {
        "line": 22,
        "fullcodeline": "++num;"
    },
    {
        "line": 30,
        "fullcodeline": "f = ( f * 10.0 ) + ( *num++ - '0' );"
    },
    {
        "line": 31,
        "fullcodeline": "scale--;"
    },
    {
        "line": 39,
        "fullcodeline": "++num;"
    },
    {
        "line": 40,
        "fullcodeline": "else if ( *num == '-' ) {"
    },
    {
        "line": 42,
        "fullcodeline": "signsubscale = -1;"
    },
    {
        "line": 43,
        "fullcodeline": "++num;"
    }
]