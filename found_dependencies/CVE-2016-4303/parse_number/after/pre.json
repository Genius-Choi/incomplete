[
    {
        "line": 3,
        "fullcodeline": "double n=0,sign=1,scale=0;int subscale=0,signsubscale=1;"
    },
    {
        "line": 14,
        "fullcodeline": "n=sign*n*pow(10.0,(scale+subscale*signsubscale));\t/* number = +/- number.fraction * 10^+/- exponent */"
    },
    {
        "line": 16,
        "fullcodeline": "item->valuedouble=n;"
    },
    {
        "line": 17,
        "fullcodeline": "item->valueint=(int64_t)n;"
    },
    {
        "line": 18,
        "fullcodeline": "item->type=cJSON_Number;"
    },
    {
        "line": 5,
        "fullcodeline": "if (*num=='-') sign=-1,num++;\t/* Has sign? */"
    },
    {
        "line": 6,
        "fullcodeline": "if (*num=='0') num++;\t\t\t/* is zero */"
    },
    {
        "line": 7,
        "fullcodeline": "if (*num>='1' && *num<='9')\tdo\tn=(n*10.0)+(*num++ -'0');\twhile (*num>='0' && *num<='9');\t/* Number? */"
    },
    {
        "line": 8,
        "fullcodeline": "if (*num=='.' && num[1]>='0' && num[1]<='9') {num++;\t\tdo\tn=(n*10.0)+(*num++ -'0'),scale--; while (*num>='0' && *num<='9');}\t/* Fractional part? */"
    },
    {
        "line": 9,
        "fullcodeline": "if (*num=='e' || *num=='E')\t\t/* Exponent? */"
    },
    {
        "line": 10,
        "fullcodeline": "{\tnum++;if (*num=='+') num++;\telse if (*num=='-') signsubscale=-1,num++;\t\t/* With sign? */"
    },
    {
        "line": 11,
        "fullcodeline": "while (*num>='0' && *num<='9') subscale=(subscale*10)+(*num++ - '0');\t/* Number? */"
    }
]