[
    {
        "line": 6,
        "fullcodeline": "item->type=cJSON_Array;"
    },
    {
        "line": 7,
        "fullcodeline": "value=skip(value+1);"
    },
    {
        "line": 10,
        "fullcodeline": "item->child=child=cJSON_New_Item();"
    },
    {
        "line": 12,
        "fullcodeline": "value=skip(parse_value(child,skip(value),ep));\t/* skip any spacing, get the value. */"
    },
    {
        "line": 4,
        "fullcodeline": "if (*value!='[')\t{*ep=value;return 0;}\t/* not an array! */"
    },
    {
        "line": 8,
        "fullcodeline": "if (*value==']') return value+1;\t/* empty array. */"
    },
    {
        "line": 13,
        "fullcodeline": "if (!value) return 0;"
    },
    {
        "line": 15,
        "fullcodeline": "while (*value==',')"
    },
    {
        "line": 24,
        "fullcodeline": "if (*value==']') return value+1;\t/* end of array */"
    },
    {
        "line": 19,
        "fullcodeline": "child->next=new_item;new_item->prev=child;child=new_item;"
    },
    {
        "line": 20,
        "fullcodeline": "value=skip(parse_value(child,skip(value+1),ep));"
    },
    {
        "line": 21,
        "fullcodeline": "if (!value) return 0;\t/* memory fail */"
    },
    {
        "line": 18,
        "fullcodeline": "if (!(new_item=cJSON_New_Item())) return 0; \t/* memory fail */"
    }
]