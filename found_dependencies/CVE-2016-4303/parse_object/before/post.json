[
    {
        "line": 11,
        "fullcodeline": "item->type = cJSON_Object;"
    },
    {
        "line": 12,
        "fullcodeline": "value =skip( value + 1 );"
    },
    {
        "line": 20,
        "fullcodeline": "child->string = child->valuestring;"
    },
    {
        "line": 21,
        "fullcodeline": "child->valuestring = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "ep = value;"
    },
    {
        "line": 5,
        "fullcodeline": "if ( *value != '{' ) {"
    },
    {
        "line": 13,
        "fullcodeline": "if ( *value == '}' )"
    },
    {
        "line": 16,
        "fullcodeline": "if ( ! ( item->child = child = cJSON_New_Item() ) )"
    },
    {
        "line": 18,
        "fullcodeline": "if ( ! ( value = skip( parse_string( child, skip( value ) ) ) ) )"
    },
    {
        "line": 22,
        "fullcodeline": "if ( *value != ':' ) {"
    },
    {
        "line": 27,
        "fullcodeline": "if ( ! ( value = skip( parse_value( child, skip( value + 1 ) ) ) ) )"
    },
    {
        "line": 30,
        "fullcodeline": "while ( *value == ',' ) {"
    },
    {
        "line": 50,
        "fullcodeline": "if ( *value == '}' )"
    },
    {
        "line": 7,
        "fullcodeline": "ep = value;"
    },
    {
        "line": 24,
        "fullcodeline": "ep = value;"
    },
    {
        "line": 34,
        "fullcodeline": "child->next = new_item;"
    },
    {
        "line": 35,
        "fullcodeline": "new_item->prev = child;"
    },
    {
        "line": 36,
        "fullcodeline": "child = new_item;"
    },
    {
        "line": 39,
        "fullcodeline": "child->string = child->valuestring;"
    },
    {
        "line": 40,
        "fullcodeline": "child->valuestring = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "return value + 1;\t/* empty array. */"
    },
    {
        "line": 32,
        "fullcodeline": "if ( ! ( new_item = cJSON_New_Item() ) )"
    },
    {
        "line": 37,
        "fullcodeline": "if ( ! ( value = skip( parse_string( child, skip( value + 1 ) ) ) ) )"
    },
    {
        "line": 41,
        "fullcodeline": "if ( *value != ':' ) {"
    },
    {
        "line": 46,
        "fullcodeline": "if ( ! ( value = skip( parse_value( child, skip( value + 1 ) ) ) ) )"
    },
    {
        "line": 51,
        "fullcodeline": "return value + 1;\t/* end of array */"
    },
    {
        "line": 43,
        "fullcodeline": "ep = value;"
    }
]