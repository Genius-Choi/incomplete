[
    {
        "line": 4,
        "fullcodeline": "char *out = 0, *ptr, *ret;"
    },
    {
        "line": 5,
        "fullcodeline": "int len = 5;"
    },
    {
        "line": 6,
        "fullcodeline": "cJSON *child = item->child;"
    },
    {
        "line": 7,
        "fullcodeline": "int numentries = 0, i = 0, fail = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "memset( entries, 0, numentries * sizeof(char*) );"
    },
    {
        "line": 19,
        "fullcodeline": "child = item->child;"
    },
    {
        "line": 47,
        "fullcodeline": "*out = '[';"
    },
    {
        "line": 48,
        "fullcodeline": "ptr = out + 1;"
    },
    {
        "line": 49,
        "fullcodeline": "*ptr = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "cJSON_free( entries );"
    },
    {
        "line": 62,
        "fullcodeline": "*ptr++ = ']';"
    },
    {
        "line": 63,
        "fullcodeline": "*ptr++ = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "if ( ! ( entries = (char**) cJSON_malloc( numentries * sizeof(char*) ) ) )"
    },
    {
        "line": 20,
        "fullcodeline": "while ( child && ! fail ) {"
    },
    {
        "line": 31,
        "fullcodeline": "if ( ! fail ) {"
    },
    {
        "line": 50,
        "fullcodeline": "for ( i = 0; i < numentries; ++i ) {"
    },
    {
        "line": 11,
        "fullcodeline": "++numentries;"
    },
    {
        "line": 12,
        "fullcodeline": "child = child->next;"
    },
    {
        "line": 21,
        "fullcodeline": "ret = print_value( child, depth + 1, fmt );"
    },
    {
        "line": 22,
        "fullcodeline": "entries[i++] = ret;"
    },
    {
        "line": 27,
        "fullcodeline": "child = child -> next;"
    },
    {
        "line": 32,
        "fullcodeline": "out = (char*) cJSON_malloc( len );"
    },
    {
        "line": 42,
        "fullcodeline": "cJSON_free( entries );"
    },
    {
        "line": 51,
        "fullcodeline": "strcpy( ptr, entries[i] );"
    },
    {
        "line": 52,
        "fullcodeline": "ptr += strlen( entries[i] );"
    },
    {
        "line": 59,
        "fullcodeline": "cJSON_free( entries[i] );"
    },
    {
        "line": 33,
        "fullcodeline": "if ( ! out )"
    },
    {
        "line": 39,
        "fullcodeline": "for ( i = 0; i < numentries; ++i )"
    },
    {
        "line": 53,
        "fullcodeline": "if ( i != numentries - 1 ) {"
    },
    {
        "line": 24,
        "fullcodeline": "len += strlen( ret ) + 2 + ( fmt ? 1 : 0 );"
    },
    {
        "line": 34,
        "fullcodeline": "fail = 1;"
    },
    {
        "line": 54,
        "fullcodeline": "*ptr++ = ',';"
    },
    {
        "line": 57,
        "fullcodeline": "*ptr = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "fail = 1;"
    },
    {
        "line": 41,
        "fullcodeline": "cJSON_free( entries[i] );"
    },
    {
        "line": 56,
        "fullcodeline": "*ptr++ = ' ';"
    }
]