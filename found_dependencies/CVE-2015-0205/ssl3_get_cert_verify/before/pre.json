[
    {
        "line": 3,
        "fullcodeline": "EVP_PKEY *pkey=NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int al,ok,ret=0;"
    },
    {
        "line": 7,
        "fullcodeline": "int type=0,i,j;"
    },
    {
        "line": 9,
        "fullcodeline": "const EVP_MD *md = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "EVP_MD_CTX_init(&mctx);"
    },
    {
        "line": 13,
        "fullcodeline": "n=s->method->ssl_get_message(s,"
    },
    {
        "line": 69,
        "fullcodeline": "p=(unsigned char *)s->init_msg;"
    },
    {
        "line": 108,
        "fullcodeline": "j=EVP_PKEY_size(pkey);"
    },
    {
        "line": 230,
        "fullcodeline": "ret=1;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!ok) return((int)n);"
    },
    {
        "line": 22,
        "fullcodeline": "if (s->session->peer != NULL)"
    },
    {
        "line": 34,
        "fullcodeline": "if (s->s3->tmp.message_type != SSL3_MT_CERTIFICATE_VERIFY)"
    },
    {
        "line": 47,
        "fullcodeline": "if (peer == NULL)"
    },
    {
        "line": 116,
        "fullcodeline": "if (SSL_USE_SIGALGS(s))"
    },
    {
        "line": 16,
        "fullcodeline": "-1,"
    },
    {
        "line": 24,
        "fullcodeline": "peer=s->session->peer;"
    },
    {
        "line": 25,
        "fullcodeline": "pkey=X509_get_pubkey(peer);"
    },
    {
        "line": 26,
        "fullcodeline": "type=X509_certificate_type(peer,pkey);"
    },
    {
        "line": 43,
        "fullcodeline": "ret=1;"
    },
    {
        "line": 49,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_NO_CLIENT_CERT_RECEIVED);"
    },
    {
        "line": 50,
        "fullcodeline": "al=SSL_AD_UNEXPECTED_MESSAGE;"
    },
    {
        "line": 54,
        "fullcodeline": "if (!(type & EVP_PKT_SIGN))"
    },
    {
        "line": 56,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE);"
    },
    {
        "line": 57,
        "fullcodeline": "al=SSL_AD_ILLEGAL_PARAMETER;"
    },
    {
        "line": 63,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_CCS_RECEIVED_EARLY);"
    },
    {
        "line": 64,
        "fullcodeline": "al=SSL_AD_UNEXPECTED_MESSAGE;"
    },
    {
        "line": 73,
        "fullcodeline": "if (n==64 && (pkey->type==NID_id_GostR3410_94 ||"
    },
    {
        "line": 76,
        "fullcodeline": "i=64;"
    },
    {
        "line": 109,
        "fullcodeline": "if ((i > j) || (n > j) || (n <= 0))"
    },
    {
        "line": 111,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_WRONG_SIGNATURE_SIZE);"
    },
    {
        "line": 112,
        "fullcodeline": "al=SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 120,
        "fullcodeline": "hdatalen = BIO_get_mem_data(s->s3->handshake_buffer, &hdata);"
    },
    {
        "line": 234,
        "fullcodeline": "ssl3_send_alert(s,SSL3_AL_FATAL,al);"
    },
    {
        "line": 30,
        "fullcodeline": "peer=NULL;"
    },
    {
        "line": 31,
        "fullcodeline": "pkey=NULL;"
    },
    {
        "line": 74,
        "fullcodeline": "pkey->type == NID_id_GostR3410_2001) )"
    },
    {
        "line": 99,
        "fullcodeline": "n2s(p,i);"
    },
    {
        "line": 100,
        "fullcodeline": "n-=2;"
    },
    {
        "line": 121,
        "fullcodeline": "if (hdatalen <= 0)"
    },
    {
        "line": 241,
        "fullcodeline": "s->s3->flags &= ~TLS1_FLAGS_KEEP_HANDSHAKE;"
    },
    {
        "line": 37,
        "fullcodeline": "if ((peer != NULL) && (type & EVP_PKT_SIGN))"
    },
    {
        "line": 39,
        "fullcodeline": "al=SSL_AD_UNEXPECTED_MESSAGE;"
    },
    {
        "line": 40,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_MISSING_VERIFY_MESSAGE);"
    },
    {
        "line": 80,
        "fullcodeline": "if (SSL_USE_SIGALGS(s))"
    },
    {
        "line": 101,
        "fullcodeline": "if (i > n)"
    },
    {
        "line": 124,
        "fullcodeline": "al=SSL_AD_INTERNAL_ERROR;"
    },
    {
        "line": 131,
        "fullcodeline": "if (!EVP_VerifyInit_ex(&mctx, md, NULL)"
    },
    {
        "line": 132,
        "fullcodeline": "|| !EVP_VerifyUpdate(&mctx, hdata, hdatalen))"
    },
    {
        "line": 134,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY, ERR_R_EVP_LIB);"
    },
    {
        "line": 135,
        "fullcodeline": "al=SSL_AD_INTERNAL_ERROR;"
    },
    {
        "line": 139,
        "fullcodeline": "if (EVP_VerifyFinal(&mctx, p , i, pkey) <= 0)"
    },
    {
        "line": 141,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    },
    {
        "line": 142,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_BAD_SIGNATURE);"
    },
    {
        "line": 148,
        "fullcodeline": "if (pkey->type == EVP_PKEY_RSA)"
    },
    {
        "line": 82,
        "fullcodeline": "int rv = tls12_check_peer_sigalg(&md, s, p, pkey);"
    },
    {
        "line": 96,
        "fullcodeline": "p += 2;"
    },
    {
        "line": 97,
        "fullcodeline": "n -= 2;"
    },
    {
        "line": 103,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_LENGTH_MISMATCH);"
    },
    {
        "line": 104,
        "fullcodeline": "al=SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 150,
        "fullcodeline": "i=RSA_verify(NID_md5_sha1, s->s3->tmp.cert_verify_md,"
    },
    {
        "line": 83,
        "fullcodeline": "if (rv == -1)"
    },
    {
        "line": 153,
        "fullcodeline": "if (i < 0)"
    },
    {
        "line": 85,
        "fullcodeline": "al = SSL_AD_INTERNAL_ERROR;"
    },
    {
        "line": 155,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    },
    {
        "line": 156,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_BAD_RSA_DECRYPT);"
    },
    {
        "line": 161,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    },
    {
        "line": 162,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_BAD_RSA_SIGNATURE);"
    },
    {
        "line": 169,
        "fullcodeline": "if (pkey->type == EVP_PKEY_DSA)"
    },
    {
        "line": 171,
        "fullcodeline": "j=DSA_verify(pkey->save_type,"
    },
    {
        "line": 90,
        "fullcodeline": "al = SSL_AD_DECODE_ERROR;"
    },
    {
        "line": 177,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    },
    {
        "line": 178,
        "fullcodeline": "SSLerr(SSL_F_SSL3_GET_CERT_VERIFY,SSL_R_BAD_DSA_SIGNATURE);"
    },
    {
        "line": 185,
        "fullcodeline": "if (pkey->type == EVP_PKEY_EC)"
    },
    {
        "line": 187,
        "fullcodeline": "j=ECDSA_verify(pkey->save_type,"
    },
    {
        "line": 193,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    },
    {
        "line": 201,
        "fullcodeline": "if (pkey->type == NID_id_GostR3410_94 || pkey->type == NID_id_GostR3410_2001)"
    },
    {
        "line": 202,
        "fullcodeline": "{   unsigned char signature[64];"
    },
    {
        "line": 204,
        "fullcodeline": "EVP_PKEY_CTX *pctx = EVP_PKEY_CTX_new(pkey,NULL);"
    },
    {
        "line": 205,
        "fullcodeline": "EVP_PKEY_verify_init(pctx);"
    },
    {
        "line": 212,
        "fullcodeline": "j=EVP_PKEY_verify(pctx,signature,64,s->s3->tmp.cert_verify_md,32);"
    },
    {
        "line": 206,
        "fullcodeline": "if (i!=64) {"
    },
    {
        "line": 209,
        "fullcodeline": "for (idx=0;idx<64;idx++) {"
    },
    {
        "line": 225,
        "fullcodeline": "al=SSL_AD_UNSUPPORTED_CERTIFICATE;"
    },
    {
        "line": 207,
        "fullcodeline": "fprintf(stderr,\"GOST signature length is %d\",i);"
    },
    {
        "line": 210,
        "fullcodeline": "signature[63-idx]=p[idx];"
    },
    {
        "line": 216,
        "fullcodeline": "al=SSL_AD_DECRYPT_ERROR;"
    }
]