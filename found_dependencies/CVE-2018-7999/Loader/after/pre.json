[
    {
        "line": 16,
        "fullcodeline": "const Face::Table maxp = Face::Table(face, Tag::maxp);"
    },
    {
        "line": 19,
        "fullcodeline": "_num_glyphs_graphics = TtfUtil::GlyphCount(maxp);"
    },
    {
        "line": 34,
        "fullcodeline": "const byte    * p = m_pGloc;"
    },
    {
        "line": 35,
        "fullcodeline": "int       version = be::read<uint32>(p);"
    },
    {
        "line": 36,
        "fullcodeline": "const uint16    flags = be::read<uint16>(p);"
    },
    {
        "line": 37,
        "fullcodeline": "_num_attrs = be::read<uint16>(p);"
    },
    {
        "line": 42,
        "fullcodeline": "int tmpnumgattrs       = (m_pGloc.size()"
    },
    {
        "line": 56,
        "fullcodeline": "_num_glyphs_attributes = static_cast<unsigned short>(tmpnumgattrs);"
    },
    {
        "line": 57,
        "fullcodeline": "p = m_pGlat;"
    },
    {
        "line": 58,
        "fullcodeline": "version = be::read<uint32>(p);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!operator bool())"
    },
    {
        "line": 17,
        "fullcodeline": "if (!maxp) { _head = Face::Table(); return; }"
    },
    {
        "line": 21,
        "fullcodeline": "if (_glyf && TtfUtil::LocaLookup(_num_glyphs_graphics-1, _loca, _loca.size(), _head) == size_t(-2))"
    },
    {
        "line": 41,
        "fullcodeline": "_long_fmt              = flags & 1;"
    },
    {
        "line": 27,
        "fullcodeline": "if ((m_pGlat = Face::Table(face, Tag::Glat, 0x00030000)) == NULL"
    },
    {
        "line": 29,
        "fullcodeline": "|| m_pGloc.size() < 8)"
    },
    {
        "line": 47,
        "fullcodeline": "if (version >= 0x00020000 || tmpnumgattrs < 0 || tmpnumgattrs > 65535"
    },
    {
        "line": 50,
        "fullcodeline": "|| m_pGlat.size() < 4)"
    },
    {
        "line": 59,
        "fullcodeline": "if (version >= 0x00040000 || (version >= 0x00030000 && m_pGlat.size() < 8))       // reject Glat tables that are too new"
    },
    {
        "line": 28,
        "fullcodeline": "|| (m_pGloc = Face::Table(face, Tag::Gloc)) == NULL"
    },
    {
        "line": 49,
        "fullcodeline": "|| _num_glyphs_graphics > tmpnumgattrs"
    },
    {
        "line": 44,
        "fullcodeline": "- sizeof(uint16)*(flags & 0x2 ? _num_attrs : 0))"
    },
    {
        "line": 48,
        "fullcodeline": "|| _num_attrs == 0 || _num_attrs > 0x3000  // is this hard limit appropriate?"
    },
    {
        "line": 43,
        "fullcodeline": "- (p - m_pGloc)"
    },
    {
        "line": 66,
        "fullcodeline": "unsigned int glatflags = be::read<uint32>(p);"
    },
    {
        "line": 67,
        "fullcodeline": "_has_boxes = glatflags & 1;"
    }
]