[
    {
        "line": 6,
        "fullcodeline": "ret = None"
    },
    {
        "line": 9,
        "fullcodeline": "cmd_split_redirect = cmd.split('>')"
    },
    {
        "line": 18,
        "fullcodeline": "sub_cmd_stdin = None"
    },
    {
        "line": 19,
        "fullcodeline": "p_last = None"
    },
    {
        "line": 35,
        "fullcodeline": "p_ret = p_last.communicate()"
    },
    {
        "line": 10,
        "fullcodeline": "if len(cmd_split_redirect) > 2:"
    },
    {
        "line": 21,
        "fullcodeline": "for sub_cmd in cmd.split('|'):"
    },
    {
        "line": 37,
        "fullcodeline": "if nativestr(p_ret[1]) == '':"
    },
    {
        "line": 39,
        "fullcodeline": "ret = nativestr(p_ret[0])"
    },
    {
        "line": 46,
        "fullcodeline": "ret = nativestr(p_ret[1])"
    },
    {
        "line": 23,
        "fullcodeline": "sub_cmd_split = [i for i in sub_cmd.split(' ') if i]"
    },
    {
        "line": 24,
        "fullcodeline": "p = Popen(sub_cmd_split,"
    },
    {
        "line": 32,
        "fullcodeline": "p_last = p"
    },
    {
        "line": 33,
        "fullcodeline": "sub_cmd_stdin = p.stdout"
    },
    {
        "line": 40,
        "fullcodeline": "if stdout_redirect is not None:"
    },
    {
        "line": 11,
        "fullcodeline": "return 'Glances error: Only one file redirection allowed ({})'.format(cmd)"
    },
    {
        "line": 12,
        "fullcodeline": "elif len(cmd_split_redirect) == 2:"
    },
    {
        "line": 13,
        "fullcodeline": "stdout_redirect = cmd_split_redirect[1].strip()"
    },
    {
        "line": 14,
        "fullcodeline": "cmd = cmd_split_redirect[0]"
    },
    {
        "line": 16,
        "fullcodeline": "stdout_redirect = None"
    },
    {
        "line": 29,
        "fullcodeline": "if p_last is not None:"
    },
    {
        "line": 42,
        "fullcodeline": "with open(stdout_redirect, \"w\") as stdout_redirect_file:"
    },
    {
        "line": 31,
        "fullcodeline": "p_last.stdout.close()"
    },
    {
        "line": 43,
        "fullcodeline": "stdout_redirect_file.write(ret)"
    }
]