[
    {
        "line": 3,
        "fullcodeline": "int frameSize = afGetVirtualFrameSize(infile, trackid, 1);"
    },
    {
        "line": 5,
        "fullcodeline": "const int kBufferFrameCount = 65536;"
    },
    {
        "line": 6,
        "fullcodeline": "void *buffer = malloc(kBufferFrameCount * frameSize);"
    },
    {
        "line": 8,
        "fullcodeline": "AFframecount totalFrames = afGetFrameCount(infile, AF_DEFAULT_TRACK);"
    },
    {
        "line": 9,
        "fullcodeline": "AFframecount totalFramesWritten = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "bool success = true;"
    },
    {
        "line": 42,
        "fullcodeline": "free(buffer);"
    },
    {
        "line": 13,
        "fullcodeline": "while (totalFramesWritten < totalFrames)"
    },
    {
        "line": 15,
        "fullcodeline": "AFframecount framesToRead = totalFrames - totalFramesWritten;"
    },
    {
        "line": 19,
        "fullcodeline": "AFframecount framesRead = afReadFrames(infile, trackid, buffer,"
    },
    {
        "line": 29,
        "fullcodeline": "AFframecount framesWritten = afWriteFrames(outfile, trackid, buffer,"
    },
    {
        "line": 39,
        "fullcodeline": "totalFramesWritten += framesWritten;"
    },
    {
        "line": 16,
        "fullcodeline": "if (framesToRead > kBufferFrameCount)"
    },
    {
        "line": 22,
        "fullcodeline": "if (framesRead < framesToRead)"
    },
    {
        "line": 32,
        "fullcodeline": "if (framesWritten < framesRead)"
    },
    {
        "line": 17,
        "fullcodeline": "framesToRead = kBufferFrameCount;"
    },
    {
        "line": 24,
        "fullcodeline": "fprintf(stderr, \"Bad read of audio track data.\\n\");"
    },
    {
        "line": 25,
        "fullcodeline": "success = false;"
    },
    {
        "line": 34,
        "fullcodeline": "fprintf(stderr, \"Bad write of audio track data.\\n\");"
    },
    {
        "line": 35,
        "fullcodeline": "success = false;"
    }
]