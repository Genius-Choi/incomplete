[
    {
        "line": 21,
        "fullcodeline": "const char *inFileName = argv[1];"
    },
    {
        "line": 22,
        "fullcodeline": "const char *outFileName = argv[2];"
    },
    {
        "line": 24,
        "fullcodeline": "int outFileFormat = AF_FILE_UNKNOWN;"
    },
    {
        "line": 25,
        "fullcodeline": "int outSampleFormat = -1, outSampleWidth = -1, outChannelCount = -1;"
    },
    {
        "line": 26,
        "fullcodeline": "int outCompression = AF_COMPRESSION_NONE;"
    },
    {
        "line": 27,
        "fullcodeline": "double outMaxAmp = 1.0;"
    },
    {
        "line": 29,
        "fullcodeline": "int i = 3;"
    },
    {
        "line": 148,
        "fullcodeline": "AFfilehandle inFile = afOpenFile(inFileName, \"r\", AF_NULL_FILESETUP);"
    },
    {
        "line": 156,
        "fullcodeline": "int fileFormat = afGetFileFormat(inFile, NULL);"
    },
    {
        "line": 157,
        "fullcodeline": "int channelCount = afGetChannels(inFile, AF_DEFAULT_TRACK);"
    },
    {
        "line": 158,
        "fullcodeline": "double sampleRate = afGetRate(inFile, AF_DEFAULT_TRACK);"
    },
    {
        "line": 160,
        "fullcodeline": "afGetSampleFormat(inFile, AF_DEFAULT_TRACK, &sampleFormat, &sampleWidth);"
    },
    {
        "line": 163,
        "fullcodeline": "AFfilesetup outFileSetup = afNewFileSetup();"
    },
    {
        "line": 177,
        "fullcodeline": "afInitFileFormat(outFileSetup, outFileFormat);"
    },
    {
        "line": 178,
        "fullcodeline": "afInitCompression(outFileSetup, AF_DEFAULT_TRACK, outCompression);"
    },
    {
        "line": 179,
        "fullcodeline": "afInitSampleFormat(outFileSetup, AF_DEFAULT_TRACK, outSampleFormat,"
    },
    {
        "line": 181,
        "fullcodeline": "afInitChannels(outFileSetup, AF_DEFAULT_TRACK, outChannelCount);"
    },
    {
        "line": 182,
        "fullcodeline": "afInitRate(outFileSetup, AF_DEFAULT_TRACK, sampleRate);"
    },
    {
        "line": 184,
        "fullcodeline": "AFfilehandle outFile = afOpenFile(outFileName, \"w\", outFileSetup);"
    },
    {
        "line": 191,
        "fullcodeline": "afFreeFileSetup(outFileSetup);"
    },
    {
        "line": 197,
        "fullcodeline": "afSetVirtualChannels(outFile, AF_DEFAULT_TRACK, channelCount);"
    },
    {
        "line": 198,
        "fullcodeline": "afSetVirtualSampleFormat(outFile, AF_DEFAULT_TRACK, sampleFormat,"
    },
    {
        "line": 201,
        "fullcodeline": "bool success = copyaudiodata(inFile, outFile, AF_DEFAULT_TRACK);"
    },
    {
        "line": 203,
        "fullcodeline": "afCloseFile(inFile);"
    },
    {
        "line": 204,
        "fullcodeline": "afCloseFile(outFile);"
    },
    {
        "line": 212,
        "fullcodeline": "printfileinfo(inFileName);"
    },
    {
        "line": 213,
        "fullcodeline": "putchar('\\n');"
    },
    {
        "line": 214,
        "fullcodeline": "printfileinfo(outFileName);"
    },
    {
        "line": 3,
        "fullcodeline": "if (argc == 2)"
    },
    {
        "line": 18,
        "fullcodeline": "if (argc < 3)"
    },
    {
        "line": 31,
        "fullcodeline": "while (i < argc)"
    },
    {
        "line": 149,
        "fullcodeline": "if (!inFile)"
    },
    {
        "line": 165,
        "fullcodeline": "if (outFileFormat == -1)"
    },
    {
        "line": 168,
        "fullcodeline": "if (outSampleFormat == -1 || outSampleWidth == -1)"
    },
    {
        "line": 174,
        "fullcodeline": "if (outChannelCount == -1)"
    },
    {
        "line": 185,
        "fullcodeline": "if (!outFile)"
    },
    {
        "line": 206,
        "fullcodeline": "if (!success)"
    },
    {
        "line": 19,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 145,
        "fullcodeline": "i++;"
    },
    {
        "line": 151,
        "fullcodeline": "printf(\"Could not open file '%s' for reading.\\n\", inFileName);"
    },
    {
        "line": 166,
        "fullcodeline": "outFileFormat = fileFormat;"
    },
    {
        "line": 170,
        "fullcodeline": "outSampleFormat = sampleFormat;"
    },
    {
        "line": 171,
        "fullcodeline": "outSampleWidth = sampleWidth;"
    },
    {
        "line": 175,
        "fullcodeline": "outChannelCount = channelCount;"
    },
    {
        "line": 187,
        "fullcodeline": "printf(\"Could not open file '%s' for writing.\\n\", outFileName);"
    },
    {
        "line": 208,
        "fullcodeline": "unlink(outFileName);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!strcmp(argv[1], \"--version\") || !strcmp(argv[1], \"-v\"))"
    },
    {
        "line": 11,
        "fullcodeline": "if (!strcmp(argv[1], \"--help\") || !strcmp(argv[1], \"-h\"))"
    },
    {
        "line": 33,
        "fullcodeline": "if (!strcmp(argv[i], \"format\"))"
    },
    {
        "line": 7,
        "fullcodeline": "printversion();"
    },
    {
        "line": 8,
        "fullcodeline": "exit(EXIT_SUCCESS);"
    },
    {
        "line": 13,
        "fullcodeline": "printusage();"
    },
    {
        "line": 14,
        "fullcodeline": "exit(EXIT_SUCCESS);"
    },
    {
        "line": 65,
        "fullcodeline": "i++;"
    },
    {
        "line": 35,
        "fullcodeline": "if (i + 1 >= argc)"
    },
    {
        "line": 38,
        "fullcodeline": "if (!strcmp(argv[i+1], \"aiff\"))"
    },
    {
        "line": 36,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 39,
        "fullcodeline": "outFileFormat = AF_FILE_AIFF;"
    },
    {
        "line": 67,
        "fullcodeline": "else if (!strcmp(argv[i], \"channels\"))"
    },
    {
        "line": 72,
        "fullcodeline": "outChannelCount = atoi(argv[i+1]);"
    },
    {
        "line": 77,
        "fullcodeline": "i++;"
    },
    {
        "line": 40,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"aifc\"))"
    },
    {
        "line": 69,
        "fullcodeline": "if (i + 1 >= argc)"
    },
    {
        "line": 73,
        "fullcodeline": "if (outChannelCount < 1)"
    },
    {
        "line": 41,
        "fullcodeline": "outFileFormat = AF_FILE_AIFFC;"
    },
    {
        "line": 70,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 74,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 79,
        "fullcodeline": "else if (!strcmp(argv[i], \"float\"))"
    },
    {
        "line": 84,
        "fullcodeline": "outSampleFormat = AF_SAMPFMT_FLOAT;"
    },
    {
        "line": 85,
        "fullcodeline": "outSampleWidth = 32;"
    },
    {
        "line": 86,
        "fullcodeline": "outMaxAmp = atof(argv[i+1]);"
    },
    {
        "line": 89,
        "fullcodeline": "(void) outMaxAmp;"
    },
    {
        "line": 92,
        "fullcodeline": "i++;"
    },
    {
        "line": 42,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"wave\"))"
    },
    {
        "line": 81,
        "fullcodeline": "if (i + 1 >= argc)"
    },
    {
        "line": 43,
        "fullcodeline": "outFileFormat = AF_FILE_WAVE;"
    },
    {
        "line": 82,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 94,
        "fullcodeline": "else if (!strcmp(argv[i], \"integer\"))"
    },
    {
        "line": 99,
        "fullcodeline": "outSampleWidth = atoi(argv[i+1]);"
    },
    {
        "line": 111,
        "fullcodeline": "i += 2;"
    },
    {
        "line": 44,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"next\"))"
    },
    {
        "line": 96,
        "fullcodeline": "if (i + 2 >= argc)"
    },
    {
        "line": 100,
        "fullcodeline": "if (outSampleWidth < 1 || outSampleWidth > 32)"
    },
    {
        "line": 103,
        "fullcodeline": "if (!strcmp(argv[i+2], \"2scomp\"))"
    },
    {
        "line": 45,
        "fullcodeline": "outFileFormat = AF_FILE_NEXTSND;"
    },
    {
        "line": 97,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 101,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 104,
        "fullcodeline": "outSampleFormat = AF_SAMPFMT_TWOSCOMP;"
    },
    {
        "line": 113,
        "fullcodeline": "else if (!strcmp(argv[i], \"compression\"))"
    },
    {
        "line": 138,
        "fullcodeline": "i++;"
    },
    {
        "line": 46,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"bics\"))"
    },
    {
        "line": 105,
        "fullcodeline": "else if (!strcmp(argv[i+2], \"unsigned\"))"
    },
    {
        "line": 115,
        "fullcodeline": "if (i + 1 >= argc)"
    },
    {
        "line": 118,
        "fullcodeline": "if (!strcmp(argv[i+1], \"none\"))"
    },
    {
        "line": 142,
        "fullcodeline": "printf(\"Unrecognized command %s\\n\", argv[i]);"
    },
    {
        "line": 47,
        "fullcodeline": "outFileFormat = AF_FILE_BICSF;"
    },
    {
        "line": 106,
        "fullcodeline": "outSampleFormat = AF_SAMPFMT_UNSIGNED;"
    },
    {
        "line": 116,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 119,
        "fullcodeline": "outCompression = AF_COMPRESSION_NONE;"
    },
    {
        "line": 108,
        "fullcodeline": "usageerror();"
    },
    {
        "line": 48,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"smp\"))"
    },
    {
        "line": 120,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"ulaw\"))"
    },
    {
        "line": 49,
        "fullcodeline": "outFileFormat = AF_FILE_SAMPLEVISION;"
    },
    {
        "line": 121,
        "fullcodeline": "outCompression = AF_COMPRESSION_G711_ULAW;"
    },
    {
        "line": 50,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"voc\"))"
    },
    {
        "line": 122,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"alaw\"))"
    },
    {
        "line": 51,
        "fullcodeline": "outFileFormat = AF_FILE_VOC;"
    },
    {
        "line": 123,
        "fullcodeline": "outCompression = AF_COMPRESSION_G711_ALAW;"
    },
    {
        "line": 52,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"nist\"))"
    },
    {
        "line": 124,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"ima\"))"
    },
    {
        "line": 53,
        "fullcodeline": "outFileFormat = AF_FILE_NIST_SPHERE;"
    },
    {
        "line": 125,
        "fullcodeline": "outCompression = AF_COMPRESSION_IMA;"
    },
    {
        "line": 54,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"caf\"))"
    },
    {
        "line": 126,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"msadpcm\"))"
    },
    {
        "line": 55,
        "fullcodeline": "outFileFormat = AF_FILE_CAF;"
    },
    {
        "line": 127,
        "fullcodeline": "outCompression = AF_COMPRESSION_MS_ADPCM;"
    },
    {
        "line": 56,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"flac\"))"
    },
    {
        "line": 128,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"flac\"))"
    },
    {
        "line": 57,
        "fullcodeline": "outFileFormat = AF_FILE_FLAC;"
    },
    {
        "line": 129,
        "fullcodeline": "outCompression = AF_COMPRESSION_FLAC;"
    },
    {
        "line": 60,
        "fullcodeline": "fprintf(stderr, \"sfconvert: Unknown format %s.\\n\", argv[i+1]);"
    },
    {
        "line": 61,
        "fullcodeline": "exit(EXIT_FAILURE);"
    },
    {
        "line": 130,
        "fullcodeline": "else if (!strcmp(argv[i+1], \"alac\"))"
    },
    {
        "line": 131,
        "fullcodeline": "outCompression = AF_COMPRESSION_ALAC;"
    },
    {
        "line": 134,
        "fullcodeline": "fprintf(stderr, \"sfconvert: Unknown compression format %s.\\n\", argv[i+1]);"
    },
    {
        "line": 135,
        "fullcodeline": "exit(EXIT_FAILURE);"
    }
]