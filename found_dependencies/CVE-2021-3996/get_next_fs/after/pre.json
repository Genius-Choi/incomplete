[
    {
        "line": 4,
        "fullcodeline": "struct libmnt_fs *fs = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "if (is_listall_mode()) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (mnt_table_next_fs(tb, itr, &fs) != 0)"
    },
    {
        "line": 19,
        "fullcodeline": "fs = mnt_table_find_source(tb, get_match(COL_SOURCE),"
    },
    {
        "line": 20,
        "fullcodeline": "mnt_iter_get_direction(itr));"
    },
    {
        "line": 22,
        "fullcodeline": "if (!fs && !(flags & FL_NOSWAPMATCH))"
    },
    {
        "line": 23,
        "fullcodeline": "fs = mnt_table_find_target(tb, get_match(COL_SOURCE),"
    },
    {
        "line": 33,
        "fullcodeline": "if (mnt_table_find_next_fs(tb, itr, match_func,  NULL, &fs) != 0)"
    },
    {
        "line": 34,
        "fullcodeline": "fs = NULL;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!fs &&"
    },
    {
        "line": 38,
        "fullcodeline": "!get_match(COL_TARGET) && get_match(COL_SOURCE)) {"
    },
    {
        "line": 41,
        "fullcodeline": "set_match(COL_TARGET, get_match(COL_SOURCE));"
    },
    {
        "line": 42,
        "fullcodeline": "set_match(COL_SOURCE, NULL);"
    },
    {
        "line": 43,
        "fullcodeline": "mnt_reset_iter(itr, -1);"
    },
    {
        "line": 24,
        "fullcodeline": "mnt_iter_get_direction(itr));"
    },
    {
        "line": 37,
        "fullcodeline": "!(flags & FL_NOSWAPMATCH) &&"
    }
]