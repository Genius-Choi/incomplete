[
    {
        "line": 4,
        "fullcodeline": "Residue *r = f->residue_config + rn;"
    },
    {
        "line": 5,
        "fullcodeline": "int rtype = f->residue_types[rn];"
    },
    {
        "line": 6,
        "fullcodeline": "int c = r->classbook;"
    },
    {
        "line": 7,
        "fullcodeline": "int classwords = f->codebooks[c].dimensions;"
    },
    {
        "line": 8,
        "fullcodeline": "int n_read = r->end - r->begin;"
    },
    {
        "line": 9,
        "fullcodeline": "int part_read = n_read / r->part_size;"
    },
    {
        "line": 10,
        "fullcodeline": "int temp_alloc_point = temp_alloc_save(f);"
    },
    {
        "line": 12,
        "fullcodeline": "uint8 ***part_classdata = (uint8 ***) temp_block_array(f,f->channels, part_read * sizeof(**part_classdata));"
    },
    {
        "line": 17,
        "fullcodeline": "CHECK(f);"
    },
    {
        "line": 162,
        "fullcodeline": "CHECK(f);"
    },
    {
        "line": 211,
        "fullcodeline": "CHECK(f);"
    },
    {
        "line": 213,
        "fullcodeline": "temp_free(f,part_classdata);"
    },
    {
        "line": 217,
        "fullcodeline": "temp_alloc_restore(f,temp_alloc_point);"
    },
    {
        "line": 19,
        "fullcodeline": "for (i=0; i < ch; ++i)"
    },
    {
        "line": 23,
        "fullcodeline": "if (rtype == 2 && ch != 1) {"
    },
    {
        "line": 164,
        "fullcodeline": "for (pass=0; pass < 8; ++pass) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!do_not_decode[i])"
    },
    {
        "line": 165,
        "fullcodeline": "int pcount = 0, class_set=0;"
    },
    {
        "line": 21,
        "fullcodeline": "memset(residue_buffers[i], 0, sizeof(float) * n);"
    },
    {
        "line": 24,
        "fullcodeline": "for (j=0; j < ch; ++j)"
    },
    {
        "line": 27,
        "fullcodeline": "if (j == ch)"
    },
    {
        "line": 30,
        "fullcodeline": "for (pass=0; pass < 8; ++pass) {"
    },
    {
        "line": 166,
        "fullcodeline": "while (pcount < part_read) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!do_not_decode[j])"
    },
    {
        "line": 31,
        "fullcodeline": "int pcount = 0, class_set = 0;"
    },
    {
        "line": 206,
        "fullcodeline": "++class_set;"
    },
    {
        "line": 32,
        "fullcodeline": "if (ch == 2) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (pass == 0) {"
    },
    {
        "line": 185,
        "fullcodeline": "for (i=0; i < classwords && pcount < part_read; ++i, ++pcount) {"
    },
    {
        "line": 33,
        "fullcodeline": "while (pcount < part_read) {"
    },
    {
        "line": 168,
        "fullcodeline": "for (j=0; j < ch; ++j) {"
    },
    {
        "line": 186,
        "fullcodeline": "for (j=0; j < ch; ++j) {"
    },
    {
        "line": 34,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 35,
        "fullcodeline": "int c_inter = (z & 1), p_inter = z>>1;"
    },
    {
        "line": 75,
        "fullcodeline": "++class_set;"
    },
    {
        "line": 78,
        "fullcodeline": "} else if (ch == 1) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (pass == 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "for (i=0; i < classwords && pcount < part_read; ++i, ++pcount) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (!do_not_decode[j]) {"
    },
    {
        "line": 187,
        "fullcodeline": "if (!do_not_decode[j]) {"
    },
    {
        "line": 37,
        "fullcodeline": "Codebook *c = f->codebooks+r->classbook;"
    },
    {
        "line": 39,
        "fullcodeline": "DECODE(q,f,c);"
    },
    {
        "line": 42,
        "fullcodeline": "part_classdata[0][class_set] = r->classdata[q];"
    },
    {
        "line": 51,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 53,
        "fullcodeline": "int c = part_classdata[0][class_set][i];"
    },
    {
        "line": 57,
        "fullcodeline": "int b = r->residue_books[c][pass];"
    },
    {
        "line": 79,
        "fullcodeline": "while (pcount < part_read) {"
    },
    {
        "line": 170,
        "fullcodeline": "Codebook *c = f->codebooks+r->classbook;"
    },
    {
        "line": 172,
        "fullcodeline": "DECODE(temp,f,c);"
    },
    {
        "line": 175,
        "fullcodeline": "part_classdata[j][class_set] = r->classdata[temp];"
    },
    {
        "line": 189,
        "fullcodeline": "int c = part_classdata[j][class_set][i];"
    },
    {
        "line": 193,
        "fullcodeline": "int b = r->residue_books[c][pass];"
    },
    {
        "line": 40,
        "fullcodeline": "if (q == EOP) goto done;"
    },
    {
        "line": 58,
        "fullcodeline": "if (b >= 0) {"
    },
    {
        "line": 80,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 81,
        "fullcodeline": "int c_inter = 0, p_inter = z;"
    },
    {
        "line": 115,
        "fullcodeline": "++class_set;"
    },
    {
        "line": 119,
        "fullcodeline": "while (pcount < part_read) {"
    },
    {
        "line": 173,
        "fullcodeline": "if (temp == EOP) goto done;"
    },
    {
        "line": 194,
        "fullcodeline": "if (b >= 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "Codebook *book = f->codebooks + b;"
    },
    {
        "line": 82,
        "fullcodeline": "if (pass == 0) {"
    },
    {
        "line": 96,
        "fullcodeline": "for (i=0; i < classwords && pcount < part_read; ++i, ++pcount) {"
    },
    {
        "line": 120,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 121,
        "fullcodeline": "int c_inter = z % ch, p_inter = z/ch;"
    },
    {
        "line": 155,
        "fullcodeline": "++class_set;"
    },
    {
        "line": 195,
        "fullcodeline": "float *target = residue_buffers[j];"
    },
    {
        "line": 196,
        "fullcodeline": "int offset = r->begin + pcount * r->part_size;"
    },
    {
        "line": 197,
        "fullcodeline": "int n = r->part_size;"
    },
    {
        "line": 198,
        "fullcodeline": "Codebook *book = f->codebooks + b;"
    },
    {
        "line": 65,
        "fullcodeline": "if (!codebook_decode_deinterleave_repeat(f, book, residue_buffers, ch, &c_inter, &p_inter, n, r->part_size))"
    },
    {
        "line": 69,
        "fullcodeline": "z += r->part_size;"
    },
    {
        "line": 70,
        "fullcodeline": "c_inter = z & 1;"
    },
    {
        "line": 71,
        "fullcodeline": "p_inter = z >> 1;"
    },
    {
        "line": 83,
        "fullcodeline": "Codebook *c = f->codebooks+r->classbook;"
    },
    {
        "line": 85,
        "fullcodeline": "DECODE(q,f,c);"
    },
    {
        "line": 88,
        "fullcodeline": "part_classdata[0][class_set] = r->classdata[q];"
    },
    {
        "line": 97,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 99,
        "fullcodeline": "int c = part_classdata[0][class_set][i];"
    },
    {
        "line": 103,
        "fullcodeline": "int b = r->residue_books[c][pass];"
    },
    {
        "line": 122,
        "fullcodeline": "if (pass == 0) {"
    },
    {
        "line": 136,
        "fullcodeline": "for (i=0; i < classwords && pcount < part_read; ++i, ++pcount) {"
    },
    {
        "line": 199,
        "fullcodeline": "if (!residue_decode(f, book, target, offset, n, rtype))"
    },
    {
        "line": 86,
        "fullcodeline": "if (q == EOP) goto done;"
    },
    {
        "line": 104,
        "fullcodeline": "if (b >= 0) {"
    },
    {
        "line": 123,
        "fullcodeline": "Codebook *c = f->codebooks+r->classbook;"
    },
    {
        "line": 125,
        "fullcodeline": "DECODE(q,f,c);"
    },
    {
        "line": 128,
        "fullcodeline": "part_classdata[0][class_set] = r->classdata[q];"
    },
    {
        "line": 137,
        "fullcodeline": "int z = r->begin + pcount*r->part_size;"
    },
    {
        "line": 139,
        "fullcodeline": "int c = part_classdata[0][class_set][i];"
    },
    {
        "line": 143,
        "fullcodeline": "int b = r->residue_books[c][pass];"
    },
    {
        "line": 105,
        "fullcodeline": "Codebook *book = f->codebooks + b;"
    },
    {
        "line": 126,
        "fullcodeline": "if (q == EOP) goto done;"
    },
    {
        "line": 144,
        "fullcodeline": "if (b >= 0) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (!codebook_decode_deinterleave_repeat(f, book, residue_buffers, ch, &c_inter, &p_inter, n, r->part_size))"
    },
    {
        "line": 109,
        "fullcodeline": "z += r->part_size;"
    },
    {
        "line": 110,
        "fullcodeline": "c_inter = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "p_inter = z;"
    },
    {
        "line": 145,
        "fullcodeline": "Codebook *book = f->codebooks + b;"
    },
    {
        "line": 146,
        "fullcodeline": "if (!codebook_decode_deinterleave_repeat(f, book, residue_buffers, ch, &c_inter, &p_inter, n, r->part_size))"
    },
    {
        "line": 149,
        "fullcodeline": "z += r->part_size;"
    },
    {
        "line": 150,
        "fullcodeline": "c_inter = z % ch;"
    },
    {
        "line": 151,
        "fullcodeline": "p_inter = z / ch;"
    }
]