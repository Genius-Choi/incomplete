[
    {
        "line": 7,
        "fullcodeline": "SIXELSTATUS status = SIXEL_FALSE;"
    },
    {
        "line": 42,
        "fullcodeline": "datasize = (size_t)(ncolors * 3);"
    },
    {
        "line": 43,
        "fullcodeline": "wholesize = headsize + datasize;"
    },
    {
        "line": 45,
        "fullcodeline": "*ppdither = (sixel_dither_t *)sixel_allocator_malloc(allocator, wholesize);"
    },
    {
        "line": 54,
        "fullcodeline": "(*ppdither)->ref = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "(*ppdither)->palette = (unsigned char*)(*ppdither + 1);"
    },
    {
        "line": 56,
        "fullcodeline": "(*ppdither)->cachetable = NULL;"
    },
    {
        "line": 57,
        "fullcodeline": "(*ppdither)->reqcolors = ncolors;"
    },
    {
        "line": 58,
        "fullcodeline": "(*ppdither)->ncolors = ncolors;"
    },
    {
        "line": 59,
        "fullcodeline": "(*ppdither)->origcolors = (-1);"
    },
    {
        "line": 60,
        "fullcodeline": "(*ppdither)->keycolor = (-1);"
    },
    {
        "line": 61,
        "fullcodeline": "(*ppdither)->optimized = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "(*ppdither)->optimize_palette = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "(*ppdither)->complexion = 1;"
    },
    {
        "line": 64,
        "fullcodeline": "(*ppdither)->bodyonly = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "(*ppdither)->method_for_largest = SIXEL_LARGE_NORM;"
    },
    {
        "line": 66,
        "fullcodeline": "(*ppdither)->method_for_rep = SIXEL_REP_CENTER_BOX;"
    },
    {
        "line": 67,
        "fullcodeline": "(*ppdither)->method_for_diffuse = SIXEL_DIFFUSE_FS;"
    },
    {
        "line": 68,
        "fullcodeline": "(*ppdither)->quality_mode = quality_mode;"
    },
    {
        "line": 69,
        "fullcodeline": "(*ppdither)->pixelformat = SIXEL_PIXELFORMAT_RGB888;"
    },
    {
        "line": 70,
        "fullcodeline": "(*ppdither)->allocator = allocator;"
    },
    {
        "line": 72,
        "fullcodeline": "status = SIXEL_OK;"
    },
    {
        "line": 13,
        "fullcodeline": "if (ppdither == NULL) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (allocator == NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ncolors < 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (*ppdither == NULL) {"
    },
    {
        "line": 14,
        "fullcodeline": "sixel_helper_set_additional_message("
    },
    {
        "line": 16,
        "fullcodeline": "status = SIXEL_BAD_ARGUMENT;"
    },
    {
        "line": 21,
        "fullcodeline": "status = sixel_allocator_new(&allocator, NULL, NULL, NULL, NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "ncolors = 256;"
    },
    {
        "line": 32,
        "fullcodeline": "quality_mode = SIXEL_QUALITY_HIGHCOLOR;"
    },
    {
        "line": 47,
        "fullcodeline": "sixel_allocator_unref(allocator);"
    },
    {
        "line": 48,
        "fullcodeline": "sixel_helper_set_additional_message("
    },
    {
        "line": 50,
        "fullcodeline": "status = SIXEL_BAD_ALLOCATION;"
    },
    {
        "line": 22,
        "fullcodeline": "if (SIXEL_FAILED(status)) {"
    },
    {
        "line": 27,
        "fullcodeline": "sixel_allocator_ref(allocator);"
    },
    {
        "line": 39,
        "fullcodeline": "quality_mode = SIXEL_QUALITY_LOW;"
    },
    {
        "line": 23,
        "fullcodeline": "*ppdither = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "if (ncolors > SIXEL_PALETTE_MAX) {"
    },
    {
        "line": 35,
        "fullcodeline": "ncolors = 256;"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (ncolors < 2) {"
    },
    {
        "line": 37,
        "fullcodeline": "ncolors = 2;"
    }
]