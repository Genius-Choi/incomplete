[
    {
        "line": 7,
        "fullcodeline": "int NumDirEntries = Get16(DirStart, m_MotorolaOrder);"
    },
    {
        "line": 9,
        "fullcodeline": "for (int de=0;de<NumDirEntries;de++)"
    },
    {
        "line": 11,
        "fullcodeline": "const unsigned char* DirEntry = DIR_ENTRY_ADDR(DirStart, de);"
    },
    {
        "line": 20,
        "fullcodeline": "unsigned Tag        = Get16(DirEntry, m_MotorolaOrder);"
    },
    {
        "line": 21,
        "fullcodeline": "unsigned Format     = Get16(DirEntry+2, m_MotorolaOrder);"
    },
    {
        "line": 22,
        "fullcodeline": "unsigned Components = (unsigned)Get32(DirEntry+4, m_MotorolaOrder);"
    },
    {
        "line": 30,
        "fullcodeline": "unsigned ByteCount = Components * ComponentSize;"
    },
    {
        "line": 14,
        "fullcodeline": "if (DirEntry + 12 > OffsetBase + ExifLength)"
    },
    {
        "line": 23,
        "fullcodeline": "if (Format == 0 || Format > NUM_FORMATS)"
    },
    {
        "line": 34,
        "fullcodeline": "if (ByteCount > 4)"
    },
    {
        "line": 16,
        "fullcodeline": "ErrNonfatal(\"GPS info directory goes past end of exif\", 0, 0);"
    },
    {
        "line": 25,
        "fullcodeline": "ErrNonfatal(\"Illegal number format %d for tag %04x\", Format, Tag);"
    },
    {
        "line": 29,
        "fullcodeline": "unsigned ComponentSize = BytesPerFormat[Format - 1];"
    },
    {
        "line": 36,
        "fullcodeline": "unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);"
    },
    {
        "line": 44,
        "fullcodeline": "ValuePtr = OffsetBase+OffsetVal;"
    },
    {
        "line": 55,
        "fullcodeline": "m_ExifInfo->GpsLat[0] = ValuePtr[0];"
    },
    {
        "line": 56,
        "fullcodeline": "m_ExifInfo->GpsLat[1] = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "m_ExifInfo->GpsLong[0] = ValuePtr[0];"
    },
    {
        "line": 61,
        "fullcodeline": "m_ExifInfo->GpsLong[1] = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "GetLatLong(Format, ValuePtr, ComponentSize, m_ExifInfo->GpsLat);"
    },
    {
        "line": 68,
        "fullcodeline": "GetLatLong(Format, ValuePtr, ComponentSize, m_ExifInfo->GpsLong);"
    },
    {
        "line": 74,
        "fullcodeline": "m_ExifInfo->GpsAlt[1] = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "if (OffsetVal+ByteCount > ExifLength)"
    },
    {
        "line": 49,
        "fullcodeline": "ValuePtr = DirEntry+8;"
    },
    {
        "line": 72,
        "fullcodeline": "if (ValuePtr[0] != 0)"
    },
    {
        "line": 79,
        "fullcodeline": "char temp[18];"
    },
    {
        "line": 80,
        "fullcodeline": "sprintf(temp, \"%.2fm\", static_cast<double>(ConvertAnyFormat(ValuePtr, Format)));"
    },
    {
        "line": 81,
        "fullcodeline": "strcat(m_ExifInfo->GpsAlt, temp);"
    },
    {
        "line": 41,
        "fullcodeline": "ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);"
    },
    {
        "line": 73,
        "fullcodeline": "m_ExifInfo->GpsAlt[0] = '-';"
    }
]