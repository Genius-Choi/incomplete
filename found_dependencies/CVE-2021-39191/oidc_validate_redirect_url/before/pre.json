[
    {
        "line": 5,
        "fullcodeline": "const char *c_host = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "apr_hash_index_t *hi = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);"
    },
    {
        "line": 11,
        "fullcodeline": "for (i = 0; i < strlen(url); i++)"
    },
    {
        "line": 15,
        "fullcodeline": "if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (c->redirect_urls_allowed != NULL) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (url[i] == '\\\\')"
    },
    {
        "line": 16,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 17,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool, \"not a valid URL value: %s\", url);"
    },
    {
        "line": 18,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 53,
        "fullcodeline": "if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {"
    },
    {
        "line": 54,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 55,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 76,
        "fullcodeline": "if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {"
    },
    {
        "line": 77,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Invalid URL\");"
    },
    {
        "line": 78,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 13,
        "fullcodeline": "url[i] = '/';"
    },
    {
        "line": 23,
        "fullcodeline": "for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi ="
    },
    {
        "line": 30,
        "fullcodeline": "if (hi == NULL) {"
    },
    {
        "line": 56,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 79,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 24,
        "fullcodeline": "apr_hash_next(hi)) {"
    },
    {
        "line": 25,
        "fullcodeline": "apr_hash_this(hi, (const void**) &c_host, NULL, NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"URL not allowed\");"
    },
    {
        "line": 32,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 26,
        "fullcodeline": "if (oidc_util_regexp_first_match(r->pool, url, c_host,"
    },
    {
        "line": 33,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 39,
        "fullcodeline": "} else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {"
    },
    {
        "line": 40,
        "fullcodeline": "c_host = oidc_get_current_url_host(r);"
    },
    {
        "line": 61,
        "fullcodeline": "} else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {"
    },
    {
        "line": 62,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 63,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool,"
    },
    {
        "line": 41,
        "fullcodeline": "if ((strstr(c_host, uri.hostname) == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "|| (strstr(uri.hostname, c_host) == NULL)) {"
    },
    {
        "line": 43,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Invalid Request\");"
    },
    {
        "line": 44,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 45,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 67,
        "fullcodeline": "} else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {"
    },
    {
        "line": 68,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 69,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool,"
    },
    {
        "line": 47,
        "fullcodeline": "apr_uri_unparse(r->pool, &uri, 0), c_host);"
    }
]