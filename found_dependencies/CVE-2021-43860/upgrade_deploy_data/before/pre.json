[
    {
        "line": 8,
        "fullcodeline": "VarDeployDataRef deploy_ref = var_deploy_data_from_bytes (deploy_data);"
    },
    {
        "line": 9,
        "fullcodeline": "g_autoptr(GVariant) metadata = g_variant_ref_sink (var_metadata_peek_as_gvariant (var_deploy_data_get_metadata (deploy_ref)));"
    },
    {
        "line": 10,
        "fullcodeline": "g_auto(GVariantDict) metadata_dict = FLATPAK_VARIANT_DICT_INITIALIZER;"
    },
    {
        "line": 11,
        "fullcodeline": "g_autofree const char **subpaths = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "g_autoptr(GVariant) res = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "g_variant_dict_init (&metadata_dict, NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "g_variant_dict_insert_value (&metadata_dict, \"deploy-version\","
    },
    {
        "line": 20,
        "fullcodeline": "n = g_variant_n_children (metadata);"
    },
    {
        "line": 32,
        "fullcodeline": "old_version = flatpak_deploy_data_get_version (deploy_data);"
    },
    {
        "line": 83,
        "fullcodeline": "subpaths = flatpak_deploy_data_get_subpaths (deploy_data);"
    },
    {
        "line": 84,
        "fullcodeline": "res = g_variant_ref_sink (g_variant_new (\"(ss^ast@a{sv})\","
    },
    {
        "line": 17,
        "fullcodeline": "g_variant_new_int32 (FLATPAK_DEPLOY_VERSION_CURRENT));"
    },
    {
        "line": 21,
        "fullcodeline": "for (i = 0; i < n; i++)"
    },
    {
        "line": 33,
        "fullcodeline": "if (old_version < 1)"
    },
    {
        "line": 39,
        "fullcodeline": "if (old_version < 3)"
    },
    {
        "line": 49,
        "fullcodeline": "if (old_version < 4)"
    },
    {
        "line": 90,
        "fullcodeline": "return g_variant_get_data_as_bytes (res);"
    },
    {
        "line": 24,
        "fullcodeline": "g_autoptr(GVariant) value = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "g_variant_get_child (metadata, i, \"{&s@v}\", &key, &value);"
    },
    {
        "line": 29,
        "fullcodeline": "g_variant_dict_insert_value (&metadata_dict, key, value);"
    },
    {
        "line": 35,
        "fullcodeline": "g_autofree char *id = flatpak_decomposed_dup_id (ref);"
    },
    {
        "line": 36,
        "fullcodeline": "add_appdata_to_deploy_data (&metadata_dict, deploy_dir, id);"
    },
    {
        "line": 42,
        "fullcodeline": "g_variant_dict_insert_value (&metadata_dict, \"timestamp\","
    },
    {
        "line": 52,
        "fullcodeline": "g_autoptr(GVariant) commit_data = NULL;"
    },
    {
        "line": 53,
        "fullcodeline": "g_autoptr(GVariant) commit_metadata = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "g_autoptr(GKeyFile) keyfile = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "g_autoptr(GFile) metadata_file = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "g_autofree char *metadata_contents = NULL;"
    },
    {
        "line": 57,
        "fullcodeline": "g_autofree char *id = flatpak_decomposed_dup_id (ref);"
    },
    {
        "line": 60,
        "fullcodeline": "commit = flatpak_deploy_data_get_commit (deploy_data);"
    },
    {
        "line": 63,
        "fullcodeline": "commit_metadata = g_variant_get_child_value (commit_data, 0);"
    },
    {
        "line": 64,
        "fullcodeline": "add_commit_metadata_to_deploy_data (&metadata_dict, commit_metadata);"
    },
    {
        "line": 67,
        "fullcodeline": "keyfile = g_key_file_new ();"
    },
    {
        "line": 68,
        "fullcodeline": "metadata_file = g_file_resolve_relative_path (deploy_dir, \"metadata\");"
    },
    {
        "line": 74,
        "fullcodeline": "add_metadata_to_deploy_data (&metadata_dict, keyfile);"
    },
    {
        "line": 27,
        "fullcodeline": "if (strcmp (key, \"deploy-version\") == 0)"
    },
    {
        "line": 43,
        "fullcodeline": "g_variant_new_uint64 (0));"
    },
    {
        "line": 61,
        "fullcodeline": "if (!ostree_repo_load_commit (repo, commit, &commit_data, NULL, error))"
    },
    {
        "line": 85,
        "fullcodeline": "flatpak_deploy_data_get_origin (deploy_data),"
    },
    {
        "line": 86,
        "fullcodeline": "flatpak_deploy_data_get_commit (deploy_data),"
    },
    {
        "line": 88,
        "fullcodeline": "GUINT64_TO_BE (flatpak_deploy_data_get_installed_size (deploy_data)),"
    },
    {
        "line": 89,
        "fullcodeline": "g_variant_dict_end (&metadata_dict)));"
    },
    {
        "line": 69,
        "fullcodeline": "if (!g_file_load_contents (metadata_file, cancellable,"
    },
    {
        "line": 72,
        "fullcodeline": "if (!g_key_file_load_from_data (keyfile, metadata_contents, -1, 0, error))"
    },
    {
        "line": 80,
        "fullcodeline": "add_appdata_to_deploy_data (&metadata_dict, deploy_dir, id);"
    }
]