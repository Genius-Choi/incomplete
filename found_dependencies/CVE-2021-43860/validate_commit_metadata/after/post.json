[
    {
        "line": 7,
        "fullcodeline": "g_autoptr(GVariant) commit_metadata = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "g_autoptr(GVariant) xa_metadata_v = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "const char *xa_metadata = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "gsize xa_metadata_size = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "commit_metadata = g_variant_get_child_value (commit_data, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "if (commit_metadata != NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (xa_metadata == NULL ||"
    },
    {
        "line": 16,
        "fullcodeline": "xa_metadata_v = g_variant_lookup_value (commit_metadata,"
    },
    {
        "line": 25,
        "fullcodeline": "memcmp (xa_metadata, required_metadata, xa_metadata_size) != 0)"
    },
    {
        "line": 27,
        "fullcodeline": "g_set_error (error, G_IO_ERROR, G_IO_ERROR_PERMISSION_DENIED,"
    },
    {
        "line": 24,
        "fullcodeline": "xa_metadata_size != required_metadata_size ||"
    },
    {
        "line": 28,
        "fullcodeline": "_(\"Commit metadata for %s not matching expected metadata\"), ref);"
    },
    {
        "line": 20,
        "fullcodeline": "xa_metadata = g_variant_get_string (xa_metadata_v, &xa_metadata_size);"
    }
]