[
    {
        "line": 7,
        "fullcodeline": "g_debug (\"marking op %s:%s resolved to %s\", kind_to_str (op->kind), flatpak_decomposed_get_ref (op->ref), commit ? commit : \"-\");"
    },
    {
        "line": 9,
        "fullcodeline": "g_assert (op != NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "g_assert (commit != NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "op->resolved = TRUE;"
    },
    {
        "line": 15,
        "fullcodeline": "if (op->resolved_commit != commit)"
    },
    {
        "line": 17,
        "fullcodeline": "g_free (op->resolved_commit); /* This is already set if we retry resolving to get a token, so free first */"
    },
    {
        "line": 18,
        "fullcodeline": "op->resolved_commit = g_strdup (commit);"
    },
    {
        "line": 22,
        "fullcodeline": "op->resolved_sideload_path = g_object_ref (sideload_path);"
    },
    {
        "line": 26,
        "fullcodeline": "g_autoptr(GKeyFile) metakey = g_key_file_new ();"
    },
    {
        "line": 37,
        "fullcodeline": "g_autoptr(GKeyFile) metakey = g_key_file_new ();"
    },
    {
        "line": 27,
        "fullcodeline": "if (g_key_file_load_from_bytes (metakey, metadata, G_KEY_FILE_NONE, NULL))"
    },
    {
        "line": 38,
        "fullcodeline": "if (g_key_file_load_from_bytes (metakey, old_metadata, G_KEY_FILE_NONE, NULL))"
    },
    {
        "line": 29,
        "fullcodeline": "op->resolved_metadata = g_bytes_ref (metadata);"
    },
    {
        "line": 30,
        "fullcodeline": "op->resolved_metakey = g_steal_pointer (&metakey);"
    },
    {
        "line": 40,
        "fullcodeline": "op->resolved_old_metadata = g_bytes_ref (old_metadata);"
    },
    {
        "line": 41,
        "fullcodeline": "op->resolved_old_metakey = g_steal_pointer (&metakey);"
    },
    {
        "line": 33,
        "fullcodeline": "g_message (\"Warning: Failed to parse metadata for %s\\n\", flatpak_decomposed_get_ref (op->ref));"
    },
    {
        "line": 44,
        "fullcodeline": "g_message (\"Warning: Failed to parse old metadata for %s\\n\", flatpak_decomposed_get_ref (op->ref));"
    }
]