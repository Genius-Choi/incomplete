[
    {
        "line": 11,
        "fullcodeline": "spin_lock_irqsave(&dev->event_lock, flags);"
    },
    {
        "line": 13,
        "fullcodeline": "retval = dev->setkeycode(dev, ke, &old_keycode);"
    },
    {
        "line": 18,
        "fullcodeline": "__clear_bit(KEY_RESERVED, dev->keybit);"
    },
    {
        "line": 8,
        "fullcodeline": "if (ke->keycode > KEY_MAX)"
    },
    {
        "line": 24,
        "fullcodeline": "if (old_keycode > KEY_MAX) {"
    },
    {
        "line": 25,
        "fullcodeline": "dev_warn(dev->dev.parent ?: &dev->dev,"
    },
    {
        "line": 9,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (test_bit(EV_KEY, dev->evbit) &&"
    },
    {
        "line": 30,
        "fullcodeline": "__test_and_clear_bit(old_keycode, dev->key)) {"
    },
    {
        "line": 31,
        "fullcodeline": "struct input_value vals[] =  {"
    },
    {
        "line": 36,
        "fullcodeline": "input_pass_values(dev, vals, ARRAY_SIZE(vals));"
    },
    {
        "line": 29,
        "fullcodeline": "!is_event_supported(old_keycode, dev->keybit, KEY_MAX) &&"
    },
    {
        "line": 32,
        "fullcodeline": "{ EV_KEY, old_keycode, 0 },"
    }
]