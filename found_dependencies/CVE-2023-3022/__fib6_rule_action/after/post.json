[
    {
        "line": 4,
        "fullcodeline": "struct fib6_result *res = arg->result;"
    },
    {
        "line": 6,
        "fullcodeline": "struct rt6_info *rt = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "struct net *net = rule->fr_net;"
    },
    {
        "line": 9,
        "fullcodeline": "pol_lookup_t lookup = arg->lookup_ptr;"
    },
    {
        "line": 10,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "tb_id = fib_rule_get_table(rule, arg);"
    },
    {
        "line": 32,
        "fullcodeline": "table = fib6_get_table(net, tb_id);"
    },
    {
        "line": 38,
        "fullcodeline": "rt = lookup(net, table, flp6, arg->lookup_data, flags);"
    },
    {
        "line": 51,
        "fullcodeline": "ip6_rt_put(rt);"
    },
    {
        "line": 52,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 53,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 57,
        "fullcodeline": "dst_hold(&rt->dst);"
    },
    {
        "line": 59,
        "fullcodeline": "res->rt6 = rt;"
    },
    {
        "line": 33,
        "fullcodeline": "if (!table) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (rt != net->ipv6.ip6_null_entry) {"
    },
    {
        "line": 17,
        "fullcodeline": "err = -ENETUNREACH;"
    },
    {
        "line": 22,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 26,
        "fullcodeline": "err = -EACCES;"
    },
    {
        "line": 34,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 40,
        "fullcodeline": "err = fib6_rule_saddr(net, rule, flags, flp6,"
    },
    {
        "line": 43,
        "fullcodeline": "if (err == -EAGAIN)"
    },
    {
        "line": 47,
        "fullcodeline": "if (err != -EAGAIN)"
    },
    {
        "line": 41,
        "fullcodeline": "ip6_dst_idev(&rt->dst)->dev);"
    }
]