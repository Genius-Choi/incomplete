[
    {
        "line": 5,
        "fullcodeline": "struct rt6_info *rt = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "struct net *net = rule->fr_net;"
    },
    {
        "line": 8,
        "fullcodeline": "pol_lookup_t lookup = arg->lookup_ptr;"
    },
    {
        "line": 9,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "tb_id = fib_rule_get_table(rule, arg);"
    },
    {
        "line": 31,
        "fullcodeline": "table = fib6_get_table(net, tb_id);"
    },
    {
        "line": 37,
        "fullcodeline": "rt = lookup(net, table, flp6, arg->lookup_data, flags);"
    },
    {
        "line": 50,
        "fullcodeline": "ip6_rt_put(rt);"
    },
    {
        "line": 51,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 52,
        "fullcodeline": "rt = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "dst_hold(&rt->dst);"
    },
    {
        "line": 58,
        "fullcodeline": "arg->result = rt;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!table) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (rt != net->ipv6.ip6_null_entry) {"
    },
    {
        "line": 16,
        "fullcodeline": "err = -ENETUNREACH;"
    },
    {
        "line": 21,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 25,
        "fullcodeline": "err = -EACCES;"
    },
    {
        "line": 33,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 39,
        "fullcodeline": "err = fib6_rule_saddr(net, rule, flags, flp6,"
    },
    {
        "line": 42,
        "fullcodeline": "if (err == -EAGAIN)"
    },
    {
        "line": 46,
        "fullcodeline": "if (err != -EAGAIN)"
    },
    {
        "line": 40,
        "fullcodeline": "ip6_dst_idev(&rt->dst)->dev);"
    }
]