[
    {
        "line": 2,
        "fullcodeline": "if (total == 1)"
    },
    {
        "line": 41,
        "fullcodeline": "} while (total > 1);  /* repeat until only 1 result left */"
    },
    {
        "line": 5,
        "fullcodeline": "StkId top = L->top;"
    },
    {
        "line": 6,
        "fullcodeline": "int n = 2;  /* number of elements handled in this pass (at least 2) */"
    },
    {
        "line": 39,
        "fullcodeline": "total -= n-1;  /* got 'n' strings to create 1 new */"
    },
    {
        "line": 40,
        "fullcodeline": "L->top = top - (n - 1);  /* popped 'n' strings and pushed one */"
    },
    {
        "line": 7,
        "fullcodeline": "if (!(ttisstring(s2v(top - 2)) || cvt2str(s2v(top - 2))) ||"
    },
    {
        "line": 8,
        "fullcodeline": "!tostring(L, s2v(top - 1)))"
    },
    {
        "line": 9,
        "fullcodeline": "luaT_tryconcatTM(L);"
    },
    {
        "line": 10,
        "fullcodeline": "else if (isemptystr(s2v(top - 1)))  /* second operand is empty? */"
    },
    {
        "line": 11,
        "fullcodeline": "cast_void(tostring(L, s2v(top - 2)));  /* result is first operand */"
    },
    {
        "line": 12,
        "fullcodeline": "else if (isemptystr(s2v(top - 2))) {  /* first operand is empty string? */"
    },
    {
        "line": 13,
        "fullcodeline": "setobjs2s(L, top - 2, top - 1);  /* result is second op. */"
    },
    {
        "line": 17,
        "fullcodeline": "size_t tl = vslen(s2v(top - 1));"
    },
    {
        "line": 37,
        "fullcodeline": "setsvalue2s(L, top - n, ts);  /* create result */"
    },
    {
        "line": 20,
        "fullcodeline": "for (n = 1; n < total && tostring(L, s2v(top - n - 1)); n++) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (tl <= LUAI_MAXSHORTLEN) {  /* is result a short string? */"
    },
    {
        "line": 21,
        "fullcodeline": "size_t l = vslen(s2v(top - n - 1));"
    },
    {
        "line": 26,
        "fullcodeline": "tl += l;"
    },
    {
        "line": 29,
        "fullcodeline": "char buff[LUAI_MAXSHORTLEN];"
    },
    {
        "line": 30,
        "fullcodeline": "copy2buff(top, n, buff);  /* copy strings to buffer */"
    },
    {
        "line": 31,
        "fullcodeline": "ts = luaS_newlstr(L, buff, tl);"
    },
    {
        "line": 22,
        "fullcodeline": "if (l_unlikely(l >= (MAX_SIZE/sizeof(char)) - tl)) {"
    },
    {
        "line": 34,
        "fullcodeline": "ts = luaS_createlngstrobj(L, tl);"
    },
    {
        "line": 35,
        "fullcodeline": "copy2buff(top, n, getstr(ts));"
    },
    {
        "line": 23,
        "fullcodeline": "L->top = top - total;  /* pop strings to avoid wasting stack */"
    },
    {
        "line": 24,
        "fullcodeline": "luaG_runerror(L, \"string length overflow\");"
    }
]