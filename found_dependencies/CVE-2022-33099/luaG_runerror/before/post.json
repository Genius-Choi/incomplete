[
    {
        "line": 2,
        "fullcodeline": "CallInfo *ci = L->ci;"
    },
    {
        "line": 5,
        "fullcodeline": "luaC_checkGC(L);  /* error message uses memory */"
    },
    {
        "line": 6,
        "fullcodeline": "va_start(argp, fmt);"
    },
    {
        "line": 7,
        "fullcodeline": "msg = luaO_pushvfstring(L, fmt, argp);  /* format message */"
    },
    {
        "line": 8,
        "fullcodeline": "va_end(argp);"
    },
    {
        "line": 11,
        "fullcodeline": "luaG_errormsg(L);"
    },
    {
        "line": 9,
        "fullcodeline": "if (isLua(ci))  /* if Lua function, add source:line information */"
    },
    {
        "line": 10,
        "fullcodeline": "luaG_addinfo(L, msg, ci_func(ci)->p->source, getcurrentline(ci));"
    }
]