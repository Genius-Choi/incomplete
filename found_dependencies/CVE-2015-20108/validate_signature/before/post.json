[
    {
        "line": 5,
        "fullcodeline": "inclusive_namespaces = extract_inclusive_namespaces"
    },
    {
        "line": 7,
        "fullcodeline": "document = Nokogiri.parse(self.to_s)"
    },
    {
        "line": 23,
        "fullcodeline": "signed_info_element = REXML::XPath.first("
    },
    {
        "line": 28,
        "fullcodeline": "noko_sig_element = document.at_xpath('//ds:Signature', 'ds' => DSIG)"
    },
    {
        "line": 29,
        "fullcodeline": "noko_signed_info_element = noko_sig_element.at_xpath('./ds:SignedInfo', 'ds' => DSIG)"
    },
    {
        "line": 30,
        "fullcodeline": "canon_algorithm = canon_algorithm REXML::XPath.first("
    },
    {
        "line": 35,
        "fullcodeline": "canon_string = noko_signed_info_element.canonicalize(canon_algorithm)"
    },
    {
        "line": 39,
        "fullcodeline": "REXML::XPath.each(@sig_element, \"//ds:Reference\", {\"ds\"=>DSIG}) do |ref|"
    },
    {
        "line": 75,
        "fullcodeline": "signature = Base64.decode64(base64_signature)"
    },
    {
        "line": 78,
        "fullcodeline": "cert_text = Base64.decode64(base64_cert)"
    },
    {
        "line": 79,
        "fullcodeline": "cert = OpenSSL::X509::Certificate.new(cert_text)"
    },
    {
        "line": 82,
        "fullcodeline": "sig_alg_value = REXML::XPath.first("
    },
    {
        "line": 87,
        "fullcodeline": "signature_algorithm = algorithm(sig_alg_value)"
    },
    {
        "line": 1,
        "fullcodeline": "def validate_signature(base64_cert, soft = true)"
    },
    {
        "line": 89,
        "fullcodeline": "unless cert.public_key.verify(signature_algorithm.new, signature, canon_string)"
    },
    {
        "line": 10,
        "fullcodeline": "@working_copy ||= REXML::Document.new(self.to_s).root"
    },
    {
        "line": 13,
        "fullcodeline": "@sig_element ||= begin"
    },
    {
        "line": 69,
        "fullcodeline": "base64_signature = REXML::XPath.first("
    },
    {
        "line": 90,
        "fullcodeline": "@errors << \"Key validation error\""
    },
    {
        "line": 26,
        "fullcodeline": "{\"ds\"=>DSIG}"
    },
    {
        "line": 33,
        "fullcodeline": "'ds' => DSIG"
    },
    {
        "line": 85,
        "fullcodeline": "{\"ds\"=>DSIG}"
    },
    {
        "line": 14,
        "fullcodeline": "element = REXML::XPath.first("
    },
    {
        "line": 72,
        "fullcodeline": "{\"ds\" => DSIG}"
    },
    {
        "line": 17,
        "fullcodeline": "{\"ds\"=>DSIG}"
    },
    {
        "line": 91,
        "fullcodeline": "return soft ? false : (raise OneLogin::RubySaml::ValidationError.new(\"Key validation error\"))"
    }
]