[
    {
        "line": 3,
        "fullcodeline": "struct pipe_inode_info *pipe = i->pipe;"
    },
    {
        "line": 22,
        "fullcodeline": "i->count -= size;"
    },
    {
        "line": 24,
        "fullcodeline": "pipe_truncate(i);"
    },
    {
        "line": 4,
        "fullcodeline": "if (unlikely(i->count < size))"
    },
    {
        "line": 5,
        "fullcodeline": "size = i->count;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t off = i->iov_offset, left = size;"
    },
    {
        "line": 9,
        "fullcodeline": "int idx = i->idx;"
    },
    {
        "line": 19,
        "fullcodeline": "i->idx = idx;"
    },
    {
        "line": 20,
        "fullcodeline": "i->iov_offset = buf->offset + left;"
    },
    {
        "line": 11,
        "fullcodeline": "left += off - pipe->bufs[idx].offset;"
    },
    {
        "line": 13,
        "fullcodeline": "buf = &pipe->bufs[idx];"
    },
    {
        "line": 16,
        "fullcodeline": "left -= buf->len;"
    },
    {
        "line": 17,
        "fullcodeline": "idx = next_idx(idx, pipe);"
    },
    {
        "line": 14,
        "fullcodeline": "if (left <= buf->len)"
    }
]