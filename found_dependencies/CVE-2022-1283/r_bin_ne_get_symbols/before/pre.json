[
    {
        "line": 3,
        "fullcodeline": "ut16 off = bin->ne_header->ResidNamTable + bin->header_offset;"
    },
    {
        "line": 4,
        "fullcodeline": "RList *symbols = r_list_newf (free);"
    },
    {
        "line": 8,
        "fullcodeline": "RList *entries = r_bin_ne_get_entrypoints (bin);"
    },
    {
        "line": 9,
        "fullcodeline": "bool resident = true, first = true;"
    },
    {
        "line": 55,
        "fullcodeline": "int i = 1;"
    },
    {
        "line": 56,
        "fullcodeline": "r_list_foreach (entries, it, en) {"
    },
    {
        "line": 5,
        "fullcodeline": "if (!symbols) {"
    },
    {
        "line": 11,
        "fullcodeline": "ut8 sz = r_buf_read8_at (bin->buf, off);"
    },
    {
        "line": 25,
        "fullcodeline": "char *name = malloc ((ut64)sz + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "off++;"
    },
    {
        "line": 30,
        "fullcodeline": "r_buf_read_at (bin->buf, off, (ut8 *)name, sz);"
    },
    {
        "line": 31,
        "fullcodeline": "name[sz] = '\\0';"
    },
    {
        "line": 32,
        "fullcodeline": "off += sz;"
    },
    {
        "line": 33,
        "fullcodeline": "sym = R_NEW0 (RBinSymbol);"
    },
    {
        "line": 37,
        "fullcodeline": "sym->name = name;"
    },
    {
        "line": 41,
        "fullcodeline": "ut16 entry_off = r_buf_read_le16_at (bin->buf, off);"
    },
    {
        "line": 42,
        "fullcodeline": "off += 2;"
    },
    {
        "line": 43,
        "fullcodeline": "RBinAddr *entry = r_list_get_n (entries, entry_off);"
    },
    {
        "line": 49,
        "fullcodeline": "sym->ordinal = entry_off;"
    },
    {
        "line": 50,
        "fullcodeline": "r_list_append (symbols, sym);"
    },
    {
        "line": 51,
        "fullcodeline": "first = false;"
    },
    {
        "line": 12,
        "fullcodeline": "if (!sz) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!name) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!sym) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!r_list_find (symbols, &en->paddr, __find_symbol_by_paddr)) {"
    },
    {
        "line": 58,
        "fullcodeline": "sym = R_NEW0 (RBinSymbol);"
    },
    {
        "line": 62,
        "fullcodeline": "sym->name = r_str_newf (\"entry%d\", i - 1);"
    },
    {
        "line": 63,
        "fullcodeline": "sym->paddr = en->paddr;"
    },
    {
        "line": 64,
        "fullcodeline": "sym->bind = R_BIN_BIND_GLOBAL_STR;"
    },
    {
        "line": 65,
        "fullcodeline": "sym->ordinal = i;"
    },
    {
        "line": 66,
        "fullcodeline": "r_list_append (symbols, sym);"
    },
    {
        "line": 13,
        "fullcodeline": "first = true;"
    },
    {
        "line": 39,
        "fullcodeline": "sym->bind = R_BIN_BIND_GLOBAL_STR;"
    },
    {
        "line": 45,
        "fullcodeline": "sym->paddr = entry->paddr;"
    },
    {
        "line": 59,
        "fullcodeline": "if (!sym) {"
    },
    {
        "line": 47,
        "fullcodeline": "sym->paddr = -1;"
    },
    {
        "line": 16,
        "fullcodeline": "off = bin->ne_header->OffStartNonResTab;"
    },
    {
        "line": 17,
        "fullcodeline": "sz = r_buf_read8_at (bin->buf, off);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!sz) {"
    }
]