[
    {
        "line": 24,
        "fullcodeline": "assert(image != (const Image *) NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 28,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 29,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 30,
        "fullcodeline": "mean_image=CloneImage(image,0,0,MagickTrue,exception);"
    },
    {
        "line": 39,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 40,
        "fullcodeline": "progress=0;"
    },
    {
        "line": 41,
        "fullcodeline": "image_view=AcquireVirtualCacheView(image,exception);"
    },
    {
        "line": 42,
        "fullcodeline": "pixel_view=AcquireVirtualCacheView(image,exception);"
    },
    {
        "line": 43,
        "fullcodeline": "mean_view=AcquireAuthenticCacheView(mean_image,exception);"
    },
    {
        "line": 26,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 31,
        "fullcodeline": "if (mean_image == (Image *) NULL)"
    },
    {
        "line": 33,
        "fullcodeline": "if (SetImageStorageClass(mean_image,DirectClass) == MagickFalse)"
    },
    {
        "line": 48,
        "fullcodeline": "for (y=0; y < (ssize_t) mean_image->rows; y++)"
    },
    {
        "line": 186,
        "fullcodeline": "mean_view=DestroyCacheView(mean_view);"
    },
    {
        "line": 187,
        "fullcodeline": "pixel_view=DestroyCacheView(pixel_view);"
    },
    {
        "line": 188,
        "fullcodeline": "image_view=DestroyCacheView(image_view);"
    },
    {
        "line": 27,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 64,
        "fullcodeline": "p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);"
    },
    {
        "line": 65,
        "fullcodeline": "q=GetCacheViewAuthenticPixels(mean_view,0,y,mean_image->columns,1,"
    },
    {
        "line": 72,
        "fullcodeline": "indexes=GetCacheViewVirtualIndexQueue(image_view);"
    },
    {
        "line": 32,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 36,
        "fullcodeline": "mean_image=DestroyImage(mean_image);"
    },
    {
        "line": 37,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 62,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 73,
        "fullcodeline": "for (x=0; x < (ssize_t) mean_image->columns; x++)"
    },
    {
        "line": 170,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(mean_view,exception) == MagickFalse)"
    },
    {
        "line": 172,
        "fullcodeline": "if (image->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 67,
        "fullcodeline": "if ((p == (const PixelPacket *) NULL) || (q == (PixelPacket *) NULL))"
    },
    {
        "line": 69,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 86,
        "fullcodeline": "GetMagickPixelPacket(image,&mean_pixel);"
    },
    {
        "line": 87,
        "fullcodeline": "SetMagickPixelPacket(image,p,indexes+x,&mean_pixel);"
    },
    {
        "line": 88,
        "fullcodeline": "mean_location.x=(double) x;"
    },
    {
        "line": 89,
        "fullcodeline": "mean_location.y=(double) y;"
    },
    {
        "line": 163,
        "fullcodeline": "q->red=ClampToQuantum(mean_pixel.red);"
    },
    {
        "line": 164,
        "fullcodeline": "q->green=ClampToQuantum(mean_pixel.green);"
    },
    {
        "line": 165,
        "fullcodeline": "q->blue=ClampToQuantum(mean_pixel.blue);"
    },
    {
        "line": 166,
        "fullcodeline": "q->opacity=ClampToQuantum(mean_pixel.opacity);"
    },
    {
        "line": 167,
        "fullcodeline": "p++;"
    },
    {
        "line": 171,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 180,
        "fullcodeline": "progress++;"
    },
    {
        "line": 181,
        "fullcodeline": "proceed=SetImageProgress(image,MeanShiftImageTag,progress,image->rows);"
    },
    {
        "line": 90,
        "fullcodeline": "for (i=0; i < MaxMeanShiftIterations; i++)"
    },
    {
        "line": 182,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 106,
        "fullcodeline": "sum_location.x=0.0;"
    },
    {
        "line": 107,
        "fullcodeline": "sum_location.y=0.0;"
    },
    {
        "line": 108,
        "fullcodeline": "GetMagickPixelPacket(image,&sum_pixel);"
    },
    {
        "line": 109,
        "fullcodeline": "previous_location=mean_location;"
    },
    {
        "line": 110,
        "fullcodeline": "previous_pixel=mean_pixel;"
    },
    {
        "line": 111,
        "fullcodeline": "count=0;"
    },
    {
        "line": 143,
        "fullcodeline": "gamma=PerceptibleReciprocal(count);"
    },
    {
        "line": 144,
        "fullcodeline": "mean_location.x=gamma*sum_location.x;"
    },
    {
        "line": 145,
        "fullcodeline": "mean_location.y=gamma*sum_location.y;"
    },
    {
        "line": 146,
        "fullcodeline": "mean_pixel.red=gamma*sum_pixel.red;"
    },
    {
        "line": 147,
        "fullcodeline": "mean_pixel.green=gamma*sum_pixel.green;"
    },
    {
        "line": 148,
        "fullcodeline": "mean_pixel.blue=gamma*sum_pixel.blue;"
    },
    {
        "line": 149,
        "fullcodeline": "mean_pixel.opacity=gamma*sum_pixel.opacity;"
    },
    {
        "line": 150,
        "fullcodeline": "distance=(mean_location.x-previous_location.x)*"
    },
    {
        "line": 183,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 112,
        "fullcodeline": "for (v=(-((ssize_t) height/2)); v <= (((ssize_t) height/2)); v++)"
    },
    {
        "line": 158,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.blue-previous_pixel.blue)*"
    },
    {
        "line": 117,
        "fullcodeline": "for (u=(-((ssize_t) width/2)); u <= (((ssize_t) width/2)); u++)"
    },
    {
        "line": 156,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.green-previous_pixel.green)*"
    },
    {
        "line": 159,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.blue-previous_pixel.blue);"
    },
    {
        "line": 154,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.red-previous_pixel.red)*"
    },
    {
        "line": 157,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.green-previous_pixel.green)+"
    },
    {
        "line": 152,
        "fullcodeline": "(mean_location.y-previous_location.y)*"
    },
    {
        "line": 155,
        "fullcodeline": "255.0*QuantumScale*(mean_pixel.red-previous_pixel.red)+"
    },
    {
        "line": 119,
        "fullcodeline": "if ((v*v+u*u) <= (ssize_t) ((width/2)*(height/2)))"
    },
    {
        "line": 124,
        "fullcodeline": "status=GetOneCacheViewVirtualPixel(pixel_view,(ssize_t)"
    },
    {
        "line": 127,
        "fullcodeline": "distance=(mean_pixel.red-pixel.red)*(mean_pixel.red-pixel.red)+"
    },
    {
        "line": 151,
        "fullcodeline": "(mean_location.x-previous_location.x)+"
    },
    {
        "line": 153,
        "fullcodeline": "(mean_location.y-previous_location.y)+"
    },
    {
        "line": 129,
        "fullcodeline": "(mean_pixel.blue-pixel.blue)*(mean_pixel.blue-pixel.blue);"
    },
    {
        "line": 130,
        "fullcodeline": "if (distance <= (color_distance*color_distance))"
    },
    {
        "line": 132,
        "fullcodeline": "sum_location.x+=mean_location.x+u;"
    },
    {
        "line": 133,
        "fullcodeline": "sum_location.y+=mean_location.y+v;"
    },
    {
        "line": 134,
        "fullcodeline": "sum_pixel.red+=pixel.red;"
    },
    {
        "line": 135,
        "fullcodeline": "sum_pixel.green+=pixel.green;"
    },
    {
        "line": 136,
        "fullcodeline": "sum_pixel.blue+=pixel.blue;"
    },
    {
        "line": 137,
        "fullcodeline": "sum_pixel.opacity+=pixel.opacity;"
    },
    {
        "line": 138,
        "fullcodeline": "count++;"
    },
    {
        "line": 125,
        "fullcodeline": "MagickRound(mean_location.x+u),(ssize_t) MagickRound("
    },
    {
        "line": 128,
        "fullcodeline": "(mean_pixel.green-pixel.green)*(mean_pixel.green-pixel.green)+"
    }
]