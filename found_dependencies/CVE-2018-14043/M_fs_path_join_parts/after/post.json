[
    {
        "line": 13,
        "fullcodeline": "len = M_list_str_len(path);"
    },
    {
        "line": 18,
        "fullcodeline": "sys_type = M_fs_path_get_system_type(sys_type);"
    },
    {
        "line": 22,
        "fullcodeline": "parts = M_list_str_duplicate(path);"
    },
    {
        "line": 30,
        "fullcodeline": "len = M_list_str_len(parts);"
    },
    {
        "line": 34,
        "fullcodeline": "part = M_list_str_at(parts, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "out = M_list_str_join(parts, (unsigned char)M_fs_path_get_system_sep(sys_type));"
    },
    {
        "line": 60,
        "fullcodeline": "M_list_str_destroy(parts);"
    },
    {
        "line": 10,
        "fullcodeline": "if (path == NULL) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (len == 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "for (i=len-1; i>0; i--) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (len == 1 && (part == NULL || *part == '\\0')) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (sys_type == M_FS_SYSTEM_WINDOWS && len > 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "part = M_list_str_at(parts, i);"
    },
    {
        "line": 36,
        "fullcodeline": "M_list_str_destroy(parts);"
    },
    {
        "line": 45,
        "fullcodeline": "part  = M_list_str_at(parts, 0);"
    },
    {
        "line": 47,
        "fullcodeline": "count = (len == 1) ? 2 : 1;"
    },
    {
        "line": 25,
        "fullcodeline": "if (part == NULL || *part == '\\0') {"
    },
    {
        "line": 37,
        "fullcodeline": "if (sys_type == M_FS_SYSTEM_WINDOWS) {"
    },
    {
        "line": 40,
        "fullcodeline": "return M_strdup(\"/\");"
    },
    {
        "line": 49,
        "fullcodeline": "if (part != NULL && *part == '\\0') {"
    },
    {
        "line": 26,
        "fullcodeline": "M_list_str_remove_at(parts, i);"
    },
    {
        "line": 38,
        "fullcodeline": "return M_strdup(\"\\\\\\\\\");"
    },
    {
        "line": 50,
        "fullcodeline": "for (i=0; i<count; i++) {"
    },
    {
        "line": 51,
        "fullcodeline": "M_list_str_insert_at(parts, \"\", 0);"
    },
    {
        "line": 53,
        "fullcodeline": "} else if (M_fs_path_isabs(part, sys_type) && len == 1) {"
    },
    {
        "line": 55,
        "fullcodeline": "M_list_str_insert_at(parts, \"\", 1);"
    }
]