[
    {
        "line": 3,
        "fullcodeline": "if (ch == '\\r')"
    },
    {
        "line": 5,
        "fullcodeline": "else if (ch == '\\n')"
    },
    {
        "line": 7,
        "fullcodeline": "log_debug(\"header \" << fieldnamePtr << \": \" << fieldbodyPtr);"
    },
    {
        "line": 18,
        "fullcodeline": "*headerdataPtr = '\\0';"
    },
    {
        "line": 8,
        "fullcodeline": "switch (header.onField(fieldnamePtr, fieldbodyPtr))"
    },
    {
        "line": 13,
        "fullcodeline": "case FAIL: failedFlag = true;"
    },
    {
        "line": 14,
        "fullcodeline": "log_warn(\"invalid character \" << chartoprint(ch) << \" in fieldbody\");"
    },
    {
        "line": 21,
        "fullcodeline": "else if (std::isspace(ch))"
    },
    {
        "line": 24,
        "fullcodeline": "checkHeaderspace(1);"
    },
    {
        "line": 25,
        "fullcodeline": "*(headerdataPtr - 1) = '\\n';"
    },
    {
        "line": 26,
        "fullcodeline": "*headerdataPtr++ = ch;"
    },
    {
        "line": 29,
        "fullcodeline": "else if (ch >= 33 && ch <= 126)"
    },
    {
        "line": 42,
        "fullcodeline": "fieldnamePtr = headerdataPtr;"
    },
    {
        "line": 43,
        "fullcodeline": "checkHeaderspace(1);"
    },
    {
        "line": 44,
        "fullcodeline": "*headerdataPtr++ = ch;"
    },
    {
        "line": 31,
        "fullcodeline": "switch (header.onField(fieldnamePtr, fieldbodyPtr))"
    },
    {
        "line": 35,
        "fullcodeline": "case FAIL: failedFlag = true;"
    },
    {
        "line": 36,
        "fullcodeline": "log_warn(\"invalid character \" << chartoprint(ch) << \" in fieldbody\");"
    }
]