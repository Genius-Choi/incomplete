[
    {
        "line": 2,
        "fullcodeline": "TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);"
    },
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"
    },
    {
        "line": 4,
        "fullcodeline": "const TfLiteTensor* data = GetInput(context, node, kInputDataTensor);"
    },
    {
        "line": 5,
        "fullcodeline": "const TfLiteTensor* segment_ids ="
    },
    {
        "line": 7,
        "fullcodeline": "TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"
    },
    {
        "line": 9,
        "fullcodeline": "TF_LITE_ENSURE(context,"
    },
    {
        "line": 11,
        "fullcodeline": "TF_LITE_ENSURE_EQ(context, segment_ids->type, kTfLiteInt32);"
    },
    {
        "line": 6,
        "fullcodeline": "GetInput(context, node, kInputSegmentIdsTensor);"
    },
    {
        "line": 10,
        "fullcodeline": "data->type == kTfLiteInt32 || data->type == kTfLiteFloat32);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!IsConstantTensor(data) || !IsConstantTensor(segment_ids)) {"
    },
    {
        "line": 18,
        "fullcodeline": "return ResizeOutputTensor(context, data, segment_ids, output);"
    },
    {
        "line": 14,
        "fullcodeline": "SetTensorToDynamic(output);"
    }
]