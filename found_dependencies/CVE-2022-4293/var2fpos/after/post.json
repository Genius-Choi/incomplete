[
    {
        "line": 64,
        "fullcodeline": "name = tv_get_string_chk(varp);"
    },
    {
        "line": 68,
        "fullcodeline": "pos.lnum = 0;"
    },
    {
        "line": 98,
        "fullcodeline": "pos.coladd = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "if (varp->v_type == VAR_LIST)"
    },
    {
        "line": 61,
        "fullcodeline": "if (in_vim9script() && check_for_string_arg(varp, 0) == FAIL)"
    },
    {
        "line": 65,
        "fullcodeline": "if (name == NULL)"
    },
    {
        "line": 69,
        "fullcodeline": "if (name[0] == '.' && (!in_vim9script() || name[1] == NUL))"
    },
    {
        "line": 91,
        "fullcodeline": "if (pos.lnum != 0)"
    },
    {
        "line": 100,
        "fullcodeline": "if (name[0] == 'w' && dollar_lnum)"
    },
    {
        "line": 136,
        "fullcodeline": "if (in_vim9script())"
    },
    {
        "line": 16,
        "fullcodeline": "int\t\terror = FALSE;"
    },
    {
        "line": 24,
        "fullcodeline": "pos.lnum = list_find_nr(l, 0L, &error);"
    },
    {
        "line": 34,
        "fullcodeline": "li = list_find(l, 1L);"
    },
    {
        "line": 51,
        "fullcodeline": "--pos.col;"
    },
    {
        "line": 54,
        "fullcodeline": "pos.coladd = list_find_nr(l, 2L, &error);"
    },
    {
        "line": 102,
        "fullcodeline": "pos.col = 0;"
    },
    {
        "line": 137,
        "fullcodeline": "semsg(_(e_invalid_value_for_line_number_str), name);"
    },
    {
        "line": 20,
        "fullcodeline": "if (l == NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "if (error || pos.lnum <= 0 || pos.lnum > curbuf->b_ml.ml_line_count)"
    },
    {
        "line": 35,
        "fullcodeline": "if (li != NULL && li->li_tv.v_type == VAR_STRING"
    },
    {
        "line": 49,
        "fullcodeline": "if (pos.col == 0 || (int)pos.col > len + 1)"
    },
    {
        "line": 103,
        "fullcodeline": "if (name[1] == '0')\t\t// \"w0\": first visible line"
    },
    {
        "line": 28,
        "fullcodeline": "len = (long)mb_charlen(ml_get(pos.lnum));"
    },
    {
        "line": 37,
        "fullcodeline": "&& STRCMP(li->li_tv.vval.v_string, \"$\") == 0)"
    },
    {
        "line": 39,
        "fullcodeline": "pos.col = len + 1;"
    },
    {
        "line": 56,
        "fullcodeline": "pos.coladd = 0;"
    },
    {
        "line": 74,
        "fullcodeline": "else if (name[0] == 'v' && name[1] == NUL)"
    },
    {
        "line": 94,
        "fullcodeline": "pos.col = buf_byteidx_to_charidx(curbuf, pos.lnum, pos.col);"
    },
    {
        "line": 105,
        "fullcodeline": "update_topline();"
    },
    {
        "line": 108,
        "fullcodeline": "pos.lnum = curwin->w_topline > 0 ? curwin->w_topline : 1;"
    },
    {
        "line": 119,
        "fullcodeline": "else if (name[0] == '$')\t\t// last column or line"
    },
    {
        "line": 30,
        "fullcodeline": "len = (long)STRLEN(ml_get(pos.lnum));"
    },
    {
        "line": 36,
        "fullcodeline": "&& li->li_tv.vval.v_string != NULL"
    },
    {
        "line": 43,
        "fullcodeline": "pos.col = list_find_nr(l, 1L, &error);"
    },
    {
        "line": 111,
        "fullcodeline": "else if (name[1] == '$')\t// \"w$\": last visible line"
    },
    {
        "line": 78,
        "fullcodeline": "pos = VIsual;"
    },
    {
        "line": 82,
        "fullcodeline": "else if (name[0] == '\\'' && (!in_vim9script()"
    },
    {
        "line": 113,
        "fullcodeline": "validate_botline();"
    },
    {
        "line": 115,
        "fullcodeline": "pos.lnum = curwin->w_botline > 0 ? curwin->w_botline - 1 : 0;"
    },
    {
        "line": 124,
        "fullcodeline": "pos.col = 0;"
    },
    {
        "line": 86,
        "fullcodeline": "pp = getmark_buf_fnum(curbuf, name[1], FALSE, fnum);"
    },
    {
        "line": 83,
        "fullcodeline": "|| (name[1] != NUL && name[2] == NUL)))"
    },
    {
        "line": 87,
        "fullcodeline": "if (pp == NULL || pp == (pos_T *)-1 || pp->lnum <= 0)"
    },
    {
        "line": 130,
        "fullcodeline": "pos.col = (colnr_T)mb_charlen(ml_get_curline());"
    },
    {
        "line": 132,
        "fullcodeline": "pos.col = (colnr_T)STRLEN(ml_get_curline());"
    }
]