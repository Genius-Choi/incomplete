[
    {
        "line": 4,
        "fullcodeline": "struct TCP_Server_Info *server = ses->server;"
    },
    {
        "line": 6,
        "fullcodeline": "cFYI(1, \"%s: ses_count=%d\\n\", __func__, ses->ses_count);"
    },
    {
        "line": 7,
        "fullcodeline": "write_lock(&cifs_tcp_ses_lock);"
    },
    {
        "line": 13,
        "fullcodeline": "list_del_init(&ses->smb_ses_list);"
    },
    {
        "line": 14,
        "fullcodeline": "write_unlock(&cifs_tcp_ses_lock);"
    },
    {
        "line": 21,
        "fullcodeline": "sesInfoFree(ses);"
    },
    {
        "line": 22,
        "fullcodeline": "cifs_put_tcp_session(server);"
    },
    {
        "line": 8,
        "fullcodeline": "if (--ses->ses_count > 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ses->status == CifsGood) {"
    },
    {
        "line": 9,
        "fullcodeline": "write_unlock(&cifs_tcp_ses_lock);"
    },
    {
        "line": 17,
        "fullcodeline": "xid = GetXid();"
    },
    {
        "line": 18,
        "fullcodeline": "CIFSSMBLogoff(xid, ses);"
    },
    {
        "line": 19,
        "fullcodeline": "_FreeXid(xid);"
    }
]