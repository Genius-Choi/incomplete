[
    {
        "line": 4,
        "fullcodeline": "gnrc_sixlowpan_frag_fb_t *fbuf = ctx;"
    },
    {
        "line": 6,
        "fullcodeline": "int error_no = GNRC_NETERR_SUCCESS;"
    },
    {
        "line": 7,
        "fullcodeline": "gnrc_pktsnip_t *tx_sync = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "assert((fbuf != NULL) && ((fbuf->pkt == pkt) || (pkt == NULL)));"
    },
    {
        "line": 11,
        "fullcodeline": "DEBUG(\"6lo sfr: (re-)sending fragmented datagram %u\\n\", fbuf->tag);"
    },
    {
        "line": 12,
        "fullcodeline": "pkt = fbuf->pkt;"
    },
    {
        "line": 13,
        "fullcodeline": "assert(pkt->type == GNRC_NETTYPE_NETIF);"
    },
    {
        "line": 14,
        "fullcodeline": "netif = gnrc_netif_hdr_get_netif(pkt->data);"
    },
    {
        "line": 15,
        "fullcodeline": "assert(netif != NULL);"
    },
    {
        "line": 58,
        "fullcodeline": "gnrc_sixlowpan_frag_sfr_congure_snd_report_frag_sent(fbuf);"
    },
    {
        "line": 59,
        "fullcodeline": "fbuf->offset += res;"
    },
    {
        "line": 72,
        "fullcodeline": "_frag_desc_t *frag_desc = (_frag_desc_t *)clist_rpeek(&fbuf->sfr.window);"
    },
    {
        "line": 73,
        "fullcodeline": "DEBUG(\"6lo sfr: last sent fragment (tag: %u, X: %i, seq: %u, \""
    },
    {
        "line": 91,
        "fullcodeline": "thread_yield();"
    },
    {
        "line": 17,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_TX_SYNC)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (fbuf->offset == 0) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (gnrc_sixlowpan_frag_sfr_congure_snd_in_cwnd(fbuf) &&"
    },
    {
        "line": 75,
        "fullcodeline": "(uint8_t)fbuf->tag, _frag_ack_req(frag_desc),"
    },
    {
        "line": 76,
        "fullcodeline": "_frag_seq(frag_desc), _frag_size(frag_desc),"
    },
    {
        "line": 78,
        "fullcodeline": "if (_frag_ack_req(frag_desc)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_TX_SYNC) && tx_sync) {"
    },
    {
        "line": 96,
        "fullcodeline": "if ((fbuf->offset > 0) &&"
    },
    {
        "line": 104,
        "fullcodeline": "if (IS_USED(MODULE_GNRC_TX_SYNC) && tx_sync) {"
    },
    {
        "line": 18,
        "fullcodeline": "tx_sync = gnrc_tx_sync_split(pkt);"
    },
    {
        "line": 22,
        "fullcodeline": "DEBUG(\"6lo sfr: sending first fragment\\n\");"
    },
    {
        "line": 23,
        "fullcodeline": "gnrc_sixlowpan_frag_sfr_congure_snd_setup(fbuf);"
    },
    {
        "line": 24,
        "fullcodeline": "res = _send_1st_fragment(netif, fbuf, page, &tx_sync);"
    },
    {
        "line": 63,
        "fullcodeline": "!gnrc_sixlowpan_frag_fb_send(fbuf)) {"
    },
    {
        "line": 65,
        "fullcodeline": "error_no = ENOMEM;"
    },
    {
        "line": 67,
        "fullcodeline": "fbuf->offset -= res;"
    },
    {
        "line": 68,
        "fullcodeline": "gnrc_sixlowpan_frag_sfr_congure_snd_report_frag_discard(fbuf);"
    },
    {
        "line": 83,
        "fullcodeline": "_sched_arq_timeout(fbuf, fbuf->sfr.arq_timeout);"
    },
    {
        "line": 89,
        "fullcodeline": "gnrc_pkt_append(pkt, tx_sync);"
    },
    {
        "line": 97,
        "fullcodeline": "_send_abort_frag(fbuf->pkt, fbuf, true, 0)) {"
    },
    {
        "line": 99,
        "fullcodeline": "_sched_abort_timeout(fbuf);"
    },
    {
        "line": 105,
        "fullcodeline": "gnrc_pktbuf_release(tx_sync);"
    },
    {
        "line": 25,
        "fullcodeline": "if (res == 0) {"
    },
    {
        "line": 62,
        "fullcodeline": "(fbuf->offset < fbuf->datagram_size) &&"
    },
    {
        "line": 80,
        "fullcodeline": "if (_arq_timer.callback == NULL) {"
    },
    {
        "line": 102,
        "fullcodeline": "_clean_up_fbuf(fbuf, error_no);"
    },
    {
        "line": 26,
        "fullcodeline": "DEBUG(\"6lo sfr: error sending first fragment\\n\");"
    },
    {
        "line": 28,
        "fullcodeline": "error_no = ENOMEM;"
    },
    {
        "line": 32,
        "fullcodeline": "else if (!gnrc_sixlowpan_frag_sfr_congure_snd_in_cwnd(fbuf)) {"
    },
    {
        "line": 81,
        "fullcodeline": "evtimer_init_msg(&_arq_timer);"
    },
    {
        "line": 33,
        "fullcodeline": "DEBUG(\"6lo sfr: frags_sent not within congestion window: \""
    },
    {
        "line": 37,
        "fullcodeline": "else if (fbuf->offset < fbuf->datagram_size) {"
    },
    {
        "line": 38,
        "fullcodeline": "DEBUG(\"6lo sfr: sending subsequent fragment\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "res = _send_nth_fragment(netif, fbuf, page, &tx_sync);"
    },
    {
        "line": 44,
        "fullcodeline": "if (res == 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "DEBUG(\"6lo sfr: error sending subsequent fragment (offset = %u)\\n\","
    },
    {
        "line": 48,
        "fullcodeline": "error_no = ENOMEM;"
    }
]