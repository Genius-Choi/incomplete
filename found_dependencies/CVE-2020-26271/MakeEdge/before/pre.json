[
    {
        "line": 3,
        "fullcodeline": "DataType src_out = src->output_type(output_index);"
    },
    {
        "line": 4,
        "fullcodeline": "DataType dst_in = dst->input_type(input_index);"
    },
    {
        "line": 11,
        "fullcodeline": "g_->AddEdge(src, output_index, dst, input_index);"
    },
    {
        "line": 5,
        "fullcodeline": "if (!TypesCompatible(dst_in, src_out)) {"
    },
    {
        "line": 12,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 6,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 7,
        "fullcodeline": "\"Input \", input_index, \" of node \", dst->name(), \" was passed \","
    },
    {
        "line": 8,
        "fullcodeline": "DataTypeString(src_out), \" from \", src->name(), \":\", output_index,"
    },
    {
        "line": 9,
        "fullcodeline": "\" incompatible with expected \", DataTypeString(dst_in), \".\");"
    }
]