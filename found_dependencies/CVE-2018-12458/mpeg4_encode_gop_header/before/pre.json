[
    {
        "line": 6,
        "fullcodeline": "put_bits(&s->pb, 16, 0);"
    },
    {
        "line": 7,
        "fullcodeline": "put_bits(&s->pb, 16, GOP_STARTCODE);"
    },
    {
        "line": 9,
        "fullcodeline": "time = s->current_picture_ptr->f->pts;"
    },
    {
        "line": 12,
        "fullcodeline": "time = time * s->avctx->time_base.num;"
    },
    {
        "line": 13,
        "fullcodeline": "s->last_time_base = FFUDIV(time, s->avctx->time_base.den);"
    },
    {
        "line": 15,
        "fullcodeline": "seconds = FFUDIV(time, s->avctx->time_base.den);"
    },
    {
        "line": 16,
        "fullcodeline": "minutes = FFUDIV(seconds, 60); seconds = FFUMOD(seconds, 60);"
    },
    {
        "line": 17,
        "fullcodeline": "hours   = FFUDIV(minutes, 60); minutes = FFUMOD(minutes, 60);"
    },
    {
        "line": 18,
        "fullcodeline": "hours   = FFUMOD(hours  , 24);"
    },
    {
        "line": 20,
        "fullcodeline": "put_bits(&s->pb, 5, hours);"
    },
    {
        "line": 21,
        "fullcodeline": "put_bits(&s->pb, 6, minutes);"
    },
    {
        "line": 22,
        "fullcodeline": "put_bits(&s->pb, 1, 1);"
    },
    {
        "line": 23,
        "fullcodeline": "put_bits(&s->pb, 6, seconds);"
    },
    {
        "line": 25,
        "fullcodeline": "put_bits(&s->pb, 1, !!(s->avctx->flags & AV_CODEC_FLAG_CLOSED_GOP));"
    },
    {
        "line": 26,
        "fullcodeline": "put_bits(&s->pb, 1, 0);  // broken link == NO"
    },
    {
        "line": 28,
        "fullcodeline": "ff_mpeg4_stuffing(&s->pb);"
    },
    {
        "line": 11,
        "fullcodeline": "time = FFMIN(time, s->reordered_input_picture[1]->f->pts);"
    }
]