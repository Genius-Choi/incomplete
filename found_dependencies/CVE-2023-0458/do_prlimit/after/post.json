[
    {
        "line": 5,
        "fullcodeline": "int retval = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "resource = array_index_nospec(resource, RLIM_NLIMITS);"
    },
    {
        "line": 20,
        "fullcodeline": "rlim = tsk->signal->rlim + resource;"
    },
    {
        "line": 21,
        "fullcodeline": "task_lock(tsk->group_leader);"
    },
    {
        "line": 39,
        "fullcodeline": "task_unlock(tsk->group_leader);"
    },
    {
        "line": 7,
        "fullcodeline": "if (resource >= RLIM_NLIMITS)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!retval) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!retval && new_rlim && resource == RLIMIT_CPU &&"
    },
    {
        "line": 48,
        "fullcodeline": "IS_ENABLED(CONFIG_POSIX_TIMERS)) {"
    },
    {
        "line": 58,
        "fullcodeline": "update_rlimit_cpu(tsk->group_leader, new_rlim->rlim_cur);"
    },
    {
        "line": 8,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "if (new_rlim->rlim_cur > new_rlim->rlim_max)"
    },
    {
        "line": 14,
        "fullcodeline": "if (resource == RLIMIT_NOFILE &&"
    },
    {
        "line": 27,
        "fullcodeline": "if (new_rlim->rlim_max > rlim->rlim_max &&"
    },
    {
        "line": 30,
        "fullcodeline": "if (!retval)"
    },
    {
        "line": 47,
        "fullcodeline": "new_rlim->rlim_cur != RLIM_INFINITY &&"
    },
    {
        "line": 15,
        "fullcodeline": "new_rlim->rlim_max > sysctl_nr_open)"
    },
    {
        "line": 28,
        "fullcodeline": "!capable(CAP_SYS_RESOURCE))"
    },
    {
        "line": 29,
        "fullcodeline": "retval = -EPERM;"
    },
    {
        "line": 31,
        "fullcodeline": "retval = security_task_setrlimit(tsk, resource, new_rlim);"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 16,
        "fullcodeline": "return -EPERM;"
    }
]