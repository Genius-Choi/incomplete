[
    {
        "line": 17,
        "fullcodeline": "SAFE_NODES = set("
    },
    {
        "line": 47,
        "fullcodeline": "BUILTIN_WHITELIST = ["
    },
    {
        "line": 58,
        "fullcodeline": "filter_list = []"
    },
    {
        "line": 62,
        "fullcodeline": "CALL_WHITELIST = BUILTIN_WHITELIST + filter_list + C.DEFAULT_CALLABLE_WHITELIST"
    },
    {
        "line": 39,
        "fullcodeline": "if not sys.version.startswith('2.6'):"
    },
    {
        "line": 59,
        "fullcodeline": "for filter in filter_loader.all():"
    },
    {
        "line": 64,
        "fullcodeline": "class CleansingNodeVisitor(ast.NodeVisitor):"
    },
    {
        "line": 73,
        "fullcodeline": "if not isinstance(expr, basestring):"
    },
    {
        "line": 40,
        "fullcodeline": "SAFE_NODES.union("
    },
    {
        "line": 80,
        "fullcodeline": "parsed_tree = ast.parse(expr, mode='eval')"
    },
    {
        "line": 81,
        "fullcodeline": "cnv = CleansingNodeVisitor()"
    },
    {
        "line": 82,
        "fullcodeline": "cnv.visit(parsed_tree)"
    },
    {
        "line": 83,
        "fullcodeline": "compiled = compile(parsed_tree, expr, 'eval')"
    },
    {
        "line": 84,
        "fullcodeline": "result = eval(compiled, {}, locals)"
    },
    {
        "line": 41,
        "fullcodeline": "set("
    },
    {
        "line": 60,
        "fullcodeline": "filter_list.extend(filter.filters().keys())"
    },
    {
        "line": 76,
        "fullcodeline": "return (expr, None)"
    },
    {
        "line": 87,
        "fullcodeline": "return (result, None)"
    },
    {
        "line": 94,
        "fullcodeline": "return (expr, None)"
    },
    {
        "line": 98,
        "fullcodeline": "return (expr, e)"
    }
]