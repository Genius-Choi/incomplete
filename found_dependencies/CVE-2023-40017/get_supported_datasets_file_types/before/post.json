[
    {
        "line": 2,
        "fullcodeline": "from django.conf import settings as gn_settings"
    },
    {
        "line": 10,
        "fullcodeline": "types_module = ("
    },
    {
        "line": 13,
        "fullcodeline": "supported_types = default_types.copy()"
    },
    {
        "line": 14,
        "fullcodeline": "default_types_id = [t.get(\"id\") for t in default_types]"
    },
    {
        "line": 22,
        "fullcodeline": "formats_order = [(\"vector\", 0), (\"raster\", 1), (\"archive\", 2)]"
    },
    {
        "line": 23,
        "fullcodeline": "ordered_payload = ("
    },
    {
        "line": 31,
        "fullcodeline": "ordered_resource_types = [x[1] for x in sorted(ordered_payload, key=lambda x: x[0])]"
    },
    {
        "line": 32,
        "fullcodeline": "other_resource_types = ["
    },
    {
        "line": 11,
        "fullcodeline": "gn_settings.ADDITIONAL_DATASET_FILE_TYPES if hasattr(gn_settings, \"ADDITIONAL_DATASET_FILE_TYPES\") else []"
    },
    {
        "line": 15,
        "fullcodeline": "for _type in types_module:"
    },
    {
        "line": 37,
        "fullcodeline": "return ordered_resource_types + other_resource_types"
    },
    {
        "line": 16,
        "fullcodeline": "if _type.get(\"id\") in default_types_id:"
    },
    {
        "line": 17,
        "fullcodeline": "supported_types[default_types_id.index(_type.get(\"id\"))] = _type"
    },
    {
        "line": 19,
        "fullcodeline": "supported_types.extend([_type])"
    },
    {
        "line": 35,
        "fullcodeline": "if resource_type.get(\"format\") is None or resource_type.get(\"format\") not in [f[0] for f in formats_order]"
    },
    {
        "line": 27,
        "fullcodeline": "if resource_type.get(\"format\") in weight[0]"
    },
    {
        "line": 24,
        "fullcodeline": "(weight[1], resource_type)"
    }
]