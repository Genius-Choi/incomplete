[
    {
        "line": 5,
        "fullcodeline": "jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;"
    },
    {
        "line": 9,
        "fullcodeline": "assert(buf);"
    },
    {
        "line": 10,
        "fullcodeline": "assert(cnt >= 0);"
    },
    {
        "line": 12,
        "fullcodeline": "JAS_DBGLOG(100, (\"mem_write(%p, %p, %d)\\n\", obj, buf, cnt));"
    },
    {
        "line": 13,
        "fullcodeline": "newpos = m->pos_ + cnt;"
    },
    {
        "line": 41,
        "fullcodeline": "n = m->bufsize_ - m->pos_;"
    },
    {
        "line": 42,
        "fullcodeline": "ret = JAS_MIN(n, cnt);"
    },
    {
        "line": 50,
        "fullcodeline": "assert(ret == cnt);"
    },
    {
        "line": 14,
        "fullcodeline": "if (newpos > m->bufsize_ && m->growable_) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (m->pos_ > m->len_) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (ret > 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (m->pos_ > m->len_) {"
    },
    {
        "line": 15,
        "fullcodeline": "newbufsize = m->bufsize_;"
    },
    {
        "line": 20,
        "fullcodeline": "JAS_DBGLOG(100, (\"mem_write resizing from %d to %z\\n\", m->bufsize_,"
    },
    {
        "line": 31,
        "fullcodeline": "n = JAS_MIN(m->pos_, m->bufsize_) - m->len_;"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(&m->buf_[m->pos_], buf, ret);"
    },
    {
        "line": 45,
        "fullcodeline": "m->pos_ += ret;"
    },
    {
        "line": 48,
        "fullcodeline": "m->len_ = m->pos_;"
    },
    {
        "line": 16,
        "fullcodeline": "while (newbufsize < newpos) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (mem_resize(m, newbufsize)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (n > 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (m->pos_ != m->len_) {"
    },
    {
        "line": 17,
        "fullcodeline": "newbufsize <<= 1;"
    },
    {
        "line": 18,
        "fullcodeline": "assert(newbufsize >= 0);"
    },
    {
        "line": 33,
        "fullcodeline": "memset(&m->buf_[m->len_], 0, n);"
    },
    {
        "line": 34,
        "fullcodeline": "m->len_ += n;"
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    }
]