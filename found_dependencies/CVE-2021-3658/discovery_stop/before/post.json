[
    {
        "line": 3,
        "fullcodeline": "struct btd_adapter *adapter = client->adapter;"
    },
    {
        "line": 31,
        "fullcodeline": "cp.type = adapter->discovery_type;"
    },
    {
        "line": 32,
        "fullcodeline": "adapter->client = client;"
    },
    {
        "line": 34,
        "fullcodeline": "mgmt_send(adapter->mgmt, MGMT_OP_STOP_DISCOVERY,"
    },
    {
        "line": 7,
        "fullcodeline": "if (g_slist_next(adapter->discovery_list)) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (adapter->discovery_enable == 0x00) {"
    },
    {
        "line": 38,
        "fullcodeline": "return -EINPROGRESS;"
    },
    {
        "line": 8,
        "fullcodeline": "discovery_remove(client);"
    },
    {
        "line": 9,
        "fullcodeline": "update_discovery_filter(adapter);"
    },
    {
        "line": 14,
        "fullcodeline": "set_discovery_discoverable(adapter, false);"
    },
    {
        "line": 21,
        "fullcodeline": "discovery_remove(client);"
    },
    {
        "line": 22,
        "fullcodeline": "adapter->discovering = false;"
    },
    {
        "line": 23,
        "fullcodeline": "g_dbus_emit_property_changed(dbus_conn, adapter->path,"
    },
    {
        "line": 26,
        "fullcodeline": "trigger_passive_scanning(adapter);"
    }
]