[
    {
        "line": 3,
        "fullcodeline": "char payloadStr[92];"
    },
    {
        "line": 8,
        "fullcodeline": "optionHead = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "err = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "sprintf(payloadStr, \"%d\", StreamConfig.width);"
    },
    {
        "line": 12,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].clientViewportWd\", payloadStr);"
    },
    {
        "line": 13,
        "fullcodeline": "sprintf(payloadStr, \"%d\", StreamConfig.height);"
    },
    {
        "line": 14,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].clientViewportHt\", payloadStr);"
    },
    {
        "line": 16,
        "fullcodeline": "sprintf(payloadStr, \"%d\", StreamConfig.fps);"
    },
    {
        "line": 17,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].maxFPS\", payloadStr);"
    },
    {
        "line": 19,
        "fullcodeline": "sprintf(payloadStr, \"%d\", StreamConfig.packetSize);"
    },
    {
        "line": 20,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].packetSize\", payloadStr);"
    },
    {
        "line": 22,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].rateControlMode\", \"4\");"
    },
    {
        "line": 24,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].timeoutLengthMs\", \"7000\");"
    },
    {
        "line": 25,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].framesWithInvalidRefThreshold\", \"0\");"
    },
    {
        "line": 27,
        "fullcodeline": "sprintf(payloadStr, \"%d\", StreamConfig.bitrate);"
    },
    {
        "line": 49,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].fec.enable\", \"0\");"
    },
    {
        "line": 51,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].videoQualityScoreUpdateTime\", \"5000\");"
    },
    {
        "line": 28,
        "fullcodeline": "if (ServerMajorVersion >= 5) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (ServerMajorVersion == 3) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (ServerMajorVersion >= 4) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (err == 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bw.minimumBitrateKbps\", payloadStr);"
    },
    {
        "line": 30,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bw.maximumBitrateKbps\", payloadStr);"
    },
    {
        "line": 54,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].qosTrafficType\", \"0\");"
    },
    {
        "line": 55,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-aqos.qosTrafficType\", \"0\");"
    },
    {
        "line": 63,
        "fullcodeline": "err |= addGen3Options(&optionHead, urlSafeAddr);"
    },
    {
        "line": 105,
        "fullcodeline": "sprintf(payloadStr, \"%d\", audioChannelCount);"
    },
    {
        "line": 106,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-audio.surround.numChannels\", payloadStr);"
    },
    {
        "line": 107,
        "fullcodeline": "sprintf(payloadStr, \"%d\", audioChannelMask);"
    },
    {
        "line": 108,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-audio.surround.channelMask\", payloadStr);"
    },
    {
        "line": 41,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bw.minimumBitrate\", payloadStr);"
    },
    {
        "line": 42,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bw.maximumBitrate\", payloadStr);"
    },
    {
        "line": 58,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].qosTrafficType\", \"5\");"
    },
    {
        "line": 59,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-aqos.qosTrafficType\", \"4\");"
    },
    {
        "line": 73,
        "fullcodeline": "if (NegotiatedVideoFormat == VIDEO_FORMAT_H265) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (StreamConfig.audioConfiguration == AUDIO_CONFIGURATION_51_SURROUND) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (audioChannelCount > 2) {"
    },
    {
        "line": 65,
        "fullcodeline": "else if (ServerMajorVersion == 4) {"
    },
    {
        "line": 74,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-clientSupportHevc\", \"1\");"
    },
    {
        "line": 75,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bitStreamFormat\", \"1\");"
    },
    {
        "line": 78,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].videoEncoderSlicesPerFrame\", \"1\");"
    },
    {
        "line": 97,
        "fullcodeline": "audioChannelCount = CHANNEL_COUNT_51_SURROUND;"
    },
    {
        "line": 98,
        "fullcodeline": "audioChannelMask = CHANNEL_MASK_51_SURROUND;"
    },
    {
        "line": 110,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-audio.surround.enable\", \"1\");"
    },
    {
        "line": 34,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].averageBitrate\", \"4\");"
    },
    {
        "line": 35,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].peakBitrate\", \"4\");"
    },
    {
        "line": 66,
        "fullcodeline": "err |= addGen4Options(&optionHead, urlSafeAddr);"
    },
    {
        "line": 83,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-clientSupportHevc\", \"0\");"
    },
    {
        "line": 84,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-vqos[0].bitStreamFormat\", \"0\");"
    },
    {
        "line": 87,
        "fullcodeline": "slicesPerFrame = (unsigned char)(VideoCallbacks.capabilities >> 24);"
    },
    {
        "line": 92,
        "fullcodeline": "sprintf(payloadStr, \"%d\", slicesPerFrame);"
    },
    {
        "line": 93,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-video[0].videoEncoderSlicesPerFrame\", payloadStr);"
    },
    {
        "line": 101,
        "fullcodeline": "audioChannelCount = CHANNEL_COUNT_STEREO;"
    },
    {
        "line": 102,
        "fullcodeline": "audioChannelMask = CHANNEL_MASK_STEREO;"
    },
    {
        "line": 113,
        "fullcodeline": "err |= addAttributeString(&optionHead, \"x-nv-audio.surround.enable\", \"0\");"
    },
    {
        "line": 69,
        "fullcodeline": "err |= addGen5Options(&optionHead);"
    },
    {
        "line": 88,
        "fullcodeline": "if (slicesPerFrame == 0) {"
    },
    {
        "line": 90,
        "fullcodeline": "slicesPerFrame = 1;"
    }
]