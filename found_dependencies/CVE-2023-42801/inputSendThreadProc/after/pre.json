[
    {
        "line": 4,
        "fullcodeline": "char encryptedBuffer[MAX_INPUT_PACKET_SIZE];"
    },
    {
        "line": 7,
        "fullcodeline": "while (!PltIsThreadInterrupted(&inputSendThread)) {"
    },
    {
        "line": 10,
        "fullcodeline": "err = LbqWaitForQueueElement(&packetQueue, (void**)&holder);"
    },
    {
        "line": 118,
        "fullcodeline": "encryptedSize = sizeof(encryptedBuffer) - 4;"
    },
    {
        "line": 119,
        "fullcodeline": "err = encryptData((const unsigned char*)&holder->packet, holder->packetLength,"
    },
    {
        "line": 121,
        "fullcodeline": "free(holder);"
    },
    {
        "line": 129,
        "fullcodeline": "encryptedLengthPrefix = htonl((unsigned long)encryptedSize);"
    },
    {
        "line": 130,
        "fullcodeline": "memcpy(&encryptedBuffer[0], &encryptedLengthPrefix, 4);"
    },
    {
        "line": 11,
        "fullcodeline": "if (err != LBQ_SUCCESS) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (holder->packet.multiController.header.packetType == htonl(PACKET_TYPE_MULTI_CONTROLLER)) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (err != 0) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (AppVersionQuad[0] < 5) {"
    },
    {
        "line": 19,
        "fullcodeline": "int dirs[6];"
    },
    {
        "line": 21,
        "fullcodeline": "memset(dirs, 0, sizeof(dirs));"
    },
    {
        "line": 23,
        "fullcodeline": "origPkt = &holder->packet.multiController;"
    },
    {
        "line": 120,
        "fullcodeline": "(unsigned char*)&encryptedBuffer[4], &encryptedSize);"
    },
    {
        "line": 134,
        "fullcodeline": "err = send(inputSock, (const char*) encryptedBuffer,"
    },
    {
        "line": 136,
        "fullcodeline": "if (err <= 0) {"
    },
    {
        "line": 153,
        "fullcodeline": "err = (SOCK_RET)sendInputPacketOnControlStream((unsigned char*) encryptedBuffer,"
    },
    {
        "line": 38,
        "fullcodeline": "newPkt = &controllerBatchHolder->packet.multiController;"
    },
    {
        "line": 57,
        "fullcodeline": "origPkt->leftTrigger = newPkt->leftTrigger;"
    },
    {
        "line": 58,
        "fullcodeline": "origPkt->rightTrigger = newPkt->rightTrigger;"
    },
    {
        "line": 59,
        "fullcodeline": "origPkt->leftStickX = newPkt->leftStickX;"
    },
    {
        "line": 60,
        "fullcodeline": "origPkt->leftStickY = newPkt->leftStickY;"
    },
    {
        "line": 61,
        "fullcodeline": "origPkt->rightStickX = newPkt->rightStickX;"
    },
    {
        "line": 62,
        "fullcodeline": "origPkt->rightStickY = newPkt->rightStickY;"
    },
    {
        "line": 65,
        "fullcodeline": "free(controllerBatchHolder);"
    },
    {
        "line": 69,
        "fullcodeline": "else if (holder->packet.mouseMove.header.packetType == htonl(PACKET_TYPE_MOUSE_MOVE)) {"
    },
    {
        "line": 135,
        "fullcodeline": "(int) (encryptedSize + sizeof(encryptedLengthPrefix)), 0);"
    },
    {
        "line": 147,
        "fullcodeline": "if (AppVersionQuad[0] >= 7 && encryptedSize >= 16 + sizeof(currentAesIv)) {"
    },
    {
        "line": 155,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (LbqPeekQueueElement(&packetQueue, (void**)&controllerBatchHolder) != LBQ_SUCCESS) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (controllerBatchHolder->packet.multiController.header.packetType != htonl(PACKET_TYPE_MULTI_CONTROLLER)) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (newPkt->buttonFlags != origPkt->buttonFlags ||"
    },
    {
        "line": 52,
        "fullcodeline": "if (LbqPollQueueElement(&packetQueue, (void**)&controllerBatchHolder) != LBQ_SUCCESS) {"
    },
    {
        "line": 71,
        "fullcodeline": "int totalDeltaX = (short)htons(holder->packet.mouseMove.deltaX);"
    },
    {
        "line": 72,
        "fullcodeline": "int totalDeltaY = (short)htons(holder->packet.mouseMove.deltaY);"
    },
    {
        "line": 113,
        "fullcodeline": "holder->packet.mouseMove.deltaX = htons((short)totalDeltaX);"
    },
    {
        "line": 114,
        "fullcodeline": "holder->packet.mouseMove.deltaY = htons((short)totalDeltaY);"
    },
    {
        "line": 148,
        "fullcodeline": "memcpy(currentAesIv,"
    },
    {
        "line": 46,
        "fullcodeline": "!checkDirs(origPkt->rightStickY, newPkt->rightStickY, &dirs[5])) {"
    },
    {
        "line": 154,
        "fullcodeline": "(int) (encryptedSize + sizeof(encryptedLengthPrefix)));"
    },
    {
        "line": 45,
        "fullcodeline": "!checkDirs(origPkt->rightStickX, newPkt->rightStickX, &dirs[4]) ||"
    },
    {
        "line": 88,
        "fullcodeline": "partialDeltaX = (short)htons(mouseBatchHolder->packet.mouseMove.deltaX);"
    },
    {
        "line": 89,
        "fullcodeline": "partialDeltaY = (short)htons(mouseBatchHolder->packet.mouseMove.deltaY);"
    },
    {
        "line": 105,
        "fullcodeline": "totalDeltaX += partialDeltaX;"
    },
    {
        "line": 106,
        "fullcodeline": "totalDeltaY += partialDeltaY;"
    },
    {
        "line": 109,
        "fullcodeline": "free(mouseBatchHolder);"
    },
    {
        "line": 44,
        "fullcodeline": "!checkDirs(origPkt->leftStickY, newPkt->leftStickY, &dirs[3]) ||"
    },
    {
        "line": 79,
        "fullcodeline": "if (LbqPeekQueueElement(&packetQueue, (void**)&mouseBatchHolder) != LBQ_SUCCESS) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (mouseBatchHolder->packet.mouseMove.header.packetType != htonl(PACKET_TYPE_MOUSE_MOVE)) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (partialDeltaX + totalDeltaX > INT16_MAX ||"
    },
    {
        "line": 101,
        "fullcodeline": "if (LbqPollQueueElement(&packetQueue, (void**)&mouseBatchHolder) != LBQ_SUCCESS) {"
    },
    {
        "line": 149,
        "fullcodeline": "&encryptedBuffer[4 + encryptedSize - sizeof(currentAesIv)],"
    },
    {
        "line": 43,
        "fullcodeline": "!checkDirs(origPkt->leftStickX, newPkt->leftStickX, &dirs[2]) ||"
    },
    {
        "line": 95,
        "fullcodeline": "partialDeltaY + totalDeltaY < INT16_MIN) {"
    },
    {
        "line": 42,
        "fullcodeline": "!checkDirs(origPkt->rightTrigger, newPkt->rightTrigger, &dirs[1]) ||"
    },
    {
        "line": 94,
        "fullcodeline": "partialDeltaY + totalDeltaY > INT16_MAX ||"
    },
    {
        "line": 41,
        "fullcodeline": "!checkDirs(origPkt->leftTrigger, newPkt->leftTrigger, &dirs[0]) ||"
    },
    {
        "line": 93,
        "fullcodeline": "partialDeltaX + totalDeltaX < INT16_MIN ||"
    },
    {
        "line": 40,
        "fullcodeline": "newPkt->controllerNumber != origPkt->controllerNumber ||"
    }
]