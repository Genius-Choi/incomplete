[
    {
        "line": 11,
        "fullcodeline": "holder = malloc(sizeof(*holder));"
    },
    {
        "line": 57,
        "fullcodeline": "err = LbqOfferQueueItem(&packetQueue, holder, &holder->entry);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!initialized) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (holder == NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (AppVersionQuad[0] == 3) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (err != LBQ_SUCCESS) {"
    },
    {
        "line": 19,
        "fullcodeline": "holder->packetLength = sizeof(NV_CONTROLLER_PACKET);"
    },
    {
        "line": 21,
        "fullcodeline": "holder->packet.controller.headerA = C_HEADER_A;"
    },
    {
        "line": 22,
        "fullcodeline": "holder->packet.controller.headerB = C_HEADER_B;"
    },
    {
        "line": 30,
        "fullcodeline": "holder->packet.controller.tailA = C_TAIL_A;"
    },
    {
        "line": 31,
        "fullcodeline": "holder->packet.controller.tailB = C_TAIL_B;"
    },
    {
        "line": 8,
        "fullcodeline": "return -2;"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 20,
        "fullcodeline": "holder->packet.controller.header.packetType = htonl(PACKET_TYPE_CONTROLLER);"
    },
    {
        "line": 35,
        "fullcodeline": "holder->packetLength = sizeof(NV_MULTI_CONTROLLER_PACKET);"
    },
    {
        "line": 37,
        "fullcodeline": "holder->packet.multiController.headerA = MC_HEADER_A;"
    },
    {
        "line": 42,
        "fullcodeline": "holder->packet.multiController.headerB = MC_HEADER_B;"
    },
    {
        "line": 44,
        "fullcodeline": "holder->packet.multiController.midA = MC_ACTIVE_CONTROLLER_FLAGS;"
    },
    {
        "line": 45,
        "fullcodeline": "holder->packet.multiController.midB = MC_MID_B;"
    },
    {
        "line": 53,
        "fullcodeline": "holder->packet.multiController.tailA = MC_TAIL_A;"
    },
    {
        "line": 54,
        "fullcodeline": "holder->packet.multiController.tailB = MC_TAIL_B;"
    },
    {
        "line": 36,
        "fullcodeline": "holder->packet.multiController.header.packetType = htonl(PACKET_TYPE_MULTI_CONTROLLER);"
    }
]