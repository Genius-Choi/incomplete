[
    {
        "line": 57,
        "fullcodeline": "err = LbqOfferQueueItem(&packetQueue, holder, &holder->entry);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!initialized) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (holder == NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ServerMajorVersion == 3) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (err != LBQ_SUCCESS) {"
    },
    {
        "line": 20,
        "fullcodeline": "holder->packet.controller.header.packetType = htonl(PACKET_TYPE_CONTROLLER);"
    },
    {
        "line": 21,
        "fullcodeline": "holder->packet.controller.headerA = C_HEADER_A;"
    },
    {
        "line": 22,
        "fullcodeline": "holder->packet.controller.headerB = C_HEADER_B;"
    },
    {
        "line": 23,
        "fullcodeline": "holder->packet.controller.buttonFlags = buttonFlags;"
    },
    {
        "line": 24,
        "fullcodeline": "holder->packet.controller.leftTrigger = leftTrigger;"
    },
    {
        "line": 25,
        "fullcodeline": "holder->packet.controller.rightTrigger = rightTrigger;"
    },
    {
        "line": 26,
        "fullcodeline": "holder->packet.controller.leftStickX = leftStickX;"
    },
    {
        "line": 27,
        "fullcodeline": "holder->packet.controller.leftStickY = leftStickY;"
    },
    {
        "line": 28,
        "fullcodeline": "holder->packet.controller.rightStickX = rightStickX;"
    },
    {
        "line": 29,
        "fullcodeline": "holder->packet.controller.rightStickY = rightStickY;"
    },
    {
        "line": 30,
        "fullcodeline": "holder->packet.controller.tailA = C_TAIL_A;"
    },
    {
        "line": 31,
        "fullcodeline": "holder->packet.controller.tailB = C_TAIL_B;"
    },
    {
        "line": 59,
        "fullcodeline": "free(holder);"
    },
    {
        "line": 8,
        "fullcodeline": "return -2;"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 36,
        "fullcodeline": "holder->packet.multiController.header.packetType = htonl(PACKET_TYPE_MULTI_CONTROLLER);"
    },
    {
        "line": 37,
        "fullcodeline": "holder->packet.multiController.headerA = MC_HEADER_A;"
    },
    {
        "line": 42,
        "fullcodeline": "holder->packet.multiController.headerB = MC_HEADER_B;"
    },
    {
        "line": 43,
        "fullcodeline": "holder->packet.multiController.controllerNumber = controllerNumber;"
    },
    {
        "line": 44,
        "fullcodeline": "holder->packet.multiController.midA = MC_ACTIVE_CONTROLLER_FLAGS;"
    },
    {
        "line": 45,
        "fullcodeline": "holder->packet.multiController.midB = MC_MID_B;"
    },
    {
        "line": 46,
        "fullcodeline": "holder->packet.multiController.buttonFlags = buttonFlags;"
    },
    {
        "line": 47,
        "fullcodeline": "holder->packet.multiController.leftTrigger = leftTrigger;"
    },
    {
        "line": 48,
        "fullcodeline": "holder->packet.multiController.rightTrigger = rightTrigger;"
    },
    {
        "line": 49,
        "fullcodeline": "holder->packet.multiController.leftStickX = leftStickX;"
    },
    {
        "line": 50,
        "fullcodeline": "holder->packet.multiController.leftStickY = leftStickY;"
    },
    {
        "line": 51,
        "fullcodeline": "holder->packet.multiController.rightStickX = rightStickX;"
    },
    {
        "line": 52,
        "fullcodeline": "holder->packet.multiController.rightStickY = rightStickY;"
    },
    {
        "line": 53,
        "fullcodeline": "holder->packet.multiController.tailA = MC_TAIL_A;"
    },
    {
        "line": 54,
        "fullcodeline": "holder->packet.multiController.tailB = MC_TAIL_B;"
    },
    {
        "line": 39,
        "fullcodeline": "if (ServerMajorVersion >= 5) {"
    },
    {
        "line": 40,
        "fullcodeline": "holder->packet.multiController.headerA--;"
    }
]