[
    {
        "line": 9,
        "fullcodeline": "struct l2tp_attr_t *attr, *RV = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "char msg_control[128];"
    },
    {
        "line": 20,
        "fullcodeline": "*p = NULL;"
    },
    {
        "line": 44,
        "fullcodeline": "buf = mempool_alloc(buf_pool);"
    },
    {
        "line": 49,
        "fullcodeline": "hdr = (struct l2tp_hdr_t *)buf;"
    },
    {
        "line": 50,
        "fullcodeline": "ptr = (uint8_t *)(hdr + 1);"
    },
    {
        "line": 52,
        "fullcodeline": "n = recvfrom(fd, buf, L2TP_MAX_PACKET_SIZE, 0, &addr, &len);"
    },
    {
        "line": 107,
        "fullcodeline": "pack = mempool_alloc(pack_pool);"
    },
    {
        "line": 113,
        "fullcodeline": "memset(pack, 0, sizeof(*pack));"
    },
    {
        "line": 114,
        "fullcodeline": "INIT_LIST_HEAD(&pack->attrs);"
    },
    {
        "line": 116,
        "fullcodeline": "memcpy(&pack->addr, &addr, sizeof(addr));"
    },
    {
        "line": 117,
        "fullcodeline": "memcpy(&pack->hdr, hdr, sizeof(*hdr));"
    },
    {
        "line": 118,
        "fullcodeline": "length = ntohs(hdr->length) - sizeof(*hdr);"
    },
    {
        "line": 227,
        "fullcodeline": "*p = pack;"
    },
    {
        "line": 229,
        "fullcodeline": "mempool_free(buf);"
    },
    {
        "line": 234,
        "fullcodeline": "l2tp_packet_free(pack);"
    },
    {
        "line": 236,
        "fullcodeline": "mempool_free(buf);"
    },
    {
        "line": 243,
        "fullcodeline": "log_emerg(\"l2tp: out of memory\\n\");"
    },
    {
        "line": 45,
        "fullcodeline": "if (!buf) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (n < 6) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (hdr->T == 0)"
    },
    {
        "line": 74,
        "fullcodeline": "if (n < ntohs(hdr->length)) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (hdr->ver == 2) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (!pack) {"
    },
    {
        "line": 23,
        "fullcodeline": "memset(&msg, 0, sizeof(msg));"
    },
    {
        "line": 24,
        "fullcodeline": "msg.msg_control = msg_control;"
    },
    {
        "line": 25,
        "fullcodeline": "msg.msg_controllen = 128;"
    },
    {
        "line": 27,
        "fullcodeline": "n = recvmsg(fd, &msg, MSG_PEEK);"
    },
    {
        "line": 46,
        "fullcodeline": "log_emerg(\"l2tp: out of memory\\n\");"
    },
    {
        "line": 55,
        "fullcodeline": "mempool_free(buf);"
    },
    {
        "line": 61,
        "fullcodeline": "log_error(\"l2tp: recv: %s\\n\", strerror(errno));"
    },
    {
        "line": 109,
        "fullcodeline": "log_emerg(\"l2tp: out of memory\\n\");"
    },
    {
        "line": 121,
        "fullcodeline": "*(uint16_t *)ptr = ntohs(*(uint16_t *)ptr);"
    },
    {
        "line": 122,
        "fullcodeline": "avp = (struct l2tp_avp_t *)ptr;"
    },
    {
        "line": 133,
        "fullcodeline": "da = l2tp_dict_find_attr_by_id(ntohs(avp->type));"
    },
    {
        "line": 223,
        "fullcodeline": "ptr += avp->length;"
    },
    {
        "line": 224,
        "fullcodeline": "length -= avp->length;"
    },
    {
        "line": 240,
        "fullcodeline": "log_warn(\"l2tp: incorrect avp received (type=%i, incorrect length %i)\\n\", ntohs(avp->type), orig_avp_len);"
    },
    {
        "line": 29,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "for (cmsg = CMSG_FIRSTHDR(&msg); cmsg != NULL; cmsg = CMSG_NXTHDR(&msg, cmsg)) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (errno == EAGAIN) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (hdr->L == 0) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (hdr->S == 0) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (hdr->O == 1) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (avp->length > length) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!da) {"
    },
    {
        "line": 32,
        "fullcodeline": "log_error(\"l2tp: recvmsg: %s\\n\", strerror(errno));"
    },
    {
        "line": 67,
        "fullcodeline": "log_warn(\"l2tp: short packet received (%i/%zu)\\n\", n, sizeof(*hdr));"
    },
    {
        "line": 76,
        "fullcodeline": "log_warn(\"l2tp: short packet received (%i/%i)\\n\", n, ntohs(hdr->length));"
    },
    {
        "line": 101,
        "fullcodeline": "} else if (hdr->ver != 3) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (errno == EAGAIN)"
    },
    {
        "line": 37,
        "fullcodeline": "if (cmsg->cmsg_level == IPPROTO_IP && cmsg->cmsg_type == IP_PKTINFO) {"
    },
    {
        "line": 57,
        "fullcodeline": "return -1;"
    },
    {
        "line": 84,
        "fullcodeline": "if (!conf_avp_permissive)"
    },
    {
        "line": 91,
        "fullcodeline": "if (!conf_avp_permissive)"
    },
    {
        "line": 98,
        "fullcodeline": "if (!conf_avp_permissive)"
    },
    {
        "line": 137,
        "fullcodeline": "if (avp->M && !conf_avp_permissive)"
    },
    {
        "line": 171,
        "fullcodeline": "attr = mempool_alloc(attr_pool);"
    },
    {
        "line": 172,
        "fullcodeline": "memset(attr, 0, sizeof(*attr));"
    },
    {
        "line": 173,
        "fullcodeline": "list_add_tail(&attr->entry, &pack->attrs);"
    },
    {
        "line": 183,
        "fullcodeline": "attr->attr = da;"
    },
    {
        "line": 184,
        "fullcodeline": "attr->M = avp->M;"
    },
    {
        "line": 185,
        "fullcodeline": "attr->H = 0;"
    },
    {
        "line": 186,
        "fullcodeline": "attr->length = orig_avp_len - sizeof(*avp);"
    },
    {
        "line": 38,
        "fullcodeline": "memcpy(pkt_info, CMSG_DATA(cmsg), sizeof(*pkt_info));"
    },
    {
        "line": 58,
        "fullcodeline": "} else if (errno == ECONNREFUSED) {"
    },
    {
        "line": 83,
        "fullcodeline": "log_warn(\"l2tp: incorrect message received (L=0)\\n\");"
    },
    {
        "line": 90,
        "fullcodeline": "log_warn(\"l2tp: incorrect message received (S=0)\\n\");"
    },
    {
        "line": 97,
        "fullcodeline": "log_warn(\"l2tp: incorrect message received (O=1)\\n\");"
    },
    {
        "line": 126,
        "fullcodeline": "log_warn(\"l2tp: incorrect avp received (exceeds message length)\\n\");"
    },
    {
        "line": 136,
        "fullcodeline": "log_warn(\"l2tp: unknown avp received (type=%i, M=%u)\\n\", ntohs(avp->type), avp->M);"
    },
    {
        "line": 140,
        "fullcodeline": "if (da->M != -1 && da->M != avp->M) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (da->H != -1 && da->H != avp->H) {"
    },
    {
        "line": 188,
        "fullcodeline": "if (attr->attr->id == Random_Vector)"
    },
    {
        "line": 31,
        "fullcodeline": "return -1;"
    },
    {
        "line": 103,
        "fullcodeline": "log_warn(\"l2tp: protocol version %i is not supported\\n\", hdr->ver);"
    },
    {
        "line": 176,
        "fullcodeline": "orig_avp_len = ntohs(*(uint16_t *)avp->val) + sizeof(*avp);"
    },
    {
        "line": 177,
        "fullcodeline": "orig_avp_val = avp->val + sizeof(uint16_t);"
    },
    {
        "line": 189,
        "fullcodeline": "RV = attr;"
    },
    {
        "line": 195,
        "fullcodeline": "attr->val.uint16 = ntohs(*(uint16_t *)orig_avp_val);"
    },
    {
        "line": 200,
        "fullcodeline": "attr->val.uint32 = ntohl(*(uint32_t *)orig_avp_val);"
    },
    {
        "line": 205,
        "fullcodeline": "attr->val.uint64 = be64toh(*(uint64_t *)orig_avp_val);"
    },
    {
        "line": 208,
        "fullcodeline": "attr->val.octets = _malloc(attr->length);"
    },
    {
        "line": 211,
        "fullcodeline": "memcpy(attr->val.octets, orig_avp_val, attr->length);"
    },
    {
        "line": 214,
        "fullcodeline": "attr->val.string = _malloc(attr->length + 1);"
    },
    {
        "line": 217,
        "fullcodeline": "memcpy(attr->val.string, orig_avp_val, attr->length);"
    },
    {
        "line": 218,
        "fullcodeline": "attr->val.string[attr->length] = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "return -2;"
    },
    {
        "line": 143,
        "fullcodeline": "if (!conf_avp_permissive)"
    },
    {
        "line": 150,
        "fullcodeline": "if (!conf_avp_permissive)"
    },
    {
        "line": 155,
        "fullcodeline": "if (!RV) {"
    },
    {
        "line": 160,
        "fullcodeline": "if (secret == NULL || secret_len == 0) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (decode_avp(avp, RV, secret, secret_len) < 0)"
    },
    {
        "line": 179,
        "fullcodeline": "orig_avp_len = avp->length;"
    },
    {
        "line": 180,
        "fullcodeline": "orig_avp_val = avp->val;"
    },
    {
        "line": 193,
        "fullcodeline": "if (orig_avp_len != sizeof(*avp) + 2)"
    },
    {
        "line": 198,
        "fullcodeline": "if (orig_avp_len != sizeof(*avp) + 4)"
    },
    {
        "line": 203,
        "fullcodeline": "if (orig_avp_len != sizeof(*avp) + 8)"
    },
    {
        "line": 209,
        "fullcodeline": "if (!attr->val.octets)"
    },
    {
        "line": 215,
        "fullcodeline": "if (!attr->val.string)"
    },
    {
        "line": 142,
        "fullcodeline": "log_warn(\"l2tp: incorrect avp received (type=%i, M=%i, must be %i)\\n\", ntohs(avp->type), avp->M, da->M);"
    },
    {
        "line": 149,
        "fullcodeline": "log_warn(\"l2tp: incorrect avp received (type=%i, H=%i, must be %i)\\n\", ntohs(avp->type), avp->H, da->H);"
    },
    {
        "line": 161,
        "fullcodeline": "log_error(\"l2tp: impossible to decode\""
    },
    {
        "line": 164,
        "fullcodeline": "ntohs(avp->type));"
    },
    {
        "line": 157,
        "fullcodeline": "log_warn(\"l2tp: incorrect avp received (type=%i, H=1, but Random-Vector is not received)\\n\", ntohs(avp->type));"
    }
]