[
    {
        "line": 9,
        "fullcodeline": "IPHeader *pIpHeader = (IPHeader *) RtlOffsetToPointer(pDataPages[0].Virtual, ulStartOffset);"
    },
    {
        "line": 11,
        "fullcodeline": "tTcpIpPacketParsingResult res = QualifyIpPacket(pIpHeader, ulDataLength, verifyLength);"
    },
    {
        "line": 57,
        "fullcodeline": "PrintOutParsingResult(res, 1, caller);"
    },
    {
        "line": 12,
        "fullcodeline": "if (res.ipStatus == ppresNotIP || res.ipCheckSum == ppresIPTooShort)"
    },
    {
        "line": 15,
        "fullcodeline": "if (res.ipStatus == ppresIPV4)"
    },
    {
        "line": 17,
        "fullcodeline": "if (flags & pcrIpChecksum)"
    },
    {
        "line": 19,
        "fullcodeline": "if(res.xxpStatus == ppresXxpKnown)"
    },
    {
        "line": 18,
        "fullcodeline": "res = VerifyIpChecksum(&pIpHeader->v4, res, (flags & pcrFixIPChecksum) != 0);"
    },
    {
        "line": 37,
        "fullcodeline": "else if (res.ipStatus == ppresIPV6)"
    },
    {
        "line": 21,
        "fullcodeline": "if (res.TcpUdp == ppresIsTCP) /* TCP */"
    },
    {
        "line": 39,
        "fullcodeline": "if(res.xxpStatus == ppresXxpKnown)"
    },
    {
        "line": 23,
        "fullcodeline": "if(flags & pcrTcpV4Checksum)"
    },
    {
        "line": 25,
        "fullcodeline": "res = VerifyTcpChecksum(pDataPages, ulDataLength, ulStartOffset, res, flags & (pcrFixPHChecksum | pcrFixTcpV4Checksum));"
    },
    {
        "line": 30,
        "fullcodeline": "if (flags & pcrUdpV4Checksum)"
    },
    {
        "line": 41,
        "fullcodeline": "if (res.TcpUdp == ppresIsTCP) /* TCP */"
    },
    {
        "line": 32,
        "fullcodeline": "res = VerifyUdpChecksum(pDataPages, ulDataLength, ulStartOffset, res, flags & (pcrFixPHChecksum | pcrFixUdpV4Checksum));"
    },
    {
        "line": 43,
        "fullcodeline": "if(flags & pcrTcpV6Checksum)"
    },
    {
        "line": 45,
        "fullcodeline": "res = VerifyTcpChecksum(pDataPages, ulDataLength, ulStartOffset, res, flags & (pcrFixPHChecksum | pcrFixTcpV6Checksum));"
    },
    {
        "line": 50,
        "fullcodeline": "if (flags & pcrUdpV6Checksum)"
    },
    {
        "line": 52,
        "fullcodeline": "res = VerifyUdpChecksum(pDataPages, ulDataLength, ulStartOffset, res, flags & (pcrFixPHChecksum | pcrFixUdpV6Checksum));"
    }
]