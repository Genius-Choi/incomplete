[
    {
        "line": 3,
        "fullcodeline": "int\t    valcount = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "(*array)[0] = valcount;"
    },
    {
        "line": 45,
        "fullcodeline": "t = 1;"
    },
    {
        "line": 7,
        "fullcodeline": "if (var[0] == NUL || (var[0] == '0' && var[1] == NUL))"
    },
    {
        "line": 13,
        "fullcodeline": "for (cp = var; *cp != NUL; ++cp)"
    },
    {
        "line": 41,
        "fullcodeline": "if (*array == NULL)"
    },
    {
        "line": 46,
        "fullcodeline": "for (cp = var; *cp != NUL;)"
    },
    {
        "line": 9,
        "fullcodeline": "*array = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "int n = atoi((char *)cp);"
    },
    {
        "line": 58,
        "fullcodeline": "(*array)[t++] = n;"
    },
    {
        "line": 29,
        "fullcodeline": "if (VIM_ISDIGIT(*cp))"
    },
    {
        "line": 36,
        "fullcodeline": "semsg(_(e_invalid_argument_str), var);"
    },
    {
        "line": 60,
        "fullcodeline": "++cp;"
    },
    {
        "line": 61,
        "fullcodeline": "if (*cp != NUL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (cp == var || cp[-1] == ',')"
    },
    {
        "line": 31,
        "fullcodeline": "if (cp[0] == ',' && cp > var && cp[-1] != ',' && cp[1] != NUL)"
    },
    {
        "line": 33,
        "fullcodeline": "++valcount;"
    },
    {
        "line": 51,
        "fullcodeline": "if (n < 0 || n > 9999)"
    },
    {
        "line": 59,
        "fullcodeline": "while (*cp != NUL && *cp != ',')"
    },
    {
        "line": 62,
        "fullcodeline": "++cp;"
    },
    {
        "line": 53,
        "fullcodeline": "semsg(_(e_invalid_argument_str), cp);"
    },
    {
        "line": 19,
        "fullcodeline": "if (strtol((char *)cp, (char **)&end, 10) <= 0)"
    },
    {
        "line": 21,
        "fullcodeline": "if (cp != end)"
    },
    {
        "line": 22,
        "fullcodeline": "emsg(_(e_argument_must_be_positive));"
    },
    {
        "line": 24,
        "fullcodeline": "semsg(_(e_invalid_argument_str), cp);"
    }
]