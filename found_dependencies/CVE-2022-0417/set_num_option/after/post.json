[
    {
        "line": 10,
        "fullcodeline": "char\t*errmsg = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "long\told_Rows = Rows;\t// remember old Rows"
    },
    {
        "line": 17,
        "fullcodeline": "long\told_Columns = Columns;\t// remember old Columns"
    },
    {
        "line": 18,
        "fullcodeline": "long\t*pp = (long *)varp;"
    },
    {
        "line": 37,
        "fullcodeline": "*pp = value;"
    },
    {
        "line": 417,
        "fullcodeline": "limit_screen_size();"
    },
    {
        "line": 541,
        "fullcodeline": "options[opt_idx].flags |= P_WAS_SET;"
    },
    {
        "line": 548,
        "fullcodeline": "comp_col();\t\t\t    // in case 'columns' or 'ls' changed"
    },
    {
        "line": 21,
        "fullcodeline": "if ((secure"
    },
    {
        "line": 46,
        "fullcodeline": "if (curbuf->b_p_sw < 0)"
    },
    {
        "line": 62,
        "fullcodeline": "if (pp == &p_wh || pp == &p_hh)"
    },
    {
        "line": 397,
        "fullcodeline": "if (Rows < min_rows() && full_screen)"
    },
    {
        "line": 407,
        "fullcodeline": "if (Columns < MIN_COLUMNS && full_screen)"
    },
    {
        "line": 423,
        "fullcodeline": "if (old_Rows != Rows || old_Columns != Columns)"
    },
    {
        "line": 446,
        "fullcodeline": "if (curbuf->b_p_ts <= 0)"
    },
    {
        "line": 456,
        "fullcodeline": "if (p_tm < 0)"
    },
    {
        "line": 461,
        "fullcodeline": "if ((curwin->w_p_scr <= 0"
    },
    {
        "line": 479,
        "fullcodeline": "if (p_hi < 0)"
    },
    {
        "line": 489,
        "fullcodeline": "if (p_re < 0 || p_re > 2)"
    },
    {
        "line": 494,
        "fullcodeline": "if (p_report < 0)"
    },
    {
        "line": 499,
        "fullcodeline": "if ((p_sj < -100 || p_sj >= Rows) && full_screen)"
    },
    {
        "line": 509,
        "fullcodeline": "if (p_so < 0 && full_screen)"
    },
    {
        "line": 514,
        "fullcodeline": "if (p_siso < 0 && full_screen)"
    },
    {
        "line": 526,
        "fullcodeline": "if (p_ut < 0)"
    },
    {
        "line": 531,
        "fullcodeline": "if (p_ss < 0)"
    },
    {
        "line": 538,
        "fullcodeline": "if ((opt_flags & (OPT_LOCAL | OPT_GLOBAL)) == 0)"
    },
    {
        "line": 549,
        "fullcodeline": "if (curwin->w_curswant != MAXCOL"
    },
    {
        "line": 552,
        "fullcodeline": "if ((opt_flags & OPT_NO_REDRAW) == 0)"
    },
    {
        "line": 11,
        "fullcodeline": "long\told_value = *(long *)varp;"
    },
    {
        "line": 25,
        "fullcodeline": ") && (options[opt_idx].flags & P_SECURE))"
    },
    {
        "line": 48,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 405,
        "fullcodeline": "Rows = min_rows();"
    },
    {
        "line": 415,
        "fullcodeline": "Columns = MIN_COLUMNS;"
    },
    {
        "line": 448,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 449,
        "fullcodeline": "curbuf->b_p_ts = 8;"
    },
    {
        "line": 458,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 459,
        "fullcodeline": "p_tm = 0;"
    },
    {
        "line": 481,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 482,
        "fullcodeline": "p_hi = 0;"
    },
    {
        "line": 491,
        "fullcodeline": "errmsg = e_invalid_argument;"
    },
    {
        "line": 492,
        "fullcodeline": "p_re = 0;"
    },
    {
        "line": 496,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 497,
        "fullcodeline": "p_report = 1;"
    },
    {
        "line": 511,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 512,
        "fullcodeline": "p_so = 0;"
    },
    {
        "line": 516,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 517,
        "fullcodeline": "p_siso = 0;"
    },
    {
        "line": 528,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 529,
        "fullcodeline": "p_ut = 2000;"
    },
    {
        "line": 533,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 534,
        "fullcodeline": "p_ss = 0;"
    },
    {
        "line": 539,
        "fullcodeline": "*(long *)get_varp_scope(&(options[opt_idx]), OPT_GLOBAL) = *pp;"
    },
    {
        "line": 550,
        "fullcodeline": "&& (options[opt_idx].flags & (P_CURSWANT | P_RALL)) != 0)"
    },
    {
        "line": 551,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 553,
        "fullcodeline": "check_redraw(options[opt_idx].flags);"
    },
    {
        "line": 65,
        "fullcodeline": "if (p_wh < 1)"
    },
    {
        "line": 70,
        "fullcodeline": "if (p_wmh > p_wh)"
    },
    {
        "line": 75,
        "fullcodeline": "if (p_hh < 0)"
    },
    {
        "line": 82,
        "fullcodeline": "if (!ONE_WINDOW)"
    },
    {
        "line": 399,
        "fullcodeline": "if (errbuf != NULL)"
    },
    {
        "line": 409,
        "fullcodeline": "if (errbuf != NULL)"
    },
    {
        "line": 442,
        "fullcodeline": "if (p_window >= Rows || !option_was_set((char_u *)\"window\"))"
    },
    {
        "line": 462,
        "fullcodeline": "|| (curwin->w_p_scr > curwin->w_height"
    },
    {
        "line": 466,
        "fullcodeline": "if (pp == &(curwin->w_p_scr))"
    },
    {
        "line": 501,
        "fullcodeline": "if (Rows != old_Rows)\t// Rows changed, just adjust p_sj"
    },
    {
        "line": 67,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 68,
        "fullcodeline": "p_wh = 1;"
    },
    {
        "line": 72,
        "fullcodeline": "errmsg = e_winheight_cannot_be_smaller_than_winminheight;"
    },
    {
        "line": 73,
        "fullcodeline": "p_wh = p_wmh;"
    },
    {
        "line": 77,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 78,
        "fullcodeline": "p_hh = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "else if (pp == &p_wmh)"
    },
    {
        "line": 401,
        "fullcodeline": "vim_snprintf(errbuf, errbuflen,"
    },
    {
        "line": 403,
        "fullcodeline": "errmsg = errbuf;"
    },
    {
        "line": 411,
        "fullcodeline": "vim_snprintf(errbuf, errbuflen,"
    },
    {
        "line": 413,
        "fullcodeline": "errmsg = errbuf;"
    },
    {
        "line": 427,
        "fullcodeline": "*pp = old_value;"
    },
    {
        "line": 443,
        "fullcodeline": "p_window = Rows - 1;"
    },
    {
        "line": 451,
        "fullcodeline": "else if (curbuf->b_p_ts > TABSTOP_MAX)"
    },
    {
        "line": 463,
        "fullcodeline": "&& curwin->w_height > 0))"
    },
    {
        "line": 470,
        "fullcodeline": "win_comp_scroll(curwin);"
    },
    {
        "line": 484,
        "fullcodeline": "else if (p_hi > 10000)"
    },
    {
        "line": 502,
        "fullcodeline": "p_sj = Rows / 2;"
    },
    {
        "line": 84,
        "fullcodeline": "if (pp == &p_wh && curwin->w_height < p_wh)"
    },
    {
        "line": 86,
        "fullcodeline": "if (pp == &p_hh && curbuf->b_help && curwin->w_height < p_hh)"
    },
    {
        "line": 103,
        "fullcodeline": "win_setminheight();"
    },
    {
        "line": 402,
        "fullcodeline": "_(e_need_at_least_nr_lines), min_rows());"
    },
    {
        "line": 412,
        "fullcodeline": "_(e_need_at_least_nr_columns), MIN_COLUMNS);"
    },
    {
        "line": 453,
        "fullcodeline": "errmsg = e_invalid_argument;"
    },
    {
        "line": 454,
        "fullcodeline": "curbuf->b_p_ts = 8;"
    },
    {
        "line": 468,
        "fullcodeline": "if (curwin->w_p_scr != 0)"
    },
    {
        "line": 486,
        "fullcodeline": "errmsg = e_invalid_argument;"
    },
    {
        "line": 487,
        "fullcodeline": "p_hi = 10000;"
    },
    {
        "line": 505,
        "fullcodeline": "errmsg = e_invalid_scroll_size;"
    },
    {
        "line": 506,
        "fullcodeline": "p_sj = 1;"
    },
    {
        "line": 85,
        "fullcodeline": "win_setheight((int)p_wh);"
    },
    {
        "line": 87,
        "fullcodeline": "win_setheight((int)p_hh);"
    },
    {
        "line": 93,
        "fullcodeline": "if (p_wmh < 0)"
    },
    {
        "line": 98,
        "fullcodeline": "if (p_wmh > p_wh)"
    },
    {
        "line": 469,
        "fullcodeline": "errmsg = e_invalid_scroll_size;"
    },
    {
        "line": 474,
        "fullcodeline": "else if (curwin->w_p_scr <= 0)"
    },
    {
        "line": 95,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 96,
        "fullcodeline": "p_wmh = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "errmsg = e_winheight_cannot_be_smaller_than_winminheight;"
    },
    {
        "line": 101,
        "fullcodeline": "p_wmh = p_wh;"
    },
    {
        "line": 105,
        "fullcodeline": "else if (pp == &p_wiw)"
    },
    {
        "line": 433,
        "fullcodeline": "set_shellsize((int)Columns, (int)Rows, TRUE);"
    },
    {
        "line": 475,
        "fullcodeline": "curwin->w_p_scr = 1;"
    },
    {
        "line": 438,
        "fullcodeline": "check_shellsize();"
    },
    {
        "line": 477,
        "fullcodeline": "curwin->w_p_scr = curwin->w_height;"
    },
    {
        "line": 108,
        "fullcodeline": "if (p_wiw < 1)"
    },
    {
        "line": 113,
        "fullcodeline": "if (p_wmw > p_wiw)"
    },
    {
        "line": 120,
        "fullcodeline": "if (!ONE_WINDOW && curwin->w_width < p_wiw)"
    },
    {
        "line": 439,
        "fullcodeline": "if (cmdline_row > Rows - p_ch && Rows > p_ch)"
    },
    {
        "line": 110,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 111,
        "fullcodeline": "p_wiw = 1;"
    },
    {
        "line": 115,
        "fullcodeline": "errmsg = e_winwidth_cannot_be_smaller_than_winminwidth;"
    },
    {
        "line": 116,
        "fullcodeline": "p_wiw = p_wmw;"
    },
    {
        "line": 121,
        "fullcodeline": "win_setwidth((int)p_wiw);"
    },
    {
        "line": 123,
        "fullcodeline": "else if (pp == &p_wmw)"
    },
    {
        "line": 440,
        "fullcodeline": "cmdline_row = Rows - p_ch;"
    },
    {
        "line": 136,
        "fullcodeline": "win_setminwidth();"
    },
    {
        "line": 126,
        "fullcodeline": "if (p_wmw < 0)"
    },
    {
        "line": 131,
        "fullcodeline": "if (p_wmw > p_wiw)"
    },
    {
        "line": 128,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 129,
        "fullcodeline": "p_wmw = 0;"
    },
    {
        "line": 133,
        "fullcodeline": "errmsg = e_winwidth_cannot_be_smaller_than_winminwidth;"
    },
    {
        "line": 134,
        "fullcodeline": "p_wmw = p_wiw;"
    },
    {
        "line": 140,
        "fullcodeline": "else if (pp == &p_ls)"
    },
    {
        "line": 142,
        "fullcodeline": "last_status(FALSE);"
    },
    {
        "line": 146,
        "fullcodeline": "else if (pp == &p_stal)"
    },
    {
        "line": 148,
        "fullcodeline": "shell_new_rows();\t// recompute window positions and heights"
    },
    {
        "line": 217,
        "fullcodeline": "else if (pp == &p_mco)"
    },
    {
        "line": 223,
        "fullcodeline": "screenclear();\t    // will re-allocate the screen"
    },
    {
        "line": 219,
        "fullcodeline": "if (p_mco > MAX_MCO)"
    },
    {
        "line": 220,
        "fullcodeline": "p_mco = MAX_MCO;"
    },
    {
        "line": 226,
        "fullcodeline": "else if (pp == &curbuf->b_p_iminsert)"
    },
    {
        "line": 233,
        "fullcodeline": "p_iminsert = curbuf->b_p_iminsert;"
    },
    {
        "line": 221,
        "fullcodeline": "else if (p_mco < 0)"
    },
    {
        "line": 228,
        "fullcodeline": "if (curbuf->b_p_iminsert < 0 || curbuf->b_p_iminsert > B_IMODE_LAST)"
    },
    {
        "line": 222,
        "fullcodeline": "p_mco = 0;"
    },
    {
        "line": 230,
        "fullcodeline": "errmsg = e_invalid_argument;"
    },
    {
        "line": 231,
        "fullcodeline": "curbuf->b_p_iminsert = B_IMODE_NONE;"
    },
    {
        "line": 235,
        "fullcodeline": "showmode();"
    },
    {
        "line": 251,
        "fullcodeline": "else if (pp == &p_window)"
    },
    {
        "line": 253,
        "fullcodeline": "if (p_window < 1)"
    },
    {
        "line": 254,
        "fullcodeline": "p_window = 1;"
    },
    {
        "line": 259,
        "fullcodeline": "else if (pp == &curbuf->b_p_imsearch)"
    },
    {
        "line": 266,
        "fullcodeline": "p_imsearch = curbuf->b_p_imsearch;"
    },
    {
        "line": 255,
        "fullcodeline": "else if (p_window >= Rows)"
    },
    {
        "line": 261,
        "fullcodeline": "if (curbuf->b_p_imsearch < -1 || curbuf->b_p_imsearch > B_IMODE_LAST)"
    },
    {
        "line": 256,
        "fullcodeline": "p_window = Rows - 1;"
    },
    {
        "line": 263,
        "fullcodeline": "errmsg = e_invalid_argument;"
    },
    {
        "line": 264,
        "fullcodeline": "curbuf->b_p_imsearch = B_IMODE_NONE;"
    },
    {
        "line": 270,
        "fullcodeline": "else if (pp == &p_titlelen)"
    },
    {
        "line": 272,
        "fullcodeline": "if (p_titlelen < 0)"
    },
    {
        "line": 277,
        "fullcodeline": "if (starting != NO_SCREEN && old_value != p_titlelen)"
    },
    {
        "line": 274,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 275,
        "fullcodeline": "p_titlelen = 85;"
    },
    {
        "line": 278,
        "fullcodeline": "need_maketitle = TRUE;"
    },
    {
        "line": 282,
        "fullcodeline": "else if (pp == &p_ch)"
    },
    {
        "line": 284,
        "fullcodeline": "if (p_ch < 1)"
    },
    {
        "line": 289,
        "fullcodeline": "if (p_ch > Rows - min_rows() + 1)"
    },
    {
        "line": 294,
        "fullcodeline": "if (p_ch != old_value && full_screen"
    },
    {
        "line": 286,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 287,
        "fullcodeline": "p_ch = 1;"
    },
    {
        "line": 290,
        "fullcodeline": "p_ch = Rows - min_rows() + 1;"
    },
    {
        "line": 299,
        "fullcodeline": "command_height();"
    },
    {
        "line": 303,
        "fullcodeline": "else if (pp == &p_uc)"
    },
    {
        "line": 305,
        "fullcodeline": "if (p_uc < 0)"
    },
    {
        "line": 310,
        "fullcodeline": "if (p_uc && !old_value)"
    },
    {
        "line": 307,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 308,
        "fullcodeline": "p_uc = 100;"
    },
    {
        "line": 311,
        "fullcodeline": "ml_open_files();"
    },
    {
        "line": 343,
        "fullcodeline": "else if (pp == &p_ul)"
    },
    {
        "line": 346,
        "fullcodeline": "p_ul = old_value;"
    },
    {
        "line": 347,
        "fullcodeline": "u_sync(TRUE);"
    },
    {
        "line": 348,
        "fullcodeline": "p_ul = value;"
    },
    {
        "line": 350,
        "fullcodeline": "else if (pp == &curbuf->b_p_ul)"
    },
    {
        "line": 353,
        "fullcodeline": "curbuf->b_p_ul = old_value;"
    },
    {
        "line": 354,
        "fullcodeline": "u_sync(TRUE);"
    },
    {
        "line": 355,
        "fullcodeline": "curbuf->b_p_ul = value;"
    },
    {
        "line": 376,
        "fullcodeline": "else if (pp == &curbuf->b_p_tw)"
    },
    {
        "line": 378,
        "fullcodeline": "if (curbuf->b_p_tw < 0)"
    },
    {
        "line": 380,
        "fullcodeline": "errmsg = e_argument_must_be_positive;"
    },
    {
        "line": 381,
        "fullcodeline": "curbuf->b_p_tw = 0;"
    }
]