[
    {
        "line": 3,
        "fullcodeline": "MpegEncContext *s = &ctx->m;"
    },
    {
        "line": 6,
        "fullcodeline": "int vol = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "align_get_bits(gb);"
    },
    {
        "line": 17,
        "fullcodeline": "startcode = 0xff;"
    },
    {
        "line": 131,
        "fullcodeline": "s->avctx->has_b_frames = !s->low_delay;"
    },
    {
        "line": 11,
        "fullcodeline": "if (s->codec_tag == AV_RL32(\"WV1F\") && show_bits(gb, 24) == 0x575630) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (s->avctx->flags & AV_CODEC_FLAG_LOW_DELAY)"
    },
    {
        "line": 12,
        "fullcodeline": "skip_bits(gb, 24);"
    },
    {
        "line": 29,
        "fullcodeline": "v = get_bits(gb, 8);"
    },
    {
        "line": 30,
        "fullcodeline": "startcode = ((startcode << 8) | v) & 0xffffffff;"
    },
    {
        "line": 124,
        "fullcodeline": "align_get_bits(gb);"
    },
    {
        "line": 125,
        "fullcodeline": "startcode = 0xff;"
    },
    {
        "line": 130,
        "fullcodeline": "s->low_delay = 1;"
    },
    {
        "line": 13,
        "fullcodeline": "if (get_bits(gb, 8) == 0xF0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (get_bits_count(gb) >= gb->size_in_bits) {"
    },
    {
        "line": 32,
        "fullcodeline": "if ((startcode & 0xFFFFFF00) != 0x100)"
    },
    {
        "line": 35,
        "fullcodeline": "if (s->avctx->debug & FF_DEBUG_STARTCODE) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (startcode >= 0x120 && startcode <= 0x12F) {"
    },
    {
        "line": 138,
        "fullcodeline": "return decode_studio_vop_header(ctx, gb);"
    },
    {
        "line": 36,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"startcode: %3X \", startcode);"
    },
    {
        "line": 91,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \" at %d\\n\", get_bits_count(gb));"
    },
    {
        "line": 99,
        "fullcodeline": "vol++;"
    },
    {
        "line": 135,
        "fullcodeline": "av_log(s->avctx, AV_LOG_ERROR, \"Missing VOL header\\n\");"
    },
    {
        "line": 140,
        "fullcodeline": "return decode_vop_header(ctx, gb);"
    },
    {
        "line": 20,
        "fullcodeline": "if (gb->size_in_bits == 8 &&"
    },
    {
        "line": 37,
        "fullcodeline": "if (startcode <= 0x11F)"
    },
    {
        "line": 100,
        "fullcodeline": "if ((ret = decode_vol_header(ctx, gb)) < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "(ctx->divx_version >= 0 || ctx->xvid_build >= 0) || s->codec_tag == AV_RL32(\"QMP4\")) {"
    },
    {
        "line": 22,
        "fullcodeline": "av_log(s->avctx, AV_LOG_VERBOSE, \"frame skip %d\\n\", gb->size_in_bits);"
    },
    {
        "line": 38,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Video Object Start\");"
    },
    {
        "line": 96,
        "fullcodeline": "av_log(s->avctx, AV_LOG_WARNING, \"Ignoring multiple VOL headers\\n\");"
    },
    {
        "line": 102,
        "fullcodeline": "} else if (startcode == USER_DATA_STARTCODE) {"
    },
    {
        "line": 103,
        "fullcodeline": "decode_user_data(ctx, gb);"
    },
    {
        "line": 39,
        "fullcodeline": "else if (startcode <= 0x12F)"
    },
    {
        "line": 40,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Video Object Layer Start\");"
    },
    {
        "line": 104,
        "fullcodeline": "} else if (startcode == GOP_STARTCODE) {"
    },
    {
        "line": 105,
        "fullcodeline": "mpeg4_decode_gop_header(s, gb);"
    },
    {
        "line": 41,
        "fullcodeline": "else if (startcode <= 0x13F)"
    },
    {
        "line": 42,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Reserved\");"
    },
    {
        "line": 106,
        "fullcodeline": "} else if (startcode == VOS_STARTCODE) {"
    },
    {
        "line": 107,
        "fullcodeline": "mpeg4_decode_profile_level(s, gb);"
    },
    {
        "line": 43,
        "fullcodeline": "else if (startcode <= 0x15F)"
    },
    {
        "line": 108,
        "fullcodeline": "if (s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&"
    },
    {
        "line": 44,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"FGS bp start\");"
    },
    {
        "line": 109,
        "fullcodeline": "(s->avctx->level > 0 && s->avctx->level < 9)) {"
    },
    {
        "line": 110,
        "fullcodeline": "s->studio_profile = 1;"
    },
    {
        "line": 111,
        "fullcodeline": "next_start_code_studio(gb);"
    },
    {
        "line": 112,
        "fullcodeline": "extension_and_user_data(s, gb, 0);"
    },
    {
        "line": 114,
        "fullcodeline": "} else if (startcode == VISUAL_OBJ_STARTCODE) {"
    },
    {
        "line": 45,
        "fullcodeline": "else if (startcode <= 0x1AF)"
    },
    {
        "line": 46,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Reserved\");"
    },
    {
        "line": 120,
        "fullcodeline": "} else if (startcode == VOP_STARTCODE) {"
    },
    {
        "line": 116,
        "fullcodeline": "if ((ret = decode_studiovisualobject(ctx, gb)) < 0)"
    },
    {
        "line": 119,
        "fullcodeline": "mpeg4_decode_visual_object(s, gb);"
    },
    {
        "line": 47,
        "fullcodeline": "else if (startcode == 0x1B0)"
    },
    {
        "line": 48,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Visual Object Seq Start\");"
    },
    {
        "line": 49,
        "fullcodeline": "else if (startcode == 0x1B1)"
    },
    {
        "line": 50,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Visual Object Seq End\");"
    },
    {
        "line": 51,
        "fullcodeline": "else if (startcode == 0x1B2)"
    },
    {
        "line": 52,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"User Data\");"
    },
    {
        "line": 53,
        "fullcodeline": "else if (startcode == 0x1B3)"
    },
    {
        "line": 54,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Group of VOP start\");"
    },
    {
        "line": 55,
        "fullcodeline": "else if (startcode == 0x1B4)"
    },
    {
        "line": 56,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Video Session Error\");"
    },
    {
        "line": 57,
        "fullcodeline": "else if (startcode == 0x1B5)"
    },
    {
        "line": 58,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Visual Object Start\");"
    },
    {
        "line": 59,
        "fullcodeline": "else if (startcode == 0x1B6)"
    },
    {
        "line": 60,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Video Object Plane start\");"
    },
    {
        "line": 61,
        "fullcodeline": "else if (startcode == 0x1B7)"
    },
    {
        "line": 62,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"slice start\");"
    },
    {
        "line": 63,
        "fullcodeline": "else if (startcode == 0x1B8)"
    },
    {
        "line": 64,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"extension start\");"
    },
    {
        "line": 65,
        "fullcodeline": "else if (startcode == 0x1B9)"
    },
    {
        "line": 66,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"fgs start\");"
    },
    {
        "line": 67,
        "fullcodeline": "else if (startcode == 0x1BA)"
    },
    {
        "line": 68,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"FBA Object start\");"
    },
    {
        "line": 69,
        "fullcodeline": "else if (startcode == 0x1BB)"
    },
    {
        "line": 70,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"FBA Object Plane start\");"
    },
    {
        "line": 71,
        "fullcodeline": "else if (startcode == 0x1BC)"
    },
    {
        "line": 72,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Mesh Object start\");"
    },
    {
        "line": 73,
        "fullcodeline": "else if (startcode == 0x1BD)"
    },
    {
        "line": 74,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Mesh Object Plane start\");"
    },
    {
        "line": 75,
        "fullcodeline": "else if (startcode == 0x1BE)"
    },
    {
        "line": 76,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Still Texture Object start\");"
    },
    {
        "line": 77,
        "fullcodeline": "else if (startcode == 0x1BF)"
    },
    {
        "line": 78,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Texture Spatial Layer start\");"
    },
    {
        "line": 79,
        "fullcodeline": "else if (startcode == 0x1C0)"
    },
    {
        "line": 80,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Texture SNR Layer start\");"
    },
    {
        "line": 81,
        "fullcodeline": "else if (startcode == 0x1C1)"
    },
    {
        "line": 82,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Texture Tile start\");"
    },
    {
        "line": 83,
        "fullcodeline": "else if (startcode == 0x1C2)"
    },
    {
        "line": 84,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"Texture Shape Layer start\");"
    },
    {
        "line": 85,
        "fullcodeline": "else if (startcode == 0x1C3)"
    },
    {
        "line": 86,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"stuffing start\");"
    },
    {
        "line": 87,
        "fullcodeline": "else if (startcode <= 0x1C5)"
    },
    {
        "line": 88,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"reserved\");"
    },
    {
        "line": 89,
        "fullcodeline": "else if (startcode <= 0x1FF)"
    },
    {
        "line": 90,
        "fullcodeline": "av_log(s->avctx, AV_LOG_DEBUG, \"System start\");"
    }
]