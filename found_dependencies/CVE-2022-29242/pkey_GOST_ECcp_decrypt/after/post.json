[
    {
        "line": 5,
        "fullcodeline": "const unsigned char *p = in;"
    },
    {
        "line": 6,
        "fullcodeline": "EVP_PKEY *priv = EVP_PKEY_CTX_get0_pkey(pctx);"
    },
    {
        "line": 7,
        "fullcodeline": "GOST_KEY_TRANSPORT *gkt = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned char wrappedKey[44];"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned char sharedKey[32];"
    },
    {
        "line": 12,
        "fullcodeline": "const struct gost_cipher_info *param = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "EVP_PKEY *eph_key = NULL, *peerkey = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "int dgst_nid = NID_undef;"
    },
    {
        "line": 16,
        "fullcodeline": "gkt = d2i_GOST_KEY_TRANSPORT(NULL, (const unsigned char **)&p, in_len);"
    },
    {
        "line": 24,
        "fullcodeline": "eph_key = X509_PUBKEY_get(gkt->key_agreement_info->ephem_key);"
    },
    {
        "line": 39,
        "fullcodeline": "peerkey = EVP_PKEY_CTX_get0_peerkey(pctx);"
    },
    {
        "line": 45,
        "fullcodeline": "param = get_encryption_params(gkt->key_agreement_info->cipher);"
    },
    {
        "line": 50,
        "fullcodeline": "gost_init(&ctx, param->sblock);"
    },
    {
        "line": 51,
        "fullcodeline": "OPENSSL_assert(gkt->key_agreement_info->eph_iv->length == 8);"
    },
    {
        "line": 52,
        "fullcodeline": "memcpy(wrappedKey, gkt->key_agreement_info->eph_iv->data, 8);"
    },
    {
        "line": 53,
        "fullcodeline": "OPENSSL_assert(gkt->key_info->encrypted_key->length == 32);"
    },
    {
        "line": 54,
        "fullcodeline": "memcpy(wrappedKey + 8, gkt->key_info->encrypted_key->data, 32);"
    },
    {
        "line": 55,
        "fullcodeline": "OPENSSL_assert(gkt->key_info->imit->length == 4);"
    },
    {
        "line": 56,
        "fullcodeline": "memcpy(wrappedKey + 40, gkt->key_info->imit->data, 4);"
    },
    {
        "line": 58,
        "fullcodeline": "EVP_PKEY_get_default_digest_nid(priv, &dgst_nid);"
    },
    {
        "line": 75,
        "fullcodeline": "*key_len = 32;"
    },
    {
        "line": 76,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "OPENSSL_cleanse(sharedKey, sizeof(sharedKey));"
    },
    {
        "line": 79,
        "fullcodeline": "EVP_PKEY_free(eph_key);"
    },
    {
        "line": 80,
        "fullcodeline": "GOST_KEY_TRANSPORT_free(gkt);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!gkt) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (!peerkey) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!param) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (dgst_nid == NID_id_GostR3411_2012_512)"
    },
    {
        "line": 62,
        "fullcodeline": "if (!VKO_compute_key(sharedKey,"
    },
    {
        "line": 69,
        "fullcodeline": "if (!keyUnwrapCryptoPro(&ctx, sharedKey, wrappedKey, key)) {"
    },
    {
        "line": 18,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT,"
    },
    {
        "line": 41,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT, GOST_R_NO_PEER_KEY);"
    },
    {
        "line": 60,
        "fullcodeline": "dgst_nid = NID_id_GostR3411_2012_256;"
    },
    {
        "line": 65,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT,"
    },
    {
        "line": 70,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT,"
    },
    {
        "line": 20,
        "fullcodeline": "return -1;"
    },
    {
        "line": 26,
        "fullcodeline": "if (EVP_PKEY_derive_set_peer(pctx, eph_key) <= 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "EC_KEY_get0_public_key(EVP_PKEY_get0(peerkey)),"
    },
    {
        "line": 64,
        "fullcodeline": "EVP_PKEY_get0(priv), wrappedKey, 8, dgst_nid)) {"
    },
    {
        "line": 27,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT,"
    },
    {
        "line": 33,
        "fullcodeline": "if (EVP_PKEY_CTX_ctrl(pctx, -1, -1, EVP_PKEY_CTRL_PEER_KEY, 3, NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "GOSTerr(GOST_F_PKEY_GOST_ECCP_DECRYPT, GOST_R_CTRL_CALL_FAILED);"
    }
]