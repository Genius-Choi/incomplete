[
    {
        "line": 3,
        "fullcodeline": "DefragContext *dc = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "Packet *p1 = NULL, *p2 = NULL, *p3 = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "Packet *reassembled = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int id = 12;"
    },
    {
        "line": 9,
        "fullcodeline": "DefragInit();"
    },
    {
        "line": 11,
        "fullcodeline": "dc = DefragContextNew();"
    },
    {
        "line": 12,
        "fullcodeline": "FAIL_IF_NULL(dc);"
    },
    {
        "line": 14,
        "fullcodeline": "p1 = BuildIpv6TestPacket(IPPROTO_ICMPV6, id, 0, 1, 'A', 8);"
    },
    {
        "line": 15,
        "fullcodeline": "FAIL_IF_NULL(p1);"
    },
    {
        "line": 16,
        "fullcodeline": "p2 = BuildIpv6TestPacket(IPPROTO_ICMPV6, id, 1, 1, 'B', 8);"
    },
    {
        "line": 17,
        "fullcodeline": "FAIL_IF_NULL(p2);"
    },
    {
        "line": 18,
        "fullcodeline": "p3 = BuildIpv6TestPacket(IPPROTO_ICMPV6, id, 2, 0, 'C', 3);"
    },
    {
        "line": 19,
        "fullcodeline": "FAIL_IF_NULL(p3);"
    },
    {
        "line": 21,
        "fullcodeline": "FAIL_IF(Defrag(NULL, NULL, p3) != NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "FAIL_IF(Defrag(NULL, NULL, p2) != NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "reassembled = Defrag(NULL, NULL, p1);"
    },
    {
        "line": 24,
        "fullcodeline": "FAIL_IF_NULL(reassembled);"
    },
    {
        "line": 41,
        "fullcodeline": "DefragContextDestroy(dc);"
    },
    {
        "line": 42,
        "fullcodeline": "SCFree(p1);"
    },
    {
        "line": 43,
        "fullcodeline": "SCFree(p2);"
    },
    {
        "line": 44,
        "fullcodeline": "SCFree(p3);"
    },
    {
        "line": 45,
        "fullcodeline": "SCFree(reassembled);"
    },
    {
        "line": 47,
        "fullcodeline": "DefragDestroy();"
    },
    {
        "line": 27,
        "fullcodeline": "for (i = 40; i < 40 + 8; i++) {"
    },
    {
        "line": 32,
        "fullcodeline": "for (i = 48; i < 48 + 8; i++) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (i = 56; i < 56 + 3; i++) {"
    },
    {
        "line": 28,
        "fullcodeline": "FAIL_IF(GET_PKT_DATA(reassembled)[i] != 'A');"
    },
    {
        "line": 33,
        "fullcodeline": "FAIL_IF(GET_PKT_DATA(reassembled)[i] != 'B');"
    },
    {
        "line": 38,
        "fullcodeline": "FAIL_IF(GET_PKT_DATA(reassembled)[i] != 'C');"
    }
]