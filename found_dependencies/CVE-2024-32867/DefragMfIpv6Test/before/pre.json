[
    {
        "line": 3,
        "fullcodeline": "int ip_id = 9;"
    },
    {
        "line": 4,
        "fullcodeline": "Packet *p = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "DefragInit();"
    },
    {
        "line": 8,
        "fullcodeline": "Packet *p1 = BuildIpv6TestPacket(IPPROTO_ICMPV6, ip_id, 2, 1, 'C', 8);"
    },
    {
        "line": 9,
        "fullcodeline": "Packet *p2 = BuildIpv6TestPacket(IPPROTO_ICMPV6, ip_id, 0, 1, 'A', 8);"
    },
    {
        "line": 10,
        "fullcodeline": "Packet *p3 = BuildIpv6TestPacket(IPPROTO_ICMPV6, ip_id, 1, 0, 'B', 8);"
    },
    {
        "line": 11,
        "fullcodeline": "FAIL_IF(p1 == NULL || p2 == NULL || p3 == NULL);"
    },
    {
        "line": 13,
        "fullcodeline": "p = Defrag(NULL, NULL, p1);"
    },
    {
        "line": 16,
        "fullcodeline": "p = Defrag(NULL, NULL, p2);"
    },
    {
        "line": 17,
        "fullcodeline": "FAIL_IF_NOT_NULL(p);"
    },
    {
        "line": 20,
        "fullcodeline": "p = Defrag(NULL, NULL, p3);"
    },
    {
        "line": 21,
        "fullcodeline": "FAIL_IF_NULL(p);"
    },
    {
        "line": 25,
        "fullcodeline": "FAIL_IF(IPV6_GET_PLEN(p) != 16);"
    },
    {
        "line": 27,
        "fullcodeline": "SCFree(p1);"
    },
    {
        "line": 28,
        "fullcodeline": "SCFree(p2);"
    },
    {
        "line": 29,
        "fullcodeline": "SCFree(p3);"
    },
    {
        "line": 30,
        "fullcodeline": "SCFree(p);"
    },
    {
        "line": 31,
        "fullcodeline": "DefragDestroy();"
    }
]