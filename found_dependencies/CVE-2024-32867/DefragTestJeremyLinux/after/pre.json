[
    {
        "line": 3,
        "fullcodeline": "uint8_t expected[] = \"AAAAAAAA\""
    },
    {
        "line": 17,
        "fullcodeline": "DefragInit();"
    },
    {
        "line": 18,
        "fullcodeline": "default_policy = DEFRAG_POLICY_LINUX;"
    },
    {
        "line": 20,
        "fullcodeline": "int id = 1;"
    },
    {
        "line": 21,
        "fullcodeline": "Packet *packets[4];"
    },
    {
        "line": 24,
        "fullcodeline": "packets[0] = BuildIpv4TestPacket(IPPROTO_ICMP, id, 0, 1, 'A', 24);"
    },
    {
        "line": 25,
        "fullcodeline": "packets[1] = BuildIpv4TestPacket(IPPROTO_ICMP, id, 40 >> 3, 1, 'B', 48);"
    },
    {
        "line": 26,
        "fullcodeline": "packets[2] = BuildIpv4TestPacket(IPPROTO_ICMP, id, 24 >> 3, 1, 'C', 48);"
    },
    {
        "line": 27,
        "fullcodeline": "packets[3] = BuildIpv4TestPacket(IPPROTO_ICMP, id, 88 >> 3, 0, 'D', 14);"
    },
    {
        "line": 29,
        "fullcodeline": "Packet *r = Defrag(NULL, NULL, packets[0]);"
    },
    {
        "line": 32,
        "fullcodeline": "r = Defrag(NULL, NULL, packets[1]);"
    },
    {
        "line": 35,
        "fullcodeline": "r = Defrag(NULL, NULL, packets[2]);"
    },
    {
        "line": 36,
        "fullcodeline": "FAIL_IF_NOT_NULL(r);"
    },
    {
        "line": 38,
        "fullcodeline": "r = Defrag(NULL, NULL, packets[3]);"
    },
    {
        "line": 39,
        "fullcodeline": "FAIL_IF_NULL(r);"
    },
    {
        "line": 41,
        "fullcodeline": "FAIL_IF(memcmp(expected, GET_PKT_DATA(r) + 20, sizeof(expected)) != 0);"
    },
    {
        "line": 46,
        "fullcodeline": "SCFree(r);"
    },
    {
        "line": 48,
        "fullcodeline": "DefragDestroy();"
    },
    {
        "line": 43,
        "fullcodeline": "for (i = 0; i < 4; i++) {"
    },
    {
        "line": 44,
        "fullcodeline": "SCFree(packets[i]);"
    }
]