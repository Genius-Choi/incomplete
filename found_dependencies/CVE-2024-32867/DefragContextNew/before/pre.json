[
    {
        "line": 5,
        "fullcodeline": "dc = SCCalloc(1, sizeof(*dc));"
    },
    {
        "line": 20,
        "fullcodeline": "intmax_t frag_pool_prealloc = frag_pool_size / 2;"
    },
    {
        "line": 21,
        "fullcodeline": "dc->frag_pool = PoolInit(frag_pool_size, frag_pool_prealloc,"
    },
    {
        "line": 6,
        "fullcodeline": "if (unlikely(dc == NULL))"
    },
    {
        "line": 24,
        "fullcodeline": "if (dc->frag_pool == NULL) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (!ConfGetInt(\"defrag.trackers\", &tracker_pool_size) || tracker_pool_size == 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "tracker_pool_size = DEFAULT_DEFRAG_HASH_SIZE;"
    },
    {
        "line": 17,
        "fullcodeline": "if (!ConfGetInt(\"defrag.max-frags\", &frag_pool_size) || frag_pool_size == 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "frag_pool_size = DEFAULT_DEFRAG_POOL_SIZE;"
    },
    {
        "line": 22,
        "fullcodeline": "sizeof(Frag),"
    },
    {
        "line": 25,
        "fullcodeline": "FatalError(SC_ERR_FATAL,"
    },
    {
        "line": 28,
        "fullcodeline": "if (SCMutexInit(&dc->frag_pool_lock, NULL) != 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "FatalError(SC_ERR_FATAL,"
    },
    {
        "line": 35,
        "fullcodeline": "if (!ConfGetInt(\"defrag.timeout\", &timeout)) {"
    },
    {
        "line": 36,
        "fullcodeline": "dc->timeout = TIMEOUT_DEFAULT;"
    },
    {
        "line": 47,
        "fullcodeline": "dc->timeout = timeout;"
    },
    {
        "line": 39,
        "fullcodeline": "if (timeout < TIMEOUT_MIN) {"
    },
    {
        "line": 43,
        "fullcodeline": "else if (timeout > TIMEOUT_MAX) {"
    }
]