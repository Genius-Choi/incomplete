[
    {
        "line": 4,
        "fullcodeline": "Packet *p = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int hlen = 20;"
    },
    {
        "line": 6,
        "fullcodeline": "int ttl = 64;"
    },
    {
        "line": 10,
        "fullcodeline": "p = SCCalloc(1, sizeof(*p) + default_packet_size);"
    },
    {
        "line": 14,
        "fullcodeline": "PacketInit(p);"
    },
    {
        "line": 17,
        "fullcodeline": "gettimeofday(&tval, NULL);"
    },
    {
        "line": 18,
        "fullcodeline": "p->ts = SCTIME_FROM_TIMEVAL(&tval);"
    },
    {
        "line": 20,
        "fullcodeline": "ip4h.ip_verhl = 4 << 4;"
    },
    {
        "line": 21,
        "fullcodeline": "ip4h.ip_verhl |= hlen >> 2;"
    },
    {
        "line": 22,
        "fullcodeline": "ip4h.ip_len = htons(hlen + content_len);"
    },
    {
        "line": 23,
        "fullcodeline": "ip4h.ip_id = htons(id);"
    },
    {
        "line": 28,
        "fullcodeline": "ip4h.ip_ttl = ttl;"
    },
    {
        "line": 29,
        "fullcodeline": "ip4h.ip_proto = proto;"
    },
    {
        "line": 35,
        "fullcodeline": "PacketCopyData(p, (uint8_t *)&ip4h, sizeof(ip4h));"
    },
    {
        "line": 36,
        "fullcodeline": "p->ip4h = (IPV4Hdr *)GET_PKT_DATA(p);"
    },
    {
        "line": 37,
        "fullcodeline": "SET_IPV4_SRC_ADDR(p, &p->src);"
    },
    {
        "line": 38,
        "fullcodeline": "SET_IPV4_DST_ADDR(p, &p->dst);"
    },
    {
        "line": 40,
        "fullcodeline": "pcontent = SCCalloc(1, content_len);"
    },
    {
        "line": 43,
        "fullcodeline": "memset(pcontent, content, content_len);"
    },
    {
        "line": 44,
        "fullcodeline": "PacketCopyDataOffset(p, hlen, pcontent, content_len);"
    },
    {
        "line": 45,
        "fullcodeline": "SET_PKT_LEN(p, hlen + content_len);"
    },
    {
        "line": 11,
        "fullcodeline": "if (unlikely(p == NULL))"
    },
    {
        "line": 48,
        "fullcodeline": "p->ip4h->ip_csum = IPV4Checksum((uint16_t *)GET_PKT_DATA(p), hlen, 0);"
    },
    {
        "line": 53,
        "fullcodeline": "if (IPV4_GET_HLEN(p) != hlen)"
    },
    {
        "line": 70,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "ip4h.ip_off = htons(IP_MF | off);"
    },
    {
        "line": 41,
        "fullcodeline": "if (unlikely(pcontent == NULL))"
    },
    {
        "line": 51,
        "fullcodeline": "if (IPV4_GET_VER(p) != 4)"
    },
    {
        "line": 55,
        "fullcodeline": "if (IPV4_GET_IPLEN(p) != hlen + content_len)"
    },
    {
        "line": 57,
        "fullcodeline": "if (IPV4_GET_IPID(p) != id)"
    },
    {
        "line": 59,
        "fullcodeline": "if (IPV4_GET_IPOFFSET(p) != off)"
    },
    {
        "line": 61,
        "fullcodeline": "if (IPV4_GET_MF(p) != mf)"
    },
    {
        "line": 63,
        "fullcodeline": "if (IPV4_GET_IPTTL(p) != ttl)"
    },
    {
        "line": 65,
        "fullcodeline": "if (IPV4_GET_IPPROTO(p) != proto)"
    },
    {
        "line": 27,
        "fullcodeline": "ip4h.ip_off = htons(off);"
    }
]