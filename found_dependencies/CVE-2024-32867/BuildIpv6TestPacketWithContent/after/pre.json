[
    {
        "line": 4,
        "fullcodeline": "Packet *p = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "p = SCCalloc(1, sizeof(*p) + default_packet_size);"
    },
    {
        "line": 11,
        "fullcodeline": "PACKET_INITIALIZE(p);"
    },
    {
        "line": 13,
        "fullcodeline": "gettimeofday(&p->ts, NULL);"
    },
    {
        "line": 15,
        "fullcodeline": "ip6h.s_ip6_nxt = 44;"
    },
    {
        "line": 16,
        "fullcodeline": "ip6h.s_ip6_hlim = 2;"
    },
    {
        "line": 29,
        "fullcodeline": "PacketCopyData(p, (uint8_t *)&ip6h, sizeof(IPV6Hdr));"
    },
    {
        "line": 31,
        "fullcodeline": "p->ip6h = (IPV6Hdr *)GET_PKT_DATA(p);"
    },
    {
        "line": 32,
        "fullcodeline": "IPV6_SET_RAW_VER(p->ip6h, 6);"
    },
    {
        "line": 34,
        "fullcodeline": "IPV6FragHdr *fh = (IPV6FragHdr *)(GET_PKT_DATA(p) + sizeof(IPV6Hdr));"
    },
    {
        "line": 35,
        "fullcodeline": "fh->ip6fh_nxt = proto;"
    },
    {
        "line": 36,
        "fullcodeline": "fh->ip6fh_ident = htonl(id);"
    },
    {
        "line": 37,
        "fullcodeline": "fh->ip6fh_offlg = htons((off << 3) | mf);"
    },
    {
        "line": 39,
        "fullcodeline": "DecodeIPV6FragHeader(p, (uint8_t *)fh, 8, 8 + content_len, 0);"
    },
    {
        "line": 41,
        "fullcodeline": "PacketCopyDataOffset(p, sizeof(IPV6Hdr) + sizeof(IPV6FragHdr), content, content_len);"
    },
    {
        "line": 42,
        "fullcodeline": "SET_PKT_LEN(p, sizeof(IPV6Hdr) + sizeof(IPV6FragHdr) + content_len);"
    },
    {
        "line": 46,
        "fullcodeline": "SET_IPV6_SRC_ADDR(p, &p->src);"
    },
    {
        "line": 47,
        "fullcodeline": "SET_IPV6_DST_ADDR(p, &p->dst);"
    },
    {
        "line": 8,
        "fullcodeline": "if (unlikely(p == NULL))"
    },
    {
        "line": 44,
        "fullcodeline": "p->ip6h->s_ip6_plen = htons(sizeof(IPV6FragHdr) + content_len);"
    },
    {
        "line": 59,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (IPV6_GET_VER(p) != 6)"
    },
    {
        "line": 52,
        "fullcodeline": "if (IPV6_GET_NH(p) != 44)"
    },
    {
        "line": 54,
        "fullcodeline": "if (IPV6_GET_PLEN(p) != sizeof(IPV6FragHdr) + content_len)"
    }
]