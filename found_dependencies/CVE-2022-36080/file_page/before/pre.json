[
    {
        "line": 2,
        "fullcodeline": "if request.method == 'POST':"
    },
    {
        "line": 5,
        "fullcodeline": "html = \"\""
    },
    {
        "line": 6,
        "fullcodeline": "mod = \"\""
    },
    {
        "line": 7,
        "fullcodeline": "folder = \"\""
    },
    {
        "line": 3,
        "fullcodeline": "return search()"
    },
    {
        "line": 9,
        "fullcodeline": "if \"favicon\" not in file_page:  # if the GET request is not for the favicon"
    },
    {
        "line": 28,
        "fullcodeline": "return render_template('content.html', title=file_page, folder=folder, info=html, modif=mod,"
    },
    {
        "line": 11,
        "fullcodeline": "md_file_path = os.path.join(cfg.wiki_directory, file_page + \".md\")"
    },
    {
        "line": 16,
        "fullcodeline": "html = pypandoc.convert_file(md_file_path, \"html5\","
    },
    {
        "line": 19,
        "fullcodeline": "mod = \"Last modified: %s\" % time.ctime(os.path.getmtime(md_file_path))"
    },
    {
        "line": 20,
        "fullcodeline": "folder = file_page.split(\"/\")"
    },
    {
        "line": 21,
        "fullcodeline": "file_page = folder[-1:][0]"
    },
    {
        "line": 22,
        "fullcodeline": "folder = folder[:-1]"
    },
    {
        "line": 23,
        "fullcodeline": "folder = \"/\".join(folder)"
    },
    {
        "line": 15,
        "fullcodeline": "app.logger.info(f\"Converting to HTML with pandoc >>> '{md_file_path}' ...\")"
    },
    {
        "line": 24,
        "fullcodeline": "app.logger.info(f\"Showing HTML page >>> '{file_page}'\")"
    },
    {
        "line": 17,
        "fullcodeline": "format='md', extra_args=[\"--mathjax\"], filters=['pandoc-xnos'])"
    },
    {
        "line": 26,
        "fullcodeline": "app.logger.info(a)"
    }
]