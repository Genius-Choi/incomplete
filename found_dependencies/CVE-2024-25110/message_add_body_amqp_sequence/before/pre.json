[
    {
        "line": 5,
        "fullcodeline": "if ((message == NULL) ||"
    },
    {
        "line": 6,
        "fullcodeline": "(sequence_list == NULL))"
    },
    {
        "line": 9,
        "fullcodeline": "LogError(\"Bad arguments: message = %p, sequence_list = %p\","
    },
    {
        "line": 11,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 15,
        "fullcodeline": "MESSAGE_BODY_TYPE body_type = internal_get_body_type(message);"
    },
    {
        "line": 16,
        "fullcodeline": "if ((body_type == MESSAGE_BODY_TYPE_DATA) ||"
    },
    {
        "line": 17,
        "fullcodeline": "(body_type == MESSAGE_BODY_TYPE_VALUE))"
    },
    {
        "line": 20,
        "fullcodeline": "LogError(\"Body is already set to another body type\");"
    },
    {
        "line": 21,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 25,
        "fullcodeline": "AMQP_VALUE* new_body_amqp_sequence_items = (AMQP_VALUE*)realloc(message->body_amqp_sequence_items, sizeof(AMQP_VALUE) * (message->body_amqp_sequence_count + 1));"
    },
    {
        "line": 26,
        "fullcodeline": "if (new_body_amqp_sequence_items == NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "LogError(\"Cannot allocate enough memory for sequence items\");"
    },
    {
        "line": 30,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 34,
        "fullcodeline": "message->body_amqp_sequence_items = new_body_amqp_sequence_items;"
    },
    {
        "line": 38,
        "fullcodeline": "message->body_amqp_sequence_items[message->body_amqp_sequence_count] = amqpvalue_clone(sequence_list);"
    },
    {
        "line": 39,
        "fullcodeline": "if (message->body_amqp_sequence_items[message->body_amqp_sequence_count] == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "LogError(\"Cloning sequence failed\");"
    },
    {
        "line": 43,
        "fullcodeline": "result = MU_FAILURE;"
    },
    {
        "line": 48,
        "fullcodeline": "message->body_amqp_sequence_count++;"
    },
    {
        "line": 51,
        "fullcodeline": "result = 0;"
    }
]