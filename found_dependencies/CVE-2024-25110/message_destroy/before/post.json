[
    {
        "line": 3,
        "fullcodeline": "if (message == NULL)"
    },
    {
        "line": 6,
        "fullcodeline": "LogError(\"NULL message\");"
    },
    {
        "line": 54,
        "fullcodeline": "free_all_body_data_items(message);"
    },
    {
        "line": 57,
        "fullcodeline": "free_all_body_sequence_items(message);"
    },
    {
        "line": 58,
        "fullcodeline": "free(message);"
    },
    {
        "line": 11,
        "fullcodeline": "if (message->header != NULL)"
    },
    {
        "line": 17,
        "fullcodeline": "if (message->delivery_annotations != NULL)"
    },
    {
        "line": 23,
        "fullcodeline": "if (message->message_annotations != NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "if (message->properties != NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "if (message->application_properties != NULL)"
    },
    {
        "line": 41,
        "fullcodeline": "if (message->footer != NULL)"
    },
    {
        "line": 47,
        "fullcodeline": "if (message->body_amqp_value != NULL)"
    },
    {
        "line": 14,
        "fullcodeline": "header_destroy(message->header);"
    },
    {
        "line": 20,
        "fullcodeline": "annotations_destroy(message->delivery_annotations);"
    },
    {
        "line": 26,
        "fullcodeline": "annotations_destroy(message->message_annotations);"
    },
    {
        "line": 32,
        "fullcodeline": "properties_destroy(message->properties);"
    },
    {
        "line": 38,
        "fullcodeline": "application_properties_destroy(message->application_properties);"
    },
    {
        "line": 44,
        "fullcodeline": "annotations_destroy(message->footer);"
    },
    {
        "line": 50,
        "fullcodeline": "amqpvalue_destroy(message->body_amqp_value);"
    }
]