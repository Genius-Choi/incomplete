[
    {
        "line": 2,
        "fullcodeline": "xml = <<~END"
    },
    {
        "line": 7,
        "fullcodeline": "parser = Parsers::SAX2Parser.new(xml)"
    },
    {
        "line": 8,
        "fullcodeline": "dtl = SimpleDoctypeListener.new"
    },
    {
        "line": 9,
        "fullcodeline": "parser.listen(dtl)"
    },
    {
        "line": 10,
        "fullcodeline": "tname = nil"
    },
    {
        "line": 11,
        "fullcodeline": "tpub_sys = nil"
    },
    {
        "line": 12,
        "fullcodeline": "tlong_name = nil"
    },
    {
        "line": 13,
        "fullcodeline": "turi = nil"
    },
    {
        "line": 14,
        "fullcodeline": "parser.listen(:doctype) do |name, pub_sys, long_name, uri|"
    },
    {
        "line": 21,
        "fullcodeline": "assert_equal 'greeting', tname, 'simple doctype block listener failed - incorrect name'"
    },
    {
        "line": 22,
        "fullcodeline": "assert_equal 'PUBLIC', tpub_sys, 'simple doctype block listener failed - incorrect pub_sys'"
    },
    {
        "line": 23,
        "fullcodeline": "assert_equal 'Hello Greeting DTD', tlong_name, 'simple doctype block listener failed - incorrect long_name'"
    },
    {
        "line": 24,
        "fullcodeline": "assert_equal 'http://foo/hello.dtd', turi, 'simple doctype block listener failed - incorrect uri'"
    },
    {
        "line": 25,
        "fullcodeline": "assert_equal 'greeting', dtl.name, 'simple doctype listener failed - incorrect name'"
    },
    {
        "line": 26,
        "fullcodeline": "assert_equal 'PUBLIC', dtl.pub_sys, 'simple doctype listener failed - incorrect pub_sys'"
    },
    {
        "line": 27,
        "fullcodeline": "assert_equal 'Hello Greeting DTD', dtl.long_name, 'simple doctype listener failed - incorrect long_name'"
    },
    {
        "line": 28,
        "fullcodeline": "assert_equal 'http://foo/hello.dtd', dtl.uri, 'simple doctype listener failed - incorrect uri'"
    }
]