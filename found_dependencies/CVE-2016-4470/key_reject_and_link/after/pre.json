[
    {
        "line": 9,
        "fullcodeline": "int ret, awaken, link_ret = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "key_check(key);"
    },
    {
        "line": 12,
        "fullcodeline": "key_check(keyring);"
    },
    {
        "line": 14,
        "fullcodeline": "awaken = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "ret = -EBUSY;"
    },
    {
        "line": 24,
        "fullcodeline": "mutex_lock(&key_construction_mutex);"
    },
    {
        "line": 54,
        "fullcodeline": "if (keyring && link_ret == 0)"
    },
    {
        "line": 61,
        "fullcodeline": "return ret == 0 ? link_ret : ret;"
    },
    {
        "line": 21,
        "fullcodeline": "link_ret = __key_link_begin(keyring, &key->index_key, &edit);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!test_bit(KEY_FLAG_INSTANTIATED, &key->flags)) {"
    },
    {
        "line": 30,
        "fullcodeline": "key->reject_error = -error;"
    },
    {
        "line": 32,
        "fullcodeline": "set_bit(KEY_FLAG_NEGATIVE, &key->flags);"
    },
    {
        "line": 33,
        "fullcodeline": "set_bit(KEY_FLAG_INSTANTIATED, &key->flags);"
    },
    {
        "line": 34,
        "fullcodeline": "now = current_kernel_time();"
    },
    {
        "line": 35,
        "fullcodeline": "key->expiry = now.tv_sec + timeout;"
    },
    {
        "line": 41,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "key_schedule_gc(key->expiry + key_gc_delay);"
    },
    {
        "line": 38,
        "fullcodeline": "if (test_and_clear_bit(KEY_FLAG_USER_CONSTRUCT, &key->flags))"
    },
    {
        "line": 44,
        "fullcodeline": "if (keyring && link_ret == 0)"
    },
    {
        "line": 45,
        "fullcodeline": "__key_link(key, &edit);"
    },
    {
        "line": 19,
        "fullcodeline": "return -EPERM;"
    }
]