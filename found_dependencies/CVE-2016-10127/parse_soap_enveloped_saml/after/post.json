[
    {
        "line": 7,
        "fullcodeline": "envelope = defusedxml.ElementTree.fromstring(text)"
    },
    {
        "line": 8,
        "fullcodeline": "assert envelope.tag == '{%s}Envelope' % NAMESPACE"
    },
    {
        "line": 11,
        "fullcodeline": "body = None"
    },
    {
        "line": 12,
        "fullcodeline": "header = {}"
    },
    {
        "line": 13,
        "fullcodeline": "for part in envelope:"
    },
    {
        "line": 35,
        "fullcodeline": "return body, header"
    },
    {
        "line": 15,
        "fullcodeline": "if part.tag == '{%s}Body' % NAMESPACE:"
    },
    {
        "line": 16,
        "fullcodeline": "for sub in part:"
    },
    {
        "line": 22,
        "fullcodeline": "elif part.tag == '{%s}Header' % NAMESPACE:"
    },
    {
        "line": 23,
        "fullcodeline": "if not header_class:"
    },
    {
        "line": 26,
        "fullcodeline": "for sub in part:"
    },
    {
        "line": 24,
        "fullcodeline": "raise Exception(\"Header where I didn't expect one\")"
    },
    {
        "line": 18,
        "fullcodeline": "body = saml2.create_class_from_element_tree(body_class, sub)"
    },
    {
        "line": 28,
        "fullcodeline": "for klass in header_class:"
    },
    {
        "line": 20,
        "fullcodeline": "raise Exception("
    },
    {
        "line": 21,
        "fullcodeline": "\"Wrong body type (%s) in SOAP envelope\" % sub.tag)"
    },
    {
        "line": 30,
        "fullcodeline": "if sub.tag == \"{%s}%s\" % (klass.c_namespace, klass.c_tag):"
    },
    {
        "line": 31,
        "fullcodeline": "header[sub.tag] = \\"
    },
    {
        "line": 32,
        "fullcodeline": "saml2.create_class_from_element_tree(klass, sub)"
    }
]