[
    {
        "line": 25,
        "fullcodeline": "nlines = (long)scrollbar_value + 1 - (long)wp->w_topline;"
    },
    {
        "line": 29,
        "fullcodeline": "save_wp = curwin;"
    },
    {
        "line": 30,
        "fullcodeline": "old_topline = wp->w_topline;"
    },
    {
        "line": 34,
        "fullcodeline": "old_cursor = wp->w_cursor;"
    },
    {
        "line": 35,
        "fullcodeline": "curwin = wp;"
    },
    {
        "line": 36,
        "fullcodeline": "curbuf = wp->w_buffer;"
    },
    {
        "line": 64,
        "fullcodeline": "validate_cursor();"
    },
    {
        "line": 66,
        "fullcodeline": "curwin = save_wp;"
    },
    {
        "line": 67,
        "fullcodeline": "curbuf = save_wp->w_buffer;"
    },
    {
        "line": 12,
        "fullcodeline": "for (wp = firstwin, i = 0; i < current_scrollbar; wp = W_NEXT(wp), i++)"
    },
    {
        "line": 15,
        "fullcodeline": "if (wp == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (nlines == 0)"
    },
    {
        "line": 37,
        "fullcodeline": "if (nlines < 0)"
    },
    {
        "line": 44,
        "fullcodeline": "if (gui.dragged_sb == SBAR_NONE)"
    },
    {
        "line": 47,
        "fullcodeline": "if (old_topline != wp->w_topline"
    },
    {
        "line": 73,
        "fullcodeline": "if (old_topline != wp->w_topline"
    },
    {
        "line": 98,
        "fullcodeline": "if (pum_visible())"
    },
    {
        "line": 101,
        "fullcodeline": "return (wp == curwin && !EQUAL_POS(curwin->w_cursor, old_cursor));"
    },
    {
        "line": 13,
        "fullcodeline": "if (wp == NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "scrolldown(-nlines, gui.dragged_wp == NULL);"
    },
    {
        "line": 45,
        "fullcodeline": "gui.dragged_wp = NULL;"
    },
    {
        "line": 60,
        "fullcodeline": "wp->w_scbind_pos = wp->w_topline;"
    },
    {
        "line": 74,
        "fullcodeline": "|| wp->w_redr_type != 0"
    },
    {
        "line": 80,
        "fullcodeline": "int type = UPD_VALID;"
    },
    {
        "line": 92,
        "fullcodeline": "mch_disable_flush();"
    },
    {
        "line": 93,
        "fullcodeline": "updateWindow(wp);   // update window, status line, and cmdline"
    },
    {
        "line": 94,
        "fullcodeline": "mch_enable_flush();"
    },
    {
        "line": 99,
        "fullcodeline": "pum_redraw();"
    },
    {
        "line": 40,
        "fullcodeline": "scrollup(nlines, gui.dragged_wp == NULL);"
    },
    {
        "line": 53,
        "fullcodeline": "if (get_scrolloff_value() != 0)"
    },
    {
        "line": 58,
        "fullcodeline": "if (old_cursor.lnum != wp->w_cursor.lnum)"
    },
    {
        "line": 82,
        "fullcodeline": "if (pum_visible())"
    },
    {
        "line": 90,
        "fullcodeline": "if (wp->w_redr_type < type)"
    },
    {
        "line": 55,
        "fullcodeline": "cursor_correct();\t\t// fix window for 'so'"
    },
    {
        "line": 56,
        "fullcodeline": "update_topline();\t\t// avoid up/down jump"
    },
    {
        "line": 59,
        "fullcodeline": "coladvance(wp->w_curswant);"
    },
    {
        "line": 84,
        "fullcodeline": "type = UPD_NOT_VALID;"
    },
    {
        "line": 85,
        "fullcodeline": "wp->w_lines_valid = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "wp->w_redr_type = type;"
    }
]