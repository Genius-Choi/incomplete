[
    {
        "line": 7,
        "fullcodeline": "bool do_load   = false; // Can't load the image in app mode"
    },
    {
        "line": 8,
        "fullcodeline": "bool do_verify = true;  // In app mode is available only verify mode"
    },
    {
        "line": 10,
        "fullcodeline": "bool silent    = (mode == ESP_IMAGE_VERIFY_SILENT);"
    },
    {
        "line": 11,
        "fullcodeline": "esp_err_t err = ESP_OK;"
    },
    {
        "line": 13,
        "fullcodeline": "uint32_t checksum_word = ESP_ROM_CHECKSUM_INITIAL;"
    },
    {
        "line": 14,
        "fullcodeline": "uint32_t *checksum = (do_verify) ? &checksum_word : NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "bootloader_sha256_handle_t sha_handle = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "verify_sha = (part->offset != ESP_BOOTLOADER_OFFSET) && do_verify;"
    },
    {
        "line": 42,
        "fullcodeline": "bootloader_sha256_handle_t *p_sha_handle = &sha_handle;"
    },
    {
        "line": 43,
        "fullcodeline": "CHECK_ERR(process_image_header(data, part->offset, (verify_sha) ? p_sha_handle : NULL, do_verify, silent));"
    },
    {
        "line": 44,
        "fullcodeline": "CHECK_ERR(process_segments(data, silent, do_load, sha_handle, checksum));"
    },
    {
        "line": 45,
        "fullcodeline": "bool skip_check_checksum = !do_verify || esp_cpu_dbgr_is_attached();"
    },
    {
        "line": 46,
        "fullcodeline": "CHECK_ERR(process_checksum(sha_handle, checksum_word, data, silent, skip_check_checksum));"
    },
    {
        "line": 47,
        "fullcodeline": "CHECK_ERR(process_appended_hash_and_sig(data, part->offset, part->size, do_verify, silent));"
    },
    {
        "line": 144,
        "fullcodeline": "bzero(data, sizeof(esp_image_metadata_t));"
    },
    {
        "line": 23,
        "fullcodeline": "if (data == NULL || part == NULL) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (part->size > SIXTEEN_MB) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (sha_handle != NULL) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (err != ESP_OK) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (err == ESP_OK) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (sha_handle != NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "err = ESP_ERR_INVALID_ARG;"
    },
    {
        "line": 39,
        "fullcodeline": "FAIL_LOAD(\"partition size 0x%x invalid, larger than 16MB\", part->size);"
    },
    {
        "line": 74,
        "fullcodeline": "bootloader_sha256_finish(sha_handle, NULL);"
    },
    {
        "line": 75,
        "fullcodeline": "sha_handle = NULL;"
    },
    {
        "line": 137,
        "fullcodeline": "err = ESP_ERR_IMAGE_INVALID;"
    },
    {
        "line": 141,
        "fullcodeline": "bootloader_sha256_finish(sha_handle, NULL);"
    },
    {
        "line": 65,
        "fullcodeline": "if (sha_handle != NULL && !esp_cpu_dbgr_is_attached()) {"
    },
    {
        "line": 66,
        "fullcodeline": "err = verify_simple_hash(sha_handle, data);"
    },
    {
        "line": 67,
        "fullcodeline": "sha_handle = NULL; // calling verify_simple_hash finishes sha_handle"
    }
]