[
    {
        "line": 16,
        "fullcodeline": "esis_header = (const struct esis_header_t *) pptr;"
    },
    {
        "line": 18,
        "fullcodeline": "li = esis_header->length_indicator;"
    },
    {
        "line": 19,
        "fullcodeline": "optr = pptr;"
    },
    {
        "line": 47,
        "fullcodeline": "esis_pdu_type = esis_header->type & ESIS_PDU_TYPE_MASK;"
    },
    {
        "line": 65,
        "fullcodeline": "osi_print_cksum(ndo, pptr, EXTRACT_16BITS(esis_header->cksum), 7, li);"
    },
    {
        "line": 73,
        "fullcodeline": "pptr += sizeof(struct esis_header_t);"
    },
    {
        "line": 74,
        "fullcodeline": "li -= sizeof(struct esis_header_t);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!ndo->ndo_eflag)"
    },
    {
        "line": 11,
        "fullcodeline": "if (length <= 2) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (esis_header->nlpid != NLPID_ESIS) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (esis_header->version != ESIS_VERSION) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (li > length) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (li < sizeof(struct esis_header_t) + 2) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (ndo->ndo_vflag < 1) {"
    },
    {
        "line": 62,
        "fullcodeline": "ND_PRINT((ndo, \", v: %u%s\", esis_header->version, esis_header->version == ESIS_VERSION ? \"\" : \"unsupported\" ));"
    },
    {
        "line": 63,
        "fullcodeline": "ND_PRINT((ndo, \", checksum: 0x%04x\", EXTRACT_16BITS(esis_header->cksum)));"
    },
    {
        "line": 67,
        "fullcodeline": "ND_PRINT((ndo, \", holding time: %us, length indicator: %u\","
    },
    {
        "line": 70,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 212,
        "fullcodeline": "while (li != 0) {"
    },
    {
        "line": 281,
        "fullcodeline": "ND_PRINT((ndo, \"[|esis]\"));"
    },
    {
        "line": 9,
        "fullcodeline": "ND_PRINT((ndo, \"ES-IS\"));"
    },
    {
        "line": 12,
        "fullcodeline": "ND_PRINT((ndo, ndo->ndo_qflag ? \"bad pkt!\" : \"no header at all!\"));"
    },
    {
        "line": 71,
        "fullcodeline": "print_unknown_data(ndo, optr, \"\\n\\t\", sizeof(struct esis_header_t));"
    },
    {
        "line": 147,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 152,
        "fullcodeline": "source_address_number = *pptr;"
    },
    {
        "line": 153,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 154,
        "fullcodeline": "li--;"
    },
    {
        "line": 220,
        "fullcodeline": "ND_TCHECK2(*pptr, 2);"
    },
    {
        "line": 221,
        "fullcodeline": "op = *pptr++;"
    },
    {
        "line": 222,
        "fullcodeline": "opli = *pptr++;"
    },
    {
        "line": 223,
        "fullcodeline": "li -= 2;"
    },
    {
        "line": 228,
        "fullcodeline": "li -= opli;"
    },
    {
        "line": 229,
        "fullcodeline": "tptr = pptr;"
    },
    {
        "line": 278,
        "fullcodeline": "pptr += opli;"
    },
    {
        "line": 26,
        "fullcodeline": "ND_PRINT((ndo, \" nlpid 0x%02x packet not supported\", esis_header->nlpid));"
    },
    {
        "line": 31,
        "fullcodeline": "ND_PRINT((ndo, \" version %d packet not supported\", esis_header->version));"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT((ndo, \" length indicator(%u) > PDU size (%u)!\", li, length));"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo, \" length indicator %u < min PDU size:\", li));"
    },
    {
        "line": 42,
        "fullcodeline": "while (pptr < ndo->ndo_snapend)"
    },
    {
        "line": 50,
        "fullcodeline": "ND_PRINT((ndo, \"%s%s, length %u\","
    },
    {
        "line": 68,
        "fullcodeline": "EXTRACT_16BITS(esis_header->holdtime), li));"
    },
    {
        "line": 81,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 86,
        "fullcodeline": "dstl = *pptr;"
    },
    {
        "line": 87,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 88,
        "fullcodeline": "li--;"
    },
    {
        "line": 89,
        "fullcodeline": "ND_TCHECK2(*pptr, dstl);"
    },
    {
        "line": 94,
        "fullcodeline": "dst = pptr;"
    },
    {
        "line": 95,
        "fullcodeline": "pptr += dstl;"
    },
    {
        "line": 96,
        "fullcodeline": "li -= dstl;"
    },
    {
        "line": 99,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 104,
        "fullcodeline": "snpal = *pptr;"
    },
    {
        "line": 105,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 106,
        "fullcodeline": "li--;"
    },
    {
        "line": 107,
        "fullcodeline": "ND_TCHECK2(*pptr, snpal);"
    },
    {
        "line": 112,
        "fullcodeline": "snpa = pptr;"
    },
    {
        "line": 113,
        "fullcodeline": "pptr += snpal;"
    },
    {
        "line": 114,
        "fullcodeline": "li -= snpal;"
    },
    {
        "line": 115,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 120,
        "fullcodeline": "netal = *pptr;"
    },
    {
        "line": 121,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 122,
        "fullcodeline": "ND_TCHECK2(*pptr, netal);"
    },
    {
        "line": 127,
        "fullcodeline": "neta = pptr;"
    },
    {
        "line": 128,
        "fullcodeline": "pptr += netal;"
    },
    {
        "line": 129,
        "fullcodeline": "li -= netal;"
    },
    {
        "line": 148,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 156,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Number of Source Addresses: %u\", source_address_number));"
    },
    {
        "line": 158,
        "fullcodeline": "while (source_address_number > 0) {"
    },
    {
        "line": 184,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 189,
        "fullcodeline": "source_address_length = *pptr;"
    },
    {
        "line": 190,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 191,
        "fullcodeline": "li--;"
    },
    {
        "line": 192,
        "fullcodeline": "ND_TCHECK2(*pptr, source_address_length);"
    },
    {
        "line": 198,
        "fullcodeline": "pptr += source_address_length;"
    },
    {
        "line": 199,
        "fullcodeline": "li -= source_address_length;"
    },
    {
        "line": 204,
        "fullcodeline": "if (ndo->ndo_vflag <= 1) {"
    },
    {
        "line": 216,
        "fullcodeline": "if (li < 2) {"
    },
    {
        "line": 224,
        "fullcodeline": "if (opli > li) {"
    },
    {
        "line": 231,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s Option #%u, length %u, value: \","
    },
    {
        "line": 276,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 43,
        "fullcodeline": "ND_PRINT((ndo, \"%02X\", *pptr++));"
    },
    {
        "line": 56,
        "fullcodeline": "ND_PRINT((ndo, \"%slength %u\\n\\t%s (%u)\","
    },
    {
        "line": 82,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (li < dstl) {"
    },
    {
        "line": 97,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  %s\", isonsap_string(ndo, dst, dstl)));"
    },
    {
        "line": 100,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (li < snpal) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 123,
        "fullcodeline": "if (li < netal) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (snpal == 6)"
    },
    {
        "line": 139,
        "fullcodeline": "if (netal != 0)"
    },
    {
        "line": 159,
        "fullcodeline": "ND_TCHECK(*pptr);"
    },
    {
        "line": 164,
        "fullcodeline": "source_address_length = *pptr;"
    },
    {
        "line": 165,
        "fullcodeline": "pptr++;"
    },
    {
        "line": 166,
        "fullcodeline": "li--;"
    },
    {
        "line": 168,
        "fullcodeline": "ND_TCHECK2(*pptr, source_address_length);"
    },
    {
        "line": 176,
        "fullcodeline": "pptr += source_address_length;"
    },
    {
        "line": 177,
        "fullcodeline": "li -= source_address_length;"
    },
    {
        "line": 178,
        "fullcodeline": "source_address_number--;"
    },
    {
        "line": 185,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 193,
        "fullcodeline": "if (li < source_address_length) {"
    },
    {
        "line": 197,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  NET (length: %u): %s\", source_address_length, isonsap_string(ndo, pptr, source_address_length)));"
    },
    {
        "line": 273,
        "fullcodeline": "print_unknown_data(ndo, tptr, \"\\n\\t  \", opli);"
    },
    {
        "line": 277,
        "fullcodeline": "print_unknown_data(ndo, pptr, \"\\n\\t  \", opli);"
    },
    {
        "line": 52,
        "fullcodeline": "tok2str(esis_pdu_values,\"unknown type (%u)\",esis_pdu_type),"
    },
    {
        "line": 149,
        "fullcodeline": "ND_PRINT((ndo, \", bad esh/li\"));"
    },
    {
        "line": 160,
        "fullcodeline": "if (li < 1) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (li < source_address_length) {"
    },
    {
        "line": 173,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  NET (length: %u): %s\","
    },
    {
        "line": 205,
        "fullcodeline": "if (pptr < ndo->ndo_snapend)"
    },
    {
        "line": 217,
        "fullcodeline": "ND_PRINT((ndo, \", bad opts/li\"));"
    },
    {
        "line": 225,
        "fullcodeline": "ND_PRINT((ndo, \", opt (%d) too long\", op));"
    },
    {
        "line": 232,
        "fullcodeline": "tok2str(esis_option_values,\"Unknown\",op),"
    },
    {
        "line": 239,
        "fullcodeline": "if (opli == 2) {"
    },
    {
        "line": 247,
        "fullcodeline": "while (opli>0) {"
    },
    {
        "line": 59,
        "fullcodeline": "tok2str(esis_pdu_values,\"unknown type: %u\", esis_pdu_type),"
    },
    {
        "line": 83,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 91,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 101,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 109,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 117,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 124,
        "fullcodeline": "ND_PRINT((ndo, \", bad redirect/li\"));"
    },
    {
        "line": 132,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  SNPA (length: %u): %s\","
    },
    {
        "line": 140,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  NET (length: %u) %s\","
    },
    {
        "line": 186,
        "fullcodeline": "ND_PRINT((ndo, \", bad ish/li\"));"
    },
    {
        "line": 194,
        "fullcodeline": "ND_PRINT((ndo, \", bad ish/li\"));"
    },
    {
        "line": 240,
        "fullcodeline": "ND_TCHECK2(*pptr, 2);"
    },
    {
        "line": 248,
        "fullcodeline": "ND_TCHECK(*tptr);"
    },
    {
        "line": 257,
        "fullcodeline": "opli--;"
    },
    {
        "line": 136,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  SNPA (length: %u): %s\","
    },
    {
        "line": 161,
        "fullcodeline": "ND_PRINT((ndo, \", bad esh/li\"));"
    },
    {
        "line": 170,
        "fullcodeline": "ND_PRINT((ndo, \", bad esh/li\"));"
    },
    {
        "line": 175,
        "fullcodeline": "isonsap_string(ndo, pptr, source_address_length)));"
    },
    {
        "line": 206,
        "fullcodeline": "print_unknown_data(ndo, pptr, \"\\n\\t  \", ndo->ndo_snapend - pptr);"
    },
    {
        "line": 241,
        "fullcodeline": "ND_PRINT((ndo, \"%us\", EXTRACT_16BITS(tptr)));"
    },
    {
        "line": 249,
        "fullcodeline": "ND_PRINT((ndo, \"%s (0x%02x)\","
    },
    {
        "line": 254,
        "fullcodeline": "if (opli>1) /* further NPLIDs ? - put comma */"
    },
    {
        "line": 134,
        "fullcodeline": "etheraddr_string(ndo, snpa)));"
    },
    {
        "line": 142,
        "fullcodeline": "isonsap_string(ndo, neta, netal)));"
    },
    {
        "line": 243,
        "fullcodeline": "ND_PRINT((ndo, \"(bad length)\"));"
    },
    {
        "line": 138,
        "fullcodeline": "linkaddr_string(ndo, snpa, LINKADDR_OTHER, snpal)));"
    },
    {
        "line": 250,
        "fullcodeline": "tok2str(nlpid_values,"
    },
    {
        "line": 255,
        "fullcodeline": "ND_PRINT((ndo, \", \"));"
    }
]