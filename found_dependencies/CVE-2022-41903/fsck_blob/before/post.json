[
    {
        "line": 5,
        "fullcodeline": "struct config_options config_opts = { 0 };"
    },
    {
        "line": 9,
        "fullcodeline": "oidset_insert(&options->gitmodules_done, oid);"
    },
    {
        "line": 25,
        "fullcodeline": "data.oid = oid;"
    },
    {
        "line": 26,
        "fullcodeline": "data.options = options;"
    },
    {
        "line": 27,
        "fullcodeline": "data.ret = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "config_opts.error_action = CONFIG_ERROR_SILENT;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!oidset_contains(&options->gitmodules_found, oid))"
    },
    {
        "line": 11,
        "fullcodeline": "if (object_on_skiplist(options, oid))"
    },
    {
        "line": 14,
        "fullcodeline": "if (!buf) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (git_config_from_mem(fsck_gitmodules_fn, CONFIG_ORIGIN_BLOB,"
    },
    {
        "line": 31,
        "fullcodeline": "data.ret |= report(options, oid, OBJ_BLOB,"
    },
    {
        "line": 20,
        "fullcodeline": "return report(options, oid, OBJ_BLOB,"
    }
]