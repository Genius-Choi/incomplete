[
    {
        "line": 3,
        "fullcodeline": "const char *orig = string;"
    },
    {
        "line": 4,
        "fullcodeline": "size_t width = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "while (string && string < orig + len) {"
    },
    {
        "line": 23,
        "fullcodeline": "return cast_size_t_to_int(string ? width : len);"
    },
    {
        "line": 14,
        "fullcodeline": "glyph_width = utf8_width(&string, NULL);"
    },
    {
        "line": 10,
        "fullcodeline": "while (skip_ansi &&"
    },
    {
        "line": 12,
        "fullcodeline": "string += skip;"
    },
    {
        "line": 15,
        "fullcodeline": "if (glyph_width > 0)"
    },
    {
        "line": 11,
        "fullcodeline": "(skip = display_mode_esc_sequence_len(string)) != 0)"
    },
    {
        "line": 16,
        "fullcodeline": "width += glyph_width;"
    }
]