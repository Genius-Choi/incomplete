[
    {
        "line": 4,
        "fullcodeline": "const char *src = sb_src->buf, *end = sb_src->buf + sb_src->len;"
    },
    {
        "line": 6,
        "fullcodeline": "int w = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "strbuf_init(&dst, sb_src->len);"
    },
    {
        "line": 47,
        "fullcodeline": "strbuf_swap(sb_src, &dst);"
    },
    {
        "line": 49,
        "fullcodeline": "strbuf_release(&dst);"
    },
    {
        "line": 10,
        "fullcodeline": "while (src < end) {"
    },
    {
        "line": 23,
        "fullcodeline": "old = src;"
    },
    {
        "line": 24,
        "fullcodeline": "glyph_width = utf8_width((const char**)&src, NULL);"
    },
    {
        "line": 44,
        "fullcodeline": "w += glyph_width;"
    },
    {
        "line": 15,
        "fullcodeline": "while ((n = display_mode_esc_sequence_len(src))) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (src >= end)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!src) /* broken utf-8, do nothing */"
    },
    {
        "line": 32,
        "fullcodeline": "if (glyph_width < 0)"
    },
    {
        "line": 35,
        "fullcodeline": "if (glyph_width && w >= pos && w < pos + width) {"
    },
    {
        "line": 16,
        "fullcodeline": "strbuf_add(&dst, src, n);"
    },
    {
        "line": 17,
        "fullcodeline": "src += n;"
    },
    {
        "line": 33,
        "fullcodeline": "glyph_width = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "strbuf_add(&dst, old, src - old);"
    },
    {
        "line": 37,
        "fullcodeline": "strbuf_addstr(&dst, subst);"
    },
    {
        "line": 38,
        "fullcodeline": "subst = NULL;"
    }
]