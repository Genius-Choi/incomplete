[
    {
        "line": 3,
        "fullcodeline": "x3f_directory_entry_header_t *DEH = &DE->header;"
    },
    {
        "line": 7,
        "fullcodeline": "read_data_set_offset(I, DE, X3F_PROPERTY_LIST_HEADER_SIZE);"
    },
    {
        "line": 9,
        "fullcodeline": "GET_PROPERTY_TABLE(PL->property_table, PL->num_properties);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!PL->data_size)"
    },
    {
        "line": 14,
        "fullcodeline": "for (i=0; i<PL->num_properties; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "PL->data_size = read_data_block(&PL->data, I, DE, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "P->name = ((utf16_t *)PL->data + P->name_offset);"
    },
    {
        "line": 18,
        "fullcodeline": "P->value = ((utf16_t *)PL->data + P->value_offset);"
    },
    {
        "line": 19,
        "fullcodeline": "P->name_utf8 = 0;// utf16le_to_utf8(P->name);"
    },
    {
        "line": 20,
        "fullcodeline": "P->value_utf8 = 0;//utf16le_to_utf8(P->value);"
    }
]