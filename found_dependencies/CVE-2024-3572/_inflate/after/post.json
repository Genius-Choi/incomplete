[
    {
        "line": 2,
        "fullcodeline": "decompressor = zlib.decompressobj()"
    },
    {
        "line": 3,
        "fullcodeline": "raw_decompressor = zlib.decompressobj(wbits=-15)"
    },
    {
        "line": 4,
        "fullcodeline": "input_stream = BytesIO(data)"
    },
    {
        "line": 5,
        "fullcodeline": "output_stream = BytesIO()"
    },
    {
        "line": 6,
        "fullcodeline": "output_chunk = b\".\""
    },
    {
        "line": 7,
        "fullcodeline": "decompressed_size = 0"
    },
    {
        "line": 31,
        "fullcodeline": "output_stream.seek(0)"
    },
    {
        "line": 32,
        "fullcodeline": "return output_stream.read()"
    },
    {
        "line": 9,
        "fullcodeline": "input_chunk = input_stream.read(_CHUNK_SIZE)"
    },
    {
        "line": 23,
        "fullcodeline": "decompressed_size += len(output_chunk)"
    },
    {
        "line": 30,
        "fullcodeline": "output_stream.write(output_chunk)"
    },
    {
        "line": 24,
        "fullcodeline": "if max_size and decompressed_size > max_size:"
    },
    {
        "line": 11,
        "fullcodeline": "output_chunk = decompressor.decompress(input_chunk)"
    },
    {
        "line": 25,
        "fullcodeline": "raise _DecompressionMaxSizeExceeded("
    },
    {
        "line": 26,
        "fullcodeline": "f\"The number of bytes decompressed so far \""
    },
    {
        "line": 13,
        "fullcodeline": "if decompressor != raw_decompressor:"
    },
    {
        "line": 27,
        "fullcodeline": "f\"({decompressed_size} B) exceed the specified maximum \""
    },
    {
        "line": 28,
        "fullcodeline": "f\"({max_size} B).\""
    },
    {
        "line": 19,
        "fullcodeline": "decompressor = raw_decompressor"
    },
    {
        "line": 20,
        "fullcodeline": "output_chunk = decompressor.decompress(input_chunk)"
    },
    {
        "line": 22,
        "fullcodeline": "raise"
    }
]