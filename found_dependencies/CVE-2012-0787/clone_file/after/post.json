[
    {
        "line": 4,
        "fullcodeline": "FILE *from_fp = NULL, *to_fp = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "char buf[BUFSIZ];"
    },
    {
        "line": 7,
        "fullcodeline": "int to_fd = -1, to_oflags, r;"
    },
    {
        "line": 8,
        "fullcodeline": "int result = -1;"
    },
    {
        "line": 31,
        "fullcodeline": "to_oflags = unlink_if_rename_fails ? O_EXCL : O_TRUNC;"
    },
    {
        "line": 62,
        "fullcodeline": "result = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "if (rename(from, to) == 0)"
    },
    {
        "line": 12,
        "fullcodeline": "if ((errno != EXDEV && errno != EBUSY) || !copy_if_rename_fails) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!(from_fp = fopen(from, \"r\"))) {"
    },
    {
        "line": 32,
        "fullcodeline": "if ((to_fd = open(to, O_WRONLY|O_CREAT|to_oflags, S_IRUSR|S_IWUSR)) < 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!(to_fp = fdopen(to_fd, \"w\"))) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (transfer_file_attrs(from_fp, to_fp, err_status) < 0)"
    },
    {
        "line": 44,
        "fullcodeline": "while ((len = fread(buf, 1, BUFSIZ, from_fp)) > 0) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (ferror(from_fp)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (fflush(to_fp) != 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (fsync(fileno(to_fp)) < 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (from_fp != NULL)"
    },
    {
        "line": 66,
        "fullcodeline": "if (to_fp != NULL) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (result != 0)"
    },
    {
        "line": 77,
        "fullcodeline": "if (result == 0)"
    },
    {
        "line": 13,
        "fullcodeline": "*err_status = \"rename\";"
    },
    {
        "line": 19,
        "fullcodeline": "*err_status = \"clone_open_src\";"
    },
    {
        "line": 24,
        "fullcodeline": "r = unlink(to);"
    },
    {
        "line": 33,
        "fullcodeline": "*err_status = \"clone_open_dst\";"
    },
    {
        "line": 37,
        "fullcodeline": "*err_status = \"clone_fdopen_dst\";"
    },
    {
        "line": 51,
        "fullcodeline": "*err_status = \"clone_read\";"
    },
    {
        "line": 55,
        "fullcodeline": "*err_status = \"clone_flush\";"
    },
    {
        "line": 59,
        "fullcodeline": "*err_status = \"clone_sync\";"
    },
    {
        "line": 65,
        "fullcodeline": "fclose(from_fp);"
    },
    {
        "line": 76,
        "fullcodeline": "unlink(to);"
    },
    {
        "line": 78,
        "fullcodeline": "unlink(from);"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 25,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (fwrite(buf, 1, len, to_fp) != len) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (fclose(to_fp) != 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "*err_status = \"clone_unlink_dst\";"
    },
    {
        "line": 46,
        "fullcodeline": "*err_status = \"clone_write\";"
    },
    {
        "line": 68,
        "fullcodeline": "*err_status = \"clone_fclose_dst\";"
    },
    {
        "line": 69,
        "fullcodeline": "result = -1;"
    },
    {
        "line": 71,
        "fullcodeline": "} else if (to_fd >= 0 && close(to_fd) < 0) {"
    },
    {
        "line": 72,
        "fullcodeline": "*err_status = \"clone_close_dst\";"
    },
    {
        "line": 73,
        "fullcodeline": "result = -1;"
    }
]