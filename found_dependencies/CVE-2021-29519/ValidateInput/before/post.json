[
    {
        "line": 5,
        "fullcodeline": "const auto size = indices_list_in.size();"
    },
    {
        "line": 71,
        "fullcodeline": "const auto batch_size = CalculateBatchSize(shapes_list_in, dense_list_in);"
    },
    {
        "line": 7,
        "fullcodeline": "for (int i = 0; i < size; i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (values_list_in.size() != size) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (int i = 0; i < size; i++) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (shapes_list_in.size() != size) {"
    },
    {
        "line": 45,
        "fullcodeline": "for (int i = 0; i < size; i++) {"
    },
    {
        "line": 60,
        "fullcodeline": "for (int i = 0; i < dense_list_in.size(); ++i) {"
    },
    {
        "line": 72,
        "fullcodeline": "for (int i = 0; i < size; i++) {"
    },
    {
        "line": 79,
        "fullcodeline": "for (int i = 0; i < dense_list_in.size(); ++i) {"
    },
    {
        "line": 87,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 8,
        "fullcodeline": "if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (indices_list_in[i].shape().dim_size(1) != 2) {"
    },
    {
        "line": 22,
        "fullcodeline": "return errors::InvalidArgument(\"Expected \", size, \" input values, got \","
    },
    {
        "line": 26,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(values_list_in[i].shape())) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (indices_list_in[i].shape().dim_size(0) !="
    },
    {
        "line": 42,
        "fullcodeline": "return errors::InvalidArgument(\"Expected \", size, \" input shapes, got \","
    },
    {
        "line": 46,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(shapes_list_in[i].shape())) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (shapes_list_in[i].vec<int64>().size() != 2) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (!TensorShapeUtils::IsMatrix(dense_list_in[i].shape())) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (shapes_list_in[i].vec<int64>()(0) != batch_size) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (dense_list_in[i].dim_size(0) != batch_size) {"
    },
    {
        "line": 23,
        "fullcodeline": "values_list_in.size());"
    },
    {
        "line": 32,
        "fullcodeline": "values_list_in[i].shape().dim_size(0)) {"
    },
    {
        "line": 43,
        "fullcodeline": "shapes_list_in.size());"
    },
    {
        "line": 9,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 14,
        "fullcodeline": "return errors::InvalidArgument(\"Expected D2 of index to be 2 got \","
    },
    {
        "line": 27,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 33,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 47,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 53,
        "fullcodeline": "return errors::InvalidArgument(\"shape should imply a 2D tensor, but got \","
    },
    {
        "line": 62,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 74,
        "fullcodeline": "return errors::InvalidArgument(\"Expected batch size \", batch_size,"
    },
    {
        "line": 81,
        "fullcodeline": "return errors::InvalidArgument(\"Expected batch size \", batch_size,"
    },
    {
        "line": 11,
        "fullcodeline": "indices_list_in[i].shape().DebugString(), \" at position \", i);"
    },
    {
        "line": 15,
        "fullcodeline": "indices_list_in[i].shape().dim_size(1),"
    },
    {
        "line": 29,
        "fullcodeline": "values_list_in[i].shape().DebugString(), \" at position \", i);"
    },
    {
        "line": 35,
        "fullcodeline": "indices_list_in[i].shape().dim_size(0), \" got \","
    },
    {
        "line": 36,
        "fullcodeline": "values_list_in[i].shape().dim_size(0), \" at position \", i);"
    },
    {
        "line": 49,
        "fullcodeline": "shapes_list_in[i].shape().DebugString(), \" at position \", i);"
    },
    {
        "line": 54,
        "fullcodeline": "shapes_list_in[i].shape().DebugString(),"
    },
    {
        "line": 64,
        "fullcodeline": "dense_list_in[i].shape().DebugString(), \" at position \", i);"
    },
    {
        "line": 75,
        "fullcodeline": "\" got \", shapes_list_in[i].vec<int64>()(0),"
    },
    {
        "line": 82,
        "fullcodeline": "\" got \", dense_list_in[i].dim_size(0),"
    }
]