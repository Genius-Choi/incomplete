[
    {
        "line": 6,
        "fullcodeline": "njs_value_t                  arguments[2], next;"
    },
    {
        "line": 16,
        "fullcodeline": "pargs = (njs_promise_iterator_args_t *) args;"
    },
    {
        "line": 18,
        "fullcodeline": "capability = pargs->capability;"
    },
    {
        "line": 23,
        "fullcodeline": "ret = njs_function_call(vm, pargs->function, pargs->constructor, value, 1,"
    },
    {
        "line": 29,
        "fullcodeline": "on_rejected = njs_promise_create_function(vm,"
    },
    {
        "line": 35,
        "fullcodeline": "on_rejected->u.native = njs_promise_any_reject_element_functions;"
    },
    {
        "line": 36,
        "fullcodeline": "on_rejected->args_count = 1;"
    },
    {
        "line": 38,
        "fullcodeline": "context = on_rejected->context;"
    },
    {
        "line": 40,
        "fullcodeline": "context->already_called = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "context->index = (uint32_t) index;"
    },
    {
        "line": 43,
        "fullcodeline": "context->capability = capability;"
    },
    {
        "line": 44,
        "fullcodeline": "context->remaining_elements = pargs->remaining;"
    },
    {
        "line": 48,
        "fullcodeline": "arguments[0] = capability->resolve;"
    },
    {
        "line": 49,
        "fullcodeline": "njs_set_function(&arguments[1], on_rejected);"
    },
    {
        "line": 51,
        "fullcodeline": "ret = njs_promise_invoke_then(vm, &next, arguments, 2);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!njs_is_valid(value)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (njs_slow_path(on_rejected == NULL)) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 13,
        "fullcodeline": "value = njs_value_arg(&njs_value_undefined);"
    }
]