[
    {
        "line": 9,
        "fullcodeline": "promise = njs_argument(args, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "iterator = njs_arg(args, nargs, 1);"
    },
    {
        "line": 12,
        "fullcodeline": "pargs.capability = njs_promise_new_capability(vm, promise);"
    },
    {
        "line": 17,
        "fullcodeline": "ret = njs_value_property(vm, promise, njs_value_arg(&string_resolve),"
    },
    {
        "line": 28,
        "fullcodeline": "ret = njs_object_length(vm, iterator, &length);"
    },
    {
        "line": 35,
        "fullcodeline": "pargs.function = njs_function(&resolve);"
    },
    {
        "line": 36,
        "fullcodeline": "pargs.constructor = promise;"
    },
    {
        "line": 38,
        "fullcodeline": "pargs.args.value = iterator;"
    },
    {
        "line": 39,
        "fullcodeline": "pargs.args.to = length;"
    },
    {
        "line": 41,
        "fullcodeline": "ret = njs_object_iterate(vm, &pargs.args, njs_promise_perform_race_handler);"
    },
    {
        "line": 13,
        "fullcodeline": "if (njs_slow_path(pargs.capability == NULL)) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (njs_slow_path(!njs_is_function(&resolve))) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (njs_slow_path(ret != NJS_OK)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (njs_slow_path(ret == NJS_ERROR)) {"
    },
    {
        "line": 24,
        "fullcodeline": "njs_type_error(vm, \"resolve is not callable\");"
    }
]