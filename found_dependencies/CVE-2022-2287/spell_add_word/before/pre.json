[
    {
        "line": 9,
        "fullcodeline": "FILE\t*fd = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "buf_T\t*buf = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "int\t\tnew_spf = FALSE;"
    },
    {
        "line": 13,
        "fullcodeline": "char_u\t*fnamebuf = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "char_u\tline[MAXWLEN * 2];"
    },
    {
        "line": 15,
        "fullcodeline": "long\tfpos, fpos_next = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (enc_utf8 && !utf_valid_string(word, NULL))"
    },
    {
        "line": 25,
        "fullcodeline": "if (idx == 0)\t    // use internal wordlist"
    },
    {
        "line": 80,
        "fullcodeline": "if (what == SPELL_ADD_BAD || undo)"
    },
    {
        "line": 166,
        "fullcodeline": "if (fd != NULL)"
    },
    {
        "line": 21,
        "fullcodeline": "emsg(_(e_illegal_character_in_word));"
    },
    {
        "line": 33,
        "fullcodeline": "fname = int_wordlist;"
    },
    {
        "line": 84,
        "fullcodeline": "fd = mch_fopen((char *)fname, \"r\");"
    },
    {
        "line": 127,
        "fullcodeline": "fd = mch_fopen((char *)fname, \"a\");"
    },
    {
        "line": 169,
        "fullcodeline": "mkspell(1, &fname, FALSE, TRUE, TRUE);"
    },
    {
        "line": 175,
        "fullcodeline": "redraw_all_later(SOME_VALID);"
    },
    {
        "line": 27,
        "fullcodeline": "if (int_wordlist == NULL)"
    },
    {
        "line": 49,
        "fullcodeline": "fnamebuf = alloc(MAXPATHL);"
    },
    {
        "line": 67,
        "fullcodeline": "buf = buflist_findname_exp(fnamebuf);"
    },
    {
        "line": 77,
        "fullcodeline": "fname = fnamebuf;"
    },
    {
        "line": 85,
        "fullcodeline": "if (fd != NULL)"
    },
    {
        "line": 149,
        "fullcodeline": "if (fd == NULL)"
    },
    {
        "line": 172,
        "fullcodeline": "if (buf != NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "int_wordlist = vim_tempname('s', FALSE);"
    },
    {
        "line": 38,
        "fullcodeline": "if (*curwin->w_s->b_p_spf == NUL)"
    },
    {
        "line": 44,
        "fullcodeline": "if (*curwin->w_s->b_p_spf == NUL)"
    },
    {
        "line": 50,
        "fullcodeline": "if (fnamebuf == NULL)"
    },
    {
        "line": 53,
        "fullcodeline": "for (spf = curwin->w_s->b_p_spf, i = 1; *spf != NUL; ++i)"
    },
    {
        "line": 128,
        "fullcodeline": "if (fd == NULL && new_spf)"
    },
    {
        "line": 150,
        "fullcodeline": "semsg(_(e_cant_open_file_str), fname);"
    },
    {
        "line": 30,
        "fullcodeline": "if (int_wordlist == NULL)"
    },
    {
        "line": 41,
        "fullcodeline": "new_spf = TRUE;"
    },
    {
        "line": 55,
        "fullcodeline": "copy_option_part(&spf, fnamebuf, MAXPATHL, \",\");"
    },
    {
        "line": 68,
        "fullcodeline": "if (buf != NULL && buf->b_ml.ml_mfp == NULL)"
    },
    {
        "line": 69,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 70,
        "fullcodeline": "if (buf != NULL && bufIsChanged(buf))"
    },
    {
        "line": 120,
        "fullcodeline": "if (fd != NULL)"
    },
    {
        "line": 159,
        "fullcodeline": "fclose(fd);"
    },
    {
        "line": 161,
        "fullcodeline": "home_replace(NULL, fname, NameBuff, MAXPATHL, TRUE);"
    },
    {
        "line": 46,
        "fullcodeline": "semsg(_(e_option_str_is_not_set), \"spellfile\");"
    },
    {
        "line": 56,
        "fullcodeline": "if (i == idx)"
    },
    {
        "line": 58,
        "fullcodeline": "if (*spf == NUL)"
    },
    {
        "line": 72,
        "fullcodeline": "emsg(_(e_file_is_loaded_in_another_buffer));"
    },
    {
        "line": 87,
        "fullcodeline": "while (!vim_fgets(line, MAXWLEN * 2, fd))"
    },
    {
        "line": 89,
        "fullcodeline": "fpos = fpos_next;"
    },
    {
        "line": 90,
        "fullcodeline": "fpos_next = ftell(fd);"
    },
    {
        "line": 121,
        "fullcodeline": "fclose(fd);"
    },
    {
        "line": 136,
        "fullcodeline": "if (!dir_of_file_exists(fname) && (p = gettail_sep(fname)) != fname)"
    },
    {
        "line": 138,
        "fullcodeline": "int c = *p;"
    },
    {
        "line": 143,
        "fullcodeline": "vim_mkdir(fname, 0755);"
    },
    {
        "line": 145,
        "fullcodeline": "fd = mch_fopen((char *)fname, \"a\");"
    },
    {
        "line": 153,
        "fullcodeline": "if (what == SPELL_ADD_BAD)"
    },
    {
        "line": 162,
        "fullcodeline": "smsg(_(\"Word '%.*s' added to %s\"), len, word, NameBuff);"
    },
    {
        "line": 91,
        "fullcodeline": "if (fpos_next < 0)"
    },
    {
        "line": 154,
        "fullcodeline": "fprintf(fd, \"%.*s/!\\n\", len, word);"
    },
    {
        "line": 60,
        "fullcodeline": "semsg(_(e_spellfile_does_not_have_nr_entries), idx);"
    },
    {
        "line": 93,
        "fullcodeline": "if (STRNCMP(word, line, len) == 0"
    },
    {
        "line": 94,
        "fullcodeline": "&& (line[len] == '/' || line[len] < ' '))"
    },
    {
        "line": 100,
        "fullcodeline": "fd = mch_fopen((char *)fname, \"r+\");"
    },
    {
        "line": 101,
        "fullcodeline": "if (fd == NULL)"
    },
    {
        "line": 155,
        "fullcodeline": "else if (what == SPELL_ADD_RARE)"
    },
    {
        "line": 103,
        "fullcodeline": "if (fseek(fd, fpos, SEEK_SET) == 0)"
    },
    {
        "line": 105,
        "fullcodeline": "fputc('#', fd);"
    },
    {
        "line": 113,
        "fullcodeline": "if (fseek(fd, fpos_next, SEEK_SET) != 0)"
    },
    {
        "line": 156,
        "fullcodeline": "fprintf(fd, \"%.*s/?\\n\", len, word);"
    },
    {
        "line": 115,
        "fullcodeline": "PERROR(_(\"Seek error in spellfile\"));"
    },
    {
        "line": 158,
        "fullcodeline": "fprintf(fd, \"%.*s\\n\", len, word);"
    },
    {
        "line": 108,
        "fullcodeline": "home_replace(NULL, fname, NameBuff, MAXPATHL, TRUE);"
    },
    {
        "line": 109,
        "fullcodeline": "smsg(_(\"Word '%.*s' removed from %s\"),"
    }
]