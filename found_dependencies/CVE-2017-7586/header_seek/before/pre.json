[
    {
        "line": 36,
        "fullcodeline": "psf->headend += psf_fread (psf->header + psf->headend, 1, position - (psf->headend - psf->headindex), psf) ;"
    },
    {
        "line": 5,
        "fullcodeline": "if (position > SIGNED_SIZEOF (psf->header))"
    },
    {
        "line": 10,
        "fullcodeline": "if (position > psf->headend)"
    },
    {
        "line": 19,
        "fullcodeline": "if (psf->headindex >= SIGNED_SIZEOF (psf->header))"
    },
    {
        "line": 24,
        "fullcodeline": "if (psf->headindex + position <= psf->headend)"
    },
    {
        "line": 7,
        "fullcodeline": "psf_fseek (psf, position, whence) ;"
    },
    {
        "line": 29,
        "fullcodeline": "if (psf->headindex + position > SIGNED_SIZEOF (psf->header))"
    },
    {
        "line": 31,
        "fullcodeline": "psf->headindex = psf->headend ;"
    },
    {
        "line": 32,
        "fullcodeline": "psf_fseek (psf, position, SEEK_CUR) ;"
    },
    {
        "line": 11,
        "fullcodeline": "psf->headend += psf_fread (psf->header + psf->headend, 1, position - psf->headend, psf) ;"
    }
]