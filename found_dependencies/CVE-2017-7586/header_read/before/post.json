[
    {
        "line": 2,
        "fullcodeline": "{\tint count = 0 ;"
    },
    {
        "line": 27,
        "fullcodeline": "memcpy (ptr, psf->header + psf->headindex, bytes) ;"
    },
    {
        "line": 28,
        "fullcodeline": "psf->headindex += bytes ;"
    },
    {
        "line": 4,
        "fullcodeline": "if (psf->headindex >= SIGNED_SIZEOF (psf->header))"
    },
    {
        "line": 7,
        "fullcodeline": "if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))"
    },
    {
        "line": 18,
        "fullcodeline": "if (psf->headindex + bytes > psf->headend)"
    },
    {
        "line": 10,
        "fullcodeline": "most = SIGNED_SIZEOF (psf->header) - psf->headend ;"
    },
    {
        "line": 11,
        "fullcodeline": "psf_fread (psf->header + psf->headend, 1, most, psf) ;"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy (ptr, psf->header + psf->headend, most) ;"
    },
    {
        "line": 13,
        "fullcodeline": "psf->headend = psf->headindex += most ;"
    },
    {
        "line": 14,
        "fullcodeline": "psf_fread ((char *) ptr + most, bytes - most, 1, psf) ;"
    },
    {
        "line": 19,
        "fullcodeline": "{\tcount = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;"
    },
    {
        "line": 24,
        "fullcodeline": "psf->headend += count ;"
    },
    {
        "line": 5,
        "fullcodeline": "return psf_fread (ptr, 1, bytes, psf) ;"
    },
    {
        "line": 20,
        "fullcodeline": "if (count != bytes - (int) (psf->headend - psf->headindex))"
    },
    {
        "line": 21,
        "fullcodeline": "{\tpsf_log_printf (psf, \"Error : psf_fread returned short count.\\n\") ;"
    }
]