[
    {
        "line": 3,
        "fullcodeline": "int\terror = 0 ;"
    },
    {
        "line": 14,
        "fullcodeline": "error = psf_fclose (psf) ;"
    },
    {
        "line": 15,
        "fullcodeline": "psf_close_rsrc (psf) ;"
    },
    {
        "line": 18,
        "fullcodeline": "free (psf->container_data) ;"
    },
    {
        "line": 19,
        "fullcodeline": "free (psf->codec_data) ;"
    },
    {
        "line": 20,
        "fullcodeline": "free (psf->interleave) ;"
    },
    {
        "line": 21,
        "fullcodeline": "free (psf->dither) ;"
    },
    {
        "line": 22,
        "fullcodeline": "free (psf->peak_info) ;"
    },
    {
        "line": 23,
        "fullcodeline": "free (psf->broadcast_16k) ;"
    },
    {
        "line": 24,
        "fullcodeline": "free (psf->loop_info) ;"
    },
    {
        "line": 25,
        "fullcodeline": "free (psf->instrument) ;"
    },
    {
        "line": 26,
        "fullcodeline": "free (psf->cues) ;"
    },
    {
        "line": 27,
        "fullcodeline": "free (psf->channel_map) ;"
    },
    {
        "line": 28,
        "fullcodeline": "free (psf->format_desc) ;"
    },
    {
        "line": 36,
        "fullcodeline": "free (psf->iterator) ;"
    },
    {
        "line": 37,
        "fullcodeline": "free (psf->cart_16k) ;"
    },
    {
        "line": 39,
        "fullcodeline": "memset (psf, 0, sizeof (SF_PRIVATE)) ;"
    },
    {
        "line": 40,
        "fullcodeline": "free (psf) ;"
    },
    {
        "line": 6,
        "fullcodeline": "{\terror = psf->codec_close (psf) ;"
    },
    {
        "line": 8,
        "fullcodeline": "psf->codec_close = NULL ;"
    },
    {
        "line": 12,
        "fullcodeline": "error = psf->container_close (psf) ;"
    },
    {
        "line": 32,
        "fullcodeline": "for (k = 0 ; k < psf->wchunks.used ; k++)"
    }
]