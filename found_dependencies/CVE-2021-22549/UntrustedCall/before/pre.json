[
    {
        "line": 6,
        "fullcodeline": "UntrustedCacheMalloc *untrusted_cache = UntrustedCacheMalloc::Instance();"
    },
    {
        "line": 8,
        "fullcodeline": "SgxParams *const sgx_params ="
    },
    {
        "line": 14,
        "fullcodeline": "Cleanup clean_up("
    },
    {
        "line": 16,
        "fullcodeline": "sgx_params->input_size = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "sgx_params->input = nullptr;"
    },
    {
        "line": 31,
        "fullcodeline": "sgx_params->output_size = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "sgx_params->output = nullptr;"
    },
    {
        "line": 33,
        "fullcodeline": "CHECK_OCALL("
    },
    {
        "line": 9,
        "fullcodeline": "reinterpret_cast<SgxParams *>(untrusted_cache->Malloc(sizeof(SgxParams)));"
    },
    {
        "line": 10,
        "fullcodeline": "if (!TrustedPrimitives::IsOutsideEnclave(sgx_params, sizeof(SgxParams))) {"
    },
    {
        "line": 34,
        "fullcodeline": "ocall_dispatch_untrusted_call(&ret, untrusted_selector, sgx_params));"
    },
    {
        "line": 38,
        "fullcodeline": "if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->output,"
    },
    {
        "line": 49,
        "fullcodeline": "return PrimitiveStatus::OkStatus();"
    },
    {
        "line": 11,
        "fullcodeline": "TrustedPrimitives::BestEffortAbort("
    },
    {
        "line": 19,
        "fullcodeline": "sgx_params->input_size = input->MessageSize();"
    },
    {
        "line": 36,
        "fullcodeline": "untrusted_cache->Free(const_cast<void *>(sgx_params->input));"
    },
    {
        "line": 40,
        "fullcodeline": "TrustedPrimitives::BestEffortAbort("
    },
    {
        "line": 46,
        "fullcodeline": "output->Deserialize(sgx_params->output, sgx_params->output_size);"
    },
    {
        "line": 47,
        "fullcodeline": "TrustedPrimitives::UntrustedLocalFree(sgx_params->output);"
    },
    {
        "line": 20,
        "fullcodeline": "if (sgx_params->input_size > 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "sgx_params->input = untrusted_cache->Malloc(sgx_params->input_size);"
    },
    {
        "line": 28,
        "fullcodeline": "input->Serialize(const_cast<void *>(sgx_params->input));"
    },
    {
        "line": 23,
        "fullcodeline": "if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->input,"
    },
    {
        "line": 25,
        "fullcodeline": "TrustedPrimitives::BestEffortAbort("
    }
]