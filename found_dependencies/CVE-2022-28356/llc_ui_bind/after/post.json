[
    {
        "line": 3,
        "fullcodeline": "struct sockaddr_llc *addr = (struct sockaddr_llc *)uaddr;"
    },
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct llc_sock *llc = llc_sk(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "int rc = -EINVAL;"
    },
    {
        "line": 9,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 12,
        "fullcodeline": "rc = -EAFNOSUPPORT;"
    },
    {
        "line": 17,
        "fullcodeline": "dprintk(\"%s: binding %02X\\n\", __func__, addr->sllc_sap);"
    },
    {
        "line": 18,
        "fullcodeline": "rc = -ENODEV;"
    },
    {
        "line": 19,
        "fullcodeline": "rcu_read_lock();"
    },
    {
        "line": 36,
        "fullcodeline": "dev_hold_track(llc->dev, &llc->dev_tracker, GFP_ATOMIC);"
    },
    {
        "line": 37,
        "fullcodeline": "rcu_read_unlock();"
    },
    {
        "line": 46,
        "fullcodeline": "sap = llc_sap_find(addr->sllc_sap);"
    },
    {
        "line": 71,
        "fullcodeline": "llc->laddr.lsap = addr->sllc_sap;"
    },
    {
        "line": 72,
        "fullcodeline": "memcpy(llc->laddr.mac, addr->sllc_mac, IFHWADDRLEN);"
    },
    {
        "line": 73,
        "fullcodeline": "memcpy(&llc->addr, addr, sizeof(llc->addr));"
    },
    {
        "line": 75,
        "fullcodeline": "llc_sap_add_socket(sap, sk);"
    },
    {
        "line": 76,
        "fullcodeline": "sock_reset_flag(sk, SOCK_ZAPPED);"
    },
    {
        "line": 77,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "llc_sap_put(sap);"
    },
    {
        "line": 85,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 10,
        "fullcodeline": "if (unlikely(!sock_flag(sk, SOCK_ZAPPED) || addrlen != sizeof(*addr)))"
    },
    {
        "line": 13,
        "fullcodeline": "if (!addr->sllc_arphrd)"
    },
    {
        "line": 15,
        "fullcodeline": "if (unlikely(addr->sllc_family != AF_LLC || addr->sllc_arphrd != ARPHRD_ETHER))"
    },
    {
        "line": 38,
        "fullcodeline": "if (!llc->dev)"
    },
    {
        "line": 40,
        "fullcodeline": "if (!addr->sllc_sap) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!sap) {"
    },
    {
        "line": 14,
        "fullcodeline": "addr->sllc_arphrd = ARPHRD_ETHER;"
    },
    {
        "line": 21,
        "fullcodeline": "llc->dev = dev_get_by_index_rcu(&init_net, sk->sk_bound_dev_if);"
    },
    {
        "line": 41,
        "fullcodeline": "rc = -EUSERS;"
    },
    {
        "line": 42,
        "fullcodeline": "addr->sllc_sap = llc_ui_autoport();"
    },
    {
        "line": 48,
        "fullcodeline": "sap = llc_sap_open(addr->sllc_sap, NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "rc = -EBUSY; /* some other network layer is using the sap */"
    },
    {
        "line": 82,
        "fullcodeline": "dev_put_track(llc->dev, &llc->dev_tracker);"
    },
    {
        "line": 83,
        "fullcodeline": "llc->dev = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "llc->dev = dev_getbyhwaddr_rcu(&init_net, addr->sllc_arphrd,"
    },
    {
        "line": 43,
        "fullcodeline": "if (!addr->sllc_sap)"
    },
    {
        "line": 50,
        "fullcodeline": "if (!sap)"
    },
    {
        "line": 56,
        "fullcodeline": "memset(&laddr, 0, sizeof(laddr));"
    },
    {
        "line": 57,
        "fullcodeline": "memset(&daddr, 0, sizeof(daddr));"
    },
    {
        "line": 62,
        "fullcodeline": "memcpy(laddr.mac, addr->sllc_mac, IFHWADDRLEN);"
    },
    {
        "line": 63,
        "fullcodeline": "laddr.lsap = addr->sllc_sap;"
    },
    {
        "line": 64,
        "fullcodeline": "rc = -EADDRINUSE; /* mac + sap clash. */"
    },
    {
        "line": 65,
        "fullcodeline": "ask = llc_lookup_established(sap, &daddr, &laddr);"
    },
    {
        "line": 23,
        "fullcodeline": "if (is_zero_ether_addr(addr->sllc_mac))"
    },
    {
        "line": 26,
        "fullcodeline": "if (addr->sllc_arphrd != llc->dev->type ||"
    },
    {
        "line": 67,
        "fullcodeline": "sock_put(ask);"
    },
    {
        "line": 24,
        "fullcodeline": "memcpy(addr->sllc_mac, llc->dev->dev_addr,"
    },
    {
        "line": 27,
        "fullcodeline": "!ether_addr_equal(addr->sllc_mac,"
    },
    {
        "line": 29,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 30,
        "fullcodeline": "llc->dev = NULL;"
    }
]