[
    {
        "line": 12,
        "fullcodeline": "u8 *skb_head = skb->data;"
    },
    {
        "line": 13,
        "fullcodeline": "int skb_len = skb->len;"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned long status = TP_STATUS_LOSING|TP_STATUS_USER;"
    },
    {
        "line": 17,
        "fullcodeline": "struct sk_buff *copy_skb = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "struct skb_shared_hwtstamps *shhwtstamps = skb_hwtstamps(skb);"
    },
    {
        "line": 25,
        "fullcodeline": "sk = pt->af_packet_priv;"
    },
    {
        "line": 26,
        "fullcodeline": "po = pkt_sk(sk);"
    },
    {
        "line": 43,
        "fullcodeline": "snaplen = skb->len;"
    },
    {
        "line": 45,
        "fullcodeline": "res = run_filter(skb, sk, snaplen);"
    },
    {
        "line": 81,
        "fullcodeline": "h.raw = packet_current_frame(po, &po->rx_ring, TP_STATUS_KERNEL);"
    },
    {
        "line": 84,
        "fullcodeline": "packet_increment_head(&po->rx_ring);"
    },
    {
        "line": 92,
        "fullcodeline": "spin_unlock(&sk->sk_receive_queue.lock);"
    },
    {
        "line": 94,
        "fullcodeline": "skb_copy_bits(skb, 0, h.raw + macoff, snaplen);"
    },
    {
        "line": 146,
        "fullcodeline": "sll = h.raw + TPACKET_ALIGN(hdrlen);"
    },
    {
        "line": 147,
        "fullcodeline": "sll->sll_halen = dev_parse_header(skb, sll->sll_addr);"
    },
    {
        "line": 148,
        "fullcodeline": "sll->sll_family = AF_PACKET;"
    },
    {
        "line": 149,
        "fullcodeline": "sll->sll_hatype = dev->type;"
    },
    {
        "line": 150,
        "fullcodeline": "sll->sll_protocol = skb->protocol;"
    },
    {
        "line": 151,
        "fullcodeline": "sll->sll_pkttype = skb->pkt_type;"
    },
    {
        "line": 157,
        "fullcodeline": "__packet_set_status(po, h.raw, status);"
    },
    {
        "line": 158,
        "fullcodeline": "smp_mb();"
    },
    {
        "line": 169,
        "fullcodeline": "sk->sk_data_ready(sk, 0);"
    },
    {
        "line": 177,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 182,
        "fullcodeline": "spin_unlock(&sk->sk_receive_queue.lock);"
    },
    {
        "line": 184,
        "fullcodeline": "sk->sk_data_ready(sk, 0);"
    },
    {
        "line": 185,
        "fullcodeline": "kfree_skb(copy_skb);"
    },
    {
        "line": 22,
        "fullcodeline": "if (skb->pkt_type == PACKET_LOOPBACK)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!net_eq(dev_net(dev), sock_net(sk)))"
    },
    {
        "line": 40,
        "fullcodeline": "if (skb->ip_summed == CHECKSUM_PARTIAL)"
    },
    {
        "line": 46,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 48,
        "fullcodeline": "if (snaplen > res)"
    },
    {
        "line": 51,
        "fullcodeline": "if (sk->sk_type == SOCK_DGRAM) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (macoff + snaplen > po->rx_ring.frame_size) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (!h.raw)"
    },
    {
        "line": 152,
        "fullcodeline": "if (unlikely(po->origdev))"
    },
    {
        "line": 172,
        "fullcodeline": "if (skb_head != skb->data && skb_shared(skb)) {"
    },
    {
        "line": 41,
        "fullcodeline": "status |= TP_STATUS_CSUMNOTREADY;"
    },
    {
        "line": 49,
        "fullcodeline": "snaplen = res;"
    },
    {
        "line": 52,
        "fullcodeline": "macoff = netoff = TPACKET_ALIGN(po->tp_hdrlen) + 16 +"
    },
    {
        "line": 75,
        "fullcodeline": "snaplen = po->rx_ring.frame_size - macoff;"
    },
    {
        "line": 87,
        "fullcodeline": "status |= TP_STATUS_COPY;"
    },
    {
        "line": 88,
        "fullcodeline": "__skb_queue_tail(&sk->sk_receive_queue, copy_skb);"
    },
    {
        "line": 91,
        "fullcodeline": "status &= ~TP_STATUS_LOSING;"
    },
    {
        "line": 98,
        "fullcodeline": "h.h1->tp_len = skb->len;"
    },
    {
        "line": 99,
        "fullcodeline": "h.h1->tp_snaplen = snaplen;"
    },
    {
        "line": 100,
        "fullcodeline": "h.h1->tp_mac = macoff;"
    },
    {
        "line": 101,
        "fullcodeline": "h.h1->tp_net = netoff;"
    },
    {
        "line": 112,
        "fullcodeline": "h.h1->tp_sec = tv.tv_sec;"
    },
    {
        "line": 113,
        "fullcodeline": "h.h1->tp_usec = tv.tv_usec;"
    },
    {
        "line": 117,
        "fullcodeline": "h.h2->tp_len = skb->len;"
    },
    {
        "line": 118,
        "fullcodeline": "h.h2->tp_snaplen = snaplen;"
    },
    {
        "line": 119,
        "fullcodeline": "h.h2->tp_mac = macoff;"
    },
    {
        "line": 120,
        "fullcodeline": "h.h2->tp_net = netoff;"
    },
    {
        "line": 131,
        "fullcodeline": "h.h2->tp_sec = ts.tv_sec;"
    },
    {
        "line": 132,
        "fullcodeline": "h.h2->tp_nsec = ts.tv_nsec;"
    },
    {
        "line": 139,
        "fullcodeline": "h.h2->tp_padding = 0;"
    },
    {
        "line": 143,
        "fullcodeline": "BUG();"
    },
    {
        "line": 153,
        "fullcodeline": "sll->sll_ifindex = orig_dev->ifindex;"
    },
    {
        "line": 173,
        "fullcodeline": "skb->data = skb_head;"
    },
    {
        "line": 174,
        "fullcodeline": "skb->len = skb_len;"
    },
    {
        "line": 32,
        "fullcodeline": "if (sk->sk_type != SOCK_DGRAM)"
    },
    {
        "line": 55,
        "fullcodeline": "unsigned maclen = skb_network_offset(skb);"
    },
    {
        "line": 56,
        "fullcodeline": "netoff = TPACKET_ALIGN(po->tp_hdrlen +"
    },
    {
        "line": 59,
        "fullcodeline": "macoff = netoff - maclen;"
    },
    {
        "line": 63,
        "fullcodeline": "if (po->copy_thresh &&"
    },
    {
        "line": 76,
        "fullcodeline": "if ((int)snaplen < 0)"
    },
    {
        "line": 102,
        "fullcodeline": "if ((po->tp_tstamp & SOF_TIMESTAMPING_SYS_HARDWARE)"
    },
    {
        "line": 121,
        "fullcodeline": "if ((po->tp_tstamp & SOF_TIMESTAMPING_SYS_HARDWARE)"
    },
    {
        "line": 133,
        "fullcodeline": "if (vlan_tx_tag_present(skb)) {"
    },
    {
        "line": 155,
        "fullcodeline": "sll->sll_ifindex = dev->ifindex;"
    },
    {
        "line": 33,
        "fullcodeline": "skb_push(skb, skb->data - skb_mac_header(skb));"
    },
    {
        "line": 64,
        "fullcodeline": "atomic_read(&sk->sk_rmem_alloc) + skb->truesize <"
    },
    {
        "line": 77,
        "fullcodeline": "snaplen = 0;"
    },
    {
        "line": 104,
        "fullcodeline": "tv = ktime_to_timeval(shhwtstamps->syststamp);"
    },
    {
        "line": 123,
        "fullcodeline": "ts = ktime_to_timespec(shhwtstamps->syststamp);"
    },
    {
        "line": 134,
        "fullcodeline": "h.h2->tp_vlan_tci = vlan_tx_tag_get(skb);"
    },
    {
        "line": 135,
        "fullcodeline": "status |= TP_STATUS_VLAN_VALID;"
    },
    {
        "line": 65,
        "fullcodeline": "(unsigned)sk->sk_rcvbuf) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (skb_shared(skb)) {"
    },
    {
        "line": 137,
        "fullcodeline": "h.h2->tp_vlan_tci = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "else if (skb->pkt_type == PACKET_OUTGOING) {"
    },
    {
        "line": 67,
        "fullcodeline": "copy_skb = skb_clone(skb, GFP_ATOMIC);"
    },
    {
        "line": 73,
        "fullcodeline": "skb_set_owner_r(copy_skb, sk);"
    },
    {
        "line": 105,
        "fullcodeline": "else if ((po->tp_tstamp & SOF_TIMESTAMPING_RAW_HARDWARE)"
    },
    {
        "line": 124,
        "fullcodeline": "else if ((po->tp_tstamp & SOF_TIMESTAMPING_RAW_HARDWARE)"
    },
    {
        "line": 36,
        "fullcodeline": "skb_pull(skb, skb_network_offset(skb));"
    },
    {
        "line": 57,
        "fullcodeline": "(maclen < 16 ? 16 : maclen)) +"
    },
    {
        "line": 69,
        "fullcodeline": "copy_skb = skb_get(skb);"
    },
    {
        "line": 70,
        "fullcodeline": "skb_head = skb->data;"
    },
    {
        "line": 107,
        "fullcodeline": "tv = ktime_to_timeval(shhwtstamps->hwtstamp);"
    },
    {
        "line": 126,
        "fullcodeline": "ts = ktime_to_timespec(shhwtstamps->hwtstamp);"
    },
    {
        "line": 109,
        "fullcodeline": "tv = ktime_to_timeval(skb->tstamp);"
    },
    {
        "line": 128,
        "fullcodeline": "ts = ktime_to_timespec(skb->tstamp);"
    },
    {
        "line": 111,
        "fullcodeline": "do_gettimeofday(&tv);"
    },
    {
        "line": 130,
        "fullcodeline": "getnstimeofday(&ts);"
    }
]