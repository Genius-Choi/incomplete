[
    {
        "line": 4,
        "fullcodeline": "int bytes = SQUASHFS_FRAGMENT_BYTES(sBlk.s.fragments);"
    },
    {
        "line": 5,
        "fullcodeline": "int  indexes = SQUASHFS_FRAGMENT_INDEXES(sBlk.s.fragments);"
    },
    {
        "line": 6,
        "fullcodeline": "long long fragment_table_index[indexes];"
    },
    {
        "line": 8,
        "fullcodeline": "TRACE(\"read_fragment_table: %d fragments, reading %d fragment indexes \""
    },
    {
        "line": 17,
        "fullcodeline": "fragment_table = malloc(bytes);"
    },
    {
        "line": 22,
        "fullcodeline": "res = read_fs_bytes(fd, sBlk.s.fragment_table_start,"
    },
    {
        "line": 30,
        "fullcodeline": "SQUASHFS_INSWAP_FRAGMENT_INDEXES(fragment_table_index, indexes);"
    },
    {
        "line": 12,
        "fullcodeline": "if(sBlk.s.fragments == 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "if(fragment_table == NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "if(res == FALSE) {"
    },
    {
        "line": 32,
        "fullcodeline": "for(i = 0; i < indexes; i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "for(i = 0; i < sBlk.s.fragments; i++)"
    },
    {
        "line": 13,
        "fullcodeline": "*directory_table_end = sBlk.s.fragment_table_start;"
    },
    {
        "line": 23,
        "fullcodeline": "SQUASHFS_FRAGMENT_INDEX_BYTES(sBlk.s.fragments),"
    },
    {
        "line": 33,
        "fullcodeline": "int expected = (i + 1) != indexes ? SQUASHFS_METADATA_SIZE :"
    },
    {
        "line": 35,
        "fullcodeline": "int length = read_block(fd, fragment_table_index[i], NULL,"
    },
    {
        "line": 38,
        "fullcodeline": "TRACE(\"Read fragment table block %d, from 0x%llx, length %d\\n\","
    },
    {
        "line": 40,
        "fullcodeline": "if(length == FALSE) {"
    },
    {
        "line": 34,
        "fullcodeline": "bytes & (SQUASHFS_METADATA_SIZE - 1);"
    },
    {
        "line": 36,
        "fullcodeline": "expected, ((char *) fragment_table) + (i *"
    }
]