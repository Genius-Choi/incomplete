[
    {
        "line": 11,
        "fullcodeline": "int bytes = SQUASHFS_ID_BYTES(sBlk.s.no_ids);"
    },
    {
        "line": 12,
        "fullcodeline": "int indexes = SQUASHFS_ID_BLOCKS(sBlk.s.no_ids);"
    },
    {
        "line": 13,
        "fullcodeline": "int length = SQUASHFS_ID_BLOCK_BYTES(sBlk.s.no_ids);"
    },
    {
        "line": 25,
        "fullcodeline": "TRACE(\"read_id_table: no_ids %d\\n\", sBlk.s.no_ids);"
    },
    {
        "line": 27,
        "fullcodeline": "id_index_table = alloc_index_table(indexes);"
    },
    {
        "line": 28,
        "fullcodeline": "id_table = malloc(bytes);"
    },
    {
        "line": 34,
        "fullcodeline": "res = read_fs_bytes(fd, sBlk.s.id_table_start, length, id_index_table);"
    },
    {
        "line": 39,
        "fullcodeline": "SQUASHFS_INSWAP_ID_BLOCKS(id_index_table, indexes);"
    },
    {
        "line": 20,
        "fullcodeline": "if(length != (*table_start - sBlk.s.id_table_start)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if(id_table == NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if(res == FALSE) {"
    },
    {
        "line": 49,
        "fullcodeline": "for(i = 0; i < indexes; i++) {"
    },
    {
        "line": 21,
        "fullcodeline": "ERROR(\"read_id_table: Bad id count in super block\\n\");"
    },
    {
        "line": 50,
        "fullcodeline": "int expected = (i + 1) != indexes ? SQUASHFS_METADATA_SIZE :"
    },
    {
        "line": 52,
        "fullcodeline": "res = read_block(fd, id_index_table[i], NULL, expected,"
    },
    {
        "line": 54,
        "fullcodeline": "if(res == FALSE) {"
    },
    {
        "line": 51,
        "fullcodeline": "bytes & (SQUASHFS_METADATA_SIZE - 1);"
    },
    {
        "line": 53,
        "fullcodeline": "((char *) id_table) + i * SQUASHFS_METADATA_SIZE);"
    }
]