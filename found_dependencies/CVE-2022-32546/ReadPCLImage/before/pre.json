[
    {
        "line": 9,
        "fullcodeline": "command[MagickPathExtent],"
    },
    {
        "line": 11,
        "fullcodeline": "filename[MagickPathExtent],"
    },
    {
        "line": 12,
        "fullcodeline": "geometry[MagickPathExtent],"
    },
    {
        "line": 14,
        "fullcodeline": "input_filename[MagickPathExtent];"
    },
    {
        "line": 53,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 54,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 58,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 59,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 63,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 64,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 70,
        "fullcodeline": "status=AcquireUniqueSymbolicLink(image_info->filename,input_filename);"
    },
    {
        "line": 81,
        "fullcodeline": "delta.x=DefaultResolution;"
    },
    {
        "line": 82,
        "fullcodeline": "delta.y=DefaultResolution;"
    },
    {
        "line": 101,
        "fullcodeline": "cmyk=image->colorspace == CMYKColorspace ? MagickTrue : MagickFalse;"
    },
    {
        "line": 102,
        "fullcodeline": "count=0;"
    },
    {
        "line": 107,
        "fullcodeline": "p=command;"
    },
    {
        "line": 186,
        "fullcodeline": "density=AcquireString(\"\");"
    },
    {
        "line": 187,
        "fullcodeline": "options=AcquireString(\"\");"
    },
    {
        "line": 192,
        "fullcodeline": "page.width=(size_t) floor(page.width*image->resolution.x/delta.x+0.5);"
    },
    {
        "line": 193,
        "fullcodeline": "page.height=(size_t) floor(page.height*image->resolution.y/delta.y+0.5);"
    },
    {
        "line": 197,
        "fullcodeline": "read_info=CloneImageInfo(image_info);"
    },
    {
        "line": 223,
        "fullcodeline": "image=ReadImage(read_info,exception);"
    },
    {
        "line": 55,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 65,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 71,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 103,
        "fullcodeline": "(void) memset(&bounding_box,0,sizeof(bounding_box));"
    },
    {
        "line": 104,
        "fullcodeline": "(void) memset(&bounds,0,sizeof(bounds));"
    },
    {
        "line": 105,
        "fullcodeline": "(void) memset(&page,0,sizeof(page));"
    },
    {
        "line": 106,
        "fullcodeline": "(void) memset(command,0,sizeof(command));"
    },
    {
        "line": 108,
        "fullcodeline": "for (c=ReadBlobByte(image); c != EOF; c=ReadBlobByte(image))"
    },
    {
        "line": 160,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 164,
        "fullcodeline": "if ((page.width == 0) || (page.height == 0))"
    },
    {
        "line": 166,
        "fullcodeline": "if (image_info->page != (char *) NULL)"
    },
    {
        "line": 168,
        "fullcodeline": "(void) FormatLocaleString(geometry,MagickPathExtent,\"%.20gx%.20g\",(double)"
    },
    {
        "line": 170,
        "fullcodeline": "if (image_info->monochrome != MagickFalse)"
    },
    {
        "line": 177,
        "fullcodeline": "if (delegate_info == (const DelegateInfo *) NULL)"
    },
    {
        "line": 184,
        "fullcodeline": "if (image_info->page != (char *) NULL)"
    },
    {
        "line": 188,
        "fullcodeline": "(void) FormatLocaleString(density,MagickPathExtent,\"%gx%g\","
    },
    {
        "line": 190,
        "fullcodeline": "if (image_info->ping != MagickFalse)"
    },
    {
        "line": 194,
        "fullcodeline": "(void) FormatLocaleString(options,MagickPathExtent,\"-g%.20gx%.20g \",(double)"
    },
    {
        "line": 196,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 199,
        "fullcodeline": "if (read_info->number_scenes != 0)"
    },
    {
        "line": 212,
        "fullcodeline": "(void) CopyMagickString(filename,read_info->filename,MagickPathExtent);"
    },
    {
        "line": 213,
        "fullcodeline": "(void) AcquireUniqueFilename(read_info->filename);"
    },
    {
        "line": 214,
        "fullcodeline": "(void) FormatLocaleString(command,MagickPathExtent,"
    },
    {
        "line": 219,
        "fullcodeline": "options=DestroyString(options);"
    },
    {
        "line": 220,
        "fullcodeline": "density=DestroyString(density);"
    },
    {
        "line": 224,
        "fullcodeline": "(void) RelinquishUniqueFileResource(read_info->filename);"
    },
    {
        "line": 225,
        "fullcodeline": "(void) RelinquishUniqueFileResource(input_filename);"
    },
    {
        "line": 226,
        "fullcodeline": "read_info=DestroyImageInfo(read_info);"
    },
    {
        "line": 227,
        "fullcodeline": "if (image == (Image *) NULL)"
    },
    {
        "line": 256,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 56,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 67,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 73,
        "fullcodeline": "ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\","
    },
    {
        "line": 83,
        "fullcodeline": "if ((image->resolution.x == 0.0) || (image->resolution.y == 0.0))"
    },
    {
        "line": 91,
        "fullcodeline": "flags=ParseGeometry(PSDensityGeometry,&geometry_info);"
    },
    {
        "line": 119,
        "fullcodeline": "*p='\\0';"
    },
    {
        "line": 120,
        "fullcodeline": "p=command;"
    },
    {
        "line": 153,
        "fullcodeline": "width=(size_t) floor(bounds.x2-bounds.x1+0.5);"
    },
    {
        "line": 154,
        "fullcodeline": "height=(size_t) floor(bounds.y2-bounds.y1+0.5);"
    },
    {
        "line": 171,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"pcl:mono\",(char *) NULL,exception);"
    },
    {
        "line": 182,
        "fullcodeline": "if ((page.width == 0) || (page.height == 0))"
    },
    {
        "line": 208,
        "fullcodeline": "read_info->number_scenes=0;"
    },
    {
        "line": 215,
        "fullcodeline": "GetDelegateCommands(delegate_info),"
    },
    {
        "line": 228,
        "fullcodeline": "ThrowReaderException(DelegateError,\"PCLDelegateFailed\");"
    },
    {
        "line": 229,
        "fullcodeline": "if (LocaleCompare(image->magick,\"BMP\") == 0)"
    },
    {
        "line": 234,
        "fullcodeline": "cmyk_image=ConsolidateCMYKImages(image,exception);"
    },
    {
        "line": 244,
        "fullcodeline": "image->page=page;"
    },
    {
        "line": 252,
        "fullcodeline": "next_image=SyncNextImageInList(image);"
    },
    {
        "line": 68,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 75,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 76,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 110,
        "fullcodeline": "if (image_info->page != (char *) NULL)"
    },
    {
        "line": 155,
        "fullcodeline": "if (width > page.width)"
    },
    {
        "line": 157,
        "fullcodeline": "if (height > page.height)"
    },
    {
        "line": 165,
        "fullcodeline": "(void) ParseAbsoluteGeometry(PSPageGeometry,&page);"
    },
    {
        "line": 167,
        "fullcodeline": "(void) ParseAbsoluteGeometry(image_info->page,&page);"
    },
    {
        "line": 179,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 180,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 183,
        "fullcodeline": "(void) ParseAbsoluteGeometry(PSPageGeometry,&page);"
    },
    {
        "line": 185,
        "fullcodeline": "(void) ParseAbsoluteGeometry(image_info->page,&page);"
    },
    {
        "line": 191,
        "fullcodeline": "(void) FormatLocaleString(density,MagickPathExtent,\"2.0x2.0\");"
    },
    {
        "line": 201,
        "fullcodeline": "if (read_info->number_scenes != 1)"
    },
    {
        "line": 209,
        "fullcodeline": "if (read_info->scenes != (char *) NULL)"
    },
    {
        "line": 216,
        "fullcodeline": "read_info->antialias != MagickFalse ? 4 : 1,"
    },
    {
        "line": 217,
        "fullcodeline": "read_info->antialias != MagickFalse ? 4 : 1,density,options,"
    },
    {
        "line": 221,
        "fullcodeline": "status=ExternalDelegateCommand(MagickFalse,read_info->verbose,command,"
    },
    {
        "line": 235,
        "fullcodeline": "if (cmyk_image != (Image *) NULL)"
    },
    {
        "line": 243,
        "fullcodeline": "(void) CopyMagickString(image->filename,filename,MagickPathExtent);"
    },
    {
        "line": 253,
        "fullcodeline": "if (next_image != (Image *) NULL)"
    },
    {
        "line": 92,
        "fullcodeline": "if ((flags & RhoValue) != 0)"
    },
    {
        "line": 93,
        "fullcodeline": "image->resolution.x=geometry_info.rho;"
    },
    {
        "line": 95,
        "fullcodeline": "if ((flags & SigmaValue) != 0)"
    },
    {
        "line": 115,
        "fullcodeline": "*p++=(char) c;"
    },
    {
        "line": 116,
        "fullcodeline": "if ((c != (int) '/') && (c != '\\n') &&"
    },
    {
        "line": 117,
        "fullcodeline": "((size_t) (p-command) < (MagickPathExtent-1)))"
    },
    {
        "line": 124,
        "fullcodeline": "if (LocaleNCompare(DeviceCMYK,command,strlen(DeviceCMYK)) == 0)"
    },
    {
        "line": 125,
        "fullcodeline": "cmyk=MagickTrue;"
    },
    {
        "line": 126,
        "fullcodeline": "if (LocaleNCompare(CropBox,command,strlen(CropBox)) == 0)"
    },
    {
        "line": 131,
        "fullcodeline": "count=(ssize_t) sscanf(command,\"CropBox [%lf %lf %lf %lf\","
    },
    {
        "line": 137,
        "fullcodeline": "if (LocaleNCompare(MediaBox,command,strlen(MediaBox)) == 0)"
    },
    {
        "line": 142,
        "fullcodeline": "count=(ssize_t) sscanf(command,\"MediaBox [%lf %lf %lf %lf\","
    },
    {
        "line": 156,
        "fullcodeline": "page.width=width;"
    },
    {
        "line": 158,
        "fullcodeline": "page.height=height;"
    },
    {
        "line": 173,
        "fullcodeline": "if (cmyk != MagickFalse)"
    },
    {
        "line": 238,
        "fullcodeline": "image=cmyk_image;"
    },
    {
        "line": 247,
        "fullcodeline": "image->magick_columns*=image->resolution.x/2.0;"
    },
    {
        "line": 248,
        "fullcodeline": "image->magick_rows*=image->resolution.y/2.0;"
    },
    {
        "line": 249,
        "fullcodeline": "image->columns*=image->resolution.x/2.0;"
    },
    {
        "line": 250,
        "fullcodeline": "image->rows*=image->resolution.y/2.0;"
    },
    {
        "line": 254,
        "fullcodeline": "image=next_image;"
    },
    {
        "line": 133,
        "fullcodeline": "if (count != 4)"
    },
    {
        "line": 144,
        "fullcodeline": "if (count != 4)"
    },
    {
        "line": 174,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"pcl:cmyk\",(char *) NULL,exception);"
    },
    {
        "line": 202,
        "fullcodeline": "(void) FormatLocaleString(options,MagickPathExtent,\"-dLastPage=%.20g\","
    },
    {
        "line": 237,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 134,
        "fullcodeline": "count=(ssize_t) sscanf(command,\"CropBox[%lf %lf %lf %lf\","
    },
    {
        "line": 145,
        "fullcodeline": "count=(ssize_t) sscanf(command,\"MediaBox[%lf %lf %lf %lf\","
    },
    {
        "line": 176,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"pcl:color\",(char *) NULL,exception);"
    },
    {
        "line": 205,
        "fullcodeline": "(void) FormatLocaleString(options,MagickPathExtent,"
    }
]