[
    {
        "line": 3,
        "fullcodeline": "int sfd = -1;"
    },
    {
        "line": 4,
        "fullcodeline": "int yes = 1;"
    },
    {
        "line": 36,
        "fullcodeline": "memset((void *) &saddr, 0, sizeof(saddr));"
    },
    {
        "line": 37,
        "fullcodeline": "saddr.sin_family = AF_INET;"
    },
    {
        "line": 38,
        "fullcodeline": "saddr.sin_addr.s_addr = htonl(INADDR_ANY);"
    },
    {
        "line": 39,
        "fullcodeline": "saddr.sin_port = htons(port);"
    },
    {
        "line": 17,
        "fullcodeline": "if (0 > (sfd = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP))) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (setsockopt(sfd, SOL_SOCKET, SO_REUSEADDR, (void*)&yes, sizeof(int)) == -1) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (0 > bind(sfd, (struct sockaddr *) &saddr, sizeof(saddr))) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (listen(sfd, 1) == -1) {"
    },
    {
        "line": 18,
        "fullcodeline": "perror(\"socket()\");"
    },
    {
        "line": 23,
        "fullcodeline": "perror(\"setsockopt()\");"
    },
    {
        "line": 24,
        "fullcodeline": "socket_close(sfd);"
    },
    {
        "line": 42,
        "fullcodeline": "perror(\"bind()\");"
    },
    {
        "line": 43,
        "fullcodeline": "socket_close(sfd);"
    },
    {
        "line": 48,
        "fullcodeline": "perror(\"listen()\");"
    },
    {
        "line": 49,
        "fullcodeline": "socket_close(sfd);"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    },
    {
        "line": 44,
        "fullcodeline": "return -1;"
    },
    {
        "line": 50,
        "fullcodeline": "return -1;"
    }
]