[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct nfc_llcp_sock *llcp_sock = nfc_llcp_sock(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "int len, ret = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "pr_debug(\"sk %p addr %p family %d\\n\", sk, addr, addr->sa_family);"
    },
    {
        "line": 17,
        "fullcodeline": "memset(&llcp_addr, 0, sizeof(llcp_addr));"
    },
    {
        "line": 19,
        "fullcodeline": "memcpy(&llcp_addr, addr, len);"
    },
    {
        "line": 21,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 28,
        "fullcodeline": "dev = nfc_get_device(llcp_addr.dev_idx);"
    },
    {
        "line": 34,
        "fullcodeline": "local = nfc_llcp_find_local(dev);"
    },
    {
        "line": 40,
        "fullcodeline": "llcp_sock->dev = dev;"
    },
    {
        "line": 41,
        "fullcodeline": "llcp_sock->local = local;"
    },
    {
        "line": 42,
        "fullcodeline": "llcp_sock->nfc_protocol = llcp_addr.nfc_protocol;"
    },
    {
        "line": 44,
        "fullcodeline": "nfc_llcp_sock_link(&local->raw_sockets, sk);"
    },
    {
        "line": 46,
        "fullcodeline": "sk->sk_state = LLCP_BOUND;"
    },
    {
        "line": 49,
        "fullcodeline": "nfc_put_device(dev);"
    },
    {
        "line": 52,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 23,
        "fullcodeline": "if (sk->sk_state != LLCP_CLOSED) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (dev == NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (local == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "ret = -EBADFD;"
    },
    {
        "line": 30,
        "fullcodeline": "ret = -ENODEV;"
    },
    {
        "line": 36,
        "fullcodeline": "ret = -ENODEV;"
    },
    {
        "line": 13,
        "fullcodeline": "return -EINVAL;"
    }
]