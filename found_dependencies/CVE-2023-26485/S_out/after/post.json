[
    {
        "line": 4,
        "fullcodeline": "int length = (int)strlen(source);"
    },
    {
        "line": 7,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "cmark_chunk remainder = cmark_chunk_literal(\"\");"
    },
    {
        "line": 11,
        "fullcodeline": "int k = renderer->buffer->size - 1;"
    },
    {
        "line": 13,
        "fullcodeline": "cmark_syntax_extension *ext = node->ancestor_extension;"
    },
    {
        "line": 17,
        "fullcodeline": "wrap = wrap && !renderer->no_linebreaks;"
    },
    {
        "line": 14,
        "fullcodeline": "if (ext && !ext->commonmark_escape_func)"
    },
    {
        "line": 19,
        "fullcodeline": "if (renderer->in_tight_list_item && renderer->need_cr > 1) {"
    },
    {
        "line": 39,
        "fullcodeline": "while (i < length) {"
    },
    {
        "line": 15,
        "fullcodeline": "ext = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "renderer->need_cr = 1;"
    },
    {
        "line": 32,
        "fullcodeline": "renderer->column = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "renderer->last_breakable = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "renderer->begin_line = true;"
    },
    {
        "line": 35,
        "fullcodeline": "renderer->begin_content = true;"
    },
    {
        "line": 36,
        "fullcodeline": "renderer->need_cr -= 1;"
    },
    {
        "line": 47,
        "fullcodeline": "len = cmark_utf8proc_iterate((const uint8_t *)source + i, length - i, &c);"
    },
    {
        "line": 55,
        "fullcodeline": "nextc = source[i + len];"
    },
    {
        "line": 121,
        "fullcodeline": "i += len;"
    },
    {
        "line": 23,
        "fullcodeline": "if (k < 0 || renderer->buffer->ptr[k] == '\\n') {"
    },
    {
        "line": 48,
        "fullcodeline": "if (len == -1) { // error condition"
    },
    {
        "line": 52,
        "fullcodeline": "if (ext && ext->commonmark_escape_func(ext, node, c))"
    },
    {
        "line": 56,
        "fullcodeline": "if (c == 32 && wrap) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (renderer->width > 0 && renderer->column > renderer->width &&"
    },
    {
        "line": 24,
        "fullcodeline": "k -= 1;"
    },
    {
        "line": 41,
        "fullcodeline": "cmark_strbuf_put(renderer->buffer, renderer->prefix->ptr,"
    },
    {
        "line": 44,
        "fullcodeline": "renderer->column = renderer->prefix->size;"
    },
    {
        "line": 53,
        "fullcodeline": "cmark_strbuf_putc(renderer->buffer, '\\\\');"
    },
    {
        "line": 101,
        "fullcodeline": "!renderer->begin_line && renderer->last_breakable > 0) {"
    },
    {
        "line": 104,
        "fullcodeline": "cmark_chunk_set_cstr(renderer->mem, &remainder,"
    },
    {
        "line": 108,
        "fullcodeline": "cmark_strbuf_truncate(renderer->buffer, renderer->last_breakable);"
    },
    {
        "line": 110,
        "fullcodeline": "cmark_strbuf_putc(renderer->buffer, '\\n');"
    },
    {
        "line": 111,
        "fullcodeline": "cmark_strbuf_put(renderer->buffer, renderer->prefix->ptr,"
    },
    {
        "line": 113,
        "fullcodeline": "cmark_strbuf_put(renderer->buffer, remainder.data, remainder.len);"
    },
    {
        "line": 114,
        "fullcodeline": "renderer->column = renderer->prefix->size + remainder.len;"
    },
    {
        "line": 115,
        "fullcodeline": "cmark_chunk_free(renderer->mem, &remainder);"
    },
    {
        "line": 116,
        "fullcodeline": "renderer->last_breakable = 0;"
    },
    {
        "line": 117,
        "fullcodeline": "renderer->begin_line = false;"
    },
    {
        "line": 118,
        "fullcodeline": "renderer->begin_content = false;"
    },
    {
        "line": 26,
        "fullcodeline": "cmark_strbuf_putc(renderer->buffer, '\\n');"
    },
    {
        "line": 57,
        "fullcodeline": "if (!renderer->begin_line) {"
    },
    {
        "line": 105,
        "fullcodeline": "(char *)renderer->buffer->ptr +"
    },
    {
        "line": 27,
        "fullcodeline": "if (renderer->need_cr > 1) {"
    },
    {
        "line": 58,
        "fullcodeline": "last_nonspace = renderer->buffer->size;"
    },
    {
        "line": 59,
        "fullcodeline": "cmark_strbuf_putc(renderer->buffer, ' ');"
    },
    {
        "line": 60,
        "fullcodeline": "renderer->column += 1;"
    },
    {
        "line": 61,
        "fullcodeline": "renderer->begin_line = false;"
    },
    {
        "line": 62,
        "fullcodeline": "renderer->begin_content = false;"
    },
    {
        "line": 74,
        "fullcodeline": "} else if (escape == LITERAL) {"
    },
    {
        "line": 28,
        "fullcodeline": "cmark_strbuf_put(renderer->buffer, renderer->prefix->ptr,"
    },
    {
        "line": 64,
        "fullcodeline": "while (source[i + 1] == ' ') {"
    },
    {
        "line": 69,
        "fullcodeline": "if (!cmark_isdigit(source[i + 1])) {"
    },
    {
        "line": 65,
        "fullcodeline": "i++;"
    },
    {
        "line": 70,
        "fullcodeline": "renderer->last_breakable = last_nonspace;"
    },
    {
        "line": 75,
        "fullcodeline": "if (c == 10) {"
    },
    {
        "line": 92,
        "fullcodeline": "(renderer->outc)(renderer, node, escape, c, nextc);"
    },
    {
        "line": 93,
        "fullcodeline": "renderer->begin_line = false;"
    },
    {
        "line": 94,
        "fullcodeline": "renderer->begin_content ="
    },
    {
        "line": 76,
        "fullcodeline": "cmark_strbuf_putc(renderer->buffer, '\\n');"
    },
    {
        "line": 77,
        "fullcodeline": "renderer->column = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "renderer->begin_line = true;"
    },
    {
        "line": 79,
        "fullcodeline": "renderer->begin_content = true;"
    },
    {
        "line": 80,
        "fullcodeline": "renderer->last_breakable = 0;"
    },
    {
        "line": 95,
        "fullcodeline": "renderer->begin_content && cmark_isdigit((char)c) == 1;"
    },
    {
        "line": 82,
        "fullcodeline": "cmark_render_code_point(renderer, c);"
    },
    {
        "line": 83,
        "fullcodeline": "renderer->begin_line = false;"
    },
    {
        "line": 88,
        "fullcodeline": "renderer->begin_content ="
    },
    {
        "line": 89,
        "fullcodeline": "renderer->begin_content && cmark_isdigit((char)c) == 1;"
    }
]