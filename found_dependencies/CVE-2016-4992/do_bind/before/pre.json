[
    {
        "line": 3,
        "fullcodeline": "BerElement\t*ber = pb->pb_op->o_ber;"
    },
    {
        "line": 5,
        "fullcodeline": "ber_tag_t \tmethod = LBER_DEFAULT;"
    },
    {
        "line": 6,
        "fullcodeline": "ber_int_t\tversion = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "int\t\tauth_response_requested = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int\t\tpw_response_requested = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "char\t\t*rawdn = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "const char\t*dn = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "char\t\t*saslmech = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "struct berval\tcred = {0};"
    },
    {
        "line": 13,
        "fullcodeline": "Slapi_Backend\t\t*be = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "Slapi_DN *sdn = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "int bind_sdn_in_pb = 0; /* is sdn set in the pb? */"
    },
    {
        "line": 19,
        "fullcodeline": "char errorbuf[SLAPI_DSE_RETURNTEXT_SIZE] = {0};"
    },
    {
        "line": 21,
        "fullcodeline": "char authtypebuf[256]; /* >26 (strlen(SLAPD_AUTH_SASL)+SASL_MECHNAMEMAX+1) */"
    },
    {
        "line": 22,
        "fullcodeline": "Slapi_Entry *bind_target_entry = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "int auto_bind = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "int minssf = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "int minssf_exclude_rootdse = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "Slapi_DN *original_sdn = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_TRACE, \"do_bind\\n\", 0, 0, 0 );"
    },
    {
        "line": 50,
        "fullcodeline": "ber_rc = ber_scanf( ber, \"{iat\", &version, &rawdn, &method );"
    },
    {
        "line": 74,
        "fullcodeline": "sdn = slapi_sdn_new_dn_passin(rawdn);"
    },
    {
        "line": 75,
        "fullcodeline": "dn = slapi_sdn_get_dn(sdn);"
    },
    {
        "line": 88,
        "fullcodeline": "operation_set_target_spec (pb->pb_op, sdn);"
    },
    {
        "line": 177,
        "fullcodeline": "PR_EnterMonitor(pb->pb_conn->c_mutex);"
    },
    {
        "line": 179,
        "fullcodeline": "bind_credentials_clear( pb->pb_conn, PR_FALSE, /* do not lock conn */"
    },
    {
        "line": 209,
        "fullcodeline": "pb->pb_conn->c_needpw = 0;"
    },
    {
        "line": 210,
        "fullcodeline": "PR_ExitMonitor(pb->pb_conn->c_mutex);"
    },
    {
        "line": 212,
        "fullcodeline": "log_bind_access(pb, dn?dn:\"empty\", method, version, saslmech, NULL);"
    },
    {
        "line": 250,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_TRACE, \"do_bind: version %d method 0x%x dn %s\\n\","
    },
    {
        "line": 252,
        "fullcodeline": "pb->pb_conn->c_ldapversion = version;"
    },
    {
        "line": 254,
        "fullcodeline": "isroot = slapi_dn_isroot( slapi_sdn_get_ndn(sdn) );"
    },
    {
        "line": 255,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_REQUESTOR_ISROOT, &isroot );"
    },
    {
        "line": 256,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BIND_TARGET_SDN, (void*)sdn );"
    },
    {
        "line": 258,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BIND_METHOD, &method );"
    },
    {
        "line": 259,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BIND_SASLMECHANISM, saslmech );"
    },
    {
        "line": 260,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BIND_CREDENTIALS, &cred );"
    },
    {
        "line": 586,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BACKEND, be );"
    },
    {
        "line": 51,
        "fullcodeline": "if ( ber_rc == LBER_ERROR ) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (rawdn && config_get_dn_validate_strict()) {"
    },
    {
        "line": 174,
        "fullcodeline": "slapi_pblock_get (pb, SLAPI_PWPOLICY, &pw_response_requested);"
    },
    {
        "line": 262,
        "fullcodeline": "if (method != LDAP_AUTH_SASL) {"
    },
    {
        "line": 574,
        "fullcodeline": "if (slapi_mapping_tree_select(pb, &be, &referral, NULL, 0) != LDAP_SUCCESS) {"
    },
    {
        "line": 589,
        "fullcodeline": "if ( be->be_bind != NULL ) {"
    },
    {
        "line": 795,
        "fullcodeline": "if ( bind_target_entry != NULL )"
    },
    {
        "line": 52,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_ANY,"
    },
    {
        "line": 55,
        "fullcodeline": "log_bind_access (pb, \"???\", method, version, saslmech, \"decoding error\");"
    },
    {
        "line": 56,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 58,
        "fullcodeline": "slapi_ch_free_string(&rawdn);"
    },
    {
        "line": 76,
        "fullcodeline": "if (rawdn && (strlen(rawdn) > 0) && (NULL == dn)) {"
    },
    {
        "line": 78,
        "fullcodeline": "op_shared_log_error_access(pb, \"BIND\", rawdn, \"invalid bind dn\");"
    },
    {
        "line": 102,
        "fullcodeline": "ber_rc = ber_scanf( ber, \"{a\", &saslmech );"
    },
    {
        "line": 132,
        "fullcodeline": "ber_rc = ber_scanf( ber, \"o}\", &cred );"
    },
    {
        "line": 138,
        "fullcodeline": "log_bind_access (pb, dn?dn:\"empty\", method, version, saslmech, \"Unknown bind method\");"
    },
    {
        "line": 139,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 147,
        "fullcodeline": "log_bind_access (pb, dn?dn:\"empty\", method, version, saslmech, \"decoding error\");"
    },
    {
        "line": 148,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 172,
        "fullcodeline": "auth_response_requested =  slapi_control_present( reqctrls,"
    },
    {
        "line": 245,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 267,
        "fullcodeline": "pb->pb_conn->c_flags &= ~CONN_FLAG_SASL_CONTINUE;"
    },
    {
        "line": 289,
        "fullcodeline": "supported = slapi_get_supported_saslmechanisms_copy();"
    },
    {
        "line": 395,
        "fullcodeline": "minssf = config_get_minssf();"
    },
    {
        "line": 402,
        "fullcodeline": "minssf_exclude_rootdse = config_get_minssf_exclude_rootdse();"
    },
    {
        "line": 512,
        "fullcodeline": "if ( isroot && method == LDAP_AUTH_SIMPLE ) {"
    },
    {
        "line": 575,
        "fullcodeline": "send_nobackend_ldap_result( pb );"
    },
    {
        "line": 576,
        "fullcodeline": "be = NULL;"
    },
    {
        "line": 581,
        "fullcodeline": "send_referrals_from_entry(pb,referral);"
    },
    {
        "line": 590,
        "fullcodeline": "original_sdn = slapi_sdn_dup(sdn);"
    },
    {
        "line": 790,
        "fullcodeline": "slapi_pblock_get(pb, SLAPI_BIND_TARGET_SDN, &sdn);"
    },
    {
        "line": 64,
        "fullcodeline": "rc = slapi_dn_syntax_check(pb, rawdn, 1);"
    },
    {
        "line": 92,
        "fullcodeline": "if ( version < LDAP_VERSION3 ) {"
    },
    {
        "line": 104,
        "fullcodeline": "if ( ber_rc != LBER_ERROR ) {"
    },
    {
        "line": 120,
        "fullcodeline": "if ( version >= LDAP_VERSION3 ) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (cred.bv_len == 0) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (( err = get_ldapmessage_controls( pb, ber, &reqctrls ))"
    },
    {
        "line": 166,
        "fullcodeline": "log_bind_access (pb, dn?dn:\"empty\", method,"
    },
    {
        "line": 168,
        "fullcodeline": "send_ldap_result( pb, err, NULL, NULL, 0, NULL );"
    },
    {
        "line": 283,
        "fullcodeline": "if (strlen(saslmech) > SASL_MECHNAMEMAX) {"
    },
    {
        "line": 290,
        "fullcodeline": "if ( (pmech = supported) != NULL ) while (1) {"
    },
    {
        "line": 513,
        "fullcodeline": "if (cred.bv_len != 0) {"
    },
    {
        "line": 780,
        "fullcodeline": "send_ldap_result( pb, LDAP_UNWILLING_TO_PERFORM, NULL,"
    },
    {
        "line": 66,
        "fullcodeline": "op_shared_log_error_access(pb, \"BIND\", rawdn,"
    },
    {
        "line": 96,
        "fullcodeline": "log_bind_access (pb, dn?dn:\"empty\", method, version, saslmech, \"SASL credentials only in LDAPv3\");"
    },
    {
        "line": 97,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 121,
        "fullcodeline": "static char *kmsg ="
    },
    {
        "line": 124,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_ANY, kmsg, 0, 0, 0 );"
    },
    {
        "line": 125,
        "fullcodeline": "log_bind_access (pb, dn?dn:\"empty\", method, version, saslmech, kmsg);"
    },
    {
        "line": 126,
        "fullcodeline": "send_ldap_result( pb, LDAP_PROTOCOL_ERROR, NULL,"
    },
    {
        "line": 134,
        "fullcodeline": "slapi_ch_free_string(&cred.bv_val);"
    },
    {
        "line": 216,
        "fullcodeline": "if (method == LDAP_AUTH_SIMPLE"
    },
    {
        "line": 219,
        "fullcodeline": "&& pb->pb_conn->c_external_dn != NULL) {"
    },
    {
        "line": 221,
        "fullcodeline": "method = LDAP_AUTH_SASL;"
    },
    {
        "line": 222,
        "fullcodeline": "saslmech = slapi_ch_strdup (LDAP_SASL_EXTERNAL);"
    },
    {
        "line": 230,
        "fullcodeline": "if ((method == LDAP_AUTH_SIMPLE) &&"
    },
    {
        "line": 232,
        "fullcodeline": "(pb->pb_conn->c_external_dn != NULL)) {"
    },
    {
        "line": 234,
        "fullcodeline": "method = LDAP_AUTH_SASL;"
    },
    {
        "line": 235,
        "fullcodeline": "saslmech = slapi_ch_strdup (LDAP_SASL_EXTERNAL);"
    },
    {
        "line": 277,
        "fullcodeline": "if ( saslmech == NULL || *saslmech == '\\0' ) {"
    },
    {
        "line": 278,
        "fullcodeline": "send_ldap_result( pb, LDAP_AUTH_METHOD_NOT_SUPPORTED, NULL,"
    },
    {
        "line": 284,
        "fullcodeline": "send_ldap_result( pb, LDAP_AUTH_METHOD_NOT_SUPPORTED, NULL,"
    },
    {
        "line": 307,
        "fullcodeline": "ids_sasl_check_bind(pb);"
    },
    {
        "line": 308,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 315,
        "fullcodeline": "if (!strcasecmp (saslmech, LDAP_SASL_EXTERNAL)) {"
    },
    {
        "line": 378,
        "fullcodeline": "bind_credentials_set( pb->pb_conn,"
    },
    {
        "line": 385,
        "fullcodeline": "send_ldap_result( pb, LDAP_SUCCESS, NULL, NULL, 0, NULL );"
    },
    {
        "line": 387,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 403,
        "fullcodeline": "if (!minssf_exclude_rootdse && (pb->pb_conn->c_sasl_ssf < minssf) &&"
    },
    {
        "line": 405,
        "fullcodeline": "(pb->pb_conn->c_local_ssf < minssf)) {"
    },
    {
        "line": 406,
        "fullcodeline": "send_ldap_result(pb, LDAP_UNWILLING_TO_PERFORM, NULL,"
    },
    {
        "line": 414,
        "fullcodeline": "if (dn == NULL || *dn == '\\0') {"
    },
    {
        "line": 431,
        "fullcodeline": "bind_credentials_set( pb->pb_conn, SLAPD_AUTH_NONE,"
    },
    {
        "line": 516,
        "fullcodeline": "slapi_value_init_berval(&cv,&cred);"
    },
    {
        "line": 557,
        "fullcodeline": "if (plugin_call_plugins( pb, SLAPI_PLUGIN_PRE_BIND_FN ) == 0){"
    },
    {
        "line": 563,
        "fullcodeline": "send_ldap_result( pb, LDAP_SUCCESS, NULL, NULL, 0, NULL );"
    },
    {
        "line": 566,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 596,
        "fullcodeline": "if ( plugin_call_plugins( pb, SLAPI_PLUGIN_PRE_BIND_FN ) == 0 )  {"
    },
    {
        "line": 597,
        "fullcodeline": "int sdn_updated = 0;"
    },
    {
        "line": 598,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 602,
        "fullcodeline": "slapi_pblock_get(pb, SLAPI_BIND_TARGET_SDN, &pb_sdn);"
    },
    {
        "line": 654,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_PLUGIN, be->be_database );"
    },
    {
        "line": 655,
        "fullcodeline": "set_db_default_result_handlers(pb);"
    },
    {
        "line": 773,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_PLUGIN_OPRETURN, &rc );"
    },
    {
        "line": 774,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 107,
        "fullcodeline": "if (( ber_peek_tag( ber, &clen )) == LBER_OCTETSTRING ) {"
    },
    {
        "line": 217,
        "fullcodeline": "&& (config_get_force_sasl_external() ||"
    },
    {
        "line": 344,
        "fullcodeline": "if( NULL == pb->pb_conn->c_client_cert){"
    },
    {
        "line": 356,
        "fullcodeline": "if ( NULL == pb->pb_conn->c_external_dn ) {"
    },
    {
        "line": 404,
        "fullcodeline": "(pb->pb_conn->c_ssl_ssf < minssf) &&"
    },
    {
        "line": 422,
        "fullcodeline": "if (config_get_anon_access_switch() == SLAPD_ANON_ACCESS_OFF) {"
    },
    {
        "line": 536,
        "fullcodeline": "if ( is_root_dn_pw( slapi_sdn_get_ndn(sdn), &cv )) {"
    },
    {
        "line": 568,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, \"\", 0, NULL);"
    },
    {
        "line": 603,
        "fullcodeline": "if (!pb_sdn) {"
    },
    {
        "line": 777,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 108,
        "fullcodeline": "ber_rc = ber_scanf( ber, \"o}}\", &cred );"
    },
    {
        "line": 218,
        "fullcodeline": "((dn == NULL || *dn == '\\0') && cred.bv_len == 0))"
    },
    {
        "line": 301,
        "fullcodeline": "++pmech;"
    },
    {
        "line": 317,
        "fullcodeline": "if (plugin_call_plugins( pb, SLAPI_PLUGIN_PRE_BIND_FN ) != 0){"
    },
    {
        "line": 318,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, \"\", 0, NULL);"
    },
    {
        "line": 332,
        "fullcodeline": "if ( 0 == ( pb->pb_conn->c_flags & CONN_FLAG_SSL )) {"
    },
    {
        "line": 333,
        "fullcodeline": "send_ldap_result( pb, LDAP_INAPPROPRIATE_AUTH, NULL,"
    },
    {
        "line": 337,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 345,
        "fullcodeline": "send_ldap_result( pb, LDAP_INAPPROPRIATE_AUTH, NULL,"
    },
    {
        "line": 348,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 357,
        "fullcodeline": "send_ldap_result( pb, LDAP_INVALID_CREDENTIALS, NULL,"
    },
    {
        "line": 360,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 366,
        "fullcodeline": "bind_target_entry = get_entry(pb, pb->pb_conn->c_external_dn);"
    },
    {
        "line": 383,
        "fullcodeline": "slapi_add_auth_response_control( pb, pb->pb_conn->c_external_dn );"
    },
    {
        "line": 423,
        "fullcodeline": "send_ldap_result(pb, LDAP_INAPPROPRIATE_AUTH, NULL,"
    },
    {
        "line": 435,
        "fullcodeline": "if (plugin_call_plugins( pb, SLAPI_PLUGIN_PRE_BIND_FN ) == 0){"
    },
    {
        "line": 439,
        "fullcodeline": "send_ldap_result( pb, LDAP_SUCCESS, NULL, NULL, 0, NULL );"
    },
    {
        "line": 442,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 448,
        "fullcodeline": "} else if ( cred.bv_len == 0 ) {"
    },
    {
        "line": 526,
        "fullcodeline": "if (plugin_call_plugins(pb, SLAPI_PLUGIN_INTERNAL_PRE_BIND_FN) != 0){"
    },
    {
        "line": 527,
        "fullcodeline": "send_ldap_result( pb, LDAP_UNWILLING_TO_PERFORM, NULL,"
    },
    {
        "line": 540,
        "fullcodeline": "bind_credentials_set( pb->pb_conn, SLAPD_AUTH_SIMPLE, slapi_ch_strdup(slapi_sdn_get_ndn(sdn)),"
    },
    {
        "line": 559,
        "fullcodeline": "slapi_add_auth_response_control( pb,"
    },
    {
        "line": 604,
        "fullcodeline": "slapi_create_errormsg(errorbuf, sizeof(errorbuf), \"Pre-bind plug-in set NULL dn\\n\");"
    },
    {
        "line": 605,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, errorbuf, 0, NULL);"
    },
    {
        "line": 649,
        "fullcodeline": "if (! slapi_be_is_flag_set(be, SLAPI_BE_FLAG_REMOTE_DATA)) {"
    },
    {
        "line": 650,
        "fullcodeline": "bind_target_entry = get_entry(pb,  slapi_sdn_get_ndn(sdn));"
    },
    {
        "line": 651,
        "fullcodeline": "rc = slapi_check_account_lock ( pb, bind_target_entry, pw_response_requested, 1, 1);"
    },
    {
        "line": 656,
        "fullcodeline": "if ( (rc != 1) &&"
    },
    {
        "line": 657,
        "fullcodeline": "(auto_bind ||"
    },
    {
        "line": 661,
        "fullcodeline": "char* authtype = NULL;"
    },
    {
        "line": 768,
        "fullcodeline": "if ( rc == SLAPI_BIND_SUCCESS || rc == SLAPI_BIND_ANONYMOUS) {"
    },
    {
        "line": 769,
        "fullcodeline": "send_ldap_result( pb, LDAP_SUCCESS, NULL, NULL,"
    },
    {
        "line": 109,
        "fullcodeline": "if (cred.bv_len == 0) {"
    },
    {
        "line": 113,
        "fullcodeline": "ber_rc = ber_scanf( ber, \"}}\" );"
    },
    {
        "line": 291,
        "fullcodeline": "if (*pmech == NULL) {"
    },
    {
        "line": 367,
        "fullcodeline": "if ( bind_target_entry && slapi_check_account_lock(pb, bind_target_entry,"
    },
    {
        "line": 444,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, \"\", 0, NULL);"
    },
    {
        "line": 450,
        "fullcodeline": "slapi_counter_increment(g_get_global_snmp_vars()->ops_tbl.dsUnAuthBinds);"
    },
    {
        "line": 546,
        "fullcodeline": "send_ldap_result( pb, LDAP_INVALID_CREDENTIALS, NULL, NULL, 0, NULL );"
    },
    {
        "line": 658,
        "fullcodeline": "(((rc = (*be->be_bind)( pb )) == SLAPI_BIND_SUCCESS) ||"
    },
    {
        "line": 690,
        "fullcodeline": "if ( rc == SLAPI_BIND_SUCCESS ) {"
    },
    {
        "line": 110,
        "fullcodeline": "slapi_ch_free_string(&cred.bv_val);"
    },
    {
        "line": 297,
        "fullcodeline": "pmech = supported = NULL;"
    },
    {
        "line": 300,
        "fullcodeline": "if (!strcasecmp (saslmech, *pmech)) break;"
    },
    {
        "line": 370,
        "fullcodeline": "plugin_call_plugins( pb, SLAPI_PLUGIN_POST_BIND_FN );"
    },
    {
        "line": 437,
        "fullcodeline": "slapi_add_auth_response_control( pb, \"\" );"
    },
    {
        "line": 453,
        "fullcodeline": "if (config_get_anon_access_switch() != SLAPD_ANON_ACCESS_ON) {"
    },
    {
        "line": 561,
        "fullcodeline": "slapi_sdn_get_ndn(sdn));"
    },
    {
        "line": 659,
        "fullcodeline": "(rc == SLAPI_BIND_ANONYMOUS))) ) {"
    },
    {
        "line": 664,
        "fullcodeline": "rc = SLAPI_BIND_SUCCESS;"
    },
    {
        "line": 683,
        "fullcodeline": "PR_snprintf(authtypebuf, sizeof(authtypebuf), \"%s%s\", SLAPD_AUTH_SASL, saslmech);"
    },
    {
        "line": 684,
        "fullcodeline": "authtype = authtypebuf;"
    },
    {
        "line": 691,
        "fullcodeline": "int myrc = 0;"
    },
    {
        "line": 454,
        "fullcodeline": "send_ldap_result(pb, LDAP_INAPPROPRIATE_AUTH, NULL,"
    },
    {
        "line": 466,
        "fullcodeline": "send_ldap_result(pb, LDAP_UNWILLING_TO_PERFORM, NULL,"
    },
    {
        "line": 607,
        "fullcodeline": "} else if ((pb_sdn != sdn) || (sdn_updated = slapi_sdn_compare(original_sdn, pb_sdn))) {"
    },
    {
        "line": 612,
        "fullcodeline": "sdn = pb_sdn;"
    },
    {
        "line": 613,
        "fullcodeline": "dn = slapi_sdn_get_dn(sdn);"
    },
    {
        "line": 669,
        "fullcodeline": "if (cred.bv_len != 0) {"
    },
    {
        "line": 741,
        "fullcodeline": "bind_credentials_set(pb->pb_conn, authtype, NULL, NULL, NULL, NULL, NULL);"
    },
    {
        "line": 476,
        "fullcodeline": "int sasl_ssf = 0;"
    },
    {
        "line": 477,
        "fullcodeline": "int local_ssf = 0;"
    },
    {
        "line": 481,
        "fullcodeline": "conn = pb->pb_conn;"
    },
    {
        "line": 614,
        "fullcodeline": "if (!dn) {"
    },
    {
        "line": 670,
        "fullcodeline": "authtype = SLAPD_AUTH_SIMPLE;"
    },
    {
        "line": 713,
        "fullcodeline": "bind_credentials_set(pb->pb_conn, authtype,"
    },
    {
        "line": 733,
        "fullcodeline": "slapi_add_auth_response_control(pb, slapi_sdn_get_ndn(sdn));"
    },
    {
        "line": 735,
        "fullcodeline": "if (-1 == myrc) {"
    },
    {
        "line": 615,
        "fullcodeline": "slapi_create_errormsg(errorbuf, sizeof(errorbuf), \"Pre-bind plug-in set corrupted dn\\n\");"
    },
    {
        "line": 616,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, errorbuf, 0, NULL);"
    },
    {
        "line": 624,
        "fullcodeline": "be = slapi_be_select_exact(sdn);"
    },
    {
        "line": 678,
        "fullcodeline": "authtype = SLAPD_AUTH_NONE;"
    },
    {
        "line": 714,
        "fullcodeline": "slapi_ch_strdup(slapi_sdn_get_ndn(sdn)),"
    },
    {
        "line": 744,
        "fullcodeline": "slapi_add_auth_response_control(pb, \"\");"
    },
    {
        "line": 482,
        "fullcodeline": "if ( slapi_pblock_get(pb, SLAPI_CONN_SASL_SSF, &sasl_ssf) != 0) {"
    },
    {
        "line": 483,
        "fullcodeline": "slapi_log_error( SLAPI_LOG_PLUGIN, \"do_bind\","
    },
    {
        "line": 485,
        "fullcodeline": "sasl_ssf = 0;"
    },
    {
        "line": 488,
        "fullcodeline": "if ( slapi_pblock_get(pb, SLAPI_CONN_LOCAL_SSF, &local_ssf) != 0) {"
    },
    {
        "line": 491,
        "fullcodeline": "local_ssf = 0;"
    },
    {
        "line": 494,
        "fullcodeline": "if (((conn->c_flags & CONN_FLAG_SSL) != CONN_FLAG_SSL) &&"
    },
    {
        "line": 495,
        "fullcodeline": "(sasl_ssf <= 1) && (local_ssf <= 1)) {"
    },
    {
        "line": 496,
        "fullcodeline": "send_ldap_result(pb, LDAP_CONFIDENTIALITY_REQUIRED, NULL,"
    },
    {
        "line": 620,
        "fullcodeline": "sdn_updated = slapi_sdn_compare(original_sdn, sdn);"
    },
    {
        "line": 699,
        "fullcodeline": "if (!slapi_be_is_flag_set(be, SLAPI_BE_FLAG_REMOTE_DATA) &&"
    },
    {
        "line": 700,
        "fullcodeline": "!bind_target_entry) {"
    },
    {
        "line": 701,
        "fullcodeline": "bind_target_entry = get_entry(pb, slapi_sdn_get_ndn(sdn));"
    },
    {
        "line": 716,
        "fullcodeline": "if (!slapi_be_is_flag_set(be, SLAPI_BE_FLAG_REMOTE_DATA)) {"
    },
    {
        "line": 719,
        "fullcodeline": "myrc = need_new_pw(pb, &t, bind_target_entry, pw_response_requested);"
    },
    {
        "line": 626,
        "fullcodeline": "slapi_be_Rlock(be);"
    },
    {
        "line": 627,
        "fullcodeline": "slapi_pblock_set( pb, SLAPI_BACKEND, be );"
    },
    {
        "line": 629,
        "fullcodeline": "slapi_create_errormsg(errorbuf, sizeof(errorbuf), \"No matching backend for %s\\n\", dn);"
    },
    {
        "line": 630,
        "fullcodeline": "send_ldap_result(pb, LDAP_OPERATIONS_ERROR, NULL, errorbuf, 0, NULL);"
    },
    {
        "line": 703,
        "fullcodeline": "myrc = slapi_check_account_lock(pb, bind_target_entry,"
    },
    {
        "line": 705,
        "fullcodeline": "if (1 == myrc) { /* account is locked */"
    },
    {
        "line": 709,
        "fullcodeline": "send_ldap_result(pb, LDAP_NO_SUCH_OBJECT, NULL, \"\", 0, NULL);"
    },
    {
        "line": 722,
        "fullcodeline": "(void)slapi_add_pwd_control(pb, LDAP_CONTROL_PWEXPIRED, 0);"
    },
    {
        "line": 725,
        "fullcodeline": "(void)slapi_add_pwd_control(pb, LDAP_CONTROL_PWEXPIRING, t);"
    }
]