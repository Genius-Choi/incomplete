[
    {
        "line": 12,
        "fullcodeline": "int\tmanagedsait = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "ldbm_instance *inst = (ldbm_instance *) be->be_instance_info;"
    },
    {
        "line": 15,
        "fullcodeline": "size_t tries = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "int isroot = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "char *errbuf = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "slapi_pblock_get(pb, SLAPI_MANAGEDSAIT, &managedsait);"
    },
    {
        "line": 22,
        "fullcodeline": "slapi_pblock_get(pb, SLAPI_REQUESTOR_ISROOT, &isroot);"
    },
    {
        "line": 23,
        "fullcodeline": "slapi_pblock_get(pb, SLAPI_OPERATION_TYPE, &op_type);"
    },
    {
        "line": 25,
        "fullcodeline": "while ( (tries < LDBM_CACHE_RETRY_COUNT) &&"
    },
    {
        "line": 166,
        "fullcodeline": "slapi_sdn_get_dn(sdn), 0, 0 );"
    },
    {
        "line": 26,
        "fullcodeline": "(e = dn2entry_ext( be, sdn, txn, flags & TOMBSTONE_INCLUDED, &err ))"
    },
    {
        "line": 63,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_ARGS,"
    },
    {
        "line": 65,
        "fullcodeline": "CACHE_RETURN( &inst->inst_cache, &e );"
    },
    {
        "line": 66,
        "fullcodeline": "tries++;"
    },
    {
        "line": 69,
        "fullcodeline": "LDAPDebug( LDAP_DEBUG_ANY,\"find_entry_internal_dn retry count exceeded (%s)\\n\", slapi_sdn_get_dn(sdn), 0, 0 );"
    },
    {
        "line": 78,
        "fullcodeline": "if (!(flags & FE_REALLY_INTERNAL)) {"
    },
    {
        "line": 81,
        "fullcodeline": "slapi_sdn_init(&ancestorsdn);"
    },
    {
        "line": 82,
        "fullcodeline": "me = dn2ancestor(pb->pb_backend, sdn, &ancestorsdn, txn, &err, 1 /* allow_suffix */);"
    },
    {
        "line": 36,
        "fullcodeline": "if ( !managedsait && !(flags & FE_REALLY_INTERNAL)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if ( !lock || cache_lock_entry( &inst->inst_cache, e ) == 0 ) {"
    },
    {
        "line": 64,
        "fullcodeline": "\"   find_entry_internal_dn retrying (%s)\\n\", slapi_sdn_get_dn(sdn), 0, 0 );"
    },
    {
        "line": 83,
        "fullcodeline": "if ( !managedsait && me != NULL ) {"
    },
    {
        "line": 98,
        "fullcodeline": "if ((0 == err) || (DB_NOTFOUND == err)) {"
    },
    {
        "line": 38,
        "fullcodeline": "if(check_entry_for_referral(pb, e->ep_entry, NULL, \"find_entry_internal_dn\"))"
    },
    {
        "line": 56,
        "fullcodeline": "\"<= find_entry_internal_dn found (%s)\\n\", slapi_sdn_get_dn(sdn), 0, 0 );"
    },
    {
        "line": 85,
        "fullcodeline": "if(check_entry_for_referral(pb, me->ep_entry, (char*)slapi_sdn_get_dn(&ancestorsdn), \"find_entry_internal_dn\"))"
    },
    {
        "line": 99,
        "fullcodeline": "if (me && !isroot) {"
    },
    {
        "line": 153,
        "fullcodeline": "slapi_send_ldap_result( pb, ( LDAP_INVALID_DN_SYNTAX == err ) ?"
    },
    {
        "line": 40,
        "fullcodeline": "CACHE_RETURN( &inst->inst_cache, &e );"
    },
    {
        "line": 101,
        "fullcodeline": "int acl_type = -1;"
    },
    {
        "line": 102,
        "fullcodeline": "int return_err = LDAP_NO_SUCH_OBJECT;"
    },
    {
        "line": 103,
        "fullcodeline": "err = LDAP_SUCCESS;"
    },
    {
        "line": 132,
        "fullcodeline": "if (acl_type > 0) {"
    },
    {
        "line": 149,
        "fullcodeline": "slapi_send_ldap_result( pb, LDAP_NO_SUCH_OBJECT,"
    },
    {
        "line": 155,
        "fullcodeline": "(char*)slapi_sdn_get_dn(&ancestorsdn), NULL, 0, NULL );"
    },
    {
        "line": 42,
        "fullcodeline": "*rc = FE_RC_SENT_RESULT;"
    },
    {
        "line": 106,
        "fullcodeline": "acl_type = SLAPI_ACL_ADD;"
    },
    {
        "line": 107,
        "fullcodeline": "return_err = LDAP_INSUFFICIENT_ACCESS;"
    },
    {
        "line": 110,
        "fullcodeline": "acl_type = SLAPI_ACL_DELETE;"
    },
    {
        "line": 111,
        "fullcodeline": "return_err = LDAP_INSUFFICIENT_ACCESS;"
    },
    {
        "line": 114,
        "fullcodeline": "acl_type = SLAPI_ACL_MODDN;"
    },
    {
        "line": 115,
        "fullcodeline": "return_err = LDAP_INSUFFICIENT_ACCESS;"
    },
    {
        "line": 118,
        "fullcodeline": "acl_type = SLAPI_ACL_WRITE;"
    },
    {
        "line": 119,
        "fullcodeline": "return_err = LDAP_INSUFFICIENT_ACCESS;"
    },
    {
        "line": 123,
        "fullcodeline": "return_err = LDAP_SUCCESS;"
    },
    {
        "line": 124,
        "fullcodeline": "acl_type = SLAPI_ACL_READ;"
    },
    {
        "line": 127,
        "fullcodeline": "acl_type = -1; /* skip acl check. acl is not set up for bind. */"
    },
    {
        "line": 128,
        "fullcodeline": "return_err = LDAP_INVALID_CREDENTIALS;"
    },
    {
        "line": 129,
        "fullcodeline": "slapi_pblock_set(pb, SLAPI_PB_RESULT_TEXT, \"No such entry\");"
    },
    {
        "line": 133,
        "fullcodeline": "err = plugin_call_acl_plugin(pb, me->ep_entry, NULL, NULL, acl_type,"
    },
    {
        "line": 136,
        "fullcodeline": "if (((acl_type > 0) && err) || (op_type == SLAPI_OPERATION_BIND)) {"
    },
    {
        "line": 143,
        "fullcodeline": "slapi_send_ldap_result(pb, return_err, NULL, NULL, 0, NULL);"
    },
    {
        "line": 145,
        "fullcodeline": "slapi_send_ldap_result(pb, LDAP_NO_SUCH_OBJECT,"
    },
    {
        "line": 150,
        "fullcodeline": "(char*)slapi_sdn_get_dn(&ancestorsdn), NULL, 0, NULL);"
    },
    {
        "line": 146,
        "fullcodeline": "(char*)slapi_sdn_get_dn(&ancestorsdn), NULL, 0, NULL);"
    }
]