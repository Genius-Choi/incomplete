[
    {
        "line": 5,
        "fullcodeline": "struct lys_type *ret = NULL, *t;"
    },
    {
        "line": 8,
        "fullcodeline": "int c, len, found = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "uint64_t unum, uind, u = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "const char *ptr, *value = *value_, *itemname, *old_val_str = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "struct lys_type_bit **bits = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "struct ly_ctx *ctx = type->parent->module->ctx;"
    },
    {
        "line": 21,
        "fullcodeline": "assert(leaf || attr);"
    },
    {
        "line": 734,
        "fullcodeline": "if (store && type->der && type->der->module) {"
    },
    {
        "line": 24,
        "fullcodeline": "assert(!attr);"
    },
    {
        "line": 28,
        "fullcodeline": "val = &leaf->value;"
    },
    {
        "line": 29,
        "fullcodeline": "val_type = &leaf->value_type;"
    },
    {
        "line": 30,
        "fullcodeline": "val_flags = &leaf->value_flags;"
    },
    {
        "line": 31,
        "fullcodeline": "contextnode = (struct lyd_node *)leaf;"
    },
    {
        "line": 32,
        "fullcodeline": "itemname = leaf->schema->name;"
    },
    {
        "line": 47,
        "fullcodeline": "old_val_str = lydict_insert(ctx, *value_, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "lyd_free_value(*val, *val_type, *val_flags, type, old_val_str, &old_val, &old_val_type, &old_val_flags);"
    },
    {
        "line": 49,
        "fullcodeline": "*val_flags &= ~LY_VALUE_UNRES;"
    },
    {
        "line": 55,
        "fullcodeline": "unum = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "ptr = NULL;"
    },
    {
        "line": 103,
        "fullcodeline": "len = ((unum / 4) * 3) - found;"
    },
    {
        "line": 144,
        "fullcodeline": "c = 0;"
    },
    {
        "line": 145,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 214,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_BITS, value_, bits, &type->info.bits.count);"
    },
    {
        "line": 258,
        "fullcodeline": "ptr = value;"
    },
    {
        "line": 272,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_DEC64, value_, &num, &type->info.dec64.dig);"
    },
    {
        "line": 385,
        "fullcodeline": "ident = resolve_identref(type, value, contextnode, local_mod, dflt);"
    },
    {
        "line": 400,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_IDENT, &value, (void*)lys_main_module(local_mod)->name, NULL);"
    },
    {
        "line": 403,
        "fullcodeline": "lydict_remove(ctx, *value_);"
    },
    {
        "line": 404,
        "fullcodeline": "*value_ = value;"
    },
    {
        "line": 490,
        "fullcodeline": "t = lyp_parse_value(&type->info.lref.target->type, value_, xml, leaf, attr, NULL, store, dflt, trusted);"
    },
    {
        "line": 491,
        "fullcodeline": "value = *value_; /* refresh possibly changed value */"
    },
    {
        "line": 502,
        "fullcodeline": "type = t;"
    },
    {
        "line": 551,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_INT8, value_, &num, NULL);"
    },
    {
        "line": 566,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_INT16, value_, &num, NULL);"
    },
    {
        "line": 581,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_INT32, value_, &num, NULL);"
    },
    {
        "line": 597,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_INT64, value_, &num, NULL);"
    },
    {
        "line": 612,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_UINT8, value_, &unum, NULL);"
    },
    {
        "line": 627,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_UINT16, value_, &unum, NULL);"
    },
    {
        "line": 642,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_UINT32, value_, &unum, NULL);"
    },
    {
        "line": 657,
        "fullcodeline": "make_canonical(ctx, LY_TYPE_UINT64, value_, &unum, NULL);"
    },
    {
        "line": 689,
        "fullcodeline": "t = NULL;"
    },
    {
        "line": 690,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 693,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 712,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 729,
        "fullcodeline": "LOGINT(ctx);"
    },
    {
        "line": 735,
        "fullcodeline": "c = lytype_store(type->der->module, type->der->name, value_, val);"
    },
    {
        "line": 745,
        "fullcodeline": "lyd_free_value(old_val, old_val_type, old_val_flags, type, old_val_str, NULL, NULL, NULL);"
    },
    {
        "line": 746,
        "fullcodeline": "lydict_remove(ctx, old_val_str);"
    },
    {
        "line": 25,
        "fullcodeline": "if (!local_mod) {"
    },
    {
        "line": 34,
        "fullcodeline": "assert(!leaf);"
    },
    {
        "line": 38,
        "fullcodeline": "val = &attr->value;"
    },
    {
        "line": 39,
        "fullcodeline": "val_type = &attr->value_type;"
    },
    {
        "line": 40,
        "fullcodeline": "val_flags = &attr->value_flags;"
    },
    {
        "line": 41,
        "fullcodeline": "contextnode = attr->parent;"
    },
    {
        "line": 42,
        "fullcodeline": "itemname = attr->name;"
    },
    {
        "line": 91,
        "fullcodeline": "if (unum & 3) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (!trusted && validate_length_range(0, len, 0, 0, 0, type, value, contextnode)) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (value && (ptr != value || ptr[u] != '\\0')) {"
    },
    {
        "line": 126,
        "fullcodeline": "for (; !type->info.bits.count; type = &type->der->type);"
    },
    {
        "line": 128,
        "fullcodeline": "if (value || store) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 226,
        "fullcodeline": "if (value && !strcmp(value, \"true\")) {"
    },
    {
        "line": 249,
        "fullcodeline": "if (!value || !value[0]) {"
    },
    {
        "line": 259,
        "fullcodeline": "if (parse_range_dec64(&ptr, type->info.dec64.dig, &num) || ptr[0]) {"
    },
    {
        "line": 268,
        "fullcodeline": "if (!trusted && validate_length_range(2, 0, 0, num, type->info.dec64.dig, type, value, contextnode)) {"
    },
    {
        "line": 282,
        "fullcodeline": "if (value && value[0]) {"
    },
    {
        "line": 300,
        "fullcodeline": "for (; !type->info.enums.count; type = &type->der->type);"
    },
    {
        "line": 303,
        "fullcodeline": "for (i = found = 0; i < type->info.enums.count; i++) {"
    },
    {
        "line": 328,
        "fullcodeline": "if (!found) {"
    },
    {
        "line": 339,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 386,
        "fullcodeline": "if (!ident) {"
    },
    {
        "line": 408,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 466,
        "fullcodeline": "if (!ly_strequal(value, *value_, 1)) {"
    },
    {
        "line": 479,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 492,
        "fullcodeline": "if (!t) {"
    },
    {
        "line": 506,
        "fullcodeline": "if (!trusted && validate_length_range(0, (value ? ly_strlen_utf8(value) : 0), 0, 0, 0, type, value, contextnode)) {"
    },
    {
        "line": 510,
        "fullcodeline": "if (!trusted && validate_pattern(ctx, value, type, contextnode)) {"
    },
    {
        "line": 516,
        "fullcodeline": "tpdf->module && (strcmp(tpdf->name, \"xpath1.0\") || strcmp(tpdf->module->name, \"ietf-yang-types\"));"
    },
    {
        "line": 517,
        "fullcodeline": "tpdf = tpdf->type.der);"
    },
    {
        "line": 518,
        "fullcodeline": "if (tpdf->module && xml) {"
    },
    {
        "line": 546,
        "fullcodeline": "if (parse_int(value, __INT64_C(-128), __INT64_C(127), dflt ? 0 : 10, &num, contextnode)"
    },
    {
        "line": 561,
        "fullcodeline": "if (parse_int(value, __INT64_C(-32768), __INT64_C(32767), dflt ? 0 : 10, &num, contextnode)"
    },
    {
        "line": 576,
        "fullcodeline": "if (parse_int(value, __INT64_C(-2147483648), __INT64_C(2147483647), dflt ? 0 : 10, &num, contextnode)"
    },
    {
        "line": 591,
        "fullcodeline": "if (parse_int(value, __INT64_C(-9223372036854775807) - __INT64_C(1), __INT64_C(9223372036854775807),"
    },
    {
        "line": 607,
        "fullcodeline": "if (parse_uint(value, __UINT64_C(255), dflt ? 0 : 10, &unum, contextnode)"
    },
    {
        "line": 622,
        "fullcodeline": "if (parse_uint(value, __UINT64_C(65535), dflt ? 0 : 10, &unum, contextnode)"
    },
    {
        "line": 637,
        "fullcodeline": "if (parse_uint(value, __UINT64_C(4294967295), dflt ? 0 : 10, &unum, contextnode)"
    },
    {
        "line": 652,
        "fullcodeline": "if (parse_uint(value, __UINT64_C(18446744073709551615), dflt ? 0 : 10, &unum, contextnode)"
    },
    {
        "line": 695,
        "fullcodeline": "while ((t = lyp_get_next_union_type(type, t, &found))) {"
    },
    {
        "line": 714,
        "fullcodeline": "if (!t) {"
    },
    {
        "line": 736,
        "fullcodeline": "if (c == -1) {"
    },
    {
        "line": 26,
        "fullcodeline": "local_mod = leaf->schema->module;"
    },
    {
        "line": 35,
        "fullcodeline": "if (!local_mod) {"
    },
    {
        "line": 60,
        "fullcodeline": "ptr = &value[uind];"
    },
    {
        "line": 61,
        "fullcodeline": "u = strlen(ptr);"
    },
    {
        "line": 65,
        "fullcodeline": "unum = u;"
    },
    {
        "line": 98,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL, \"Base64 encoded value length must be divisible by 4.\");"
    },
    {
        "line": 110,
        "fullcodeline": "ptr = lydict_insert(ctx, ptr, u);"
    },
    {
        "line": 111,
        "fullcodeline": "lydict_remove(ctx, *value_);"
    },
    {
        "line": 112,
        "fullcodeline": "*value_ = ptr;"
    },
    {
        "line": 117,
        "fullcodeline": "val->binary = value;"
    },
    {
        "line": 118,
        "fullcodeline": "*val_type = LY_TYPE_BINARY;"
    },
    {
        "line": 130,
        "fullcodeline": "bits = calloc(type->info.bits.count, sizeof *bits);"
    },
    {
        "line": 131,
        "fullcodeline": "LY_CHECK_ERR_GOTO(!bits, LOGMEM(ctx), error);"
    },
    {
        "line": 160,
        "fullcodeline": "c = c - len;"
    },
    {
        "line": 211,
        "fullcodeline": "c = c + len;"
    },
    {
        "line": 218,
        "fullcodeline": "val->bit = bits;"
    },
    {
        "line": 219,
        "fullcodeline": "*val_type = LY_TYPE_BITS;"
    },
    {
        "line": 244,
        "fullcodeline": "*val_type = LY_TYPE_BOOL;"
    },
    {
        "line": 276,
        "fullcodeline": "val->dec64 = num;"
    },
    {
        "line": 277,
        "fullcodeline": "*val_type = LY_TYPE_DEC64;"
    },
    {
        "line": 292,
        "fullcodeline": "*val_type = LY_TYPE_EMPTY;"
    },
    {
        "line": 349,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 351,
        "fullcodeline": "value = transform_xml2json(ctx, value, xml, 0, 0);"
    },
    {
        "line": 352,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 387,
        "fullcodeline": "lydict_remove(ctx, value);"
    },
    {
        "line": 397,
        "fullcodeline": "type->parent->flags |= LYS_DFLTJSON;"
    },
    {
        "line": 418,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 420,
        "fullcodeline": "value = transform_xml2json(ctx, value, xml, 1, 1);"
    },
    {
        "line": 421,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 461,
        "fullcodeline": "val->instance = NULL;"
    },
    {
        "line": 462,
        "fullcodeline": "*val_type = LY_TYPE_INST;"
    },
    {
        "line": 463,
        "fullcodeline": "*val_flags |= LY_VALUE_UNRES;"
    },
    {
        "line": 468,
        "fullcodeline": "lydict_remove(ctx, *value_);"
    },
    {
        "line": 469,
        "fullcodeline": "*value_ = value;"
    },
    {
        "line": 499,
        "fullcodeline": "*val_flags |= LY_VALUE_UNRES;"
    },
    {
        "line": 515,
        "fullcodeline": "for (tpdf = type->der;"
    },
    {
        "line": 520,
        "fullcodeline": "value = transform_xml2json(ctx, value ? value : \"\", xml, 1, 1);"
    },
    {
        "line": 540,
        "fullcodeline": "val->string = value;"
    },
    {
        "line": 541,
        "fullcodeline": "*val_type = LY_TYPE_STRING;"
    },
    {
        "line": 547,
        "fullcodeline": "|| (!trusted && validate_length_range(1, 0, num, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 555,
        "fullcodeline": "val->int8 = (int8_t)num;"
    },
    {
        "line": 556,
        "fullcodeline": "*val_type = LY_TYPE_INT8;"
    },
    {
        "line": 562,
        "fullcodeline": "|| (!trusted && validate_length_range(1, 0, num, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 570,
        "fullcodeline": "val->int16 = (int16_t)num;"
    },
    {
        "line": 571,
        "fullcodeline": "*val_type = LY_TYPE_INT16;"
    },
    {
        "line": 577,
        "fullcodeline": "|| (!trusted && validate_length_range(1, 0, num, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 585,
        "fullcodeline": "val->int32 = (int32_t)num;"
    },
    {
        "line": 586,
        "fullcodeline": "*val_type = LY_TYPE_INT32;"
    },
    {
        "line": 593,
        "fullcodeline": "|| (!trusted && validate_length_range(1, 0, num, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 601,
        "fullcodeline": "val->int64 = num;"
    },
    {
        "line": 602,
        "fullcodeline": "*val_type = LY_TYPE_INT64;"
    },
    {
        "line": 608,
        "fullcodeline": "|| (!trusted && validate_length_range(0, unum, 0, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 616,
        "fullcodeline": "val->uint8 = (uint8_t)unum;"
    },
    {
        "line": 617,
        "fullcodeline": "*val_type = LY_TYPE_UINT8;"
    },
    {
        "line": 623,
        "fullcodeline": "|| (!trusted && validate_length_range(0, unum, 0, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 631,
        "fullcodeline": "val->uint16 = (uint16_t)unum;"
    },
    {
        "line": 632,
        "fullcodeline": "*val_type = LY_TYPE_UINT16;"
    },
    {
        "line": 638,
        "fullcodeline": "|| (!trusted && validate_length_range(0, unum, 0, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 646,
        "fullcodeline": "val->uint32 = (uint32_t)unum;"
    },
    {
        "line": 647,
        "fullcodeline": "*val_type = LY_TYPE_UINT32;"
    },
    {
        "line": 653,
        "fullcodeline": "|| (!trusted && validate_length_range(0, unum, 0, 0, 0, type, value, contextnode))) {"
    },
    {
        "line": 661,
        "fullcodeline": "val->uint64 = unum;"
    },
    {
        "line": 662,
        "fullcodeline": "*val_type = LY_TYPE_UINT64;"
    },
    {
        "line": 669,
        "fullcodeline": "memset(val, 0, sizeof(lyd_val));"
    },
    {
        "line": 670,
        "fullcodeline": "*val_type = LY_TYPE_UNION;"
    },
    {
        "line": 696,
        "fullcodeline": "found = 0;"
    },
    {
        "line": 697,
        "fullcodeline": "ret = lyp_parse_value(t, value_, xml, leaf, attr, NULL, store, dflt, 0);"
    },
    {
        "line": 36,
        "fullcodeline": "local_mod = attr->annotation->module;"
    },
    {
        "line": 59,
        "fullcodeline": "for (uind = 0; isspace(value[uind]); ++uind);"
    },
    {
        "line": 62,
        "fullcodeline": "while (u && isspace(ptr[u - 1])) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (uind = 0; uind < u; ++uind) {"
    },
    {
        "line": 148,
        "fullcodeline": "while (isspace(value[c])) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (!value[c]) {"
    },
    {
        "line": 157,
        "fullcodeline": "for (len = 0; value[c] && !isspace(value[c]); c++, len++);"
    },
    {
        "line": 163,
        "fullcodeline": "for (found = i = 0; i < type->info.bits.count; i++) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (!found) {"
    },
    {
        "line": 221,
        "fullcodeline": "free(bits);"
    },
    {
        "line": 304,
        "fullcodeline": "if (value && !strcmp(value, type->info.enums.enm[i].name)) {"
    },
    {
        "line": 353,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 364,
        "fullcodeline": "if (!strchr(value, ':') && xml->ns->prefix) {"
    },
    {
        "line": 422,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 521,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 531,
        "fullcodeline": "if (!ly_strequal(value, *value_, 1)) {"
    },
    {
        "line": 592,
        "fullcodeline": "dflt ? 0 : 10, &num, contextnode)"
    },
    {
        "line": 63,
        "fullcodeline": "--u;"
    },
    {
        "line": 94,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 138,
        "fullcodeline": "val->bit = bits;"
    },
    {
        "line": 139,
        "fullcodeline": "*val_type = LY_TYPE_BITS;"
    },
    {
        "line": 149,
        "fullcodeline": "c++;"
    },
    {
        "line": 228,
        "fullcodeline": "val->bln = 1;"
    },
    {
        "line": 230,
        "fullcodeline": "} else if (!value || strcmp(value, \"false\")) {"
    },
    {
        "line": 251,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, \"\", itemname);"
    },
    {
        "line": 261,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 284,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 323,
        "fullcodeline": "found = 1;"
    },
    {
        "line": 330,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value ? value : \"\", itemname);"
    },
    {
        "line": 341,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, \"\", itemname);"
    },
    {
        "line": 365,
        "fullcodeline": "value = ident_val_add_module_prefix(value, xml, ctx);"
    },
    {
        "line": 410,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, \"\", itemname);"
    },
    {
        "line": 473,
        "fullcodeline": "type->parent->flags |= LYS_DFLTJSON;"
    },
    {
        "line": 481,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, \"\", itemname);"
    },
    {
        "line": 533,
        "fullcodeline": "lydict_remove(ctx, *value_);"
    },
    {
        "line": 534,
        "fullcodeline": "*value_ = value;"
    },
    {
        "line": 678,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 679,
        "fullcodeline": "val->string = transform_xml2json(ctx, value, xml, 1, 1);"
    },
    {
        "line": 680,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 700,
        "fullcodeline": "type = ret;"
    },
    {
        "line": 706,
        "fullcodeline": "lyd_free_value(*val, *val_type, *val_flags, t, *value_, NULL, NULL, NULL);"
    },
    {
        "line": 707,
        "fullcodeline": "memset(val, 0, sizeof(lyd_val));"
    },
    {
        "line": 720,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, *value_ ? *value_ : \"\", itemname);"
    },
    {
        "line": 738,
        "fullcodeline": "} else if (!c) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (ptr[uind] == '\\n') {"
    },
    {
        "line": 96,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 164,
        "fullcodeline": "if (!strncmp(type->info.bits.bit[i].name, &value[c], len) && !type->info.bits.bit[i].name[len]) {"
    },
    {
        "line": 253,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, \"\");"
    },
    {
        "line": 263,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 286,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 306,
        "fullcodeline": "for (j = 0; !trusted && (j < type->info.enums.enm[i].iffeature_size); j++) {"
    },
    {
        "line": 332,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value ? value : \"\");"
    },
    {
        "line": 343,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, \"\");"
    },
    {
        "line": 366,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 371,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 374,
        "fullcodeline": "value = transform_schema2json(local_mod, value);"
    },
    {
        "line": 375,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 391,
        "fullcodeline": "val->ident = ident;"
    },
    {
        "line": 392,
        "fullcodeline": "*val_type = LY_TYPE_IDENT;"
    },
    {
        "line": 412,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, \"\");"
    },
    {
        "line": 437,
        "fullcodeline": "ly_ilo_change(NULL, ILO_IGNORE, &prev_ilo, NULL);"
    },
    {
        "line": 441,
        "fullcodeline": "value = transform_schema2json(local_mod, value);"
    },
    {
        "line": 451,
        "fullcodeline": "ly_ilo_restore(NULL, prev_ilo, NULL, 0);"
    },
    {
        "line": 483,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, \"\");"
    },
    {
        "line": 681,
        "fullcodeline": "if (!val->string) {"
    },
    {
        "line": 722,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, *value_);"
    },
    {
        "line": 739,
        "fullcodeline": "*val_flags |= LY_VALUE_USER;"
    },
    {
        "line": 68,
        "fullcodeline": "unum--;"
    },
    {
        "line": 193,
        "fullcodeline": "bits[i] = &type->info.bits.bit[i];"
    },
    {
        "line": 196,
        "fullcodeline": "found = 1;"
    },
    {
        "line": 204,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 320,
        "fullcodeline": "val->enm = &type->info.enums.enm[i];"
    },
    {
        "line": 321,
        "fullcodeline": "*val_type = LY_TYPE_ENUM;"
    },
    {
        "line": 356,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, *value_, itemname);"
    },
    {
        "line": 376,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 381,
        "fullcodeline": "value = lydict_insert(ctx, *value_, 0);"
    },
    {
        "line": 425,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, *value_, itemname);"
    },
    {
        "line": 430,
        "fullcodeline": "} else if (ly_strequal(value, *value_, 1)) {"
    },
    {
        "line": 442,
        "fullcodeline": "if (!value) {"
    },
    {
        "line": 524,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, *value_, itemname);"
    },
    {
        "line": 683,
        "fullcodeline": "val->string = lydict_insert(ctx, value, 0);"
    },
    {
        "line": 166,
        "fullcodeline": "for (j = 0; !trusted && (j < type->info.bits.bit[i].iffeature_size); j++) {"
    },
    {
        "line": 206,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 232,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value ? value : \"\", itemname);"
    },
    {
        "line": 307,
        "fullcodeline": "if (!resolve_iffeature(&type->info.enums.enm[i].iffeature[j])) {"
    },
    {
        "line": 358,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, *value_);"
    },
    {
        "line": 378,
        "fullcodeline": "value = lydict_insert(ctx, *value_, 0);"
    },
    {
        "line": 427,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, *value_);"
    },
    {
        "line": 433,
        "fullcodeline": "lydict_remove(ctx, value);"
    },
    {
        "line": 444,
        "fullcodeline": "value = *value_;"
    },
    {
        "line": 453,
        "fullcodeline": "if (make_canonical(ctx, LY_TYPE_INST, &value, NULL, NULL)) {"
    },
    {
        "line": 526,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, *value_);"
    },
    {
        "line": 69,
        "fullcodeline": "} else if ((ptr[uind] < '/' && ptr[uind] != '+') ||"
    },
    {
        "line": 187,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL, \"Bit \\\"%s\\\" used multiple times.\","
    },
    {
        "line": 234,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value ? value : \"\");"
    },
    {
        "line": 239,
        "fullcodeline": "val->bln = 0;"
    },
    {
        "line": 313,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL, \"Enum \\\"%s\\\" is disabled by its %d. if-feature condition.\","
    },
    {
        "line": 455,
        "fullcodeline": "*value_ = value;"
    },
    {
        "line": 71,
        "fullcodeline": "(ptr[uind] > 'Z' && ptr[uind] < 'a') || ptr[uind] > 'z') {"
    },
    {
        "line": 167,
        "fullcodeline": "if (!resolve_iffeature(&type->info.bits.bit[i].iffeature[j])) {"
    },
    {
        "line": 445,
        "fullcodeline": "} else if (ly_strequal(value, *value_, 1)) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (ptr[uind] == '=') {"
    },
    {
        "line": 81,
        "fullcodeline": "if (!found) {"
    },
    {
        "line": 173,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL,"
    },
    {
        "line": 183,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 309,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 448,
        "fullcodeline": "lydict_remove(ctx, value);"
    },
    {
        "line": 70,
        "fullcodeline": "(ptr[uind] > '9' && ptr[uind] < 'A') ||"
    },
    {
        "line": 83,
        "fullcodeline": "LOGVAL(ctx, LYE_INCHAR, LY_VLOG_LYD, contextnode, ptr[uind], &ptr[uind]);"
    },
    {
        "line": 84,
        "fullcodeline": "LOGVAL(ctx, LYE_SPEC, LY_VLOG_PREV, NULL, \"Invalid Base64 character.\");"
    },
    {
        "line": 185,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 311,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 74,
        "fullcodeline": "if (uind == u - 2 && ptr[uind + 1] == '=') {"
    },
    {
        "line": 169,
        "fullcodeline": "LOGVAL(ctx, LYE_INVAL, LY_VLOG_LYD, contextnode, value, itemname);"
    },
    {
        "line": 75,
        "fullcodeline": "found = 2;"
    },
    {
        "line": 76,
        "fullcodeline": "uind++;"
    },
    {
        "line": 171,
        "fullcodeline": "LOGVAL(ctx, LYE_INMETA, LY_VLOG_LYD, contextnode, \"<none>\", itemname, value);"
    },
    {
        "line": 77,
        "fullcodeline": "} else if (uind == u - 1) {"
    },
    {
        "line": 78,
        "fullcodeline": "found = 1;"
    }
]