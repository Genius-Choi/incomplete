[
    {
        "line": 8,
        "fullcodeline": "gf_bs_enable_emulation_byte_removal(bs, GF_TRUE);"
    },
    {
        "line": 10,
        "fullcodeline": "nal_hdr = gf_bs_read_u8(bs);"
    },
    {
        "line": 12,
        "fullcodeline": "slice = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "memcpy(&n_state, &avc->s_info, sizeof(AVCSliceInfo));"
    },
    {
        "line": 14,
        "fullcodeline": "avc->last_nal_type_parsed = n_state.nal_unit_type = nal_hdr & 0x1F;"
    },
    {
        "line": 15,
        "fullcodeline": "n_state.nal_ref_idc = (nal_hdr >> 5) & 0x3;"
    },
    {
        "line": 17,
        "fullcodeline": "idr_flag = 0;"
    },
    {
        "line": 148,
        "fullcodeline": "if (ret && avc->s_info.sps) {"
    },
    {
        "line": 23,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 27,
        "fullcodeline": "SVC_ReadNal_header_extension(bs, &n_state.NalHeader);"
    },
    {
        "line": 29,
        "fullcodeline": "/*ret = */svc_parse_slice(bs, avc, &n_state);"
    },
    {
        "line": 34,
        "fullcodeline": "avc_compute_poc(&n_state);"
    },
    {
        "line": 54,
        "fullcodeline": "ret = avc_parse_slice(bs, avc, idr_flag, &n_state);"
    },
    {
        "line": 56,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "assert(avc->s_info.sps);"
    },
    {
        "line": 114,
        "fullcodeline": "avc->last_ps_idx = gf_avc_read_sps_bs_internal(bs, avc, 0, NULL, nal_hdr);"
    },
    {
        "line": 119,
        "fullcodeline": "avc->last_ps_idx = gf_avc_read_pps_bs_internal(bs, avc, nal_hdr);"
    },
    {
        "line": 123,
        "fullcodeline": "avc->last_ps_idx = gf_avc_read_sps_bs_internal(bs, avc, 1, NULL, nal_hdr);"
    },
    {
        "line": 127,
        "fullcodeline": "avc->last_ps_idx = (s32) gf_bs_read_ue(bs);"
    },
    {
        "line": 149,
        "fullcodeline": "n_state.frame_num_offset_prev = avc->s_info.frame_num_offset;"
    },
    {
        "line": 158,
        "fullcodeline": "avc_compute_poc(&n_state);"
    },
    {
        "line": 36,
        "fullcodeline": "if (avc->s_info.poc != n_state.poc) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (ret < 0) return ret;"
    },
    {
        "line": 63,
        "fullcodeline": "if (avc->s_info.frame_num != n_state.frame_num) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (avc->s_info.field_pic_flag != n_state.field_pic_flag) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (avc->s_info.sps->poc_type == n_state.sps->poc_type) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (n_state.nal_unit_type == GF_AVC_NALU_IDR_SLICE) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (avc->s_info.nal_unit_type <= GF_AVC_NALU_IDR_SLICE) ret = 1;"
    },
    {
        "line": 31,
        "fullcodeline": "n_state.poc_lsb_prev = avc->s_info.poc_lsb;"
    },
    {
        "line": 32,
        "fullcodeline": "n_state.poc_msb_prev = avc->s_info.poc_msb;"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(&avc->s_info, &n_state, sizeof(AVCSliceInfo));"
    },
    {
        "line": 58,
        "fullcodeline": "((avc->s_info.nal_unit_type > GF_AVC_NALU_IDR_SLICE) || (avc->s_info.nal_unit_type < GF_AVC_NALU_NON_IDR_SLICE))"
    },
    {
        "line": 59,
        "fullcodeline": "&& (avc->s_info.nal_unit_type != GF_AVC_NALU_SVC_SLICE)"
    },
    {
        "line": 64,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 69,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 72,
        "fullcodeline": "if ((avc->s_info.nal_ref_idc != n_state.nal_ref_idc) &&"
    },
    {
        "line": 73,
        "fullcodeline": "(!avc->s_info.nal_ref_idc || !n_state.nal_ref_idc)) {"
    },
    {
        "line": 74,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 150,
        "fullcodeline": "if ((avc->s_info.sps->poc_type != 2) || (avc->s_info.nal_ref_idc != 0))"
    },
    {
        "line": 151,
        "fullcodeline": "n_state.frame_num_prev = avc->s_info.frame_num;"
    },
    {
        "line": 153,
        "fullcodeline": "n_state.poc_lsb_prev = avc->s_info.poc_lsb;"
    },
    {
        "line": 154,
        "fullcodeline": "n_state.poc_msb_prev = avc->s_info.poc_msb;"
    },
    {
        "line": 80,
        "fullcodeline": "if (!avc->s_info.sps->poc_type) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (avc->s_info.nal_unit_type != GF_AVC_NALU_IDR_SLICE) { /*IdrPicFlag differs in value*/"
    },
    {
        "line": 115,
        "fullcodeline": "if (avc->last_ps_idx < 0) return -1;"
    },
    {
        "line": 120,
        "fullcodeline": "if (avc->last_ps_idx < 0) return -1;"
    },
    {
        "line": 124,
        "fullcodeline": "if (avc->last_ps_idx < 0) return -1;"
    },
    {
        "line": 128,
        "fullcodeline": "if (avc->last_ps_idx < 0) return -1;"
    },
    {
        "line": 104,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 138,
        "fullcodeline": "else if ((nal_hdr & 0x1F) == GF_AVC_NALU_SEI && avc->s_info.nal_unit_type == GF_AVC_NALU_SVC_SLICE)"
    },
    {
        "line": 85,
        "fullcodeline": "if (avc->s_info.delta_poc_bottom != n_state.delta_poc_bottom) {"
    },
    {
        "line": 139,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 81,
        "fullcodeline": "if (!n_state.bottom_field_flag && (avc->s_info.poc_lsb != n_state.poc_lsb)) {"
    },
    {
        "line": 82,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 86,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 90,
        "fullcodeline": "else if (avc->s_info.sps->poc_type == 1) {"
    },
    {
        "line": 107,
        "fullcodeline": "else if (avc->s_info.idr_pic_id != n_state.idr_pic_id) { /*both IDR and idr_pic_id differs*/"
    },
    {
        "line": 108,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 140,
        "fullcodeline": "else if ((nal_hdr & 0x1F) == GF_AVC_NALU_SEQ_PARAM && avc->s_info.nal_unit_type == GF_AVC_NALU_SVC_SLICE)"
    },
    {
        "line": 141,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 92,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 96,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 143,
        "fullcodeline": "ret = 0;"
    }
]