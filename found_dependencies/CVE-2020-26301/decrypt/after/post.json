[
    {
        "line": 5,
        "fullcodeline": "ErrorType r = kErrNone;"
    },
    {
        "line": 6,
        "fullcodeline": "size_t sig_len = 16;"
    },
    {
        "line": 7,
        "fullcodeline": "int outlen = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned char polykey[POLY1305_KEYLEN] = {0};"
    },
    {
        "line": 13,
        "fullcodeline": "unsigned char calc_mac[POLY1305_TAGLEN] = {0};"
    },
    {
        "line": 15,
        "fullcodeline": "uint8_t seqbuf[16] = {0};"
    },
    {
        "line": 16,
        "fullcodeline": "((uint8_t*)(seqbuf))[12] = (seqno >> 24) & 0xff;"
    },
    {
        "line": 17,
        "fullcodeline": "((uint8_t*)(seqbuf))[13] = (seqno >> 16) & 0xff;"
    },
    {
        "line": 18,
        "fullcodeline": "((uint8_t*)(seqbuf))[14] = (seqno >> 8) & 0xff;"
    },
    {
        "line": 19,
        "fullcodeline": "((uint8_t*)(seqbuf))[15] = seqno & 0xff;"
    },
    {
        "line": 93,
        "fullcodeline": "seqbuf[0] = 1;"
    },
    {
        "line": 22,
        "fullcodeline": "if (EVP_EncryptInit_ex(ctx_main_, nullptr, nullptr, nullptr, seqbuf) != 1) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (EVP_EncryptUpdate(ctx_main_,"
    },
    {
        "line": 34,
        "fullcodeline": "if (static_cast<size_t>(outlen) != sizeof(polykey)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (EVP_DigestSignUpdate(md_ctx_,"
    },
    {
        "line": 75,
        "fullcodeline": "if (EVP_DigestSignUpdate(md_ctx_, packet, packet_len) != 1) {"
    },
    {
        "line": 81,
        "fullcodeline": "if (EVP_DigestSignFinal(md_ctx_, calc_mac, &sig_len) != 1) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (CRYPTO_memcmp(mac, calc_mac, sizeof(calc_mac))) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (EVP_DecryptInit_ex(ctx_main_, nullptr, nullptr, nullptr, seqbuf) != 1) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (EVP_DecryptUpdate(ctx_main_,"
    },
    {
        "line": 106,
        "fullcodeline": "if (static_cast<size_t>(outlen) != packet_len) {"
    },
    {
        "line": 23,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 31,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 35,
        "fullcodeline": "r = kErrPartialEncrypt;"
    },
    {
        "line": 72,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 76,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 82,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 88,
        "fullcodeline": "r = kErrInvalidMAC;"
    },
    {
        "line": 95,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 103,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 107,
        "fullcodeline": "r = kErrPartialDecrypt;"
    },
    {
        "line": 41,
        "fullcodeline": "if (EVP_PKEY_CTX_ctrl(polykey_ctx_,"
    },
    {
        "line": 51,
        "fullcodeline": "polykey_ = EVP_PKEY_new_raw_private_key(EVP_PKEY_POLY1305,"
    },
    {
        "line": 47,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 55,
        "fullcodeline": "if (polykey_ == nullptr) {"
    },
    {
        "line": 60,
        "fullcodeline": "if (!EVP_DigestSignInit(md_ctx_,"
    },
    {
        "line": 42,
        "fullcodeline": "-1,"
    },
    {
        "line": 46,
        "fullcodeline": "(void*)polykey) <= 0) {"
    },
    {
        "line": 56,
        "fullcodeline": "r = kErrOpenSSL;"
    },
    {
        "line": 65,
        "fullcodeline": "r = kErrOpenSSL;"
    }
]