[
    {
        "line": 2,
        "fullcodeline": "op->size = 1;"
    },
    {
        "line": 6,
        "fullcodeline": "op->addr = addr;"
    },
    {
        "line": 7,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_UNK;"
    },
    {
        "line": 3,
        "fullcodeline": "if (len < 1) {"
    },
    {
        "line": 10,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_RET;"
    },
    {
        "line": 13,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_MOV;"
    },
    {
        "line": 14,
        "fullcodeline": "op->size = 8;"
    },
    {
        "line": 17,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SHL;"
    },
    {
        "line": 18,
        "fullcodeline": "op->size = 8;"
    },
    {
        "line": 23,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_ADD;"
    },
    {
        "line": 24,
        "fullcodeline": "op->size = 8;"
    },
    {
        "line": 27,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SUB; // dec"
    },
    {
        "line": 28,
        "fullcodeline": "op->size = 2;"
    },
    {
        "line": 33,
        "fullcodeline": "op->size = 1;"
    },
    {
        "line": 34,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_NOP;"
    },
    {
        "line": 37,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_XOR;"
    },
    {
        "line": 38,
        "fullcodeline": "op->size = 4;"
    },
    {
        "line": 41,
        "fullcodeline": "op->size = 2;"
    },
    {
        "line": 53,
        "fullcodeline": "op->size = 2;"
    },
    {
        "line": 54,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CJMP;"
    },
    {
        "line": 55,
        "fullcodeline": "op->jump = op->addr + op->size + ((char)buf[1]);"
    },
    {
        "line": 56,
        "fullcodeline": "op->fail = op->addr + op->size;"
    },
    {
        "line": 59,
        "fullcodeline": "op->size = 7;"
    },
    {
        "line": 60,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_MOV;"
    },
    {
        "line": 63,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 64,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_NOP;"
    },
    {
        "line": 67,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 68,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SUB;"
    },
    {
        "line": 71,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 72,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SUB;"
    },
    {
        "line": 76,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 77,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CJMP;"
    },
    {
        "line": 85,
        "fullcodeline": "op->size = 8;"
    },
    {
        "line": 86,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_DIV;"
    },
    {
        "line": 90,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 91,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_MOV;"
    },
    {
        "line": 96,
        "fullcodeline": "op->size = 7;"
    },
    {
        "line": 97,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_MOV;"
    },
    {
        "line": 102,
        "fullcodeline": "op->size = 6;"
    },
    {
        "line": 103,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_PUSH;"
    },
    {
        "line": 110,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CMP;"
    },
    {
        "line": 111,
        "fullcodeline": "op->size = 3;"
    },
    {
        "line": 114,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CMP;"
    },
    {
        "line": 115,
        "fullcodeline": "op->size = 6;"
    },
    {
        "line": 119,
        "fullcodeline": "op->size = 2;"
    },
    {
        "line": 120,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_ADD;"
    },
    {
        "line": 123,
        "fullcodeline": "op->size = 5;"
    },
    {
        "line": 124,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_ADD;"
    },
    {
        "line": 127,
        "fullcodeline": "op->size = 4;"
    },
    {
        "line": 128,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_MOV;"
    },
    {
        "line": 131,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SUB;"
    },
    {
        "line": 132,
        "fullcodeline": "op->size = 5;"
    },
    {
        "line": 135,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_SUB;"
    },
    {
        "line": 138,
        "fullcodeline": "op->type = R_ANAL_OP_TYPE_CALL;"
    },
    {
        "line": 139,
        "fullcodeline": "op->size = 7;"
    },
    {
        "line": 149,
        "fullcodeline": "op->fail = op->addr + op->size;"
    },
    {
        "line": 152,
        "fullcodeline": "op->size = 2;"
    },
    {
        "line": 4,
        "fullcodeline": "return -1;"
    },
    {
        "line": 78,
        "fullcodeline": "if (len > 2) {"
    },
    {
        "line": 141,
        "fullcodeline": "int oa = 3;"
    },
    {
        "line": 142,
        "fullcodeline": "ut32 delta = buf[oa];"
    },
    {
        "line": 143,
        "fullcodeline": "delta |= (ut32)(buf[oa + 1]) << 8;"
    },
    {
        "line": 144,
        "fullcodeline": "delta |= (ut32)(buf[oa + 2]) << 16;"
    },
    {
        "line": 145,
        "fullcodeline": "delta |= (ut32)(buf[oa + 3]) << 24;"
    },
    {
        "line": 146,
        "fullcodeline": "delta += op->size;"
    },
    {
        "line": 147,
        "fullcodeline": "op->jump = op->addr + delta;"
    },
    {
        "line": 79,
        "fullcodeline": "op->jump = op->addr + op->size + ((buf[1] << 8) + buf[2]);"
    },
    {
        "line": 80,
        "fullcodeline": "op->fail = op->addr + op->size;"
    }
]