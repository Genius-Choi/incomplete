[
    {
        "line": 3,
        "fullcodeline": "assert(this->offset == this->buf_size);"
    },
    {
        "line": 53,
        "fullcodeline": "unsigned int bytes = this->buf_size;"
    },
    {
        "line": 7,
        "fullcodeline": "first = false;"
    },
    {
        "line": 8,
        "fullcodeline": "bool return_after_init = false;"
    },
    {
        "line": 36,
        "fullcodeline": "this->crypto->rijndael_init("
    },
    {
        "line": 47,
        "fullcodeline": "this->crypto->rijndael_process(this->inbuf, this->outbuf);"
    },
    {
        "line": 56,
        "fullcodeline": "unsigned char last = this->outbuf[this->buf_size - 1];"
    },
    {
        "line": 37,
        "fullcodeline": "encrypt, this->key.get(), key_bytes,"
    },
    {
        "line": 51,
        "fullcodeline": "this->crypto->rijndael_process(this->inbuf, this->outbuf);"
    },
    {
        "line": 57,
        "fullcodeline": "if (last <= this->buf_size)"
    },
    {
        "line": 60,
        "fullcodeline": "for (unsigned int i = 1; i <= last; ++i)"
    },
    {
        "line": 15,
        "fullcodeline": "initializeVector();"
    },
    {
        "line": 70,
        "fullcodeline": "bytes -= last;"
    },
    {
        "line": 16,
        "fullcodeline": "if (! (this->use_zero_iv || this->use_specified_iv))"
    },
    {
        "line": 62,
        "fullcodeline": "if (this->outbuf[this->buf_size - i] != last)"
    },
    {
        "line": 18,
        "fullcodeline": "getNext()->write(this->cbc_block, this->buf_size);"
    },
    {
        "line": 21,
        "fullcodeline": "else if (this->use_zero_iv || this->use_specified_iv)"
    },
    {
        "line": 25,
        "fullcodeline": "initializeVector();"
    },
    {
        "line": 31,
        "fullcodeline": "memcpy(this->cbc_block, this->inbuf, this->buf_size);"
    },
    {
        "line": 32,
        "fullcodeline": "this->offset = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "return_after_init = true;"
    }
]