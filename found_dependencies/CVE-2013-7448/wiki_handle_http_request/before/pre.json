[
    {
        "line": 3,
        "fullcodeline": "HttpResponse *res      = http_response_new(req);"
    },
    {
        "line": 4,
        "fullcodeline": "char         *page     = http_request_get_path_info(req);"
    },
    {
        "line": 5,
        "fullcodeline": "char         *command  = http_request_get_query_string(req);"
    },
    {
        "line": 6,
        "fullcodeline": "char         *wikitext = \"\";"
    },
    {
        "line": 8,
        "fullcodeline": "util_dehttpize(page); \t/* remove any encoding on the requested"
    },
    {
        "line": 37,
        "fullcodeline": "page = page + 1; \t\t/* skip slash */"
    },
    {
        "line": 11,
        "fullcodeline": "if (!strcmp(page, \"/\"))"
    },
    {
        "line": 18,
        "fullcodeline": "if (!strcmp(page, \"/styles.css\"))"
    },
    {
        "line": 27,
        "fullcodeline": "if (!strcmp(page, \"/favicon.ico\"))"
    },
    {
        "line": 39,
        "fullcodeline": "if (!strncmp(page, \"api/\", 4))"
    },
    {
        "line": 54,
        "fullcodeline": "if (strchr(page, '/'))"
    },
    {
        "line": 62,
        "fullcodeline": "if (!strcmp(page, \"Changes\"))"
    },
    {
        "line": 15,
        "fullcodeline": "page = \"/WikiHome\";"
    },
    {
        "line": 21,
        "fullcodeline": "http_response_set_content_type(res, \"text/css\");"
    },
    {
        "line": 22,
        "fullcodeline": "http_response_printf(res, \"%s\", CssData);"
    },
    {
        "line": 23,
        "fullcodeline": "http_response_send(res);"
    },
    {
        "line": 30,
        "fullcodeline": "http_response_set_content_type(res, \"image/ico\");"
    },
    {
        "line": 31,
        "fullcodeline": "http_response_set_data(res, FaviconData, FaviconDataLen);"
    },
    {
        "line": 32,
        "fullcodeline": "http_response_send(res);"
    },
    {
        "line": 43,
        "fullcodeline": "page += 4;"
    },
    {
        "line": 47,
        "fullcodeline": "wiki_handle_rest_call(req, res, page);"
    },
    {
        "line": 56,
        "fullcodeline": "http_response_set_status(res, 404, \"Not Found\");"
    },
    {
        "line": 57,
        "fullcodeline": "http_response_printf(res, \"<html><body>404 Not Found</body></html>\\n\");"
    },
    {
        "line": 58,
        "fullcodeline": "http_response_send(res);"
    },
    {
        "line": 64,
        "fullcodeline": "wiki_show_changes_page(res);"
    },
    {
        "line": 13,
        "fullcodeline": "if (access(\"WikiHome\", R_OK) != 0)"
    },
    {
        "line": 44,
        "fullcodeline": "for (p=page; *p != '\\0'; p++)"
    },
    {
        "line": 14,
        "fullcodeline": "wiki_redirect(res, \"/WikiHome?create\");"
    },
    {
        "line": 45,
        "fullcodeline": "if (*p=='?') { *p ='\\0'; break; }"
    },
    {
        "line": 66,
        "fullcodeline": "else if (!strcmp(page, \"ChangesRss\"))"
    },
    {
        "line": 70,
        "fullcodeline": "else if (!strcmp(page, \"Search\"))"
    },
    {
        "line": 72,
        "fullcodeline": "wiki_show_search_results_page(res, http_request_param_get(req, \"expr\"));"
    },
    {
        "line": 74,
        "fullcodeline": "else if (!strcmp(page, \"Create\"))"
    },
    {
        "line": 76,
        "fullcodeline": "if ( (wikitext = http_request_param_get(req, \"title\")) != NULL)"
    },
    {
        "line": 90,
        "fullcodeline": "if ( (wikitext = http_request_param_get(req, \"wikitext\")) != NULL)"
    },
    {
        "line": 79,
        "fullcodeline": "wiki_redirect(res, http_request_param_get(req, \"title\"));"
    },
    {
        "line": 92,
        "fullcodeline": "file_write(page, wikitext);"
    },
    {
        "line": 95,
        "fullcodeline": "if (access(page, R_OK) == 0) \t/* page exists */"
    },
    {
        "line": 97,
        "fullcodeline": "wikitext = file_read(page);"
    },
    {
        "line": 99,
        "fullcodeline": "if (!strcmp(command, \"edit\"))"
    },
    {
        "line": 111,
        "fullcodeline": "if (!strcmp(command, \"create\"))"
    },
    {
        "line": 117,
        "fullcodeline": "char buf[1024];"
    },
    {
        "line": 118,
        "fullcodeline": "snprintf(buf, 1024, \"%s?create\", page);"
    }
]