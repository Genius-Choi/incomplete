[
    {
        "line": 94,
        "fullcodeline": "http_response_set_status(res, 500, \"Error\");"
    },
    {
        "line": 95,
        "fullcodeline": "http_response_printf(res, \"<html><body>Failed</body></html>\\n\");"
    },
    {
        "line": 6,
        "fullcodeline": "if (func != NULL && *func != '\\0')"
    },
    {
        "line": 8,
        "fullcodeline": "if (!strcmp(func, \"page/get\"))"
    },
    {
        "line": 10,
        "fullcodeline": "char *page = http_request_param_get(req, \"page\");"
    },
    {
        "line": 12,
        "fullcodeline": "if (page == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (page && page_name_is_good(page) && (access(page, R_OK) == 0))"
    },
    {
        "line": 13,
        "fullcodeline": "page = http_request_get_query_string(req);"
    },
    {
        "line": 17,
        "fullcodeline": "http_response_printf(res, \"%s\", file_read(page));"
    },
    {
        "line": 18,
        "fullcodeline": "http_response_send(res);"
    },
    {
        "line": 22,
        "fullcodeline": "else if (!strcmp(func, \"page/set\"))"
    },
    {
        "line": 24,
        "fullcodeline": "char *wikitext = NULL, *page = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "if( ( (wikitext = http_request_param_get(req, \"text\")) != NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "&& ( (page = http_request_param_get(req, \"page\")) != NULL))"
    },
    {
        "line": 28,
        "fullcodeline": "if (page_name_is_good(page))"
    },
    {
        "line": 37,
        "fullcodeline": "else if (!strcmp(func, \"page/delete\"))"
    },
    {
        "line": 39,
        "fullcodeline": "char *page = http_request_param_get(req, \"page\");"
    },
    {
        "line": 31,
        "fullcodeline": "http_response_printf(res, \"success\");"
    },
    {
        "line": 41,
        "fullcodeline": "if (page == NULL)"
    },
    {
        "line": 42,
        "fullcodeline": "page = http_request_get_query_string(req);"
    },
    {
        "line": 44,
        "fullcodeline": "if (page && page_name_is_good(page) && (unlink(page) > 0))"
    },
    {
        "line": 46,
        "fullcodeline": "http_response_printf(res, \"success\");"
    },
    {
        "line": 51,
        "fullcodeline": "else if (!strcmp(func, \"page/exists\"))"
    },
    {
        "line": 53,
        "fullcodeline": "char *page = http_request_param_get(req, \"page\");"
    },
    {
        "line": 55,
        "fullcodeline": "if (page == NULL)"
    },
    {
        "line": 56,
        "fullcodeline": "page = http_request_get_query_string(req);"
    },
    {
        "line": 58,
        "fullcodeline": "if (page && page_name_is_good(page) && (access(page, R_OK) == 0))"
    },
    {
        "line": 60,
        "fullcodeline": "http_response_printf(res, \"success\");"
    },
    {
        "line": 65,
        "fullcodeline": "else if (!strcmp(func, \"pages\") || !strcmp(func, \"search\"))"
    },
    {
        "line": 69,
        "fullcodeline": "char          *expr = http_request_param_get(req, \"expr\");"
    },
    {
        "line": 71,
        "fullcodeline": "if (expr == NULL)"
    },
    {
        "line": 74,
        "fullcodeline": "pages = wiki_get_pages(&n_pages, expr);"
    },
    {
        "line": 72,
        "fullcodeline": "expr = http_request_get_query_string(req);"
    },
    {
        "line": 78,
        "fullcodeline": "for (i=0; i<n_pages; i++)"
    },
    {
        "line": 83,
        "fullcodeline": "pTm = localtime(&pages[i]->mtime);"
    },
    {
        "line": 84,
        "fullcodeline": "strftime(datebuf, sizeof(datebuf), \"%Y-%m-%d %H:%M\", pTm);"
    },
    {
        "line": 85,
        "fullcodeline": "http_response_printf(res, \"%s\\t%s\\n\", pages[i]->name, datebuf);"
    },
    {
        "line": 81,
        "fullcodeline": "char   datebuf[64];"
    }
]