[
    {
        "line": 6,
        "fullcodeline": "u8 rates_len = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "const struct cfg80211_bss_ies *ies = rcu_dereference(bss->ies);"
    },
    {
        "line": 12,
        "fullcodeline": "param = kzalloc(sizeof(*param), GFP_KERNEL);"
    },
    {
        "line": 16,
        "fullcodeline": "param->beacon_period = cpu_to_le16(bss->beacon_interval);"
    },
    {
        "line": 17,
        "fullcodeline": "param->cap_info = cpu_to_le16(bss->capability);"
    },
    {
        "line": 18,
        "fullcodeline": "param->bss_type = WILC_FW_BSS_TYPE_INFRA;"
    },
    {
        "line": 19,
        "fullcodeline": "param->ch = ieee80211_frequency_to_channel(bss->channel->center_freq);"
    },
    {
        "line": 20,
        "fullcodeline": "ether_addr_copy(param->bssid, bss->bssid);"
    },
    {
        "line": 22,
        "fullcodeline": "ssid_elm = cfg80211_find_ie(WLAN_EID_SSID, ies->data, ies->len);"
    },
    {
        "line": 28,
        "fullcodeline": "tim_elm = cfg80211_find_ie(WLAN_EID_TIM, ies->data, ies->len);"
    },
    {
        "line": 32,
        "fullcodeline": "memset(param->p_suites, 0xFF, 3);"
    },
    {
        "line": 33,
        "fullcodeline": "memset(param->akm_suites, 0xFF, 3);"
    },
    {
        "line": 35,
        "fullcodeline": "rates_ie = cfg80211_find_ie(WLAN_EID_SUPP_RATES, ies->data, ies->len);"
    },
    {
        "line": 61,
        "fullcodeline": "ht_ie = cfg80211_find_ie(WLAN_EID_HT_CAPABILITY, ies->data, ies->len);"
    },
    {
        "line": 65,
        "fullcodeline": "ret = cfg80211_get_p2p_attr(ies->data, ies->len,"
    },
    {
        "line": 87,
        "fullcodeline": "wmm_ie = cfg80211_find_vendor_ie(WLAN_OUI_MICROSOFT,"
    },
    {
        "line": 102,
        "fullcodeline": "wpa_ie = cfg80211_find_vendor_ie(WLAN_OUI_MICROSOFT,"
    },
    {
        "line": 110,
        "fullcodeline": "rsn_ie = cfg80211_find_ie(WLAN_EID_RSN, ies->data, ies->len);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!param)"
    },
    {
        "line": 29,
        "fullcodeline": "if (tim_elm && tim_elm[1] >= 2)"
    },
    {
        "line": 44,
        "fullcodeline": "if (rates_len < WILC_MAX_RATES_SUPPORTED) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (ret > 0) {"
    },
    {
        "line": 144,
        "fullcodeline": "return (void *)param;"
    },
    {
        "line": 30,
        "fullcodeline": "param->dtim_period = tim_elm[3];"
    },
    {
        "line": 37,
        "fullcodeline": "rates_len = rates_ie[1];"
    },
    {
        "line": 40,
        "fullcodeline": "param->supp_rates[0] = rates_len;"
    },
    {
        "line": 41,
        "fullcodeline": "memcpy(&param->supp_rates[1], rates_ie + 2, rates_len);"
    },
    {
        "line": 45,
        "fullcodeline": "supp_rates_ie = cfg80211_find_ie(WLAN_EID_EXT_SUPP_RATES,"
    },
    {
        "line": 63,
        "fullcodeline": "param->ht_capable = true;"
    },
    {
        "line": 67,
        "fullcodeline": "(u8 *)&noa_attr, sizeof(noa_attr));"
    },
    {
        "line": 69,
        "fullcodeline": "param->tsf_lo = cpu_to_le32(ies->tsf);"
    },
    {
        "line": 70,
        "fullcodeline": "param->noa_enabled = 1;"
    },
    {
        "line": 93,
        "fullcodeline": "ie = (struct ieee80211_wmm_param_ie *)wmm_ie;"
    },
    {
        "line": 106,
        "fullcodeline": "param->mode_802_11i = 1;"
    },
    {
        "line": 107,
        "fullcodeline": "param->rsn_found = true;"
    },
    {
        "line": 112,
        "fullcodeline": "int rsn_ie_len = sizeof(struct element) + rsn_ie[1];"
    },
    {
        "line": 113,
        "fullcodeline": "int offset = 8;"
    },
    {
        "line": 136,
        "fullcodeline": "param->rsn_grp_policy = crypto->cipher_group & 0xFF;"
    },
    {
        "line": 24,
        "fullcodeline": "if (ssid_elm[1] <= IEEE80211_MAX_SSID_LEN)"
    },
    {
        "line": 38,
        "fullcodeline": "if (rates_len > WILC_MAX_RATES_SUPPORTED)"
    },
    {
        "line": 72,
        "fullcodeline": "if (noa_attr.oppps_ctwindow & IEEE80211_P2P_OPPPS_ENABLE_BIT) {"
    },
    {
        "line": 94,
        "fullcodeline": "if ((ie->oui_subtype == 0 || ie->oui_subtype == 1) &&"
    },
    {
        "line": 116,
        "fullcodeline": "if (offset < rsn_ie_len) {"
    },
    {
        "line": 137,
        "fullcodeline": "for (i = 0; i < crypto->n_ciphers_pairwise && i < 3; i++)"
    },
    {
        "line": 138,
        "fullcodeline": "param->p_suites[i] = crypto->ciphers_pairwise[i] & 0xFF;"
    },
    {
        "line": 140,
        "fullcodeline": "for (i = 0; i < crypto->n_akm_suites && i < 3; i++)"
    },
    {
        "line": 141,
        "fullcodeline": "param->akm_suites[i] = crypto->akm_suites[i] & 0xFF;"
    },
    {
        "line": 25,
        "fullcodeline": "memcpy(param->ssid, ssid_elm + 2, ssid_elm[1]);"
    },
    {
        "line": 39,
        "fullcodeline": "rates_len = WILC_MAX_RATES_SUPPORTED;"
    },
    {
        "line": 48,
        "fullcodeline": "u8 ext_rates = supp_rates_ie[1];"
    },
    {
        "line": 55,
        "fullcodeline": "memcpy(&param->supp_rates[rates_len + 1],"
    },
    {
        "line": 73,
        "fullcodeline": "param->opp_enabled = 1;"
    },
    {
        "line": 74,
        "fullcodeline": "param->opp_en.ct_window = noa_attr.oppps_ctwindow;"
    },
    {
        "line": 95,
        "fullcodeline": "ie->version == 1) {"
    },
    {
        "line": 96,
        "fullcodeline": "param->wmm_cap = true;"
    },
    {
        "line": 118,
        "fullcodeline": "offset += (rsn_ie[offset] * 4) + 2;"
    },
    {
        "line": 50,
        "fullcodeline": "if (ext_rates > (WILC_MAX_RATES_SUPPORTED - rates_len))"
    },
    {
        "line": 56,
        "fullcodeline": "supp_rates_ie + 2,"
    },
    {
        "line": 57,
        "fullcodeline": "(param->supp_rates[0] - rates_len));"
    },
    {
        "line": 80,
        "fullcodeline": "param->opp_enabled = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "if (ie->qos_info & BIT(7))"
    },
    {
        "line": 120,
        "fullcodeline": "if (offset < rsn_ie_len) {"
    },
    {
        "line": 51,
        "fullcodeline": "param->supp_rates[0] = WILC_MAX_RATES_SUPPORTED;"
    },
    {
        "line": 98,
        "fullcodeline": "param->uapsd_cap = true;"
    },
    {
        "line": 122,
        "fullcodeline": "offset += (rsn_ie[offset] * 4) + 2;"
    },
    {
        "line": 53,
        "fullcodeline": "param->supp_rates[0] += ext_rates;"
    },
    {
        "line": 124,
        "fullcodeline": "if (offset + 1 < rsn_ie_len) {"
    },
    {
        "line": 125,
        "fullcodeline": "param->mode_802_11i = 2;"
    },
    {
        "line": 126,
        "fullcodeline": "param->rsn_found = true;"
    },
    {
        "line": 127,
        "fullcodeline": "memcpy(param->rsn_cap, &rsn_ie[offset], 2);"
    }
]