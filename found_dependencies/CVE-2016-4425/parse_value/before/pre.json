[
    {
        "line": 64,
        "fullcodeline": "if(!json)"
    },
    {
        "line": 36,
        "fullcodeline": "json = json_true();"
    },
    {
        "line": 40,
        "fullcodeline": "json = json_false();"
    },
    {
        "line": 44,
        "fullcodeline": "json = json_null();"
    },
    {
        "line": 48,
        "fullcodeline": "json = parse_object(lex, flags, error);"
    },
    {
        "line": 52,
        "fullcodeline": "json = parse_array(lex, flags, error);"
    },
    {
        "line": 7,
        "fullcodeline": "const char *value = lex->value.string.val;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t len = lex->value.string.len;"
    },
    {
        "line": 17,
        "fullcodeline": "json = jsonp_stringn_nocheck_own(value, len);"
    },
    {
        "line": 26,
        "fullcodeline": "json = json_integer(lex->value.integer);"
    },
    {
        "line": 31,
        "fullcodeline": "json = json_real(lex->value.real);"
    },
    {
        "line": 10,
        "fullcodeline": "if(!(flags & JSON_ALLOW_NUL)) {"
    },
    {
        "line": 11,
        "fullcodeline": "if(memchr(value, '\\0', len)) {"
    },
    {
        "line": 12,
        "fullcodeline": "error_set(error, lex, \"\\\\u0000 is not allowed without JSON_ALLOW_NUL\");"
    }
]