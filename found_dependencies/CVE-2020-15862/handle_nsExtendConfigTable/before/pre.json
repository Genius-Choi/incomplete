[
    {
        "line": 11,
        "fullcodeline": "int  need_to_validate = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "for ( request=requests; request; request=request->next ) {"
    },
    {
        "line": 16,
        "fullcodeline": "table_info = netsnmp_extract_table_info( request );"
    },
    {
        "line": 17,
        "fullcodeline": "extension  = (netsnmp_extend*)netsnmp_extract_table_row_data( request );"
    },
    {
        "line": 19,
        "fullcodeline": "DEBUGMSGTL(( \"nsExtendTable:config\", \"varbind: \"));"
    },
    {
        "line": 20,
        "fullcodeline": "DEBUGMSGOID((\"nsExtendTable:config\", request->requestvb->name,"
    },
    {
        "line": 22,
        "fullcodeline": "DEBUGMSG((   \"nsExtendTable:config\", \" (%s)\\n\","
    },
    {
        "line": 445,
        "fullcodeline": "for ( request=requests; request; request=request->next ) {"
    },
    {
        "line": 434,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request, SNMP_ERR_GENERR);"
    },
    {
        "line": 449,
        "fullcodeline": "extension  = (netsnmp_extend*)netsnmp_extract_table_row_data( request );"
    },
    {
        "line": 23,
        "fullcodeline": "se_find_label_in_slist(\"agent_mode\", reqinfo->mode)));"
    },
    {
        "line": 448,
        "fullcodeline": "table_info = netsnmp_extract_table_info( request );"
    },
    {
        "line": 29,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 35,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 41,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 47,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 52,
        "fullcodeline": "i = ((extension->flags & NS_EXTEND_FLAGS_SHELL) ?"
    },
    {
        "line": 55,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 60,
        "fullcodeline": "i = ((extension->flags & NS_EXTEND_FLAGS_WRITEABLE) ?"
    },
    {
        "line": 63,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 69,
        "fullcodeline": "i = ((extension->flags & NS_EXTEND_FLAGS_CONFIG) ?"
    },
    {
        "line": 71,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 76,
        "fullcodeline": "i = ((extension->flags & NS_EXTEND_FLAGS_ACTIVE) ?"
    },
    {
        "line": 79,
        "fullcodeline": "snmp_set_var_typed_value("
    },
    {
        "line": 85,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request, SNMP_NOSUCHOBJECT);"
    },
    {
        "line": 166,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 185,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 211,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 244,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 274,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 283,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 304,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 318,
        "fullcodeline": "extension->old_command = extension->command;"
    },
    {
        "line": 319,
        "fullcodeline": "extension->command = netsnmp_strdup_and_null("
    },
    {
        "line": 324,
        "fullcodeline": "extension->old_args = extension->args;"
    },
    {
        "line": 325,
        "fullcodeline": "extension->args = netsnmp_strdup_and_null("
    },
    {
        "line": 330,
        "fullcodeline": "extension->old_input = extension->input;"
    },
    {
        "line": 331,
        "fullcodeline": "extension->input = netsnmp_strdup_and_null("
    },
    {
        "line": 336,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 370,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 385,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 386,
        "fullcodeline": "extension->cache->timeout = i;"
    },
    {
        "line": 390,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 405,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 413,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 452,
        "fullcodeline": "i = *request->requestvb->val.integer;"
    },
    {
        "line": 32,
        "fullcodeline": "(extension->command)?strlen(extension->command):0);"
    },
    {
        "line": 38,
        "fullcodeline": "(extension->args)?strlen(extension->args):0);"
    },
    {
        "line": 44,
        "fullcodeline": "(extension->input)?strlen(extension->input):0);"
    },
    {
        "line": 49,
        "fullcodeline": "(u_char*)&extension->cache->timeout, sizeof(int));"
    },
    {
        "line": 57,
        "fullcodeline": "(u_char*)&i, sizeof(i));"
    },
    {
        "line": 65,
        "fullcodeline": "(u_char*)&i, sizeof(i));"
    },
    {
        "line": 73,
        "fullcodeline": "(u_char*)&i, sizeof(i));"
    },
    {
        "line": 81,
        "fullcodeline": "(u_char*)&i, sizeof(i));"
    },
    {
        "line": 112,
        "fullcodeline": "if (request->requestvb->type != ASN_OCTET_STR) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (request->requestvb->val_len == 0 ||"
    },
    {
        "line": 132,
        "fullcodeline": "if (extension && extension->flags & NS_EXTEND_FLAGS_CONFIG) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (request->requestvb->type != ASN_OCTET_STR) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (extension && extension->flags & NS_EXTEND_FLAGS_CONFIG) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (request->requestvb->type != ASN_INTEGER) {"
    },
    {
        "line": 172,
        "fullcodeline": "if (i < -1 ) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (request->requestvb->type != ASN_INTEGER) {"
    },
    {
        "line": 186,
        "fullcodeline": "if (i<1 || i>2) {  /* 'exec(1)' or 'shell(2)' only */"
    },
    {
        "line": 191,
        "fullcodeline": "if (extension && extension->flags & NS_EXTEND_FLAGS_CONFIG) {"
    },
    {
        "line": 202,
        "fullcodeline": "if (request->requestvb->type != ASN_INTEGER) {"
    },
    {
        "line": 212,
        "fullcodeline": "if (i<1 || i>3) {"
    },
    {
        "line": 221,
        "fullcodeline": "if (i==3 && !(extension && (extension->flags & NS_EXTEND_FLAGS_WRITEABLE))) {"
    },
    {
        "line": 230,
        "fullcodeline": "if ((extension && extension->flags & NS_EXTEND_FLAGS_CONFIG)"
    },
    {
        "line": 239,
        "fullcodeline": "if (request->requestvb->type != ASN_INTEGER) {"
    },
    {
        "line": 349,
        "fullcodeline": "if ( extension && extension->old_command ) {"
    },
    {
        "line": 356,
        "fullcodeline": "if ( extension && extension->old_args ) {"
    },
    {
        "line": 363,
        "fullcodeline": "if ( extension && extension->old_input ) {"
    },
    {
        "line": 406,
        "fullcodeline": "if ( i == NS_EXTEND_ETYPE_SHELL )"
    },
    {
        "line": 113,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 122,
        "fullcodeline": "request->requestvb->val.string[0] != '/') {"
    },
    {
        "line": 123,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 136,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 145,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 154,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 162,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 173,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 181,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 187,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 195,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 203,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 213,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 222,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 231,
        "fullcodeline": "&& i!=3 ) {"
    },
    {
        "line": 232,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 240,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 267,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 287,
        "fullcodeline": "eptr = _find_extension_block( request->requestvb->name,"
    },
    {
        "line": 289,
        "fullcodeline": "extension = _new_extension( (char *) table_info->indexes->val.string,"
    },
    {
        "line": 296,
        "fullcodeline": "netsnmp_insert_table_row( request, extension->row );"
    },
    {
        "line": 308,
        "fullcodeline": "eptr = _find_extension_block( request->requestvb->name,"
    },
    {
        "line": 310,
        "fullcodeline": "_free_extension( extension, eptr );"
    },
    {
        "line": 340,
        "fullcodeline": "need_to_validate = 1;"
    },
    {
        "line": 350,
        "fullcodeline": "SNMP_FREE(extension->command);"
    },
    {
        "line": 351,
        "fullcodeline": "extension->command     = extension->old_command;"
    },
    {
        "line": 352,
        "fullcodeline": "extension->old_command = NULL;"
    },
    {
        "line": 357,
        "fullcodeline": "SNMP_FREE(extension->args);"
    },
    {
        "line": 358,
        "fullcodeline": "extension->args     = extension->old_args;"
    },
    {
        "line": 359,
        "fullcodeline": "extension->old_args = NULL;"
    },
    {
        "line": 364,
        "fullcodeline": "SNMP_FREE(extension->input);"
    },
    {
        "line": 365,
        "fullcodeline": "extension->input     = extension->old_input;"
    },
    {
        "line": 366,
        "fullcodeline": "extension->old_input = NULL;"
    },
    {
        "line": 374,
        "fullcodeline": "eptr = _find_extension_block( request->requestvb->name,"
    },
    {
        "line": 376,
        "fullcodeline": "_free_extension( extension, eptr );"
    },
    {
        "line": 393,
        "fullcodeline": "extension->flags &= ~NS_EXTEND_FLAGS_WRITEABLE;"
    },
    {
        "line": 396,
        "fullcodeline": "extension->flags |=  NS_EXTEND_FLAGS_WRITEABLE;"
    },
    {
        "line": 399,
        "fullcodeline": "(void)netsnmp_cache_check_and_reload( extension->cache );"
    },
    {
        "line": 407,
        "fullcodeline": "extension->flags |=  NS_EXTEND_FLAGS_SHELL;"
    },
    {
        "line": 417,
        "fullcodeline": "extension->flags |= NS_EXTEND_FLAGS_ACTIVE;"
    },
    {
        "line": 421,
        "fullcodeline": "extension->flags &= ~NS_EXTEND_FLAGS_ACTIVE;"
    },
    {
        "line": 424,
        "fullcodeline": "eptr = _find_extension_block( request->requestvb->name,"
    },
    {
        "line": 426,
        "fullcodeline": "_free_extension( extension, eptr );"
    },
    {
        "line": 453,
        "fullcodeline": "if (( i == RS_ACTIVE || i == RS_CREATEANDGO ) &&"
    },
    {
        "line": 454,
        "fullcodeline": "!(extension && extension->command &&"
    },
    {
        "line": 457,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 248,
        "fullcodeline": "if (!extension) {"
    },
    {
        "line": 291,
        "fullcodeline": "if (!extension) {  /* failed */"
    },
    {
        "line": 409,
        "fullcodeline": "extension->flags &= ~NS_EXTEND_FLAGS_SHELL;"
    },
    {
        "line": 250,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 259,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 292,
        "fullcodeline": "netsnmp_set_request_error(reqinfo, request,"
    },
    {
        "line": 455,
        "fullcodeline": "extension->command[0] == '/' /* &&"
    }
]