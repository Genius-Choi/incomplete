[
    {
        "line": 7,
        "fullcodeline": "int r, i, gostr3410_params[3];"
    },
    {
        "line": 11,
        "fullcodeline": "struct sc_asn1_entry asn1_com_key_attr[C_ASN1_COM_KEY_ATTR_SIZE];"
    },
    {
        "line": 12,
        "fullcodeline": "struct sc_asn1_entry asn1_com_prkey_attr[C_ASN1_COM_PRKEY_ATTR_SIZE];"
    },
    {
        "line": 13,
        "fullcodeline": "struct sc_asn1_entry asn1_rsakey_attr[C_ASN1_RSAKEY_ATTR_SIZE];"
    },
    {
        "line": 14,
        "fullcodeline": "struct sc_asn1_entry asn1_prk_rsa_attr[C_ASN1_PRK_RSA_ATTR_SIZE];"
    },
    {
        "line": 15,
        "fullcodeline": "struct sc_asn1_entry asn1_dsakey_attr[C_ASN1_DSAKEY_ATTR_SIZE];"
    },
    {
        "line": 16,
        "fullcodeline": "struct sc_asn1_entry asn1_prk_dsa_attr[C_ASN1_PRK_DSA_ATTR_SIZE];"
    },
    {
        "line": 17,
        "fullcodeline": "struct sc_asn1_entry asn1_dsakey_i_p_attr[C_ASN1_DSAKEY_I_P_ATTR_SIZE];"
    },
    {
        "line": 18,
        "fullcodeline": "struct sc_asn1_entry asn1_dsakey_value_attr[C_ASN1_DSAKEY_VALUE_ATTR_SIZE];"
    },
    {
        "line": 19,
        "fullcodeline": "struct sc_asn1_entry asn1_gostr3410key_attr[C_ASN1_GOSTR3410KEY_ATTR_SIZE];"
    },
    {
        "line": 20,
        "fullcodeline": "struct sc_asn1_entry asn1_prk_gostr3410_attr[C_ASN1_PRK_GOSTR3410_ATTR_SIZE];"
    },
    {
        "line": 21,
        "fullcodeline": "struct sc_asn1_entry asn1_ecckey_attr[C_ASN1_ECCKEY_ATTR];"
    },
    {
        "line": 22,
        "fullcodeline": "struct sc_asn1_entry asn1_prk_ecc_attr[C_ASN1_PRK_ECC_ATTR];"
    },
    {
        "line": 23,
        "fullcodeline": "struct sc_asn1_entry asn1_prkey[C_ASN1_PRKEY_SIZE];"
    },
    {
        "line": 24,
        "fullcodeline": "struct sc_asn1_entry asn1_supported_algorithms[C_ASN1_SUPPORTED_ALGORITHMS_SIZE];"
    },
    {
        "line": 25,
        "fullcodeline": "struct sc_asn1_pkcs15_object rsa_prkey_obj = {obj, asn1_com_key_attr, asn1_com_prkey_attr, asn1_prk_rsa_attr};"
    },
    {
        "line": 26,
        "fullcodeline": "struct sc_asn1_pkcs15_object dsa_prkey_obj = {obj, asn1_com_key_attr, asn1_com_prkey_attr, asn1_prk_dsa_attr};"
    },
    {
        "line": 27,
        "fullcodeline": "struct sc_asn1_pkcs15_object gostr3410_prkey_obj = {obj, asn1_com_key_attr, asn1_com_prkey_attr, asn1_prk_gostr3410_attr};"
    },
    {
        "line": 28,
        "fullcodeline": "struct sc_asn1_pkcs15_object ecc_prkey_obj = { obj, asn1_com_key_attr, asn1_com_prkey_attr, asn1_prk_ecc_attr };"
    },
    {
        "line": 30,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_prkey, asn1_prkey);"
    },
    {
        "line": 31,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_supported_algorithms, asn1_supported_algorithms);"
    },
    {
        "line": 33,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_prk_rsa_attr, asn1_prk_rsa_attr);"
    },
    {
        "line": 34,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_rsakey_attr, asn1_rsakey_attr);"
    },
    {
        "line": 35,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_prk_dsa_attr, asn1_prk_dsa_attr);"
    },
    {
        "line": 36,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_dsakey_attr, asn1_dsakey_attr);"
    },
    {
        "line": 37,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_dsakey_value_attr, asn1_dsakey_value_attr);"
    },
    {
        "line": 38,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_dsakey_i_p_attr, asn1_dsakey_i_p_attr);"
    },
    {
        "line": 39,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_prk_gostr3410_attr, asn1_prk_gostr3410_attr);"
    },
    {
        "line": 40,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_gostr3410key_attr, asn1_gostr3410key_attr);"
    },
    {
        "line": 41,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_prk_ecc_attr, asn1_prk_ecc_attr);"
    },
    {
        "line": 42,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_ecckey_attr, asn1_ecckey_attr);"
    },
    {
        "line": 44,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_com_prkey_attr, asn1_com_prkey_attr);"
    },
    {
        "line": 45,
        "fullcodeline": "sc_copy_asn1_entry(c_asn1_com_key_attr, asn1_com_key_attr);"
    },
    {
        "line": 47,
        "fullcodeline": "sc_format_asn1_entry(asn1_prkey + 0, &rsa_prkey_obj, NULL, 0);"
    },
    {
        "line": 48,
        "fullcodeline": "sc_format_asn1_entry(asn1_prkey + 1, &ecc_prkey_obj, NULL, 0);"
    },
    {
        "line": 49,
        "fullcodeline": "sc_format_asn1_entry(asn1_prkey + 2, &dsa_prkey_obj, NULL, 0);"
    },
    {
        "line": 50,
        "fullcodeline": "sc_format_asn1_entry(asn1_prkey + 3, &gostr3410_prkey_obj, NULL, 0);"
    },
    {
        "line": 52,
        "fullcodeline": "sc_format_asn1_entry(asn1_prk_rsa_attr + 0, asn1_rsakey_attr, NULL, 0);"
    },
    {
        "line": 53,
        "fullcodeline": "sc_format_asn1_entry(asn1_prk_dsa_attr + 0, asn1_dsakey_attr, NULL, 0);"
    },
    {
        "line": 54,
        "fullcodeline": "sc_format_asn1_entry(asn1_prk_gostr3410_attr + 0, asn1_gostr3410key_attr, NULL, 0);"
    },
    {
        "line": 55,
        "fullcodeline": "sc_format_asn1_entry(asn1_prk_ecc_attr + 0, asn1_ecckey_attr, NULL, 0);"
    },
    {
        "line": 57,
        "fullcodeline": "sc_format_asn1_entry(asn1_rsakey_attr + 0, &info.path, NULL, 0);"
    },
    {
        "line": 58,
        "fullcodeline": "sc_format_asn1_entry(asn1_rsakey_attr + 1, &info.modulus_length, NULL, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "sc_format_asn1_entry(asn1_dsakey_attr + 0, asn1_dsakey_value_attr, NULL, 0);"
    },
    {
        "line": 61,
        "fullcodeline": "sc_format_asn1_entry(asn1_dsakey_value_attr + 0, &info.path, NULL, 0);"
    },
    {
        "line": 62,
        "fullcodeline": "sc_format_asn1_entry(asn1_dsakey_value_attr + 1, asn1_dsakey_i_p_attr, NULL, 0);"
    },
    {
        "line": 63,
        "fullcodeline": "sc_format_asn1_entry(asn1_dsakey_i_p_attr + 0, &info.path, NULL, 0);"
    },
    {
        "line": 65,
        "fullcodeline": "sc_format_asn1_entry(asn1_gostr3410key_attr + 0, &info.path, NULL, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "sc_format_asn1_entry(asn1_gostr3410key_attr + 1, &gostr3410_params[0], NULL, 0);"
    },
    {
        "line": 67,
        "fullcodeline": "sc_format_asn1_entry(asn1_gostr3410key_attr + 2, &gostr3410_params[1], NULL, 0);"
    },
    {
        "line": 68,
        "fullcodeline": "sc_format_asn1_entry(asn1_gostr3410key_attr + 3, &gostr3410_params[2], NULL, 0);"
    },
    {
        "line": 70,
        "fullcodeline": "sc_format_asn1_entry(asn1_ecckey_attr + 0, &info.path, NULL, 0);"
    },
    {
        "line": 71,
        "fullcodeline": "sc_format_asn1_entry(asn1_ecckey_attr + 1, &info.field_length, NULL, 0);"
    },
    {
        "line": 73,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 0, &info.id, NULL, 0);"
    },
    {
        "line": 74,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 1, &info.usage, &usage_len, 0);"
    },
    {
        "line": 75,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 2, &info.native, NULL, 0);"
    },
    {
        "line": 76,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 3, &info.access_flags, &af_len, 0);"
    },
    {
        "line": 77,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 4, &info.key_reference, NULL, 0);"
    },
    {
        "line": 81,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_key_attr + 5, asn1_supported_algorithms, NULL, 0);"
    },
    {
        "line": 83,
        "fullcodeline": "sc_format_asn1_entry(asn1_com_prkey_attr + 0, &info.subject.value, &info.subject.len, 0);"
    },
    {
        "line": 86,
        "fullcodeline": "memset(&info, 0, sizeof(info));"
    },
    {
        "line": 87,
        "fullcodeline": "info.key_reference = -1;"
    },
    {
        "line": 88,
        "fullcodeline": "info.native = 1;"
    },
    {
        "line": 89,
        "fullcodeline": "memset(gostr3410_params, 0, sizeof(gostr3410_params));"
    },
    {
        "line": 91,
        "fullcodeline": "r = sc_asn1_decode_choice(ctx, asn1_prkey, *buf, *buflen, buf, buflen);"
    },
    {
        "line": 101,
        "fullcodeline": "LOG_TEST_RET(ctx, r, \"PrKey DF ASN.1 decoding failed\");"
    },
    {
        "line": 144,
        "fullcodeline": "sc_log(ctx, \"PrivKey path '%s'\", sc_print_path(&info.path));"
    },
    {
        "line": 184,
        "fullcodeline": "memcpy(obj->data, &info, sizeof(info));"
    },
    {
        "line": 186,
        "fullcodeline": "sc_log(ctx, \"Key Subject %s\", sc_dump_hex(info.subject.value, info.subject.len));"
    },
    {
        "line": 187,
        "fullcodeline": "sc_log(ctx, \"Key path %s\", sc_print_path(&info.path));"
    },
    {
        "line": 79,
        "fullcodeline": "for (i=0; i<SC_MAX_SUPPORTED_ALGORITHMS && (asn1_supported_algorithms + i)->name; i++)"
    },
    {
        "line": 80,
        "fullcodeline": "sc_format_asn1_entry(asn1_supported_algorithms + i, &info.algo_refs[i], NULL, 0);"
    },
    {
        "line": 92,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (r == SC_ERROR_ASN1_END_OF_CONTENTS)"
    },
    {
        "line": 102,
        "fullcodeline": "if (asn1_prkey[0].flags & SC_ASN1_PRESENT) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (!p15card->app || !p15card->app->ddo.aid.len)   {"
    },
    {
        "line": 148,
        "fullcodeline": "if (info.key_reference < -1)"
    },
    {
        "line": 152,
        "fullcodeline": "if ((obj->flags & SC_PKCS15_CO_FLAG_PRIVATE) && (obj->auth_id.len == 0)) {"
    },
    {
        "line": 180,
        "fullcodeline": "if (obj->data == NULL) {"
    },
    {
        "line": 103,
        "fullcodeline": "obj->type = SC_PKCS15_TYPE_PRKEY_RSA;"
    },
    {
        "line": 135,
        "fullcodeline": "r = sc_pkcs15_make_absolute_path(&p15card->file_app->path, &info.path);"
    },
    {
        "line": 149,
        "fullcodeline": "info.key_reference += 256;"
    },
    {
        "line": 153,
        "fullcodeline": "sc_log(ctx, \"Private key %s has no auth ID - checking AccessControlRules\","
    },
    {
        "line": 182,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_ERROR_OUT_OF_MEMORY);"
    },
    {
        "line": 94,
        "fullcodeline": "if (asn1_com_prkey_attr->flags & SC_ASN1_PRESENT &&"
    },
    {
        "line": 136,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 142,
        "fullcodeline": "info.path.aid = p15card->app->ddo.aid;"
    },
    {
        "line": 154,
        "fullcodeline": "sc_pkcs15_print_id(&info.id));"
    },
    {
        "line": 157,
        "fullcodeline": "for (i = 0; i < SC_PKCS15_MAX_ACCESS_RULES; i++) {"
    },
    {
        "line": 175,
        "fullcodeline": "if (i == SC_PKCS15_MAX_ACCESS_RULES)"
    },
    {
        "line": 95,
        "fullcodeline": "asn1_com_prkey_attr[0].flags & SC_ASN1_PRESENT) {"
    },
    {
        "line": 105,
        "fullcodeline": "else if (asn1_prkey[1].flags & SC_ASN1_PRESENT) {"
    },
    {
        "line": 137,
        "fullcodeline": "sc_pkcs15_free_key_params(&info.params);"
    },
    {
        "line": 176,
        "fullcodeline": "sc_log(ctx, \"Warning: No auth ID found\");"
    },
    {
        "line": 106,
        "fullcodeline": "obj->type = SC_PKCS15_TYPE_PRKEY_EC;"
    },
    {
        "line": 159,
        "fullcodeline": "if (obj->access_rules[i].access_mode &"
    },
    {
        "line": 160,
        "fullcodeline": "(SC_PKCS15_ACCESS_RULE_MODE_EXECUTE |"
    },
    {
        "line": 108,
        "fullcodeline": "else if (asn1_prkey[2].flags & SC_ASN1_PRESENT) {"
    },
    {
        "line": 164,
        "fullcodeline": "if (obj->access_rules[i].auth_id.len != 0) {"
    },
    {
        "line": 109,
        "fullcodeline": "obj->type = SC_PKCS15_TYPE_PRKEY_DSA;"
    },
    {
        "line": 166,
        "fullcodeline": "obj->auth_id = obj->access_rules[i].auth_id;"
    },
    {
        "line": 167,
        "fullcodeline": "sc_log(ctx, \"Auth ID found - %s\","
    },
    {
        "line": 111,
        "fullcodeline": "if (asn1_dsakey_i_p_attr[0].flags & SC_ASN1_PRESENT)"
    },
    {
        "line": 168,
        "fullcodeline": "sc_pkcs15_print_id(&obj->auth_id));"
    },
    {
        "line": 112,
        "fullcodeline": "info.path.type = SC_PATH_TYPE_PATH_PROT;"
    },
    {
        "line": 114,
        "fullcodeline": "else if (asn1_prkey[3].flags & SC_ASN1_PRESENT) {"
    },
    {
        "line": 115,
        "fullcodeline": "obj->type = SC_PKCS15_TYPE_PRKEY_GOSTR3410;"
    },
    {
        "line": 116,
        "fullcodeline": "assert(info.modulus_length == 0);"
    },
    {
        "line": 117,
        "fullcodeline": "info.modulus_length = SC_PKCS15_GOSTR3410_KEYSIZE;"
    },
    {
        "line": 118,
        "fullcodeline": "assert(info.params.len == 0);"
    },
    {
        "line": 120,
        "fullcodeline": "info.params.data = malloc(info.params.len);"
    },
    {
        "line": 123,
        "fullcodeline": "assert(sizeof(*keyinfo_gostparams) == info.params.len);"
    },
    {
        "line": 124,
        "fullcodeline": "keyinfo_gostparams = info.params.data;"
    },
    {
        "line": 125,
        "fullcodeline": "keyinfo_gostparams->gostr3410 = gostr3410_params[0];"
    },
    {
        "line": 126,
        "fullcodeline": "keyinfo_gostparams->gostr3411 = gostr3410_params[1];"
    },
    {
        "line": 127,
        "fullcodeline": "keyinfo_gostparams->gost28147 = gostr3410_params[2];"
    },
    {
        "line": 121,
        "fullcodeline": "if (info.params.data == NULL)"
    },
    {
        "line": 130,
        "fullcodeline": "sc_log(ctx, \"Neither RSA or DSA or GOSTR3410 or ECC key in PrKDF entry.\");"
    },
    {
        "line": 131,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_ERROR_INVALID_ASN1_OBJECT);"
    },
    {
        "line": 122,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_ERROR_OUT_OF_MEMORY);"
    }
]