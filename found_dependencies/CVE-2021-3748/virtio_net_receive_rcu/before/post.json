[
    {
        "line": 4,
        "fullcodeline": "VirtIONet *n = qemu_get_nic_opaque(nc);"
    },
    {
        "line": 5,
        "fullcodeline": "VirtIONetQueue *q = virtio_net_get_subqueue(nc);"
    },
    {
        "line": 6,
        "fullcodeline": "VirtIODevice *vdev = VIRTIO_DEVICE(n);"
    },
    {
        "line": 7,
        "fullcodeline": "struct iovec mhdr_sg[VIRTQUEUE_MAX_SIZE];"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned mhdr_cnt = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "offset = i = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "virtqueue_flush(q->rx_vq, i);"
    },
    {
        "line": 113,
        "fullcodeline": "virtio_notify(vdev, q->rx_vq);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!virtio_net_can_receive(nc)) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (!no_rss && n->rss_data.enabled && n->rss_data.enabled_software_rss) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!virtio_net_has_buffers(q, size + n->guest_hdr_len - n->host_hdr_len)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (!receive_filter(n, buf, size))"
    },
    {
        "line": 34,
        "fullcodeline": "while (offset < size) {"
    },
    {
        "line": 17,
        "fullcodeline": "int index = virtio_net_process_rss(nc, buf, size);"
    },
    {
        "line": 39,
        "fullcodeline": "total = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "elem = virtqueue_pop(q->rx_vq, sizeof(VirtQueueElement));"
    },
    {
        "line": 63,
        "fullcodeline": "sg = elem->in_sg;"
    },
    {
        "line": 87,
        "fullcodeline": "len = iov_from_buf(sg, elem->in_num, guest_offset,"
    },
    {
        "line": 89,
        "fullcodeline": "total += len;"
    },
    {
        "line": 90,
        "fullcodeline": "offset += len;"
    },
    {
        "line": 101,
        "fullcodeline": "virtqueue_fill(q->rx_vq, elem, total, i++);"
    },
    {
        "line": 102,
        "fullcodeline": "g_free(elem);"
    },
    {
        "line": 106,
        "fullcodeline": "virtio_stw_p(vdev, &mhdr.num_buffers, i);"
    },
    {
        "line": 107,
        "fullcodeline": "iov_from_buf(mhdr_sg, mhdr_cnt,"
    },
    {
        "line": 13,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "if (index >= 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (!elem) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (elem->in_num < 1) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (i == 0) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (!n->mergeable_rx_bufs && offset < size) {"
    },
    {
        "line": 19,
        "fullcodeline": "NetClientState *nc2 = qemu_get_subqueue(n->nic, index);"
    },
    {
        "line": 56,
        "fullcodeline": "virtio_error(vdev,"
    },
    {
        "line": 58,
        "fullcodeline": "virtqueue_detach_element(q->rx_vq, elem, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "g_free(elem);"
    },
    {
        "line": 65,
        "fullcodeline": "assert(offset == 0);"
    },
    {
        "line": 73,
        "fullcodeline": "receive_header(n, sg, elem->in_num, buf, size);"
    },
    {
        "line": 79,
        "fullcodeline": "offset = n->host_hdr_len;"
    },
    {
        "line": 80,
        "fullcodeline": "total += n->guest_hdr_len;"
    },
    {
        "line": 81,
        "fullcodeline": "guest_offset = n->guest_hdr_len;"
    },
    {
        "line": 88,
        "fullcodeline": "buf + offset, size - offset);"
    },
    {
        "line": 95,
        "fullcodeline": "virtqueue_unpop(q->rx_vq, elem, total);"
    },
    {
        "line": 96,
        "fullcodeline": "g_free(elem);"
    },
    {
        "line": 20,
        "fullcodeline": "return virtio_net_receive_rcu(nc2, buf, size, true);"
    },
    {
        "line": 52,
        "fullcodeline": "return -1;"
    },
    {
        "line": 60,
        "fullcodeline": "return -1;"
    },
    {
        "line": 83,
        "fullcodeline": "guest_offset = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "iov_from_buf(sg, elem->in_num, offset,"
    },
    {
        "line": 77,
        "fullcodeline": "buf + offset, n->host_hdr_len - sizeof(mhdr));"
    }
]