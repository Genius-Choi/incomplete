[
    {
        "line": 5,
        "fullcodeline": "AddressSpace *as = g_new0(AddressSpace, 1);"
    },
    {
        "line": 8,
        "fullcodeline": "assert(mr);"
    },
    {
        "line": 9,
        "fullcodeline": "as_name = g_strdup_printf(\"%s-%d\", prefix, cpu->cpu_index);"
    },
    {
        "line": 10,
        "fullcodeline": "address_space_init(as, mr, as_name);"
    },
    {
        "line": 11,
        "fullcodeline": "g_free(as_name);"
    },
    {
        "line": 14,
        "fullcodeline": "assert(asidx < cpu->num_ases);"
    },
    {
        "line": 22,
        "fullcodeline": "assert(asidx == 0 || !kvm_enabled());"
    },
    {
        "line": 28,
        "fullcodeline": "newas = &cpu->cpu_ases[asidx];"
    },
    {
        "line": 29,
        "fullcodeline": "newas->cpu = cpu;"
    },
    {
        "line": 30,
        "fullcodeline": "newas->as = as;"
    },
    {
        "line": 16,
        "fullcodeline": "if (asidx == 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (!cpu->cpu_ases) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (tcg_enabled()) {"
    },
    {
        "line": 18,
        "fullcodeline": "cpu->as = as;"
    },
    {
        "line": 25,
        "fullcodeline": "cpu->cpu_ases = g_new0(CPUAddressSpace, cpu->num_ases);"
    },
    {
        "line": 32,
        "fullcodeline": "newas->tcg_as_listener.log_global_after_sync = tcg_log_global_after_sync;"
    },
    {
        "line": 33,
        "fullcodeline": "newas->tcg_as_listener.commit = tcg_commit;"
    },
    {
        "line": 34,
        "fullcodeline": "newas->tcg_as_listener.name = \"tcg\";"
    },
    {
        "line": 35,
        "fullcodeline": "memory_listener_register(&newas->tcg_as_listener, as);"
    }
]