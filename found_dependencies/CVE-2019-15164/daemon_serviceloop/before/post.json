[
    {
        "line": 5,
        "fullcodeline": "char errbuf[PCAP_ERRBUF_SIZE + 1];\t// keeps the error string, prior to be printed"
    },
    {
        "line": 6,
        "fullcodeline": "char errmsgbuf[PCAP_ERRBUF_SIZE + 1];\t// buffer for errors to send to the client"
    },
    {
        "line": 11,
        "fullcodeline": "int authenticated = 0;\t\t\t// 1 if the client has successfully authenticated"
    },
    {
        "line": 12,
        "fullcodeline": "char source[PCAP_BUF_SIZE+1];\t\t// keeps the string that contains the interface to open"
    },
    {
        "line": 13,
        "fullcodeline": "int got_source = 0;\t\t\t// 1 if we've gotten the source from an open request"
    },
    {
        "line": 17,
        "fullcodeline": "struct session *session = NULL;\t\t// struct session main variable"
    },
    {
        "line": 19,
        "fullcodeline": "int client_told_us_to_close = 0;\t// 1 if the client told us to close the capture"
    },
    {
        "line": 32,
        "fullcodeline": "*errbuf = 0;\t// Initialize errbuf"
    },
    {
        "line": 35,
        "fullcodeline": "pars.sockctrl = sockctrl;"
    },
    {
        "line": 36,
        "fullcodeline": "pars.isactive = isactive;\t\t// active mode"
    },
    {
        "line": 37,
        "fullcodeline": "pars.nullAuthAllowed = nullAuthAllowed;"
    },
    {
        "line": 106,
        "fullcodeline": "memset(&action, 0, sizeof (action));"
    },
    {
        "line": 107,
        "fullcodeline": "action.sa_handler = noop_handler;"
    },
    {
        "line": 108,
        "fullcodeline": "action.sa_flags = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "sigaction(SIGUSR1, &action, NULL);"
    },
    {
        "line": 340,
        "fullcodeline": "stats.ps_ifdrop = 0;"
    },
    {
        "line": 341,
        "fullcodeline": "stats.ps_recv = 0;"
    },
    {
        "line": 342,
        "fullcodeline": "stats.ps_drop = 0;"
    },
    {
        "line": 343,
        "fullcodeline": "svrcapt = 0;"
    },
    {
        "line": 712,
        "fullcodeline": "sock_close(sockctrl, NULL, 0);"
    },
    {
        "line": 715,
        "fullcodeline": "rpcapd_log(LOGPRIO_DEBUG, \"I'm exiting from the child loop\");"
    },
    {
        "line": 119,
        "fullcodeline": "while (!authenticated)"
    },
    {
        "line": 51,
        "fullcodeline": "free(passiveClients);"
    },
    {
        "line": 52,
        "fullcodeline": "passiveClients = NULL;"
    },
    {
        "line": 159,
        "fullcodeline": "nrecv = rpcapd_recv_msg_header(pars.sockctrl, &header);"
    },
    {
        "line": 171,
        "fullcodeline": "plen = header.plen;"
    },
    {
        "line": 350,
        "fullcodeline": "errbuf[0] = 0;\t// clear errbuf"
    },
    {
        "line": 397,
        "fullcodeline": "nrecv = rpcapd_recv_msg_header(pars.sockctrl, &header);"
    },
    {
        "line": 409,
        "fullcodeline": "plen = header.plen;"
    },
    {
        "line": 707,
        "fullcodeline": "session_close(session);"
    },
    {
        "line": 708,
        "fullcodeline": "free(session);"
    },
    {
        "line": 709,
        "fullcodeline": "session = NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "host_port_check_status = sock_check_hostlist(passiveClients, RPCAP_HOSTLIST_SEP, &from, errmsgbuf, PCAP_ERRBUF_SIZE);"
    },
    {
        "line": 76,
        "fullcodeline": "free(passiveClients);"
    },
    {
        "line": 77,
        "fullcodeline": "passiveClients = NULL;"
    },
    {
        "line": 128,
        "fullcodeline": "if (!pars.isactive)"
    },
    {
        "line": 160,
        "fullcodeline": "if (nrecv == -1)"
    },
    {
        "line": 165,
        "fullcodeline": "if (nrecv == -2)"
    },
    {
        "line": 177,
        "fullcodeline": "if (header.ver != 0)"
    },
    {
        "line": 361,
        "fullcodeline": "if ((!pars.isactive) &&  ((session == NULL) || ((session != NULL) && (session->sockdata == 0))))"
    },
    {
        "line": 398,
        "fullcodeline": "if (nrecv == -1)"
    },
    {
        "line": 403,
        "fullcodeline": "if (nrecv == -2)"
    },
    {
        "line": 415,
        "fullcodeline": "if (!RPCAP_VERSION_IS_SUPPORTED(header.ver))"
    },
    {
        "line": 63,
        "fullcodeline": "if (getpeername(pars.sockctrl, (struct sockaddr *)&from,"
    },
    {
        "line": 78,
        "fullcodeline": "if (host_port_check_status < 0)"
    },
    {
        "line": 130,
        "fullcodeline": "FD_ZERO(&rfds);"
    },
    {
        "line": 132,
        "fullcodeline": "tv.tv_sec = RPCAP_TIMEOUT_INIT;"
    },
    {
        "line": 133,
        "fullcodeline": "tv.tv_usec = 0;"
    },
    {
        "line": 135,
        "fullcodeline": "FD_SET(pars.sockctrl, &rfds);"
    },
    {
        "line": 137,
        "fullcodeline": "retval = select(pars.sockctrl + 1, &rfds, NULL, NULL, &tv);"
    },
    {
        "line": 194,
        "fullcodeline": "(void)rpcapd_discard(pars.sockctrl, plen);"
    },
    {
        "line": 201,
        "fullcodeline": "retval = daemon_msg_auth_req(&pars, plen);"
    },
    {
        "line": 218,
        "fullcodeline": "authenticated = 1;"
    },
    {
        "line": 227,
        "fullcodeline": "(void)rpcapd_discard(pars.sockctrl, plen);"
    },
    {
        "line": 239,
        "fullcodeline": "(void)daemon_msg_err(pars.sockctrl, plen);"
    },
    {
        "line": 253,
        "fullcodeline": "msg_type_string = rpcap_msg_type_string(header.type);"
    },
    {
        "line": 288,
        "fullcodeline": "msg_type_string = rpcap_msg_type_string(header.type);"
    },
    {
        "line": 315,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Unknown message type %u\", header.type);"
    },
    {
        "line": 364,
        "fullcodeline": "FD_ZERO(&rfds);"
    },
    {
        "line": 366,
        "fullcodeline": "tv.tv_sec = RPCAP_TIMEOUT_RUNTIME;"
    },
    {
        "line": 367,
        "fullcodeline": "tv.tv_usec = 0;"
    },
    {
        "line": 369,
        "fullcodeline": "FD_SET(pars.sockctrl, &rfds);"
    },
    {
        "line": 371,
        "fullcodeline": "retval = select(pars.sockctrl + 1, &rfds, NULL, NULL, &tv);"
    },
    {
        "line": 434,
        "fullcodeline": "(void)rpcapd_discard(pars.sockctrl, plen);"
    },
    {
        "line": 64,
        "fullcodeline": "&fromlen) == -1)"
    },
    {
        "line": 66,
        "fullcodeline": "sock_geterror(\"getpeername()\", errmsgbuf, PCAP_ERRBUF_SIZE);"
    },
    {
        "line": 138,
        "fullcodeline": "if (retval == -1)"
    },
    {
        "line": 148,
        "fullcodeline": "if (retval == 0)"
    },
    {
        "line": 182,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 202,
        "fullcodeline": "if (retval == -1)"
    },
    {
        "line": 208,
        "fullcodeline": "if (retval == -2)"
    },
    {
        "line": 254,
        "fullcodeline": "if (msg_type_string != NULL)"
    },
    {
        "line": 262,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 269,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 289,
        "fullcodeline": "if (msg_type_string != NULL)"
    },
    {
        "line": 297,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 304,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 316,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 323,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 372,
        "fullcodeline": "if (retval == -1)"
    },
    {
        "line": 383,
        "fullcodeline": "if (retval == 0)"
    },
    {
        "line": 423,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl,"
    },
    {
        "line": 443,
        "fullcodeline": "(void)daemon_msg_err(pars.sockctrl, plen);"
    },
    {
        "line": 471,
        "fullcodeline": "retval = daemon_msg_open_req(header.ver, &pars,"
    },
    {
        "line": 479,
        "fullcodeline": "got_source = 1;"
    },
    {
        "line": 551,
        "fullcodeline": "client_told_us_to_close = 1;"
    },
    {
        "line": 552,
        "fullcodeline": "rpcapd_log(LOGPRIO_DEBUG, \"The other end system asked to close the connection.\");"
    },
    {
        "line": 625,
        "fullcodeline": "rpcapd_log(LOGPRIO_INFO, \"The client sent an RPCAP_MSG_AUTH_REQ message after authentication was completed\");"
    },
    {
        "line": 654,
        "fullcodeline": "msg_type_string = rpcap_msg_type_string(header.type);"
    },
    {
        "line": 683,
        "fullcodeline": "rpcapd_log(LOGPRIO_INFO, \"The client sent a message of type %u\", header.type);"
    },
    {
        "line": 684,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Unknown message type %u\", header.type);"
    },
    {
        "line": 67,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0, PCAP_ERR_NETW, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 80,
        "fullcodeline": "if (host_port_check_status == -2) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0, PCAP_ERR_HOSTNOAUTH, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 140,
        "fullcodeline": "sock_geterror(\"select() failed\", errmsgbuf, PCAP_ERRBUF_SIZE);"
    },
    {
        "line": 185,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 188,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 256,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"%s request sent before authentication was completed\", msg_type_string);"
    },
    {
        "line": 263,
        "fullcodeline": "PCAP_ERR_WRONGMSG, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 265,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 291,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Server-to-client message %s received from client\", msg_type_string);"
    },
    {
        "line": 298,
        "fullcodeline": "PCAP_ERR_WRONGMSG, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 300,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 317,
        "fullcodeline": "PCAP_ERR_WRONGMSG, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 319,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 374,
        "fullcodeline": "sock_geterror(\"select() failed\", errmsgbuf, PCAP_ERRBUF_SIZE);"
    },
    {
        "line": 426,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 429,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 451,
        "fullcodeline": "if (daemon_msg_findallif_req(header.ver, &pars, plen) == -1)"
    },
    {
        "line": 473,
        "fullcodeline": "if (retval == -1)"
    },
    {
        "line": 485,
        "fullcodeline": "if (!got_source)"
    },
    {
        "line": 507,
        "fullcodeline": "if (daemon_msg_startcap_req(header.ver, &pars,"
    },
    {
        "line": 558,
        "fullcodeline": "if (daemon_msg_stats_req(header.ver, &pars,"
    },
    {
        "line": 609,
        "fullcodeline": "if (daemon_msg_setsampling_req(header.ver,"
    },
    {
        "line": 626,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 635,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 655,
        "fullcodeline": "if (msg_type_string != NULL)"
    },
    {
        "line": 665,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 672,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 685,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, header.ver,"
    },
    {
        "line": 692,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 68,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 84,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);"
    },
    {
        "line": 91,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 141,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0, PCAP_ERR_NETW, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 150,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0, PCAP_ERR_INITTIMEOUT, \"The RPCAP initial timeout has expired\", errbuf) == -1)"
    },
    {
        "line": 260,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Message of type %u sent before authentication was completed\", header.type);"
    },
    {
        "line": 295,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Server-to-client message of type %u received from client\", header.type);"
    },
    {
        "line": 375,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0,"
    },
    {
        "line": 385,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl, 0,"
    },
    {
        "line": 508,
        "fullcodeline": "plen, source, &session, &samp_param) == -1)"
    },
    {
        "line": 559,
        "fullcodeline": "session, plen, &stats, svrcapt) == -1)"
    },
    {
        "line": 594,
        "fullcodeline": "free(session);"
    },
    {
        "line": 595,
        "fullcodeline": "session = NULL;"
    },
    {
        "line": 610,
        "fullcodeline": "&pars, plen, &samp_param) == -1)"
    },
    {
        "line": 629,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 631,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 657,
        "fullcodeline": "rpcapd_log(LOGPRIO_INFO, \"The client sent a %s server-to-client message\", msg_type_string);"
    },
    {
        "line": 658,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Server-to-client message %s received from client\", msg_type_string);"
    },
    {
        "line": 666,
        "fullcodeline": "PCAP_ERR_WRONGMSG, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 668,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 686,
        "fullcodeline": "PCAP_ERR_WRONGMSG, errbuf, errmsgbuf) == -1)"
    },
    {
        "line": 688,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 142,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 151,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 376,
        "fullcodeline": "PCAP_ERR_NETW, errmsgbuf, errbuf) == -1)"
    },
    {
        "line": 377,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 388,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 389,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 489,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl,"
    },
    {
        "line": 500,
        "fullcodeline": "if (rpcapd_discard(pars.sockctrl, plen) == -1)"
    },
    {
        "line": 521,
        "fullcodeline": "if (daemon_msg_updatefilter_req(header.ver,"
    },
    {
        "line": 573,
        "fullcodeline": "if (pcap_stats(session->fp, &stats))"
    },
    {
        "line": 585,
        "fullcodeline": "if (daemon_msg_endcap_req(header.ver,"
    },
    {
        "line": 599,
        "fullcodeline": "rpcap_senderror(pars.sockctrl,"
    },
    {
        "line": 662,
        "fullcodeline": "rpcapd_log(LOGPRIO_INFO, \"The client sent a server-to-client message of type %u\", header.type);"
    },
    {
        "line": 663,
        "fullcodeline": "pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Server-to-client message of type %u received from client\", header.type);"
    },
    {
        "line": 493,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 497,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 522,
        "fullcodeline": "&pars, session, plen) == -1)"
    },
    {
        "line": 531,
        "fullcodeline": "if (rpcap_senderror(pars.sockctrl,"
    },
    {
        "line": 575,
        "fullcodeline": "svrcapt = session->TotCapt;"
    },
    {
        "line": 586,
        "fullcodeline": "&pars, session) == -1)"
    },
    {
        "line": 588,
        "fullcodeline": "free(session);"
    },
    {
        "line": 589,
        "fullcodeline": "session = NULL;"
    },
    {
        "line": 534,
        "fullcodeline": "errbuf) == -1)"
    },
    {
        "line": 537,
        "fullcodeline": "rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"
    },
    {
        "line": 579,
        "fullcodeline": "stats.ps_ifdrop = 0;"
    },
    {
        "line": 580,
        "fullcodeline": "stats.ps_recv = 0;"
    },
    {
        "line": 581,
        "fullcodeline": "stats.ps_drop = 0;"
    },
    {
        "line": 582,
        "fullcodeline": "svrcapt = 0;"
    }
]