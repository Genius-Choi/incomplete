[
    {
        "line": 4,
        "fullcodeline": "struct kvm *kvm = vcpu->kvm;"
    },
    {
        "line": 6,
        "fullcodeline": "vcpu->srcu_idx = srcu_read_lock(&kvm->srcu);"
    },
    {
        "line": 7,
        "fullcodeline": "r = vapic_enter(vcpu);"
    },
    {
        "line": 13,
        "fullcodeline": "r = 1;"
    },
    {
        "line": 68,
        "fullcodeline": "srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx);"
    },
    {
        "line": 14,
        "fullcodeline": "while (r > 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx);"
    },
    {
        "line": 44,
        "fullcodeline": "clear_bit(KVM_REQ_PENDING_TIMER, &vcpu->requests);"
    },
    {
        "line": 54,
        "fullcodeline": "kvm_check_async_pf_completion(vcpu);"
    },
    {
        "line": 41,
        "fullcodeline": "if (r <= 0)"
    },
    {
        "line": 45,
        "fullcodeline": "if (kvm_cpu_has_pending_timer(vcpu))"
    },
    {
        "line": 48,
        "fullcodeline": "if (dm_request_for_irq_injection(vcpu)) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (signal_pending(current)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (vcpu->arch.mp_state == KVM_MP_STATE_RUNNABLE &&"
    },
    {
        "line": 16,
        "fullcodeline": "!vcpu->arch.apf.halted)"
    },
    {
        "line": 17,
        "fullcodeline": "r = vcpu_enter_guest(vcpu);"
    },
    {
        "line": 46,
        "fullcodeline": "kvm_inject_pending_timer_irqs(vcpu);"
    },
    {
        "line": 49,
        "fullcodeline": "r = -EINTR;"
    },
    {
        "line": 57,
        "fullcodeline": "r = -EINTR;"
    },
    {
        "line": 62,
        "fullcodeline": "srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx);"
    },
    {
        "line": 63,
        "fullcodeline": "kvm_resched(vcpu);"
    },
    {
        "line": 64,
        "fullcodeline": "vcpu->srcu_idx = srcu_read_lock(&kvm->srcu);"
    },
    {
        "line": 19,
        "fullcodeline": "srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx);"
    },
    {
        "line": 20,
        "fullcodeline": "kvm_vcpu_block(vcpu);"
    },
    {
        "line": 21,
        "fullcodeline": "vcpu->srcu_idx = srcu_read_lock(&kvm->srcu);"
    },
    {
        "line": 22,
        "fullcodeline": "if (kvm_check_request(KVM_REQ_UNHALT, vcpu)) {"
    },
    {
        "line": 23,
        "fullcodeline": "kvm_apic_accept_events(vcpu);"
    },
    {
        "line": 35,
        "fullcodeline": "r = -EINTR;"
    }
]