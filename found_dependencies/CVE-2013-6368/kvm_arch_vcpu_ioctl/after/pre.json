[
    {
        "line": 4,
        "fullcodeline": "struct kvm_vcpu *vcpu = filp->private_data;"
    },
    {
        "line": 14,
        "fullcodeline": "u.buffer = NULL;"
    },
    {
        "line": 97,
        "fullcodeline": "r = msr_io(vcpu, argp, kvm_get_msr, 1);"
    },
    {
        "line": 100,
        "fullcodeline": "r = msr_io(vcpu, argp, do_set_msr, 0);"
    },
    {
        "line": 262,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "u.lapic = kzalloc(sizeof(struct kvm_lapic_state), GFP_KERNEL);"
    },
    {
        "line": 22,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 25,
        "fullcodeline": "r = kvm_vcpu_ioctl_get_lapic(vcpu, u.lapic);"
    },
    {
        "line": 28,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 31,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 38,
        "fullcodeline": "u.lapic = memdup_user(argp, sizeof(*u.lapic));"
    },
    {
        "line": 42,
        "fullcodeline": "r = kvm_vcpu_ioctl_set_lapic(vcpu, u.lapic);"
    },
    {
        "line": 48,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 51,
        "fullcodeline": "r = kvm_vcpu_ioctl_interrupt(vcpu, &irq);"
    },
    {
        "line": 55,
        "fullcodeline": "r = kvm_vcpu_ioctl_nmi(vcpu);"
    },
    {
        "line": 59,
        "fullcodeline": "struct kvm_cpuid __user *cpuid_arg = argp;"
    },
    {
        "line": 62,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 65,
        "fullcodeline": "r = kvm_vcpu_ioctl_set_cpuid(vcpu, &cpuid, cpuid_arg->entries);"
    },
    {
        "line": 69,
        "fullcodeline": "struct kvm_cpuid2 __user *cpuid_arg = argp;"
    },
    {
        "line": 72,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 75,
        "fullcodeline": "r = kvm_vcpu_ioctl_set_cpuid2(vcpu, &cpuid,"
    },
    {
        "line": 80,
        "fullcodeline": "struct kvm_cpuid2 __user *cpuid_arg = argp;"
    },
    {
        "line": 83,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 86,
        "fullcodeline": "r = kvm_vcpu_ioctl_get_cpuid2(vcpu, &cpuid,"
    },
    {
        "line": 90,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 93,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 108,
        "fullcodeline": "r = vcpu_ioctl_tpr_access_reporting(vcpu, &tac);"
    },
    {
        "line": 111,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 114,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 120,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 123,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 126,
        "fullcodeline": "r = kvm_lapic_set_vapic_addr(vcpu, va.vapic_addr);"
    },
    {
        "line": 132,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 135,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_setup_mce(vcpu, mcg_cap);"
    },
    {
        "line": 141,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 144,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_set_mce(vcpu, &mce);"
    },
    {
        "line": 150,
        "fullcodeline": "kvm_vcpu_ioctl_x86_get_vcpu_events(vcpu, &events);"
    },
    {
        "line": 152,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 155,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 161,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 165,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_set_vcpu_events(vcpu, &events);"
    },
    {
        "line": 171,
        "fullcodeline": "kvm_vcpu_ioctl_x86_get_debugregs(vcpu, &dbgregs);"
    },
    {
        "line": 173,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 177,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 183,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 188,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_set_debugregs(vcpu, &dbgregs);"
    },
    {
        "line": 192,
        "fullcodeline": "u.xsave = kzalloc(sizeof(struct kvm_xsave), GFP_KERNEL);"
    },
    {
        "line": 193,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 197,
        "fullcodeline": "kvm_vcpu_ioctl_x86_get_xsave(vcpu, u.xsave);"
    },
    {
        "line": 199,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 202,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 206,
        "fullcodeline": "u.xsave = memdup_user(argp, sizeof(*u.xsave));"
    },
    {
        "line": 210,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_set_xsave(vcpu, u.xsave);"
    },
    {
        "line": 214,
        "fullcodeline": "u.xcrs = kzalloc(sizeof(struct kvm_xcrs), GFP_KERNEL);"
    },
    {
        "line": 215,
        "fullcodeline": "r = -ENOMEM;"
    },
    {
        "line": 219,
        "fullcodeline": "kvm_vcpu_ioctl_x86_get_xcrs(vcpu, u.xcrs);"
    },
    {
        "line": 221,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 225,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 229,
        "fullcodeline": "u.xcrs = memdup_user(argp, sizeof(*u.xcrs));"
    },
    {
        "line": 233,
        "fullcodeline": "r = kvm_vcpu_ioctl_x86_set_xcrs(vcpu, u.xcrs);"
    },
    {
        "line": 239,
        "fullcodeline": "r = -EINVAL;"
    },
    {
        "line": 240,
        "fullcodeline": "user_tsc_khz = (u32)arg;"
    },
    {
        "line": 250,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 254,
        "fullcodeline": "r = vcpu->arch.virtual_tsc_khz;"
    },
    {
        "line": 258,
        "fullcodeline": "r = kvm_set_guest_paused(vcpu);"
    },
    {
        "line": 23,
        "fullcodeline": "if (!u.lapic)"
    },
    {
        "line": 36,
        "fullcodeline": "if (!vcpu->arch.apic)"
    },
    {
        "line": 39,
        "fullcodeline": "if (IS_ERR(u.lapic))"
    },
    {
        "line": 49,
        "fullcodeline": "if (copy_from_user(&irq, argp, sizeof irq))"
    },
    {
        "line": 63,
        "fullcodeline": "if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))"
    },
    {
        "line": 73,
        "fullcodeline": "if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))"
    },
    {
        "line": 84,
        "fullcodeline": "if (copy_from_user(&cpuid, cpuid_arg, sizeof cpuid))"
    },
    {
        "line": 106,
        "fullcodeline": "if (copy_from_user(&tac, argp, sizeof tac))"
    },
    {
        "line": 133,
        "fullcodeline": "if (copy_from_user(&mcg_cap, argp, sizeof mcg_cap))"
    },
    {
        "line": 142,
        "fullcodeline": "if (copy_from_user(&mce, argp, sizeof mce))"
    },
    {
        "line": 162,
        "fullcodeline": "if (copy_from_user(&events, argp, sizeof(struct kvm_vcpu_events)))"
    },
    {
        "line": 184,
        "fullcodeline": "if (copy_from_user(&dbgregs, argp,"
    },
    {
        "line": 194,
        "fullcodeline": "if (!u.xsave)"
    },
    {
        "line": 207,
        "fullcodeline": "if (IS_ERR(u.xsave))"
    },
    {
        "line": 216,
        "fullcodeline": "if (!u.xcrs)"
    },
    {
        "line": 230,
        "fullcodeline": "if (IS_ERR(u.xcrs))"
    },
    {
        "line": 242,
        "fullcodeline": "if (user_tsc_khz >= kvm_max_guest_tsc_khz)"
    },
    {
        "line": 245,
        "fullcodeline": "if (user_tsc_khz == 0)"
    },
    {
        "line": 121,
        "fullcodeline": "if (!irqchip_in_kernel(vcpu->kvm))"
    },
    {
        "line": 246,
        "fullcodeline": "user_tsc_khz = tsc_khz;"
    },
    {
        "line": 40,
        "fullcodeline": "return PTR_ERR(u.lapic);"
    },
    {
        "line": 208,
        "fullcodeline": "return PTR_ERR(u.xsave);"
    },
    {
        "line": 231,
        "fullcodeline": "return PTR_ERR(u.xcrs);"
    }
]