[
    {
        "line": 7,
        "fullcodeline": "const char *dom_list[] = {\"test.dom\", NULL};"
    },
    {
        "line": 9,
        "fullcodeline": "ret = sss_certmap_init(NULL, ext_debug, NULL, &ctx);"
    },
    {
        "line": 10,
        "fullcodeline": "assert_int_equal(ret, EOK);"
    },
    {
        "line": 11,
        "fullcodeline": "assert_non_null(ctx);"
    },
    {
        "line": 12,
        "fullcodeline": "assert_null(ctx->prio_list);"
    },
    {
        "line": 14,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 100,"
    },
    {
        "line": 19,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 23,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 24,
        "fullcodeline": "assert_string_equal(filter, \"rule100=<I>CN=Certificate Authority,O=IPA.DEVEL\""
    },
    {
        "line": 26,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 28,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 99,"
    },
    {
        "line": 33,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 37,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 38,
        "fullcodeline": "assert_string_equal(filter, \"rule99=<I>CN=Certificate Authority,O=IPA.DEVEL\""
    },
    {
        "line": 40,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 41,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 42,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 44,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 98,"
    },
    {
        "line": 49,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 53,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 55,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 56,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 57,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 59,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 97,"
    },
    {
        "line": 64,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 68,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 69,
        "fullcodeline": "assert_string_equal(filter, \"rule97=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 71,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 72,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 73,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 75,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 96,"
    },
    {
        "line": 80,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 84,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 85,
        "fullcodeline": "assert_string_equal(filter, \"rule96=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 87,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 88,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 89,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 91,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 95,"
    },
    {
        "line": 95,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 99,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 101,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 103,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 94,"
    },
    {
        "line": 108,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 112,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 113,
        "fullcodeline": "assert_string_equal(filter, \"rule94=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 115,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 116,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 117,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 120,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 89, NULL,"
    },
    {
        "line": 124,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 128,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 129,
        "fullcodeline": "assert_string_equal(filter, \"(rule89=tu1@ad.devel)\");"
    },
    {
        "line": 130,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 132,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 88, NULL,"
    },
    {
        "line": 136,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 140,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 141,
        "fullcodeline": "assert_string_equal(filter, \"(rule88=tu1)\");"
    },
    {
        "line": 142,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 144,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 87, NULL,"
    },
    {
        "line": 148,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 152,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 153,
        "fullcodeline": "assert_string_equal(filter, \"rule87=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 155,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 157,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 86, NULL,"
    },
    {
        "line": 161,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 165,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 166,
        "fullcodeline": "assert_string_equal(filter, \"rule86=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 168,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 171,
        "fullcodeline": "sss_certmap_free_ctx(ctx);"
    },
    {
        "line": 174,
        "fullcodeline": "ret = sss_certmap_init(NULL, ext_debug, NULL, &ctx);"
    },
    {
        "line": 175,
        "fullcodeline": "assert_int_equal(ret, EOK);"
    },
    {
        "line": 176,
        "fullcodeline": "assert_non_null(ctx);"
    },
    {
        "line": 177,
        "fullcodeline": "assert_null(ctx->prio_list);"
    },
    {
        "line": 178,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 181,
        "fullcodeline": "assert_int_equal(ret, 0);"
    },
    {
        "line": 182,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 184,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 186,
        "fullcodeline": "sss_certmap_free_ctx(ctx);"
    },
    {
        "line": 109,
        "fullcodeline": "sizeof(test_cert_der),"
    },
    {
        "line": 179,
        "fullcodeline": "sizeof(test_cert2_der),"
    }
]