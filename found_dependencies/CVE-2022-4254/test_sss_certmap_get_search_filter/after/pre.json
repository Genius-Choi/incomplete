[
    {
        "line": 7,
        "fullcodeline": "const char *dom_list[] = {\"test.dom\", NULL};"
    },
    {
        "line": 9,
        "fullcodeline": "ret = sss_certmap_init(NULL, ext_debug, NULL, &ctx);"
    },
    {
        "line": 10,
        "fullcodeline": "assert_int_equal(ret, EOK);"
    },
    {
        "line": 11,
        "fullcodeline": "assert_non_null(ctx);"
    },
    {
        "line": 12,
        "fullcodeline": "assert_null(ctx->prio_list);"
    },
    {
        "line": 14,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 100,"
    },
    {
        "line": 19,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 23,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 24,
        "fullcodeline": "assert_string_equal(filter, \"rule100=<I>CN=Certificate\\\\20Authority,O=IPA.DEVEL\""
    },
    {
        "line": 26,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 28,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 32,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 33,
        "fullcodeline": "assert_string_equal(filter, \"rule100=<I>CN=Certificate Authority,O=IPA.DEVEL\""
    },
    {
        "line": 35,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 37,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 99,"
    },
    {
        "line": 42,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 46,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 47,
        "fullcodeline": "assert_string_equal(filter, \"rule99=<I>CN=Certificate\\\\20Authority,O=IPA.DEVEL\""
    },
    {
        "line": 49,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 50,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 51,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 53,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 57,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 58,
        "fullcodeline": "assert_string_equal(filter, \"rule99=<I>CN=Certificate Authority,O=IPA.DEVEL\""
    },
    {
        "line": 60,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 61,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 62,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 64,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 98,"
    },
    {
        "line": 69,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 73,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 75,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 76,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 77,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 79,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 83,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 85,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 86,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 87,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 89,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 97,"
    },
    {
        "line": 94,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 98,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 99,
        "fullcodeline": "assert_string_equal(filter, \"rule97=<I>O=IPA.DEVEL,CN=Certificate\\\\20Authority\""
    },
    {
        "line": 101,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 102,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 103,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 105,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 109,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 110,
        "fullcodeline": "assert_string_equal(filter, \"rule97=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 112,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 113,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 114,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 116,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 96,"
    },
    {
        "line": 121,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 125,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 126,
        "fullcodeline": "assert_string_equal(filter, \"rule96=<I>O=IPA.DEVEL,CN=Certificate\\\\20Authority\""
    },
    {
        "line": 128,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 129,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 130,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 132,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 136,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 137,
        "fullcodeline": "assert_string_equal(filter, \"rule96=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 139,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 140,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 141,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 143,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 95,"
    },
    {
        "line": 147,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 151,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 153,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 155,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 159,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 161,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 163,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 94,"
    },
    {
        "line": 168,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 172,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 173,
        "fullcodeline": "assert_string_equal(filter, \"rule94=<I>O=IPA.DEVEL,CN=Certificate\\\\20Authority\""
    },
    {
        "line": 175,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 176,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 177,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 179,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert_der),"
    },
    {
        "line": 183,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 184,
        "fullcodeline": "assert_string_equal(filter, \"rule94=<I>O=IPA.DEVEL,CN=Certificate Authority\""
    },
    {
        "line": 186,
        "fullcodeline": "assert_non_null(domains);"
    },
    {
        "line": 187,
        "fullcodeline": "assert_string_equal(domains[0], \"test.dom\");"
    },
    {
        "line": 188,
        "fullcodeline": "assert_null(domains[1]);"
    },
    {
        "line": 190,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 89, NULL,"
    },
    {
        "line": 194,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 198,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 199,
        "fullcodeline": "assert_string_equal(filter, \"(rule89=tu1@ad.devel)\");"
    },
    {
        "line": 200,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 202,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 206,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 207,
        "fullcodeline": "assert_string_equal(filter, \"(rule89=tu1@ad.devel)\");"
    },
    {
        "line": 208,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 210,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 88, NULL,"
    },
    {
        "line": 214,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 218,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 219,
        "fullcodeline": "assert_string_equal(filter, \"(rule88=tu1)\");"
    },
    {
        "line": 220,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 222,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 87, NULL,"
    },
    {
        "line": 226,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 230,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 231,
        "fullcodeline": "assert_string_equal(filter, \"rule87=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 233,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 235,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 239,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 240,
        "fullcodeline": "assert_string_equal(filter, \"rule87=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 242,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 244,
        "fullcodeline": "ret = sss_certmap_add_rule(ctx, 86, NULL,"
    },
    {
        "line": 248,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 252,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 253,
        "fullcodeline": "assert_string_equal(filter, \"rule86=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 255,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 257,
        "fullcodeline": "ret = sss_certmap_expand_mapping_rule(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 261,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 262,
        "fullcodeline": "assert_string_equal(filter, \"rule86=<I>DC=devel,DC=ad,CN=ad-AD-SERVER-CA\""
    },
    {
        "line": 264,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 267,
        "fullcodeline": "sss_certmap_free_ctx(ctx);"
    },
    {
        "line": 270,
        "fullcodeline": "ret = sss_certmap_init(NULL, ext_debug, NULL, &ctx);"
    },
    {
        "line": 271,
        "fullcodeline": "assert_int_equal(ret, EOK);"
    },
    {
        "line": 272,
        "fullcodeline": "assert_non_null(ctx);"
    },
    {
        "line": 273,
        "fullcodeline": "assert_null(ctx->prio_list);"
    },
    {
        "line": 274,
        "fullcodeline": "ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),"
    },
    {
        "line": 277,
        "fullcodeline": "assert_int_equal(ret, 0);"
    },
    {
        "line": 278,
        "fullcodeline": "assert_non_null(filter);"
    },
    {
        "line": 280,
        "fullcodeline": "assert_null(domains);"
    },
    {
        "line": 282,
        "fullcodeline": "sss_certmap_free_ctx(ctx);"
    },
    {
        "line": 180,
        "fullcodeline": "sizeof(test_cert_der),"
    },
    {
        "line": 275,
        "fullcodeline": "sizeof(test_cert2_der),"
    }
]