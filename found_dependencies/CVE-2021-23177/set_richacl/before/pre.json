[
    {
        "line": 12,
        "fullcodeline": "int\t\t e = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "struct richacl  *richacl = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 17,
        "fullcodeline": "entries = archive_acl_reset(abstract_acl, ae_requested_type);"
    },
    {
        "line": 27,
        "fullcodeline": "richacl = richacl_alloc(entries);"
    },
    {
        "line": 34,
        "fullcodeline": "e = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "_richacl_mode_to_masks(richacl, mode);"
    },
    {
        "line": 18,
        "fullcodeline": "if (entries == 0)"
    },
    {
        "line": 21,
        "fullcodeline": "if (ae_requested_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (richacl == NULL) {"
    },
    {
        "line": 36,
        "fullcodeline": "while (archive_acl_next(a, abstract_acl, ae_requested_type, &ae_type,"
    },
    {
        "line": 107,
        "fullcodeline": "if (fd >= 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "errno = ENOENT;"
    },
    {
        "line": 38,
        "fullcodeline": "richace = &(richacl->a_entries[e]);"
    },
    {
        "line": 40,
        "fullcodeline": "richace->e_flags = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "richace->e_mask = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "for (i = 0; i < acl_nfs4_perm_map_size; ++i) {"
    },
    {
        "line": 96,
        "fullcodeline": "for (i = 0; i < acl_nfs4_flag_map_size; ++i) {"
    },
    {
        "line": 45,
        "fullcodeline": "ae_uid = archive_write_disk_uid(a, ae_name, ae_id);"
    },
    {
        "line": 49,
        "fullcodeline": "ae_gid = archive_write_disk_gid(a, ae_name, ae_id);"
    },
    {
        "line": 51,
        "fullcodeline": "richace->e_flags |= RICHACE_IDENTIFIER_GROUP;"
    },
    {
        "line": 54,
        "fullcodeline": "richace->e_flags |= RICHACE_SPECIAL_WHO;"
    },
    {
        "line": 55,
        "fullcodeline": "richace->e_id = RICHACE_OWNER_SPECIAL_ID;"
    },
    {
        "line": 58,
        "fullcodeline": "richace->e_flags |= RICHACE_SPECIAL_WHO;"
    },
    {
        "line": 59,
        "fullcodeline": "richace->e_id = RICHACE_GROUP_SPECIAL_ID;"
    },
    {
        "line": 62,
        "fullcodeline": "richace->e_flags |= RICHACE_SPECIAL_WHO;"
    },
    {
        "line": 63,
        "fullcodeline": "richace->e_id = RICHACE_EVERYONE_SPECIAL_ID;"
    },
    {
        "line": 68,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 74,
        "fullcodeline": "richace->e_type ="
    },
    {
        "line": 78,
        "fullcodeline": "richace->e_type ="
    },
    {
        "line": 87,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 108,
        "fullcodeline": "if (richacl_set_fd(fd, richacl) == 0)"
    },
    {
        "line": 109,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 92,
        "fullcodeline": "if (ae_permset & acl_nfs4_perm_map[i].a_perm)"
    },
    {
        "line": 97,
        "fullcodeline": "if (ae_permset &"
    },
    {
        "line": 120,
        "fullcodeline": "} else if (richacl_set_file(name, richacl) != 0) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (errno == EOPNOTSUPP) {"
    },
    {
        "line": 121,
        "fullcodeline": "if (errno == EOPNOTSUPP) {"
    },
    {
        "line": 113,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 123,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 117,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 127,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    }
]