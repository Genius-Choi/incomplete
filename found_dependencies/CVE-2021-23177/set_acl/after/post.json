[
    {
        "line": 5,
        "fullcodeline": "int\t\t acl_type = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 24,
        "fullcodeline": "entries = archive_acl_reset(abstract_acl, ae_requested_type);"
    },
    {
        "line": 54,
        "fullcodeline": "acl = acl_init(entries);"
    },
    {
        "line": 248,
        "fullcodeline": "acl_free(acl);"
    },
    {
        "line": 25,
        "fullcodeline": "if (entries == 0)"
    },
    {
        "line": 47,
        "fullcodeline": "if (acl_type == ACL_TYPE_DEFAULT && !S_ISDIR(mode)) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (acl == (acl_t)NULL) {"
    },
    {
        "line": 61,
        "fullcodeline": "while (archive_acl_next(a, abstract_acl, ae_requested_type, &ae_type,"
    },
    {
        "line": 214,
        "fullcodeline": "if (fd >= 0) {"
    },
    {
        "line": 31,
        "fullcodeline": "acl_type = ACL_TYPE_ACCESS;"
    },
    {
        "line": 34,
        "fullcodeline": "acl_type = ACL_TYPE_DEFAULT;"
    },
    {
        "line": 42,
        "fullcodeline": "errno = ENOENT;"
    },
    {
        "line": 43,
        "fullcodeline": "archive_set_error(a, errno, \"Unsupported ACL type\");"
    },
    {
        "line": 48,
        "fullcodeline": "errno = EINVAL;"
    },
    {
        "line": 49,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 56,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 160,
        "fullcodeline": "perm_map_size = acl_posix_perm_map_size;"
    },
    {
        "line": 161,
        "fullcodeline": "perm_map = acl_posix_perm_map;"
    },
    {
        "line": 63,
        "fullcodeline": "if (acl_create_entry(&acl, &acl_entry) != 0) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (acl_get_permset(acl_entry, &acl_permset) != 0) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (acl_clear_perms(acl_permset) != 0) {"
    },
    {
        "line": 166,
        "fullcodeline": "for (i = 0; i < perm_map_size; ++i) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (acl_set_fd_np(fd, acl, acl_type) == 0)"
    },
    {
        "line": 64,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 66,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 71,
        "fullcodeline": "ae_uid = archive_write_disk_uid(a, ae_name, ae_id);"
    },
    {
        "line": 72,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_USER);"
    },
    {
        "line": 73,
        "fullcodeline": "acl_set_qualifier(acl_entry, &ae_uid);"
    },
    {
        "line": 76,
        "fullcodeline": "ae_gid = archive_write_disk_gid(a, ae_name, ae_id);"
    },
    {
        "line": 77,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_GROUP);"
    },
    {
        "line": 78,
        "fullcodeline": "acl_set_qualifier(acl_entry, &ae_gid);"
    },
    {
        "line": 81,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_USER_OBJ);"
    },
    {
        "line": 84,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_GROUP_OBJ);"
    },
    {
        "line": 87,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_MASK);"
    },
    {
        "line": 90,
        "fullcodeline": "acl_set_tag_type(acl_entry, ACL_OTHER);"
    },
    {
        "line": 98,
        "fullcodeline": "archive_set_error(a, ARCHIVE_ERRNO_MISC,"
    },
    {
        "line": 100,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 143,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 145,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 149,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 151,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 216,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 232,
        "fullcodeline": "else if (S_ISLNK(mode)) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (ae_permset & perm_map[i].a_perm) {"
    },
    {
        "line": 234,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 218,
        "fullcodeline": "if (errno == EOPNOTSUPP) {"
    },
    {
        "line": 168,
        "fullcodeline": "if (acl_add_perm(acl_permset,"
    },
    {
        "line": 220,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 235,
        "fullcodeline": "} else if (acl_set_file(name, acl_type, acl) != 0)"
    },
    {
        "line": 170,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 172,
        "fullcodeline": "ret = ARCHIVE_FAILED;"
    },
    {
        "line": 222,
        "fullcodeline": "archive_set_error(a, errno,"
    },
    {
        "line": 224,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 238,
        "fullcodeline": "if (errno == EOPNOTSUPP) {"
    },
    {
        "line": 240,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 242,
        "fullcodeline": "archive_set_error(a, errno, \"Failed to set acl: %s\","
    },
    {
        "line": 244,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    }
]