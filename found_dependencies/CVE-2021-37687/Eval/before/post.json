[
    {
        "line": 2,
        "fullcodeline": "const auto* params ="
    },
    {
        "line": 5,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"
    },
    {
        "line": 7,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 10,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 61,
        "fullcodeline": "context->ReportError(context,"
    },
    {
        "line": 3,
        "fullcodeline": "reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"
    },
    {
        "line": 8,
        "fullcodeline": "GetInputSafe(context, node, kInputPositions, &positions));"
    },
    {
        "line": 11,
        "fullcodeline": "GetOutputSafe(context, node, kOutputTensor, &output));"
    },
    {
        "line": 13,
        "fullcodeline": "if (positions->type == kTfLiteInt32) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (positions->type == kTfLiteInt64) {"
    },
    {
        "line": 63,
        "fullcodeline": "TfLiteTypeGetName(positions->type));"
    },
    {
        "line": 32,
        "fullcodeline": "context->ReportError(context, \"Type '%s' is not supported by gather.\","
    },
    {
        "line": 56,
        "fullcodeline": "context->ReportError(context, \"Type '%s' is not supported by gather.\","
    },
    {
        "line": 16,
        "fullcodeline": "return Gather<float, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 18,
        "fullcodeline": "return Gather<uint8_t, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 20,
        "fullcodeline": "return Gather<int8_t, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 22,
        "fullcodeline": "return Gather<int16_t, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 24,
        "fullcodeline": "return Gather<int32_t, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 26,
        "fullcodeline": "return Gather<int64_t, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 28,
        "fullcodeline": "return Gather<bool, int32_t>(*params, input, positions, output);"
    },
    {
        "line": 30,
        "fullcodeline": "return GatherStrings<int32_t>(context, input, positions, output);"
    },
    {
        "line": 33,
        "fullcodeline": "TfLiteTypeGetName(input->type));"
    },
    {
        "line": 40,
        "fullcodeline": "return Gather<float, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 42,
        "fullcodeline": "return Gather<uint8_t, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 44,
        "fullcodeline": "return Gather<int8_t, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 46,
        "fullcodeline": "return Gather<int16_t, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 48,
        "fullcodeline": "return Gather<int32_t, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 50,
        "fullcodeline": "return Gather<int64_t, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 52,
        "fullcodeline": "return Gather<bool, int64_t>(*params, input, positions, output);"
    },
    {
        "line": 54,
        "fullcodeline": "return GatherStrings<int64_t>(context, input, positions, output);"
    },
    {
        "line": 57,
        "fullcodeline": "TfLiteTypeGetName(input->type));"
    }
]