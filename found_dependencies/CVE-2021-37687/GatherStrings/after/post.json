[
    {
        "line": 6,
        "fullcodeline": "const PositionT* indexes = GetTensorData<PositionT>(positions);"
    },
    {
        "line": 7,
        "fullcodeline": "bool indices_has_only_positive_elements = true;"
    },
    {
        "line": 8,
        "fullcodeline": "const size_t num_indices = positions->bytes / sizeof(PositionT);"
    },
    {
        "line": 15,
        "fullcodeline": "TF_LITE_ENSURE(context, indices_has_only_positive_elements);"
    },
    {
        "line": 17,
        "fullcodeline": "const PositionT num_strings = GetStringCount(input);"
    },
    {
        "line": 18,
        "fullcodeline": "const int num_indexes = NumElements(positions);"
    },
    {
        "line": 26,
        "fullcodeline": "buffer.WriteToTensor(output, /*new_shape=*/nullptr);"
    },
    {
        "line": 9,
        "fullcodeline": "for (size_t i = 0; i < num_indices; i++) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (int i = 0; i < num_indexes; ++i) {"
    },
    {
        "line": 21,
        "fullcodeline": "const PositionT pos = indexes[i];"
    },
    {
        "line": 22,
        "fullcodeline": "TF_LITE_ENSURE(context, pos < num_strings);"
    },
    {
        "line": 23,
        "fullcodeline": "const auto string_ref = GetString(input, pos);"
    },
    {
        "line": 24,
        "fullcodeline": "buffer.AddString(string_ref.str, string_ref.len);"
    },
    {
        "line": 10,
        "fullcodeline": "if (indexes[i] < 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "indices_has_only_positive_elements = false;"
    }
]