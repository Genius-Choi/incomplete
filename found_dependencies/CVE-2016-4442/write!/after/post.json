[
    {
        "line": 3,
        "fullcodeline": "tokens_changed = false"
    },
    {
        "line": 5,
        "fullcodeline": "if MiniProfiler.request_authorized? && MiniProfiler.config.authorization_mode == :whitelist"
    },
    {
        "line": 10,
        "fullcodeline": "if  @orig_disable_profiling != @disable_profiling ||"
    },
    {
        "line": 7,
        "fullcodeline": "tokens_changed = !@orig_auth_tokens || ((@allowed_tokens - @orig_auth_tokens).length > 0)"
    },
    {
        "line": 15,
        "fullcodeline": "settings = {\"p\" =>  \"t\" }"
    },
    {
        "line": 20,
        "fullcodeline": "settings_string = settings.map{|k,v| \"#{k}=#{v}\"}.join(\",\")"
    },
    {
        "line": 18,
        "fullcodeline": "settings[\"a\"] = @allowed_tokens.join(\"|\") if @allowed_tokens && MiniProfiler.request_authorized?"
    },
    {
        "line": 21,
        "fullcodeline": "Rack::Utils.set_cookie_header!(headers, COOKIE_NAME, :value => settings_string, :path => '/')"
    },
    {
        "line": 6,
        "fullcodeline": "@allowed_tokens ||= @store.allowed_tokens"
    },
    {
        "line": 11,
        "fullcodeline": "@orig_backtrace_level != @backtrace_level ||"
    },
    {
        "line": 12,
        "fullcodeline": "@cookie.nil? ||"
    },
    {
        "line": 16,
        "fullcodeline": "settings[\"dp\"] = \"t\"                  if @disable_profiling"
    },
    {
        "line": 17,
        "fullcodeline": "settings[\"bt\"] = @backtrace_level     if @backtrace_level"
    }
]