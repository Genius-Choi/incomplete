[
    {
        "line": 4,
        "fullcodeline": "current_user = request.user"
    },
    {
        "line": 5,
        "fullcodeline": "session_user = request.session.get(\"original_user\", {\"id\": current_user.id, \"username\": current_user.get_username()})"
    },
    {
        "line": 8,
        "fullcodeline": "redirect_url = request.GET.get(\"redirect\", None)"
    },
    {
        "line": 9,
        "fullcodeline": "if redirect_url is None or not \\"
    },
    {
        "line": 40,
        "fullcodeline": "if not hasattr(target_user, 'backend'):"
    },
    {
        "line": 47,
        "fullcodeline": "if hasattr(target_user, 'backend'):"
    },
    {
        "line": 52,
        "fullcodeline": "return redirect(redirect_url)"
    },
    {
        "line": 15,
        "fullcodeline": "raise Http404()"
    },
    {
        "line": 19,
        "fullcodeline": "original_user = User.objects.get(pk=session_user[\"id\"], is_staff=True)"
    },
    {
        "line": 30,
        "fullcodeline": "target_user = User.objects.get(pk=object_id, is_staff=True)"
    },
    {
        "line": 48,
        "fullcodeline": "login(request, target_user)"
    },
    {
        "line": 10,
        "fullcodeline": "url_has_allowed_host_and_scheme("
    },
    {
        "line": 20,
        "fullcodeline": "if not SWITCH_USER_ORIGINAL(original_user):"
    },
    {
        "line": 31,
        "fullcodeline": "if target_user != original_user and not SWITCH_USER_TARGET(original_user, target_user):"
    },
    {
        "line": 41,
        "fullcodeline": "for backend in settings.AUTHENTICATION_BACKENDS:"
    },
    {
        "line": 49,
        "fullcodeline": "if original_user.id != target_user.id:"
    },
    {
        "line": 12,
        "fullcodeline": "allowed_hosts={request.get_host()},"
    },
    {
        "line": 13,
        "fullcodeline": "require_https=request.is_secure(),"
    },
    {
        "line": 21,
        "fullcodeline": "messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))"
    },
    {
        "line": 24,
        "fullcodeline": "msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(session_user[\"id\"])}"
    },
    {
        "line": 25,
        "fullcodeline": "messages.add_message(request, messages.ERROR, msg)"
    },
    {
        "line": 32,
        "fullcodeline": "messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))"
    },
    {
        "line": 35,
        "fullcodeline": "msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(object_id)}"
    },
    {
        "line": 36,
        "fullcodeline": "messages.add_message(request, messages.ERROR, msg)"
    },
    {
        "line": 50,
        "fullcodeline": "request.session[\"original_user\"] = {\"id\": original_user.id, \"username\": original_user.get_username()}"
    },
    {
        "line": 22,
        "fullcodeline": "return redirect(redirect_url)"
    },
    {
        "line": 26,
        "fullcodeline": "return redirect(redirect_url)"
    },
    {
        "line": 33,
        "fullcodeline": "return redirect(redirect_url)"
    },
    {
        "line": 37,
        "fullcodeline": "return redirect(redirect_url)"
    },
    {
        "line": 42,
        "fullcodeline": "if target_user == load_backend(backend).get_user(target_user.pk):"
    },
    {
        "line": 43,
        "fullcodeline": "target_user.backend = backend"
    }
]