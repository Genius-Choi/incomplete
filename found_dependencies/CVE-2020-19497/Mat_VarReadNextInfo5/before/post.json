[
    {
        "line": 6,
        "fullcodeline": "matvar_t *matvar = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "fpos = ftell((FILE*)mat->fp);"
    },
    {
        "line": 17,
        "fullcodeline": "err = fread(&data_type,4,1,(FILE*)mat->fp);"
    },
    {
        "line": 20,
        "fullcodeline": "err = fread(&nBytes,4,1,(FILE*)mat->fp);"
    },
    {
        "line": 9,
        "fullcodeline": "if ( mat == NULL )"
    },
    {
        "line": 13,
        "fullcodeline": "if ( fpos == -1L ) {"
    },
    {
        "line": 18,
        "fullcodeline": "if ( err == 0 )"
    },
    {
        "line": 14,
        "fullcodeline": "Mat_Critical(\"Couldn't determine file position\");"
    },
    {
        "line": 22,
        "fullcodeline": "(void)Mat_int32Swap(&data_type);"
    },
    {
        "line": 23,
        "fullcodeline": "(void)Mat_int32Swap(&nBytes);"
    },
    {
        "line": 265,
        "fullcodeline": "Mat_Critical(\"%d is not valid (MAT_T_MATRIX or MAT_T_COMPRESSED)\","
    },
    {
        "line": 156,
        "fullcodeline": "Mat_Critical(\"Compressed variable found in \\\"%s\\\", but matio was \""
    },
    {
        "line": 158,
        "fullcodeline": "(void)fseek((FILE*)mat->fp,nBytes+8+fpos,SEEK_SET);"
    },
    {
        "line": 164,
        "fullcodeline": "mat_uint32_t buf[6];"
    },
    {
        "line": 168,
        "fullcodeline": "readresult = fread(buf, 4, 6, (FILE*)mat->fp);"
    },
    {
        "line": 182,
        "fullcodeline": "matvar = Mat_VarCalloc();"
    },
    {
        "line": 200,
        "fullcodeline": "readresult = ReadRankDims(mat, matvar, (enum matio_types)buf[4], buf[5]);"
    },
    {
        "line": 208,
        "fullcodeline": "readresult = fread(buf, 4, 2, (FILE*)mat->fp);"
    },
    {
        "line": 257,
        "fullcodeline": "matvar->internal->datapos = ftell((FILE*)mat->fp);"
    },
    {
        "line": 261,
        "fullcodeline": "(void)fseek((FILE*)mat->fp,nBytes+8+fpos,SEEK_SET);"
    },
    {
        "line": 169,
        "fullcodeline": "if ( 6 != readresult ) {"
    },
    {
        "line": 183,
        "fullcodeline": "if ( NULL == matvar ) {"
    },
    {
        "line": 189,
        "fullcodeline": "if ( buf[0] == MAT_T_UINT32 ) {"
    },
    {
        "line": 201,
        "fullcodeline": "if ( 0 == readresult && 0 < matvar->rank ) {"
    },
    {
        "line": 209,
        "fullcodeline": "if ( 2 != readresult ) {"
    },
    {
        "line": 218,
        "fullcodeline": "if ( buf[0] == MAT_T_INT8 ) {    /* Name not in tag */"
    },
    {
        "line": 251,
        "fullcodeline": "if ( matvar->class_type == MAT_C_STRUCT )"
    },
    {
        "line": 258,
        "fullcodeline": "if ( matvar->internal->datapos == -1L ) {"
    },
    {
        "line": 170,
        "fullcodeline": "(void)fseek((FILE*)mat->fp, fpos, SEEK_SET);"
    },
    {
        "line": 174,
        "fullcodeline": "(void)Mat_uint32Swap(buf);"
    },
    {
        "line": 175,
        "fullcodeline": "(void)Mat_uint32Swap(buf+1);"
    },
    {
        "line": 176,
        "fullcodeline": "(void)Mat_uint32Swap(buf+2);"
    },
    {
        "line": 177,
        "fullcodeline": "(void)Mat_uint32Swap(buf+3);"
    },
    {
        "line": 178,
        "fullcodeline": "(void)Mat_uint32Swap(buf+4);"
    },
    {
        "line": 179,
        "fullcodeline": "(void)Mat_uint32Swap(buf+5);"
    },
    {
        "line": 184,
        "fullcodeline": "Mat_Critical(\"Couldn't allocate memory\");"
    },
    {
        "line": 190,
        "fullcodeline": "array_flags = buf[2];"
    },
    {
        "line": 191,
        "fullcodeline": "matvar->class_type = CLASS_FROM_ARRAY_FLAGS(array_flags);"
    },
    {
        "line": 192,
        "fullcodeline": "matvar->isComplex  = (array_flags & MAT_F_COMPLEX);"
    },
    {
        "line": 193,
        "fullcodeline": "matvar->isGlobal   = (array_flags & MAT_F_GLOBAL);"
    },
    {
        "line": 194,
        "fullcodeline": "matvar->isLogical  = (array_flags & MAT_F_LOGICAL);"
    },
    {
        "line": 202,
        "fullcodeline": "Mat_VarFree(matvar);"
    },
    {
        "line": 203,
        "fullcodeline": "matvar = NULL;"
    },
    {
        "line": 204,
        "fullcodeline": "(void)fseek((FILE*)mat->fp, fpos, SEEK_SET);"
    },
    {
        "line": 210,
        "fullcodeline": "Mat_VarFree(matvar);"
    },
    {
        "line": 211,
        "fullcodeline": "matvar = NULL;"
    },
    {
        "line": 212,
        "fullcodeline": "(void)fseek((FILE*)mat->fp, fpos, SEEK_SET);"
    },
    {
        "line": 216,
        "fullcodeline": "(void)Mat_uint32Swap(buf);"
    },
    {
        "line": 228,
        "fullcodeline": "matvar->name = (char*)malloc(len_pad + 1);"
    },
    {
        "line": 252,
        "fullcodeline": "(void)ReadNextStructField(mat,matvar);"
    },
    {
        "line": 259,
        "fullcodeline": "Mat_Critical(\"Couldn't determine file position\");"
    },
    {
        "line": 195,
        "fullcodeline": "if ( matvar->class_type == MAT_C_SPARSE ) {"
    },
    {
        "line": 224,
        "fullcodeline": "if ( len % 8 == 0 )"
    },
    {
        "line": 229,
        "fullcodeline": "if ( NULL != matvar->name ) {"
    },
    {
        "line": 241,
        "fullcodeline": "mat_uint32_t len = (buf[0] & 0xffff0000) >> 16;"
    },
    {
        "line": 197,
        "fullcodeline": "matvar->nbytes = buf[3];"
    },
    {
        "line": 221,
        "fullcodeline": "len = Mat_uint32Swap(buf+1);"
    },
    {
        "line": 225,
        "fullcodeline": "len_pad = len;"
    },
    {
        "line": 230,
        "fullcodeline": "readresult = fread(matvar->name, 1, len_pad, (FILE*)mat->fp);"
    },
    {
        "line": 242,
        "fullcodeline": "if ( ((buf[0] & 0x0000ffff) == MAT_T_INT8) && len > 0 && len <= 4 ) {"
    },
    {
        "line": 253,
        "fullcodeline": "else if ( matvar->class_type == MAT_C_CELL )"
    },
    {
        "line": 223,
        "fullcodeline": "len = buf[1];"
    },
    {
        "line": 227,
        "fullcodeline": "len_pad = len + 8 - (len % 8);"
    },
    {
        "line": 231,
        "fullcodeline": "if ( readresult == len_pad ) {"
    },
    {
        "line": 244,
        "fullcodeline": "matvar->name = (char*)malloc(len+1);"
    },
    {
        "line": 254,
        "fullcodeline": "(void)ReadNextCell(mat,matvar);"
    },
    {
        "line": 232,
        "fullcodeline": "matvar->name[len] = '\\0';"
    },
    {
        "line": 245,
        "fullcodeline": "if ( NULL != matvar->name ) {"
    },
    {
        "line": 234,
        "fullcodeline": "Mat_VarFree(matvar);"
    },
    {
        "line": 235,
        "fullcodeline": "matvar = NULL;"
    },
    {
        "line": 236,
        "fullcodeline": "(void)fseek((FILE*)mat->fp, fpos, SEEK_SET);"
    },
    {
        "line": 246,
        "fullcodeline": "memcpy(matvar->name, buf+1, len);"
    },
    {
        "line": 247,
        "fullcodeline": "matvar->name[len] = '\\0';"
    },
    {
        "line": 255,
        "fullcodeline": "else if ( matvar->class_type == MAT_C_FUNCTION )"
    },
    {
        "line": 256,
        "fullcodeline": "(void)ReadNextFunctionHandle(mat,matvar);"
    }
]