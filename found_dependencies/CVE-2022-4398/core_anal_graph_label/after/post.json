[
    {
        "line": 3,
        "fullcodeline": "int is_json = opts & R_CORE_ANAL_JSON;"
    },
    {
        "line": 4,
        "fullcodeline": "char cmd[1024], file[1024], *cmdstr = NULL, *filestr = NULL, *str = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int line = 0, oline = 0, idx = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "if (opts & R_CORE_ANAL_GRAPHLINES) {"
    },
    {
        "line": 51,
        "fullcodeline": "str = r_str_escape_dot (cmdstr);"
    },
    {
        "line": 52,
        "fullcodeline": "free (cmdstr);"
    },
    {
        "line": 9,
        "fullcodeline": "for (at = bb->addr; at < bb->addr + bb->size; at += 2) {"
    },
    {
        "line": 10,
        "fullcodeline": "r_bin_addr2line (core->bin, at, file, sizeof (file) - 1, &line);"
    },
    {
        "line": 35,
        "fullcodeline": "oline = line;"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (opts & R_CORE_ANAL_STAR) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (line != 0 && line != oline && strcmp (file, \"??\")) {"
    },
    {
        "line": 39,
        "fullcodeline": "str = r_core_cmd_str (core, cmd);"
    },
    {
        "line": 12,
        "fullcodeline": "filestr = r_file_slurp_line (file, line, 0);"
    },
    {
        "line": 40,
        "fullcodeline": "} else if (opts & R_CORE_ANAL_GRAPHBODY) {"
    },
    {
        "line": 14,
        "fullcodeline": "int flen = strlen (filestr);"
    },
    {
        "line": 19,
        "fullcodeline": "cmdstr = realloc (cmdstr, idx + flen + 8);"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy (cmdstr + idx, filestr, flen);"
    },
    {
        "line": 21,
        "fullcodeline": "idx += flen;"
    },
    {
        "line": 32,
        "fullcodeline": "free (filestr);"
    },
    {
        "line": 41,
        "fullcodeline": "const bool scrColor = r_config_get (core->config, \"scr.color\");"
    },
    {
        "line": 42,
        "fullcodeline": "const bool scrUtf8 = r_config_get (core->config, \"scr.utf8\");"
    },
    {
        "line": 43,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"
    },
    {
        "line": 44,
        "fullcodeline": "r_config_set_b (core->config, \"scr.utf8\", false);"
    },
    {
        "line": 46,
        "fullcodeline": "cmdstr = r_core_cmd_str (core, cmd);"
    },
    {
        "line": 47,
        "fullcodeline": "r_config_set_i (core->config, \"scr.color\", scrColor);"
    },
    {
        "line": 48,
        "fullcodeline": "r_config_set_i (core->config, \"scr.utf8\", scrUtf8);"
    },
    {
        "line": 15,
        "fullcodeline": "if (idx < 0 || ST32_ADD_OVFCHK (idx, flen + 8)) {"
    },
    {
        "line": 16,
        "fullcodeline": "R_LOG_WARN (\"integer overflow detected\");"
    },
    {
        "line": 23,
        "fullcodeline": "strcpy (cmdstr + idx, \"\\\\n\");"
    },
    {
        "line": 24,
        "fullcodeline": "idx += 2;"
    },
    {
        "line": 26,
        "fullcodeline": "strcpy (cmdstr + idx, \"<br />\");"
    },
    {
        "line": 27,
        "fullcodeline": "idx += 6;"
    },
    {
        "line": 29,
        "fullcodeline": "strcpy (cmdstr + idx, \"\\\\l\");"
    },
    {
        "line": 30,
        "fullcodeline": "idx += 2;"
    }
]