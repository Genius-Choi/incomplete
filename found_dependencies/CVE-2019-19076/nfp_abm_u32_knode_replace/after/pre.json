[
    {
        "line": 5,
        "fullcodeline": "struct nfp_abm_u32_match *match = NULL, *iter;"
    },
    {
        "line": 15,
        "fullcodeline": "tos_off = proto == htons(ETH_P_IP) ? 16 : 20;"
    },
    {
        "line": 18,
        "fullcodeline": "val = be32_to_cpu(knode->sel->keys[0].val) >> tos_off & 0xff;"
    },
    {
        "line": 19,
        "fullcodeline": "mask = be32_to_cpu(knode->sel->keys[0].mask) >> tos_off & 0xff;"
    },
    {
        "line": 22,
        "fullcodeline": "list_for_each_entry(iter, &alink->dscp_map, list) {"
    },
    {
        "line": 48,
        "fullcodeline": "match->handle = knode->handle;"
    },
    {
        "line": 49,
        "fullcodeline": "match->band = knode->res->classid;"
    },
    {
        "line": 50,
        "fullcodeline": "match->mask = mask;"
    },
    {
        "line": 51,
        "fullcodeline": "match->val = val;"
    },
    {
        "line": 53,
        "fullcodeline": "err = nfp_abm_update_band_map(alink);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!nfp_abm_u32_check_knode(alink->abm, knode, proto, extack)) {"
    },
    {
        "line": 30,
        "fullcodeline": "cmask = iter->mask & mask;"
    },
    {
        "line": 39,
        "fullcodeline": "if (!match) {"
    },
    {
        "line": 11,
        "fullcodeline": "err = -EOPNOTSUPP;"
    },
    {
        "line": 25,
        "fullcodeline": "if (iter->handle == knode->handle) {"
    },
    {
        "line": 31,
        "fullcodeline": "if ((iter->val & cmask) == (val & cmask) &&"
    },
    {
        "line": 40,
        "fullcodeline": "match = kzalloc(sizeof(*match), GFP_KERNEL);"
    },
    {
        "line": 46,
        "fullcodeline": "list_add(&match->list, &alink->dscp_map);"
    },
    {
        "line": 32,
        "fullcodeline": "iter->band != knode->res->classid) {"
    },
    {
        "line": 34,
        "fullcodeline": "err = -EOPNOTSUPP;"
    },
    {
        "line": 41,
        "fullcodeline": "if (!match) {"
    },
    {
        "line": 42,
        "fullcodeline": "err = -ENOMEM;"
    }
]