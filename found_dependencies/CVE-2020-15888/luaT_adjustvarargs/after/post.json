[
    {
        "line": 4,
        "fullcodeline": "int actual = cast_int(L->top - ci->func) - 1;  /* number of arguments */"
    },
    {
        "line": 5,
        "fullcodeline": "int nextra = actual - nfixparams;  /* number of extra arguments */"
    },
    {
        "line": 6,
        "fullcodeline": "ci->u.l.nextraargs = nextra;"
    },
    {
        "line": 7,
        "fullcodeline": "luaD_checkstack(L, p->maxstacksize + 1);"
    },
    {
        "line": 9,
        "fullcodeline": "setobjs2s(L, L->top++, ci->func);"
    },
    {
        "line": 15,
        "fullcodeline": "ci->func += actual + 1;"
    },
    {
        "line": 16,
        "fullcodeline": "ci->top += actual + 1;"
    },
    {
        "line": 17,
        "fullcodeline": "lua_assert(L->top <= ci->top && ci->top <= L->stack_last);"
    },
    {
        "line": 11,
        "fullcodeline": "for (i = 1; i <= nfixparams; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "setobjs2s(L, L->top++, ci->func + i);"
    },
    {
        "line": 13,
        "fullcodeline": "setnilvalue(s2v(ci->func + i));  /* erase original parameter (for GC) */"
    }
]