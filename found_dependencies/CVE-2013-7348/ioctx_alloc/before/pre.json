[
    {
        "line": 3,
        "fullcodeline": "struct mm_struct *mm = current->mm;"
    },
    {
        "line": 5,
        "fullcodeline": "int err = -ENOMEM;"
    },
    {
        "line": 16,
        "fullcodeline": "nr_events = max(nr_events, num_possible_cpus() * 4);"
    },
    {
        "line": 17,
        "fullcodeline": "nr_events *= 2;"
    },
    {
        "line": 29,
        "fullcodeline": "ctx = kmem_cache_zalloc(kioctx_cachep, GFP_KERNEL);"
    },
    {
        "line": 33,
        "fullcodeline": "ctx->max_reqs = nr_events;"
    },
    {
        "line": 56,
        "fullcodeline": "ctx->req_batch = (ctx->nr_events - 1) / (num_possible_cpus() * 4);"
    },
    {
        "line": 61,
        "fullcodeline": "spin_lock(&aio_nr_lock);"
    },
    {
        "line": 73,
        "fullcodeline": "err = ioctx_add_table(ctx, mm);"
    },
    {
        "line": 77,
        "fullcodeline": "pr_debug(\"allocated ioctx %p[%ld]: mm=%p mask=0x%x\\n\","
    },
    {
        "line": 82,
        "fullcodeline": "aio_nr_sub(ctx->max_reqs);"
    },
    {
        "line": 84,
        "fullcodeline": "aio_free_ring(ctx);"
    },
    {
        "line": 85,
        "fullcodeline": "free_percpu(ctx->cpu);"
    },
    {
        "line": 89,
        "fullcodeline": "pr_debug(\"error allocating ioctx %d\\n\", err);"
    },
    {
        "line": 20,
        "fullcodeline": "if ((nr_events > (0x10000000U / sizeof(struct io_event))) ||"
    },
    {
        "line": 30,
        "fullcodeline": "if (!ctx)"
    },
    {
        "line": 35,
        "fullcodeline": "if (percpu_ref_init(&ctx->users, free_ioctx_users))"
    },
    {
        "line": 38,
        "fullcodeline": "if (percpu_ref_init(&ctx->reqs, free_ioctx_reqs))"
    },
    {
        "line": 49,
        "fullcodeline": "if (!ctx->cpu)"
    },
    {
        "line": 55,
        "fullcodeline": "atomic_set(&ctx->reqs_available, ctx->nr_events - 1);"
    },
    {
        "line": 57,
        "fullcodeline": "if (ctx->req_batch < 1)"
    },
    {
        "line": 90,
        "fullcodeline": "return ERR_PTR(err);"
    },
    {
        "line": 21,
        "fullcodeline": "(nr_events > (0x10000000U / sizeof(struct kiocb)))) {"
    },
    {
        "line": 22,
        "fullcodeline": "pr_debug(\"ENOMEM: nr_events too high\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "if (!nr_events || (unsigned long)nr_events > (aio_max_nr * 2UL))"
    },
    {
        "line": 52,
        "fullcodeline": "if (aio_setup_ring(ctx) < 0)"
    },
    {
        "line": 58,
        "fullcodeline": "ctx->req_batch = 1;"
    },
    {
        "line": 62,
        "fullcodeline": "if (aio_nr + nr_events > (aio_max_nr * 2UL) ||"
    },
    {
        "line": 63,
        "fullcodeline": "aio_nr + nr_events < aio_nr) {"
    },
    {
        "line": 65,
        "fullcodeline": "err = -EAGAIN;"
    },
    {
        "line": 23,
        "fullcodeline": "return ERR_PTR(-EINVAL);"
    },
    {
        "line": 27,
        "fullcodeline": "return ERR_PTR(-EAGAIN);"
    },
    {
        "line": 31,
        "fullcodeline": "return ERR_PTR(-ENOMEM);"
    }
]