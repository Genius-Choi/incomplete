[
    {
        "line": 5,
        "fullcodeline": "const auto ret = full_type::SpecializeType(attrs_, op_def);"
    },
    {
        "line": 10,
        "fullcodeline": "ret_types_ = ret.ValueOrDie();"
    },
    {
        "line": 12,
        "fullcodeline": "input_tensors_ = input_tensors;"
    },
    {
        "line": 13,
        "fullcodeline": "input_tensors_as_shapes_ = input_tensors_as_shapes;"
    },
    {
        "line": 15,
        "fullcodeline": "construction_status_ ="
    },
    {
        "line": 19,
        "fullcodeline": "int num_outputs = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "outputs_.assign(num_outputs, nullptr);"
    },
    {
        "line": 24,
        "fullcodeline": "output_handle_shapes_and_types_.resize(num_outputs);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!ret.status().ok()) {"
    },
    {
        "line": 16,
        "fullcodeline": "NameRangesForNode(attrs_, op_def, &input_name_map_, &output_name_map_);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!construction_status_.ok()) return;"
    },
    {
        "line": 7,
        "fullcodeline": "construction_status_ = ret.status();"
    },
    {
        "line": 21,
        "fullcodeline": "num_outputs = std::max(num_outputs, e.second.second);"
    }
]