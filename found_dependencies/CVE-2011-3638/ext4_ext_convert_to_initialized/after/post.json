[
    {
        "line": 11,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "int split_flag = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "ext_debug(\"ext4_ext_convert_to_initialized: inode %lu, logical\""
    },
    {
        "line": 18,
        "fullcodeline": "eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>"
    },
    {
        "line": 23,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 25,
        "fullcodeline": "ee_block = le32_to_cpu(ex->ee_block);"
    },
    {
        "line": 26,
        "fullcodeline": "ee_len = ext4_ext_get_actual_len(ex);"
    },
    {
        "line": 27,
        "fullcodeline": "allocated = ee_len - (map->m_lblk - ee_block);"
    },
    {
        "line": 29,
        "fullcodeline": "WARN_ON(map->m_lblk < ee_block);"
    },
    {
        "line": 34,
        "fullcodeline": "split_flag |= ee_block + ee_len <= eof_block ? EXT4_EXT_MAY_ZEROOUT : 0;"
    },
    {
        "line": 59,
        "fullcodeline": "split_map.m_lblk = map->m_lblk;"
    },
    {
        "line": 60,
        "fullcodeline": "split_map.m_len = map->m_len;"
    },
    {
        "line": 98,
        "fullcodeline": "allocated = ext4_split_extent(handle, inode, path,"
    },
    {
        "line": 16,
        "fullcodeline": "(unsigned long long)map->m_lblk, map->m_len);"
    },
    {
        "line": 20,
        "fullcodeline": "if (eof_block < map->m_lblk + map->m_len)"
    },
    {
        "line": 37,
        "fullcodeline": "if (ee_len <= 2*EXT4_EXT_ZERO_LEN &&"
    },
    {
        "line": 62,
        "fullcodeline": "if (allocated > map->m_len) {"
    },
    {
        "line": 100,
        "fullcodeline": "if (allocated < 0)"
    },
    {
        "line": 104,
        "fullcodeline": "return err ? err : allocated;"
    },
    {
        "line": 21,
        "fullcodeline": "eof_block = map->m_lblk + map->m_len;"
    },
    {
        "line": 38,
        "fullcodeline": "(EXT4_EXT_MAY_ZEROOUT & split_flag)) {"
    },
    {
        "line": 39,
        "fullcodeline": "err = ext4_ext_zeroout(inode, ex);"
    },
    {
        "line": 43,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 46,
        "fullcodeline": "ext4_ext_mark_initialized(ex);"
    },
    {
        "line": 47,
        "fullcodeline": "ext4_ext_try_to_merge(inode, path, ex);"
    },
    {
        "line": 48,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + depth);"
    },
    {
        "line": 101,
        "fullcodeline": "err = allocated;"
    },
    {
        "line": 63,
        "fullcodeline": "if (allocated <= EXT4_EXT_ZERO_LEN &&"
    },
    {
        "line": 64,
        "fullcodeline": "(EXT4_EXT_MAY_ZEROOUT & split_flag)) {"
    },
    {
        "line": 66,
        "fullcodeline": "zero_ex.ee_block ="
    },
    {
        "line": 68,
        "fullcodeline": "zero_ex.ee_len = cpu_to_le16(allocated - map->m_len);"
    },
    {
        "line": 69,
        "fullcodeline": "ext4_ext_store_pblock(&zero_ex,"
    },
    {
        "line": 71,
        "fullcodeline": "err = ext4_ext_zeroout(inode, &zero_ex);"
    },
    {
        "line": 74,
        "fullcodeline": "split_map.m_lblk = map->m_lblk;"
    },
    {
        "line": 75,
        "fullcodeline": "split_map.m_len = allocated;"
    },
    {
        "line": 67,
        "fullcodeline": "cpu_to_le32(map->m_lblk + map->m_len);"
    },
    {
        "line": 70,
        "fullcodeline": "ext4_ext_pblock(ex) + map->m_lblk - ee_block);"
    },
    {
        "line": 76,
        "fullcodeline": "} else if ((map->m_lblk - ee_block + map->m_len <"
    },
    {
        "line": 78,
        "fullcodeline": "(EXT4_EXT_MAY_ZEROOUT & split_flag)) {"
    },
    {
        "line": 91,
        "fullcodeline": "allocated = map->m_lblk - ee_block + map->m_len;"
    },
    {
        "line": 93,
        "fullcodeline": "split_map.m_lblk = ee_block;"
    },
    {
        "line": 94,
        "fullcodeline": "split_map.m_len = allocated;"
    },
    {
        "line": 80,
        "fullcodeline": "if (map->m_lblk != ee_block) {"
    },
    {
        "line": 81,
        "fullcodeline": "zero_ex.ee_block = ex->ee_block;"
    },
    {
        "line": 82,
        "fullcodeline": "zero_ex.ee_len = cpu_to_le16(map->m_lblk -"
    },
    {
        "line": 84,
        "fullcodeline": "ext4_ext_store_pblock(&zero_ex,"
    },
    {
        "line": 86,
        "fullcodeline": "err = ext4_ext_zeroout(inode, &zero_ex);"
    },
    {
        "line": 85,
        "fullcodeline": "ext4_ext_pblock(ex));"
    }
]