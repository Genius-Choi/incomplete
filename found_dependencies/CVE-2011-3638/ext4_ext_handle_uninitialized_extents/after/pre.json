[
    {
        "line": 6,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "ext4_io_end_t *io = EXT4_I(inode)->cur_aio_dio;"
    },
    {
        "line": 10,
        "fullcodeline": "ext_debug(\"ext4_ext_handle_uninitialized_extents: inode %lu, logical\""
    },
    {
        "line": 14,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 68,
        "fullcodeline": "ret = ext4_ext_convert_to_initialized(handle, inode, map, path);"
    },
    {
        "line": 83,
        "fullcodeline": "map->m_flags |= EXT4_MAP_NEW;"
    },
    {
        "line": 109,
        "fullcodeline": "map->m_flags |= EXT4_MAP_MAPPED;"
    },
    {
        "line": 113,
        "fullcodeline": "ext4_ext_show_leaf(inode, path);"
    },
    {
        "line": 114,
        "fullcodeline": "map->m_pblk = newblock;"
    },
    {
        "line": 115,
        "fullcodeline": "map->m_len = allocated;"
    },
    {
        "line": 12,
        "fullcodeline": "inode->i_ino, (unsigned long long)map->m_lblk, map->m_len,"
    },
    {
        "line": 17,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_PRE_IO)) {"
    },
    {
        "line": 35,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CONVERT)) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_UNINIT_EXT)"
    },
    {
        "line": 55,
        "fullcodeline": "if ((flags & EXT4_GET_BLOCKS_CREATE) == 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (ret >= 0) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (ret <= 0) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (allocated > map->m_len) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE)"
    },
    {
        "line": 111,
        "fullcodeline": "if (allocated > map->m_len)"
    },
    {
        "line": 121,
        "fullcodeline": "return err ? err : allocated;"
    },
    {
        "line": 18,
        "fullcodeline": "ret = ext4_split_unwritten_extents(handle, inode, map,"
    },
    {
        "line": 36,
        "fullcodeline": "ret = ext4_convert_unwritten_extents_endio(handle, inode,"
    },
    {
        "line": 63,
        "fullcodeline": "map->m_flags |= EXT4_MAP_UNWRITTEN;"
    },
    {
        "line": 70,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 1);"
    },
    {
        "line": 71,
        "fullcodeline": "err = check_eofblocks_fl(handle, inode, map->m_lblk, path,"
    },
    {
        "line": 79,
        "fullcodeline": "err = ret;"
    },
    {
        "line": 92,
        "fullcodeline": "unmap_underlying_metadata_blocks(inode->i_sb->s_bdev,"
    },
    {
        "line": 95,
        "fullcodeline": "allocated = map->m_len;"
    },
    {
        "line": 106,
        "fullcodeline": "ext4_da_update_reserve_space(inode, allocated, 0);"
    },
    {
        "line": 112,
        "fullcodeline": "allocated = map->m_len;"
    },
    {
        "line": 118,
        "fullcodeline": "ext4_ext_drop_refs(path);"
    },
    {
        "line": 119,
        "fullcodeline": "kfree(path);"
    },
    {
        "line": 25,
        "fullcodeline": "if (io && !(io->flag & EXT4_IO_END_UNWRITTEN)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (ext4_should_dioread_nolock(inode))"
    },
    {
        "line": 38,
        "fullcodeline": "if (ret >= 0) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 82,
        "fullcodeline": "allocated = ret;"
    },
    {
        "line": 94,
        "fullcodeline": "allocated - map->m_len);"
    },
    {
        "line": 26,
        "fullcodeline": "io->flag = EXT4_IO_END_UNWRITTEN;"
    },
    {
        "line": 27,
        "fullcodeline": "atomic_inc(&EXT4_I(inode)->i_aiodio_unwritten);"
    },
    {
        "line": 31,
        "fullcodeline": "map->m_flags |= EXT4_MAP_UNINIT;"
    },
    {
        "line": 39,
        "fullcodeline": "ext4_update_inode_fsync_trans(handle, inode, 1);"
    },
    {
        "line": 40,
        "fullcodeline": "err = check_eofblocks_fl(handle, inode, map->m_lblk,"
    },
    {
        "line": 29,
        "fullcodeline": "ext4_set_inode_state(inode, EXT4_STATE_DIO_UNWRITTEN);"
    },
    {
        "line": 43,
        "fullcodeline": "err = ret;"
    }
]