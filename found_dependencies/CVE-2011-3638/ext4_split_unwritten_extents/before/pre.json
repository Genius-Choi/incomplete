[
    {
        "line": 8,
        "fullcodeline": "struct ext4_extent *ex1 = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "struct ext4_extent *ex2 = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "struct ext4_extent *ex3 = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "ext_debug(\"ext4_split_unwritten_extents: inode %lu, logical\""
    },
    {
        "line": 21,
        "fullcodeline": "eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>"
    },
    {
        "line": 26,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 27,
        "fullcodeline": "ex = path[depth].p_ext;"
    },
    {
        "line": 28,
        "fullcodeline": "ee_block = le32_to_cpu(ex->ee_block);"
    },
    {
        "line": 29,
        "fullcodeline": "ee_len = ext4_ext_get_actual_len(ex);"
    },
    {
        "line": 30,
        "fullcodeline": "allocated = ee_len - (map->m_lblk - ee_block);"
    },
    {
        "line": 31,
        "fullcodeline": "newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex);"
    },
    {
        "line": 33,
        "fullcodeline": "ex2 = ex;"
    },
    {
        "line": 34,
        "fullcodeline": "orig_ex.ee_block = ex->ee_block;"
    },
    {
        "line": 35,
        "fullcodeline": "orig_ex.ee_len   = cpu_to_le16(ee_len);"
    },
    {
        "line": 36,
        "fullcodeline": "ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex));"
    },
    {
        "line": 42,
        "fullcodeline": "may_zeroout = ee_block + ee_len <= eof_block;"
    },
    {
        "line": 52,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 138,
        "fullcodeline": "ex2->ee_block = cpu_to_le32(map->m_lblk);"
    },
    {
        "line": 139,
        "fullcodeline": "ext4_ext_store_pblock(ex2, newblock);"
    },
    {
        "line": 140,
        "fullcodeline": "ex2->ee_len = cpu_to_le16(allocated);"
    },
    {
        "line": 141,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex2);"
    },
    {
        "line": 145,
        "fullcodeline": "err = ext4_ext_dirty(handle, inode, path + depth);"
    },
    {
        "line": 149,
        "fullcodeline": "err = ext4_ext_insert_extent(handle, inode, path, &newex, flags);"
    },
    {
        "line": 168,
        "fullcodeline": "ex->ee_block = orig_ex.ee_block;"
    },
    {
        "line": 169,
        "fullcodeline": "ex->ee_len   = orig_ex.ee_len;"
    },
    {
        "line": 170,
        "fullcodeline": "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));"
    },
    {
        "line": 23,
        "fullcodeline": "if (eof_block < map->m_lblk + map->m_len)"
    },
    {
        "line": 49,
        "fullcodeline": "if ((map->m_lblk == ee_block) && (allocated <= map->m_len))"
    },
    {
        "line": 56,
        "fullcodeline": "if (map->m_lblk > ee_block) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (allocated > map->m_len) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (ex2 != ex)"
    },
    {
        "line": 165,
        "fullcodeline": "return err ? err : allocated;"
    },
    {
        "line": 24,
        "fullcodeline": "eof_block = map->m_lblk + map->m_len;"
    },
    {
        "line": 57,
        "fullcodeline": "ex1 = ex;"
    },
    {
        "line": 58,
        "fullcodeline": "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);"
    },
    {
        "line": 59,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex1);"
    },
    {
        "line": 60,
        "fullcodeline": "ex2 = &newex;"
    },
    {
        "line": 67,
        "fullcodeline": "if (!ex1 && allocated > map->m_len)"
    },
    {
        "line": 68,
        "fullcodeline": "ex2->ee_len = cpu_to_le16(map->m_len);"
    },
    {
        "line": 72,
        "fullcodeline": "ex3 = &newex;"
    },
    {
        "line": 73,
        "fullcodeline": "ex3->ee_block = cpu_to_le32(map->m_lblk + map->m_len);"
    },
    {
        "line": 74,
        "fullcodeline": "ext4_ext_store_pblock(ex3, newblock + map->m_len);"
    },
    {
        "line": 75,
        "fullcodeline": "ex3->ee_len = cpu_to_le16(allocated - map->m_len);"
    },
    {
        "line": 76,
        "fullcodeline": "ext4_ext_mark_uninitialized(ex3);"
    },
    {
        "line": 77,
        "fullcodeline": "err = ext4_ext_insert_extent(handle, inode, path, ex3, flags);"
    },
    {
        "line": 97,
        "fullcodeline": "newdepth = ext_depth(inode);"
    },
    {
        "line": 102,
        "fullcodeline": "ee_len -= ext4_ext_get_actual_len(ex3);"
    },
    {
        "line": 103,
        "fullcodeline": "orig_ex.ee_len = cpu_to_le16(ee_len);"
    },
    {
        "line": 104,
        "fullcodeline": "may_zeroout = ee_block + ee_len <= eof_block;"
    },
    {
        "line": 106,
        "fullcodeline": "depth = newdepth;"
    },
    {
        "line": 107,
        "fullcodeline": "ext4_ext_drop_refs(path);"
    },
    {
        "line": 108,
        "fullcodeline": "path = ext4_ext_find_extent(inode, map->m_lblk, path);"
    },
    {
        "line": 113,
        "fullcodeline": "ex = path[depth].p_ext;"
    },
    {
        "line": 117,
        "fullcodeline": "err = ext4_ext_get_access(handle, inode, path + depth);"
    },
    {
        "line": 121,
        "fullcodeline": "allocated = map->m_len;"
    },
    {
        "line": 128,
        "fullcodeline": "if (ex1 && ex1 != ex) {"
    },
    {
        "line": 129,
        "fullcodeline": "ex1 = ex;"
    },
    {
        "line": 130,
        "fullcodeline": "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);"
    },
    {
        "line": 132,
        "fullcodeline": "ex2 = &newex;"
    },
    {
        "line": 150,
        "fullcodeline": "if (err == -ENOSPC && may_zeroout) {"
    },
    {
        "line": 151,
        "fullcodeline": "err =  ext4_ext_zeroout(inode, &orig_ex);"
    },
    {
        "line": 155,
        "fullcodeline": "ex->ee_block = orig_ex.ee_block;"
    },
    {
        "line": 156,
        "fullcodeline": "ex->ee_len   = orig_ex.ee_len;"
    },
    {
        "line": 109,
        "fullcodeline": "if (IS_ERR(path)) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (ex2 != &newex)"
    },
    {
        "line": 157,
        "fullcodeline": "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));"
    },
    {
        "line": 78,
        "fullcodeline": "if (err == -ENOSPC && may_zeroout) {"
    },
    {
        "line": 79,
        "fullcodeline": "err =  ext4_ext_zeroout(inode, &orig_ex);"
    },
    {
        "line": 83,
        "fullcodeline": "ex->ee_block = orig_ex.ee_block;"
    },
    {
        "line": 84,
        "fullcodeline": "ex->ee_len   = orig_ex.ee_len;"
    },
    {
        "line": 110,
        "fullcodeline": "err = PTR_ERR(path);"
    },
    {
        "line": 115,
        "fullcodeline": "ex2 = ex;"
    },
    {
        "line": 85,
        "fullcodeline": "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));"
    }
]