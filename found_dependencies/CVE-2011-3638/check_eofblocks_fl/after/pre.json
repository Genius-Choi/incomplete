[
    {
        "line": 13,
        "fullcodeline": "depth = ext_depth(inode);"
    },
    {
        "line": 14,
        "fullcodeline": "eh = path[depth].p_hdr;"
    },
    {
        "line": 21,
        "fullcodeline": "last_ex = EXT_LAST_EXTENT(eh);"
    },
    {
        "line": 44,
        "fullcodeline": "ext4_clear_inode_flag(inode, EXT4_INODE_EOFBLOCKS);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!ext4_test_inode_flag(inode, EXT4_INODE_EOFBLOCKS))"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = depth-1; i >= 0; i--)"
    },
    {
        "line": 45,
        "fullcodeline": "return ext4_mark_inode_dirty(handle, inode);"
    },
    {
        "line": 16,
        "fullcodeline": "if (unlikely(!eh->eh_entries)) {"
    },
    {
        "line": 19,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 31,
        "fullcodeline": "if (lblk + len < le32_to_cpu(last_ex->ee_block) +"
    },
    {
        "line": 32,
        "fullcodeline": "ext4_ext_get_actual_len(last_ex))"
    },
    {
        "line": 42,
        "fullcodeline": "if (path[i].p_idx != EXT_LAST_INDEX(path[i].p_hdr))"
    }
]