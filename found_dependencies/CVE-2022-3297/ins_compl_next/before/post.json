[
    {
        "line": 8,
        "fullcodeline": "int\t    num_matches = -1;"
    },
    {
        "line": 9,
        "fullcodeline": "int\t    todo = count;"
    },
    {
        "line": 11,
        "fullcodeline": "int\t    started = compl_started;"
    },
    {
        "line": 29,
        "fullcodeline": "advance = count != 1 || !allow_get_expansion || !compl_get_longest;"
    },
    {
        "line": 15,
        "fullcodeline": "if (compl_shown_match == NULL)"
    },
    {
        "line": 18,
        "fullcodeline": "if (compl_leader != NULL && !match_at_original_text(compl_shown_match))"
    },
    {
        "line": 22,
        "fullcodeline": "if (allow_get_expansion && insert_match"
    },
    {
        "line": 40,
        "fullcodeline": "if (find_next_completion_match(allow_get_expansion, todo, advance,"
    },
    {
        "line": 45,
        "fullcodeline": "if (compl_no_insert && !started)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!allow_get_expansion)"
    },
    {
        "line": 91,
        "fullcodeline": "if (compl_no_insert && !started)"
    },
    {
        "line": 97,
        "fullcodeline": "if (compl_shown_match->cp_fname != NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "ins_compl_update_shown_match();"
    },
    {
        "line": 23,
        "fullcodeline": "&& (!(compl_get_longest || compl_restarting) || compl_used_match))"
    },
    {
        "line": 25,
        "fullcodeline": "ins_compl_delete();"
    },
    {
        "line": 34,
        "fullcodeline": "advance = FALSE;"
    },
    {
        "line": 35,
        "fullcodeline": "compl_restarting = FALSE;"
    },
    {
        "line": 41,
        "fullcodeline": "&num_matches) == -1)"
    },
    {
        "line": 47,
        "fullcodeline": "ins_bytes(compl_orig_text + get_compl_len());"
    },
    {
        "line": 48,
        "fullcodeline": "compl_used_match = FALSE;"
    },
    {
        "line": 63,
        "fullcodeline": "ins_compl_upd_pum();"
    },
    {
        "line": 74,
        "fullcodeline": "ins_compl_show_pum();"
    },
    {
        "line": 86,
        "fullcodeline": "ins_compl_delete();"
    },
    {
        "line": 92,
        "fullcodeline": "compl_enter_selects = TRUE;"
    },
    {
        "line": 98,
        "fullcodeline": "ins_compl_show_filename();"
    },
    {
        "line": 16,
        "fullcodeline": "return -1;"
    },
    {
        "line": 42,
        "fullcodeline": "return -1;"
    },
    {
        "line": 65,
        "fullcodeline": "if (pum_enough_matches())"
    },
    {
        "line": 94,
        "fullcodeline": "compl_enter_selects = !insert_match && compl_match_array != NULL;"
    },
    {
        "line": 67,
        "fullcodeline": "pum_call_update_screen();"
    },
    {
        "line": 71,
        "fullcodeline": "update_screen(0);"
    },
    {
        "line": 52,
        "fullcodeline": "if (!compl_get_longest || compl_used_match)"
    },
    {
        "line": 58,
        "fullcodeline": "compl_used_match = FALSE;"
    },
    {
        "line": 53,
        "fullcodeline": "ins_compl_insert(in_compl_func);"
    },
    {
        "line": 55,
        "fullcodeline": "ins_bytes(compl_leader + get_compl_len());"
    }
]