[
    {
        "line": 4,
        "fullcodeline": "u8 buf[3];"
    },
    {
        "line": 8,
        "fullcodeline": "dev = devm_kzalloc(&hdev->dev, sizeof(*dev), GFP_KERNEL);"
    },
    {
        "line": 12,
        "fullcodeline": "dev->in_out_buffer = devm_kzalloc(&hdev->dev, CP2112_REPORT_MAX_LENGTH,"
    },
    {
        "line": 17,
        "fullcodeline": "mutex_init(&dev->lock);"
    },
    {
        "line": 19,
        "fullcodeline": "ret = hid_parse(hdev);"
    },
    {
        "line": 25,
        "fullcodeline": "ret = hid_hw_start(hdev, HID_CONNECT_HIDRAW);"
    },
    {
        "line": 31,
        "fullcodeline": "ret = hid_hw_open(hdev);"
    },
    {
        "line": 37,
        "fullcodeline": "ret = hid_hw_power(hdev, PM_HINT_FULLON);"
    },
    {
        "line": 43,
        "fullcodeline": "ret = cp2112_hid_get(hdev, CP2112_GET_VERSION_INFO, buf, sizeof(buf),"
    },
    {
        "line": 52,
        "fullcodeline": "hid_info(hdev, \"Part Number: 0x%02X Device Version: 0x%02X\\n\","
    },
    {
        "line": 55,
        "fullcodeline": "ret = cp2112_hid_get(hdev, CP2112_SMBUS_CONFIG, (u8 *)&config,"
    },
    {
        "line": 64,
        "fullcodeline": "config.retry_time = cpu_to_be16(1);"
    },
    {
        "line": 66,
        "fullcodeline": "ret = cp2112_hid_output(hdev, (u8 *)&config, sizeof(config),"
    },
    {
        "line": 75,
        "fullcodeline": "hid_set_drvdata(hdev, (void *)dev);"
    },
    {
        "line": 76,
        "fullcodeline": "dev->hdev\t\t= hdev;"
    },
    {
        "line": 77,
        "fullcodeline": "dev->adap.owner\t\t= THIS_MODULE;"
    },
    {
        "line": 78,
        "fullcodeline": "dev->adap.class\t\t= I2C_CLASS_HWMON;"
    },
    {
        "line": 79,
        "fullcodeline": "dev->adap.algo\t\t= &smbus_algorithm;"
    },
    {
        "line": 80,
        "fullcodeline": "dev->adap.algo_data\t= dev;"
    },
    {
        "line": 81,
        "fullcodeline": "dev->adap.dev.parent\t= &hdev->dev;"
    },
    {
        "line": 82,
        "fullcodeline": "snprintf(dev->adap.name, sizeof(dev->adap.name),"
    },
    {
        "line": 84,
        "fullcodeline": "dev->hwversion = buf[2];"
    },
    {
        "line": 85,
        "fullcodeline": "init_waitqueue_head(&dev->wait);"
    },
    {
        "line": 87,
        "fullcodeline": "hid_device_io_start(hdev);"
    },
    {
        "line": 88,
        "fullcodeline": "ret = i2c_add_adapter(&dev->adap);"
    },
    {
        "line": 89,
        "fullcodeline": "hid_device_io_stop(hdev);"
    },
    {
        "line": 96,
        "fullcodeline": "hid_dbg(hdev, \"adapter registered\\n\");"
    },
    {
        "line": 98,
        "fullcodeline": "dev->gc.label\t\t\t= \"cp2112_gpio\";"
    },
    {
        "line": 99,
        "fullcodeline": "dev->gc.direction_input\t\t= cp2112_gpio_direction_input;"
    },
    {
        "line": 100,
        "fullcodeline": "dev->gc.direction_output\t= cp2112_gpio_direction_output;"
    },
    {
        "line": 101,
        "fullcodeline": "dev->gc.set\t\t\t= cp2112_gpio_set;"
    },
    {
        "line": 102,
        "fullcodeline": "dev->gc.get\t\t\t= cp2112_gpio_get;"
    },
    {
        "line": 103,
        "fullcodeline": "dev->gc.base\t\t\t= -1;"
    },
    {
        "line": 104,
        "fullcodeline": "dev->gc.ngpio\t\t\t= 8;"
    },
    {
        "line": 105,
        "fullcodeline": "dev->gc.can_sleep\t\t= 1;"
    },
    {
        "line": 106,
        "fullcodeline": "dev->gc.parent\t\t\t= &hdev->dev;"
    },
    {
        "line": 108,
        "fullcodeline": "ret = gpiochip_add_data(&dev->gc, dev);"
    },
    {
        "line": 114,
        "fullcodeline": "ret = sysfs_create_group(&hdev->dev.kobj, &cp2112_attr_group);"
    },
    {
        "line": 120,
        "fullcodeline": "chmod_sysfs_attrs(hdev);"
    },
    {
        "line": 121,
        "fullcodeline": "hid_hw_power(hdev, PM_HINT_NORMAL);"
    },
    {
        "line": 123,
        "fullcodeline": "ret = gpiochip_irqchip_add(&dev->gc, &cp2112_gpio_irqchip, 0,"
    },
    {
        "line": 133,
        "fullcodeline": "sysfs_remove_group(&hdev->dev.kobj, &cp2112_attr_group);"
    },
    {
        "line": 135,
        "fullcodeline": "gpiochip_remove(&dev->gc);"
    },
    {
        "line": 137,
        "fullcodeline": "i2c_del_adapter(&dev->adap);"
    },
    {
        "line": 139,
        "fullcodeline": "hid_hw_power(hdev, PM_HINT_NORMAL);"
    },
    {
        "line": 141,
        "fullcodeline": "hid_hw_close(hdev);"
    },
    {
        "line": 143,
        "fullcodeline": "hid_hw_stop(hdev);"
    },
    {
        "line": 9,
        "fullcodeline": "if (!dev)"
    },
    {
        "line": 14,
        "fullcodeline": "if (!dev->in_out_buffer)"
    },
    {
        "line": 38,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (ret != sizeof(buf)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (ret != sizeof(config)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (ret != sizeof(config)) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 115,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "hid_err(hdev, \"parse failed\\n\");"
    },
    {
        "line": 27,
        "fullcodeline": "hid_err(hdev, \"hw start failed\\n\");"
    },
    {
        "line": 33,
        "fullcodeline": "hid_err(hdev, \"hw open failed\\n\");"
    },
    {
        "line": 39,
        "fullcodeline": "hid_err(hdev, \"power management error: %d\\n\", ret);"
    },
    {
        "line": 46,
        "fullcodeline": "hid_err(hdev, \"error requesting version\\n\");"
    },
    {
        "line": 58,
        "fullcodeline": "hid_err(hdev, \"error requesting SMBus config\\n\");"
    },
    {
        "line": 69,
        "fullcodeline": "hid_err(hdev, \"error setting SMBus config\\n\");"
    },
    {
        "line": 92,
        "fullcodeline": "hid_err(hdev, \"error registering i2c adapter\\n\");"
    },
    {
        "line": 110,
        "fullcodeline": "hid_err(hdev, \"error registering gpio chip\\n\");"
    },
    {
        "line": 116,
        "fullcodeline": "hid_err(hdev, \"error creating sysfs attrs\\n\");"
    },
    {
        "line": 126,
        "fullcodeline": "dev_err(dev->gc.parent, \"failed to add IRQ chip\\n\");"
    },
    {
        "line": 10,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 15,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 47,
        "fullcodeline": "if (ret >= 0)"
    },
    {
        "line": 59,
        "fullcodeline": "if (ret >= 0)"
    },
    {
        "line": 70,
        "fullcodeline": "if (ret >= 0)"
    },
    {
        "line": 48,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 60,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 71,
        "fullcodeline": "ret = -EIO;"
    }
]