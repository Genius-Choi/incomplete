[
    {
        "line": 4,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t first_vec = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "struct socket *ssocket = server->ssocket;"
    },
    {
        "line": 11,
        "fullcodeline": "*sent = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "smb_msg.msg_name = (struct sockaddr *) &server->dstaddr;"
    },
    {
        "line": 17,
        "fullcodeline": "smb_msg.msg_namelen = sizeof(struct sockaddr);"
    },
    {
        "line": 18,
        "fullcodeline": "smb_msg.msg_control = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "smb_msg.msg_controllen = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "remaining = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "if (ssocket == NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "for (i = 0; i < n_vec; i++)"
    },
    {
        "line": 27,
        "fullcodeline": "remaining += iov[i].iov_len;"
    },
    {
        "line": 21,
        "fullcodeline": "smb_msg.msg_flags = MSG_DONTWAIT + MSG_NOSIGNAL;"
    },
    {
        "line": 49,
        "fullcodeline": "rc = kernel_sendmsg(ssocket, &smb_msg, &iov[first_vec],"
    },
    {
        "line": 93,
        "fullcodeline": "remaining -= rc;"
    },
    {
        "line": 110,
        "fullcodeline": "i = 0; /* in case we get ENOSPC on the next send */"
    },
    {
        "line": 111,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENOTSOCK; /* BB eventually add reconnect code here */"
    },
    {
        "line": 23,
        "fullcodeline": "smb_msg.msg_flags = MSG_NOSIGNAL;"
    },
    {
        "line": 69,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 75,
        "fullcodeline": "if (rc == remaining) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (rc > remaining) {"
    },
    {
        "line": 85,
        "fullcodeline": "if (rc == 0) {"
    },
    {
        "line": 96,
        "fullcodeline": "for (i = first_vec; i < n_vec; i++) {"
    },
    {
        "line": 50,
        "fullcodeline": "n_vec - first_vec, remaining);"
    },
    {
        "line": 51,
        "fullcodeline": "if (rc == -ENOSPC || rc == -EAGAIN) {"
    },
    {
        "line": 58,
        "fullcodeline": "i++;"
    },
    {
        "line": 81,
        "fullcodeline": "cERROR(1, \"sent %d requested %d\", rc, remaining);"
    },
    {
        "line": 57,
        "fullcodeline": "WARN_ON_ONCE(rc == -ENOSPC);"
    },
    {
        "line": 65,
        "fullcodeline": "msleep(1 << i);"
    },
    {
        "line": 59,
        "fullcodeline": "if (i >= 14 || (!server->noblocksnd && (i > 2))) {"
    },
    {
        "line": 62,
        "fullcodeline": "rc = -EAGAIN;"
    },
    {
        "line": 98,
        "fullcodeline": "if (rc > iov[i].iov_len) {"
    },
    {
        "line": 99,
        "fullcodeline": "rc -= iov[i].iov_len;"
    },
    {
        "line": 104,
        "fullcodeline": "first_vec = i;"
    }
]