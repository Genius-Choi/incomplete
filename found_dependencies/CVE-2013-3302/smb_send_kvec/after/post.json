[
    {
        "line": 4,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t first_vec = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "struct socket *ssocket = server->ssocket;"
    },
    {
        "line": 11,
        "fullcodeline": "*sent = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "smb_msg.msg_name = (struct sockaddr *) &server->dstaddr;"
    },
    {
        "line": 15,
        "fullcodeline": "smb_msg.msg_control = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "smb_msg.msg_controllen = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "remaining = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "for (i = 0; i < n_vec; i++)"
    },
    {
        "line": 24,
        "fullcodeline": "remaining += iov[i].iov_len;"
    },
    {
        "line": 18,
        "fullcodeline": "smb_msg.msg_flags = MSG_DONTWAIT + MSG_NOSIGNAL;"
    },
    {
        "line": 46,
        "fullcodeline": "rc = kernel_sendmsg(ssocket, &smb_msg, &iov[first_vec],"
    },
    {
        "line": 70,
        "fullcodeline": "*sent += rc;"
    },
    {
        "line": 90,
        "fullcodeline": "remaining -= rc;"
    },
    {
        "line": 107,
        "fullcodeline": "i = 0; /* in case we get ENOSPC on the next send */"
    },
    {
        "line": 108,
        "fullcodeline": "rc = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "smb_msg.msg_flags = MSG_NOSIGNAL;"
    },
    {
        "line": 48,
        "fullcodeline": "if (rc == -ENOSPC || rc == -EAGAIN) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (rc < 0)"
    },
    {
        "line": 72,
        "fullcodeline": "if (rc == remaining) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (rc > remaining) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (rc == 0) {"
    },
    {
        "line": 93,
        "fullcodeline": "for (i = first_vec; i < n_vec; i++) {"
    },
    {
        "line": 47,
        "fullcodeline": "n_vec - first_vec, remaining);"
    },
    {
        "line": 54,
        "fullcodeline": "WARN_ON_ONCE(rc == -ENOSPC);"
    },
    {
        "line": 55,
        "fullcodeline": "i++;"
    },
    {
        "line": 62,
        "fullcodeline": "msleep(1 << i);"
    },
    {
        "line": 73,
        "fullcodeline": "remaining = 0;"
    },
    {
        "line": 78,
        "fullcodeline": "cERROR(1, \"sent %d requested %d\", rc, remaining);"
    },
    {
        "line": 85,
        "fullcodeline": "cERROR(1, \"tcp sent no data\");"
    },
    {
        "line": 86,
        "fullcodeline": "msleep(500);"
    },
    {
        "line": 56,
        "fullcodeline": "if (i >= 14 || (!server->noblocksnd && (i > 2))) {"
    },
    {
        "line": 57,
        "fullcodeline": "cERROR(1, \"sends on sock %p stuck for 15 \""
    },
    {
        "line": 59,
        "fullcodeline": "rc = -EAGAIN;"
    },
    {
        "line": 95,
        "fullcodeline": "if (rc > iov[i].iov_len) {"
    },
    {
        "line": 96,
        "fullcodeline": "rc -= iov[i].iov_len;"
    },
    {
        "line": 97,
        "fullcodeline": "iov[i].iov_len = 0;"
    },
    {
        "line": 99,
        "fullcodeline": "iov[i].iov_base += rc;"
    },
    {
        "line": 100,
        "fullcodeline": "iov[i].iov_len -= rc;"
    },
    {
        "line": 101,
        "fullcodeline": "first_vec = i;"
    }
]