[
    {
        "line": 2,
        "fullcodeline": "int code = RLC_ERR;"
    },
    {
        "line": 6,
        "fullcodeline": "uint8_t buf[RLC_BN_BITS / 8 + 1];"
    },
    {
        "line": 9,
        "fullcodeline": "dig_t prime = 0xFB;"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(a);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(b);"
    },
    {
        "line": 13,
        "fullcodeline": "bdpe_null(pub);"
    },
    {
        "line": 14,
        "fullcodeline": "bdpe_null(prv);"
    },
    {
        "line": 56,
        "fullcodeline": "code = RLC_OK;"
    },
    {
        "line": 59,
        "fullcodeline": "bn_free(a);"
    },
    {
        "line": 60,
        "fullcodeline": "bn_free(b);"
    },
    {
        "line": 61,
        "fullcodeline": "bdpe_free(pub);"
    },
    {
        "line": 62,
        "fullcodeline": "bdpe_free(prv);"
    },
    {
        "line": 17,
        "fullcodeline": "bn_new(a);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(b);"
    },
    {
        "line": 19,
        "fullcodeline": "bdpe_new(pub);"
    },
    {
        "line": 20,
        "fullcodeline": "bdpe_new(prv);"
    },
    {
        "line": 22,
        "fullcodeline": "result = cp_bdpe_gen(pub, prv, prime, RLC_BN_BITS);"
    },
    {
        "line": 24,
        "fullcodeline": "TEST_CASE(\"benaloh encryption/decryption is correct\") {"
    },
    {
        "line": 34,
        "fullcodeline": "TEST_CASE(\"benaloh encryption/decryption is homomorphic\") {"
    },
    {
        "line": 54,
        "fullcodeline": "RLC_ERROR(end);"
    },
    {
        "line": 25,
        "fullcodeline": "TEST_ASSERT(result == RLC_OK, end);"
    },
    {
        "line": 26,
        "fullcodeline": "len = RLC_BN_BITS / 8 + 1;"
    },
    {
        "line": 27,
        "fullcodeline": "rand_bytes(buf, 1);"
    },
    {
        "line": 28,
        "fullcodeline": "in = buf[0] % prime;"
    },
    {
        "line": 29,
        "fullcodeline": "TEST_ASSERT(cp_bdpe_enc(buf, &len, in, pub) == RLC_OK, end);"
    },
    {
        "line": 30,
        "fullcodeline": "TEST_ASSERT(cp_bdpe_dec(&out, buf, len, prv) == RLC_OK, end);"
    },
    {
        "line": 31,
        "fullcodeline": "TEST_ASSERT(in == out, end);"
    },
    {
        "line": 35,
        "fullcodeline": "TEST_ASSERT(result == RLC_OK, end);"
    },
    {
        "line": 36,
        "fullcodeline": "len = RLC_BN_BITS / 8 + 1;"
    },
    {
        "line": 37,
        "fullcodeline": "rand_bytes(buf, 1);"
    },
    {
        "line": 38,
        "fullcodeline": "in = buf[0] % prime;"
    },
    {
        "line": 39,
        "fullcodeline": "TEST_ASSERT(cp_bdpe_enc(buf, &len, in, pub) == RLC_OK, end);"
    },
    {
        "line": 40,
        "fullcodeline": "bn_read_bin(a, buf, len);"
    },
    {
        "line": 41,
        "fullcodeline": "rand_bytes(buf, 1);"
    },
    {
        "line": 42,
        "fullcodeline": "out = (buf[0] % prime);"
    },
    {
        "line": 43,
        "fullcodeline": "in = (in + out) % prime;"
    },
    {
        "line": 44,
        "fullcodeline": "TEST_ASSERT(cp_bdpe_enc(buf, &len, out, pub) == RLC_OK, end);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_read_bin(b, buf, len);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_mul(a, a, b);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_mod(a, a, pub->n);"
    },
    {
        "line": 48,
        "fullcodeline": "len = bn_size_bin(pub->n);"
    },
    {
        "line": 49,
        "fullcodeline": "bn_write_bin(buf, len, a);"
    },
    {
        "line": 50,
        "fullcodeline": "TEST_ASSERT(cp_bdpe_dec(&out, buf, len, prv) == RLC_OK, end);"
    },
    {
        "line": 51,
        "fullcodeline": "TEST_ASSERT(in == out, end);"
    }
]