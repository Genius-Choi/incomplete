[
    {
        "line": 2,
        "fullcodeline": "int result, code = RLC_ERR;"
    },
    {
        "line": 3,
        "fullcodeline": "bn_t g, n, q, r, p[M], x[M], v[N], w[N], y[N], z[M];"
    },
    {
        "line": 4,
        "fullcodeline": "g1_t u[M], ss;"
    },
    {
        "line": 5,
        "fullcodeline": "g2_t d[M + 1], s[M + 1];"
    },
    {
        "line": 6,
        "fullcodeline": "gt_t t[M];"
    },
    {
        "line": 10,
        "fullcodeline": "bn_null(g);"
    },
    {
        "line": 11,
        "fullcodeline": "bn_null(n);"
    },
    {
        "line": 12,
        "fullcodeline": "bn_null(q);"
    },
    {
        "line": 13,
        "fullcodeline": "bn_null(r);"
    },
    {
        "line": 14,
        "fullcodeline": "g1_null(ss);"
    },
    {
        "line": 15,
        "fullcodeline": "crt_null(crt);"
    },
    {
        "line": 121,
        "fullcodeline": "code = RLC_OK;"
    },
    {
        "line": 123,
        "fullcodeline": "bn_free(g);"
    },
    {
        "line": 124,
        "fullcodeline": "bn_free(n);"
    },
    {
        "line": 125,
        "fullcodeline": "bn_free(q);"
    },
    {
        "line": 126,
        "fullcodeline": "bn_free(r);"
    },
    {
        "line": 127,
        "fullcodeline": "g1_free(ss);"
    },
    {
        "line": 135,
        "fullcodeline": "g2_free(d[M]);"
    },
    {
        "line": 136,
        "fullcodeline": "g2_free(s[M]);"
    },
    {
        "line": 144,
        "fullcodeline": "crt_free(crt);"
    },
    {
        "line": 18,
        "fullcodeline": "bn_new(g);"
    },
    {
        "line": 19,
        "fullcodeline": "bn_new(n);"
    },
    {
        "line": 20,
        "fullcodeline": "bn_new(q);"
    },
    {
        "line": 21,
        "fullcodeline": "bn_new(r);"
    },
    {
        "line": 22,
        "fullcodeline": "g1_new(ss);"
    },
    {
        "line": 35,
        "fullcodeline": "g2_null(s[M]);"
    },
    {
        "line": 36,
        "fullcodeline": "g2_new(s[M]);"
    },
    {
        "line": 37,
        "fullcodeline": "g2_null(d[M]);"
    },
    {
        "line": 38,
        "fullcodeline": "g2_new(d[M]);"
    },
    {
        "line": 51,
        "fullcodeline": "crt_new(crt);"
    },
    {
        "line": 53,
        "fullcodeline": "result = cp_rsapsi_gen(g, n, RLC_BN_BITS);"
    },
    {
        "line": 55,
        "fullcodeline": "TEST_CASE(\"factoring-based laconic private set intersection is correct\") {"
    },
    {
        "line": 74,
        "fullcodeline": "result = cp_shipsi_gen(g, crt, RLC_BN_BITS);"
    },
    {
        "line": 76,
        "fullcodeline": "TEST_CASE(\"factoring-based size-hiding private set intersection is correct\") {"
    },
    {
        "line": 97,
        "fullcodeline": "TEST_CASE(\"pairing-based laconic private set intersection is correct\") {"
    },
    {
        "line": 119,
        "fullcodeline": "RLC_ERROR(end);"
    },
    {
        "line": 128,
        "fullcodeline": "for (int i = 0; i < M; i++) {"
    },
    {
        "line": 137,
        "fullcodeline": "for (int i = 0; i < N; i++) {"
    },
    {
        "line": 23,
        "fullcodeline": "for (int i = 0; i < M; i++) {"
    },
    {
        "line": 39,
        "fullcodeline": "for (int i = 0; i < N; i++) {"
    },
    {
        "line": 56,
        "fullcodeline": "TEST_ASSERT(result == RLC_OK, end);"
    },
    {
        "line": 63,
        "fullcodeline": "TEST_ASSERT(cp_rsapsi_ask(q, r, p, g, n, x, M) == RLC_OK, end);"
    },
    {
        "line": 77,
        "fullcodeline": "TEST_ASSERT(result == RLC_OK, end);"
    },
    {
        "line": 84,
        "fullcodeline": "TEST_ASSERT(cp_shipsi_ask(q, r, p, g, crt->n, x, M) == RLC_OK, end);"
    },
    {
        "line": 98,
        "fullcodeline": "pc_get_ord(q);"
    },
    {
        "line": 105,
        "fullcodeline": "TEST_ASSERT(cp_pbpsi_gen(q, ss, s, M) == RLC_OK, end);"
    },
    {
        "line": 106,
        "fullcodeline": "TEST_ASSERT(cp_pbpsi_ask(d, r, x, s, M) == RLC_OK, end);"
    },
    {
        "line": 129,
        "fullcodeline": "bn_free(p[i]);"
    },
    {
        "line": 130,
        "fullcodeline": "bn_free(x[i]);"
    },
    {
        "line": 131,
        "fullcodeline": "bn_free(z[i]);"
    },
    {
        "line": 132,
        "fullcodeline": "g2_free(d[i]);"
    },
    {
        "line": 133,
        "fullcodeline": "g2_free(s[i]);"
    },
    {
        "line": 138,
        "fullcodeline": "bn_free(v[i]);"
    },
    {
        "line": 139,
        "fullcodeline": "bn_free(w[i]);"
    },
    {
        "line": 140,
        "fullcodeline": "bn_free(y[i]);"
    },
    {
        "line": 141,
        "fullcodeline": "g1_free(u[i]);"
    },
    {
        "line": 142,
        "fullcodeline": "gt_free(t[i]);"
    },
    {
        "line": 24,
        "fullcodeline": "bn_null(p[i]);"
    },
    {
        "line": 25,
        "fullcodeline": "bn_null(x[i]);"
    },
    {
        "line": 26,
        "fullcodeline": "bn_null(z[i]);"
    },
    {
        "line": 27,
        "fullcodeline": "g2_null(d[i]);"
    },
    {
        "line": 28,
        "fullcodeline": "g2_null(s[i]);"
    },
    {
        "line": 29,
        "fullcodeline": "bn_new(p[i]);"
    },
    {
        "line": 30,
        "fullcodeline": "bn_new(x[i]);"
    },
    {
        "line": 31,
        "fullcodeline": "bn_new(z[i]);"
    },
    {
        "line": 32,
        "fullcodeline": "g2_new(d[i]);"
    },
    {
        "line": 33,
        "fullcodeline": "g2_new(s[i]);"
    },
    {
        "line": 40,
        "fullcodeline": "bn_null(v[i]);"
    },
    {
        "line": 41,
        "fullcodeline": "bn_null(w[i]);"
    },
    {
        "line": 42,
        "fullcodeline": "bn_null(y[i]);"
    },
    {
        "line": 43,
        "fullcodeline": "g1_null(u[i]);"
    },
    {
        "line": 44,
        "fullcodeline": "gt_null(t[i]);"
    },
    {
        "line": 45,
        "fullcodeline": "bn_new(v[i]);"
    },
    {
        "line": 46,
        "fullcodeline": "bn_new(w[i]);"
    },
    {
        "line": 47,
        "fullcodeline": "bn_new(y[i]);"
    },
    {
        "line": 48,
        "fullcodeline": "g1_new(u[i]);"
    },
    {
        "line": 49,
        "fullcodeline": "gt_new(t[i]);"
    },
    {
        "line": 57,
        "fullcodeline": "for (int j = 0; j < M; j++) {"
    },
    {
        "line": 60,
        "fullcodeline": "for (int j = 0; j < N; j++) {"
    },
    {
        "line": 64,
        "fullcodeline": "for (int k = 0; k <= N; k++) {"
    },
    {
        "line": 78,
        "fullcodeline": "for (int j = 0; j < M; j++) {"
    },
    {
        "line": 81,
        "fullcodeline": "for (int j = 0; j < N; j++) {"
    },
    {
        "line": 85,
        "fullcodeline": "for (int k = 0; k <= N; k++) {"
    },
    {
        "line": 99,
        "fullcodeline": "for (int j = 0; j < M; j++) {"
    },
    {
        "line": 102,
        "fullcodeline": "for (int j = 0; j < N; j++) {"
    },
    {
        "line": 107,
        "fullcodeline": "for (int k = 0; k <= N; k++) {"
    },
    {
        "line": 58,
        "fullcodeline": "bn_rand_mod(x[j], n);"
    },
    {
        "line": 61,
        "fullcodeline": "bn_rand_mod(y[j], n);"
    },
    {
        "line": 68,
        "fullcodeline": "TEST_ASSERT(cp_rsapsi_ans(v, w, q, g, n, y, N) == RLC_OK, end);"
    },
    {
        "line": 69,
        "fullcodeline": "TEST_ASSERT(cp_rsapsi_int(z, &l, r, p, n, x, M, v, w, N) == RLC_OK, end);"
    },
    {
        "line": 70,
        "fullcodeline": "TEST_ASSERT(l == k, end);"
    },
    {
        "line": 79,
        "fullcodeline": "bn_rand_mod(x[j], crt->n);"
    },
    {
        "line": 82,
        "fullcodeline": "bn_rand_mod(y[j], crt->n);"
    },
    {
        "line": 89,
        "fullcodeline": "TEST_ASSERT(cp_shipsi_ans(v, w[0], q, g, crt, y, N) == RLC_OK,"
    },
    {
        "line": 91,
        "fullcodeline": "TEST_ASSERT(cp_shipsi_int(z, &l, r, p, crt->n, x, M, v, w[0],"
    },
    {
        "line": 93,
        "fullcodeline": "TEST_ASSERT(l == k, end);"
    },
    {
        "line": 100,
        "fullcodeline": "bn_rand_mod(x[j], q);"
    },
    {
        "line": 103,
        "fullcodeline": "bn_rand_mod(y[j], q);"
    },
    {
        "line": 111,
        "fullcodeline": "TEST_ASSERT(cp_pbpsi_ans(t, u, ss, d[0], y, N) == RLC_OK, end);"
    },
    {
        "line": 112,
        "fullcodeline": "TEST_ASSERT(cp_pbpsi_int(z, &l, d, x, M, t, u, N) == RLC_OK,"
    },
    {
        "line": 114,
        "fullcodeline": "TEST_ASSERT(l == k, end);"
    },
    {
        "line": 65,
        "fullcodeline": "for (int j = 0; j < k; j++) {"
    },
    {
        "line": 86,
        "fullcodeline": "for (int j = 0; j < k; j++) {"
    },
    {
        "line": 108,
        "fullcodeline": "for (int j = 0; j < k; j++) {"
    },
    {
        "line": 66,
        "fullcodeline": "bn_copy(y[j], x[j]);"
    },
    {
        "line": 87,
        "fullcodeline": "bn_copy(y[j], x[j]);"
    },
    {
        "line": 109,
        "fullcodeline": "bn_copy(y[j], x[j]);"
    }
]