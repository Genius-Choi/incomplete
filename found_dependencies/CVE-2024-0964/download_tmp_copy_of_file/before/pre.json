[
    {
        "line": 7,
        "fullcodeline": "headers = {\"Authorization\": \"Bearer \" + hf_token} if hf_token else {}"
    },
    {
        "line": 8,
        "fullcodeline": "directory = Path(dir or tempfile.gettempdir()) / secrets.token_hex(20)"
    },
    {
        "line": 9,
        "fullcodeline": "directory.mkdir(exist_ok=True, parents=True)"
    },
    {
        "line": 10,
        "fullcodeline": "file_path = directory / Path(url_path).name"
    },
    {
        "line": 5,
        "fullcodeline": "if dir is not None:"
    },
    {
        "line": 12,
        "fullcodeline": "with httpx.stream(\"GET\", url_path, headers=headers) as response:"
    },
    {
        "line": 17,
        "fullcodeline": "return str(file_path.resolve())"
    },
    {
        "line": 6,
        "fullcodeline": "os.makedirs(dir, exist_ok=True)"
    },
    {
        "line": 13,
        "fullcodeline": "response.raise_for_status()"
    },
    {
        "line": 14,
        "fullcodeline": "with open(file_path, \"wb\") as f:"
    },
    {
        "line": 15,
        "fullcodeline": "for chunk in response.iter_raw():"
    },
    {
        "line": 16,
        "fullcodeline": "f.write(chunk)"
    }
]