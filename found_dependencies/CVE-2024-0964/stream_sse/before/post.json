[
    {
        "line": 60,
        "fullcodeline": "raise ValueError(\"Did not receive process_completed message.\")"
    },
    {
        "line": 12,
        "fullcodeline": "async with client.stream("
    },
    {
        "line": 62,
        "fullcodeline": "raise"
    },
    {
        "line": 19,
        "fullcodeline": "async for line in response.aiter_text():"
    },
    {
        "line": 20,
        "fullcodeline": "if line.startswith(\"data:\"):"
    },
    {
        "line": 21,
        "fullcodeline": "resp = json.loads(line[5:])"
    },
    {
        "line": 59,
        "fullcodeline": "raise ValueError(f\"Unexpected message: {line}\")"
    },
    {
        "line": 22,
        "fullcodeline": "with helper.lock:"
    },
    {
        "line": 44,
        "fullcodeline": "if resp[\"msg\"] == \"queue_full\":"
    },
    {
        "line": 45,
        "fullcodeline": "raise QueueError(\"Queue is full! Please try again.\")"
    },
    {
        "line": 23,
        "fullcodeline": "has_progress = \"progress_data\" in resp"
    },
    {
        "line": 24,
        "fullcodeline": "status_update = StatusUpdate("
    },
    {
        "line": 35,
        "fullcodeline": "output = resp.get(\"output\", {}).get(\"data\", [])"
    },
    {
        "line": 42,
        "fullcodeline": "helper.job.latest_status = status_update"
    },
    {
        "line": 46,
        "fullcodeline": "elif resp[\"msg\"] == \"send_data\":"
    },
    {
        "line": 36,
        "fullcodeline": "if output and status_update.code != Status.FINISHED:"
    },
    {
        "line": 47,
        "fullcodeline": "event_id = resp[\"event_id\"]"
    },
    {
        "line": 48,
        "fullcodeline": "helper.event_id = event_id"
    },
    {
        "line": 49,
        "fullcodeline": "req = await client.post("
    },
    {
        "line": 55,
        "fullcodeline": "req.raise_for_status()"
    },
    {
        "line": 25,
        "fullcodeline": "code=Status.msg_to_status(resp[\"msg\"]),"
    },
    {
        "line": 26,
        "fullcodeline": "queue_size=resp.get(\"queue_size\"),"
    },
    {
        "line": 27,
        "fullcodeline": "rank=resp.get(\"rank\", None),"
    },
    {
        "line": 28,
        "fullcodeline": "success=resp.get(\"success\"),"
    },
    {
        "line": 29,
        "fullcodeline": "time=datetime.now(),"
    },
    {
        "line": 30,
        "fullcodeline": "eta=resp.get(\"rank_eta\"),"
    },
    {
        "line": 31,
        "fullcodeline": "progress_data=ProgressUnit.from_msg(resp[\"progress_data\"])"
    },
    {
        "line": 56,
        "fullcodeline": "elif resp[\"msg\"] == \"process_completed\":"
    },
    {
        "line": 41,
        "fullcodeline": "helper.job.outputs.append(result)"
    },
    {
        "line": 38,
        "fullcodeline": "result = helper.prediction_processor(*output)"
    },
    {
        "line": 51,
        "fullcodeline": "json={\"event_id\": event_id, **data, **hash_data},"
    },
    {
        "line": 40,
        "fullcodeline": "result = [e]"
    }
]