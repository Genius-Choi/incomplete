[
    {
        "line": 6,
        "fullcodeline": "int cpl = ctxt->ops->cpl(ctxt);"
    },
    {
        "line": 8,
        "fullcodeline": "const struct x86_emulate_ops *ops = ctxt->ops;"
    },
    {
        "line": 14,
        "fullcodeline": "rc = emulate_pop(ctxt, &eip, ctxt->op_bytes);"
    },
    {
        "line": 17,
        "fullcodeline": "rc = emulate_pop(ctxt, &cs, ctxt->op_bytes);"
    },
    {
        "line": 23,
        "fullcodeline": "rc = __load_segment_descriptor(ctxt, (u16)cs, VCPU_SREG_CS, cpl,"
    },
    {
        "line": 28,
        "fullcodeline": "rc = assign_eip_far(ctxt, eip, &new_desc);"
    },
    {
        "line": 10,
        "fullcodeline": "if (ctxt->mode == X86EMUL_MODE_PROT64)"
    },
    {
        "line": 15,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 18,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 21,
        "fullcodeline": "if (ctxt->mode >= X86EMUL_MODE_PROT16 && (cs & 3) > cpl)"
    },
    {
        "line": 26,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE)"
    },
    {
        "line": 29,
        "fullcodeline": "if (rc != X86EMUL_CONTINUE) {"
    },
    {
        "line": 11,
        "fullcodeline": "ops->get_segment(ctxt, &old_cs, &old_desc, NULL,"
    },
    {
        "line": 30,
        "fullcodeline": "WARN_ON(ctxt->mode != X86EMUL_MODE_PROT64);"
    },
    {
        "line": 31,
        "fullcodeline": "ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS);"
    }
]