[
    {
        "line": 2,
        "fullcodeline": "MOBIBuffer *buf = mobi_buffer_init_null(record->data, record->size);"
    },
    {
        "line": 7,
        "fullcodeline": "char huff_magic[5];"
    },
    {
        "line": 8,
        "fullcodeline": "mobi_buffer_getstring(huff_magic, buf, 4);"
    },
    {
        "line": 9,
        "fullcodeline": "const size_t header_length = mobi_buffer_get32(buf);"
    },
    {
        "line": 15,
        "fullcodeline": "const size_t data1_offset = mobi_buffer_get32(buf);"
    },
    {
        "line": 16,
        "fullcodeline": "const size_t data2_offset = mobi_buffer_get32(buf);"
    },
    {
        "line": 18,
        "fullcodeline": "mobi_buffer_setpos(buf, data1_offset);"
    },
    {
        "line": 28,
        "fullcodeline": "mobi_buffer_setpos(buf, data2_offset);"
    },
    {
        "line": 3,
        "fullcodeline": "if (buf == NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (buf->offset + (256 * 4) > buf->maxlen) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (int i = 0; i < 256; i++) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (buf->offset + (64 * 4) > buf->maxlen) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (int i = 1; i < 33; i++) {"
    },
    {
        "line": 4,
        "fullcodeline": "debug_print(\"%s\\n\", \"Memory allocation failed\");"
    },
    {
        "line": 10,
        "fullcodeline": "if (strncmp(huff_magic, HUFF_MAGIC, 4) != 0 || header_length < HUFF_HEADER_LEN) {"
    },
    {
        "line": 38,
        "fullcodeline": "const uint32_t mincode = mobi_buffer_get32(buf);"
    },
    {
        "line": 39,
        "fullcodeline": "const uint32_t maxcode = mobi_buffer_get32(buf);"
    },
    {
        "line": 26,
        "fullcodeline": "huffcdic->table1[i] = mobi_buffer_get32(buf);"
    },
    {
        "line": 40,
        "fullcodeline": "huffcdic->mincode_table[i] =  mincode << (32 - i);"
    },
    {
        "line": 41,
        "fullcodeline": "huffcdic->maxcode_table[i] =  ((maxcode + 1) << (32 - i)) - 1;"
    }
]