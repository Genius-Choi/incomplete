[
    {
        "line": 5,
        "fullcodeline": "pipe = kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL);"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned long pipe_bufs = PIPE_DEF_BUFFERS;"
    },
    {
        "line": 8,
        "fullcodeline": "struct user_struct *user = get_current_user();"
    },
    {
        "line": 25,
        "fullcodeline": "free_uid(user);"
    },
    {
        "line": 26,
        "fullcodeline": "kfree(pipe);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!too_many_pipe_buffers_hard(user)) {"
    },
    {
        "line": 13,
        "fullcodeline": "pipe->bufs = kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL);"
    },
    {
        "line": 17,
        "fullcodeline": "init_waitqueue_head(&pipe->wait);"
    },
    {
        "line": 18,
        "fullcodeline": "pipe->r_counter = pipe->w_counter = 1;"
    },
    {
        "line": 19,
        "fullcodeline": "pipe->buffers = pipe_bufs;"
    },
    {
        "line": 20,
        "fullcodeline": "pipe->user = user;"
    },
    {
        "line": 21,
        "fullcodeline": "account_pipe_buffers(pipe, 0, pipe_bufs);"
    },
    {
        "line": 22,
        "fullcodeline": "mutex_init(&pipe->mutex);"
    },
    {
        "line": 11,
        "fullcodeline": "if (too_many_pipe_buffers_soft(user))"
    },
    {
        "line": 12,
        "fullcodeline": "pipe_bufs = 1;"
    }
]