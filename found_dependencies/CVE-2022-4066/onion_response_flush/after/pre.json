[
    {
        "line": 2,
        "fullcodeline": "res->sent_bytes += res->buffer_pos;"
    },
    {
        "line": 3,
        "fullcodeline": "res->sent_bytes_total += res->buffer_pos;"
    },
    {
        "line": 20,
        "fullcodeline": "ONION_DEBUG0(\"Flush %d bytes\", res->buffer_pos);"
    },
    {
        "line": 22,
        "fullcodeline": "onion_request *req = res->request;"
    },
    {
        "line": 24,
        "fullcodeline": "write = req->connection.listen_point->write;"
    },
    {
        "line": 27,
        "fullcodeline": "off_t pos = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "int savederrno = errno;"
    },
    {
        "line": 41,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "if (res->buffer_pos == 0)     // Not used."
    },
    {
        "line": 18,
        "fullcodeline": "if (res->flags & OR_SKIP_CONTENT)     // HEAD request"
    },
    {
        "line": 29,
        "fullcodeline": "if (res->flags & OR_CHUNKED) {"
    },
    {
        "line": 42,
        "fullcodeline": "while ((w ="
    },
    {
        "line": 6,
        "fullcodeline": "if (!(res->flags & OR_HEADER_SENT)) { // Automatic header write"
    },
    {
        "line": 9,
        "fullcodeline": "char tmpb[sizeof(res->buffer)];"
    },
    {
        "line": 10,
        "fullcodeline": "int tmpp = res->buffer_pos;"
    },
    {
        "line": 11,
        "fullcodeline": "memcpy(tmpb, res->buffer, res->buffer_pos);"
    },
    {
        "line": 12,
        "fullcodeline": "res->buffer_pos = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "onion_response_write_headers(res);"
    },
    {
        "line": 31,
        "fullcodeline": "snprintf(tmp, sizeof(tmp), \"%X\\r\\n\", (unsigned int)res->buffer_pos);"
    },
    {
        "line": 38,
        "fullcodeline": "ONION_DEBUG0(\"Write %d-%d bytes\", res->buffer_pos, w);"
    },
    {
        "line": 52,
        "fullcodeline": "ONION_DEBUG0(\"Write %d-%d bytes\", res->buffer_pos, w);"
    },
    {
        "line": 53,
        "fullcodeline": "res->buffer_pos -= w;"
    },
    {
        "line": 30,
        "fullcodeline": "char tmp[16];"
    },
    {
        "line": 43,
        "fullcodeline": "write(req, &res->buffer[pos], res->buffer_pos)) != res->buffer_pos) {"
    },
    {
        "line": 32,
        "fullcodeline": "if ((w = write(req, tmp, strlen(tmp))) <= 0) {"
    },
    {
        "line": 33,
        "fullcodeline": "ONION_CALL_MAX_ONCE_PER_T_COUNT(1, ONION_WARNING, \"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\","
    },
    {
        "line": 44,
        "fullcodeline": "if (w <= 0 || res->buffer_pos < 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "(unsigned int)res->buffer_pos, strerror(errno));"
    },
    {
        "line": 46,
        "fullcodeline": "res->buffer_pos, strerror(errno), w);"
    }
]