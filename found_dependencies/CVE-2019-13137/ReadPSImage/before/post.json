[
    {
        "line": 26,
        "fullcodeline": "command[MaxTextExtent],"
    },
    {
        "line": 28,
        "fullcodeline": "filename[MaxTextExtent],"
    },
    {
        "line": 29,
        "fullcodeline": "geometry[MaxTextExtent],"
    },
    {
        "line": 30,
        "fullcodeline": "input_filename[MaxTextExtent],"
    },
    {
        "line": 31,
        "fullcodeline": "message[MaxTextExtent],"
    },
    {
        "line": 33,
        "fullcodeline": "postscript_filename[MaxTextExtent];"
    },
    {
        "line": 83,
        "fullcodeline": "hex_digits[256];"
    },
    {
        "line": 107,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 108,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 112,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 113,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 114,
        "fullcodeline": "image=AcquireImage(image_info);"
    },
    {
        "line": 115,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 121,
        "fullcodeline": "status=AcquireUniqueSymbolicLink(image_info->filename,input_filename);"
    },
    {
        "line": 132,
        "fullcodeline": "(void) memset(hex_digits,0,sizeof(hex_digits));"
    },
    {
        "line": 133,
        "fullcodeline": "hex_digits[(int) '0']=0;"
    },
    {
        "line": 134,
        "fullcodeline": "hex_digits[(int) '1']=1;"
    },
    {
        "line": 135,
        "fullcodeline": "hex_digits[(int) '2']=2;"
    },
    {
        "line": 136,
        "fullcodeline": "hex_digits[(int) '3']=3;"
    },
    {
        "line": 137,
        "fullcodeline": "hex_digits[(int) '4']=4;"
    },
    {
        "line": 138,
        "fullcodeline": "hex_digits[(int) '5']=5;"
    },
    {
        "line": 139,
        "fullcodeline": "hex_digits[(int) '6']=6;"
    },
    {
        "line": 140,
        "fullcodeline": "hex_digits[(int) '7']=7;"
    },
    {
        "line": 141,
        "fullcodeline": "hex_digits[(int) '8']=8;"
    },
    {
        "line": 142,
        "fullcodeline": "hex_digits[(int) '9']=9;"
    },
    {
        "line": 143,
        "fullcodeline": "hex_digits[(int) 'a']=10;"
    },
    {
        "line": 144,
        "fullcodeline": "hex_digits[(int) 'b']=11;"
    },
    {
        "line": 145,
        "fullcodeline": "hex_digits[(int) 'c']=12;"
    },
    {
        "line": 146,
        "fullcodeline": "hex_digits[(int) 'd']=13;"
    },
    {
        "line": 147,
        "fullcodeline": "hex_digits[(int) 'e']=14;"
    },
    {
        "line": 148,
        "fullcodeline": "hex_digits[(int) 'f']=15;"
    },
    {
        "line": 149,
        "fullcodeline": "hex_digits[(int) 'A']=10;"
    },
    {
        "line": 150,
        "fullcodeline": "hex_digits[(int) 'B']=11;"
    },
    {
        "line": 151,
        "fullcodeline": "hex_digits[(int) 'C']=12;"
    },
    {
        "line": 152,
        "fullcodeline": "hex_digits[(int) 'D']=13;"
    },
    {
        "line": 153,
        "fullcodeline": "hex_digits[(int) 'E']=14;"
    },
    {
        "line": 154,
        "fullcodeline": "hex_digits[(int) 'F']=15;"
    },
    {
        "line": 158,
        "fullcodeline": "delta.x=DefaultResolution;"
    },
    {
        "line": 159,
        "fullcodeline": "delta.y=DefaultResolution;"
    },
    {
        "line": 176,
        "fullcodeline": "(void) ParseAbsoluteGeometry(PSPageGeometry,&page);"
    },
    {
        "line": 179,
        "fullcodeline": "resolution.x=image->x_resolution;"
    },
    {
        "line": 180,
        "fullcodeline": "resolution.y=image->y_resolution;"
    },
    {
        "line": 186,
        "fullcodeline": "(void) memset(&bounds,0,sizeof(bounds));"
    },
    {
        "line": 187,
        "fullcodeline": "(void) memset(command,0,sizeof(command));"
    },
    {
        "line": 188,
        "fullcodeline": "cmyk=image_info->colorspace == CMYKColorspace ? MagickTrue : MagickFalse;"
    },
    {
        "line": 189,
        "fullcodeline": "(void) memset(&hires_bounds,0,sizeof(hires_bounds));"
    },
    {
        "line": 190,
        "fullcodeline": "priority=0;"
    },
    {
        "line": 191,
        "fullcodeline": "columns=0;"
    },
    {
        "line": 192,
        "fullcodeline": "rows=0;"
    },
    {
        "line": 193,
        "fullcodeline": "extent=0;"
    },
    {
        "line": 194,
        "fullcodeline": "spotcolor=0;"
    },
    {
        "line": 195,
        "fullcodeline": "language_level=1;"
    },
    {
        "line": 196,
        "fullcodeline": "skip=MagickFalse;"
    },
    {
        "line": 197,
        "fullcodeline": "pages=(~0UL);"
    },
    {
        "line": 198,
        "fullcodeline": "p=command;"
    },
    {
        "line": 336,
        "fullcodeline": "fitPage=MagickFalse;"
    },
    {
        "line": 337,
        "fullcodeline": "option=GetImageOption(image_info,\"eps:fit-page\");"
    },
    {
        "line": 368,
        "fullcodeline": "file=AcquireUniqueFileResource(postscript_filename);"
    },
    {
        "line": 376,
        "fullcodeline": "(void) CopyMagickString(command,\"/setpagedevice {pop} bind 1 index where {\""
    },
    {
        "line": 379,
        "fullcodeline": "count=write(file,command,(unsigned int) strlen(command));"
    },
    {
        "line": 390,
        "fullcodeline": "file=close(file)-1;"
    },
    {
        "line": 407,
        "fullcodeline": "density=AcquireString(\"\");"
    },
    {
        "line": 408,
        "fullcodeline": "options=AcquireString(\"\");"
    },
    {
        "line": 409,
        "fullcodeline": "(void) FormatLocaleString(density,MaxTextExtent,\"%gx%g\",resolution.x,"
    },
    {
        "line": 411,
        "fullcodeline": "(void) FormatLocaleString(options,MaxTextExtent,\"-g%.20gx%.20g \",(double)"
    },
    {
        "line": 413,
        "fullcodeline": "read_info=CloneImageInfo(image_info);"
    },
    {
        "line": 414,
        "fullcodeline": "*read_info->magick='\\0';"
    },
    {
        "line": 437,
        "fullcodeline": "(void) CopyMagickString(filename,read_info->filename,MaxTextExtent);"
    },
    {
        "line": 438,
        "fullcodeline": "(void) AcquireUniqueFilename(filename);"
    },
    {
        "line": 439,
        "fullcodeline": "(void) RelinquishUniqueFileResource(filename);"
    },
    {
        "line": 440,
        "fullcodeline": "(void) ConcatenateMagickString(filename,\"%d\",MaxTextExtent);"
    },
    {
        "line": 441,
        "fullcodeline": "(void) FormatLocaleString(command,MaxTextExtent,"
    },
    {
        "line": 446,
        "fullcodeline": "options=DestroyString(options);"
    },
    {
        "line": 447,
        "fullcodeline": "density=DestroyString(density);"
    },
    {
        "line": 448,
        "fullcodeline": "*message='\\0';"
    },
    {
        "line": 449,
        "fullcodeline": "status=InvokePostscriptDelegate(read_info->verbose,command,message,exception);"
    },
    {
        "line": 450,
        "fullcodeline": "(void) InterpretImageFilename(image_info,image,filename,1,"
    },
    {
        "line": 459,
        "fullcodeline": "(void) RelinquishUniqueFileResource(postscript_filename);"
    },
    {
        "line": 460,
        "fullcodeline": "(void) RelinquishUniqueFileResource(input_filename);"
    },
    {
        "line": 461,
        "fullcodeline": "postscript_image=(Image *) NULL;"
    },
    {
        "line": 486,
        "fullcodeline": "(void) RelinquishUniqueFileResource(read_info->filename);"
    },
    {
        "line": 487,
        "fullcodeline": "read_info=DestroyImageInfo(read_info);"
    },
    {
        "line": 508,
        "fullcodeline": "(void) SeekBlob(image,0,SEEK_SET);"
    },
    {
        "line": 620,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 655,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 656,
        "fullcodeline": "scene=0;"
    },
    {
        "line": 109,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 116,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 122,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 160,
        "fullcodeline": "if ((image->x_resolution == 0.0) || (image->y_resolution == 0.0))"
    },
    {
        "line": 168,
        "fullcodeline": "if (image_info->density != (char *) NULL)"
    },
    {
        "line": 177,
        "fullcodeline": "if (image_info->page != (char *) NULL)"
    },
    {
        "line": 199,
        "fullcodeline": "for (c=ReadBlobByte(image); c != EOF; c=ReadBlobByte(image))"
    },
    {
        "line": 321,
        "fullcodeline": "if ((fabs(hires_bounds.x2-hires_bounds.x1) >= MagickEpsilon) &&"
    },
    {
        "line": 338,
        "fullcodeline": "if (option != (char *) NULL)"
    },
    {
        "line": 363,
        "fullcodeline": "if (IssRGBCompatibleColorspace(image_info->colorspace) != MagickFalse)"
    },
    {
        "line": 369,
        "fullcodeline": "if (file == -1)"
    },
    {
        "line": 380,
        "fullcodeline": "if (image_info->page == (char *) NULL)"
    },
    {
        "line": 394,
        "fullcodeline": "if (image_info->monochrome != MagickFalse)"
    },
    {
        "line": 401,
        "fullcodeline": "if (delegate_info == (const DelegateInfo *) NULL)"
    },
    {
        "line": 415,
        "fullcodeline": "if (read_info->number_scenes != 0)"
    },
    {
        "line": 428,
        "fullcodeline": "if (*image_info->magick == 'E')"
    },
    {
        "line": 452,
        "fullcodeline": "if ((status == MagickFalse) ||"
    },
    {
        "line": 462,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 488,
        "fullcodeline": "if (postscript_image == (Image *) NULL)"
    },
    {
        "line": 496,
        "fullcodeline": "if (LocaleCompare(postscript_image->magick,\"BMP\") == 0)"
    },
    {
        "line": 509,
        "fullcodeline": "for (c=ReadBlobByte(image); c != EOF; c=ReadBlobByte(image))"
    },
    {
        "line": 621,
        "fullcodeline": "if (image_info->number_scenes != 0)"
    },
    {
        "line": 654,
        "fullcodeline": "} while (next != (Image *) NULL);"
    },
    {
        "line": 657,
        "fullcodeline": "for (next=GetFirstImageInList(postscript_image); next != (Image *) NULL; )"
    },
    {
        "line": 662,
        "fullcodeline": "return(GetFirstImageInList(postscript_image));"
    },
    {
        "line": 110,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 118,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 124,
        "fullcodeline": "ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\","
    },
    {
        "line": 126,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 162,
        "fullcodeline": "flags=ParseGeometry(PSDensityGeometry,&geometry_info);"
    },
    {
        "line": 163,
        "fullcodeline": "image->x_resolution=geometry_info.rho;"
    },
    {
        "line": 164,
        "fullcodeline": "image->y_resolution=geometry_info.sigma;"
    },
    {
        "line": 170,
        "fullcodeline": "flags=ParseGeometry(image_info->density,&geometry_info);"
    },
    {
        "line": 171,
        "fullcodeline": "image->x_resolution=geometry_info.rho;"
    },
    {
        "line": 172,
        "fullcodeline": "image->y_resolution=geometry_info.sigma;"
    },
    {
        "line": 178,
        "fullcodeline": "(void) ParseAbsoluteGeometry(image_info->page,&page);"
    },
    {
        "line": 181,
        "fullcodeline": "page.width=(size_t) ceil((double) (page.width*resolution.x/delta.x)-0.5);"
    },
    {
        "line": 182,
        "fullcodeline": "page.height=(size_t) ceil((double) (page.height*resolution.y/delta.y)-0.5);"
    },
    {
        "line": 204,
        "fullcodeline": "*p++=(char) c;"
    },
    {
        "line": 208,
        "fullcodeline": "*p='\\0';"
    },
    {
        "line": 209,
        "fullcodeline": "p=command;"
    },
    {
        "line": 234,
        "fullcodeline": "length=strlen(DocumentProcessColors);"
    },
    {
        "line": 246,
        "fullcodeline": "length=strlen(DocumentCustomColors);"
    },
    {
        "line": 280,
        "fullcodeline": "count=0;"
    },
    {
        "line": 281,
        "fullcodeline": "i=0;"
    },
    {
        "line": 318,
        "fullcodeline": "hires_bounds=bounds;"
    },
    {
        "line": 319,
        "fullcodeline": "priority=(size_t) i;"
    },
    {
        "line": 322,
        "fullcodeline": "(fabs(hires_bounds.y2-hires_bounds.y1) >= MagickEpsilon))"
    },
    {
        "line": 327,
        "fullcodeline": "(void) FormatLocaleString(geometry,MaxTextExtent,\"%gx%g%+.15g%+.15g\","
    },
    {
        "line": 330,
        "fullcodeline": "(void) SetImageProperty(image,\"ps:HiResBoundingBox\",geometry);"
    },
    {
        "line": 346,
        "fullcodeline": "geometry=GetPageGeometry(option);"
    },
    {
        "line": 347,
        "fullcodeline": "flags=ParseMetaGeometry(geometry,&page.x,&page.y,&page.width,"
    },
    {
        "line": 360,
        "fullcodeline": "geometry=DestroyString(geometry);"
    },
    {
        "line": 361,
        "fullcodeline": "fitPage=MagickTrue;"
    },
    {
        "line": 364,
        "fullcodeline": "cmyk=MagickFalse;"
    },
    {
        "line": 371,
        "fullcodeline": "ThrowFileException(&image->exception,FileOpenError,\"UnableToOpenFile\","
    },
    {
        "line": 373,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 383,
        "fullcodeline": "translate_geometry[MaxTextExtent];"
    },
    {
        "line": 385,
        "fullcodeline": "(void) FormatLocaleString(translate_geometry,MaxTextExtent,"
    },
    {
        "line": 387,
        "fullcodeline": "count=write(file,translate_geometry,(unsigned int)"
    },
    {
        "line": 395,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"ps:mono\",(char *) NULL,exception);"
    },
    {
        "line": 403,
        "fullcodeline": "(void) RelinquishUniqueFileResource(postscript_filename);"
    },
    {
        "line": 404,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 412,
        "fullcodeline": "page.width,(double) page.height);"
    },
    {
        "line": 418,
        "fullcodeline": "pages[MaxTextExtent];"
    },
    {
        "line": 420,
        "fullcodeline": "(void) FormatLocaleString(pages,MaxTextExtent,\"-dFirstPage=%.20g \""
    },
    {
        "line": 423,
        "fullcodeline": "(void) ConcatenateMagickString(options,pages,MaxTextExtent);"
    },
    {
        "line": 424,
        "fullcodeline": "read_info->number_scenes=0;"
    },
    {
        "line": 430,
        "fullcodeline": "option=GetImageOption(image_info,\"eps:use-cropbox\");"
    },
    {
        "line": 442,
        "fullcodeline": "GetDelegateCommands(delegate_info),"
    },
    {
        "line": 443,
        "fullcodeline": "read_info->antialias != MagickFalse ? 4 : 1,"
    },
    {
        "line": 444,
        "fullcodeline": "read_info->antialias != MagickFalse ? 4 : 1,density,options,filename,"
    },
    {
        "line": 453,
        "fullcodeline": "(IsPostscriptRendered(read_info->filename) == MagickFalse))"
    },
    {
        "line": 455,
        "fullcodeline": "(void) ConcatenateMagickString(command,\" -c showpage\",MaxTextExtent);"
    },
    {
        "line": 456,
        "fullcodeline": "status=InvokePostscriptDelegate(read_info->verbose,command,message,"
    },
    {
        "line": 493,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 501,
        "fullcodeline": "cmyk_image=ConsolidateCMYKImages(postscript_image,exception);"
    },
    {
        "line": 514,
        "fullcodeline": "*p++=(char) c;"
    },
    {
        "line": 518,
        "fullcodeline": "*p='\\0';"
    },
    {
        "line": 519,
        "fullcodeline": "p=command;"
    },
    {
        "line": 641,
        "fullcodeline": "(void) CopyMagickString(postscript_image->filename,filename,MaxTextExtent);"
    },
    {
        "line": 642,
        "fullcodeline": "(void) CopyMagickString(postscript_image->magick,image->magick,"
    },
    {
        "line": 648,
        "fullcodeline": "postscript_image->page=page;"
    },
    {
        "line": 649,
        "fullcodeline": "(void) CloneImageProfiles(postscript_image,image);"
    },
    {
        "line": 650,
        "fullcodeline": "(void) CloneImageProperties(postscript_image,image);"
    },
    {
        "line": 651,
        "fullcodeline": "next=SyncNextImageInList(postscript_image);"
    },
    {
        "line": 659,
        "fullcodeline": "next->scene=scene++;"
    },
    {
        "line": 660,
        "fullcodeline": "next=GetNextImageInList(next);"
    },
    {
        "line": 119,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 127,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 165,
        "fullcodeline": "if ((flags & SigmaValue) == 0)"
    },
    {
        "line": 173,
        "fullcodeline": "if ((flags & SigmaValue) == 0)"
    },
    {
        "line": 205,
        "fullcodeline": "if ((strchr(\"\\n\\r%\",c) == (char *) NULL) &&"
    },
    {
        "line": 213,
        "fullcodeline": "if (LocaleNCompare(BeginDocument,command,strlen(BeginDocument)) == 0)"
    },
    {
        "line": 215,
        "fullcodeline": "if (LocaleNCompare(EndDocument,command,strlen(EndDocument)) == 0)"
    },
    {
        "line": 217,
        "fullcodeline": "if (skip != MagickFalse)"
    },
    {
        "line": 219,
        "fullcodeline": "if (LocaleNCompare(PostscriptLevel,command,strlen(PostscriptLevel)) == 0)"
    },
    {
        "line": 225,
        "fullcodeline": "if (LocaleNCompare(LanguageLevel,command,strlen(LanguageLevel)) == 0)"
    },
    {
        "line": 227,
        "fullcodeline": "if (LocaleNCompare(Pages,command,strlen(Pages)) == 0)"
    },
    {
        "line": 229,
        "fullcodeline": "if (LocaleNCompare(ImageData,command,strlen(ImageData)) == 0)"
    },
    {
        "line": 235,
        "fullcodeline": "if (LocaleNCompare(DocumentProcessColors,command,length) == 0)"
    },
    {
        "line": 242,
        "fullcodeline": "if (LocaleNCompare(CMYKCustomColor,command,strlen(CMYKCustomColor)) == 0)"
    },
    {
        "line": 244,
        "fullcodeline": "if (LocaleNCompare(CMYKProcessColor,command,strlen(CMYKProcessColor)) == 0)"
    },
    {
        "line": 247,
        "fullcodeline": "if ((LocaleNCompare(DocumentCustomColors,command,length) == 0) ||"
    },
    {
        "line": 275,
        "fullcodeline": "if (image_info->page != (char *) NULL)"
    },
    {
        "line": 282,
        "fullcodeline": "if (LocaleNCompare(BoundingBox,command,strlen(BoundingBox)) == 0)"
    },
    {
        "line": 288,
        "fullcodeline": "if (LocaleNCompare(DocumentMedia,command,strlen(DocumentMedia)) == 0)"
    },
    {
        "line": 294,
        "fullcodeline": "if (LocaleNCompare(HiResBoundingBox,command,strlen(HiResBoundingBox)) == 0)"
    },
    {
        "line": 300,
        "fullcodeline": "if (LocaleNCompare(PageBoundingBox,command,strlen(PageBoundingBox)) == 0)"
    },
    {
        "line": 306,
        "fullcodeline": "if (LocaleNCompare(PageMedia,command,strlen(PageMedia)) == 0)"
    },
    {
        "line": 312,
        "fullcodeline": "if ((count != 4) || (i < (ssize_t) priority))"
    },
    {
        "line": 314,
        "fullcodeline": "if ((fabs(bounds.x2-bounds.x1) <= fabs(hires_bounds.x2-hires_bounds.x1)) ||"
    },
    {
        "line": 349,
        "fullcodeline": "if (flags == NoValue)"
    },
    {
        "line": 374,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 405,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 425,
        "fullcodeline": "if (read_info->scenes != (char *) NULL)"
    },
    {
        "line": 431,
        "fullcodeline": "if ((option == (const char *) NULL) ||"
    },
    {
        "line": 434,
        "fullcodeline": "if (fitPage != MagickFalse)"
    },
    {
        "line": 463,
        "fullcodeline": "for (i=1; ; i++)"
    },
    {
        "line": 490,
        "fullcodeline": "if (*message != '\\0')"
    },
    {
        "line": 494,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 502,
        "fullcodeline": "if (cmyk_image != (Image *) NULL)"
    },
    {
        "line": 515,
        "fullcodeline": "if ((strchr(\"\\n\\r%\",c) == (char *) NULL) &&"
    },
    {
        "line": 523,
        "fullcodeline": "if (LocaleNCompare(BeginDocument,command,strlen(BeginDocument)) == 0)"
    },
    {
        "line": 525,
        "fullcodeline": "if (LocaleNCompare(EndDocument,command,strlen(EndDocument)) == 0)"
    },
    {
        "line": 527,
        "fullcodeline": "if (skip != MagickFalse)"
    },
    {
        "line": 529,
        "fullcodeline": "if (LocaleNCompare(PostscriptLevel,command,strlen(PostscriptLevel)) == 0)"
    },
    {
        "line": 535,
        "fullcodeline": "if (LocaleNCompare(LanguageLevel,command,strlen(LanguageLevel)) == 0)"
    },
    {
        "line": 537,
        "fullcodeline": "if (LocaleNCompare(Pages,command,strlen(Pages)) == 0)"
    },
    {
        "line": 539,
        "fullcodeline": "if (LocaleNCompare(ImageData,command,strlen(ImageData)) == 0)"
    },
    {
        "line": 541,
        "fullcodeline": "if (LocaleNCompare(ICCProfile,command,strlen(ICCProfile)) == 0)"
    },
    {
        "line": 565,
        "fullcodeline": "if (LocaleNCompare(PhotoshopProfile,command,strlen(PhotoshopProfile)) == 0)"
    },
    {
        "line": 590,
        "fullcodeline": "if (LocaleNCompare(BeginXMPPacket,command,strlen(BeginXMPPacket)) == 0)"
    },
    {
        "line": 632,
        "fullcodeline": "for (i=0; i < (ssize_t) image_info->scene; i++)"
    },
    {
        "line": 644,
        "fullcodeline": "if (columns != 0)"
    },
    {
        "line": 646,
        "fullcodeline": "if (rows != 0)"
    },
    {
        "line": 652,
        "fullcodeline": "if (next != (Image *) NULL)"
    },
    {
        "line": 166,
        "fullcodeline": "image->y_resolution=image->x_resolution;"
    },
    {
        "line": 174,
        "fullcodeline": "image->y_resolution=image->x_resolution;"
    },
    {
        "line": 206,
        "fullcodeline": "((size_t) (p-command) < (MaxTextExtent-1)))"
    },
    {
        "line": 214,
        "fullcodeline": "skip=MagickTrue;"
    },
    {
        "line": 216,
        "fullcodeline": "skip=MagickFalse;"
    },
    {
        "line": 221,
        "fullcodeline": "(void) SetImageProperty(image,\"ps:Level\",command+4);"
    },
    {
        "line": 226,
        "fullcodeline": "(void) sscanf(command,LanguageLevel \" %lu\",&language_level);"
    },
    {
        "line": 228,
        "fullcodeline": "(void) sscanf(command,Pages \" %lu\",&pages);"
    },
    {
        "line": 230,
        "fullcodeline": "(void) sscanf(command,ImageData \" %lu %lu\",&columns,&rows);"
    },
    {
        "line": 243,
        "fullcodeline": "cmyk=MagickTrue;"
    },
    {
        "line": 245,
        "fullcodeline": "cmyk=MagickTrue;"
    },
    {
        "line": 249,
        "fullcodeline": "(LocaleNCompare(SpotColor,command,strlen(SpotColor)) == 0))"
    },
    {
        "line": 252,
        "fullcodeline": "property[MaxTextExtent],"
    },
    {
        "line": 261,
        "fullcodeline": "(void) FormatLocaleString(property,MaxTextExtent,\"ps:SpotColor-%.20g\","
    },
    {
        "line": 266,
        "fullcodeline": "value=ConstantString(p);"
    },
    {
        "line": 267,
        "fullcodeline": "(void) SubstituteString(&value,\"(\",\"\");"
    },
    {
        "line": 268,
        "fullcodeline": "(void) SubstituteString(&value,\")\",\"\");"
    },
    {
        "line": 269,
        "fullcodeline": "(void) StripString(value);"
    },
    {
        "line": 272,
        "fullcodeline": "value=DestroyString(value);"
    },
    {
        "line": 284,
        "fullcodeline": "count=(ssize_t) sscanf(command,BoundingBox \" %lf %lf %lf %lf\","
    },
    {
        "line": 286,
        "fullcodeline": "i=2;"
    },
    {
        "line": 290,
        "fullcodeline": "count=(ssize_t) sscanf(command,DocumentMedia \" %lf %lf %lf %lf\","
    },
    {
        "line": 292,
        "fullcodeline": "i=1;"
    },
    {
        "line": 296,
        "fullcodeline": "count=(ssize_t) sscanf(command,HiResBoundingBox \" %lf %lf %lf %lf\","
    },
    {
        "line": 298,
        "fullcodeline": "i=3;"
    },
    {
        "line": 302,
        "fullcodeline": "count=(ssize_t) sscanf(command,PageBoundingBox \" %lf %lf %lf %lf\","
    },
    {
        "line": 304,
        "fullcodeline": "i=1;"
    },
    {
        "line": 308,
        "fullcodeline": "count=(ssize_t) sscanf(command,PageMedia \" %lf %lf %lf %lf\","
    },
    {
        "line": 310,
        "fullcodeline": "i=1;"
    },
    {
        "line": 315,
        "fullcodeline": "(fabs(bounds.y2-bounds.y1) <= fabs(hires_bounds.y2-hires_bounds.y1)))"
    },
    {
        "line": 328,
        "fullcodeline": "hires_bounds.x2-hires_bounds.x1,hires_bounds.y2-hires_bounds.y1,"
    },
    {
        "line": 331,
        "fullcodeline": "page.width=(size_t) ceil((double) ((hires_bounds.x2-hires_bounds.x1)*"
    },
    {
        "line": 333,
        "fullcodeline": "page.height=(size_t) ceil((double) ((hires_bounds.y2-hires_bounds.y1)*"
    },
    {
        "line": 351,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),OptionError,"
    },
    {
        "line": 353,
        "fullcodeline": "image=DestroyImage(image);"
    },
    {
        "line": 356,
        "fullcodeline": "page.width=(size_t) ceil((double) (page.width*image->x_resolution/delta.x)"
    },
    {
        "line": 358,
        "fullcodeline": "page.height=(size_t) ceil((double) (page.height*image->y_resolution/"
    },
    {
        "line": 386,
        "fullcodeline": "\"%g %g translate\\n\",-hires_bounds.x1,-hires_bounds.y1);"
    },
    {
        "line": 397,
        "fullcodeline": "if (cmyk != MagickFalse)"
    },
    {
        "line": 421,
        "fullcodeline": "\"-dLastPage=%.20g \",(double) read_info->scene+1,(double)"
    },
    {
        "line": 426,
        "fullcodeline": "*read_info->scenes='\\0';"
    },
    {
        "line": 432,
        "fullcodeline": "(IsStringTrue(option) != MagickFalse))"
    },
    {
        "line": 433,
        "fullcodeline": "(void) ConcatenateMagickString(options,\"-dEPSCrop \",MaxTextExtent);"
    },
    {
        "line": 435,
        "fullcodeline": "(void) ConcatenateMagickString(options,\"-dEPSFitPage \",MaxTextExtent);"
    },
    {
        "line": 465,
        "fullcodeline": "(void) InterpretImageFilename(image_info,image,filename,(int) i,"
    },
    {
        "line": 469,
        "fullcodeline": "(void) RelinquishUniqueFileResource(read_info->filename);"
    },
    {
        "line": 472,
        "fullcodeline": "for (i=1; ; i++)"
    },
    {
        "line": 491,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),DelegateError,"
    },
    {
        "line": 504,
        "fullcodeline": "postscript_image=DestroyImageList(postscript_image);"
    },
    {
        "line": 505,
        "fullcodeline": "postscript_image=cmyk_image;"
    },
    {
        "line": 516,
        "fullcodeline": "((size_t) (p-command) < (MaxTextExtent-1)))"
    },
    {
        "line": 524,
        "fullcodeline": "skip=MagickTrue;"
    },
    {
        "line": 526,
        "fullcodeline": "skip=MagickFalse;"
    },
    {
        "line": 531,
        "fullcodeline": "(void) SetImageProperty(image,\"ps:Level\",command+4);"
    },
    {
        "line": 536,
        "fullcodeline": "(void) sscanf(command,LanguageLevel \" %lu\",&language_level);"
    },
    {
        "line": 538,
        "fullcodeline": "(void) sscanf(command,Pages \" %lu\",&pages);"
    },
    {
        "line": 540,
        "fullcodeline": "(void) sscanf(command,ImageData \" %lu %lu\",&columns,&rows);"
    },
    {
        "line": 549,
        "fullcodeline": "profile=AcquireStringInfo(MaxTextExtent);"
    },
    {
        "line": 550,
        "fullcodeline": "datum=GetStringInfoDatum(profile);"
    },
    {
        "line": 560,
        "fullcodeline": "SetStringInfoLength(profile,(size_t) i+1);"
    },
    {
        "line": 561,
        "fullcodeline": "(void) SetImageProfile(image,\"icc\",profile);"
    },
    {
        "line": 562,
        "fullcodeline": "profile=DestroyStringInfo(profile);"
    },
    {
        "line": 573,
        "fullcodeline": "count=(ssize_t) sscanf(command,PhotoshopProfile \" %lu\",&extent);"
    },
    {
        "line": 576,
        "fullcodeline": "length=extent;"
    },
    {
        "line": 579,
        "fullcodeline": "profile=BlobToStringInfo((const void *) NULL,length);"
    },
    {
        "line": 598,
        "fullcodeline": "p=command;"
    },
    {
        "line": 599,
        "fullcodeline": "profile=StringToStringInfo(command);"
    },
    {
        "line": 614,
        "fullcodeline": "SetStringInfoLength(profile,(size_t) i);"
    },
    {
        "line": 615,
        "fullcodeline": "(void) SetImageProfile(image,\"xmp\",profile);"
    },
    {
        "line": 616,
        "fullcodeline": "profile=DestroyStringInfo(profile);"
    },
    {
        "line": 634,
        "fullcodeline": "clone_image=CloneImage(postscript_image,1,1,MagickTrue,exception);"
    },
    {
        "line": 645,
        "fullcodeline": "postscript_image->magick_columns=columns;"
    },
    {
        "line": 647,
        "fullcodeline": "postscript_image->magick_rows=rows;"
    },
    {
        "line": 653,
        "fullcodeline": "postscript_image=next;"
    },
    {
        "line": 222,
        "fullcodeline": "if (GlobExpression(command,\"*EPSF-*\",MagickTrue) != MagickFalse)"
    },
    {
        "line": 237,
        "fullcodeline": "if ((GlobExpression(command,\"*Cyan*\",MagickTrue) != MagickFalse) ||"
    },
    {
        "line": 248,
        "fullcodeline": "(LocaleNCompare(CMYKCustomColor,command,strlen(CMYKCustomColor)) == 0) ||"
    },
    {
        "line": 263,
        "fullcodeline": "for (p=command; *p != '\\0'; p++)"
    },
    {
        "line": 270,
        "fullcodeline": "if (*value != '\\0')"
    },
    {
        "line": 316,
        "fullcodeline": "if (i == (ssize_t) priority)"
    },
    {
        "line": 354,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 388,
        "fullcodeline": "strlen(translate_geometry));"
    },
    {
        "line": 398,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"ps:cmyk\",(char *) NULL,exception);"
    },
    {
        "line": 422,
        "fullcodeline": "(read_info->scene+read_info->number_scenes));"
    },
    {
        "line": 467,
        "fullcodeline": "if (IsPostscriptRendered(read_info->filename) == MagickFalse)"
    },
    {
        "line": 474,
        "fullcodeline": "(void) InterpretImageFilename(image_info,image,filename,(int) i,"
    },
    {
        "line": 478,
        "fullcodeline": "read_info->blob=NULL;"
    },
    {
        "line": 479,
        "fullcodeline": "read_info->length=0;"
    },
    {
        "line": 480,
        "fullcodeline": "next=ReadImage(read_info,exception);"
    },
    {
        "line": 481,
        "fullcodeline": "(void) RelinquishUniqueFileResource(read_info->filename);"
    },
    {
        "line": 484,
        "fullcodeline": "AppendImageToList(&postscript_image,next);"
    },
    {
        "line": 532,
        "fullcodeline": "if (GlobExpression(command,\"*EPSF-*\",MagickTrue) != MagickFalse)"
    },
    {
        "line": 551,
        "fullcodeline": "for (i=0; (c=ProfileInteger(image,hex_digits)) != EOF; i++)"
    },
    {
        "line": 574,
        "fullcodeline": "if (count != 1)"
    },
    {
        "line": 577,
        "fullcodeline": "if ((MagickSizeType) length > GetBlobSize(image))"
    },
    {
        "line": 580,
        "fullcodeline": "if (profile != (StringInfo *) NULL)"
    },
    {
        "line": 600,
        "fullcodeline": "for (i=GetStringInfoLength(profile)-1; c != EOF; i++)"
    },
    {
        "line": 635,
        "fullcodeline": "if (clone_image != (Image *) NULL)"
    },
    {
        "line": 223,
        "fullcodeline": "pages=1;"
    },
    {
        "line": 239,
        "fullcodeline": "(GlobExpression(command,\"*Yellow*\",MagickTrue) != MagickFalse))"
    },
    {
        "line": 240,
        "fullcodeline": "cmyk=MagickTrue;"
    },
    {
        "line": 262,
        "fullcodeline": "(double) (spotcolor++));"
    },
    {
        "line": 264,
        "fullcodeline": "if (isspace((int) (unsigned char) *p) != 0)"
    },
    {
        "line": 271,
        "fullcodeline": "(void) SetImageProperty(image,property,value);"
    },
    {
        "line": 400,
        "fullcodeline": "delegate_info=GetDelegateInfo(\"ps:alpha\",(char *) NULL,exception);"
    },
    {
        "line": 476,
        "fullcodeline": "if (IsPostscriptRendered(read_info->filename) == MagickFalse)"
    },
    {
        "line": 482,
        "fullcodeline": "if (next == (Image *) NULL)"
    },
    {
        "line": 533,
        "fullcodeline": "pages=1;"
    },
    {
        "line": 558,
        "fullcodeline": "datum[i]=(unsigned char) c;"
    },
    {
        "line": 578,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\");"
    },
    {
        "line": 582,
        "fullcodeline": "p=GetStringInfoDatum(profile);"
    },
    {
        "line": 585,
        "fullcodeline": "(void) SetImageProfile(image,\"8bim\",profile);"
    },
    {
        "line": 586,
        "fullcodeline": "profile=DestroyStringInfo(profile);"
    },
    {
        "line": 602,
        "fullcodeline": "SetStringInfoLength(profile,(size_t) (i+1));"
    },
    {
        "line": 603,
        "fullcodeline": "c=ReadBlobByte(image);"
    },
    {
        "line": 604,
        "fullcodeline": "GetStringInfoDatum(profile)[i]=(unsigned char) c;"
    },
    {
        "line": 605,
        "fullcodeline": "*p++=(char) c;"
    },
    {
        "line": 609,
        "fullcodeline": "*p='\\0';"
    },
    {
        "line": 610,
        "fullcodeline": "p=command;"
    },
    {
        "line": 636,
        "fullcodeline": "PrependImageToList(&postscript_image,clone_image);"
    },
    {
        "line": 238,
        "fullcodeline": "(GlobExpression(command,\"*Magenta*\",MagickTrue) != MagickFalse) ||"
    },
    {
        "line": 553,
        "fullcodeline": "if (i >= (ssize_t) GetStringInfoLength(profile))"
    },
    {
        "line": 583,
        "fullcodeline": "for (i=0; i < (ssize_t) length; i++)"
    },
    {
        "line": 584,
        "fullcodeline": "*p++=(unsigned char) ProfileInteger(image,hex_digits);"
    },
    {
        "line": 606,
        "fullcodeline": "if ((strchr(\"\\n\\r%\",c) == (char *) NULL) &&"
    },
    {
        "line": 611,
        "fullcodeline": "if (LocaleNCompare(EndXMPPacket,command,strlen(EndXMPPacket)) == 0)"
    },
    {
        "line": 555,
        "fullcodeline": "SetStringInfoLength(profile,(size_t) i << 1);"
    },
    {
        "line": 556,
        "fullcodeline": "datum=GetStringInfoDatum(profile);"
    },
    {
        "line": 607,
        "fullcodeline": "((size_t) (p-command) < (MaxTextExtent-1)))"
    }
]