[
    {
        "line": 10,
        "fullcodeline": "int\t\tunload = (action == DOBUF_UNLOAD || action == DOBUF_DEL"
    },
    {
        "line": 362,
        "fullcodeline": "set_curbuf(buf, action);"
    },
    {
        "line": 19,
        "fullcodeline": "if (start == DOBUF_MOD)\t    // find next modified buffer"
    },
    {
        "line": 78,
        "fullcodeline": "if (buf == NULL)\t    // could not find it"
    },
    {
        "line": 96,
        "fullcodeline": "if ((action == DOBUF_GOTO || action == DOBUF_SPLIT)"
    },
    {
        "line": 292,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 302,
        "fullcodeline": "if (action == DOBUF_SPLIT)\t    // split window first"
    },
    {
        "line": 317,
        "fullcodeline": "if (buf == curbuf)"
    },
    {
        "line": 321,
        "fullcodeline": "if (action == DOBUF_GOTO && !can_abandon(curbuf, (flags & DOBUF_FORCEIT)))"
    },
    {
        "line": 364,
        "fullcodeline": "if (action == DOBUF_SPLIT)"
    },
    {
        "line": 11,
        "fullcodeline": "|| action == DOBUF_WIPE || action == DOBUF_WIPE_REUSE);"
    },
    {
        "line": 15,
        "fullcodeline": "case DOBUF_FIRST:   buf = firstbuf; break;"
    },
    {
        "line": 16,
        "fullcodeline": "case DOBUF_LAST:    buf = lastbuf;  break;"
    },
    {
        "line": 17,
        "fullcodeline": "default:\t    buf = curbuf;   break;"
    },
    {
        "line": 97,
        "fullcodeline": "&& (buf->b_flags & BF_DUMMY))"
    },
    {
        "line": 100,
        "fullcodeline": "semsg(_(e_buffer_nr_does_not_exist), count);"
    },
    {
        "line": 119,
        "fullcodeline": "set_bufref(&bufref, buf);"
    },
    {
        "line": 202,
        "fullcodeline": "buf = NULL;\t// selected buffer"
    },
    {
        "line": 203,
        "fullcodeline": "bp = NULL;\t// used when no loaded buffer found"
    },
    {
        "line": 365,
        "fullcodeline": "RESET_BINDING(curwin);\t// reset 'scrollbind' and 'cursorbind'"
    },
    {
        "line": 21,
        "fullcodeline": "while (count-- > 0)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!bufIsChanged(buf))"
    },
    {
        "line": 80,
        "fullcodeline": "if (start == DOBUF_FIRST)"
    },
    {
        "line": 116,
        "fullcodeline": "if (!can_unload_buffer(buf))"
    },
    {
        "line": 123,
        "fullcodeline": "if (action != DOBUF_WIPE && action != DOBUF_WIPE_REUSE"
    },
    {
        "line": 127,
        "fullcodeline": "if ((flags & DOBUF_FORCEIT) == 0 && bufIsChanged(buf))"
    },
    {
        "line": 161,
        "fullcodeline": "if (buf == curbuf && VIsual_active)"
    },
    {
        "line": 167,
        "fullcodeline": "if (bp->b_p_bl && bp != buf)"
    },
    {
        "line": 169,
        "fullcodeline": "if (bp == NULL && buf == curbuf)"
    },
    {
        "line": 175,
        "fullcodeline": "while (buf == curbuf"
    },
    {
        "line": 184,
        "fullcodeline": "if (buf != curbuf)"
    },
    {
        "line": 204,
        "fullcodeline": "if (au_new_curbuf.br_buf != NULL && bufref_valid(&au_new_curbuf))"
    },
    {
        "line": 244,
        "fullcodeline": "if (buf == NULL)\t// No previous buffer, Try 2'nd approach"
    },
    {
        "line": 273,
        "fullcodeline": "if (buf == NULL)\t// No loaded buffer, use unloaded one"
    },
    {
        "line": 275,
        "fullcodeline": "if (buf == NULL)\t// No loaded buffer, find listed one"
    },
    {
        "line": 281,
        "fullcodeline": "if (buf == NULL)\t// Still no buffer, just take one"
    },
    {
        "line": 296,
        "fullcodeline": "return empty_curbuf(FALSE, (flags & DOBUF_FORCEIT), action);"
    },
    {
        "line": 306,
        "fullcodeline": "if ((swb_flags & SWB_USEOPEN) && buf_jump_open_win(buf))"
    },
    {
        "line": 310,
        "fullcodeline": "if ((swb_flags & SWB_USETAB) && buf_jump_open_tab(buf))"
    },
    {
        "line": 312,
        "fullcodeline": "if (win_split(0, 0) == FAIL)"
    },
    {
        "line": 356,
        "fullcodeline": "no_write_message();"
    },
    {
        "line": 33,
        "fullcodeline": "emsg(_(e_no_modified_buffer_found));"
    },
    {
        "line": 37,
        "fullcodeline": "else if (start == DOBUF_FIRST && count) // find specified buffer number"
    },
    {
        "line": 124,
        "fullcodeline": "&& buf->b_ml.ml_mfp == NULL && !buf->b_p_bl)"
    },
    {
        "line": 162,
        "fullcodeline": "end_visual_mode();"
    },
    {
        "line": 177,
        "fullcodeline": "&& (!ONE_WINDOW || first_tabpage->tp_next != NULL))"
    },
    {
        "line": 186,
        "fullcodeline": "close_windows(buf, FALSE);"
    },
    {
        "line": 205,
        "fullcodeline": "buf = au_new_curbuf.br_buf;"
    },
    {
        "line": 246,
        "fullcodeline": "forward = TRUE;"
    },
    {
        "line": 247,
        "fullcodeline": "buf = curbuf->b_next;"
    },
    {
        "line": 274,
        "fullcodeline": "buf = bp;"
    },
    {
        "line": 29,
        "fullcodeline": "while (buf != curbuf && !bufIsChanged(buf));"
    },
    {
        "line": 83,
        "fullcodeline": "if (!unload)"
    },
    {
        "line": 155,
        "fullcodeline": "no_write_message_buf(buf);"
    },
    {
        "line": 170,
        "fullcodeline": "return empty_curbuf(TRUE, (flags & DOBUF_FORCEIT), action);"
    },
    {
        "line": 176,
        "fullcodeline": "&& !(curwin->w_closing || curwin->w_buffer->b_locked > 0)"
    },
    {
        "line": 179,
        "fullcodeline": "if (win_close(curwin, FALSE) == FAIL)"
    },
    {
        "line": 187,
        "fullcodeline": "if (buf != curbuf && bufref_valid(&bufref) && buf->b_nwindows <= 0)"
    },
    {
        "line": 278,
        "fullcodeline": "if (buf->b_p_bl && buf != curbuf && !bt_quickfix(buf))"
    },
    {
        "line": 283,
        "fullcodeline": "if (curbuf->b_next != NULL)"
    },
    {
        "line": 287,
        "fullcodeline": "if (bt_quickfix(buf))"
    },
    {
        "line": 25,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 39,
        "fullcodeline": "while (buf != NULL && buf->b_fnum != count)"
    },
    {
        "line": 40,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 44,
        "fullcodeline": "bp = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "semsg(_(e_buffer_nr_does_not_exist), count);"
    },
    {
        "line": 86,
        "fullcodeline": "else if (dir == FORWARD)"
    },
    {
        "line": 188,
        "fullcodeline": "close_buffer(NULL, buf, action, FALSE, FALSE);"
    },
    {
        "line": 206,
        "fullcodeline": "else if (curwin->w_jumplistlen > 0)"
    },
    {
        "line": 284,
        "fullcodeline": "buf = curbuf->b_next;"
    },
    {
        "line": 288,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 45,
        "fullcodeline": "while (count > 0 || (!unload && !buf->b_p_bl && bp != buf))"
    },
    {
        "line": 87,
        "fullcodeline": "emsg(_(e_cannot_go_beyond_last_buffer));"
    },
    {
        "line": 210,
        "fullcodeline": "jumpidx = curwin->w_jumplistidx - 1;"
    },
    {
        "line": 214,
        "fullcodeline": "forward = jumpidx;"
    },
    {
        "line": 250,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 259,
        "fullcodeline": "if (buf->b_help == curbuf->b_help && buf->b_p_bl"
    },
    {
        "line": 286,
        "fullcodeline": "buf = curbuf->b_prev;"
    },
    {
        "line": 27,
        "fullcodeline": "buf = firstbuf;"
    },
    {
        "line": 89,
        "fullcodeline": "emsg(_(e_cannot_go_before_first_buffer));"
    },
    {
        "line": 211,
        "fullcodeline": "if (jumpidx < 0)"
    },
    {
        "line": 215,
        "fullcodeline": "while (jumpidx != curwin->w_jumplistidx)"
    },
    {
        "line": 254,
        "fullcodeline": "buf = curbuf->b_prev;"
    },
    {
        "line": 255,
        "fullcodeline": "forward = FALSE;"
    },
    {
        "line": 260,
        "fullcodeline": "&& !bt_quickfix(buf))"
    },
    {
        "line": 268,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 49,
        "fullcodeline": "if (bp == NULL)"
    },
    {
        "line": 51,
        "fullcodeline": "if (dir == FORWARD)"
    },
    {
        "line": 64,
        "fullcodeline": "if (unload || buf->b_p_bl)"
    },
    {
        "line": 69,
        "fullcodeline": "if (bp == buf)"
    },
    {
        "line": 212,
        "fullcodeline": "jumpidx = curwin->w_jumplistlen - 1;"
    },
    {
        "line": 217,
        "fullcodeline": "buf = buflist_findnr(curwin->w_jumplist[jumpidx].fmark.fnum);"
    },
    {
        "line": 252,
        "fullcodeline": "if (!forward)\t// tried both directions"
    },
    {
        "line": 262,
        "fullcodeline": "if (buf->b_ml.ml_mfp != NULL)   // found loaded buffer"
    },
    {
        "line": 264,
        "fullcodeline": "if (bp == NULL)\t// remember unloaded buf for later"
    },
    {
        "line": 270,
        "fullcodeline": "buf = buf->b_prev;"
    },
    {
        "line": 50,
        "fullcodeline": "bp = buf;"
    },
    {
        "line": 53,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 66,
        "fullcodeline": "--count;"
    },
    {
        "line": 67,
        "fullcodeline": "bp = NULL;\t// use this buffer as new starting point"
    },
    {
        "line": 72,
        "fullcodeline": "emsg(_(e_there_is_no_listed_buffer));"
    },
    {
        "line": 218,
        "fullcodeline": "if (buf != NULL)"
    },
    {
        "line": 232,
        "fullcodeline": "if (buf != NULL)   // found a valid buffer: stop searching"
    },
    {
        "line": 235,
        "fullcodeline": "if (!jumpidx && curwin->w_jumplistidx == curwin->w_jumplistlen)"
    },
    {
        "line": 237,
        "fullcodeline": "if (--jumpidx < 0)"
    },
    {
        "line": 239,
        "fullcodeline": "if (jumpidx == forward)\t\t// List exhausted for sure"
    },
    {
        "line": 265,
        "fullcodeline": "bp = buf;"
    },
    {
        "line": 54,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "buf = buf->b_prev;"
    },
    {
        "line": 238,
        "fullcodeline": "jumpidx = curwin->w_jumplistlen - 1;"
    },
    {
        "line": 55,
        "fullcodeline": "buf = firstbuf;"
    },
    {
        "line": 60,
        "fullcodeline": "if (buf == NULL)"
    },
    {
        "line": 222,
        "fullcodeline": "if (buf == curbuf || !buf->b_p_bl || bt_quickfix(buf))"
    },
    {
        "line": 61,
        "fullcodeline": "buf = lastbuf;"
    },
    {
        "line": 223,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 224,
        "fullcodeline": "else if (buf->b_ml.ml_mfp == NULL)"
    },
    {
        "line": 229,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 227,
        "fullcodeline": "if (bp == NULL)"
    },
    {
        "line": 228,
        "fullcodeline": "bp = buf;"
    }
]