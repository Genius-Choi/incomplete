[
    {
        "line": 10,
        "fullcodeline": "if (!url->SchemeIs(content::kBraveUIScheme) &&"
    },
    {
        "line": 27,
        "fullcodeline": "if (url->host() == kAdblockHost) {"
    },
    {
        "line": 11,
        "fullcodeline": "!url->SchemeIs(content::kChromeUIScheme)) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (url->host() == chrome::kChromeUISyncHost) {"
    },
    {
        "line": 18,
        "fullcodeline": "replacements.SetSchemeStr(content::kChromeUIScheme);"
    },
    {
        "line": 19,
        "fullcodeline": "replacements.SetHostStr(chrome::kChromeUISettingsHost);"
    },
    {
        "line": 20,
        "fullcodeline": "replacements.SetPathStr(kBraveSyncPath);"
    },
    {
        "line": 29,
        "fullcodeline": "replacements.SetSchemeStr(content::kChromeUIScheme);"
    },
    {
        "line": 30,
        "fullcodeline": "replacements.SetHostStr(chrome::kChromeUISettingsHost);"
    },
    {
        "line": 31,
        "fullcodeline": "replacements.SetPathStr(kContentFiltersPath);"
    },
    {
        "line": 38,
        "fullcodeline": "if (url->host() == chrome::kChromeUIWelcomeHost) {"
    },
    {
        "line": 21,
        "fullcodeline": "*url = url->ReplaceComponents(replacements);"
    },
    {
        "line": 32,
        "fullcodeline": "*url = url->ReplaceComponents(replacements);"
    },
    {
        "line": 39,
        "fullcodeline": "*url = GURL(chrome::kChromeUIWelcomeURL);"
    }
]