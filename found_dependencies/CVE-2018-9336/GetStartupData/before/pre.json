[
    {
        "line": 4,
        "fullcodeline": "BOOL ret = FALSE;"
    },
    {
        "line": 5,
        "fullcodeline": "WCHAR *data = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "bytes = PeekNamedPipeAsync(pipe, 1, &exit_event);"
    },
    {
        "line": 16,
        "fullcodeline": "size = bytes / sizeof(*data);"
    },
    {
        "line": 24,
        "fullcodeline": "data = malloc(bytes);"
    },
    {
        "line": 32,
        "fullcodeline": "read = ReadPipeAsync(pipe, data, bytes, 1, &exit_event);"
    },
    {
        "line": 47,
        "fullcodeline": "sud->directory = data;"
    },
    {
        "line": 48,
        "fullcodeline": "len = wcslen(sud->directory) + 1;"
    },
    {
        "line": 49,
        "fullcodeline": "size -= len;"
    },
    {
        "line": 57,
        "fullcodeline": "sud->options = sud->directory + len;"
    },
    {
        "line": 58,
        "fullcodeline": "len = wcslen(sud->options) + 1;"
    },
    {
        "line": 59,
        "fullcodeline": "size -= len;"
    },
    {
        "line": 67,
        "fullcodeline": "sud->std_input = sud->options + len;"
    },
    {
        "line": 68,
        "fullcodeline": "data = NULL; /* don't free data */"
    },
    {
        "line": 69,
        "fullcodeline": "ret = TRUE;"
    },
    {
        "line": 72,
        "fullcodeline": "free(data);"
    },
    {
        "line": 9,
        "fullcodeline": "if (bytes == 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if (size == 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (data == NULL)"
    },
    {
        "line": 33,
        "fullcodeline": "if (bytes != read)"
    },
    {
        "line": 40,
        "fullcodeline": "if (data[size - 1] != 0)"
    },
    {
        "line": 50,
        "fullcodeline": "if (size <= 0)"
    },
    {
        "line": 60,
        "fullcodeline": "if (size <= 0)"
    },
    {
        "line": 11,
        "fullcodeline": "MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));"
    },
    {
        "line": 12,
        "fullcodeline": "ReturnLastError(pipe, L\"PeekNamedPipeAsync\");"
    },
    {
        "line": 19,
        "fullcodeline": "MsgToEventLog(M_SYSERR, TEXT(\"malformed startup data: 1 byte received\"));"
    },
    {
        "line": 20,
        "fullcodeline": "ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);"
    },
    {
        "line": 27,
        "fullcodeline": "MsgToEventLog(M_SYSERR, TEXT(\"malloc failed\"));"
    },
    {
        "line": 28,
        "fullcodeline": "ReturnLastError(pipe, L\"malloc\");"
    },
    {
        "line": 35,
        "fullcodeline": "MsgToEventLog(M_SYSERR, TEXT(\"ReadPipeAsync failed\"));"
    },
    {
        "line": 36,
        "fullcodeline": "ReturnLastError(pipe, L\"ReadPipeAsync\");"
    },
    {
        "line": 42,
        "fullcodeline": "MsgToEventLog(M_ERR, TEXT(\"Startup data is not NULL terminated\"));"
    },
    {
        "line": 43,
        "fullcodeline": "ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);"
    },
    {
        "line": 52,
        "fullcodeline": "MsgToEventLog(M_ERR, TEXT(\"Startup data ends at working directory\"));"
    },
    {
        "line": 53,
        "fullcodeline": "ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);"
    },
    {
        "line": 62,
        "fullcodeline": "MsgToEventLog(M_ERR, TEXT(\"Startup data ends at command line options\"));"
    },
    {
        "line": 63,
        "fullcodeline": "ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);"
    }
]