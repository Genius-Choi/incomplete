[
    {
        "line": 6,
        "fullcodeline": "TF_RETURN_IF_ERROR(TensorShape::BuildTensorShape("
    },
    {
        "line": 8,
        "fullcodeline": "CheckRankAtLeast2(ctx, shape);"
    },
    {
        "line": 9,
        "fullcodeline": "std::vector<int64_t> order(shape.dims());"
    },
    {
        "line": 10,
        "fullcodeline": "std::iota(order.begin(), order.end(), 0);"
    },
    {
        "line": 12,
        "fullcodeline": "Status status = sparse::SparseTensor::Create("
    },
    {
        "line": 15,
        "fullcodeline": "if (!validate_indices || !status.ok()) return status;"
    },
    {
        "line": 16,
        "fullcodeline": "return tensor->IndicesValid();"
    },
    {
        "line": 7,
        "fullcodeline": "ctx->input(base_index + 2).vec<int64_t>(), &shape));"
    },
    {
        "line": 13,
        "fullcodeline": "ctx->input(base_index), ctx->input(base_index + 1), shape, order, tensor);"
    }
]