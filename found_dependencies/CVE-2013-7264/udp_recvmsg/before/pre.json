[
    {
        "line": 4,
        "fullcodeline": "struct inet_sock *inet = inet_sk(sk);"
    },
    {
        "line": 5,
        "fullcodeline": "struct sockaddr_in *sin = (struct sockaddr_in *)msg->msg_name;"
    },
    {
        "line": 8,
        "fullcodeline": "int peeked, off = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int is_udplite = IS_UDPLITE(sk);"
    },
    {
        "line": 23,
        "fullcodeline": "skb = __skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),"
    },
    {
        "line": 28,
        "fullcodeline": "ulen = skb->len - sizeof(struct udphdr);"
    },
    {
        "line": 29,
        "fullcodeline": "copied = len;"
    },
    {
        "line": 72,
        "fullcodeline": "sock_recv_ts_and_drops(msg, sk, skb);"
    },
    {
        "line": 84,
        "fullcodeline": "err = copied;"
    },
    {
        "line": 94,
        "fullcodeline": "slow = lock_sock_fast(sk);"
    },
    {
        "line": 99,
        "fullcodeline": "unlock_sock_fast(sk, slow);"
    },
    {
        "line": 105,
        "fullcodeline": "msg->msg_flags &= ~MSG_TRUNC;"
    },
    {
        "line": 19,
        "fullcodeline": "if (flags & MSG_ERRQUEUE)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 30,
        "fullcodeline": "if (copied > ulen)"
    },
    {
        "line": 46,
        "fullcodeline": "if (skb_csum_unnecessary(skb))"
    },
    {
        "line": 58,
        "fullcodeline": "if (unlikely(err)) {"
    },
    {
        "line": 17,
        "fullcodeline": "*addr_len = sizeof(*sin);"
    },
    {
        "line": 31,
        "fullcodeline": "copied = ulen;"
    },
    {
        "line": 41,
        "fullcodeline": "if (copied < ulen || UDP_SKB_CB(skb)->partial_cov) {"
    },
    {
        "line": 47,
        "fullcodeline": "err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),"
    },
    {
        "line": 59,
        "fullcodeline": "trace_kfree_skb(skb, udp_recvmsg);"
    },
    {
        "line": 69,
        "fullcodeline": "UDP_INC_STATS_USER(sock_net(sk),"
    },
    {
        "line": 76,
        "fullcodeline": "sin->sin_family = AF_INET;"
    },
    {
        "line": 82,
        "fullcodeline": "ip_cmsg_recv(msg, skb);"
    },
    {
        "line": 86,
        "fullcodeline": "err = ulen;"
    },
    {
        "line": 95,
        "fullcodeline": "if (!skb_kill_datagram(sk, skb, flags)) {"
    },
    {
        "line": 96,
        "fullcodeline": "UDP_INC_STATS_USER(sock_net(sk), UDP_MIB_CSUMERRORS, is_udplite);"
    },
    {
        "line": 97,
        "fullcodeline": "UDP_INC_STATS_USER(sock_net(sk), UDP_MIB_INERRORS, is_udplite);"
    },
    {
        "line": 20,
        "fullcodeline": "return ip_recv_error(sk, msg, len);"
    },
    {
        "line": 42,
        "fullcodeline": "if (udp_lib_checksum_complete(skb))"
    },
    {
        "line": 50,
        "fullcodeline": "err = skb_copy_and_csum_datagram_iovec(skb,"
    },
    {
        "line": 102,
        "fullcodeline": "return -EAGAIN;"
    },
    {
        "line": 32,
        "fullcodeline": "else if (copied < ulen)"
    },
    {
        "line": 54,
        "fullcodeline": "if (err == -EINVAL)"
    },
    {
        "line": 77,
        "fullcodeline": "sin->sin_port = udp_hdr(skb)->source;"
    },
    {
        "line": 78,
        "fullcodeline": "sin->sin_addr.s_addr = ip_hdr(skb)->saddr;"
    },
    {
        "line": 33,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 62,
        "fullcodeline": "UDP_INC_STATS_USER(sock_net(sk),"
    }
]