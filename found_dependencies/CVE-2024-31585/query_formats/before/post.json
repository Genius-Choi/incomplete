[
    {
        "line": 3,
        "fullcodeline": "AVFilterFormats *formats = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "AVFilterChannelLayouts *layouts = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "static const enum AVSampleFormat sample_fmts[] = { AV_SAMPLE_FMT_FLTP, AV_SAMPLE_FMT_NONE };"
    },
    {
        "line": 8,
        "fullcodeline": "static const enum AVPixelFormat pix_fmts[] = { AV_PIX_FMT_YUV444P, AV_PIX_FMT_YUVJ444P, AV_PIX_FMT_NONE };"
    },
    {
        "line": 12,
        "fullcodeline": "formats = ff_make_format_list(sample_fmts);"
    },
    {
        "line": 16,
        "fullcodeline": "layouts = ff_all_channel_layouts();"
    },
    {
        "line": 20,
        "fullcodeline": "formats = ff_all_samplerates();"
    },
    {
        "line": 25,
        "fullcodeline": "formats = ff_make_format_list(pix_fmts);"
    },
    {
        "line": 13,
        "fullcodeline": "if ((ret = ff_formats_ref(formats, &inlink->outcfg.formats)) < 0)"
    },
    {
        "line": 17,
        "fullcodeline": "if ((ret = ff_channel_layouts_ref(layouts, &inlink->outcfg.channel_layouts)) < 0)"
    },
    {
        "line": 21,
        "fullcodeline": "if ((ret = ff_formats_ref(formats, &inlink->outcfg.samplerates)) < 0)"
    },
    {
        "line": 26,
        "fullcodeline": "if ((ret = ff_formats_ref(formats, &outlink->incfg.formats)) < 0)"
    }
]