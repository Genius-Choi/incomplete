[
    {
        "line": 6,
        "fullcodeline": "dp = (const struct ip6_frag *)bp;"
    },
    {
        "line": 7,
        "fullcodeline": "ip6 = (const struct ip6_hdr *)bp2;"
    },
    {
        "line": 9,
        "fullcodeline": "ND_TCHECK(dp->ip6f_offlg);"
    },
    {
        "line": 25,
        "fullcodeline": "if ((EXTRACT_16BITS(&dp->ip6f_offlg) & IP6F_OFF_MASK) != 0)"
    },
    {
        "line": 12,
        "fullcodeline": "ND_PRINT((ndo, \"frag (0x%08x:%d|%ld)\","
    },
    {
        "line": 18,
        "fullcodeline": "ND_PRINT((ndo, \"frag (%d|%ld)\","
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 29,
        "fullcodeline": "ND_PRINT((ndo, \" \"));"
    },
    {
        "line": 13,
        "fullcodeline": "EXTRACT_32BITS(&dp->ip6f_ident),"
    },
    {
        "line": 14,
        "fullcodeline": "EXTRACT_16BITS(&dp->ip6f_offlg) & IP6F_OFF_MASK,"
    },
    {
        "line": 15,
        "fullcodeline": "sizeof(struct ip6_hdr) + EXTRACT_16BITS(&ip6->ip6_plen) -"
    },
    {
        "line": 19,
        "fullcodeline": "EXTRACT_16BITS(&dp->ip6f_offlg) & IP6F_OFF_MASK,"
    },
    {
        "line": 20,
        "fullcodeline": "sizeof(struct ip6_hdr) + EXTRACT_16BITS(&ip6->ip6_plen) -"
    },
    {
        "line": 16,
        "fullcodeline": "(long)(bp - bp2) - sizeof(struct ip6_frag)));"
    },
    {
        "line": 21,
        "fullcodeline": "(long)(bp - bp2) - sizeof(struct ip6_frag)));"
    }
]