[
    {
        "line": 7,
        "fullcodeline": "const auto& host_memory_args = kernel_def->host_memory_arg();"
    },
    {
        "line": 8,
        "fullcodeline": "const OpDef& op_def = OpRegistry::Global()->LookUp(op.Name())->op_def;"
    },
    {
        "line": 9,
        "fullcodeline": "const int arg_id = OpPortIdToArgId(*node_def, op_def.input_arg(), port_id);"
    },
    {
        "line": 4,
        "fullcodeline": "if (op.is_function()) return false;"
    },
    {
        "line": 11,
        "fullcodeline": "if (arg_id < 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "return std::find(host_memory_args.begin(), host_memory_args.end(),"
    },
    {
        "line": 6,
        "fullcodeline": "if (kernel_def == nullptr || op_device == nullptr) return false;"
    },
    {
        "line": 15,
        "fullcodeline": "op_def.input_arg(arg_id).name()) != host_memory_args.end();"
    }
]