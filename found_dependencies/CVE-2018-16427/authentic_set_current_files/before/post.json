[
    {
        "line": 4,
        "fullcodeline": "struct sc_context *ctx = card->ctx;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sc_file *file = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "LOG_FUNC_CALLED(ctx);"
    },
    {
        "line": 63,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_SUCCESS);"
    },
    {
        "line": 27,
        "fullcodeline": "if (file->type == SC_FILE_TYPE_DF)   {"
    },
    {
        "line": 13,
        "fullcodeline": "file = sc_file_new();"
    },
    {
        "line": 19,
        "fullcodeline": "rv = authentic_process_fci(card, file, resp, resplen);"
    },
    {
        "line": 20,
        "fullcodeline": "LOG_TEST_RET(ctx, rv, \"cannot set 'current file': FCI process error\");"
    },
    {
        "line": 24,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED);"
    },
    {
        "line": 30,
        "fullcodeline": "memset(&cur_df_path, 0, sizeof(cur_df_path));"
    },
    {
        "line": 35,
        "fullcodeline": "card->cache.current_df = NULL;"
    },
    {
        "line": 36,
        "fullcodeline": "sc_file_dup(&card->cache.current_df, file);"
    },
    {
        "line": 47,
        "fullcodeline": "card->cache.current_ef = NULL;"
    },
    {
        "line": 49,
        "fullcodeline": "card->cache.valid = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "*file_out = file;"
    },
    {
        "line": 14,
        "fullcodeline": "if (file == NULL)"
    },
    {
        "line": 53,
        "fullcodeline": "card->cache.current_ef = NULL;"
    },
    {
        "line": 54,
        "fullcodeline": "sc_file_dup(&card->cache.current_ef, file);"
    },
    {
        "line": 60,
        "fullcodeline": "sc_file_free(file);"
    },
    {
        "line": 15,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_ERROR_OUT_OF_MEMORY);"
    },
    {
        "line": 33,
        "fullcodeline": "sc_file_free(card->cache.current_df);"
    },
    {
        "line": 39,
        "fullcodeline": "memcpy(card->cache.current_df->path.value + cur_df_path.len,"
    },
    {
        "line": 42,
        "fullcodeline": "memcpy(card->cache.current_df->path.value, cur_df_path.value, cur_df_path.len);"
    },
    {
        "line": 43,
        "fullcodeline": "card->cache.current_df->path.len += cur_df_path.len;"
    }
]