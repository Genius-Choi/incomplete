[
    {
        "line": 4,
        "fullcodeline": "cac_private_data_t * priv = CAC_DATA(card);"
    },
    {
        "line": 5,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "u8 *tl = NULL, *val = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "SC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);"
    },
    {
        "line": 41,
        "fullcodeline": "r = cac_read_file(card, CAC_FILE_TAG, &tl, &tl_len);"
    },
    {
        "line": 46,
        "fullcodeline": "r = cac_read_file(card, CAC_FILE_VALUE, &val, &val_len);"
    },
    {
        "line": 151,
        "fullcodeline": "priv->cached = 1;"
    },
    {
        "line": 152,
        "fullcodeline": "len = MIN(count, priv->cache_buf_len-idx);"
    },
    {
        "line": 153,
        "fullcodeline": "memcpy(buf, &priv->cache_buf[idx], len);"
    },
    {
        "line": 154,
        "fullcodeline": "r = len;"
    },
    {
        "line": 160,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, r);"
    },
    {
        "line": 38,
        "fullcodeline": "if (priv->object_type <= 0)"
    },
    {
        "line": 42,
        "fullcodeline": "if (r < 0)  {"
    },
    {
        "line": 47,
        "fullcodeline": "if (r < 0)"
    },
    {
        "line": 23,
        "fullcodeline": "len = MIN(count, priv->cache_buf_len-idx);"
    },
    {
        "line": 24,
        "fullcodeline": "memcpy(buf, &priv->cache_buf[idx], len);"
    },
    {
        "line": 25,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, len);"
    },
    {
        "line": 32,
        "fullcodeline": "free(priv->cache_buf);"
    },
    {
        "line": 33,
        "fullcodeline": "priv->cache_buf = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "priv->cache_buf_len = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_ERROR_INTERNAL);"
    },
    {
        "line": 52,
        "fullcodeline": "tlv_len = tl_len + val_len;"
    },
    {
        "line": 53,
        "fullcodeline": "priv->cache_buf = malloc(tlv_len);"
    },
    {
        "line": 58,
        "fullcodeline": "priv->cache_buf_len = tlv_len;"
    },
    {
        "line": 89,
        "fullcodeline": "cert_len = 0;"
    },
    {
        "line": 90,
        "fullcodeline": "cert_ptr = NULL;"
    },
    {
        "line": 91,
        "fullcodeline": "cert_type = 0;"
    },
    {
        "line": 145,
        "fullcodeline": "sc_log(card->ctx, \"Unknown object type: %x\", priv->object_type);"
    },
    {
        "line": 146,
        "fullcodeline": "r = SC_ERROR_INTERNAL;"
    },
    {
        "line": 157,
        "fullcodeline": "free(tl);"
    },
    {
        "line": 159,
        "fullcodeline": "free(val);"
    },
    {
        "line": 20,
        "fullcodeline": "if (idx > priv->cache_buf_len) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (priv->cache_buf == NULL) {"
    },
    {
        "line": 61,
        "fullcodeline": "tl_len >= 2 && tlv_len > 0;"
    },
    {
        "line": 62,
        "fullcodeline": "val_len -= len, tlv_len -= len, val_ptr += len, tlv_ptr += len) {"
    },
    {
        "line": 92,
        "fullcodeline": "for (tl_ptr = tl, val_ptr=val; tl_len >= 2;"
    },
    {
        "line": 93,
        "fullcodeline": "val_len -= len, val_ptr += len, tl_len -= tl_head_len) {"
    },
    {
        "line": 115,
        "fullcodeline": "if ((cert_type & 0x3) == 1) {"
    },
    {
        "line": 21,
        "fullcodeline": "SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_ERROR_FILE_END_REACHED);"
    },
    {
        "line": 55,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    },
    {
        "line": 60,
        "fullcodeline": "for (tl_ptr = tl, val_ptr=val, tlv_ptr = priv->cache_buf;"
    },
    {
        "line": 64,
        "fullcodeline": "tl_start = tl_ptr;"
    },
    {
        "line": 67,
        "fullcodeline": "tl_head_len = (tl_ptr - tl_start);"
    },
    {
        "line": 68,
        "fullcodeline": "sc_simpletlv_put_tag(tag, len, tlv_ptr, tlv_len, &tlv_ptr);"
    },
    {
        "line": 69,
        "fullcodeline": "tlv_len -= tl_head_len;"
    },
    {
        "line": 70,
        "fullcodeline": "tl_len -= tl_head_len;"
    },
    {
        "line": 80,
        "fullcodeline": "memcpy(tlv_ptr, val_ptr, len);"
    },
    {
        "line": 94,
        "fullcodeline": "tl_start = tl_ptr;"
    },
    {
        "line": 97,
        "fullcodeline": "tl_head_len = tl_ptr - tl_start;"
    },
    {
        "line": 120,
        "fullcodeline": "sc_log(card->ctx, \"CAC compression not supported, no zlib\");"
    },
    {
        "line": 121,
        "fullcodeline": "r = SC_ERROR_NOT_SUPPORTED;"
    },
    {
        "line": 65,
        "fullcodeline": "if (sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len) != SC_SUCCESS)"
    },
    {
        "line": 73,
        "fullcodeline": "if (val_len < len) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (tlv_len < len) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len) != SC_SUCCESS)"
    },
    {
        "line": 98,
        "fullcodeline": "if (tag == CAC_TAG_CERTIFICATE) {"
    },
    {
        "line": 102,
        "fullcodeline": "if (tag == CAC_TAG_CERTINFO) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (tag == CAC_TAG_MSCUID) {"
    },
    {
        "line": 110,
        "fullcodeline": "if ((val_len < len) || (tl_len < tl_head_len)) {"
    },
    {
        "line": 74,
        "fullcodeline": "len = val_len;"
    },
    {
        "line": 78,
        "fullcodeline": "len = tlv_len;"
    },
    {
        "line": 99,
        "fullcodeline": "cert_len = len;"
    },
    {
        "line": 100,
        "fullcodeline": "cert_ptr = val_ptr;"
    },
    {
        "line": 108,
        "fullcodeline": "sc_log_hex(card->ctx, \"MSCUID\", val_ptr, len);"
    },
    {
        "line": 125,
        "fullcodeline": "} else if (cert_len > 0) {"
    },
    {
        "line": 103,
        "fullcodeline": "if ((len >= 1) && (val_len >=1)) {"
    },
    {
        "line": 126,
        "fullcodeline": "priv->cache_buf = malloc(cert_len);"
    },
    {
        "line": 131,
        "fullcodeline": "priv->cache_buf_len = cert_len;"
    },
    {
        "line": 132,
        "fullcodeline": "memcpy(priv->cache_buf, cert_ptr, cert_len);"
    },
    {
        "line": 127,
        "fullcodeline": "if (priv->cache_buf == NULL) {"
    },
    {
        "line": 134,
        "fullcodeline": "sc_log(card->ctx, \"Can't read zero-length certificate\");"
    },
    {
        "line": 128,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    }
]