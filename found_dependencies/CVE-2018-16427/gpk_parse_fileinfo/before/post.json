[
    {
        "line": 8,
        "fullcodeline": "memset(file, 0, sizeof(*file));"
    },
    {
        "line": 12,
        "fullcodeline": "end = buf + buflen;"
    },
    {
        "line": 79,
        "fullcodeline": "file->magic = SC_FILE_MAGIC;"
    },
    {
        "line": 9,
        "fullcodeline": "for (i = 0; i < SC_MAX_AC_OPS; i++)"
    },
    {
        "line": 10,
        "fullcodeline": "sc_file_add_acl_entry(file, i, SC_AC_UNKNOWN, SC_AC_KEY_REF_NONE);"
    },
    {
        "line": 13,
        "fullcodeline": "for (sp = buf; sp + 2 < end; sp = next) {"
    },
    {
        "line": 14,
        "fullcodeline": "next = sp + 2 + sp[1];"
    },
    {
        "line": 78,
        "fullcodeline": "file->record_count = file->size / file->record_length;"
    },
    {
        "line": 15,
        "fullcodeline": "if (next > end)"
    },
    {
        "line": 17,
        "fullcodeline": "if (sp[0] == 0x84) {"
    },
    {
        "line": 21,
        "fullcodeline": "memset(file->name, 0, sizeof(file->name));"
    },
    {
        "line": 22,
        "fullcodeline": "memcpy(file->name, sp+2, sp[1]);"
    },
    {
        "line": 19,
        "fullcodeline": "if (sp[1] > sizeof(file->name))"
    },
    {
        "line": 24,
        "fullcodeline": "if (sp[0] == 0x85) {"
    },
    {
        "line": 25,
        "fullcodeline": "unsigned int\tac[3], n;"
    },
    {
        "line": 27,
        "fullcodeline": "file->id = (sp[4] << 8) | sp[5];"
    },
    {
        "line": 28,
        "fullcodeline": "file->size = (sp[8] << 8) | sp[9];"
    },
    {
        "line": 33,
        "fullcodeline": "for (n = 0; n < 3; n++)"
    },
    {
        "line": 34,
        "fullcodeline": "ac[n] = (sp[10+2*n] << 8) | sp[11+2*n];"
    },
    {
        "line": 37,
        "fullcodeline": "switch (sp[6] & 7) {"
    },
    {
        "line": 40,
        "fullcodeline": "file->type = SC_FILE_TYPE_WORKING_EF;"
    },
    {
        "line": 41,
        "fullcodeline": "file->ef_structure = sp[6] & 7;"
    },
    {
        "line": 42,
        "fullcodeline": "ac_to_acl(ac[0], file, SC_AC_OP_UPDATE);"
    },
    {
        "line": 43,
        "fullcodeline": "ac_to_acl(ac[1], file, SC_AC_OP_WRITE);"
    },
    {
        "line": 44,
        "fullcodeline": "ac_to_acl(ac[2], file, SC_AC_OP_READ);"
    },
    {
        "line": 47,
        "fullcodeline": "file->type = SC_FILE_TYPE_DF;"
    },
    {
        "line": 51,
        "fullcodeline": "ac_to_acl(ac[0], file, SC_AC_OP_LOCK);"
    },
    {
        "line": 52,
        "fullcodeline": "ac_to_acl(ac[1], file, SC_AC_OP_CREATE);"
    },
    {
        "line": 53,
        "fullcodeline": "sc_file_add_acl_entry(file, SC_AC_OP_SELECT,"
    },
    {
        "line": 55,
        "fullcodeline": "sc_file_add_acl_entry(file, SC_AC_OP_DELETE,"
    },
    {
        "line": 57,
        "fullcodeline": "sc_file_add_acl_entry(file, SC_AC_OP_REHABILITATE,"
    },
    {
        "line": 59,
        "fullcodeline": "sc_file_add_acl_entry(file, SC_AC_OP_INVALIDATE,"
    },
    {
        "line": 61,
        "fullcodeline": "sc_file_add_acl_entry(file, SC_AC_OP_LIST_FILES,"
    },
    {
        "line": 66,
        "fullcodeline": "if (sp[0] == 0x6f) {"
    },
    {
        "line": 70,
        "fullcodeline": "file->type = SC_FILE_TYPE_DF;"
    },
    {
        "line": 71,
        "fullcodeline": "rc = gpk_parse_fci(card, sp + 2, sp[1], file);"
    },
    {
        "line": 72,
        "fullcodeline": "if (rc < 0)"
    }
]