[
    {
        "line": 4,
        "fullcodeline": "struct sc_context *ctx = card->ctx;"
    },
    {
        "line": 8,
        "fullcodeline": "const unsigned char *tag = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned char ops_DF[8] = {"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned char ops_EF[8] = {"
    },
    {
        "line": 16,
        "fullcodeline": "LOG_FUNC_CALLED(ctx);"
    },
    {
        "line": 18,
        "fullcodeline": "tag = sc_asn1_find_tag(card->ctx,  buf, buflen, 0x6F, &taglen);"
    },
    {
        "line": 25,
        "fullcodeline": "tag = sc_asn1_find_tag(card->ctx,  buf, buflen, 0x62, &taglen);"
    },
    {
        "line": 32,
        "fullcodeline": "rv = iso_ops->process_fci(card, file, buf, buflen);"
    },
    {
        "line": 33,
        "fullcodeline": "LOG_TEST_RET(ctx, rv, \"ISO parse FCI failed\");"
    },
    {
        "line": 46,
        "fullcodeline": "sc_log_hex(ctx, \"ACL data\", file->sec_attr, file->sec_attr_len);"
    },
    {
        "line": 68,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "if (tag != NULL) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (tag != NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!file->sec_attr_len)   {"
    },
    {
        "line": 47,
        "fullcodeline": "for (ii = 0; ii < file->sec_attr_len / 2 && ii < sizeof ops_DF; ii++)  {"
    },
    {
        "line": 21,
        "fullcodeline": "buf = tag;"
    },
    {
        "line": 22,
        "fullcodeline": "buflen = taglen;"
    },
    {
        "line": 28,
        "fullcodeline": "buf = tag;"
    },
    {
        "line": 29,
        "fullcodeline": "buflen = taglen;"
    },
    {
        "line": 36,
        "fullcodeline": "sc_log_hex(ctx, \"ACLs not found in data\", buf, buflen);"
    },
    {
        "line": 37,
        "fullcodeline": "sc_log(ctx, \"Path:%s; Type:%X; PathType:%X\", sc_print_path(&file->path), file->type, file->path.type);"
    },
    {
        "line": 48,
        "fullcodeline": "unsigned char op = file->type == SC_FILE_TYPE_DF ? ops_DF[ii] : ops_EF[ii];"
    },
    {
        "line": 51,
        "fullcodeline": "unsigned sc = acl * 0x100 + cred_id;"
    },
    {
        "line": 53,
        "fullcodeline": "sc_log(ctx, \"ACL(%i) op 0x%X, acl %X:%X\", ii, op, acl, cred_id);"
    },
    {
        "line": 38,
        "fullcodeline": "if (file->path.type == SC_PATH_TYPE_DF_NAME || file->type == SC_FILE_TYPE_DF)   {"
    },
    {
        "line": 54,
        "fullcodeline": "if (op == 0xFF)"
    },
    {
        "line": 39,
        "fullcodeline": "file->type = SC_FILE_TYPE_DF;"
    },
    {
        "line": 49,
        "fullcodeline": "unsigned char acl = *(file->sec_attr + ii*2);"
    },
    {
        "line": 50,
        "fullcodeline": "unsigned char cred_id = *(file->sec_attr + ii*2 + 1);"
    },
    {
        "line": 42,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_OBJECT_NOT_FOUND, \"ACLs tag missing\");"
    },
    {
        "line": 56,
        "fullcodeline": "else if (!acl && !cred_id)"
    },
    {
        "line": 57,
        "fullcodeline": "sc_file_add_acl_entry(file, op, SC_AC_NONE, 0);"
    },
    {
        "line": 58,
        "fullcodeline": "else if (acl == 0xFF)"
    },
    {
        "line": 59,
        "fullcodeline": "sc_file_add_acl_entry(file, op, SC_AC_NEVER, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "else if (acl & AUTHENTIC_AC_SM_MASK)"
    },
    {
        "line": 61,
        "fullcodeline": "sc_file_add_acl_entry(file, op, SC_AC_SCB, sc);"
    },
    {
        "line": 63,
        "fullcodeline": "sc_file_add_acl_entry(file, op, SC_AC_CHV, cred_id);"
    },
    {
        "line": 65,
        "fullcodeline": "sc_file_add_acl_entry(file, op, SC_AC_NEVER, 0);"
    }
]