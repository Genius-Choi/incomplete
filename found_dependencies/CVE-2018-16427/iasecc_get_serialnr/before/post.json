[
    {
        "line": 3,
        "fullcodeline": "struct sc_context *ctx = card->ctx;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned char rbuf[0xC0];"
    },
    {
        "line": 10,
        "fullcodeline": "LOG_FUNC_CALLED(ctx);"
    },
    {
        "line": 14,
        "fullcodeline": "memset(&card->serialnr, 0, sizeof(card->serialnr));"
    },
    {
        "line": 16,
        "fullcodeline": "sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xB0, 0x80 | IASECC_SFI_EF_SN, 0);"
    },
    {
        "line": 18,
        "fullcodeline": "apdu.resp = rbuf;"
    },
    {
        "line": 21,
        "fullcodeline": "rv = sc_transmit_apdu(card, &apdu);"
    },
    {
        "line": 22,
        "fullcodeline": "LOG_TEST_RET(ctx, rv, \"APDU transmit failed\");"
    },
    {
        "line": 23,
        "fullcodeline": "rv = sc_check_sw(card, apdu.sw1, apdu.sw2);"
    },
    {
        "line": 24,
        "fullcodeline": "LOG_TEST_RET(ctx, rv, \"Get 'serial number' data failed\");"
    },
    {
        "line": 29,
        "fullcodeline": "iin->mii = (rbuf[2] >> 4) & 0x0F;"
    },
    {
        "line": 31,
        "fullcodeline": "iin->country = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "iin->issuer_id = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "offs = rbuf[1] > 8 ? rbuf[1] - 8 : 0;"
    },
    {
        "line": 71,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, SC_SUCCESS);"
    },
    {
        "line": 26,
        "fullcodeline": "if (rbuf[0] != ISO7812_PAN_SN_TAG)"
    },
    {
        "line": 32,
        "fullcodeline": "for (ii=5; ii<8; ii++)   {"
    },
    {
        "line": 38,
        "fullcodeline": "for (ii=8; ii<10; ii++)   {"
    },
    {
        "line": 44,
        "fullcodeline": "if (card->type == SC_CARD_TYPE_IASECC_SAGEM)   {"
    },
    {
        "line": 27,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"serial number parse error\");"
    },
    {
        "line": 33,
        "fullcodeline": "iin->country *= 10;"
    },
    {
        "line": 34,
        "fullcodeline": "iin->country += (rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4)) & 0x0F;"
    },
    {
        "line": 39,
        "fullcodeline": "iin->issuer_id *= 10;"
    },
    {
        "line": 40,
        "fullcodeline": "iin->issuer_id += (rbuf[ii/2] >> (ii & 0x01 ? 0 : 4)) & 0x0F;"
    },
    {
        "line": 50,
        "fullcodeline": "card->serialnr.len = ii;"
    },
    {
        "line": 59,
        "fullcodeline": "char txt[0x200];"
    },
    {
        "line": 64,
        "fullcodeline": "sc_log(ctx, \"serial number '%s'; mii %i; country %i; issuer_id %li\", txt, iin->mii, iin->country, iin->issuer_id);"
    },
    {
        "line": 69,
        "fullcodeline": "memcpy(serial, &card->serialnr, sizeof(*serial));"
    },
    {
        "line": 47,
        "fullcodeline": "for (ii=0; ii < rbuf[1] - offs; ii++)"
    },
    {
        "line": 48,
        "fullcodeline": "*(card->serialnr.value + ii) = ((rbuf[ii + offs + 1] & 0x0F) << 4)"
    },
    {
        "line": 55,
        "fullcodeline": "card->serialnr.len = ii;"
    },
    {
        "line": 61,
        "fullcodeline": "for (ii=0;ii<card->serialnr.len;ii++)"
    },
    {
        "line": 62,
        "fullcodeline": "sprintf(txt + ii*2, \"%02X\", *(card->serialnr.value + ii));"
    },
    {
        "line": 53,
        "fullcodeline": "for (ii=0; ii < rbuf[1] - offs; ii++)"
    },
    {
        "line": 49,
        "fullcodeline": "+ ((rbuf[ii + offs + 2] & 0xF0) >> 4) ;"
    },
    {
        "line": 54,
        "fullcodeline": "*(card->serialnr.value + ii) = rbuf[ii + offs + 2];"
    }
]