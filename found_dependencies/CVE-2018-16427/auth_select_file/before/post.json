[
    {
        "line": 5,
        "fullcodeline": "struct sc_file *tmp_file = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "LOG_FUNC_CALLED(card->ctx);"
    },
    {
        "line": 10,
        "fullcodeline": "assert(card != NULL && in_path != NULL);"
    },
    {
        "line": 12,
        "fullcodeline": "memcpy(&path, in_path, sizeof(struct sc_path));"
    },
    {
        "line": 14,
        "fullcodeline": "sc_log(card->ctx, \"in_path; type=%d, path=%s, out %p\","
    },
    {
        "line": 16,
        "fullcodeline": "sc_log(card->ctx, \"current path; type=%d, path=%s\","
    },
    {
        "line": 113,
        "fullcodeline": "LOG_FUNC_RETURN(card->ctx, 0);"
    },
    {
        "line": 15,
        "fullcodeline": "in_path->type, sc_print_path(in_path), file_out);"
    },
    {
        "line": 22,
        "fullcodeline": "if (path.type == SC_PATH_TYPE_PARENT || path.type == SC_PATH_TYPE_FILE_ID)   {"
    },
    {
        "line": 19,
        "fullcodeline": "sc_log(card->ctx, \"current file; type=%d, path=%s\","
    },
    {
        "line": 23,
        "fullcodeline": "sc_file_free(auth_current_ef);"
    },
    {
        "line": 24,
        "fullcodeline": "auth_current_ef = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "rv = iso_ops->select_file(card, &path, &tmp_file);"
    },
    {
        "line": 27,
        "fullcodeline": "LOG_TEST_RET(card->ctx, rv, \"select file failed\");"
    },
    {
        "line": 56,
        "fullcodeline": "sc_file_free(tmp_file);"
    },
    {
        "line": 28,
        "fullcodeline": "if (!tmp_file)"
    },
    {
        "line": 31,
        "fullcodeline": "if (path.type == SC_PATH_TYPE_PARENT)   {"
    },
    {
        "line": 32,
        "fullcodeline": "memcpy(&tmp_file->path, &auth_current_df->path, sizeof(struct sc_path));"
    },
    {
        "line": 36,
        "fullcodeline": "sc_file_free(auth_current_df);"
    },
    {
        "line": 37,
        "fullcodeline": "sc_file_dup(&auth_current_df, tmp_file);"
    },
    {
        "line": 54,
        "fullcodeline": "sc_file_dup(file_out, tmp_file);"
    },
    {
        "line": 58,
        "fullcodeline": "else if (path.type == SC_PATH_TYPE_DF_NAME)   {"
    },
    {
        "line": 33,
        "fullcodeline": "if (tmp_file->path.len > 2)"
    },
    {
        "line": 59,
        "fullcodeline": "rv = iso_ops->select_file(card, &path, NULL);"
    },
    {
        "line": 64,
        "fullcodeline": "LOG_TEST_RET(card->ctx, rv, \"select file failed\");"
    },
    {
        "line": 34,
        "fullcodeline": "tmp_file->path.len -= 2;"
    },
    {
        "line": 40,
        "fullcodeline": "if (tmp_file->type == SC_FILE_TYPE_DF)   {"
    },
    {
        "line": 41,
        "fullcodeline": "sc_concatenate_path(&tmp_file->path, &auth_current_df->path, &path);"
    },
    {
        "line": 43,
        "fullcodeline": "sc_file_free(auth_current_df);"
    },
    {
        "line": 44,
        "fullcodeline": "sc_file_dup(&auth_current_df, tmp_file);"
    },
    {
        "line": 61,
        "fullcodeline": "sc_file_free(auth_current_ef);"
    },
    {
        "line": 62,
        "fullcodeline": "auth_current_ef = NULL;"
    },
    {
        "line": 67,
        "fullcodeline": "for (offs = 0; offs < path.len && offs < auth_current_df->path.len; offs += 2)"
    },
    {
        "line": 73,
        "fullcodeline": "if (offs && offs < auth_current_df->path.len)   {"
    },
    {
        "line": 89,
        "fullcodeline": "if (path.len - offs > 0)   {"
    },
    {
        "line": 47,
        "fullcodeline": "sc_file_free(auth_current_ef);"
    },
    {
        "line": 49,
        "fullcodeline": "sc_file_dup(&auth_current_ef, tmp_file);"
    },
    {
        "line": 50,
        "fullcodeline": "sc_concatenate_path(&auth_current_ef->path, &auth_current_df->path, &path);"
    },
    {
        "line": 68,
        "fullcodeline": "if (path.value[offs] != auth_current_df->path.value[offs] ||"
    },
    {
        "line": 74,
        "fullcodeline": "size_t deep = auth_current_df->path.len - offs;"
    },
    {
        "line": 92,
        "fullcodeline": "memset(&tmp_path, 0, sizeof(struct sc_path));"
    },
    {
        "line": 93,
        "fullcodeline": "tmp_path.type = SC_PATH_TYPE_FILE_ID;"
    },
    {
        "line": 94,
        "fullcodeline": "tmp_path.len = 2;"
    },
    {
        "line": 78,
        "fullcodeline": "for (ii=0; ii<deep; ii+=2)   {"
    },
    {
        "line": 96,
        "fullcodeline": "for (ii=0; ii < path.len - offs; ii+=2)   {"
    },
    {
        "line": 81,
        "fullcodeline": "memcpy(&tmp_path, &auth_current_df->path,  sizeof(struct sc_path));"
    },
    {
        "line": 82,
        "fullcodeline": "tmp_path.type = SC_PATH_TYPE_PARENT;"
    },
    {
        "line": 84,
        "fullcodeline": "rv = auth_select_file (card, &tmp_path, file_out);"
    },
    {
        "line": 85,
        "fullcodeline": "LOG_TEST_RET(card->ctx, rv, \"select file failed\");"
    },
    {
        "line": 97,
        "fullcodeline": "memcpy(tmp_path.value, path.value + offs + ii, 2);"
    },
    {
        "line": 99,
        "fullcodeline": "rv = auth_select_file(card, &tmp_path, file_out);"
    },
    {
        "line": 100,
        "fullcodeline": "LOG_TEST_RET(card->ctx, rv, \"select file failed\");"
    },
    {
        "line": 103,
        "fullcodeline": "else if (path.len - offs == 0 && file_out)  {"
    },
    {
        "line": 69,
        "fullcodeline": "path.value[offs + 1] != auth_current_df->path.value[offs + 1])"
    },
    {
        "line": 104,
        "fullcodeline": "if (sc_compare_path(&path, &auth_current_df->path))"
    },
    {
        "line": 105,
        "fullcodeline": "sc_file_dup(file_out, auth_current_df);"
    },
    {
        "line": 107,
        "fullcodeline": "sc_file_dup(file_out, auth_current_ef);"
    },
    {
        "line": 109,
        "fullcodeline": "LOG_TEST_RET(card->ctx, SC_ERROR_INTERNAL, \"No current EF\");"
    }
]