[
    {
        "line": 4,
        "fullcodeline": "int rlev = s->rlev;"
    },
    {
        "line": 14,
        "fullcodeline": "s->rlev++;"
    },
    {
        "line": 29,
        "fullcodeline": "nt = nint(tree->car);"
    },
    {
        "line": 30,
        "fullcodeline": "s->lineno = tree->lineno;"
    },
    {
        "line": 31,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 6,
        "fullcodeline": "if (!tree) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (s->rlev > MRB_CODEGEN_LEVEL_MAX) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (s->irep && s->filename_index != tree->filename_index) {"
    },
    {
        "line": 16,
        "fullcodeline": "codegen_error(s, \"too complex expression\");"
    },
    {
        "line": 19,
        "fullcodeline": "mrb_sym fname = mrb_parser_get_filename(s->parser, s->filename_index);"
    },
    {
        "line": 20,
        "fullcodeline": "const char *filename = mrb_sym_name_len(s->mrb, fname, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "mrb_debug_info_append_file(s->mrb, s->irep->debug_info,"
    },
    {
        "line": 24,
        "fullcodeline": "s->debug_start_pos = s->pc;"
    },
    {
        "line": 25,
        "fullcodeline": "s->filename_index = tree->filename_index;"
    },
    {
        "line": 26,
        "fullcodeline": "s->filename_sym = mrb_parser_get_filename(s->parser, tree->filename_index);"
    },
    {
        "line": 419,
        "fullcodeline": "codegen(s, tree->car, val);"
    },
    {
        "line": 420,
        "fullcodeline": "codegen(s, tree->cdr, val);"
    },
    {
        "line": 429,
        "fullcodeline": "codegen(s, tree->car, val);"
    },
    {
        "line": 430,
        "fullcodeline": "codegen(s, tree->cdr, val);"
    },
    {
        "line": 1134,
        "fullcodeline": "tree = ((struct mrb_parser_heredoc_info *)tree)->doc;"
    },
    {
        "line": 1340,
        "fullcodeline": "codegen(s, tree, val);"
    },
    {
        "line": 34,
        "fullcodeline": "if (val && !tree) {"
    },
    {
        "line": 54,
        "fullcodeline": "catch_entry = catch_handler_new(s);"
    },
    {
        "line": 55,
        "fullcodeline": "begin = s->pc;"
    },
    {
        "line": 56,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 59,
        "fullcodeline": "end = s->pc;"
    },
    {
        "line": 60,
        "fullcodeline": "noexc = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 61,
        "fullcodeline": "catch_handler_set(s, catch_entry, MRB_CATCH_RESCUE, begin, end, s->pc);"
    },
    {
        "line": 62,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 63,
        "fullcodeline": "exend = JMPLINK_START;"
    },
    {
        "line": 64,
        "fullcodeline": "pos1 = JMPLINK_START;"
    },
    {
        "line": 124,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 125,
        "fullcodeline": "dispatch(s, noexc);"
    },
    {
        "line": 132,
        "fullcodeline": "dispatch_linked(s, exend);"
    },
    {
        "line": 184,
        "fullcodeline": "mrb_bool nil_p = FALSE;"
    },
    {
        "line": 185,
        "fullcodeline": "node *elsepart = tree->cdr->cdr->car;"
    },
    {
        "line": 264,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 266,
        "fullcodeline": "pos = genjmp2_0(s, OP_JMPNOT, cursp(), val);"
    },
    {
        "line": 267,
        "fullcodeline": "codegen(s, tree->cdr, val);"
    },
    {
        "line": 284,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 286,
        "fullcodeline": "pos = genjmp2_0(s, OP_JMPIF, cursp(), val);"
    },
    {
        "line": 287,
        "fullcodeline": "codegen(s, tree->cdr, val);"
    },
    {
        "line": 315,
        "fullcodeline": "struct loopinfo *lp = loop_push(s, LOOP_NORMAL);"
    },
    {
        "line": 318,
        "fullcodeline": "lp->pc0 = new_label(s);"
    },
    {
        "line": 319,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 328,
        "fullcodeline": "codegen(s, tree->cdr, NOVAL);"
    },
    {
        "line": 329,
        "fullcodeline": "genjmp(s, OP_JMP, lp->pc0);"
    },
    {
        "line": 330,
        "fullcodeline": "dispatch(s, pos);"
    },
    {
        "line": 342,
        "fullcodeline": "int head = 0;"
    },
    {
        "line": 346,
        "fullcodeline": "pos3 = JMPLINK_START;"
    },
    {
        "line": 351,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 440,
        "fullcodeline": "int sym = new_sym(s, nsym(tree->cdr));"
    },
    {
        "line": 442,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 451,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 453,
        "fullcodeline": "genop_1(s, OP_OCLASS, cursp());"
    },
    {
        "line": 463,
        "fullcodeline": "n = gen_values(s, tree, val, 0);"
    },
    {
        "line": 477,
        "fullcodeline": "int nk = gen_hash(s, tree, val, GEN_LIT_ARY_MAX);"
    },
    {
        "line": 496,
        "fullcodeline": "int len = 0, n = 0, post = 0;"
    },
    {
        "line": 497,
        "fullcodeline": "node *t = tree->cdr, *p;"
    },
    {
        "line": 498,
        "fullcodeline": "int rhs = cursp();"
    },
    {
        "line": 574,
        "fullcodeline": "mrb_sym sym = nsym(tree->cdr->car);"
    },
    {
        "line": 576,
        "fullcodeline": "const char *name = mrb_sym_name_len(s->mrb, sym, &len);"
    },
    {
        "line": 577,
        "fullcodeline": "int idx, callargs = -1, vsp = -1;"
    },
    {
        "line": 675,
        "fullcodeline": "codegen(s, tree->cdr->cdr->car, VAL);"
    },
    {
        "line": 731,
        "fullcodeline": "codegen_scope *s2 = s;"
    },
    {
        "line": 732,
        "fullcodeline": "int lv = 0;"
    },
    {
        "line": 733,
        "fullcodeline": "int n = 0, nk = 0, st = 0;"
    },
    {
        "line": 774,
        "fullcodeline": "st++;"
    },
    {
        "line": 783,
        "fullcodeline": "codegen_scope *s2 = s;"
    },
    {
        "line": 784,
        "fullcodeline": "int lv = 0;"
    },
    {
        "line": 785,
        "fullcodeline": "uint16_t ainfo = 0;"
    },
    {
        "line": 786,
        "fullcodeline": "int n = CALL_MAXARGS;"
    },
    {
        "line": 787,
        "fullcodeline": "int sp = cursp();"
    },
    {
        "line": 823,
        "fullcodeline": "s->sp = sp;"
    },
    {
        "line": 847,
        "fullcodeline": "codegen_scope *s2 = s;"
    },
    {
        "line": 848,
        "fullcodeline": "int lv = 0, ainfo = -1;"
    },
    {
        "line": 849,
        "fullcodeline": "int n = 0, sendv = 0;"
    },
    {
        "line": 870,
        "fullcodeline": "genop_2S(s, OP_BLKPUSH, cursp(), (ainfo<<4)|(lv & 0xf));"
    },
    {
        "line": 883,
        "fullcodeline": "if (!s->loop) {"
    },
    {
        "line": 915,
        "fullcodeline": "const char *msg = \"unexpected retry\";"
    },
    {
        "line": 916,
        "fullcodeline": "const struct loopinfo *lp = s->loop;"
    },
    {
        "line": 957,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 966,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 968,
        "fullcodeline": "genop_2(s, OP_GETIV, cursp(), sym);"
    },
    {
        "line": 975,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 977,
        "fullcodeline": "genop_2(s, OP_GETCV, cursp(), sym);"
    },
    {
        "line": 984,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 1019,
        "fullcodeline": "if (!tree) {"
    },
    {
        "line": 1178,
        "fullcodeline": "int ai = mrb_gc_arena_save(s->mrb);"
    },
    {
        "line": 1181,
        "fullcodeline": "genop_1(s, OP_LOADSELF, cursp());"
    },
    {
        "line": 1183,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 1184,
        "fullcodeline": "n = tree->cdr;"
    },
    {
        "line": 1198,
        "fullcodeline": "sym = new_sym(s, MRB_OPSYM_2(s->mrb, tick)); /* ` */"
    },
    {
        "line": 1199,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), sym, 1);"
    },
    {
        "line": 1207,
        "fullcodeline": "char *p = (char*)tree->car;"
    },
    {
        "line": 1208,
        "fullcodeline": "size_t len = (intptr_t)tree->cdr;"
    },
    {
        "line": 1209,
        "fullcodeline": "int ai = mrb_gc_arena_save(s->mrb);"
    },
    {
        "line": 1210,
        "fullcodeline": "int off = new_lit(s, mrb_str_new(s->mrb, p, len));"
    },
    {
        "line": 1213,
        "fullcodeline": "genop_1(s, OP_LOADSELF, cursp());"
    },
    {
        "line": 1215,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1218,
        "fullcodeline": "sym = new_sym(s, MRB_OPSYM_2(s->mrb, tick)); /* ` */"
    },
    {
        "line": 1219,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), sym, 1);"
    },
    {
        "line": 1376,
        "fullcodeline": "int a = new_sym(s, nsym(tree->car));"
    },
    {
        "line": 1377,
        "fullcodeline": "int b = new_sym(s, nsym(tree->cdr));"
    },
    {
        "line": 1379,
        "fullcodeline": "genop_2(s, OP_ALIAS, a, b);"
    },
    {
        "line": 1389,
        "fullcodeline": "node *t = tree;"
    },
    {
        "line": 1427,
        "fullcodeline": "idx = new_sym(s, nsym(tree->car->cdr));"
    },
    {
        "line": 1428,
        "fullcodeline": "genop_2(s, OP_CLASS, cursp(), idx);"
    },
    {
        "line": 1429,
        "fullcodeline": "body = tree->cdr->cdr->car;"
    },
    {
        "line": 1459,
        "fullcodeline": "idx = new_sym(s, nsym(tree->car->cdr));"
    },
    {
        "line": 1460,
        "fullcodeline": "genop_2(s, OP_MODULE, cursp(), idx);"
    },
    {
        "line": 1479,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 1481,
        "fullcodeline": "genop_1(s, OP_SCLASS, cursp());"
    },
    {
        "line": 1498,
        "fullcodeline": "int sym = new_sym(s, nsym(tree->car));"
    },
    {
        "line": 1499,
        "fullcodeline": "int idx = lambda_body(s, tree->cdr, 0);"
    },
    {
        "line": 1501,
        "fullcodeline": "genop_1(s, OP_TCLASS, cursp());"
    },
    {
        "line": 1503,
        "fullcodeline": "genop_2(s, OP_METHOD, cursp(), idx);"
    },
    {
        "line": 1513,
        "fullcodeline": "node *recv = tree->car;"
    },
    {
        "line": 1514,
        "fullcodeline": "int sym = new_sym(s, nsym(tree->cdr->car));"
    },
    {
        "line": 1515,
        "fullcodeline": "int idx = lambda_body(s, tree->cdr->cdr, 0);"
    },
    {
        "line": 1517,
        "fullcodeline": "codegen(s, recv, VAL);"
    },
    {
        "line": 1519,
        "fullcodeline": "genop_1(s, OP_SCLASS, cursp());"
    },
    {
        "line": 1521,
        "fullcodeline": "genop_2(s, OP_METHOD, cursp(), idx);"
    },
    {
        "line": 8,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 9,
        "fullcodeline": "push();"
    },
    {
        "line": 35,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 40,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 51,
        "fullcodeline": "if (tree->car == NULL) goto exit;"
    },
    {
        "line": 52,
        "fullcodeline": "lp = loop_push(s, LOOP_BEGIN);"
    },
    {
        "line": 53,
        "fullcodeline": "lp->pc0 = new_label(s);"
    },
    {
        "line": 138,
        "fullcodeline": "if (!tree->cdr || !tree->cdr->cdr ||"
    },
    {
        "line": 139,
        "fullcodeline": "(nint(tree->cdr->cdr->car) == NODE_BEGIN &&"
    },
    {
        "line": 144,
        "fullcodeline": "catch_entry = catch_handler_new(s);"
    },
    {
        "line": 145,
        "fullcodeline": "begin = s->pc;"
    },
    {
        "line": 146,
        "fullcodeline": "codegen(s, tree->car, val);"
    },
    {
        "line": 147,
        "fullcodeline": "end = target = s->pc;"
    },
    {
        "line": 149,
        "fullcodeline": "idx = cursp();"
    },
    {
        "line": 150,
        "fullcodeline": "genop_1(s, OP_EXCEPT, idx);"
    },
    {
        "line": 152,
        "fullcodeline": "codegen(s, tree->cdr->cdr, NOVAL);"
    },
    {
        "line": 154,
        "fullcodeline": "genop_1(s, OP_RAISEIF, idx);"
    },
    {
        "line": 156,
        "fullcodeline": "catch_handler_set(s, catch_entry, MRB_CATCH_ENSURE, begin, end, target);"
    },
    {
        "line": 165,
        "fullcodeline": "int idx = lambda_body(s, tree, 1);"
    },
    {
        "line": 167,
        "fullcodeline": "genop_2(s, OP_LAMBDA, cursp(), idx);"
    },
    {
        "line": 174,
        "fullcodeline": "int idx = lambda_body(s, tree, 1);"
    },
    {
        "line": 176,
        "fullcodeline": "genop_2(s, OP_BLOCK, cursp(), idx);"
    },
    {
        "line": 187,
        "fullcodeline": "if (!tree->car) {"
    },
    {
        "line": 191,
        "fullcodeline": "if (true_always(tree->car)) {"
    },
    {
        "line": 195,
        "fullcodeline": "if (false_always(tree->car)) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (!nil_p) {"
    },
    {
        "line": 212,
        "fullcodeline": "if (val || tree->cdr->car) {"
    },
    {
        "line": 256,
        "fullcodeline": "if (true_always(tree->car)) {"
    },
    {
        "line": 260,
        "fullcodeline": "if (false_always(tree->car)) {"
    },
    {
        "line": 276,
        "fullcodeline": "if (true_always(tree->car)) {"
    },
    {
        "line": 280,
        "fullcodeline": "if (false_always(tree->car)) {"
    },
    {
        "line": 295,
        "fullcodeline": "if (true_always(tree->car)) {"
    },
    {
        "line": 317,
        "fullcodeline": "if (!val) lp->reg = -1;"
    },
    {
        "line": 327,
        "fullcodeline": "lp->pc1 = new_label(s);"
    },
    {
        "line": 423,
        "fullcodeline": "genop_1(s, OP_RANGE_INC, cursp());"
    },
    {
        "line": 433,
        "fullcodeline": "genop_1(s, OP_RANGE_EXC, cursp());"
    },
    {
        "line": 707,
        "fullcodeline": "if (callargs < 0) {"
    },
    {
        "line": 736,
        "fullcodeline": "while (!s2->mscope) {"
    },
    {
        "line": 790,
        "fullcodeline": "while (!s2->mscope) {"
    },
    {
        "line": 795,
        "fullcodeline": "if (s2 && s2->ainfo > 0) {"
    },
    {
        "line": 798,
        "fullcodeline": "if (ainfo > 0) {"
    },
    {
        "line": 831,
        "fullcodeline": "gen_retval(s, tree);"
    },
    {
        "line": 837,
        "fullcodeline": "gen_return(s, OP_RETURN_BLK, cursp());"
    },
    {
        "line": 851,
        "fullcodeline": "while (!s2->mscope) {"
    },
    {
        "line": 859,
        "fullcodeline": "if (ainfo < 0) codegen_error(s, \"invalid yield (SyntaxError)\");"
    },
    {
        "line": 872,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), new_sym(s, MRB_SYM_2(s->mrb, call)), n);"
    },
    {
        "line": 904,
        "fullcodeline": "if (!s->loop || s->loop->type == LOOP_BEGIN || s->loop->type == LOOP_RESCUE) {"
    },
    {
        "line": 918,
        "fullcodeline": "while (lp && lp->type != LOOP_RESCUE) {"
    },
    {
        "line": 921,
        "fullcodeline": "if (!lp) {"
    },
    {
        "line": 933,
        "fullcodeline": "int idx = lv_idx(s, nsym(tree));"
    },
    {
        "line": 947,
        "fullcodeline": "int idx = nint(tree);"
    },
    {
        "line": 994,
        "fullcodeline": "int sym = new_sym(s, mrb_intern(s->mrb, buf, sizeof(buf)));"
    },
    {
        "line": 1003,
        "fullcodeline": "mrb_state *mrb = s->mrb;"
    },
    {
        "line": 1007,
        "fullcodeline": "str = mrb_format(mrb, \"$%d\", nint(tree));"
    },
    {
        "line": 1008,
        "fullcodeline": "sym = new_sym(s, mrb_intern_str(mrb, str));"
    },
    {
        "line": 1020,
        "fullcodeline": "int idx = lv_idx(s, MRB_OPSYM_2(s->mrb, and));"
    },
    {
        "line": 1035,
        "fullcodeline": "char *p = (char*)tree->car;"
    },
    {
        "line": 1036,
        "fullcodeline": "int base = nint(tree->cdr->car);"
    },
    {
        "line": 1040,
        "fullcodeline": "i = readint(s, p, base, FALSE, &overflow);"
    },
    {
        "line": 1055,
        "fullcodeline": "char *p = (char*)tree;"
    },
    {
        "line": 1056,
        "fullcodeline": "mrb_float f = mrb_float_read(p, NULL);"
    },
    {
        "line": 1057,
        "fullcodeline": "int off = new_lit(s, mrb_float_value(s->mrb, f));"
    },
    {
        "line": 1067,
        "fullcodeline": "nt = nint(tree->car);"
    },
    {
        "line": 1122,
        "fullcodeline": "char *p = (char*)tree->car;"
    },
    {
        "line": 1123,
        "fullcodeline": "size_t len = (intptr_t)tree->cdr;"
    },
    {
        "line": 1124,
        "fullcodeline": "int ai = mrb_gc_arena_save(s->mrb);"
    },
    {
        "line": 1125,
        "fullcodeline": "int off = new_lit(s, mrb_str_new(s->mrb, p, len));"
    },
    {
        "line": 1127,
        "fullcodeline": "mrb_gc_arena_restore(s->mrb, ai);"
    },
    {
        "line": 1138,
        "fullcodeline": "node *n = tree;"
    },
    {
        "line": 1145,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 1146,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1179,
        "fullcodeline": "int sym = new_sym(s, MRB_SYM_2(s->mrb, Kernel));"
    },
    {
        "line": 1227,
        "fullcodeline": "char *p1 = (char*)tree->car;"
    },
    {
        "line": 1228,
        "fullcodeline": "char *p2 = (char*)tree->cdr->car;"
    },
    {
        "line": 1229,
        "fullcodeline": "char *p3 = (char*)tree->cdr->cdr;"
    },
    {
        "line": 1230,
        "fullcodeline": "int ai = mrb_gc_arena_save(s->mrb);"
    },
    {
        "line": 1231,
        "fullcodeline": "int sym = new_sym(s, mrb_intern_lit(s->mrb, REGEXP_CLASS));"
    },
    {
        "line": 1232,
        "fullcodeline": "int off = new_lit(s, mrb_str_new_cstr(s->mrb, p1));"
    },
    {
        "line": 1233,
        "fullcodeline": "int argc = 1;"
    },
    {
        "line": 1235,
        "fullcodeline": "genop_1(s, OP_OCLASS, cursp());"
    },
    {
        "line": 1236,
        "fullcodeline": "genop_2(s, OP_GETMCNST, cursp(), sym);"
    },
    {
        "line": 1238,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1259,
        "fullcodeline": "sym = new_sym(s, MRB_SYM_2(s->mrb, compile));"
    },
    {
        "line": 1260,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), sym, argc);"
    },
    {
        "line": 1268,
        "fullcodeline": "node *n = tree->car;"
    },
    {
        "line": 1269,
        "fullcodeline": "int ai = mrb_gc_arena_save(s->mrb);"
    },
    {
        "line": 1270,
        "fullcodeline": "int sym = new_sym(s, mrb_intern_lit(s->mrb, REGEXP_CLASS));"
    },
    {
        "line": 1271,
        "fullcodeline": "int argc = 1;"
    },
    {
        "line": 1275,
        "fullcodeline": "genop_1(s, OP_OCLASS, cursp());"
    },
    {
        "line": 1276,
        "fullcodeline": "genop_2(s, OP_GETMCNST, cursp(), sym);"
    },
    {
        "line": 1278,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 1279,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1287,
        "fullcodeline": "n = tree->cdr->cdr;"
    },
    {
        "line": 1313,
        "fullcodeline": "sym = new_sym(s, MRB_SYM_2(s->mrb, compile));"
    },
    {
        "line": 1314,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), sym, argc);"
    },
    {
        "line": 1332,
        "fullcodeline": "int sym = new_sym(s, nsym(tree));"
    },
    {
        "line": 1334,
        "fullcodeline": "genop_2(s, OP_LOADSYM, cursp(), sym);"
    },
    {
        "line": 1362,
        "fullcodeline": "genop_1(s, OP_LOADT, cursp());"
    },
    {
        "line": 1408,
        "fullcodeline": "if (tree->car->car == (node*)0) {"
    },
    {
        "line": 1447,
        "fullcodeline": "if (tree->car->car == (node*)0) {"
    },
    {
        "line": 66,
        "fullcodeline": "node *n2 = tree->car;"
    },
    {
        "line": 67,
        "fullcodeline": "int exc = cursp();"
    },
    {
        "line": 69,
        "fullcodeline": "genop_1(s, OP_EXCEPT, exc);"
    },
    {
        "line": 127,
        "fullcodeline": "codegen(s, tree->car, val);"
    },
    {
        "line": 199,
        "fullcodeline": "if (nint(tree->car->car) == NODE_CALL) {"
    },
    {
        "line": 200,
        "fullcodeline": "node *n = tree->car->cdr;"
    },
    {
        "line": 201,
        "fullcodeline": "mrb_sym mid = nsym(n->cdr->car);"
    },
    {
        "line": 202,
        "fullcodeline": "mrb_sym sym_nil_p = MRB_SYM_Q_2(s->mrb, nil);"
    },
    {
        "line": 209,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 221,
        "fullcodeline": "codegen(s, tree->cdr->car, val);"
    },
    {
        "line": 322,
        "fullcodeline": "pos = genjmp2_0(s, OP_JMPNOT, cursp(), NOVAL);"
    },
    {
        "line": 348,
        "fullcodeline": "head = cursp();"
    },
    {
        "line": 349,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 353,
        "fullcodeline": "n = tree->car->car;"
    },
    {
        "line": 354,
        "fullcodeline": "pos1 = pos2 = JMPLINK_START;"
    },
    {
        "line": 378,
        "fullcodeline": "codegen(s, tree->car->cdr, val);"
    },
    {
        "line": 380,
        "fullcodeline": "tmp = genjmp(s, OP_JMP, pos3);"
    },
    {
        "line": 381,
        "fullcodeline": "pos3 = tmp;"
    },
    {
        "line": 382,
        "fullcodeline": "dispatch(s, pos1);"
    },
    {
        "line": 386,
        "fullcodeline": "uint32_t pos = cursp();"
    },
    {
        "line": 387,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 478,
        "fullcodeline": "if (val && nk >= 0) {"
    },
    {
        "line": 480,
        "fullcodeline": "genop_2(s, OP_HASH, cursp(), nk);"
    },
    {
        "line": 500,
        "fullcodeline": "if (nint(t->car) == NODE_ARRAY && t->cdr && nosplat(t->cdr)) {"
    },
    {
        "line": 502,
        "fullcodeline": "t = t->cdr;"
    },
    {
        "line": 508,
        "fullcodeline": "tree = tree->car;"
    },
    {
        "line": 524,
        "fullcodeline": "t = tree->cdr;"
    },
    {
        "line": 555,
        "fullcodeline": "pop_n(len);"
    },
    {
        "line": 579,
        "fullcodeline": "if ((len == 2 && name[0] == '|' && name[1] == '|') &&"
    },
    {
        "line": 580,
        "fullcodeline": "(nint(tree->car->car) == NODE_CONST ||"
    },
    {
        "line": 588,
        "fullcodeline": "catch_entry = catch_handler_new(s);"
    },
    {
        "line": 589,
        "fullcodeline": "begin = s->pc;"
    },
    {
        "line": 590,
        "fullcodeline": "exc = cursp();"
    },
    {
        "line": 591,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 592,
        "fullcodeline": "end = s->pc;"
    },
    {
        "line": 593,
        "fullcodeline": "noexc = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 595,
        "fullcodeline": "catch_handler_set(s, catch_entry, MRB_CATCH_RESCUE, begin, end, s->pc);"
    },
    {
        "line": 596,
        "fullcodeline": "genop_1(s, OP_EXCEPT, exc);"
    },
    {
        "line": 597,
        "fullcodeline": "genop_1(s, OP_LOADF, exc);"
    },
    {
        "line": 598,
        "fullcodeline": "dispatch(s, noexc);"
    },
    {
        "line": 599,
        "fullcodeline": "loop_pop(s, NOVAL);"
    },
    {
        "line": 636,
        "fullcodeline": "if (len == 2 &&"
    },
    {
        "line": 637,
        "fullcodeline": "((name[0] == '|' && name[1] == '|') ||"
    },
    {
        "line": 651,
        "fullcodeline": "codegen(s, tree->cdr->cdr->car, VAL);"
    },
    {
        "line": 679,
        "fullcodeline": "if (len == 1 && name[0] == '+')  {"
    },
    {
        "line": 680,
        "fullcodeline": "gen_addsub(s, OP_ADD, cursp());"
    },
    {
        "line": 737,
        "fullcodeline": "lv++;"
    },
    {
        "line": 738,
        "fullcodeline": "s2 = s2->prev;"
    },
    {
        "line": 742,
        "fullcodeline": "node *args = tree->car;"
    },
    {
        "line": 791,
        "fullcodeline": "lv++;"
    },
    {
        "line": 792,
        "fullcodeline": "s2 = s2->prev;"
    },
    {
        "line": 796,
        "fullcodeline": "ainfo = s2->ainfo;"
    },
    {
        "line": 799,
        "fullcodeline": "genop_2S(s, OP_ARGARY, cursp(), (ainfo<<4)|(lv & 0xf));"
    },
    {
        "line": 834,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 852,
        "fullcodeline": "lv++;"
    },
    {
        "line": 853,
        "fullcodeline": "s2 = s2->prev;"
    },
    {
        "line": 857,
        "fullcodeline": "ainfo = (int)s2->ainfo;"
    },
    {
        "line": 862,
        "fullcodeline": "n = gen_values(s, tree, VAL, 14);"
    },
    {
        "line": 871,
        "fullcodeline": "if (sendv) n = CALL_MAXARGS;"
    },
    {
        "line": 919,
        "fullcodeline": "lp = lp->prev;"
    },
    {
        "line": 935,
        "fullcodeline": "if (idx > 0) {"
    },
    {
        "line": 993,
        "fullcodeline": "char buf[] = {'$', nchar(tree)};"
    },
    {
        "line": 1022,
        "fullcodeline": "if (idx == 0) {"
    },
    {
        "line": 1140,
        "fullcodeline": "if (!n) {"
    },
    {
        "line": 1156,
        "fullcodeline": "node *n = tree;"
    },
    {
        "line": 1190,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 1192,
        "fullcodeline": "genop_1(s, OP_STRCAT, cursp());"
    },
    {
        "line": 1194,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1240,
        "fullcodeline": "if (p2 || p3) {"
    },
    {
        "line": 1319,
        "fullcodeline": "node *n = tree->car;"
    },
    {
        "line": 1392,
        "fullcodeline": "int symbol = new_sym(s, nsym(t->car));"
    },
    {
        "line": 1393,
        "fullcodeline": "genop_1(s, OP_UNDEF, symbol);"
    },
    {
        "line": 1394,
        "fullcodeline": "t = t->cdr;"
    },
    {
        "line": 1409,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 1420,
        "fullcodeline": "codegen(s, tree->cdr->car, VAL);"
    },
    {
        "line": 1430,
        "fullcodeline": "if (nint(body->cdr->car) == NODE_BEGIN && body->cdr->cdr == NULL) {"
    },
    {
        "line": 1448,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 1461,
        "fullcodeline": "if (nint(tree->cdr->car->cdr->car) == NODE_BEGIN &&"
    },
    {
        "line": 1462,
        "fullcodeline": "tree->cdr->car->cdr->cdr == NULL) {"
    },
    {
        "line": 1482,
        "fullcodeline": "if (nint(tree->cdr->car->cdr->car) == NODE_BEGIN &&"
    },
    {
        "line": 1483,
        "fullcodeline": "tree->cdr->car->cdr->cdr == NULL) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (pos1 != JMPLINK_START) {"
    },
    {
        "line": 223,
        "fullcodeline": "if (elsepart || val) {"
    },
    {
        "line": 296,
        "fullcodeline": "if (nt == NODE_UNTIL) {"
    },
    {
        "line": 325,
        "fullcodeline": "pos = genjmp2_0(s, OP_JMPIF, cursp(), NOVAL);"
    },
    {
        "line": 388,
        "fullcodeline": "if (pos3 != JMPLINK_START) dispatch_linked(s, pos3);"
    },
    {
        "line": 390,
        "fullcodeline": "if (cursp() != pos) {"
    },
    {
        "line": 465,
        "fullcodeline": "if (n >= 0) {"
    },
    {
        "line": 479,
        "fullcodeline": "pop_n(nk*2);"
    },
    {
        "line": 563,
        "fullcodeline": "codegen(s, t, VAL);"
    },
    {
        "line": 564,
        "fullcodeline": "gen_vmassignment(s, tree->car, rhs, val);"
    },
    {
        "line": 581,
        "fullcodeline": "nint(tree->car->car) == NODE_CVAR)) {"
    },
    {
        "line": 586,
        "fullcodeline": "lp = loop_push(s, LOOP_BEGIN);"
    },
    {
        "line": 587,
        "fullcodeline": "lp->pc0 = new_label(s);"
    },
    {
        "line": 638,
        "fullcodeline": "(name[0] == '&' && name[1] == '&'))) {"
    },
    {
        "line": 653,
        "fullcodeline": "if (val && vsp >= 0) {"
    },
    {
        "line": 723,
        "fullcodeline": "idx = new_sym(s, attrsym(s,nsym(tree->car->cdr->cdr->car)));"
    },
    {
        "line": 739,
        "fullcodeline": "if (!s2) break;"
    },
    {
        "line": 793,
        "fullcodeline": "if (!s2) break;"
    },
    {
        "line": 808,
        "fullcodeline": "if (tree && tree->cdr && tree->cdr->cdr) {"
    },
    {
        "line": 821,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 854,
        "fullcodeline": "if (!s2) break;"
    },
    {
        "line": 863,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 1023,
        "fullcodeline": "codegen_error(s, \"no anonymous block argument\");"
    },
    {
        "line": 1042,
        "fullcodeline": "int off = new_litbn(s, p, base, FALSE);"
    },
    {
        "line": 1148,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 1150,
        "fullcodeline": "genop_1(s, OP_STRCAT, cursp());"
    },
    {
        "line": 1152,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1186,
        "fullcodeline": "if (nint(n->car->car) == NODE_XSTR) {"
    },
    {
        "line": 1249,
        "fullcodeline": "argc++;"
    },
    {
        "line": 1281,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 1283,
        "fullcodeline": "genop_1(s, OP_STRCAT, cursp());"
    },
    {
        "line": 1285,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1289,
        "fullcodeline": "p = (char*)n->car;"
    },
    {
        "line": 1290,
        "fullcodeline": "off = new_lit(s, mrb_str_new_cstr(s->mrb, p));"
    },
    {
        "line": 1291,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 1292,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1294,
        "fullcodeline": "genop_1(s, OP_STRCAT, cursp());"
    },
    {
        "line": 1298,
        "fullcodeline": "char *p2 = (char*)n->cdr->car;"
    },
    {
        "line": 1299,
        "fullcodeline": "off = new_lit(s, mrb_str_new_cstr(s->mrb, p2));"
    },
    {
        "line": 1300,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1302,
        "fullcodeline": "argc++;"
    },
    {
        "line": 1305,
        "fullcodeline": "char *p2 = (char*)n->cdr->cdr;"
    },
    {
        "line": 1306,
        "fullcodeline": "off = new_lit(s, mrb_str_new_cstr(s->mrb, p2));"
    },
    {
        "line": 1307,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1309,
        "fullcodeline": "argc++;"
    },
    {
        "line": 1423,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 1434,
        "fullcodeline": "idx = scope_body(s, body, val);"
    },
    {
        "line": 1466,
        "fullcodeline": "idx = scope_body(s, tree->cdr->car, val);"
    },
    {
        "line": 1487,
        "fullcodeline": "idx = scope_body(s, tree->cdr->car, val);"
    },
    {
        "line": 72,
        "fullcodeline": "node *n3 = n2->car;"
    },
    {
        "line": 73,
        "fullcodeline": "node *n4 = n3->car;"
    },
    {
        "line": 75,
        "fullcodeline": "dispatch(s, pos1);"
    },
    {
        "line": 76,
        "fullcodeline": "pos2 = JMPLINK_START;"
    },
    {
        "line": 102,
        "fullcodeline": "pos1 = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 103,
        "fullcodeline": "dispatch_linked(s, pos2);"
    },
    {
        "line": 113,
        "fullcodeline": "tmp = genjmp(s, OP_JMP, exend);"
    },
    {
        "line": 114,
        "fullcodeline": "exend = tmp;"
    },
    {
        "line": 115,
        "fullcodeline": "n2 = n2->cdr;"
    },
    {
        "line": 119,
        "fullcodeline": "dispatch(s, pos1);"
    },
    {
        "line": 120,
        "fullcodeline": "genop_1(s, OP_RAISEIF, exc);"
    },
    {
        "line": 203,
        "fullcodeline": "if (mid == sym_nil_p && n->cdr->cdr->car == NULL) {"
    },
    {
        "line": 204,
        "fullcodeline": "nil_p = TRUE;"
    },
    {
        "line": 205,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 214,
        "fullcodeline": "pos2 = genjmp2_0(s, OP_JMPNIL, cursp(), val);"
    },
    {
        "line": 215,
        "fullcodeline": "pos1 = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 216,
        "fullcodeline": "dispatch(s, pos2);"
    },
    {
        "line": 224,
        "fullcodeline": "pos2 = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 225,
        "fullcodeline": "dispatch(s, pos1);"
    },
    {
        "line": 226,
        "fullcodeline": "codegen(s, elsepart, val);"
    },
    {
        "line": 304,
        "fullcodeline": "else if (false_always(tree->car)) {"
    },
    {
        "line": 356,
        "fullcodeline": "codegen(s, n->car, VAL);"
    },
    {
        "line": 370,
        "fullcodeline": "tmp = genjmp2(s, OP_JMPIF, cursp(), pos2, NOVAL);"
    },
    {
        "line": 371,
        "fullcodeline": "pos2 = tmp;"
    },
    {
        "line": 372,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 375,
        "fullcodeline": "pos1 = genjmp_0(s, OP_JMP);"
    },
    {
        "line": 376,
        "fullcodeline": "dispatch_linked(s, pos2);"
    },
    {
        "line": 396,
        "fullcodeline": "if (pos3 != JMPLINK_START) {"
    },
    {
        "line": 466,
        "fullcodeline": "pop_n(n);"
    },
    {
        "line": 504,
        "fullcodeline": "codegen(s, t->car, VAL);"
    },
    {
        "line": 505,
        "fullcodeline": "len++;"
    },
    {
        "line": 506,
        "fullcodeline": "t = t->cdr;"
    },
    {
        "line": 510,
        "fullcodeline": "t = tree->car;"
    },
    {
        "line": 511,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 601,
        "fullcodeline": "else if (nint(tree->car->car) == NODE_CALL) {"
    },
    {
        "line": 646,
        "fullcodeline": "pos = genjmp2_0(s, name[0]=='|'?OP_JMPIF:OP_JMPNOT, cursp(), val);"
    },
    {
        "line": 654,
        "fullcodeline": "gen_move(s, vsp, cursp(), 1);"
    },
    {
        "line": 656,
        "fullcodeline": "if (nint(tree->car->car) == NODE_CALL) {"
    },
    {
        "line": 666,
        "fullcodeline": "idx = new_sym(s, attrsym(s, nsym(tree->car->cdr->cdr->car)));"
    },
    {
        "line": 667,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), idx, callargs);"
    },
    {
        "line": 714,
        "fullcodeline": "if (callargs == CALL_MAXARGS) {"
    },
    {
        "line": 744,
        "fullcodeline": "st = n = gen_values(s, args, VAL, 14);"
    },
    {
        "line": 751,
        "fullcodeline": "if (s2 && (s2->ainfo & 0x1) && tree->cdr->car) {"
    },
    {
        "line": 752,
        "fullcodeline": "nk = gen_hash(s, tree->cdr->car->cdr, VAL, 14);"
    },
    {
        "line": 755,
        "fullcodeline": "n |= nk<<4;"
    },
    {
        "line": 759,
        "fullcodeline": "codegen(s, tree->cdr->cdr, VAL);"
    },
    {
        "line": 804,
        "fullcodeline": "n |= CALL_MAXARGS<<4;"
    },
    {
        "line": 810,
        "fullcodeline": "codegen(s, tree->cdr->cdr, VAL);"
    },
    {
        "line": 815,
        "fullcodeline": "if (tree && tree->cdr && tree->cdr->cdr) {"
    },
    {
        "line": 864,
        "fullcodeline": "n = sendv = 1;"
    },
    {
        "line": 887,
        "fullcodeline": "codegen(s, tree, NOVAL);"
    },
    {
        "line": 1072,
        "fullcodeline": "char *p = (char*)tree->cdr;"
    },
    {
        "line": 1073,
        "fullcodeline": "mrb_float f = mrb_float_read(p, NULL);"
    },
    {
        "line": 1074,
        "fullcodeline": "int off = new_lit(s, mrb_float_value(s->mrb, -f));"
    },
    {
        "line": 1084,
        "fullcodeline": "char *p = (char*)tree->cdr->car;"
    },
    {
        "line": 1085,
        "fullcodeline": "int base = nint(tree->cdr->cdr->car);"
    },
    {
        "line": 1089,
        "fullcodeline": "i = readint(s, p, base, TRUE, &overflow);"
    },
    {
        "line": 1103,
        "fullcodeline": "codegen(s, tree, VAL);"
    },
    {
        "line": 1106,
        "fullcodeline": "mrb_sym minus = MRB_OPSYM_2(s->mrb, minus);"
    },
    {
        "line": 1162,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1187,
        "fullcodeline": "n->car->car = (struct mrb_ast_node*)(intptr_t)NODE_STR;"
    },
    {
        "line": 1325,
        "fullcodeline": "n = n->cdr;"
    },
    {
        "line": 1412,
        "fullcodeline": "else if (tree->car->car == (node*)1) {"
    },
    {
        "line": 1451,
        "fullcodeline": "else if (tree->car->car == (node*)1) {"
    },
    {
        "line": 219,
        "fullcodeline": "pos1 = genjmp2_0(s, OP_JMPNOT, cursp(), val);"
    },
    {
        "line": 241,
        "fullcodeline": "codegen(s, elsepart, val);"
    },
    {
        "line": 546,
        "fullcodeline": "if (t->cdr && t->cdr->car) {"
    },
    {
        "line": 602,
        "fullcodeline": "node *n = tree->car->cdr;"
    },
    {
        "line": 603,
        "fullcodeline": "int base, i, nargs = 0;"
    },
    {
        "line": 604,
        "fullcodeline": "callargs = 0;"
    },
    {
        "line": 610,
        "fullcodeline": "codegen(s, n->car, VAL);   /* receiver */"
    },
    {
        "line": 611,
        "fullcodeline": "idx = new_sym(s, nsym(n->cdr->car));"
    },
    {
        "line": 612,
        "fullcodeline": "base = cursp()-1;"
    },
    {
        "line": 625,
        "fullcodeline": "gen_move(s, cursp(), base, 1);"
    },
    {
        "line": 630,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), idx, callargs);"
    },
    {
        "line": 643,
        "fullcodeline": "if (vsp >= 0) {"
    },
    {
        "line": 649,
        "fullcodeline": "pos = genjmp2_0(s, name[0]=='|'?OP_JMPIF:OP_JMPNOT, cursp(), val);"
    },
    {
        "line": 657,
        "fullcodeline": "if (callargs == CALL_MAXARGS) {"
    },
    {
        "line": 670,
        "fullcodeline": "gen_assignment(s, tree->car, NULL, cursp(), val);"
    },
    {
        "line": 682,
        "fullcodeline": "else if (len == 1 && name[0] == '-')  {"
    },
    {
        "line": 683,
        "fullcodeline": "gen_addsub(s, OP_SUB, cursp());"
    },
    {
        "line": 711,
        "fullcodeline": "if (val && vsp >= 0) {"
    },
    {
        "line": 712,
        "fullcodeline": "gen_move(s, vsp, cursp(), 0);"
    },
    {
        "line": 716,
        "fullcodeline": "genop_2(s, OP_ARYPUSH, cursp(), 1);"
    },
    {
        "line": 745,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 753,
        "fullcodeline": "if (nk < 0) {st++; nk = 15;}"
    },
    {
        "line": 768,
        "fullcodeline": "if (s2) gen_blkmove(s, s2->ainfo, lv);"
    },
    {
        "line": 816,
        "fullcodeline": "codegen(s, tree->cdr->cdr, VAL);"
    },
    {
        "line": 939,
        "fullcodeline": "gen_getupvar(s, cursp(), nsym(tree));"
    },
    {
        "line": 1188,
        "fullcodeline": "mrb_assert(!n->cdr); /* must be the end */"
    },
    {
        "line": 1242,
        "fullcodeline": "off = new_lit(s, mrb_str_new_cstr(s->mrb, p2));"
    },
    {
        "line": 1243,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1251,
        "fullcodeline": "off = new_lit(s, mrb_str_new(s->mrb, p3, 1));"
    },
    {
        "line": 1252,
        "fullcodeline": "genop_2(s, OP_STRING, cursp(), off);"
    },
    {
        "line": 1254,
        "fullcodeline": "argc++;"
    },
    {
        "line": 1413,
        "fullcodeline": "genop_1(s, OP_OCLASS, cursp());"
    },
    {
        "line": 1452,
        "fullcodeline": "genop_1(s, OP_OCLASS, cursp());"
    },
    {
        "line": 96,
        "fullcodeline": "tmp = genjmp2(s, OP_JMPIF, cursp(), pos2, val);"
    },
    {
        "line": 97,
        "fullcodeline": "pos2 = tmp;"
    },
    {
        "line": 107,
        "fullcodeline": "gen_assignment(s, n3->cdr->car, NULL, exc, NOVAL);"
    },
    {
        "line": 110,
        "fullcodeline": "codegen(s, n3->cdr->cdr->car, val);"
    },
    {
        "line": 305,
        "fullcodeline": "if (nt == NODE_WHILE) {"
    },
    {
        "line": 358,
        "fullcodeline": "gen_move(s, cursp(), head, 0);"
    },
    {
        "line": 521,
        "fullcodeline": "t = t->cdr;"
    },
    {
        "line": 527,
        "fullcodeline": "p = t->cdr->car;"
    },
    {
        "line": 542,
        "fullcodeline": "genop_3(s, OP_ARRAY2, cursp(), rhs+n, rn);"
    },
    {
        "line": 543,
        "fullcodeline": "gen_assignment(s, t->car, NULL, cursp(), NOVAL);"
    },
    {
        "line": 544,
        "fullcodeline": "n += rn;"
    },
    {
        "line": 547,
        "fullcodeline": "t = t->cdr->car;"
    },
    {
        "line": 626,
        "fullcodeline": "for (i=0; i<nargs; i++) {"
    },
    {
        "line": 634,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 644,
        "fullcodeline": "gen_move(s, vsp, cursp(), 1);"
    },
    {
        "line": 659,
        "fullcodeline": "genop_2(s, OP_ARYPUSH, cursp(), 1);"
    },
    {
        "line": 719,
        "fullcodeline": "pop_n(callargs);"
    },
    {
        "line": 720,
        "fullcodeline": "callargs++;"
    },
    {
        "line": 746,
        "fullcodeline": "st = 1; n = 15;"
    },
    {
        "line": 770,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 819,
        "fullcodeline": "gen_blkmove(s, 0, lv);"
    },
    {
        "line": 1091,
        "fullcodeline": "int off = new_litbn(s, p, base, TRUE);"
    },
    {
        "line": 1107,
        "fullcodeline": "if (!gen_uniop(s, minus, cursp())) {"
    },
    {
        "line": 1159,
        "fullcodeline": "if (nint(n->car->car) != NODE_STR) {"
    },
    {
        "line": 1246,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 1322,
        "fullcodeline": "if (nint(n->car->car) != NODE_STR) {"
    },
    {
        "line": 1417,
        "fullcodeline": "codegen(s, tree->car->car, VAL);"
    },
    {
        "line": 1456,
        "fullcodeline": "codegen(s, tree->car->car, VAL);"
    },
    {
        "line": 236,
        "fullcodeline": "pos1 = genjmp2_0(s, OP_JMPNIL, cursp(), val);"
    },
    {
        "line": 513,
        "fullcodeline": "if (n < len) {"
    },
    {
        "line": 536,
        "fullcodeline": "if (len < post + n) {"
    },
    {
        "line": 548,
        "fullcodeline": "while (n<len) {"
    },
    {
        "line": 607,
        "fullcodeline": "vsp = cursp();"
    },
    {
        "line": 614,
        "fullcodeline": "nargs = gen_values(s, n->cdr->cdr->car->car, VAL, 13);"
    },
    {
        "line": 627,
        "fullcodeline": "gen_move(s, cursp()+i+1, base+i+1, 1);"
    },
    {
        "line": 662,
        "fullcodeline": "pop_n(callargs);"
    },
    {
        "line": 663,
        "fullcodeline": "callargs++;"
    },
    {
        "line": 754,
        "fullcodeline": "else st += nk*2;"
    },
    {
        "line": 761,
        "fullcodeline": "else if (s2) gen_blkmove(s, s2->ainfo, lv);"
    },
    {
        "line": 892,
        "fullcodeline": "codegen(s, tree, VAL);"
    },
    {
        "line": 1108,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), new_sym(s, minus), 0);"
    },
    {
        "line": 78,
        "fullcodeline": "if (n4 && n4->car && nint(n4->car->car) == NODE_SPLAT) {"
    },
    {
        "line": 79,
        "fullcodeline": "codegen(s, n4->car, VAL);"
    },
    {
        "line": 80,
        "fullcodeline": "gen_move(s, cursp(), exc, 0);"
    },
    {
        "line": 83,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), new_sym(s, MRB_SYM_2(s->mrb, __case_eqq)), 1);"
    },
    {
        "line": 99,
        "fullcodeline": "n4 = n4->cdr;"
    },
    {
        "line": 239,
        "fullcodeline": "pos1 = genjmp2_0(s, OP_JMPIF, cursp(), val);"
    },
    {
        "line": 244,
        "fullcodeline": "else if (val && !nil_p) {"
    },
    {
        "line": 360,
        "fullcodeline": "if (nint(n->car->car) == NODE_SPLAT) {"
    },
    {
        "line": 361,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), new_sym(s, MRB_SYM_2(s->mrb, __case_eqq)), 1);"
    },
    {
        "line": 514,
        "fullcodeline": "gen_assignment(s, t->car, NULL, rhs+n, NOVAL);"
    },
    {
        "line": 515,
        "fullcodeline": "n++;"
    },
    {
        "line": 529,
        "fullcodeline": "post++;"
    },
    {
        "line": 537,
        "fullcodeline": "rn = 0;"
    },
    {
        "line": 549,
        "fullcodeline": "gen_assignment(s, t->car, NULL, rhs+n, NOVAL);"
    },
    {
        "line": 550,
        "fullcodeline": "t = t->cdr;"
    },
    {
        "line": 551,
        "fullcodeline": "n++;"
    },
    {
        "line": 615,
        "fullcodeline": "if (nargs >= 0) {"
    },
    {
        "line": 685,
        "fullcodeline": "else if (len == 1 && name[0] == '*')  {"
    },
    {
        "line": 686,
        "fullcodeline": "genop_1(s, OP_MUL, cursp());"
    },
    {
        "line": 763,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 896,
        "fullcodeline": "genop_1(s, OP_LOADNIL, cursp());"
    },
    {
        "line": 94,
        "fullcodeline": "genop_2(s, OP_RESCUE, exc, cursp());"
    },
    {
        "line": 364,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), new_sym(s, MRB_OPSYM_2(s->mrb, eqq)), 1);"
    },
    {
        "line": 518,
        "fullcodeline": "genop_1(s, OP_LOADNIL, rhs+n);"
    },
    {
        "line": 519,
        "fullcodeline": "gen_assignment(s, t->car, NULL, rhs+n, NOVAL);"
    },
    {
        "line": 540,
        "fullcodeline": "rn = len - post - n;"
    },
    {
        "line": 616,
        "fullcodeline": "callargs = nargs;"
    },
    {
        "line": 620,
        "fullcodeline": "nargs = 1;"
    },
    {
        "line": 621,
        "fullcodeline": "callargs = CALL_MAXARGS;"
    },
    {
        "line": 87,
        "fullcodeline": "codegen(s, n4->car, VAL);"
    },
    {
        "line": 688,
        "fullcodeline": "else if (len == 1 && name[0] == '/')  {"
    },
    {
        "line": 689,
        "fullcodeline": "genop_1(s, OP_DIV, cursp());"
    },
    {
        "line": 90,
        "fullcodeline": "genop_2(s, OP_GETCONST, cursp(), new_sym(s, MRB_SYM_2(s->mrb, StandardError)));"
    },
    {
        "line": 691,
        "fullcodeline": "else if (len == 1 && name[0] == '<')  {"
    },
    {
        "line": 692,
        "fullcodeline": "genop_1(s, OP_LT, cursp());"
    },
    {
        "line": 694,
        "fullcodeline": "else if (len == 2 && name[0] == '<' && name[1] == '=')  {"
    },
    {
        "line": 695,
        "fullcodeline": "genop_1(s, OP_LE, cursp());"
    },
    {
        "line": 697,
        "fullcodeline": "else if (len == 1 && name[0] == '>')  {"
    },
    {
        "line": 698,
        "fullcodeline": "genop_1(s, OP_GT, cursp());"
    },
    {
        "line": 700,
        "fullcodeline": "else if (len == 2 && name[0] == '>' && name[1] == '=')  {"
    },
    {
        "line": 701,
        "fullcodeline": "genop_1(s, OP_GE, cursp());"
    },
    {
        "line": 704,
        "fullcodeline": "idx = new_sym(s, sym);"
    },
    {
        "line": 705,
        "fullcodeline": "genop_3(s, OP_SEND, cursp(), idx, 1);"
    }
]