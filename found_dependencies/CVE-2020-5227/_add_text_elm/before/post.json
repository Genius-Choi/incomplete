[
    {
        "line": 6,
        "fullcodeline": "elm = etree.SubElement(entry, name)"
    },
    {
        "line": 7,
        "fullcodeline": "type_ = data.get('type')"
    },
    {
        "line": 3,
        "fullcodeline": "if not data:"
    },
    {
        "line": 8,
        "fullcodeline": "if data.get('src'):"
    },
    {
        "line": 12,
        "fullcodeline": "elm.attrib['src'] = data['src']"
    },
    {
        "line": 37,
        "fullcodeline": "elm.attrib['type'] = type_"
    },
    {
        "line": 9,
        "fullcodeline": "if name != 'content':"
    },
    {
        "line": 13,
        "fullcodeline": "elif data.get(name):"
    },
    {
        "line": 10,
        "fullcodeline": "raise ValueError(\"Only the 'content' element of an entry can \""
    },
    {
        "line": 15,
        "fullcodeline": "if type_ == 'xhtml':"
    },
    {
        "line": 16,
        "fullcodeline": "elm.append(etree.fromstring("
    },
    {
        "line": 19,
        "fullcodeline": "elif type_ == 'CDATA':"
    },
    {
        "line": 17,
        "fullcodeline": "'<div xmlns=\"http://www.w3.org/1999/xhtml\">' +"
    },
    {
        "line": 20,
        "fullcodeline": "elm.text = etree.CDATA("
    },
    {
        "line": 23,
        "fullcodeline": "elif type_ and (type_.endswith('/xml') or type_.endswith('+xml')):"
    },
    {
        "line": 18,
        "fullcodeline": "data.get(name) + '</div>'))"
    },
    {
        "line": 21,
        "fullcodeline": "data.get(name))"
    },
    {
        "line": 24,
        "fullcodeline": "elm.append(etree.fromstring("
    },
    {
        "line": 27,
        "fullcodeline": "elif not type_ or type_.startswith('text') or type_ == 'html':"
    },
    {
        "line": 28,
        "fullcodeline": "elm.text = data.get(name)"
    },
    {
        "line": 31,
        "fullcodeline": "raise NotImplementedError("
    },
    {
        "line": 32,
        "fullcodeline": "'base64 encoded {} is not supported at the moment. '"
    }
]