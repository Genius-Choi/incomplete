[
    {
        "line": 9,
        "fullcodeline": "if (depth > MAXREC)"
    },
    {
        "line": 10,
        "fullcodeline": "return -1;"
    },
    {
        "line": 17,
        "fullcodeline": "pc = pc->x;"
    },
    {
        "line": 20,
        "fullcodeline": "scratch = *out;"
    },
    {
        "line": 21,
        "fullcodeline": "result = match(pc->x, sp, bol, flags, &scratch, depth+1);"
    },
    {
        "line": 28,
        "fullcodeline": "pc = pc->y;"
    },
    {
        "line": 32,
        "fullcodeline": "result = match(pc->x, sp, bol, flags, out, depth+1);"
    },
    {
        "line": 37,
        "fullcodeline": "pc = pc->y;"
    },
    {
        "line": 40,
        "fullcodeline": "scratch = *out;"
    },
    {
        "line": 41,
        "fullcodeline": "result = match(pc->x, sp, bol, flags, &scratch, depth+1);"
    },
    {
        "line": 46,
        "fullcodeline": "pc = pc->y;"
    },
    {
        "line": 50,
        "fullcodeline": "sp += chartorune(&c, sp);"
    },
    {
        "line": 53,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 56,
        "fullcodeline": "sp += chartorune(&c, sp);"
    },
    {
        "line": 61,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 64,
        "fullcodeline": "sp += chartorune(&c, sp);"
    },
    {
        "line": 71,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 74,
        "fullcodeline": "sp += chartorune(&c, sp);"
    },
    {
        "line": 84,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 87,
        "fullcodeline": "sp += chartorune(&c, sp);"
    },
    {
        "line": 97,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 100,
        "fullcodeline": "i = out->sub[pc->n].ep - out->sub[pc->n].sp;"
    },
    {
        "line": 110,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 138,
        "fullcodeline": "i = sp > bol && iswordchar(sp[-1]);"
    },
    {
        "line": 139,
        "fullcodeline": "i ^= iswordchar(sp[0]);"
    },
    {
        "line": 142,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 145,
        "fullcodeline": "i = sp > bol && iswordchar(sp[-1]);"
    },
    {
        "line": 149,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 154,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 158,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 22,
        "fullcodeline": "if (result == -1)"
    },
    {
        "line": 33,
        "fullcodeline": "if (result == -1)"
    },
    {
        "line": 42,
        "fullcodeline": "if (result == -1)"
    },
    {
        "line": 51,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 59,
        "fullcodeline": "if (isnewline(c))"
    },
    {
        "line": 65,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 67,
        "fullcodeline": "if (flags & REG_ICASE)"
    },
    {
        "line": 69,
        "fullcodeline": "if (c != pc->c)"
    },
    {
        "line": 75,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 77,
        "fullcodeline": "if (flags & REG_ICASE) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (c == 0)"
    },
    {
        "line": 90,
        "fullcodeline": "if (flags & REG_ICASE) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (flags & REG_ICASE) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (i > 0)"
    },
    {
        "line": 118,
        "fullcodeline": "if (flags & REG_NEWLINE) {"
    },
    {
        "line": 126,
        "fullcodeline": "if (*sp == 0) {"
    },
    {
        "line": 130,
        "fullcodeline": "if (flags & REG_NEWLINE) {"
    },
    {
        "line": 146,
        "fullcodeline": "i ^= iswordchar(sp[0]);"
    },
    {
        "line": 68,
        "fullcodeline": "c = canon(c);"
    },
    {
        "line": 109,
        "fullcodeline": "sp += i;"
    },
    {
        "line": 114,
        "fullcodeline": "if (sp == bol && !(flags & REG_NOTBOL)) {"
    },
    {
        "line": 115,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 127,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "return -1;"
    },
    {
        "line": 43,
        "fullcodeline": "return -1;"
    },
    {
        "line": 91,
        "fullcodeline": "if (incclasscanon(pc->cc, canon(c)))"
    },
    {
        "line": 102,
        "fullcodeline": "if (strncmpcanon(sp, out->sub[pc->n].sp, i))"
    },
    {
        "line": 131,
        "fullcodeline": "if (isnewline(*sp)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!incclasscanon(pc->cc, canon(c)))"
    },
    {
        "line": 94,
        "fullcodeline": "if (incclass(pc->cc, c))"
    },
    {
        "line": 105,
        "fullcodeline": "if (strncmp(sp, out->sub[pc->n].sp, i))"
    },
    {
        "line": 119,
        "fullcodeline": "if (sp > bol && isnewline(sp[-1])) {"
    },
    {
        "line": 120,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 132,
        "fullcodeline": "pc = pc + 1;"
    },
    {
        "line": 81,
        "fullcodeline": "if (!incclass(pc->cc, c))"
    }
]