[
    {
        "line": 5,
        "fullcodeline": "js_Buffer *sb = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "source = checkstring(J, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "re = js_toregexp(J, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "s = m.sub[0].sp;"
    },
    {
        "line": 21,
        "fullcodeline": "n = m.sub[0].ep - m.sub[0].sp;"
    },
    {
        "line": 91,
        "fullcodeline": "js_puts(J, &sb, s + n);"
    },
    {
        "line": 92,
        "fullcodeline": "js_putc(J, &sb, 0);"
    },
    {
        "line": 98,
        "fullcodeline": "js_pushstring(J, sb ? sb->s : \"\");"
    },
    {
        "line": 99,
        "fullcodeline": "js_endtry(J);"
    },
    {
        "line": 12,
        "fullcodeline": "if (js_regexec(re->prog, source, &m, 0)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (js_iscallable(J, 2)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (re->flags & JS_REGEXP_G) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (js_try(J)) {"
    },
    {
        "line": 13,
        "fullcodeline": "js_copy(J, 0);"
    },
    {
        "line": 24,
        "fullcodeline": "js_copy(J, 2);"
    },
    {
        "line": 25,
        "fullcodeline": "js_pushundefined(J);"
    },
    {
        "line": 28,
        "fullcodeline": "js_pushnumber(J, s - source); /* arg x+2: offset within search string */"
    },
    {
        "line": 29,
        "fullcodeline": "js_copy(J, 0); /* arg x+3: search string */"
    },
    {
        "line": 30,
        "fullcodeline": "js_call(J, 2 + x);"
    },
    {
        "line": 31,
        "fullcodeline": "r = js_tostring(J, -1);"
    },
    {
        "line": 32,
        "fullcodeline": "js_putm(J, &sb, source, s);"
    },
    {
        "line": 33,
        "fullcodeline": "js_puts(J, &sb, r);"
    },
    {
        "line": 34,
        "fullcodeline": "js_pop(J, 1);"
    },
    {
        "line": 79,
        "fullcodeline": "source = m.sub[0].ep;"
    },
    {
        "line": 95,
        "fullcodeline": "js_free(J, sb);"
    },
    {
        "line": 96,
        "fullcodeline": "js_throw(J);"
    },
    {
        "line": 26,
        "fullcodeline": "for (x = 0; m.sub[x].sp; ++x) /* arg 0..x: substring and subexps that matched */"
    },
    {
        "line": 27,
        "fullcodeline": "js_pushlstring(J, m.sub[x].sp, m.sub[x].ep - m.sub[x].sp);"
    },
    {
        "line": 36,
        "fullcodeline": "r = js_tostring(J, 2);"
    },
    {
        "line": 37,
        "fullcodeline": "js_putm(J, &sb, source, s);"
    },
    {
        "line": 80,
        "fullcodeline": "if (n == 0) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (!js_regexec(re->prog, source, &m, REG_NOTBOL))"
    },
    {
        "line": 39,
        "fullcodeline": "if (*r == '$') {"
    },
    {
        "line": 82,
        "fullcodeline": "js_putc(J, &sb, *source++);"
    },
    {
        "line": 71,
        "fullcodeline": "++r;"
    },
    {
        "line": 73,
        "fullcodeline": "js_putc(J, &sb, *r++);"
    },
    {
        "line": 40,
        "fullcodeline": "switch (*(++r)) {"
    },
    {
        "line": 41,
        "fullcodeline": "case 0: --r; /* end of string; back up */"
    },
    {
        "line": 43,
        "fullcodeline": "case '$': js_putc(J, &sb, '$'); break;"
    },
    {
        "line": 44,
        "fullcodeline": "case '`': js_putm(J, &sb, source, s); break;"
    },
    {
        "line": 45,
        "fullcodeline": "case '\\'': js_puts(J, &sb, s + n); break;"
    },
    {
        "line": 47,
        "fullcodeline": "js_putm(J, &sb, s, s + n);"
    },
    {
        "line": 51,
        "fullcodeline": "x = *r - '0';"
    },
    {
        "line": 67,
        "fullcodeline": "js_putc(J, &sb, '$');"
    },
    {
        "line": 68,
        "fullcodeline": "js_putc(J, &sb, *r);"
    },
    {
        "line": 52,
        "fullcodeline": "if (r[1] >= '0' && r[1] <= '9')"
    },
    {
        "line": 53,
        "fullcodeline": "x = x * 10 + *(++r) - '0';"
    },
    {
        "line": 54,
        "fullcodeline": "if (x > 0 && x < m.nsub) {"
    },
    {
        "line": 55,
        "fullcodeline": "js_putm(J, &sb, m.sub[x].sp, m.sub[x].ep);"
    },
    {
        "line": 57,
        "fullcodeline": "js_putc(J, &sb, '$');"
    },
    {
        "line": 58,
        "fullcodeline": "if (x > 10) {"
    },
    {
        "line": 59,
        "fullcodeline": "js_putc(J, &sb, '0' + x / 10);"
    },
    {
        "line": 60,
        "fullcodeline": "js_putc(J, &sb, '0' + x % 10);"
    },
    {
        "line": 62,
        "fullcodeline": "js_putc(J, &sb, '0' + x);"
    }
]