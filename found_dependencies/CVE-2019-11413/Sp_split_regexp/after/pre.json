[
    {
        "line": 9,
        "fullcodeline": "text = checkstring(J, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "re = js_toregexp(J, 1);"
    },
    {
        "line": 11,
        "fullcodeline": "limit = js_isdefined(J, 2) ? js_tointeger(J, 2) : 1 << 30;"
    },
    {
        "line": 13,
        "fullcodeline": "js_newarray(J);"
    },
    {
        "line": 14,
        "fullcodeline": "len = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "e = text + strlen(text);"
    },
    {
        "line": 28,
        "fullcodeline": "p = a = text;"
    },
    {
        "line": 56,
        "fullcodeline": "js_pushstring(J, p);"
    },
    {
        "line": 19,
        "fullcodeline": "if (e == text) {"
    },
    {
        "line": 29,
        "fullcodeline": "while (a < e) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (len == limit) return;"
    },
    {
        "line": 57,
        "fullcodeline": "js_setindex(J, -2, len);"
    },
    {
        "line": 33,
        "fullcodeline": "b = m.sub[0].sp;"
    },
    {
        "line": 34,
        "fullcodeline": "c = m.sub[0].ep;"
    },
    {
        "line": 43,
        "fullcodeline": "js_pushlstring(J, p, b - p);"
    },
    {
        "line": 44,
        "fullcodeline": "js_setindex(J, -2, len++);"
    },
    {
        "line": 52,
        "fullcodeline": "a = p = c;"
    },
    {
        "line": 20,
        "fullcodeline": "if (js_doregexec(J, re->prog, text, &m, 0)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (js_doregexec(J, re->prog, a, &m, a > text ? REG_NOTBOL : 0))"
    },
    {
        "line": 37,
        "fullcodeline": "if (b == p) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (len == limit) return;"
    },
    {
        "line": 46,
        "fullcodeline": "for (k = 1; k < m.nsub; ++k) {"
    },
    {
        "line": 22,
        "fullcodeline": "js_pushliteral(J, \"\");"
    },
    {
        "line": 38,
        "fullcodeline": "++a;"
    },
    {
        "line": 48,
        "fullcodeline": "js_pushlstring(J, m.sub[k].sp, m.sub[k].ep - m.sub[k].sp);"
    },
    {
        "line": 49,
        "fullcodeline": "js_setindex(J, -2, len++);"
    },
    {
        "line": 21,
        "fullcodeline": "if (len == limit) return;"
    },
    {
        "line": 23,
        "fullcodeline": "js_setindex(J, -2, 0);"
    },
    {
        "line": 47,
        "fullcodeline": "if (len == limit) return;"
    }
]