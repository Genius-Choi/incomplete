[
    {
        "line": 3,
        "fullcodeline": "u8 one_entry_in_sg = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned long tempCipherLen = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "__be32 counter = cpu_to_be32(1);"
    },
    {
        "line": 7,
        "fullcodeline": "int retval = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "struct crypto_aead *tfm = crypto_aead_reqtfm(req);"
    },
    {
        "line": 9,
        "fullcodeline": "struct aesni_rfc4106_gcm_ctx *ctx = aesni_rfc4106_gcm_ctx_get(tfm);"
    },
    {
        "line": 11,
        "fullcodeline": "void *aes_ctx = &(ctx->aes_key_expanded);"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned long auth_tag_len = crypto_aead_authsize(tfm);"
    },
    {
        "line": 13,
        "fullcodeline": "u8 iv_and_authTag[32+AESNI_ALIGN];"
    },
    {
        "line": 14,
        "fullcodeline": "u8 *iv = (u8 *) PTR_ALIGN((u8 *)iv_and_authTag, AESNI_ALIGN);"
    },
    {
        "line": 15,
        "fullcodeline": "u8 *authTag = iv + 16;"
    },
    {
        "line": 35,
        "fullcodeline": "tempCipherLen = (unsigned long)(req->cryptlen - auth_tag_len);"
    },
    {
        "line": 41,
        "fullcodeline": "*((__be32 *)(iv+12)) = counter;"
    },
    {
        "line": 67,
        "fullcodeline": "aesni_gcm_dec_tfm(aes_ctx, dst, src, tempCipherLen, iv,"
    },
    {
        "line": 72,
        "fullcodeline": "retval = crypto_memneq(src + tempCipherLen, authTag, auth_tag_len) ?"
    },
    {
        "line": 21,
        "fullcodeline": "if (unlikely((req->cryptlen < auth_tag_len) ||"
    },
    {
        "line": 24,
        "fullcodeline": "if (unlikely(auth_tag_len != 8 && auth_tag_len != 12 && auth_tag_len != 16))"
    },
    {
        "line": 26,
        "fullcodeline": "if (unlikely(key_len != AES_KEYSIZE_128 &&"
    },
    {
        "line": 37,
        "fullcodeline": "for (i = 0; i < 4; i++)"
    },
    {
        "line": 39,
        "fullcodeline": "for (i = 0; i < 8; i++)"
    },
    {
        "line": 43,
        "fullcodeline": "if ((sg_is_last(req->src)) && (sg_is_last(req->assoc))) {"
    },
    {
        "line": 68,
        "fullcodeline": "ctx->hash_subkey, assoc, (unsigned long)req->assoclen,"
    },
    {
        "line": 44,
        "fullcodeline": "one_entry_in_sg = 1;"
    },
    {
        "line": 45,
        "fullcodeline": "scatterwalk_start(&src_sg_walk, req->src);"
    },
    {
        "line": 46,
        "fullcodeline": "scatterwalk_start(&assoc_sg_walk, req->assoc);"
    },
    {
        "line": 47,
        "fullcodeline": "src = scatterwalk_map(&src_sg_walk);"
    },
    {
        "line": 48,
        "fullcodeline": "assoc = scatterwalk_map(&assoc_sg_walk);"
    },
    {
        "line": 49,
        "fullcodeline": "dst = src;"
    },
    {
        "line": 73,
        "fullcodeline": "-EBADMSG : 0;"
    },
    {
        "line": 80,
        "fullcodeline": "scatterwalk_unmap(src);"
    },
    {
        "line": 81,
        "fullcodeline": "scatterwalk_unmap(assoc);"
    },
    {
        "line": 82,
        "fullcodeline": "scatterwalk_done(&src_sg_walk, 0, 0);"
    },
    {
        "line": 83,
        "fullcodeline": "scatterwalk_done(&assoc_sg_walk, 0, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "(req->assoclen != 8 && req->assoclen != 12)))"
    },
    {
        "line": 23,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 25,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 28,
        "fullcodeline": "key_len != AES_KEYSIZE_256))"
    },
    {
        "line": 29,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 38,
        "fullcodeline": "*(iv+i) = ctx->nonce[i];"
    },
    {
        "line": 40,
        "fullcodeline": "*(iv+4+i) = req->iv[i];"
    },
    {
        "line": 50,
        "fullcodeline": "if (unlikely(req->src != req->dst)) {"
    },
    {
        "line": 57,
        "fullcodeline": "src = kmalloc(req->cryptlen + req->assoclen, GFP_ATOMIC);"
    },
    {
        "line": 60,
        "fullcodeline": "assoc = (src + req->cryptlen + auth_tag_len);"
    },
    {
        "line": 61,
        "fullcodeline": "scatterwalk_map_and_copy(src, req->src, 0, req->cryptlen, 0);"
    },
    {
        "line": 62,
        "fullcodeline": "scatterwalk_map_and_copy(assoc, req->assoc, 0,"
    },
    {
        "line": 64,
        "fullcodeline": "dst = src;"
    },
    {
        "line": 76,
        "fullcodeline": "if (unlikely(req->src != req->dst)) {"
    },
    {
        "line": 85,
        "fullcodeline": "scatterwalk_map_and_copy(dst, req->dst, 0, req->cryptlen, 1);"
    },
    {
        "line": 86,
        "fullcodeline": "kfree(src);"
    },
    {
        "line": 27,
        "fullcodeline": "key_len != AES_KEYSIZE_192 &&"
    },
    {
        "line": 51,
        "fullcodeline": "scatterwalk_start(&dst_sg_walk, req->dst);"
    },
    {
        "line": 52,
        "fullcodeline": "dst = scatterwalk_map(&dst_sg_walk);"
    },
    {
        "line": 58,
        "fullcodeline": "if (!src)"
    },
    {
        "line": 77,
        "fullcodeline": "scatterwalk_unmap(dst);"
    },
    {
        "line": 78,
        "fullcodeline": "scatterwalk_done(&dst_sg_walk, 0, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "return -ENOMEM;"
    }
]