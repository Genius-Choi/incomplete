[
    {
        "line": 14,
        "fullcodeline": "trace_xfs_attr_list_leaf(context);"
    },
    {
        "line": 16,
        "fullcodeline": "leaf = bp->b_addr;"
    },
    {
        "line": 17,
        "fullcodeline": "xfs_attr3_leaf_hdr_from_disk(mp->m_attr_geo, &ichdr, leaf);"
    },
    {
        "line": 18,
        "fullcodeline": "entries = xfs_attr3_leaf_entryp(leaf);"
    },
    {
        "line": 20,
        "fullcodeline": "cursor = context->cursor;"
    },
    {
        "line": 21,
        "fullcodeline": "cursor->initted = 1;"
    },
    {
        "line": 49,
        "fullcodeline": "context->resynch = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "retval = 0;"
    },
    {
        "line": 120,
        "fullcodeline": "trace_xfs_attr_list_leaf_end(context);"
    },
    {
        "line": 55,
        "fullcodeline": "for (; i < ichdr.count; entry++, i++) {"
    },
    {
        "line": 27,
        "fullcodeline": "entry = &entries[0];"
    },
    {
        "line": 118,
        "fullcodeline": "cursor->offset++;"
    },
    {
        "line": 28,
        "fullcodeline": "for (i = 0; i < ichdr.count; entry++, i++) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (i == ichdr.count) {"
    },
    {
        "line": 46,
        "fullcodeline": "entry = &entries[0];"
    },
    {
        "line": 47,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "if (be32_to_cpu(entry->hashval) != cursor->hashval) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (entry->flags & XFS_ATTR_INCOMPLETE)"
    },
    {
        "line": 64,
        "fullcodeline": "if (entry->flags & XFS_ATTR_LOCAL) {"
    },
    {
        "line": 42,
        "fullcodeline": "trace_xfs_attr_list_notfound(context);"
    },
    {
        "line": 57,
        "fullcodeline": "cursor->hashval = be32_to_cpu(entry->hashval);"
    },
    {
        "line": 58,
        "fullcodeline": "cursor->offset = 0;"
    },
    {
        "line": 65,
        "fullcodeline": "xfs_attr_leaf_name_local_t *name_loc ="
    },
    {
        "line": 68,
        "fullcodeline": "retval = context->put_listent(context,"
    },
    {
        "line": 29,
        "fullcodeline": "if (be32_to_cpu(entry->hashval) == cursor->hashval) {"
    },
    {
        "line": 66,
        "fullcodeline": "xfs_attr3_leaf_name_local(leaf, i);"
    },
    {
        "line": 77,
        "fullcodeline": "xfs_attr_leaf_name_remote_t *name_rmt ="
    },
    {
        "line": 80,
        "fullcodeline": "int valuelen = be32_to_cpu(name_rmt->valuelen);"
    },
    {
        "line": 34,
        "fullcodeline": "context->dupcnt++;"
    },
    {
        "line": 71,
        "fullcodeline": "(int)name_loc->namelen,"
    },
    {
        "line": 72,
        "fullcodeline": "be16_to_cpu(name_loc->valuelen),"
    },
    {
        "line": 78,
        "fullcodeline": "xfs_attr3_leaf_name_remote(leaf, i);"
    },
    {
        "line": 30,
        "fullcodeline": "if (cursor->offset == context->dupcnt) {"
    },
    {
        "line": 85,
        "fullcodeline": "memset((char *)&args, 0, sizeof(args));"
    },
    {
        "line": 87,
        "fullcodeline": "args.dp = context->dp;"
    },
    {
        "line": 88,
        "fullcodeline": "args.whichfork = XFS_ATTR_FORK;"
    },
    {
        "line": 89,
        "fullcodeline": "args.valuelen = valuelen;"
    },
    {
        "line": 90,
        "fullcodeline": "args.rmtvaluelen = valuelen;"
    },
    {
        "line": 91,
        "fullcodeline": "args.value = kmem_alloc(valuelen, KM_SLEEP | KM_NOFS);"
    },
    {
        "line": 92,
        "fullcodeline": "args.rmtblkno = be32_to_cpu(name_rmt->valueblk);"
    },
    {
        "line": 93,
        "fullcodeline": "args.rmtblkcnt = xfs_attr3_rmt_blocks("
    },
    {
        "line": 95,
        "fullcodeline": "retval = xfs_attr_rmtval_get(&args);"
    },
    {
        "line": 98,
        "fullcodeline": "retval = context->put_listent(context,"
    },
    {
        "line": 104,
        "fullcodeline": "kmem_free(args.value);"
    },
    {
        "line": 31,
        "fullcodeline": "context->dupcnt = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "} else if (be32_to_cpu(entry->hashval) >"
    },
    {
        "line": 106,
        "fullcodeline": "retval = context->put_listent(context,"
    },
    {
        "line": 37,
        "fullcodeline": "context->dupcnt = 0;"
    },
    {
        "line": 101,
        "fullcodeline": "(int)name_rmt->namelen,"
    },
    {
        "line": 109,
        "fullcodeline": "(int)name_rmt->namelen,"
    }
]