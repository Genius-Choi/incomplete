[
    {
        "line": 7,
        "fullcodeline": "struct sctp_chunk\t*asconf_ack = arg;"
    },
    {
        "line": 8,
        "fullcodeline": "struct sctp_chunk\t*last_asconf = asoc->addip_last_asconf;"
    },
    {
        "line": 10,
        "fullcodeline": "struct sctp_paramhdr\t*err_param = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "rcvd_serial = ntohl(addip_hdr->serial);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!sctp_vtag_verify(asconf_ack, asoc)) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!net->sctp.addip_noauth && !asconf_ack->auth)"
    },
    {
        "line": 30,
        "fullcodeline": "if (!sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"
    },
    {
        "line": 38,
        "fullcodeline": "if (!sctp_verify_asconf(asoc, asconf_ack, false, &err_param))"
    },
    {
        "line": 55,
        "fullcodeline": "if (ADDIP_SERIAL_gte(rcvd_serial, sent_serial + 1) &&"
    },
    {
        "line": 79,
        "fullcodeline": "if ((rcvd_serial == sent_serial) && asoc->addip_last_asconf) {"
    },
    {
        "line": 15,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,"
    },
    {
        "line": 44,
        "fullcodeline": "sent_serial = ntohl(addip_hdr->serial);"
    },
    {
        "line": 56,
        "fullcodeline": "!(asoc->addip_last_asconf)) {"
    },
    {
        "line": 57,
        "fullcodeline": "abort = sctp_make_abort(asoc, asconf_ack,"
    },
    {
        "line": 67,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,"
    },
    {
        "line": 69,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL());"
    },
    {
        "line": 70,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,"
    },
    {
        "line": 72,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,"
    },
    {
        "line": 74,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS);"
    },
    {
        "line": 75,
        "fullcodeline": "SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB);"
    },
    {
        "line": 80,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,"
    },
    {
        "line": 93,
        "fullcodeline": "abort = sctp_make_abort(asoc, asconf_ack,"
    },
    {
        "line": 103,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL());"
    },
    {
        "line": 104,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,"
    },
    {
        "line": 106,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,"
    },
    {
        "line": 108,
        "fullcodeline": "SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS);"
    },
    {
        "line": 109,
        "fullcodeline": "SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB);"
    },
    {
        "line": 17,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 27,
        "fullcodeline": "return sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 31,
        "fullcodeline": "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,"
    },
    {
        "line": 39,
        "fullcodeline": "return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,"
    },
    {
        "line": 46,
        "fullcodeline": "sent_serial = asoc->addip_serial - 1;"
    },
    {
        "line": 68,
        "fullcodeline": "SCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO));"
    },
    {
        "line": 71,
        "fullcodeline": "SCTP_ERROR(ECONNABORTED));"
    },
    {
        "line": 73,
        "fullcodeline": "SCTP_PERR(SCTP_ERROR_ASCONF_ACK));"
    },
    {
        "line": 81,
        "fullcodeline": "SCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO));"
    },
    {
        "line": 83,
        "fullcodeline": "if (!sctp_process_asconf_ack((struct sctp_association *)asoc,"
    },
    {
        "line": 105,
        "fullcodeline": "SCTP_ERROR(ECONNABORTED));"
    },
    {
        "line": 107,
        "fullcodeline": "SCTP_PERR(SCTP_ERROR_ASCONF_ACK));"
    },
    {
        "line": 40,
        "fullcodeline": "(void *)err_param, commands);"
    },
    {
        "line": 60,
        "fullcodeline": "sctp_init_cause(abort, SCTP_ERROR_ASCONF_ACK, 0);"
    },
    {
        "line": 61,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,"
    },
    {
        "line": 88,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SEND_NEXT_ASCONF,"
    },
    {
        "line": 96,
        "fullcodeline": "sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0);"
    },
    {
        "line": 97,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,"
    },
    {
        "line": 62,
        "fullcodeline": "SCTP_CHUNK(abort));"
    },
    {
        "line": 98,
        "fullcodeline": "SCTP_CHUNK(abort));"
    }
]