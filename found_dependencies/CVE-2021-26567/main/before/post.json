[
    {
        "line": 4,
        "fullcodeline": "int infoOnly = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "int writeToStdio = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int readFromStdin = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int object_type = LC;"
    },
    {
        "line": 8,
        "fullcodeline": "int def_srate = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "int downMatrix = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int format = 1;"
    },
    {
        "line": 11,
        "fullcodeline": "int outputFormat = FAAD_FMT_16BIT;"
    },
    {
        "line": 12,
        "fullcodeline": "int outfile_set = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "int adts_out = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "int old_format = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "int showHelp = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "int mp4file = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "int noGapless = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "char aacFileName[255];"
    },
    {
        "line": 20,
        "fullcodeline": "char audioFileName[255];"
    },
    {
        "line": 21,
        "fullcodeline": "char adtsFileName[255];"
    },
    {
        "line": 22,
        "fullcodeline": "unsigned char header[8];"
    },
    {
        "line": 23,
        "fullcodeline": "float length = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "unsigned long cap = NeAACDecGetCapabilities();"
    },
    {
        "line": 37,
        "fullcodeline": "progName = argv[0];"
    },
    {
        "line": 164,
        "fullcodeline": "faad_fprintf(stderr, \" *********** Ahead Software MPEG-4 AAC Decoder V%s ******************\\n\\n\", FAAD2_VERSION);"
    },
    {
        "line": 165,
        "fullcodeline": "faad_fprintf(stderr, \" Build: %s\\n\", __DATE__);"
    },
    {
        "line": 166,
        "fullcodeline": "faad_fprintf(stderr, \" Copyright 2002-2004: Ahead Software AG\\n\");"
    },
    {
        "line": 167,
        "fullcodeline": "faad_fprintf(stderr, \" http://www.audiocoding.com\\n\");"
    },
    {
        "line": 172,
        "fullcodeline": "faad_fprintf(stderr, \"\\n\");"
    },
    {
        "line": 173,
        "fullcodeline": "faad_fprintf(stderr, \" This program is free software; you can redistribute it and/or modify\\n\");"
    },
    {
        "line": 174,
        "fullcodeline": "faad_fprintf(stderr, \" it under the terms of the GNU General Public License.\\n\");"
    },
    {
        "line": 175,
        "fullcodeline": "faad_fprintf(stderr, \"\\n\");"
    },
    {
        "line": 176,
        "fullcodeline": "faad_fprintf(stderr, \" **************************************************************************\\n\\n\");"
    },
    {
        "line": 196,
        "fullcodeline": "strcpy(aacFileName, argv[optind]);"
    },
    {
        "line": 201,
        "fullcodeline": "begin = clock();"
    },
    {
        "line": 239,
        "fullcodeline": "fread(header, 1, 8, hMP4File);"
    },
    {
        "line": 168,
        "fullcodeline": "if (cap & FIXED_POINT_CAP)"
    },
    {
        "line": 181,
        "fullcodeline": "if (((argc - optind) < 1) || showHelp)"
    },
    {
        "line": 207,
        "fullcodeline": "if(!writeToStdio && !outfile_set)"
    },
    {
        "line": 220,
        "fullcodeline": "if (0 == strcmp(aacFileName, \"-\")) {"
    },
    {
        "line": 241,
        "fullcodeline": "if (! readFromStdin )"
    },
    {
        "line": 244,
        "fullcodeline": "if (header[4] == 'f' && header[5] == 't' && header[6] == 'y' && header[7] == 'p')"
    },
    {
        "line": 269,
        "fullcodeline": "if (!result && !infoOnly)"
    },
    {
        "line": 39,
        "fullcodeline": "int c = -1;"
    },
    {
        "line": 40,
        "fullcodeline": "int option_index = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "static struct option long_options[] = {"
    },
    {
        "line": 58,
        "fullcodeline": "c = getopt_long(argc, argv, \"o:a:s:f:b:l:wgdhitq\","
    },
    {
        "line": 169,
        "fullcodeline": "faad_fprintf(stderr, \" Fixed point version\\n\");"
    },
    {
        "line": 183,
        "fullcodeline": "usage();"
    },
    {
        "line": 209,
        "fullcodeline": "strcpy(audioFileName, aacFileName);"
    },
    {
        "line": 211,
        "fullcodeline": "fnp = (char *)strrchr(audioFileName,'.');"
    },
    {
        "line": 216,
        "fullcodeline": "strcat(audioFileName, file_ext[format]);"
    },
    {
        "line": 221,
        "fullcodeline": "faad_fprintf(stderr, \"Reading from stdin: %s\\n\", aacFileName);"
    },
    {
        "line": 222,
        "fullcodeline": "readFromStdin = 1;"
    },
    {
        "line": 223,
        "fullcodeline": "hMP4File  = stdin;"
    },
    {
        "line": 242,
        "fullcodeline": "fclose(hMP4File);"
    },
    {
        "line": 245,
        "fullcodeline": "mp4file = 1;"
    },
    {
        "line": 249,
        "fullcodeline": "result = decodeMP4file(aacFileName, audioFileName, adtsFileName, writeToStdio,"
    },
    {
        "line": 278,
        "fullcodeline": "float dec_length = (float)(clock() - begin)/(float)CLOCKS_PER_SEC;"
    },
    {
        "line": 280,
        "fullcodeline": "faad_fprintf(stderr, \"Decoding %s took: %5.2f sec. %5.2fx real-time.\\n\", aacFileName,"
    },
    {
        "line": 61,
        "fullcodeline": "if (c == -1)"
    },
    {
        "line": 171,
        "fullcodeline": "faad_fprintf(stderr, \" Floating point version\\n\");"
    },
    {
        "line": 230,
        "fullcodeline": "mp4file = 0;"
    },
    {
        "line": 231,
        "fullcodeline": "hMP4File = fopen(aacFileName, \"rb\");"
    },
    {
        "line": 264,
        "fullcodeline": "result = decodeAACfile(aacFileName, audioFileName, adtsFileName, writeToStdio,"
    },
    {
        "line": 281,
        "fullcodeline": "dec_length, length/dec_length);"
    },
    {
        "line": 42,
        "fullcodeline": "{ \"quiet\",      0, 0, 'q' },"
    },
    {
        "line": 43,
        "fullcodeline": "{ \"outfile\",    0, 0, 'o' },"
    },
    {
        "line": 44,
        "fullcodeline": "{ \"adtsout\",    0, 0, 'a' },"
    },
    {
        "line": 45,
        "fullcodeline": "{ \"oldformat\",  0, 0, 't' },"
    },
    {
        "line": 46,
        "fullcodeline": "{ \"format\",     0, 0, 'f' },"
    },
    {
        "line": 47,
        "fullcodeline": "{ \"bits\",       0, 0, 'b' },"
    },
    {
        "line": 48,
        "fullcodeline": "{ \"samplerate\", 0, 0, 's' },"
    },
    {
        "line": 49,
        "fullcodeline": "{ \"objecttype\", 0, 0, 'l' },"
    },
    {
        "line": 50,
        "fullcodeline": "{ \"downmix\",    0, 0, 'd' },"
    },
    {
        "line": 51,
        "fullcodeline": "{ \"info\",       0, 0, 'i' },"
    },
    {
        "line": 52,
        "fullcodeline": "{ \"stdio\",      0, 0, 'w' },"
    },
    {
        "line": 53,
        "fullcodeline": "{ \"stdio\",      0, 0, 'g' },"
    },
    {
        "line": 54,
        "fullcodeline": "{ \"help\",       0, 0, 'h' },"
    },
    {
        "line": 55,
        "fullcodeline": "{ 0, 0, 0, 0 }"
    },
    {
        "line": 138,
        "fullcodeline": "old_format = 1;"
    },
    {
        "line": 141,
        "fullcodeline": "downMatrix = 1;"
    },
    {
        "line": 144,
        "fullcodeline": "writeToStdio = 1;"
    },
    {
        "line": 147,
        "fullcodeline": "noGapless = 1;"
    },
    {
        "line": 150,
        "fullcodeline": "infoOnly = 1;"
    },
    {
        "line": 153,
        "fullcodeline": "showHelp = 1;"
    },
    {
        "line": 156,
        "fullcodeline": "quiet = 1;"
    },
    {
        "line": 214,
        "fullcodeline": "fnp[0] = '\\0';"
    },
    {
        "line": 232,
        "fullcodeline": "if (!hMP4File)"
    },
    {
        "line": 253,
        "fullcodeline": "if (readFromStdin == 1) {"
    },
    {
        "line": 234,
        "fullcodeline": "faad_fprintf(stderr, \"Error opening file: %s\\n\", aacFileName);"
    },
    {
        "line": 254,
        "fullcodeline": "ungetc(header[7],hMP4File);"
    },
    {
        "line": 255,
        "fullcodeline": "ungetc(header[6],hMP4File);"
    },
    {
        "line": 256,
        "fullcodeline": "ungetc(header[5],hMP4File);"
    },
    {
        "line": 257,
        "fullcodeline": "ungetc(header[4],hMP4File);"
    },
    {
        "line": 258,
        "fullcodeline": "ungetc(header[3],hMP4File);"
    },
    {
        "line": 259,
        "fullcodeline": "ungetc(header[2],hMP4File);"
    },
    {
        "line": 260,
        "fullcodeline": "ungetc(header[1],hMP4File);"
    },
    {
        "line": 261,
        "fullcodeline": "ungetc(header[0],hMP4File);"
    },
    {
        "line": 68,
        "fullcodeline": "outfile_set = 1;"
    },
    {
        "line": 69,
        "fullcodeline": "strcpy(audioFileName, optarg);"
    },
    {
        "line": 75,
        "fullcodeline": "adts_out = 1;"
    },
    {
        "line": 76,
        "fullcodeline": "strcpy(adtsFileName, optarg);"
    },
    {
        "line": 82,
        "fullcodeline": "char dr[10];"
    },
    {
        "line": 93,
        "fullcodeline": "char dr[10];"
    },
    {
        "line": 107,
        "fullcodeline": "char dr[10];"
    },
    {
        "line": 121,
        "fullcodeline": "char dr[10];"
    },
    {
        "line": 83,
        "fullcodeline": "if (sscanf(optarg, \"%s\", dr) < 1) {"
    },
    {
        "line": 94,
        "fullcodeline": "if (sscanf(optarg, \"%s\", dr) < 1)"
    },
    {
        "line": 108,
        "fullcodeline": "if (sscanf(optarg, \"%s\", dr) < 1)"
    },
    {
        "line": 122,
        "fullcodeline": "if (sscanf(optarg, \"%s\", dr) < 1)"
    },
    {
        "line": 84,
        "fullcodeline": "def_srate = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "format = 1;"
    },
    {
        "line": 110,
        "fullcodeline": "outputFormat = FAAD_FMT_16BIT; /* just use default */"
    },
    {
        "line": 124,
        "fullcodeline": "object_type = LC; /* default */"
    },
    {
        "line": 86,
        "fullcodeline": "def_srate = atoi(dr);"
    },
    {
        "line": 98,
        "fullcodeline": "format = atoi(dr);"
    },
    {
        "line": 112,
        "fullcodeline": "outputFormat = atoi(dr);"
    },
    {
        "line": 126,
        "fullcodeline": "object_type = atoi(dr);"
    },
    {
        "line": 99,
        "fullcodeline": "if ((format < 1) || (format > 2))"
    },
    {
        "line": 113,
        "fullcodeline": "if ((outputFormat < 1) || (outputFormat > 5))"
    },
    {
        "line": 127,
        "fullcodeline": "if ((object_type != LC) &&"
    },
    {
        "line": 100,
        "fullcodeline": "showHelp = 1;"
    },
    {
        "line": 114,
        "fullcodeline": "showHelp = 1;"
    },
    {
        "line": 130,
        "fullcodeline": "(object_type != LD))"
    },
    {
        "line": 132,
        "fullcodeline": "showHelp = 1;"
    },
    {
        "line": 129,
        "fullcodeline": "(object_type != LTP) &&"
    },
    {
        "line": 128,
        "fullcodeline": "(object_type != MAIN) &&"
    }
]