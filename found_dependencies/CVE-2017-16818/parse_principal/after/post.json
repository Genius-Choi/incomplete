[
    {
        "line": 50,
        "fullcodeline": "ldout(cct, 0) << \"Supplied principal is discarded: \" << s << dendl;"
    },
    {
        "line": 4,
        "fullcodeline": "if ((t == TokenID::AWS) && (s == \"*\")) {"
    },
    {
        "line": 5,
        "fullcodeline": "return Principal::wildcard();"
    },
    {
        "line": 8,
        "fullcodeline": "} else if (t == TokenID::CanonicalUser) {"
    },
    {
        "line": 11,
        "fullcodeline": "} else if (t == TokenID::AWS) {"
    },
    {
        "line": 12,
        "fullcodeline": "auto a = ARN::parse(s);"
    },
    {
        "line": 29,
        "fullcodeline": "static const char rx_str[] = \"([^/]*)/(.*)\";"
    },
    {
        "line": 30,
        "fullcodeline": "static const regex rx(rx_str, sizeof(rx_str) - 1,"
    },
    {
        "line": 13,
        "fullcodeline": "if (!a) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (a->resource == \"root\") {"
    },
    {
        "line": 31,
        "fullcodeline": "ECMAScript | optimize);"
    },
    {
        "line": 33,
        "fullcodeline": "if (regex_match(a->resource, match, rx)) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (std::none_of(s.begin(), s.end(),"
    },
    {
        "line": 26,
        "fullcodeline": "return Principal::tenant(std::move(a->account));"
    },
    {
        "line": 34,
        "fullcodeline": "if (match.size() != 3) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (match[1] == \"user\") {"
    },
    {
        "line": 43,
        "fullcodeline": "if (match[1] == \"role\") {"
    },
    {
        "line": 21,
        "fullcodeline": "return Principal::tenant(std::move(s));"
    },
    {
        "line": 39,
        "fullcodeline": "return Principal::user(std::move(a->account),"
    },
    {
        "line": 44,
        "fullcodeline": "return Principal::role(std::move(a->account),"
    }
]