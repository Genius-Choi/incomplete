[
    {
        "line": 5,
        "fullcodeline": "blosc2_context* context = thread_context->parent_context;"
    },
    {
        "line": 6,
        "fullcodeline": "int dont_split = (context->header_flags & 0x10) >> 4;"
    },
    {
        "line": 7,
        "fullcodeline": "int dict_training = context->use_dict && context->dict_cdict == NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "int32_t ctbytes = 0;              /* number of compressed bytes in block */"
    },
    {
        "line": 12,
        "fullcodeline": "int32_t typesize = context->typesize;"
    },
    {
        "line": 16,
        "fullcodeline": "uint8_t *_tmp = tmp, *_tmp2 = tmp2;"
    },
    {
        "line": 17,
        "fullcodeline": "uint8_t *_tmp3 = thread_context->tmp4;"
    },
    {
        "line": 18,
        "fullcodeline": "int last_filter_index = last_filter(context->filters, 'c');"
    },
    {
        "line": 19,
        "fullcodeline": "bool memcpyed = context->header_flags & (uint8_t)BLOSC_MEMCPYED;"
    },
    {
        "line": 54,
        "fullcodeline": "neblock = bsize / nstreams;"
    },
    {
        "line": 21,
        "fullcodeline": "if (last_filter_index >= 0 || context->prefilter != NULL) {"
    },
    {
        "line": 42,
        "fullcodeline": "assert(context->clevel > 0);"
    },
    {
        "line": 45,
        "fullcodeline": "accel = get_accel(context);"
    },
    {
        "line": 55,
        "fullcodeline": "for (j = 0; j < nstreams; j++) {"
    },
    {
        "line": 33,
        "fullcodeline": "_src = pipeline_c(thread_context, bsize, src, offset, _tmp, _tmp2, _tmp3);"
    },
    {
        "line": 48,
        "fullcodeline": "if (!dont_split && !leftoverblock && !dict_training) {"
    },
    {
        "line": 49,
        "fullcodeline": "nstreams = (int32_t)typesize;"
    },
    {
        "line": 63,
        "fullcodeline": "const uint8_t* ip = (uint8_t*)_src + j * neblock;"
    },
    {
        "line": 64,
        "fullcodeline": "const uint8_t* ipbound = (uint8_t*)_src + (j + 1) * neblock;"
    },
    {
        "line": 72,
        "fullcodeline": "maxout = neblock;"
    },
    {
        "line": 163,
        "fullcodeline": "dest += cbytes;"
    },
    {
        "line": 164,
        "fullcodeline": "ntbytes += cbytes;"
    },
    {
        "line": 165,
        "fullcodeline": "ctbytes += cbytes;"
    },
    {
        "line": 23,
        "fullcodeline": "if (memcpyed && context->prefilter != NULL) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (_src == NULL) {"
    },
    {
        "line": 39,
        "fullcodeline": "_src = src + offset;"
    },
    {
        "line": 52,
        "fullcodeline": "nstreams = 1;"
    },
    {
        "line": 56,
        "fullcodeline": "if (!dict_training) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (ntbytes + maxout > maxbytes) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (cbytes > maxout) {"
    },
    {
        "line": 146,
        "fullcodeline": "if (cbytes < 0) {"
    },
    {
        "line": 150,
        "fullcodeline": "if (!dict_training) {"
    },
    {
        "line": 25,
        "fullcodeline": "_src = pipeline_c(thread_context, bsize, src, offset, dest, _tmp2, _tmp3);"
    },
    {
        "line": 57,
        "fullcodeline": "dest += sizeof(int32_t);"
    },
    {
        "line": 58,
        "fullcodeline": "ntbytes += sizeof(int32_t);"
    },
    {
        "line": 59,
        "fullcodeline": "ctbytes += sizeof(int32_t);"
    },
    {
        "line": 67,
        "fullcodeline": "int32_t value = _src[j * neblock];"
    },
    {
        "line": 80,
        "fullcodeline": "maxout = (int64_t)maxbytes - (int64_t)ntbytes;"
    },
    {
        "line": 88,
        "fullcodeline": "memcpy(dest, _src + j * neblock, (unsigned int)neblock);"
    },
    {
        "line": 89,
        "fullcodeline": "cbytes = (int32_t)neblock;"
    },
    {
        "line": 161,
        "fullcodeline": "_sw32(dest - 4, cbytes);"
    },
    {
        "line": 27,
        "fullcodeline": "if (_src == NULL) {"
    },
    {
        "line": 36,
        "fullcodeline": "return -9;  // signals a problem with the filter pipeline"
    },
    {
        "line": 68,
        "fullcodeline": "_sw32(dest - 4, -value);"
    },
    {
        "line": 81,
        "fullcodeline": "if (maxout <= 0) {"
    },
    {
        "line": 144,
        "fullcodeline": "return -1;"
    },
    {
        "line": 148,
        "fullcodeline": "return -2;"
    },
    {
        "line": 91,
        "fullcodeline": "else if (context->compcode == BLOSC_BLOSCLZ) {"
    },
    {
        "line": 151,
        "fullcodeline": "if (cbytes == 0 || cbytes == neblock) {"
    },
    {
        "line": 158,
        "fullcodeline": "memcpy(dest, _src + j * neblock, (unsigned int)neblock);"
    },
    {
        "line": 159,
        "fullcodeline": "cbytes = neblock;"
    },
    {
        "line": 28,
        "fullcodeline": "return -9;  // signals a problem with the filter pipeline"
    },
    {
        "line": 92,
        "fullcodeline": "cbytes = blosclz_compress(context->clevel, _src + j * neblock,"
    },
    {
        "line": 155,
        "fullcodeline": "if ((ntbytes + neblock) > maxbytes) {"
    },
    {
        "line": 136,
        "fullcodeline": "blosc_compcode_to_compname(context->compcode, &compname);"
    },
    {
        "line": 137,
        "fullcodeline": "fprintf(stderr, \"Blosc has not been compiled with '%s' \", compname);"
    },
    {
        "line": 139,
        "fullcodeline": "return -5;    /* signals no compression support */"
    }
]