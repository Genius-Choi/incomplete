[
    {
        "line": 6,
        "fullcodeline": "amf_ue_t *amf_ue = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "amf_sess_t *sess = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "ogs_pkbuf_t *n1buf = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "ogs_pkbuf_t *n2buf = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "ogs_pkbuf_t *gmmbuf = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "ogs_pkbuf_t *ngapbuf = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "char *supi = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "uint8_t pdu_session_id = OGS_NAS_PDU_SESSION_IDENTITY_UNASSIGNED;"
    },
    {
        "line": 19,
        "fullcodeline": "ogs_sbi_response_t *response = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "OpenAPI_n1_message_container_t *n1MessageContainer = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "OpenAPI_ref_to_binary_data_t *n1MessageContent = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "OpenAPI_n2_info_container_t *n2InfoContainer = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "OpenAPI_n2_sm_information_t *smInfo = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "OpenAPI_n2_info_content_t *n2InfoContent = NULL;"
    },
    {
        "line": 28,
        "fullcodeline": "OpenAPI_ref_to_binary_data_t *ngapData = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "ogs_assert(stream);"
    },
    {
        "line": 31,
        "fullcodeline": "ogs_assert(recvmsg);"
    },
    {
        "line": 33,
        "fullcodeline": "N1N2MessageTransferReqData = recvmsg->N1N2MessageTransferReqData;"
    },
    {
        "line": 43,
        "fullcodeline": "pdu_session_id = N1N2MessageTransferReqData->pdu_session_id;"
    },
    {
        "line": 51,
        "fullcodeline": "amf_ue = amf_ue_find_by_supi(supi);"
    },
    {
        "line": 57,
        "fullcodeline": "sess = amf_sess_find_by_psi(amf_ue, pdu_session_id);"
    },
    {
        "line": 64,
        "fullcodeline": "n1MessageContainer = N1N2MessageTransferReqData->n1_message_container;"
    },
    {
        "line": 87,
        "fullcodeline": "n2InfoContainer = N1N2MessageTransferReqData->n2_info_container;"
    },
    {
        "line": 120,
        "fullcodeline": "memset(&sendmsg, 0, sizeof(sendmsg));"
    },
    {
        "line": 122,
        "fullcodeline": "status = OGS_SBI_HTTP_STATUS_OK;"
    },
    {
        "line": 124,
        "fullcodeline": "memset(&N1N2MessageTransferRspData, 0, sizeof(N1N2MessageTransferRspData));"
    },
    {
        "line": 125,
        "fullcodeline": "N1N2MessageTransferRspData.cause ="
    },
    {
        "line": 128,
        "fullcodeline": "sendmsg.N1N2MessageTransferRspData = &N1N2MessageTransferRspData;"
    },
    {
        "line": 372,
        "fullcodeline": "response = ogs_sbi_build_response(&sendmsg, status);"
    },
    {
        "line": 373,
        "fullcodeline": "ogs_assert(response);"
    },
    {
        "line": 374,
        "fullcodeline": "ogs_assert(true == ogs_sbi_server_send_response(stream, response));"
    },
    {
        "line": 34,
        "fullcodeline": "if (!N1N2MessageTransferReqData) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (N1N2MessageTransferReqData->is_pdu_session_id == false) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (!supi) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (!amf_ue) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (!sess) {"
    },
    {
        "line": 35,
        "fullcodeline": "ogs_error(\"No N1N2MessageTransferReqData\");"
    },
    {
        "line": 40,
        "fullcodeline": "ogs_error(\"No PDU Session Identity\");"
    },
    {
        "line": 47,
        "fullcodeline": "ogs_error(\"No SUPI\");"
    },
    {
        "line": 53,
        "fullcodeline": "ogs_error(\"No UE context [%s]\", supi);"
    },
    {
        "line": 59,
        "fullcodeline": "ogs_error(\"[%s] No PDU Session Context [%d]\","
    },
    {
        "line": 66,
        "fullcodeline": "n1MessageContent = n1MessageContainer->n1_message_content;"
    },
    {
        "line": 72,
        "fullcodeline": "n1buf = ogs_sbi_find_part_by_content_id("
    },
    {
        "line": 83,
        "fullcodeline": "n1buf = ogs_pkbuf_copy(n1buf);"
    },
    {
        "line": 84,
        "fullcodeline": "ogs_assert(n1buf);"
    },
    {
        "line": 89,
        "fullcodeline": "smInfo = n2InfoContainer->sm_info;"
    },
    {
        "line": 94,
        "fullcodeline": "n2InfoContent = smInfo->n2_info_content;"
    },
    {
        "line": 100,
        "fullcodeline": "ngapData = n2InfoContent->ngap_data;"
    },
    {
        "line": 105,
        "fullcodeline": "n2buf = ogs_sbi_find_part_by_content_id("
    },
    {
        "line": 116,
        "fullcodeline": "n2buf = ogs_pkbuf_copy(n2buf);"
    },
    {
        "line": 117,
        "fullcodeline": "ogs_assert(n2buf);"
    },
    {
        "line": 367,
        "fullcodeline": "ogs_error(\"Not implemented ngap_ie_type[%d]\","
    },
    {
        "line": 369,
        "fullcodeline": "ogs_assert_if_reached();"
    },
    {
        "line": 377,
        "fullcodeline": "ogs_free(sendmsg.http.location);"
    },
    {
        "line": 67,
        "fullcodeline": "if (!n1MessageContent || !n1MessageContent->content_id) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (!n1buf) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (!smInfo) {"
    },
    {
        "line": 95,
        "fullcodeline": "if (!n2InfoContent) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (!ngapData || !ngapData->content_id) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (!n2buf) {"
    },
    {
        "line": 132,
        "fullcodeline": "if (!n2buf) {"
    },
    {
        "line": 267,
        "fullcodeline": "if (!n1buf) {"
    },
    {
        "line": 271,
        "fullcodeline": "if (!n2buf) {"
    },
    {
        "line": 276,
        "fullcodeline": "if (CM_IDLE(amf_ue)) {"
    },
    {
        "line": 331,
        "fullcodeline": "if (!n2buf) {"
    },
    {
        "line": 339,
        "fullcodeline": "if (CM_IDLE(amf_ue)) {"
    },
    {
        "line": 68,
        "fullcodeline": "ogs_error(\"No n1MessageContent\");"
    },
    {
        "line": 75,
        "fullcodeline": "ogs_error(\"[%s] No N1 SM Content\", amf_ue->supi);"
    },
    {
        "line": 91,
        "fullcodeline": "ogs_error(\"No smInfo\");"
    },
    {
        "line": 96,
        "fullcodeline": "ogs_error(\"No n2InfoContent\");"
    },
    {
        "line": 102,
        "fullcodeline": "ogs_error(\"No ngapData\");"
    },
    {
        "line": 108,
        "fullcodeline": "ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);"
    },
    {
        "line": 133,
        "fullcodeline": "ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);"
    },
    {
        "line": 138,
        "fullcodeline": "gmmbuf = gmm_build_dl_nas_transport(sess,"
    },
    {
        "line": 140,
        "fullcodeline": "ogs_assert(gmmbuf);"
    },
    {
        "line": 144,
        "fullcodeline": "ran_ue_t *ran_ue = NULL;"
    },
    {
        "line": 150,
        "fullcodeline": "ran_ue = ran_ue_cycle(amf_ue->ran_ue);"
    },
    {
        "line": 151,
        "fullcodeline": "ogs_assert(ran_ue);"
    },
    {
        "line": 268,
        "fullcodeline": "ogs_error(\"[%s] No N1 SM Content\", amf_ue->supi);"
    },
    {
        "line": 272,
        "fullcodeline": "ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);"
    },
    {
        "line": 277,
        "fullcodeline": "ogs_sbi_server_t *server = NULL;"
    },
    {
        "line": 280,
        "fullcodeline": "status = OGS_SBI_HTTP_STATUS_ACCEPTED;"
    },
    {
        "line": 281,
        "fullcodeline": "N1N2MessageTransferRspData.cause ="
    },
    {
        "line": 285,
        "fullcodeline": "server = ogs_sbi_server_from_stream(stream);"
    },
    {
        "line": 286,
        "fullcodeline": "ogs_assert(server);"
    },
    {
        "line": 288,
        "fullcodeline": "memset(&header, 0, sizeof(header));"
    },
    {
        "line": 289,
        "fullcodeline": "header.service.name = (char *)OGS_SBI_SERVICE_NAME_NAMF_COMM;"
    },
    {
        "line": 290,
        "fullcodeline": "header.api.version = (char *)OGS_SBI_API_V1;"
    },
    {
        "line": 291,
        "fullcodeline": "header.resource.component[0] ="
    },
    {
        "line": 293,
        "fullcodeline": "header.resource.component[1] = amf_ue->supi;"
    },
    {
        "line": 294,
        "fullcodeline": "header.resource.component[2] ="
    },
    {
        "line": 296,
        "fullcodeline": "header.resource.component[3] = sess->sm_context_ref;"
    },
    {
        "line": 298,
        "fullcodeline": "sendmsg.http.location = ogs_sbi_server_uri(server, &header);"
    },
    {
        "line": 301,
        "fullcodeline": "AMF_SESS_STORE_PAGING_INFO("
    },
    {
        "line": 305,
        "fullcodeline": "AMF_SESS_STORE_5GSM_MESSAGE(sess,"
    },
    {
        "line": 309,
        "fullcodeline": "ogs_assert(OGS_OK == ngap_send_paging(amf_ue));"
    },
    {
        "line": 332,
        "fullcodeline": "ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);"
    },
    {
        "line": 337,
        "fullcodeline": "ogs_pkbuf_free(n1buf);"
    },
    {
        "line": 158,
        "fullcodeline": "if (ran_ue->initial_context_setup_request_sent == true) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (SESSION_CONTEXT_IN_SMF(sess)) {"
    },
    {
        "line": 292,
        "fullcodeline": "(char *)OGS_SBI_RESOURCE_NAME_UE_CONTEXTS;"
    },
    {
        "line": 295,
        "fullcodeline": "(char *)OGS_SBI_RESOURCE_NAME_N1_N2_MESSAGES;"
    },
    {
        "line": 343,
        "fullcodeline": "if (N1N2MessageTransferReqData->is_skip_ind == true &&"
    },
    {
        "line": 154,
        "fullcodeline": "ogs_pkbuf_free(sess->pdu_session_establishment_accept);"
    },
    {
        "line": 155,
        "fullcodeline": "sess->pdu_session_establishment_accept = NULL;"
    },
    {
        "line": 159,
        "fullcodeline": "ngapbuf = ngap_sess_build_pdu_session_resource_setup_request("
    },
    {
        "line": 161,
        "fullcodeline": "ogs_assert(ngapbuf);"
    },
    {
        "line": 190,
        "fullcodeline": "if (CM_IDLE(amf_ue)) {"
    },
    {
        "line": 311,
        "fullcodeline": "} else if (CM_CONNECTED(amf_ue)) {"
    },
    {
        "line": 341,
        "fullcodeline": "ogs_pkbuf_free(n2buf);"
    },
    {
        "line": 344,
        "fullcodeline": "N1N2MessageTransferReqData->skip_ind == true) {"
    },
    {
        "line": 345,
        "fullcodeline": "N1N2MessageTransferRspData.cause ="
    },
    {
        "line": 352,
        "fullcodeline": "} else if (CM_CONNECTED(amf_ue)) {"
    },
    {
        "line": 163,
        "fullcodeline": "ngapbuf = ngap_sess_build_initial_context_setup_request("
    },
    {
        "line": 165,
        "fullcodeline": "ogs_assert(ngapbuf);"
    },
    {
        "line": 167,
        "fullcodeline": "ran_ue->initial_context_setup_request_sent = true;"
    },
    {
        "line": 179,
        "fullcodeline": "if (nas_5gs_send_to_gnb(amf_ue, ngapbuf) != OGS_OK)"
    },
    {
        "line": 182,
        "fullcodeline": "sess->pdu_session_establishment_accept = ngapbuf;"
    },
    {
        "line": 191,
        "fullcodeline": "ogs_sbi_server_t *server = NULL;"
    },
    {
        "line": 193,
        "fullcodeline": "ogs_sbi_client_t *client = NULL;"
    },
    {
        "line": 194,
        "fullcodeline": "ogs_sockaddr_t *addr = NULL;"
    },
    {
        "line": 202,
        "fullcodeline": "addr = ogs_sbi_getaddr_from_uri("
    },
    {
        "line": 212,
        "fullcodeline": "client = ogs_sbi_client_find(addr);"
    },
    {
        "line": 217,
        "fullcodeline": "OGS_SETUP_SBI_CLIENT(&sess->paging, client);"
    },
    {
        "line": 219,
        "fullcodeline": "ogs_freeaddrinfo(addr);"
    },
    {
        "line": 221,
        "fullcodeline": "status = OGS_SBI_HTTP_STATUS_ACCEPTED;"
    },
    {
        "line": 222,
        "fullcodeline": "N1N2MessageTransferRspData.cause ="
    },
    {
        "line": 226,
        "fullcodeline": "server = ogs_sbi_server_from_stream(stream);"
    },
    {
        "line": 227,
        "fullcodeline": "ogs_assert(server);"
    },
    {
        "line": 229,
        "fullcodeline": "memset(&header, 0, sizeof(header));"
    },
    {
        "line": 230,
        "fullcodeline": "header.service.name = (char *)OGS_SBI_SERVICE_NAME_NAMF_COMM;"
    },
    {
        "line": 231,
        "fullcodeline": "header.api.version = (char *)OGS_SBI_API_V1;"
    },
    {
        "line": 232,
        "fullcodeline": "header.resource.component[0] ="
    },
    {
        "line": 234,
        "fullcodeline": "header.resource.component[1] = amf_ue->supi;"
    },
    {
        "line": 235,
        "fullcodeline": "header.resource.component[2] ="
    },
    {
        "line": 237,
        "fullcodeline": "header.resource.component[3] = sess->sm_context_ref;"
    },
    {
        "line": 239,
        "fullcodeline": "sendmsg.http.location = ogs_sbi_server_uri(server, &header);"
    },
    {
        "line": 242,
        "fullcodeline": "AMF_SESS_STORE_PAGING_INFO("
    },
    {
        "line": 247,
        "fullcodeline": "AMF_SESS_STORE_N2_TRANSFER("
    },
    {
        "line": 250,
        "fullcodeline": "ogs_assert(OGS_OK == ngap_send_paging(amf_ue));"
    },
    {
        "line": 312,
        "fullcodeline": "gmmbuf = gmm_build_dl_nas_transport(sess,"
    },
    {
        "line": 314,
        "fullcodeline": "ogs_assert(gmmbuf);"
    },
    {
        "line": 316,
        "fullcodeline": "ngapbuf = ngap_build_pdu_session_resource_modify_request("
    },
    {
        "line": 318,
        "fullcodeline": "ogs_assert(ngapbuf);"
    },
    {
        "line": 348,
        "fullcodeline": "ogs_fatal(\"[%s] No skipInd\", amf_ue->supi);"
    },
    {
        "line": 349,
        "fullcodeline": "ogs_assert_if_reached();"
    },
    {
        "line": 353,
        "fullcodeline": "ngapbuf = ngap_build_pdu_session_resource_release_command("
    },
    {
        "line": 355,
        "fullcodeline": "ogs_assert(ngapbuf);"
    },
    {
        "line": 180,
        "fullcodeline": "ogs_error(\"nas_5gs_send_to_gnb() failed\");"
    },
    {
        "line": 196,
        "fullcodeline": "if (!N1N2MessageTransferReqData->n1n2_failure_txf_notif_uri) {"
    },
    {
        "line": 204,
        "fullcodeline": "if (!addr) {"
    },
    {
        "line": 213,
        "fullcodeline": "if (!client) {"
    },
    {
        "line": 233,
        "fullcodeline": "(char *)OGS_SBI_RESOURCE_NAME_UE_CONTEXTS;"
    },
    {
        "line": 236,
        "fullcodeline": "(char *)OGS_SBI_RESOURCE_NAME_N1_N2_MESSAGES;"
    },
    {
        "line": 320,
        "fullcodeline": "if (nas_5gs_send_to_gnb(amf_ue, ngapbuf) != OGS_OK)"
    },
    {
        "line": 324,
        "fullcodeline": "ogs_fatal(\"[%s] Invalid AMF-UE state\", amf_ue->supi);"
    },
    {
        "line": 325,
        "fullcodeline": "ogs_assert_if_reached();"
    },
    {
        "line": 357,
        "fullcodeline": "if (nas_5gs_send_to_gnb(amf_ue, ngapbuf) != OGS_OK)"
    },
    {
        "line": 361,
        "fullcodeline": "ogs_fatal(\"[%s] Invalid AMF-UE state\", amf_ue->supi);"
    },
    {
        "line": 362,
        "fullcodeline": "ogs_assert_if_reached();"
    },
    {
        "line": 197,
        "fullcodeline": "ogs_error(\"[%s:%d] No n1-n2-failure-notification-uri\","
    },
    {
        "line": 205,
        "fullcodeline": "ogs_error(\"[%s:%d] Invalid URI [%s]\","
    },
    {
        "line": 214,
        "fullcodeline": "client = ogs_sbi_client_add(addr);"
    },
    {
        "line": 215,
        "fullcodeline": "ogs_assert(client);"
    },
    {
        "line": 252,
        "fullcodeline": "} else if (CM_CONNECTED(amf_ue)) {"
    },
    {
        "line": 321,
        "fullcodeline": "ogs_error(\"nas_5gs_send_to_gnb() failed\");"
    },
    {
        "line": 358,
        "fullcodeline": "ogs_error(\"nas_5gs_send_to_gnb() failed\");"
    },
    {
        "line": 253,
        "fullcodeline": "ogs_assert(OGS_OK =="
    },
    {
        "line": 258,
        "fullcodeline": "ogs_fatal(\"[%s] Invalid AMF-UE state\", amf_ue->supi);"
    },
    {
        "line": 259,
        "fullcodeline": "ogs_assert_if_reached();"
    },
    {
        "line": 254,
        "fullcodeline": "ngap_send_pdu_resource_setup_request(sess, n2buf));"
    }
]