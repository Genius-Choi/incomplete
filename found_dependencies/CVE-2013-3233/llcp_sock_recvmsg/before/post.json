[
    {
        "line": 4,
        "fullcodeline": "int noblock = flags & MSG_DONTWAIT;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 8,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "pr_debug(\"%p %zu\\n\", sk, len);"
    },
    {
        "line": 12,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 20,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 25,
        "fullcodeline": "skb = skb_recv_datagram(sk, flags, noblock, &err);"
    },
    {
        "line": 36,
        "fullcodeline": "rlen = skb->len;\t\t/* real length of skb */"
    },
    {
        "line": 39,
        "fullcodeline": "cskb = skb;"
    },
    {
        "line": 46,
        "fullcodeline": "sock_recv_timestamp(msg, sk, skb);"
    },
    {
        "line": 14,
        "fullcodeline": "if (sk->sk_state == LLCP_CLOSED &&"
    },
    {
        "line": 22,
        "fullcodeline": "if (flags & (MSG_OOB))"
    },
    {
        "line": 26,
        "fullcodeline": "if (!skb) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (skb_copy_datagram_iovec(cskb, 0, msg->msg_iov, copied)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (sk->sk_type == SOCK_DGRAM && msg->msg_name) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!(flags & MSG_PEEK)) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"
    },
    {
        "line": 15,
        "fullcodeline": "skb_queue_empty(&sk->sk_receive_queue)) {"
    },
    {
        "line": 16,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 27,
        "fullcodeline": "pr_err(\"Recv datagram failed state %d %d %d\","
    },
    {
        "line": 49,
        "fullcodeline": "struct nfc_llcp_ui_cb *ui_cb = nfc_llcp_ui_skb_cb(skb);"
    },
    {
        "line": 50,
        "fullcodeline": "struct sockaddr_nfc_llcp *sockaddr ="
    },
    {
        "line": 55,
        "fullcodeline": "pr_debug(\"Datagram socket %d %d\\n\", ui_cb->dsap, ui_cb->ssap);"
    },
    {
        "line": 57,
        "fullcodeline": "sockaddr->sa_family = AF_NFC;"
    },
    {
        "line": 58,
        "fullcodeline": "sockaddr->nfc_protocol = NFC_PROTO_NFC_DEP;"
    },
    {
        "line": 59,
        "fullcodeline": "sockaddr->dsap = ui_cb->dsap;"
    },
    {
        "line": 60,
        "fullcodeline": "sockaddr->ssap = ui_cb->ssap;"
    },
    {
        "line": 77,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 85,
        "fullcodeline": "copied = rlen;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EOPNOTSUPP;"
    },
    {
        "line": 28,
        "fullcodeline": "sk->sk_state, err, sock_error(sk));"
    },
    {
        "line": 30,
        "fullcodeline": "if (sk->sk_shutdown & RCV_SHUTDOWN)"
    },
    {
        "line": 41,
        "fullcodeline": "if (!(flags & MSG_PEEK))"
    },
    {
        "line": 43,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 51,
        "fullcodeline": "(struct sockaddr_nfc_llcp *) msg->msg_name;"
    },
    {
        "line": 67,
        "fullcodeline": "if (sk->sk_type == SOCK_STREAM ||"
    },
    {
        "line": 42,
        "fullcodeline": "skb_queue_head(&sk->sk_receive_queue, skb);"
    },
    {
        "line": 69,
        "fullcodeline": "sk->sk_type == SOCK_RAW) {"
    },
    {
        "line": 70,
        "fullcodeline": "skb_pull(skb, copied);"
    },
    {
        "line": 68,
        "fullcodeline": "sk->sk_type == SOCK_DGRAM ||"
    },
    {
        "line": 72,
        "fullcodeline": "skb_queue_head(&sk->sk_receive_queue, skb);"
    }
]