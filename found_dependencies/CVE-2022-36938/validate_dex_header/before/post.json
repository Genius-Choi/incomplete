[
    {
        "line": 4,
        "fullcodeline": "bool supported = false;"
    },
    {
        "line": 22,
        "fullcodeline": "always_assert_log(supported, \"Bad dex magic %s for support_dex_version %d\\n\","
    },
    {
        "line": 24,
        "fullcodeline": "always_assert_log("
    },
    {
        "line": 29,
        "fullcodeline": "auto off = (uint64_t)dh->class_defs_off;"
    },
    {
        "line": 30,
        "fullcodeline": "auto limit = off + dh->class_defs_size * sizeof(dex_class_def);"
    },
    {
        "line": 31,
        "fullcodeline": "always_assert_log(off < dexsize, \"class_defs_off out of range\");"
    },
    {
        "line": 32,
        "fullcodeline": "always_assert_log(limit <= dexsize, \"invalid class_defs_size\");"
    },
    {
        "line": 25,
        "fullcodeline": "dh->file_size == dexsize,"
    },
    {
        "line": 7,
        "fullcodeline": "supported = supported ||"
    },
    {
        "line": 11,
        "fullcodeline": "supported = supported ||"
    },
    {
        "line": 15,
        "fullcodeline": "supported = supported ||"
    },
    {
        "line": 19,
        "fullcodeline": "not_reached_log(\"Unrecognized support_dex_version %d\\n\","
    },
    {
        "line": 8,
        "fullcodeline": "!memcmp(dh->magic, DEX_HEADER_DEXMAGIC_V38, sizeof(dh->magic));"
    },
    {
        "line": 12,
        "fullcodeline": "!memcmp(dh->magic, DEX_HEADER_DEXMAGIC_V37, sizeof(dh->magic));"
    },
    {
        "line": 16,
        "fullcodeline": "!memcmp(dh->magic, DEX_HEADER_DEXMAGIC_V35, sizeof(dh->magic));"
    }
]