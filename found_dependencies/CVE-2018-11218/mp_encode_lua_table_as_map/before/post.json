[
    {
        "line": 2,
        "fullcodeline": "size_t len = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "lua_pushnil(L);"
    },
    {
        "line": 15,
        "fullcodeline": "mp_encode_map(L,buf,len);"
    },
    {
        "line": 16,
        "fullcodeline": "lua_pushnil(L);"
    },
    {
        "line": 9,
        "fullcodeline": "while(lua_next(L,-2)) {"
    },
    {
        "line": 17,
        "fullcodeline": "while(lua_next(L,-2)) {"
    },
    {
        "line": 10,
        "fullcodeline": "lua_pop(L,1); /* remove value, keep key for next iteration. */"
    },
    {
        "line": 11,
        "fullcodeline": "len++;"
    },
    {
        "line": 19,
        "fullcodeline": "lua_pushvalue(L,-2); /* Stack: ... key value key */"
    },
    {
        "line": 20,
        "fullcodeline": "mp_encode_lua_type(L,buf,level+1); /* encode key */"
    },
    {
        "line": 21,
        "fullcodeline": "mp_encode_lua_type(L,buf,level+1); /* encode val */"
    }
]