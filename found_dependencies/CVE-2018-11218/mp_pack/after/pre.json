[
    {
        "line": 2,
        "fullcodeline": "int nargs = lua_gettop(L);"
    },
    {
        "line": 12,
        "fullcodeline": "buf = mp_buf_new(L);"
    },
    {
        "line": 29,
        "fullcodeline": "mp_buf_free(L, buf);"
    },
    {
        "line": 6,
        "fullcodeline": "if (nargs == 0)"
    },
    {
        "line": 13,
        "fullcodeline": "for(i = 1; i <= nargs; i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (!lua_checkstack(L, nargs))"
    },
    {
        "line": 16,
        "fullcodeline": "luaL_checkstack(L, 1, \"in function mp_check\");"
    },
    {
        "line": 17,
        "fullcodeline": "lua_pushvalue(L, i);"
    },
    {
        "line": 19,
        "fullcodeline": "mp_encode_lua_type(L,buf,0);"
    },
    {
        "line": 21,
        "fullcodeline": "lua_pushlstring(L,(char*)buf->b,buf->len);"
    },
    {
        "line": 26,
        "fullcodeline": "buf->free += buf->len;"
    },
    {
        "line": 27,
        "fullcodeline": "buf->len = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "return luaL_argerror(L, 0, \"MessagePack pack needs input.\");"
    },
    {
        "line": 10,
        "fullcodeline": "return luaL_argerror(L, 0, \"Too many arguments for MessagePack pack.\");"
    }
]