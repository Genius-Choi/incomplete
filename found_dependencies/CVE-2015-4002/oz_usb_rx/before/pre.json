[
    {
        "line": 3,
        "fullcodeline": "struct oz_usb_hdr *usb_hdr = (struct oz_usb_hdr *)(elt + 1);"
    },
    {
        "line": 6,
        "fullcodeline": "spin_lock_bh(&pd->app_lock[OZ_APPID_USB]);"
    },
    {
        "line": 7,
        "fullcodeline": "usb_ctx = (struct oz_usb_ctx *)pd->app_ctx[OZ_APPID_USB];"
    },
    {
        "line": 10,
        "fullcodeline": "spin_unlock_bh(&pd->app_lock[OZ_APPID_USB]);"
    },
    {
        "line": 23,
        "fullcodeline": "usb_ctx->rx_seq_num = usb_hdr->elt_seq_num;"
    },
    {
        "line": 11,
        "fullcodeline": "if (usb_ctx == NULL)"
    },
    {
        "line": 18,
        "fullcodeline": "if (usb_hdr->elt_seq_num != 0) {"
    },
    {
        "line": 9,
        "fullcodeline": "oz_usb_get(usb_ctx);"
    },
    {
        "line": 62,
        "fullcodeline": "oz_usb_handle_ep_data(usb_ctx, usb_hdr, elt->length);"
    },
    {
        "line": 26,
        "fullcodeline": "struct oz_get_desc_rsp *body ="
    },
    {
        "line": 28,
        "fullcodeline": "int data_len = elt->length -"
    },
    {
        "line": 30,
        "fullcodeline": "u16 offs = le16_to_cpu(get_unaligned(&body->offset));"
    },
    {
        "line": 31,
        "fullcodeline": "u16 total_size ="
    },
    {
        "line": 33,
        "fullcodeline": "oz_dbg(ON, \"USB_REQ_GET_DESCRIPTOR - cnf\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "oz_hcd_get_desc_cnf(usb_ctx->hport, body->req_id,"
    },
    {
        "line": 40,
        "fullcodeline": "struct oz_set_config_rsp *body ="
    },
    {
        "line": 42,
        "fullcodeline": "oz_hcd_control_cnf(usb_ctx->hport, body->req_id,"
    },
    {
        "line": 47,
        "fullcodeline": "struct oz_set_interface_rsp *body ="
    },
    {
        "line": 49,
        "fullcodeline": "oz_hcd_control_cnf(usb_ctx->hport,"
    },
    {
        "line": 54,
        "fullcodeline": "struct oz_vendor_class_rsp *body ="
    },
    {
        "line": 56,
        "fullcodeline": "oz_hcd_control_cnf(usb_ctx->hport, body->req_id,"
    },
    {
        "line": 19,
        "fullcodeline": "if (((usb_ctx->rx_seq_num - usb_hdr->elt_seq_num) & 0x80) == 0)"
    },
    {
        "line": 32,
        "fullcodeline": "le16_to_cpu(get_unaligned(&body->total_size));"
    },
    {
        "line": 57,
        "fullcodeline": "body->rcode, body->data, elt->length-"
    },
    {
        "line": 29,
        "fullcodeline": "sizeof(struct oz_get_desc_rsp) + 1;"
    },
    {
        "line": 58,
        "fullcodeline": "sizeof(struct oz_vendor_class_rsp)+1);"
    }
]