[
    {
        "line": 4,
        "fullcodeline": "struct v3d_dev *v3d = to_v3d_dev(dev);"
    },
    {
        "line": 5,
        "fullcodeline": "struct v3d_file_priv *v3d_priv = file_priv->driver_priv;"
    },
    {
        "line": 6,
        "fullcodeline": "struct drm_v3d_submit_cl *args = data;"
    },
    {
        "line": 7,
        "fullcodeline": "struct v3d_bin_job *bin = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "trace_v3d_submit_cl_ioctl(&v3d->drm, args->rcl_start, args->rcl_end);"
    },
    {
        "line": 19,
        "fullcodeline": "render = kcalloc(1, sizeof(*render), GFP_KERNEL);"
    },
    {
        "line": 23,
        "fullcodeline": "render->start = args->rcl_start;"
    },
    {
        "line": 24,
        "fullcodeline": "render->end = args->rcl_end;"
    },
    {
        "line": 25,
        "fullcodeline": "INIT_LIST_HEAD(&render->unref_list);"
    },
    {
        "line": 27,
        "fullcodeline": "ret = v3d_job_init(v3d, file_priv, &render->base,"
    },
    {
        "line": 54,
        "fullcodeline": "ret = v3d_lookup_bos(dev, file_priv, &render->base,"
    },
    {
        "line": 59,
        "fullcodeline": "ret = v3d_lock_bo_reservations(&render->base, &acquire_ctx);"
    },
    {
        "line": 63,
        "fullcodeline": "mutex_lock(&v3d->sched_lock);"
    },
    {
        "line": 75,
        "fullcodeline": "ret = v3d_push_job(v3d_priv, &render->base, V3D_RENDER);"
    },
    {
        "line": 78,
        "fullcodeline": "mutex_unlock(&v3d->sched_lock);"
    },
    {
        "line": 80,
        "fullcodeline": "v3d_attach_fences_and_unlock_reservation(file_priv,"
    },
    {
        "line": 88,
        "fullcodeline": "v3d_job_put(&render->base);"
    },
    {
        "line": 93,
        "fullcodeline": "mutex_unlock(&v3d->sched_lock);"
    },
    {
        "line": 94,
        "fullcodeline": "drm_gem_unlock_reservations(render->base.bo,"
    },
    {
        "line": 99,
        "fullcodeline": "v3d_job_put(&render->base);"
    },
    {
        "line": 14,
        "fullcodeline": "if (args->pad != 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!render)"
    },
    {
        "line": 34,
        "fullcodeline": "if (args->bcl_start != args->bcl_end) {"
    },
    {
        "line": 15,
        "fullcodeline": "DRM_INFO(\"pad must be zero: %d\\n\", args->pad);"
    },
    {
        "line": 30,
        "fullcodeline": "kfree(render);"
    },
    {
        "line": 35,
        "fullcodeline": "bin = kcalloc(1, sizeof(*bin), GFP_KERNEL);"
    },
    {
        "line": 39,
        "fullcodeline": "ret = v3d_job_init(v3d, file_priv, &bin->base,"
    },
    {
        "line": 46,
        "fullcodeline": "bin->start = args->bcl_start;"
    },
    {
        "line": 47,
        "fullcodeline": "bin->end = args->bcl_end;"
    },
    {
        "line": 48,
        "fullcodeline": "bin->qma = args->qma;"
    },
    {
        "line": 49,
        "fullcodeline": "bin->qms = args->qms;"
    },
    {
        "line": 50,
        "fullcodeline": "bin->qts = args->qts;"
    },
    {
        "line": 51,
        "fullcodeline": "bin->render = render;"
    },
    {
        "line": 65,
        "fullcodeline": "ret = v3d_push_job(v3d_priv, &bin->base, V3D_BIN);"
    },
    {
        "line": 69,
        "fullcodeline": "ret = drm_gem_fence_array_add(&render->base.deps,"
    },
    {
        "line": 87,
        "fullcodeline": "v3d_job_put(&bin->base);"
    },
    {
        "line": 98,
        "fullcodeline": "v3d_job_put(&bin->base);"
    },
    {
        "line": 16,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!bin)"
    },
    {
        "line": 42,
        "fullcodeline": "v3d_job_put(&render->base);"
    },
    {
        "line": 37,
        "fullcodeline": "return -ENOMEM;"
    }
]