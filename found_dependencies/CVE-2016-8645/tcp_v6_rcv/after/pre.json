[
    {
        "line": 8,
        "fullcodeline": "struct net *net = dev_net(skb->dev);"
    },
    {
        "line": 16,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_INSEGS);"
    },
    {
        "line": 21,
        "fullcodeline": "th = (const struct tcphdr *)skb->data;"
    },
    {
        "line": 31,
        "fullcodeline": "th = (const struct tcphdr *)skb->data;"
    },
    {
        "line": 32,
        "fullcodeline": "hdr = ipv6_hdr(skb);"
    },
    {
        "line": 35,
        "fullcodeline": "sk = __inet6_lookup_skb(&tcp_hashinfo, skb, __tcp_hdrlen(th),"
    },
    {
        "line": 86,
        "fullcodeline": "tcp_v6_fill_cb(skb, hdr, th);"
    },
    {
        "line": 96,
        "fullcodeline": "skb->dev = NULL;"
    },
    {
        "line": 103,
        "fullcodeline": "sk_incoming_cpu_update(sk);"
    },
    {
        "line": 105,
        "fullcodeline": "bh_lock_sock_nested(sk);"
    },
    {
        "line": 106,
        "fullcodeline": "tcp_segs_in(tcp_sk(sk), skb);"
    },
    {
        "line": 114,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 125,
        "fullcodeline": "tcp_v6_fill_cb(skb, hdr, th);"
    },
    {
        "line": 141,
        "fullcodeline": "sk_drops_add(sk, skb);"
    },
    {
        "line": 152,
        "fullcodeline": "tcp_v6_fill_cb(skb, hdr, th);"
    },
    {
        "line": 10,
        "fullcodeline": "if (skb->pkt_type != PACKET_HOST)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!pskb_may_pull(skb, sizeof(struct tcphdr)))"
    },
    {
        "line": 23,
        "fullcodeline": "if (unlikely(th->doff < sizeof(struct tcphdr)/4))"
    },
    {
        "line": 25,
        "fullcodeline": "if (!pskb_may_pull(skb, th->doff*4))"
    },
    {
        "line": 28,
        "fullcodeline": "if (skb_checksum_init(skb, IPPROTO_TCP, ip6_compute_pseudo))"
    },
    {
        "line": 38,
        "fullcodeline": "if (!sk)"
    },
    {
        "line": 42,
        "fullcodeline": "if (sk->sk_state == TCP_TIME_WAIT)"
    },
    {
        "line": 45,
        "fullcodeline": "if (sk->sk_state == TCP_NEW_SYN_RECV) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (hdr->hop_limit < inet6_sk(sk)->min_hopcount) {"
    },
    {
        "line": 88,
        "fullcodeline": "if (tcp_v6_inbound_md5_hash(sk, skb))"
    },
    {
        "line": 91,
        "fullcodeline": "if (tcp_filter(sk, skb))"
    },
    {
        "line": 94,
        "fullcodeline": "hdr = ipv6_hdr(skb);"
    },
    {
        "line": 98,
        "fullcodeline": "if (sk->sk_state == TCP_LISTEN) {"
    },
    {
        "line": 119,
        "fullcodeline": "return ret ? -1 : 0;"
    },
    {
        "line": 127,
        "fullcodeline": "if (tcp_checksum_complete(skb)) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (!xfrm6_policy_check(NULL, XFRM_POLICY_IN, skb)) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (tcp_checksum_complete(skb)) {"
    },
    {
        "line": 159,
        "fullcodeline": "switch (tcp_timewait_state_process(inet_twsk(sk), skb, th)) {"
    },
    {
        "line": 36,
        "fullcodeline": "th->source, th->dest, inet6_iif(skb),"
    },
    {
        "line": 46,
        "fullcodeline": "struct request_sock *req = inet_reqsk(sk);"
    },
    {
        "line": 49,
        "fullcodeline": "sk = req->rsk_listener;"
    },
    {
        "line": 50,
        "fullcodeline": "tcp_v6_fill_cb(skb, hdr, th);"
    },
    {
        "line": 60,
        "fullcodeline": "sock_hold(sk);"
    },
    {
        "line": 61,
        "fullcodeline": "refcounted = true;"
    },
    {
        "line": 62,
        "fullcodeline": "nsk = tcp_check_req(sk, skb, req, false);"
    },
    {
        "line": 79,
        "fullcodeline": "__NET_INC_STATS(net, LINUX_MIB_TCPMINTTLDROP);"
    },
    {
        "line": 83,
        "fullcodeline": "if (!xfrm6_policy_check(sk, XFRM_POLICY_IN, skb))"
    },
    {
        "line": 108,
        "fullcodeline": "if (!sock_owned_by_user(sk)) {"
    },
    {
        "line": 122,
        "fullcodeline": "if (!xfrm6_policy_check(NULL, XFRM_POLICY_IN, skb))"
    },
    {
        "line": 129,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_CSUMERRORS);"
    },
    {
        "line": 131,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_INERRS);"
    },
    {
        "line": 180,
        "fullcodeline": "tcp_v6_timewait_ack(sk, skb);"
    },
    {
        "line": 183,
        "fullcodeline": "tcp_v6_restore_cb(skb);"
    },
    {
        "line": 184,
        "fullcodeline": "tcp_v6_send_reset(sk, skb);"
    },
    {
        "line": 51,
        "fullcodeline": "if (tcp_v6_inbound_md5_hash(sk, skb)) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (unlikely(sk->sk_state != TCP_LISTEN)) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (!nsk) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (nsk == sk) {"
    },
    {
        "line": 99,
        "fullcodeline": "ret = tcp_v6_do_rcv(sk, skb);"
    },
    {
        "line": 133,
        "fullcodeline": "tcp_v6_send_reset(NULL, skb);"
    },
    {
        "line": 148,
        "fullcodeline": "inet_twsk_put(inet_twsk(sk));"
    },
    {
        "line": 155,
        "fullcodeline": "inet_twsk_put(inet_twsk(sk));"
    },
    {
        "line": 164,
        "fullcodeline": "sk2 = inet6_lookup_listener(dev_net(skb->dev), &tcp_hashinfo,"
    },
    {
        "line": 185,
        "fullcodeline": "inet_twsk_deschedule_put(inet_twsk(sk));"
    },
    {
        "line": 52,
        "fullcodeline": "sk_drops_add(sk, skb);"
    },
    {
        "line": 57,
        "fullcodeline": "inet_csk_reqsk_queue_drop_and_put(sk, req);"
    },
    {
        "line": 69,
        "fullcodeline": "tcp_v6_restore_cb(skb);"
    },
    {
        "line": 109,
        "fullcodeline": "if (!tcp_prequeue(sk, skb))"
    },
    {
        "line": 111,
        "fullcodeline": "} else if (tcp_add_backlog(sk, skb)) {"
    },
    {
        "line": 110,
        "fullcodeline": "ret = tcp_v6_do_rcv(sk, skb);"
    },
    {
        "line": 165,
        "fullcodeline": "skb, __tcp_hdrlen(th),"
    },
    {
        "line": 168,
        "fullcodeline": "ntohs(th->dest), tcp_v6_iif(skb));"
    },
    {
        "line": 170,
        "fullcodeline": "struct inet_timewait_sock *tw = inet_twsk(sk);"
    },
    {
        "line": 171,
        "fullcodeline": "inet_twsk_deschedule_put(tw);"
    },
    {
        "line": 172,
        "fullcodeline": "sk = sk2;"
    },
    {
        "line": 173,
        "fullcodeline": "tcp_v6_restore_cb(skb);"
    },
    {
        "line": 174,
        "fullcodeline": "refcounted = false;"
    },
    {
        "line": 70,
        "fullcodeline": "} else if (tcp_child_process(sk, nsk, skb)) {"
    },
    {
        "line": 71,
        "fullcodeline": "tcp_v6_send_reset(nsk, skb);"
    },
    {
        "line": 166,
        "fullcodeline": "&ipv6_hdr(skb)->saddr, th->source,"
    },
    {
        "line": 167,
        "fullcodeline": "&ipv6_hdr(skb)->daddr,"
    },
    {
        "line": 74,
        "fullcodeline": "sock_put(sk);"
    }
]