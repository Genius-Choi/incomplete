[
    {
        "line": 3,
        "fullcodeline": "struct net *net = dev_net(skb->dev);"
    },
    {
        "line": 14,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_INSEGS);"
    },
    {
        "line": 19,
        "fullcodeline": "th = (const struct tcphdr *)skb->data;"
    },
    {
        "line": 34,
        "fullcodeline": "th = (const struct tcphdr *)skb->data;"
    },
    {
        "line": 35,
        "fullcodeline": "iph = ip_hdr(skb);"
    },
    {
        "line": 39,
        "fullcodeline": "memmove(&TCP_SKB_CB(skb)->header.h4, IPCB(skb),"
    },
    {
        "line": 41,
        "fullcodeline": "barrier();"
    },
    {
        "line": 43,
        "fullcodeline": "TCP_SKB_CB(skb)->seq = ntohl(th->seq);"
    },
    {
        "line": 44,
        "fullcodeline": "TCP_SKB_CB(skb)->end_seq = (TCP_SKB_CB(skb)->seq + th->syn + th->fin +"
    },
    {
        "line": 46,
        "fullcodeline": "TCP_SKB_CB(skb)->ack_seq = ntohl(th->ack_seq);"
    },
    {
        "line": 47,
        "fullcodeline": "TCP_SKB_CB(skb)->tcp_flags = tcp_flag_byte(th);"
    },
    {
        "line": 48,
        "fullcodeline": "TCP_SKB_CB(skb)->tcp_tw_isn = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "TCP_SKB_CB(skb)->ip_dsfield = ipv4_get_dsfield(iph);"
    },
    {
        "line": 50,
        "fullcodeline": "TCP_SKB_CB(skb)->sacked\t = 0;"
    },
    {
        "line": 53,
        "fullcodeline": "sk = __inet_lookup_skb(&tcp_hashinfo, skb, __tcp_hdrlen(th), th->source,"
    },
    {
        "line": 107,
        "fullcodeline": "nf_reset(skb);"
    },
    {
        "line": 112,
        "fullcodeline": "skb->dev = NULL;"
    },
    {
        "line": 119,
        "fullcodeline": "sk_incoming_cpu_update(sk);"
    },
    {
        "line": 121,
        "fullcodeline": "bh_lock_sock_nested(sk);"
    },
    {
        "line": 122,
        "fullcodeline": "tcp_segs_in(tcp_sk(sk), skb);"
    },
    {
        "line": 123,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 130,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 153,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 157,
        "fullcodeline": "sk_drops_add(sk, skb);"
    },
    {
        "line": 10,
        "fullcodeline": "if (skb->pkt_type != PACKET_HOST)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!pskb_may_pull(skb, sizeof(struct tcphdr)))"
    },
    {
        "line": 21,
        "fullcodeline": "if (unlikely(th->doff < sizeof(struct tcphdr) / 4))"
    },
    {
        "line": 23,
        "fullcodeline": "if (!pskb_may_pull(skb, th->doff * 4))"
    },
    {
        "line": 31,
        "fullcodeline": "if (skb_checksum_init(skb, IPPROTO_TCP, inet_compute_pseudo))"
    },
    {
        "line": 55,
        "fullcodeline": "if (!sk)"
    },
    {
        "line": 59,
        "fullcodeline": "if (sk->sk_state == TCP_TIME_WAIT)"
    },
    {
        "line": 62,
        "fullcodeline": "if (sk->sk_state == TCP_NEW_SYN_RECV) {"
    },
    {
        "line": 96,
        "fullcodeline": "if (unlikely(iph->ttl < inet_sk(sk)->min_ttl)) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb))"
    },
    {
        "line": 104,
        "fullcodeline": "if (tcp_v4_inbound_md5_hash(sk, skb))"
    },
    {
        "line": 109,
        "fullcodeline": "if (sk_filter(sk, skb))"
    },
    {
        "line": 114,
        "fullcodeline": "if (sk->sk_state == TCP_LISTEN) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (!sock_owned_by_user(sk)) {"
    },
    {
        "line": 139,
        "fullcodeline": "if (!xfrm4_policy_check(NULL, XFRM_POLICY_IN, skb))"
    },
    {
        "line": 142,
        "fullcodeline": "if (tcp_checksum_complete(skb)) {"
    },
    {
        "line": 163,
        "fullcodeline": "if (!xfrm4_policy_check(NULL, XFRM_POLICY_IN, skb)) {"
    },
    {
        "line": 168,
        "fullcodeline": "if (tcp_checksum_complete(skb)) {"
    },
    {
        "line": 172,
        "fullcodeline": "switch (tcp_timewait_state_process(inet_twsk(sk), skb, th)) {"
    },
    {
        "line": 45,
        "fullcodeline": "skb->len - th->doff * 4);"
    },
    {
        "line": 63,
        "fullcodeline": "struct request_sock *req = inet_reqsk(sk);"
    },
    {
        "line": 66,
        "fullcodeline": "sk = req->rsk_listener;"
    },
    {
        "line": 79,
        "fullcodeline": "sock_hold(sk);"
    },
    {
        "line": 80,
        "fullcodeline": "refcounted = true;"
    },
    {
        "line": 81,
        "fullcodeline": "nsk = tcp_check_req(sk, skb, req, false);"
    },
    {
        "line": 97,
        "fullcodeline": "__NET_INC_STATS(net, LINUX_MIB_TCPMINTTLDROP);"
    },
    {
        "line": 115,
        "fullcodeline": "ret = tcp_v4_do_rcv(sk, skb);"
    },
    {
        "line": 134,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 144,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_CSUMERRORS);"
    },
    {
        "line": 146,
        "fullcodeline": "__TCP_INC_STATS(net, TCP_MIB_INERRS);"
    },
    {
        "line": 159,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 164,
        "fullcodeline": "inet_twsk_put(inet_twsk(sk));"
    },
    {
        "line": 169,
        "fullcodeline": "inet_twsk_put(inet_twsk(sk));"
    },
    {
        "line": 189,
        "fullcodeline": "tcp_v4_timewait_ack(sk, skb);"
    },
    {
        "line": 192,
        "fullcodeline": "tcp_v4_send_reset(sk, skb);"
    },
    {
        "line": 193,
        "fullcodeline": "inet_twsk_deschedule_put(inet_twsk(sk));"
    },
    {
        "line": 67,
        "fullcodeline": "if (unlikely(tcp_v4_inbound_md5_hash(sk, skb))) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (unlikely(sk->sk_state != TCP_LISTEN)) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (!nsk) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (nsk == sk) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (!tcp_prequeue(sk, skb))"
    },
    {
        "line": 148,
        "fullcodeline": "tcp_v4_send_reset(NULL, skb);"
    },
    {
        "line": 174,
        "fullcodeline": "struct sock *sk2 = inet_lookup_listener(dev_net(skb->dev),"
    },
    {
        "line": 68,
        "fullcodeline": "sk_drops_add(sk, skb);"
    },
    {
        "line": 69,
        "fullcodeline": "reqsk_put(req);"
    },
    {
        "line": 73,
        "fullcodeline": "inet_csk_reqsk_queue_drop_and_put(sk, req);"
    },
    {
        "line": 83,
        "fullcodeline": "reqsk_put(req);"
    },
    {
        "line": 87,
        "fullcodeline": "reqsk_put(req);"
    },
    {
        "line": 126,
        "fullcodeline": "ret = tcp_v4_do_rcv(sk, skb);"
    },
    {
        "line": 127,
        "fullcodeline": "} else if (tcp_add_backlog(sk, skb)) {"
    },
    {
        "line": 176,
        "fullcodeline": "__tcp_hdrlen(th),"
    },
    {
        "line": 179,
        "fullcodeline": "inet_iif(skb));"
    },
    {
        "line": 181,
        "fullcodeline": "inet_twsk_deschedule_put(inet_twsk(sk));"
    },
    {
        "line": 182,
        "fullcodeline": "sk = sk2;"
    },
    {
        "line": 183,
        "fullcodeline": "refcounted = false;"
    },
    {
        "line": 88,
        "fullcodeline": "} else if (tcp_child_process(sk, nsk, skb)) {"
    },
    {
        "line": 89,
        "fullcodeline": "tcp_v4_send_reset(nsk, skb);"
    },
    {
        "line": 92,
        "fullcodeline": "sock_put(sk);"
    }
]