[
    {
        "line": 9,
        "fullcodeline": "prepare_to_copy(orig);"
    },
    {
        "line": 11,
        "fullcodeline": "tsk = alloc_task_struct();"
    },
    {
        "line": 15,
        "fullcodeline": "ti = alloc_thread_info(tsk);"
    },
    {
        "line": 25,
        "fullcodeline": "tsk->stack = ti;"
    },
    {
        "line": 31,
        "fullcodeline": "setup_thread_stack(tsk, orig);"
    },
    {
        "line": 32,
        "fullcodeline": "clear_user_return_notifier(tsk);"
    },
    {
        "line": 34,
        "fullcodeline": "*stackend = STACK_END_MAGIC;\t/* for overflow detection */"
    },
    {
        "line": 46,
        "fullcodeline": "tsk->splice_pipe = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "if (!tsk)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!ti) {"
    },
    {
        "line": 21,
        "fullcodeline": "err = arch_dup_task_struct(tsk, orig);"
    },
    {
        "line": 27,
        "fullcodeline": "err = prop_local_init_single(&tsk->dirties);"
    },
    {
        "line": 33,
        "fullcodeline": "stackend = end_of_stack(tsk);"
    }
]