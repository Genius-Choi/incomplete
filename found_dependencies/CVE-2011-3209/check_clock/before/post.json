[
    {
        "line": 3,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "const pid_t pid = CPUCLOCK_PID(which_clock);"
    },
    {
        "line": 13,
        "fullcodeline": "read_lock(&tasklist_lock);"
    },
    {
        "line": 14,
        "fullcodeline": "p = find_task_by_vpid(pid);"
    },
    {
        "line": 19,
        "fullcodeline": "read_unlock(&tasklist_lock);"
    },
    {
        "line": 7,
        "fullcodeline": "if (CPUCLOCK_WHICH(which_clock) >= CPUCLOCK_MAX)"
    },
    {
        "line": 10,
        "fullcodeline": "if (pid == 0)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!p || !(CPUCLOCK_PERTHREAD(which_clock) ?"
    },
    {
        "line": 17,
        "fullcodeline": "error = -EINVAL;"
    },
    {
        "line": 8,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 16,
        "fullcodeline": "same_thread_group(p, current) : thread_group_leader(p))) {"
    }
]