[
    {
        "line": 3,
        "fullcodeline": "cnodeid_t nodeid = timr->it.mmtimer.node;"
    },
    {
        "line": 6,
        "fullcodeline": "spin_lock_irqsave(&timers[nodeid].lock, irqflags);"
    },
    {
        "line": 7,
        "fullcodeline": "if (timr->it.mmtimer.clock != TIMER_OFF) {"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned long expires = timr->it.mmtimer.expires;"
    },
    {
        "line": 9,
        "fullcodeline": "struct rb_node *n = timers[nodeid].timer_head.rb_node;"
    },
    {
        "line": 11,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "timr->it.mmtimer.clock = TIMER_OFF;"
    },
    {
        "line": 14,
        "fullcodeline": "timr->it.mmtimer.expires = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "if (!n) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (timers[nodeid].next == n) {"
    },
    {
        "line": 28,
        "fullcodeline": "spin_unlock_irqrestore(&timers[nodeid].lock, irqflags);"
    },
    {
        "line": 41,
        "fullcodeline": "mmtimer_disable_int(cnodeid_to_nasid(nodeid),"
    },
    {
        "line": 18,
        "fullcodeline": "if (t->timer == timr)"
    },
    {
        "line": 21,
        "fullcodeline": "if (expires < t->timer->it.mmtimer.expires)"
    },
    {
        "line": 33,
        "fullcodeline": "timers[nodeid].next = rb_next(n);"
    },
    {
        "line": 22,
        "fullcodeline": "n = n->rb_left;"
    },
    {
        "line": 24,
        "fullcodeline": "n = n->rb_right;"
    }
]