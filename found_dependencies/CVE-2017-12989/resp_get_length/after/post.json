[
    {
        "line": 12,
        "fullcodeline": "too_large = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "neg = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "result = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "saw_digit = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "ND_TCHECK(*bp);"
    },
    {
        "line": 63,
        "fullcodeline": "bp++;"
    },
    {
        "line": 64,
        "fullcodeline": "len--;"
    },
    {
        "line": 67,
        "fullcodeline": "ND_TCHECK(*bp);"
    },
    {
        "line": 72,
        "fullcodeline": "bp++;"
    },
    {
        "line": 73,
        "fullcodeline": "len--;"
    },
    {
        "line": 74,
        "fullcodeline": "*endp = bp;"
    },
    {
        "line": 84,
        "fullcodeline": "*endp = bp;"
    },
    {
        "line": 88,
        "fullcodeline": "*endp = bp;"
    },
    {
        "line": 9,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 14,
        "fullcodeline": "if (*bp == '-') {"
    },
    {
        "line": 50,
        "fullcodeline": "if (!saw_digit)"
    },
    {
        "line": 56,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 59,
        "fullcodeline": "if (*bp != '\\r') {"
    },
    {
        "line": 65,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 68,
        "fullcodeline": "if (*bp != '\\n') {"
    },
    {
        "line": 81,
        "fullcodeline": "return (too_large ? -3 : result);"
    },
    {
        "line": 85,
        "fullcodeline": "return (-2);"
    },
    {
        "line": 89,
        "fullcodeline": "return (-5);"
    },
    {
        "line": 15,
        "fullcodeline": "neg = 1;"
    },
    {
        "line": 16,
        "fullcodeline": "bp++;"
    },
    {
        "line": 17,
        "fullcodeline": "len--;"
    },
    {
        "line": 25,
        "fullcodeline": "ND_TCHECK(*bp);"
    },
    {
        "line": 26,
        "fullcodeline": "c = *bp;"
    },
    {
        "line": 34,
        "fullcodeline": "c -= '0';"
    },
    {
        "line": 46,
        "fullcodeline": "bp++;"
    },
    {
        "line": 47,
        "fullcodeline": "len--;"
    },
    {
        "line": 48,
        "fullcodeline": "saw_digit = 1;"
    },
    {
        "line": 60,
        "fullcodeline": "bp++;"
    },
    {
        "line": 69,
        "fullcodeline": "bp++;"
    },
    {
        "line": 79,
        "fullcodeline": "result = -1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 27,
        "fullcodeline": "if (!(c >= '0' && c <= '9')) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (result > (INT_MAX / 10)) {"
    },
    {
        "line": 77,
        "fullcodeline": "if (too_large || result != 1)"
    },
    {
        "line": 37,
        "fullcodeline": "too_large = 1;"
    },
    {
        "line": 28,
        "fullcodeline": "if (!saw_digit) {"
    },
    {
        "line": 39,
        "fullcodeline": "result *= 10;"
    },
    {
        "line": 78,
        "fullcodeline": "return (-4);"
    },
    {
        "line": 29,
        "fullcodeline": "bp++;"
    },
    {
        "line": 40,
        "fullcodeline": "if (result == INT_MAX && c > (INT_MAX % 10)) {"
    },
    {
        "line": 42,
        "fullcodeline": "too_large = 1;"
    },
    {
        "line": 44,
        "fullcodeline": "result += c;"
    }
]