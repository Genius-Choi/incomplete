[
    {
        "line": 26,
        "fullcodeline": "result = IPSet()"
    },
    {
        "line": 27,
        "fullcodeline": "for ip in itertools.chain(ip_addresses or (), extra_addresses or ()):"
    },
    {
        "line": 34,
        "fullcodeline": "result.add(network)"
    },
    {
        "line": 37,
        "fullcodeline": "if \":\" not in str(network):"
    },
    {
        "line": 29,
        "fullcodeline": "network = IPNetwork(ip)"
    },
    {
        "line": 38,
        "fullcodeline": "result.add(IPNetwork(network).ipv6(ipv4_compatible=True))"
    },
    {
        "line": 39,
        "fullcodeline": "result.add(IPNetwork(network).ipv6(ipv4_compatible=False))"
    },
    {
        "line": 40,
        "fullcodeline": "result.add(_6to4(network))"
    },
    {
        "line": 31,
        "fullcodeline": "raise Exception("
    },
    {
        "line": 32,
        "fullcodeline": "\"Invalid IP range provided: %s.\" % (ip,), config_path"
    }
]