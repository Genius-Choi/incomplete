[
    {
        "line": 2,
        "fullcodeline": "if url = args.find { |a| a =~ %r{^https?://(gist\\.)?github\\.com/} }"
    },
    {
        "line": 3,
        "fullcodeline": "idx = args.index(url)"
    },
    {
        "line": 25,
        "fullcodeline": "patch_file = File.join(tmp_dir, patch_name)"
    },
    {
        "line": 26,
        "fullcodeline": "File.open(patch_file, 'w') { |file| file.write(patch) }"
    },
    {
        "line": 4,
        "fullcodeline": "if $1 == 'gist.'"
    },
    {
        "line": 27,
        "fullcodeline": "args[idx] = patch_file"
    },
    {
        "line": 5,
        "fullcodeline": "path_parts = $'.sub(/#.*/, '').split('/')"
    },
    {
        "line": 6,
        "fullcodeline": "gist_id = path_parts.last"
    },
    {
        "line": 7,
        "fullcodeline": "patch_name = \"gist-#{gist_id}.txt\""
    },
    {
        "line": 8,
        "fullcodeline": "patch = api_client.gist_raw(gist_id)"
    },
    {
        "line": 10,
        "fullcodeline": "gh_url = resolve_github_url(url)"
    },
    {
        "line": 11,
        "fullcodeline": "case gh_url.project_path"
    },
    {
        "line": 12,
        "fullcodeline": "when /^pull\\/(\\d+)/"
    },
    {
        "line": 14,
        "fullcodeline": "patch_name = \"#{pull_id}.patch\""
    },
    {
        "line": 15,
        "fullcodeline": "patch = api_client.pullrequest_patch(gh_url.project, pull_id)"
    },
    {
        "line": 16,
        "fullcodeline": "when /^commit\\/([a-f0-9]{7,40})/"
    },
    {
        "line": 17,
        "fullcodeline": "commit_sha = $1"
    },
    {
        "line": 18,
        "fullcodeline": "patch_name = \"#{commit_sha}.patch\""
    },
    {
        "line": 19,
        "fullcodeline": "patch = api_client.commit_patch(gh_url.project, commit_sha)"
    }
]