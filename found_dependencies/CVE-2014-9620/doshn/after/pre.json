[
    {
        "line": 7,
        "fullcodeline": "int stripped = 1;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t nbadcap = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "uint64_t cap_hw1 = 0;\t/* SunOS 5.x hardware capabilites */"
    },
    {
        "line": 12,
        "fullcodeline": "uint64_t cap_sf1 = 0;\t/* SunOS 5.x software capabilites */"
    },
    {
        "line": 13,
        "fullcodeline": "char name[50];"
    },
    {
        "line": 27,
        "fullcodeline": "name_off = xsh_offset;"
    },
    {
        "line": 16,
        "fullcodeline": "if (size != xsh_sizeof) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) < (ssize_t)xsh_sizeof) {"
    },
    {
        "line": 35,
        "fullcodeline": "name[namesize] = '\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "off += size;"
    },
    {
        "line": 177,
        "fullcodeline": "if (file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \") == -1)"
    },
    {
        "line": 17,
        "fullcodeline": "if (file_printf(ms, \", corrupted section header size\") == -1)"
    },
    {
        "line": 25,
        "fullcodeline": "return -1;"
    },
    {
        "line": 178,
        "fullcodeline": "return -1;"
    },
    {
        "line": 222,
        "fullcodeline": "if (cap_sf1 & SF1_SUNW_FPUSED) {"
    },
    {
        "line": 229,
        "fullcodeline": "cap_sf1 &= ~SF1_SUNW_MASK;"
    },
    {
        "line": 31,
        "fullcodeline": "if ((namesize = pread(fd, name, sizeof(name) - 1, name_off + xsh_name)) == -1) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (strcmp(name, \".debug_info\") == 0)"
    },
    {
        "line": 39,
        "fullcodeline": "if (pread(fd, xsh_addr, xsh_sizeof, off) < (ssize_t)xsh_sizeof) {"
    },
    {
        "line": 75,
        "fullcodeline": "noff = 0;"
    },
    {
        "line": 104,
        "fullcodeline": "coff = 0;"
    },
    {
        "line": 185,
        "fullcodeline": "cdp = cap_desc_sparc;"
    },
    {
        "line": 190,
        "fullcodeline": "cdp = cap_desc_386;"
    },
    {
        "line": 193,
        "fullcodeline": "cdp = NULL;"
    },
    {
        "line": 196,
        "fullcodeline": "if (file_printf(ms, \", uses\") == -1)"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 33,
        "fullcodeline": "return -1;"
    },
    {
        "line": 41,
        "fullcodeline": "return -1;"
    },
    {
        "line": 64,
        "fullcodeline": "if ((nbuf = malloc(xsh_size)) == NULL) {"
    },
    {
        "line": 98,
        "fullcodeline": "if (nbadcap > 5)"
    },
    {
        "line": 197,
        "fullcodeline": "return -1;"
    },
    {
        "line": 54,
        "fullcodeline": "if (fsize != SIZE_UNKNOWN && xsh_offset > fsize) {"
    },
    {
        "line": 65,
        "fullcodeline": "file_error(ms, errno, \"Cannot allocate memory\""
    },
    {
        "line": 69,
        "fullcodeline": "if (pread(fd, nbuf, xsh_size, xsh_offset) < (ssize_t)xsh_size) {"
    },
    {
        "line": 79,
        "fullcodeline": "noff = donote(ms, nbuf, (size_t)noff,"
    },
    {
        "line": 100,
        "fullcodeline": "if (lseek(fd, xsh_offset, SEEK_SET) == (off_t)-1) {"
    },
    {
        "line": 108,
        "fullcodeline": "char cbuf[/*CONSTCOND*/"
    },
    {
        "line": 206,
        "fullcodeline": "++cdp;"
    },
    {
        "line": 223,
        "fullcodeline": "if (file_printf(ms,"
    },
    {
        "line": 226,
        "fullcodeline": ": \", not known to use frame pointer\") == -1)"
    },
    {
        "line": 67,
        "fullcodeline": "return -1;"
    },
    {
        "line": 72,
        "fullcodeline": "return -1;"
    },
    {
        "line": 77,
        "fullcodeline": "if (noff >= (off_t)xsh_size)"
    },
    {
        "line": 81,
        "fullcodeline": "if (noff == 0)"
    },
    {
        "line": 102,
        "fullcodeline": "return -1;"
    },
    {
        "line": 117,
        "fullcodeline": "if (cbuf[0] == 'A') {"
    },
    {
        "line": 147,
        "fullcodeline": "(void)memcpy(xcap_addr, cbuf, xcap_sizeof);"
    },
    {
        "line": 200,
        "fullcodeline": "if (cap_hw1 & cdp->cd_mask) {"
    },
    {
        "line": 227,
        "fullcodeline": "return -1;"
    },
    {
        "line": 235,
        "fullcodeline": "return -1;"
    },
    {
        "line": 110,
        "fullcodeline": "if ((coff += xcap_sizeof) > (off_t)xsh_size)"
    },
    {
        "line": 112,
        "fullcodeline": "if (read(fd, cbuf, (size_t)xcap_sizeof) !="
    },
    {
        "line": 152,
        "fullcodeline": "cap_hw1 |= xcap_val;"
    },
    {
        "line": 155,
        "fullcodeline": "cap_sf1 |= xcap_val;"
    },
    {
        "line": 204,
        "fullcodeline": "cap_hw1 &= ~cdp->cd_mask;"
    },
    {
        "line": 218,
        "fullcodeline": "return -1;"
    },
    {
        "line": 224,
        "fullcodeline": "(cap_sf1 & SF1_SUNW_FPKNWN)"
    },
    {
        "line": 115,
        "fullcodeline": "return -1;"
    },
    {
        "line": 213,
        "fullcodeline": "return -1;"
    },
    {
        "line": 165,
        "fullcodeline": "if (nbadcap++ > 2)"
    },
    {
        "line": 166,
        "fullcodeline": "coff = xsh_size;"
    },
    {
        "line": 201,
        "fullcodeline": "if (file_printf(ms,"
    },
    {
        "line": 202,
        "fullcodeline": "\" %s\", cdp->cd_name) == -1)"
    },
    {
        "line": 164,
        "fullcodeline": "return -1;"
    },
    {
        "line": 203,
        "fullcodeline": "return -1;"
    }
]