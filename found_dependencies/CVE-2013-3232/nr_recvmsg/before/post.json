[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sockaddr_ax25 *sax = (struct sockaddr_ax25 *)msg->msg_name;"
    },
    {
        "line": 15,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 27,
        "fullcodeline": "skb_reset_transport_header(skb);"
    },
    {
        "line": 28,
        "fullcodeline": "copied     = skb->len;"
    },
    {
        "line": 35,
        "fullcodeline": "er = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 50,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 52,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 16,
        "fullcodeline": "if (sk->sk_state != TCP_ESTABLISHED) {"
    },
    {
        "line": 22,
        "fullcodeline": "if ((skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT, flags & MSG_DONTWAIT, &er)) == NULL) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (copied > size) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (er < 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (sax != NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 23,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 31,
        "fullcodeline": "copied = size;"
    },
    {
        "line": 32,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 37,
        "fullcodeline": "skb_free_datagram(sk, skb);"
    },
    {
        "line": 38,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 43,
        "fullcodeline": "sax->sax25_family = AF_NETROM;"
    },
    {
        "line": 44,
        "fullcodeline": "skb_copy_from_linear_data_offset(skb, 7, sax->sax25_call.ax25_call,"
    },
    {
        "line": 18,
        "fullcodeline": "return -ENOTCONN;"
    }
]