[
    {
        "line": 2,
        "fullcodeline": "char *temp_buffer = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "char method_string[16] = \"\";"
    },
    {
        "line": 4,
        "fullcodeline": "char *log_archive = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int rename_result = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int stat_result = -1;"
    },
    {
        "line": 27,
        "fullcodeline": "last_log_rotation = time(NULL);"
    },
    {
        "line": 28,
        "fullcodeline": "update_program_status(FALSE);"
    },
    {
        "line": 30,
        "fullcodeline": "t = localtime_r(&rotation_time, &tm_s);"
    },
    {
        "line": 32,
        "fullcodeline": "stat_result = stat(log_file, &log_file_stat);"
    },
    {
        "line": 34,
        "fullcodeline": "close_log_file();"
    },
    {
        "line": 37,
        "fullcodeline": "asprintf(&log_archive, \"%s%snagios-%02d-%02d-%d-%02d.log\", log_archive_path, (log_archive_path[strlen(log_archive_path) - 1] == '/') ? \"\" : \"/\", t->tm_mon + 1, t->tm_mday, t->tm_year + 1900, t->tm_hour);"
    },
    {
        "line": 43,
        "fullcodeline": "archive_stat_result = stat(log_archive, &archive_stat);"
    },
    {
        "line": 50,
        "fullcodeline": "rename_result = my_rename(log_file, log_archive);"
    },
    {
        "line": 51,
        "fullcodeline": "log_fp = open_log_file();"
    },
    {
        "line": 61,
        "fullcodeline": "asprintf(&temp_buffer, \"LOG ROTATION: %s\\n\", method_string);"
    },
    {
        "line": 62,
        "fullcodeline": "write_to_all_logs_with_timestamp(temp_buffer, NSLOG_PROCESS_INFO, &rotation_time);"
    },
    {
        "line": 63,
        "fullcodeline": "my_free(temp_buffer);"
    },
    {
        "line": 66,
        "fullcodeline": "write_log_file_info(&rotation_time);"
    },
    {
        "line": 80,
        "fullcodeline": "my_free(log_archive);"
    },
    {
        "line": 12,
        "fullcodeline": "if(log_rotation_method == LOG_ROTATION_NONE) {"
    },
    {
        "line": 44,
        "fullcodeline": "if((0 == archive_stat_result) ||"
    },
    {
        "line": 52,
        "fullcodeline": "if (log_fp == NULL)"
    },
    {
        "line": 68,
        "fullcodeline": "if(stat_result == 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if(log_current_states==TRUE) {"
    },
    {
        "line": 45,
        "fullcodeline": "((-1 == archive_stat_result) && (ENOENT != errno))) {"
    },
    {
        "line": 56,
        "fullcodeline": "my_free(log_archive);"
    },
    {
        "line": 69,
        "fullcodeline": "chmod(log_file, log_file_stat.st_mode);"
    },
    {
        "line": 70,
        "fullcodeline": "chown(log_file, log_file_stat.st_uid, log_file_stat.st_gid);"
    },
    {
        "line": 75,
        "fullcodeline": "log_host_states(CURRENT_STATES, &rotation_time);"
    },
    {
        "line": 76,
        "fullcodeline": "log_service_states(CURRENT_STATES, &rotation_time);"
    },
    {
        "line": 15,
        "fullcodeline": "else if(log_rotation_method == LOG_ROTATION_HOURLY)"
    },
    {
        "line": 16,
        "fullcodeline": "strcpy(method_string, \"HOURLY\");"
    },
    {
        "line": 17,
        "fullcodeline": "else if(log_rotation_method == LOG_ROTATION_DAILY)"
    },
    {
        "line": 18,
        "fullcodeline": "strcpy(method_string, \"DAILY\");"
    },
    {
        "line": 19,
        "fullcodeline": "else if(log_rotation_method == LOG_ROTATION_WEEKLY)"
    },
    {
        "line": 20,
        "fullcodeline": "strcpy(method_string, \"WEEKLY\");"
    },
    {
        "line": 21,
        "fullcodeline": "else if(log_rotation_method == LOG_ROTATION_MONTHLY)"
    },
    {
        "line": 22,
        "fullcodeline": "strcpy(method_string, \"MONTHLY\");"
    }
]