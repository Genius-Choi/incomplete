[
    {
        "line": 7,
        "fullcodeline": "int\t\texmode_was = exmode_active;"
    },
    {
        "line": 169,
        "fullcodeline": "ex_no_reprint = TRUE;"
    },
    {
        "line": 9,
        "fullcodeline": "if ((eap->cmdidx != CMD_pedit && ERROR_IF_POPUP_WINDOW)"
    },
    {
        "line": 15,
        "fullcodeline": "if (exmode_active && (eap->cmdidx == CMD_visual"
    },
    {
        "line": 19,
        "fullcodeline": "ex_pressedreturn = FALSE;"
    },
    {
        "line": 64,
        "fullcodeline": "if ((eap->cmdidx == CMD_new"
    },
    {
        "line": 67,
        "fullcodeline": "|| eap->cmdidx == CMD_vnew) && *eap->arg == NUL)"
    },
    {
        "line": 161,
        "fullcodeline": "if (old_curwin != NULL"
    },
    {
        "line": 166,
        "fullcodeline": "&& (cmdmod.cmod_flags & CMOD_KEEPALT) == 0)"
    },
    {
        "line": 16,
        "fullcodeline": "|| eap->cmdidx == CMD_view))"
    },
    {
        "line": 20,
        "fullcodeline": "if (*eap->arg == NUL)"
    },
    {
        "line": 71,
        "fullcodeline": "(void)do_ecmd(0, NULL, NULL, eap, ECMD_ONE,"
    },
    {
        "line": 165,
        "fullcodeline": "&& old_curwin->w_buffer != curbuf"
    },
    {
        "line": 66,
        "fullcodeline": "|| eap->cmdidx == CMD_tabedit"
    },
    {
        "line": 75,
        "fullcodeline": "else if ((eap->cmdidx != CMD_split && eap->cmdidx != CMD_vsplit)"
    },
    {
        "line": 164,
        "fullcodeline": "&& win_valid(old_curwin)"
    },
    {
        "line": 65,
        "fullcodeline": "|| eap->cmdidx == CMD_tabnew"
    },
    {
        "line": 73,
        "fullcodeline": "old_curwin == NULL ? curwin : NULL);"
    },
    {
        "line": 76,
        "fullcodeline": "|| *eap->arg != NUL"
    },
    {
        "line": 88,
        "fullcodeline": "n = readonlymode;"
    },
    {
        "line": 163,
        "fullcodeline": "&& curwin != old_curwin"
    },
    {
        "line": 25,
        "fullcodeline": "int\trd = RedrawingDisabled;"
    },
    {
        "line": 26,
        "fullcodeline": "int\tnwr = no_wait_return;"
    },
    {
        "line": 27,
        "fullcodeline": "int\tms = msg_scroll;"
    },
    {
        "line": 42,
        "fullcodeline": "need_wait_return = FALSE;"
    },
    {
        "line": 47,
        "fullcodeline": "must_redraw = CLEAR;"
    },
    {
        "line": 50,
        "fullcodeline": "main_loop(FALSE, TRUE);"
    },
    {
        "line": 85,
        "fullcodeline": "if (*eap->arg != NUL && text_or_buf_locked())"
    },
    {
        "line": 96,
        "fullcodeline": "if (do_ecmd(0, (eap->cmdidx == CMD_enew ? NULL : eap->arg),"
    },
    {
        "line": 151,
        "fullcodeline": "n = curwin->w_arg_idx_invalid;"
    },
    {
        "line": 152,
        "fullcodeline": "check_arg_idx(curwin);"
    },
    {
        "line": 162,
        "fullcodeline": "&& *eap->arg != NUL"
    },
    {
        "line": 32,
        "fullcodeline": "if (eap->nextcmd != NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "if (exmode_was != EXMODE_VIM)"
    },
    {
        "line": 89,
        "fullcodeline": "if (eap->cmdidx == CMD_view || eap->cmdidx == CMD_sview)"
    },
    {
        "line": 90,
        "fullcodeline": "readonlymode = TRUE;"
    },
    {
        "line": 94,
        "fullcodeline": "if (eap->cmdidx != CMD_balt && eap->cmdidx != CMD_badd)"
    },
    {
        "line": 149,
        "fullcodeline": "if (eap->do_ecmd_cmd != NULL)"
    },
    {
        "line": 153,
        "fullcodeline": "if (n != curwin->w_arg_idx_invalid)"
    },
    {
        "line": 39,
        "fullcodeline": "settmode(TMODE_RAW);"
    },
    {
        "line": 111,
        "fullcodeline": "if (old_curwin != NULL)"
    },
    {
        "line": 91,
        "fullcodeline": "else if (eap->cmdidx == CMD_enew)"
    },
    {
        "line": 107,
        "fullcodeline": "+ (eap->cmdidx == CMD_balt ? ECMD_ALTBUF : 0)"
    },
    {
        "line": 108,
        "fullcodeline": ", old_curwin == NULL ? curwin : NULL) == FAIL)"
    },
    {
        "line": 113,
        "fullcodeline": "need_hide = (curbufIsChanged() && curbuf->b_nwindows <= 1);"
    },
    {
        "line": 92,
        "fullcodeline": "readonlymode = FALSE;   // 'readonly' doesn't make sense in an"
    },
    {
        "line": 99,
        "fullcodeline": "(*eap->arg == NUL && eap->do_ecmd_lnum == 0"
    },
    {
        "line": 100,
        "fullcodeline": "&& vim_strchr(p_cpo, CPO_GOTO1) != NULL)"
    },
    {
        "line": 106,
        "fullcodeline": "+ (eap->cmdidx == CMD_badd ? ECMD_ADDBUF : 0)"
    },
    {
        "line": 137,
        "fullcodeline": "else if (readonlymode && curbuf->b_nwindows == 1)"
    },
    {
        "line": 143,
        "fullcodeline": "curbuf->b_p_ro = TRUE;"
    },
    {
        "line": 105,
        "fullcodeline": "+ (old_curwin != NULL ? ECMD_OLDBUF : 0)"
    },
    {
        "line": 114,
        "fullcodeline": "if (!need_hide || buf_hide(curbuf))"
    },
    {
        "line": 126,
        "fullcodeline": "win_close(curwin, !need_hide && !buf_hide(curbuf));"
    },
    {
        "line": 102,
        "fullcodeline": "(buf_hide(curbuf) ? ECMD_HIDE : 0)"
    }
]