[
    {
        "line": 5,
        "fullcodeline": "char network_line[8192];"
    },
    {
        "line": 9,
        "fullcodeline": "char string[1024];"
    },
    {
        "line": 10,
        "fullcodeline": "unsigned long msg_id = UINT32_MAX;"
    },
    {
        "line": 11,
        "fullcodeline": "enum network_protocol version = network_client_get_version(fd);"
    },
    {
        "line": 13,
        "fullcodeline": "ioctl(fd, FIONREAD, &nread);"
    },
    {
        "line": 15,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"new connection data = %d\\n\",nread);"
    },
    {
        "line": 39,
        "fullcodeline": "network_packet=malloc((nread+1) * sizeof(char));"
    },
    {
        "line": 40,
        "fullcodeline": "read(fd, network_packet, nread);"
    },
    {
        "line": 41,
        "fullcodeline": "network_packet[nread]='\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "memset(network_line, 0, 8192);"
    },
    {
        "line": 44,
        "fullcodeline": "p=network_packet;"
    },
    {
        "line": 45,
        "fullcodeline": "p_sem(sem_id);"
    },
    {
        "line": 256,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 257,
        "fullcodeline": "FD_CLR(fd, &readfds);"
    },
    {
        "line": 17,
        "fullcodeline": "if(nread == 0)"
    },
    {
        "line": 28,
        "fullcodeline": "if ( nread >= 8192 ) {"
    },
    {
        "line": 47,
        "fullcodeline": "while ( get_network_line(p, network_line) ) {"
    },
    {
        "line": 19,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_PROCESS, \"%d failed, got 0 close connection to listener \", fd);"
    },
    {
        "line": 20,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 21,
        "fullcodeline": "FD_CLR(fd, &readfds);"
    },
    {
        "line": 22,
        "fullcodeline": "remove(fd);"
    },
    {
        "line": 23,
        "fullcodeline": "network_client_dump ();"
    },
    {
        "line": 30,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ERROR, \"%d failed, more than 8192 close connection to listener \", fd);"
    },
    {
        "line": 31,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 32,
        "fullcodeline": "FD_CLR(fd, &readfds);"
    },
    {
        "line": 49,
        "fullcodeline": "if ( strlen(network_line) > 0 ) {"
    },
    {
        "line": 50,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"line = [%s]\",network_line);"
    },
    {
        "line": 54,
        "fullcodeline": "if ( !strncmp(network_line, \"MSGID: \", strlen(\"MSGID: \")) ) {"
    },
    {
        "line": 57,
        "fullcodeline": "msg_id=strtoul(&(network_line[strlen(\"MSGID: \")]), NULL, 10);"
    },
    {
        "line": 59,
        "fullcodeline": "p+=strlen(network_line);"
    },
    {
        "line": 62,
        "fullcodeline": "} else if ( !strncmp(network_line, \"Version: \", strlen(\"Version: \")) ) {"
    },
    {
        "line": 63,
        "fullcodeline": "char *head = network_line, *end;"
    },
    {
        "line": 65,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: VERSION\");"
    },
    {
        "line": 67,
        "fullcodeline": "version = strtoul(head + 9, &end, 10);"
    },
    {
        "line": 71,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"VERSION=%d\", version);"
    },
    {
        "line": 80,
        "fullcodeline": "network_client_set_version(fd, version);"
    },
    {
        "line": 83,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 85,
        "fullcodeline": "p+=strlen(network_line);"
    },
    {
        "line": 68,
        "fullcodeline": "if (!head[9] || *end)"
    },
    {
        "line": 73,
        "fullcodeline": "if (version < network_procotol_version) {"
    },
    {
        "line": 88,
        "fullcodeline": "} else if ( !strncmp(network_line, \"Capabilities: \", strlen(\"Capabilities: \")) ) {"
    },
    {
        "line": 90,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: Capabilities\");"
    },
    {
        "line": 108,
        "fullcodeline": "p+=strlen(network_line);"
    },
    {
        "line": 76,
        "fullcodeline": "} else if (version >= PROTOCOL_LAST) {"
    },
    {
        "line": 92,
        "fullcodeline": "if ( version > PROTOCOL_UNKNOWN ) {"
    },
    {
        "line": 77,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_PROCESS, \"Future VERSION=%d\", version);"
    },
    {
        "line": 78,
        "fullcodeline": "version = PROTOCOL_LAST - 1;"
    },
    {
        "line": 96,
        "fullcodeline": "snprintf(string, sizeof(string), \"Version: %d\\nCapabilities: \\n\\n\", version);"
    },
    {
        "line": 98,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"SEND: %s\", string);"
    },
    {
        "line": 100,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 104,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"Capabilities recv, but no version line\");"
    },
    {
        "line": 111,
        "fullcodeline": "} else if ( !strncmp(network_line, \"GET_DN \", strlen(\"GET_DN \")) && msg_id != UINT32_MAX && version > PROTOCOL_UNKNOWN && version < PROTOCOL_3) {"
    },
    {
        "line": 113,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: GET_DN\");"
    },
    {
        "line": 115,
        "fullcodeline": "id=strtoul(&(network_line[strlen(\"GET_DN \")]), NULL, 10);"
    },
    {
        "line": 117,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"id: %ld\",id);"
    },
    {
        "line": 168,
        "fullcodeline": "p+=strlen(network_line)+1;"
    },
    {
        "line": 169,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 119,
        "fullcodeline": "if ( id <= notify_last_id.id) {"
    },
    {
        "line": 123,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"try to read %ld from cache\", id);"
    },
    {
        "line": 126,
        "fullcodeline": "if ( (dn_string = notifier_cache_get(id)) == NULL ) {"
    },
    {
        "line": 147,
        "fullcodeline": "if ( dn_string != NULL ) {"
    },
    {
        "line": 163,
        "fullcodeline": "network_client_set_next_id(fd, id);"
    },
    {
        "line": 164,
        "fullcodeline": "network_client_set_msg_id(fd, msg_id);"
    },
    {
        "line": 171,
        "fullcodeline": "} else if (!strncmp(p, \"WAIT_ID \", 8) && msg_id != UINT32_MAX && version >= PROTOCOL_3) {"
    },
    {
        "line": 172,
        "fullcodeline": "char *head = network_line, *end;"
    },
    {
        "line": 173,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: WAIT_ID\");"
    },
    {
        "line": 174,
        "fullcodeline": "id = strtoul(head + 8, &end, 10);"
    },
    {
        "line": 177,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"id: %ld\", id);"
    },
    {
        "line": 188,
        "fullcodeline": "p += strlen(network_line) + 1;"
    },
    {
        "line": 189,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 128,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"%ld not found in cache\", id);"
    },
    {
        "line": 130,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"%ld get one dn\", id);"
    },
    {
        "line": 149,
        "fullcodeline": "snprintf(string, sizeof(string), \"MSGID: %ld\\n%s\\n\\n\",msg_id,dn_string);"
    },
    {
        "line": 151,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"--> %d: [%s]\",fd, string);"
    },
    {
        "line": 153,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 175,
        "fullcodeline": "if (!head[8] || *end)"
    },
    {
        "line": 179,
        "fullcodeline": "if (id <= notify_last_id.id) {"
    },
    {
        "line": 133,
        "fullcodeline": "if( (dn_string=notify_transcation_get_one_dn ( id )) == NULL ) {"
    },
    {
        "line": 180,
        "fullcodeline": "snprintf(string, sizeof(string), \"MSGID: %ld\\n%ld\\n\\n\", msg_id, notify_last_id.id);"
    },
    {
        "line": 181,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 191,
        "fullcodeline": "} else if ( !strncmp(network_line, \"GET_ID\", strlen(\"GET_ID\")) && msg_id != UINT32_MAX  && network_client_get_version(fd) > 0) {"
    },
    {
        "line": 135,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"%ld failed \", id);"
    },
    {
        "line": 138,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ERROR, \"%d failed, close connection to listener \", fd);"
    },
    {
        "line": 139,
        "fullcodeline": "close(fd);"
    },
    {
        "line": 140,
        "fullcodeline": "FD_CLR(fd, &readfds);"
    },
    {
        "line": 184,
        "fullcodeline": "network_client_set_next_id(fd, id);"
    },
    {
        "line": 185,
        "fullcodeline": "network_client_set_msg_id(fd, msg_id);"
    },
    {
        "line": 193,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: GET_ID\");"
    },
    {
        "line": 197,
        "fullcodeline": "snprintf(string, sizeof(string), \"MSGID: %ld\\n%ld\\n\\n\",msg_id,notify_last_id.id);"
    },
    {
        "line": 199,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 201,
        "fullcodeline": "p+=strlen(network_line)+1;"
    },
    {
        "line": 202,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 205,
        "fullcodeline": "} else if ( !strncmp(network_line, \"GET_SCHEMA_ID\", strlen(\"GET_SCHEMA_ID\")) && msg_id != UINT32_MAX  && network_client_get_version(fd) > 0) {"
    },
    {
        "line": 207,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: GET_SCHEMA_ID\");"
    },
    {
        "line": 211,
        "fullcodeline": "snprintf(string, sizeof(string), \"MSGID: %ld\\n%ld\\n\\n\",msg_id,SCHEMA_ID);"
    },
    {
        "line": 213,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"--> %d: [%s]\",fd, string);"
    },
    {
        "line": 215,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 217,
        "fullcodeline": "p+=strlen(network_line)+1;"
    },
    {
        "line": 218,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 221,
        "fullcodeline": "} else if ( !strncmp(network_line, \"ALIVE\", strlen(\"ALIVE\")) && msg_id != UINT32_MAX  && network_client_get_version(fd) > 0) {"
    },
    {
        "line": 223,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ALL, \"RECV: ALIVE\");"
    },
    {
        "line": 225,
        "fullcodeline": "snprintf(string, sizeof(string), \"MSGID: %ld\\nOKAY\\n\\n\",msg_id);"
    },
    {
        "line": 227,
        "fullcodeline": "write(fd, string, strlen(string));"
    },
    {
        "line": 229,
        "fullcodeline": "p+=strlen(network_line)+1;"
    },
    {
        "line": 230,
        "fullcodeline": "msg_id = UINT32_MAX;"
    },
    {
        "line": 234,
        "fullcodeline": "p+=strlen(network_line);"
    },
    {
        "line": 236,
        "fullcodeline": "if (strlen(network_line) == 0 ) {"
    },
    {
        "line": 237,
        "fullcodeline": "p+=1;"
    },
    {
        "line": 239,
        "fullcodeline": "univention_debug(UV_DEBUG_TRANSFILE, UV_DEBUG_ERROR, \"Drop package [%s]\", network_line);"
    }
]