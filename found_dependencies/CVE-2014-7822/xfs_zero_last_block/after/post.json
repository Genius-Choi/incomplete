[
    {
        "line": 6,
        "fullcodeline": "struct xfs_mount\t*mp = ip->i_mount;"
    },
    {
        "line": 7,
        "fullcodeline": "xfs_fileoff_t\t\tlast_fsb = XFS_B_TO_FSBT(mp, isize);"
    },
    {
        "line": 8,
        "fullcodeline": "int\t\t\tzero_offset = XFS_B_FSB_OFFSET(mp, isize);"
    },
    {
        "line": 10,
        "fullcodeline": "int\t\t\tnimaps = 1;"
    },
    {
        "line": 11,
        "fullcodeline": "int\t\t\terror = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "xfs_ilock(ip, XFS_ILOCK_EXCL);"
    },
    {
        "line": 15,
        "fullcodeline": "error = xfs_bmapi_read(ip, last_fsb, 1, &imap, &nimaps, 0);"
    },
    {
        "line": 16,
        "fullcodeline": "xfs_iunlock(ip, XFS_ILOCK_EXCL);"
    },
    {
        "line": 20,
        "fullcodeline": "ASSERT(nimaps > 0);"
    },
    {
        "line": 29,
        "fullcodeline": "zero_len = mp->m_sb.sb_blocksize - zero_offset;"
    },
    {
        "line": 26,
        "fullcodeline": "if (imap.br_startblock == HOLESTARTBLOCK)"
    },
    {
        "line": 30,
        "fullcodeline": "if (isize + zero_len > offset)"
    },
    {
        "line": 32,
        "fullcodeline": "return xfs_iozero(ip, isize, zero_len);"
    },
    {
        "line": 31,
        "fullcodeline": "zero_len = offset - isize;"
    }
]