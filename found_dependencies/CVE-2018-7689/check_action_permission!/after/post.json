[
    {
        "line": 2,
        "fullcodeline": "super(skip_source)"
    },
    {
        "line": 10,
        "fullcodeline": "target_project = Project.get_by_name(self.target_project)"
    },
    {
        "line": 12,
        "fullcodeline": "target_package = target_project.packages.find_by_name(self.target_package)"
    },
    {
        "line": 13,
        "fullcodeline": "initialize_devel_package = target_project.find_attribute('OBS', 'InitializeDevelPackage')"
    },
    {
        "line": 15,
        "fullcodeline": "source_package = Package.get_by_project_and_name(source_project, self.source_package)"
    },
    {
        "line": 17,
        "fullcodeline": "msg = 'No permission to initialize the source package as a devel package'"
    },
    {
        "line": 1,
        "fullcodeline": "def check_action_permission!(skip_source = nil)"
    },
    {
        "line": 9,
        "fullcodeline": "return unless skip_source"
    },
    {
        "line": 11,
        "fullcodeline": "return unless target_project && target_project.is_a?(Project)"
    },
    {
        "line": 14,
        "fullcodeline": "return if target_package || !initialize_devel_package"
    },
    {
        "line": 16,
        "fullcodeline": "return if !source_package || User.current.can_modify_package?(source_package)"
    }
]