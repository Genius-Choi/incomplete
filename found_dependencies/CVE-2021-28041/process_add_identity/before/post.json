[
    {
        "line": 4,
        "fullcodeline": "int success = 0, confirm = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "char *fp, *comment = NULL, *sk_provider = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "char canonical_provider[PATH_MAX];"
    },
    {
        "line": 7,
        "fullcodeline": "time_t death = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "u_int seconds = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "struct sshkey *k = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "int r = SSH_ERR_INTERNAL_ERROR;"
    },
    {
        "line": 12,
        "fullcodeline": "debug2_f(\"entering\");"
    },
    {
        "line": 69,
        "fullcodeline": "id->key = k;"
    },
    {
        "line": 70,
        "fullcodeline": "id->comment = comment;"
    },
    {
        "line": 71,
        "fullcodeline": "id->death = death;"
    },
    {
        "line": 72,
        "fullcodeline": "id->confirm = confirm;"
    },
    {
        "line": 73,
        "fullcodeline": "id->sk_provider = sk_provider;"
    },
    {
        "line": 78,
        "fullcodeline": "debug_f(\"add %s %s \\\"%.100s\\\" (life: %u) (confirm: %u) \""
    },
    {
        "line": 81,
        "fullcodeline": "free(fp);"
    },
    {
        "line": 83,
        "fullcodeline": "k = NULL;"
    },
    {
        "line": 84,
        "fullcodeline": "comment = NULL;"
    },
    {
        "line": 85,
        "fullcodeline": "sk_provider = NULL;"
    },
    {
        "line": 86,
        "fullcodeline": "success = 1;"
    },
    {
        "line": 88,
        "fullcodeline": "free(sk_provider);"
    },
    {
        "line": 89,
        "fullcodeline": "free(comment);"
    },
    {
        "line": 90,
        "fullcodeline": "sshkey_free(k);"
    },
    {
        "line": 91,
        "fullcodeline": "send_status(e, success);"
    },
    {
        "line": 13,
        "fullcodeline": "if ((r = sshkey_private_deserialize(e->request, &k)) != 0 ||"
    },
    {
        "line": 19,
        "fullcodeline": "if (parse_key_constraints(e->request, k, &death, &seconds, &confirm,"
    },
    {
        "line": 26,
        "fullcodeline": "if (sk_provider != NULL) {"
    },
    {
        "line": 51,
        "fullcodeline": "if ((r = sshkey_shield_private(k)) != 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (lifetime && !death)"
    },
    {
        "line": 57,
        "fullcodeline": "if ((id = lookup_identity(k)) == NULL) {"
    },
    {
        "line": 75,
        "fullcodeline": "if ((fp = sshkey_fingerprint(k, SSH_FP_HASH_DEFAULT,"
    },
    {
        "line": 79,
        "fullcodeline": "\"(provider: %s)\", sshkey_ssh_name(k), fp, comment, seconds,"
    },
    {
        "line": 80,
        "fullcodeline": "confirm, sk_provider == NULL ? \"none\" : sk_provider);"
    },
    {
        "line": 15,
        "fullcodeline": "(r = sshbuf_get_cstring(e->request, &comment, NULL)) != 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "error_fr(r, \"parse\");"
    },
    {
        "line": 21,
        "fullcodeline": "error_f(\"failed to parse constraints\");"
    },
    {
        "line": 22,
        "fullcodeline": "sshbuf_reset(e->request);"
    },
    {
        "line": 52,
        "fullcodeline": "error_fr(r, \"shield private\");"
    },
    {
        "line": 56,
        "fullcodeline": "death = monotime() + lifetime;"
    },
    {
        "line": 58,
        "fullcodeline": "id = xcalloc(1, sizeof(Identity));"
    },
    {
        "line": 59,
        "fullcodeline": "TAILQ_INSERT_TAIL(&idtab->idlist, id, next);"
    },
    {
        "line": 77,
        "fullcodeline": "fatal_f(\"sshkey_fingerprint failed\");"
    },
    {
        "line": 14,
        "fullcodeline": "k == NULL ||"
    },
    {
        "line": 27,
        "fullcodeline": "if (!sshkey_is_sk(k)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (strcasecmp(sk_provider, \"internal\") == 0) {"
    },
    {
        "line": 64,
        "fullcodeline": "sshkey_free(id->key);"
    },
    {
        "line": 65,
        "fullcodeline": "free(id->comment);"
    },
    {
        "line": 66,
        "fullcodeline": "free(id->sk_provider);"
    },
    {
        "line": 28,
        "fullcodeline": "error(\"Cannot add provider: %s is not an \""
    },
    {
        "line": 33,
        "fullcodeline": "debug_f(\"internal provider\");"
    },
    {
        "line": 29,
        "fullcodeline": "\"authenticator-hosted key\", sshkey_type(k));"
    },
    {
        "line": 41,
        "fullcodeline": "free(sk_provider);"
    },
    {
        "line": 42,
        "fullcodeline": "sk_provider = xstrdup(canonical_provider);"
    },
    {
        "line": 35,
        "fullcodeline": "if (realpath(sk_provider, canonical_provider) == NULL) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (match_pattern_list(sk_provider,"
    },
    {
        "line": 36,
        "fullcodeline": "verbose(\"failed provider \\\"%.100s\\\": \""
    },
    {
        "line": 45,
        "fullcodeline": "error(\"Refusing add key: \""
    },
    {
        "line": 38,
        "fullcodeline": "strerror(errno));"
    }
]