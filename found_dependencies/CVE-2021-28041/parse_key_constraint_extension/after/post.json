[
    {
        "line": 3,
        "fullcodeline": "char *ext_name = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "debug_f(\"constraint ext %s\", ext_name);"
    },
    {
        "line": 32,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "free(ext_name);"
    },
    {
        "line": 6,
        "fullcodeline": "if ((r = sshbuf_get_cstring(m, &ext_name, NULL)) != 0) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (strcmp(ext_name, \"sk-provider@openssh.com\") == 0) {"
    },
    {
        "line": 7,
        "fullcodeline": "error_fr(r, \"parse constraint extension\");"
    },
    {
        "line": 12,
        "fullcodeline": "if (sk_providerp == NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (*sk_providerp != NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "if ((r = sshbuf_get_cstring(m, sk_providerp, NULL)) != 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "error_f(\"unsupported constraint \\\"%s\\\"\", ext_name);"
    },
    {
        "line": 28,
        "fullcodeline": "r = SSH_ERR_FEATURE_UNSUPPORTED;"
    },
    {
        "line": 13,
        "fullcodeline": "error_f(\"%s not valid here\", ext_name);"
    },
    {
        "line": 14,
        "fullcodeline": "r = SSH_ERR_INVALID_FORMAT;"
    },
    {
        "line": 18,
        "fullcodeline": "error_f(\"%s already set\", ext_name);"
    },
    {
        "line": 19,
        "fullcodeline": "r = SSH_ERR_INVALID_FORMAT;"
    },
    {
        "line": 23,
        "fullcodeline": "error_fr(r, \"parse %s\", ext_name);"
    }
]