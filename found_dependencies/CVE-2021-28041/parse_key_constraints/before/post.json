[
    {
        "line": 6,
        "fullcodeline": "u_int seconds, maxsign = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "char *ext_name = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "struct sshbuf *b = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "while (sshbuf_len(m)) {"
    },
    {
        "line": 11,
        "fullcodeline": "if ((r = sshbuf_get_u8(m, &ctype)) != 0) {"
    },
    {
        "line": 12,
        "fullcodeline": "error_fr(r, \"parse constraint type\");"
    },
    {
        "line": 25,
        "fullcodeline": "*deathp = monotime() + seconds;"
    },
    {
        "line": 26,
        "fullcodeline": "*secondsp = seconds;"
    },
    {
        "line": 33,
        "fullcodeline": "*confirmp = 1;"
    },
    {
        "line": 58,
        "fullcodeline": "debug_f(\"constraint ext %s\", ext_name);"
    },
    {
        "line": 78,
        "fullcodeline": "free(ext_name);"
    },
    {
        "line": 81,
        "fullcodeline": "error_f(\"Unknown constraint %d\", ctype);"
    },
    {
        "line": 83,
        "fullcodeline": "free(ext_name);"
    },
    {
        "line": 84,
        "fullcodeline": "sshbuf_free(b);"
    },
    {
        "line": 17,
        "fullcodeline": "if (*deathp != 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "if ((r = sshbuf_get_u32(m, &seconds)) != 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (*confirmp != 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (k == NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (maxsign != 0) {"
    },
    {
        "line": 44,
        "fullcodeline": "if ((r = sshbuf_get_u32(m, &maxsign)) != 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if ((r = sshkey_enable_maxsign(k, maxsign)) != 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "if ((r = sshbuf_get_cstring(m, &ext_name, NULL)) != 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (strcmp(ext_name, \"sk-provider@openssh.com\") == 0) {"
    },
    {
        "line": 85,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "error_f(\"lifetime already set\");"
    },
    {
        "line": 22,
        "fullcodeline": "error_fr(r, \"parse lifetime constraint\");"
    },
    {
        "line": 30,
        "fullcodeline": "error_f(\"confirm already set\");"
    },
    {
        "line": 37,
        "fullcodeline": "error_f(\"maxsign not valid here\");"
    },
    {
        "line": 41,
        "fullcodeline": "error_f(\"maxsign already set\");"
    },
    {
        "line": 45,
        "fullcodeline": "error_fr(r, \"parse maxsign constraint\");"
    },
    {
        "line": 49,
        "fullcodeline": "error_fr(r, \"enable maxsign\");"
    },
    {
        "line": 55,
        "fullcodeline": "error_fr(r, \"parse constraint extension\");"
    },
    {
        "line": 60,
        "fullcodeline": "if (sk_providerp == NULL) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (*sk_providerp != NULL) {"
    },
    {
        "line": 68,
        "fullcodeline": "if ((r = sshbuf_get_cstring(m,"
    },
    {
        "line": 74,
        "fullcodeline": "error_f(\"unsupported constraint \\\"%s\\\"\","
    },
    {
        "line": 61,
        "fullcodeline": "error_f(\"%s not valid here\", ext_name);"
    },
    {
        "line": 65,
        "fullcodeline": "error_f(\"%s already set\", ext_name);"
    },
    {
        "line": 70,
        "fullcodeline": "error_fr(r, \"parse %s\", ext_name);"
    }
]