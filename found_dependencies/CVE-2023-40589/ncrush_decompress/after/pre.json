[
    {
        "line": 20,
        "fullcodeline": "WINPR_ASSERT(ncrush);"
    },
    {
        "line": 21,
        "fullcodeline": "WINPR_ASSERT(pSrcData);"
    },
    {
        "line": 22,
        "fullcodeline": "WINPR_ASSERT(ppDstData);"
    },
    {
        "line": 23,
        "fullcodeline": "WINPR_ASSERT(pDstSize);"
    },
    {
        "line": 28,
        "fullcodeline": "BYTE* HistoryBuffer = ncrush->HistoryBuffer;"
    },
    {
        "line": 29,
        "fullcodeline": "const BYTE* HistoryBufferEnd = &HistoryBuffer[ncrush->HistoryEndOffset];"
    },
    {
        "line": 48,
        "fullcodeline": "BYTE* HistoryPtr = ncrush->HistoryPtr;"
    },
    {
        "line": 57,
        "fullcodeline": "const BYTE* SrcEnd = &pSrcData[SrcSize];"
    },
    {
        "line": 58,
        "fullcodeline": "const BYTE* SrcPtr = pSrcData + 4;"
    },
    {
        "line": 60,
        "fullcodeline": "INT32 nbits = 32;"
    },
    {
        "line": 61,
        "fullcodeline": "UINT32 bits = get_dword(pSrcData);"
    },
    {
        "line": 287,
        "fullcodeline": "const intptr_t hsize = HistoryPtr - ncrush->HistoryPtr;"
    },
    {
        "line": 25,
        "fullcodeline": "if (ncrush->HistoryEndOffset != 65535)"
    },
    {
        "line": 31,
        "fullcodeline": "if (flags & PACKET_AT_FRONT)"
    },
    {
        "line": 41,
        "fullcodeline": "if (flags & PACKET_FLUSHED)"
    },
    {
        "line": 288,
        "fullcodeline": "WINPR_ASSERT(hsize >= 0);"
    },
    {
        "line": 289,
        "fullcodeline": "WINPR_ASSERT(hsize <= UINT32_MAX);"
    },
    {
        "line": 36,
        "fullcodeline": "MoveMemory(HistoryBuffer, (ncrush->HistoryPtr - 32768), 32768);"
    },
    {
        "line": 37,
        "fullcodeline": "ncrush->HistoryPtr = &(HistoryBuffer[32768]);"
    },
    {
        "line": 43,
        "fullcodeline": "ncrush->HistoryPtr = HistoryBuffer;"
    },
    {
        "line": 44,
        "fullcodeline": "ZeroMemory(HistoryBuffer, sizeof(ncrush->HistoryBuffer));"
    },
    {
        "line": 50,
        "fullcodeline": "if (!(flags & PACKET_COMPRESSED))"
    },
    {
        "line": 95,
        "fullcodeline": "CopyOffsetIndex = IndexLEC - 257;"
    },
    {
        "line": 221,
        "fullcodeline": "CopyOffsetPtr = &HistoryBuffer[(HistoryPtr - HistoryBuffer - CopyOffset) & 0xFFFF];"
    },
    {
        "line": 222,
        "fullcodeline": "LengthOfMatch = LengthOfMatchBase;"
    },
    {
        "line": 231,
        "fullcodeline": "CopyOffsetPtr = HistoryPtr - CopyOffset;"
    },
    {
        "line": 232,
        "fullcodeline": "index = 0;"
    },
    {
        "line": 233,
        "fullcodeline": "CopyLength = (LengthOfMatch > CopyOffset) ? CopyOffset : LengthOfMatch;"
    },
    {
        "line": 271,
        "fullcodeline": "LengthOfMatch = LengthOfMatchBase;"
    },
    {
        "line": 26,
        "fullcodeline": "return -1001;"
    },
    {
        "line": 33,
        "fullcodeline": "if ((ncrush->HistoryPtr - 32768) <= HistoryBuffer)"
    },
    {
        "line": 92,
        "fullcodeline": "if (IndexLEC == 256)"
    },
    {
        "line": 97,
        "fullcodeline": "if (CopyOffsetIndex >= 32)"
    },
    {
        "line": 224,
        "fullcodeline": "if (LengthOfMatch < 2)"
    },
    {
        "line": 235,
        "fullcodeline": "if (CopyOffsetPtr >= HistoryBuffer)"
    },
    {
        "line": 278,
        "fullcodeline": "return -1;"
    },
    {
        "line": 284,
        "fullcodeline": "return -1007;"
    },
    {
        "line": 66,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[29]);"
    },
    {
        "line": 67,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 70,
        "fullcodeline": "IndexLEC = HuffTableLEC[MaskedBits] & 0xFFF;"
    },
    {
        "line": 71,
        "fullcodeline": "BitLength = HuffTableLEC[MaskedBits] >> 12;"
    },
    {
        "line": 72,
        "fullcodeline": "bits >>= BitLength;"
    },
    {
        "line": 73,
        "fullcodeline": "nbits -= BitLength;"
    },
    {
        "line": 88,
        "fullcodeline": "Literal = (HuffTableLEC[MaskedBits] & 0xFF);"
    },
    {
        "line": 99,
        "fullcodeline": "OffsetCacheIndex = IndexLEC - 289;"
    },
    {
        "line": 104,
        "fullcodeline": "CopyOffset = ncrush->OffsetCache[OffsetCacheIndex];"
    },
    {
        "line": 105,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[21]);"
    },
    {
        "line": 106,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 109,
        "fullcodeline": "LengthOfMatch = HuffTableLOM[MaskedBits] & 0xFFF;"
    },
    {
        "line": 110,
        "fullcodeline": "BitLength = HuffTableLOM[MaskedBits] >> 12;"
    },
    {
        "line": 111,
        "fullcodeline": "bits >>= BitLength;"
    },
    {
        "line": 112,
        "fullcodeline": "nbits -= BitLength;"
    },
    {
        "line": 120,
        "fullcodeline": "LengthOfMatchBits = LOMBitsLUT[LengthOfMatch];"
    },
    {
        "line": 124,
        "fullcodeline": "LengthOfMatchBase = LOMBaseLUT[LengthOfMatch];"
    },
    {
        "line": 142,
        "fullcodeline": "OldCopyOffset = ncrush->OffsetCache[OffsetCacheIndex];"
    },
    {
        "line": 143,
        "fullcodeline": "ncrush->OffsetCache[OffsetCacheIndex] = ncrush->OffsetCache[0];"
    },
    {
        "line": 144,
        "fullcodeline": "ncrush->OffsetCache[0] = OldCopyOffset;"
    },
    {
        "line": 227,
        "fullcodeline": "if ((CopyOffsetPtr >= (HistoryBufferEnd - LengthOfMatch)) ||"
    },
    {
        "line": 228,
        "fullcodeline": "(HistoryPtr >= (HistoryBufferEnd - LengthOfMatch)))"
    },
    {
        "line": 34,
        "fullcodeline": "return -1002;"
    },
    {
        "line": 78,
        "fullcodeline": "if (IndexLEC >= 256)"
    },
    {
        "line": 81,
        "fullcodeline": "if (HistoryPtr >= HistoryBufferEnd)"
    },
    {
        "line": 117,
        "fullcodeline": "if (LengthOfMatch >= ARRAYSIZE(LOMBitsLUT))"
    },
    {
        "line": 151,
        "fullcodeline": "CopyOffsetBits = CopyOffsetBitsLUT[CopyOffsetIndex];"
    },
    {
        "line": 155,
        "fullcodeline": "CopyOffsetBase = CopyOffsetBaseLUT[CopyOffsetIndex];"
    },
    {
        "line": 156,
        "fullcodeline": "CopyOffset = CopyOffsetBase - 1;"
    },
    {
        "line": 177,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[21]);"
    },
    {
        "line": 178,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 182,
        "fullcodeline": "LengthOfMatch = HuffTableLOM[MaskedBits] & 0xFFF;"
    },
    {
        "line": 183,
        "fullcodeline": "BitLength = HuffTableLOM[MaskedBits] >> 12;"
    },
    {
        "line": 184,
        "fullcodeline": "bits >>= BitLength;"
    },
    {
        "line": 185,
        "fullcodeline": "nbits -= BitLength;"
    },
    {
        "line": 193,
        "fullcodeline": "LengthOfMatchBits = LOMBitsLUT[LengthOfMatch];"
    },
    {
        "line": 197,
        "fullcodeline": "LengthOfMatchBase = LOMBaseLUT[LengthOfMatch];"
    },
    {
        "line": 216,
        "fullcodeline": "ncrush->OffsetCache[2] = ncrush->OffsetCache[1];"
    },
    {
        "line": 217,
        "fullcodeline": "ncrush->OffsetCache[1] = ncrush->OffsetCache[0];"
    },
    {
        "line": 218,
        "fullcodeline": "ncrush->OffsetCache[0] = CopyOffset;"
    },
    {
        "line": 225,
        "fullcodeline": "return -1005;"
    },
    {
        "line": 229,
        "fullcodeline": "return -1006;"
    },
    {
        "line": 237,
        "fullcodeline": "while (CopyLength > 0)"
    },
    {
        "line": 243,
        "fullcodeline": "while (LengthOfMatch > CopyOffset)"
    },
    {
        "line": 252,
        "fullcodeline": "CopyOffsetPtr = HistoryBufferEnd - (CopyOffset - (HistoryPtr - HistoryBuffer));"
    },
    {
        "line": 253,
        "fullcodeline": "CopyOffsetPtr++;"
    },
    {
        "line": 261,
        "fullcodeline": "CopyOffsetPtr = HistoryBuffer;"
    },
    {
        "line": 68,
        "fullcodeline": "if (MaskedBits >= ARRAYSIZE(HuffTableLEC))"
    },
    {
        "line": 75,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 89,
        "fullcodeline": "*HistoryPtr++ = Literal;"
    },
    {
        "line": 107,
        "fullcodeline": "if (MaskedBits > ARRAYSIZE(HuffTableLOM))"
    },
    {
        "line": 114,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 122,
        "fullcodeline": "if (LengthOfMatch >= ARRAYSIZE(LOMBaseLUT))"
    },
    {
        "line": 128,
        "fullcodeline": "const size_t idx = (2ull * LengthOfMatchBits) + 3ull;"
    },
    {
        "line": 132,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[idx]);"
    },
    {
        "line": 133,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 134,
        "fullcodeline": "bits >>= LengthOfMatchBits;"
    },
    {
        "line": 135,
        "fullcodeline": "nbits -= LengthOfMatchBits;"
    },
    {
        "line": 136,
        "fullcodeline": "LengthOfMatchBase += MaskedBits;"
    },
    {
        "line": 148,
        "fullcodeline": "if (CopyOffsetIndex >= ARRAYSIZE(CopyOffsetBitsLUT))"
    },
    {
        "line": 190,
        "fullcodeline": "if (LengthOfMatch >= ARRAYSIZE(LOMBitsLUT))"
    },
    {
        "line": 240,
        "fullcodeline": "CopyLength--;"
    },
    {
        "line": 245,
        "fullcodeline": "index = ((index >= CopyOffset)) ? 0 : index;"
    },
    {
        "line": 247,
        "fullcodeline": "LengthOfMatch--;"
    },
    {
        "line": 255,
        "fullcodeline": "while (CopyLength && (CopyOffsetPtr <= HistoryBufferEnd))"
    },
    {
        "line": 263,
        "fullcodeline": "while (LengthOfMatch > CopyOffset)"
    },
    {
        "line": 69,
        "fullcodeline": "return -1;"
    },
    {
        "line": 76,
        "fullcodeline": "return -1;"
    },
    {
        "line": 85,
        "fullcodeline": "return -1003;"
    },
    {
        "line": 102,
        "fullcodeline": "return -1004;"
    },
    {
        "line": 108,
        "fullcodeline": "return -1;"
    },
    {
        "line": 115,
        "fullcodeline": "return -1;"
    },
    {
        "line": 118,
        "fullcodeline": "return -1;"
    },
    {
        "line": 123,
        "fullcodeline": "return -1;"
    },
    {
        "line": 153,
        "fullcodeline": "if (CopyOffsetIndex >= ARRAYSIZE(CopyOffsetBaseLUT))"
    },
    {
        "line": 160,
        "fullcodeline": "const size_t idx = (2ull * CopyOffsetBits) + 3ull;"
    },
    {
        "line": 164,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[idx]);"
    },
    {
        "line": 165,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 166,
        "fullcodeline": "const UINT32 tmp = CopyOffsetBase + MaskedBits;"
    },
    {
        "line": 169,
        "fullcodeline": "CopyOffset = tmp - 1;"
    },
    {
        "line": 170,
        "fullcodeline": "bits >>= CopyOffsetBits;"
    },
    {
        "line": 171,
        "fullcodeline": "nbits -= CopyOffsetBits;"
    },
    {
        "line": 179,
        "fullcodeline": "if (MaskedBits >= ARRAYSIZE(HuffTableLOM))"
    },
    {
        "line": 187,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 195,
        "fullcodeline": "if (LengthOfMatch >= ARRAYSIZE(LOMBaseLUT))"
    },
    {
        "line": 201,
        "fullcodeline": "const size_t idx = (2ull * LengthOfMatchBits) + 3ull;"
    },
    {
        "line": 205,
        "fullcodeline": "const UINT16 Mask = get_word(&HuffTableMask[idx]);"
    },
    {
        "line": 206,
        "fullcodeline": "const UINT32 MaskedBits = bits & Mask;"
    },
    {
        "line": 207,
        "fullcodeline": "bits >>= LengthOfMatchBits;"
    },
    {
        "line": 208,
        "fullcodeline": "nbits -= LengthOfMatchBits;"
    },
    {
        "line": 209,
        "fullcodeline": "LengthOfMatchBase += MaskedBits;"
    },
    {
        "line": 258,
        "fullcodeline": "CopyLength--;"
    },
    {
        "line": 265,
        "fullcodeline": "index = ((index >= CopyOffset)) ? 0 : index;"
    },
    {
        "line": 267,
        "fullcodeline": "LengthOfMatch--;"
    },
    {
        "line": 129,
        "fullcodeline": "if (idx >= ARRAYSIZE(HuffTableMask))"
    },
    {
        "line": 138,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 149,
        "fullcodeline": "return -1;"
    },
    {
        "line": 154,
        "fullcodeline": "return -1;"
    },
    {
        "line": 167,
        "fullcodeline": "if (tmp < 1)"
    },
    {
        "line": 180,
        "fullcodeline": "return -1;"
    },
    {
        "line": 188,
        "fullcodeline": "return -1;"
    },
    {
        "line": 191,
        "fullcodeline": "return -1;"
    },
    {
        "line": 196,
        "fullcodeline": "return -1;"
    },
    {
        "line": 239,
        "fullcodeline": "*HistoryPtr++ = *CopyOffsetPtr++;"
    },
    {
        "line": 246,
        "fullcodeline": "*HistoryPtr++ = *(CopyOffsetPtr + index++);"
    },
    {
        "line": 130,
        "fullcodeline": "return -1;"
    },
    {
        "line": 139,
        "fullcodeline": "return -1;"
    },
    {
        "line": 161,
        "fullcodeline": "if (idx >= ARRAYSIZE(HuffTableMask))"
    },
    {
        "line": 173,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 202,
        "fullcodeline": "if (idx >= ARRAYSIZE(HuffTableMask))"
    },
    {
        "line": 211,
        "fullcodeline": "if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))"
    },
    {
        "line": 257,
        "fullcodeline": "*HistoryPtr++ = *CopyOffsetPtr++;"
    },
    {
        "line": 266,
        "fullcodeline": "*HistoryPtr++ = *(CopyOffsetPtr + index++);"
    },
    {
        "line": 162,
        "fullcodeline": "return -1;"
    },
    {
        "line": 168,
        "fullcodeline": "return -1;"
    },
    {
        "line": 174,
        "fullcodeline": "return -1;"
    },
    {
        "line": 203,
        "fullcodeline": "return -1;"
    },
    {
        "line": 212,
        "fullcodeline": "return -1;"
    }
]