[
    {
        "line": 4,
        "fullcodeline": "while(patternLen && stringLen) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (patternLen == 0 && stringLen == 0)"
    },
    {
        "line": 119,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 120,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 121,
        "fullcodeline": "if (stringLen == 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "*skipLongerMatches = 1;"
    },
    {
        "line": 36,
        "fullcodeline": "string++;"
    },
    {
        "line": 37,
        "fullcodeline": "stringLen--;"
    },
    {
        "line": 115,
        "fullcodeline": "string++;"
    },
    {
        "line": 116,
        "fullcodeline": "stringLen--;"
    },
    {
        "line": 7,
        "fullcodeline": "while (patternLen && pattern[1] == '*') {"
    },
    {
        "line": 11,
        "fullcodeline": "if (patternLen == 1)"
    },
    {
        "line": 43,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 44,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 45,
        "fullcodeline": "not = pattern[0] == '^';"
    },
    {
        "line": 50,
        "fullcodeline": "match = 0;"
    },
    {
        "line": 97,
        "fullcodeline": "string++;"
    },
    {
        "line": 98,
        "fullcodeline": "stringLen--;"
    },
    {
        "line": 102,
        "fullcodeline": "if (patternLen >= 2) {"
    },
    {
        "line": 108,
        "fullcodeline": "if (!nocase) {"
    },
    {
        "line": 122,
        "fullcodeline": "while(*pattern == '*') {"
    },
    {
        "line": 8,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 9,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 19,
        "fullcodeline": "string++;"
    },
    {
        "line": 20,
        "fullcodeline": "stringLen--;"
    },
    {
        "line": 95,
        "fullcodeline": "if (!match)"
    },
    {
        "line": 103,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 104,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 123,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 124,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 14,
        "fullcodeline": "if (stringmatchlen_impl(pattern+1, patternLen-1,"
    },
    {
        "line": 47,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 48,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 90,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 91,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 94,
        "fullcodeline": "match = !match;"
    },
    {
        "line": 109,
        "fullcodeline": "if (pattern[0] != string[0])"
    },
    {
        "line": 52,
        "fullcodeline": "if (pattern[0] == '\\\\' && patternLen >= 2) {"
    },
    {
        "line": 112,
        "fullcodeline": "if (tolower((int)pattern[0]) != tolower((int)string[0]))"
    },
    {
        "line": 53,
        "fullcodeline": "pattern++;"
    },
    {
        "line": 54,
        "fullcodeline": "patternLen--;"
    },
    {
        "line": 55,
        "fullcodeline": "if (pattern[0] == string[0])"
    },
    {
        "line": 56,
        "fullcodeline": "match = 1;"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (pattern[0] == ']') {"
    },
    {
        "line": 59,
        "fullcodeline": "} else if (patternLen == 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "pattern--;"
    },
    {
        "line": 61,
        "fullcodeline": "patternLen++;"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (patternLen >= 3 && pattern[1] == '-') {"
    },
    {
        "line": 64,
        "fullcodeline": "int start = pattern[0];"
    },
    {
        "line": 65,
        "fullcodeline": "int end = pattern[2];"
    },
    {
        "line": 66,
        "fullcodeline": "int c = string[0];"
    },
    {
        "line": 77,
        "fullcodeline": "pattern += 2;"
    },
    {
        "line": 78,
        "fullcodeline": "patternLen -= 2;"
    },
    {
        "line": 67,
        "fullcodeline": "if (start > end) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (c >= start && c <= end)"
    },
    {
        "line": 68,
        "fullcodeline": "int t = start;"
    },
    {
        "line": 69,
        "fullcodeline": "start = end;"
    },
    {
        "line": 70,
        "fullcodeline": "end = t;"
    },
    {
        "line": 73,
        "fullcodeline": "start = tolower(start);"
    },
    {
        "line": 74,
        "fullcodeline": "end = tolower(end);"
    },
    {
        "line": 75,
        "fullcodeline": "c = tolower(c);"
    },
    {
        "line": 80,
        "fullcodeline": "match = 1;"
    },
    {
        "line": 82,
        "fullcodeline": "if (!nocase) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (pattern[0] == string[0])"
    },
    {
        "line": 84,
        "fullcodeline": "match = 1;"
    },
    {
        "line": 86,
        "fullcodeline": "if (tolower((int)pattern[0]) == tolower((int)string[0]))"
    },
    {
        "line": 87,
        "fullcodeline": "match = 1;"
    }
]