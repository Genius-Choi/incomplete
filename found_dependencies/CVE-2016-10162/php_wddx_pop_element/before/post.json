[
    {
        "line": 4,
        "fullcodeline": "wddx_stack \t\t\t*stack = (wddx_stack *)user_data;"
    },
    {
        "line": 10,
        "fullcodeline": "if (stack->top == 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!strcmp((char *)name, EL_STRING) || !strcmp((char *)name, EL_NUMBER) ||"
    },
    {
        "line": 18,
        "fullcodeline": "!strcmp((char *)name, EL_DATETIME)) {"
    },
    {
        "line": 19,
        "fullcodeline": "wddx_stack_top(stack, (void**)&ent1);"
    },
    {
        "line": 17,
        "fullcodeline": "!strcmp((char *)name, EL_RECORDSET) || !strcmp((char *)name, EL_BINARY) ||"
    },
    {
        "line": 21,
        "fullcodeline": "if (Z_TYPE(ent1->data) == IS_UNDEF) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!strcmp((char *)name, EL_BINARY)) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (Z_TYPE(ent1->data) == IS_OBJECT) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (stack->top > 1) {"
    },
    {
        "line": 32,
        "fullcodeline": "zend_string *new_str = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "zval_ptr_dtor(&ent1->data);"
    },
    {
        "line": 51,
        "fullcodeline": "ZVAL_STRING(&fname, \"__wakeup\");"
    },
    {
        "line": 53,
        "fullcodeline": "call_user_function_ex(NULL, &ent1->data, &fname, &retval, 0, 0, 0, NULL);"
    },
    {
        "line": 55,
        "fullcodeline": "zval_ptr_dtor(&fname);"
    },
    {
        "line": 56,
        "fullcodeline": "zval_ptr_dtor(&retval);"
    },
    {
        "line": 60,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 61,
        "fullcodeline": "wddx_stack_top(stack, (void**)&ent2);"
    },
    {
        "line": 127,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 131,
        "fullcodeline": "} else if (!strcmp((char *)name, EL_VAR) && stack->varname) {"
    },
    {
        "line": 16,
        "fullcodeline": "!strcmp((char *)name, EL_ARRAY) || !strcmp((char *)name, EL_STRUCT) ||"
    },
    {
        "line": 22,
        "fullcodeline": "if (stack->top > 1) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (ZSTR_EMPTY_ALLOC() != Z_STR(ent1->data)) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (Z_ISUNDEF(ent2->data)) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (Z_TYPE(ent2->data) == IS_ARRAY || Z_TYPE(ent2->data) == IS_OBJECT) {"
    },
    {
        "line": 129,
        "fullcodeline": "stack->done = 1;"
    },
    {
        "line": 132,
        "fullcodeline": "efree(stack->varname);"
    },
    {
        "line": 133,
        "fullcodeline": "stack->varname = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 24,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 35,
        "fullcodeline": "new_str = php_base64_decode("
    },
    {
        "line": 41,
        "fullcodeline": "ZVAL_STR(&ent1->data, new_str);"
    },
    {
        "line": 65,
        "fullcodeline": "zval_ptr_dtor(&ent1->data);"
    },
    {
        "line": 66,
        "fullcodeline": "efree(ent1);"
    },
    {
        "line": 71,
        "fullcodeline": "target_hash = HASH_OF(&ent2->data);"
    },
    {
        "line": 15,
        "fullcodeline": "!strcmp((char *)name, EL_BOOLEAN) || !strcmp((char *)name, EL_NULL) ||"
    },
    {
        "line": 26,
        "fullcodeline": "stack->done = 1;"
    },
    {
        "line": 43,
        "fullcodeline": "ZVAL_EMPTY_STRING(&ent1->data);"
    },
    {
        "line": 134,
        "fullcodeline": "} else if (!strcmp((char *)name, EL_FIELD)) {"
    },
    {
        "line": 36,
        "fullcodeline": "(unsigned char *)Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));"
    },
    {
        "line": 122,
        "fullcodeline": "efree(ent1->varname);"
    },
    {
        "line": 136,
        "fullcodeline": "wddx_stack_top(stack, (void **)&ent);"
    },
    {
        "line": 137,
        "fullcodeline": "efree(ent);"
    },
    {
        "line": 138,
        "fullcodeline": "stack->top--;"
    },
    {
        "line": 74,
        "fullcodeline": "if (!strcmp(ent1->varname, PHP_CLASS_NAME_VAR) &&"
    },
    {
        "line": 124,
        "fullcodeline": "zend_hash_next_index_insert(target_hash, &ent1->data);"
    },
    {
        "line": 76,
        "fullcodeline": "ent2->type == ST_STRUCT && Z_TYPE(ent2->data) == IS_ARRAY) {"
    },
    {
        "line": 77,
        "fullcodeline": "zend_bool incomplete_class = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "zend_str_tolower(Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));"
    },
    {
        "line": 80,
        "fullcodeline": "zend_string_forget_hash_val(Z_STR(ent1->data));"
    },
    {
        "line": 111,
        "fullcodeline": "zval_ptr_dtor(&ent1->data);"
    },
    {
        "line": 81,
        "fullcodeline": "if ((pce = zend_hash_find_ptr(EG(class_table), Z_STR(ent1->data))) == NULL) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (pce != PHP_IC_ENTRY && (pce->serialize || pce->unserialize)) {"
    },
    {
        "line": 75,
        "fullcodeline": "Z_TYPE(ent1->data) == IS_STRING && Z_STRLEN(ent1->data) &&"
    },
    {
        "line": 82,
        "fullcodeline": "incomplete_class = 1;"
    },
    {
        "line": 83,
        "fullcodeline": "pce = PHP_IC_ENTRY;"
    },
    {
        "line": 87,
        "fullcodeline": "zval_ptr_dtor(&ent2->data);"
    },
    {
        "line": 88,
        "fullcodeline": "ZVAL_UNDEF(&ent2->data);"
    },
    {
        "line": 89,
        "fullcodeline": "php_error_docref(NULL, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL(ent1->data));"
    },
    {
        "line": 112,
        "fullcodeline": "} else if (Z_TYPE(ent2->data) == IS_OBJECT) {"
    },
    {
        "line": 92,
        "fullcodeline": "object_init_ex(&obj, pce);"
    },
    {
        "line": 95,
        "fullcodeline": "zend_hash_merge(Z_OBJPROP(obj),"
    },
    {
        "line": 104,
        "fullcodeline": "zval_ptr_dtor(&ent2->data);"
    },
    {
        "line": 107,
        "fullcodeline": "ZVAL_COPY_VALUE(&ent2->data, &obj);"
    },
    {
        "line": 113,
        "fullcodeline": "zend_class_entry *old_scope = EG(scope);"
    },
    {
        "line": 115,
        "fullcodeline": "EG(scope) = Z_OBJCE(ent2->data);"
    },
    {
        "line": 116,
        "fullcodeline": "add_property_zval(&ent2->data, ent1->varname, &ent1->data);"
    },
    {
        "line": 118,
        "fullcodeline": "EG(scope) = old_scope;"
    },
    {
        "line": 96,
        "fullcodeline": "Z_ARRVAL(ent2->data),"
    },
    {
        "line": 120,
        "fullcodeline": "zend_symtable_str_update(target_hash, ent1->varname, strlen(ent1->varname), &ent1->data);"
    },
    {
        "line": 100,
        "fullcodeline": "php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));"
    }
]