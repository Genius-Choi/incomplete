[
    {
        "line": 10,
        "fullcodeline": "length=count*quantum;"
    },
    {
        "line": 16,
        "fullcodeline": "memory_info=(MemoryInfo *) MagickAssumeAligned(AcquireAlignedMemory(1,"
    },
    {
        "line": 21,
        "fullcodeline": "memory_info->length=length;"
    },
    {
        "line": 22,
        "fullcodeline": "memory_info->signature=MagickSignature;"
    },
    {
        "line": 11,
        "fullcodeline": "if ((count == 0) || (quantum != (length/count)))"
    },
    {
        "line": 18,
        "fullcodeline": "if (memory_info == (MemoryInfo *) NULL)"
    },
    {
        "line": 20,
        "fullcodeline": "(void) ResetMagickMemory(memory_info,0,sizeof(*memory_info));"
    },
    {
        "line": 23,
        "fullcodeline": "if (AcquireMagickResource(MemoryResource,length) != MagickFalse)"
    },
    {
        "line": 43,
        "fullcodeline": "if (memory_info->blob == NULL)"
    },
    {
        "line": 66,
        "fullcodeline": "if (memory_info->blob == NULL)"
    },
    {
        "line": 72,
        "fullcodeline": "if (memory_info->blob == NULL)"
    },
    {
        "line": 13,
        "fullcodeline": "errno=ENOMEM;"
    },
    {
        "line": 19,
        "fullcodeline": "ThrowFatalException(ResourceLimitFatalError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 25,
        "fullcodeline": "memory_info->blob=AcquireAlignedMemory(1,length);"
    },
    {
        "line": 31,
        "fullcodeline": "if ((memory_info->blob == NULL) &&"
    },
    {
        "line": 32,
        "fullcodeline": "(AcquireMagickResource(MapResource,length) != MagickFalse))"
    },
    {
        "line": 37,
        "fullcodeline": "memory_info->blob=MapBlob(-1,IOMode,0,length);"
    },
    {
        "line": 51,
        "fullcodeline": "file=AcquireUniqueFileResource(memory_info->filename);"
    },
    {
        "line": 68,
        "fullcodeline": "memory_info->blob=AcquireMagickMemory(length);"
    },
    {
        "line": 73,
        "fullcodeline": "memory_info=RelinquishVirtualMemory(memory_info);"
    },
    {
        "line": 14,
        "fullcodeline": "return((MemoryInfo *) NULL);"
    },
    {
        "line": 26,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 52,
        "fullcodeline": "if (file != -1)"
    },
    {
        "line": 69,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 27,
        "fullcodeline": "memory_info->type=AlignedVirtualMemory;"
    },
    {
        "line": 39,
        "fullcodeline": "memory_info->type=MapVirtualMemory;"
    },
    {
        "line": 70,
        "fullcodeline": "memory_info->type=UnalignedVirtualMemory;"
    },
    {
        "line": 29,
        "fullcodeline": "RelinquishMagickResource(MemoryResource,length);"
    },
    {
        "line": 41,
        "fullcodeline": "RelinquishMagickResource(MapResource,length);"
    },
    {
        "line": 63,
        "fullcodeline": "(void) close(file);"
    },
    {
        "line": 54,
        "fullcodeline": "if ((lseek(file,length-1,SEEK_SET) >= 0) && (write(file,\"\",1) == 1))"
    },
    {
        "line": 56,
        "fullcodeline": "memory_info->blob=MapBlob(file,IOMode,0,length);"
    },
    {
        "line": 57,
        "fullcodeline": "if (memory_info->blob != NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "memory_info->type=MapVirtualMemory;"
    },
    {
        "line": 60,
        "fullcodeline": "(void) AcquireMagickResource(MapResource,length);"
    }
]