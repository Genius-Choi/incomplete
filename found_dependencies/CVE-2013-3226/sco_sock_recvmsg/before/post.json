[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sco_pinfo *pi = sco_pi(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 18,
        "fullcodeline": "release_sock(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "if (sk->sk_state == BT_CONNECT2 &&"
    },
    {
        "line": 20,
        "fullcodeline": "return bt_sock_recvmsg(iocb, sock, msg, len, flags);"
    },
    {
        "line": 10,
        "fullcodeline": "test_bit(BT_SK_DEFER_SETUP, &bt_sk(sk)->flags)) {"
    },
    {
        "line": 11,
        "fullcodeline": "hci_conn_accept(pi->conn->hcon, 0);"
    },
    {
        "line": 12,
        "fullcodeline": "sk->sk_state = BT_CONFIG;"
    },
    {
        "line": 14,
        "fullcodeline": "release_sock(sk);"
    }
]