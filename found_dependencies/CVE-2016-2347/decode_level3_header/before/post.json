[
    {
        "line": 27,
        "fullcodeline": "header_len = lha_decode_uint32(&RAW_DATA(header, 24));"
    },
    {
        "line": 40,
        "fullcodeline": "memcpy((*header)->compress_method, &RAW_DATA(header, 2), 5);"
    },
    {
        "line": 41,
        "fullcodeline": "(*header)->compress_method[5] = '\\0';"
    },
    {
        "line": 45,
        "fullcodeline": "(*header)->compressed_length = lha_decode_uint32(&RAW_DATA(header, 7));"
    },
    {
        "line": 46,
        "fullcodeline": "(*header)->length = lha_decode_uint32(&RAW_DATA(header, 11));"
    },
    {
        "line": 50,
        "fullcodeline": "(*header)->timestamp = lha_decode_uint32(&RAW_DATA(header, 15));"
    },
    {
        "line": 54,
        "fullcodeline": "(*header)->crc = lha_decode_uint16(&RAW_DATA(header, 21));"
    },
    {
        "line": 58,
        "fullcodeline": "(*header)->os_type = RAW_DATA(header, 23);"
    },
    {
        "line": 11,
        "fullcodeline": "if (lha_decode_uint16(&RAW_DATA(header, 0)) != 4) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (!extend_raw_data(header, stream,"
    },
    {
        "line": 29,
        "fullcodeline": "if (header_len > LEVEL_3_MAX_HEADER_LEN) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (!extend_raw_data(header, stream,"
    },
    {
        "line": 60,
        "fullcodeline": "if (!decode_extended_headers(header, 28)) {"
    },
    {
        "line": 18,
        "fullcodeline": "LEVEL_3_HEADER_LEN - RAW_DATA_LEN(header))) {"
    },
    {
        "line": 34,
        "fullcodeline": "header_len - RAW_DATA_LEN(header))) {"
    }
]