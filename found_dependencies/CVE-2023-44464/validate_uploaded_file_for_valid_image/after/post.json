[
    {
        "line": 5,
        "fullcodeline": "from PIL import Image"
    },
    {
        "line": 2,
        "fullcodeline": "if f is None:"
    },
    {
        "line": 9,
        "fullcodeline": "if hasattr(f, 'temporary_file_path'):"
    },
    {
        "line": 40,
        "fullcodeline": "if hasattr(f, 'seek') and callable(f.seek):"
    },
    {
        "line": 10,
        "fullcodeline": "file = f.temporary_file_path()"
    },
    {
        "line": 41,
        "fullcodeline": "f.seek(0)"
    },
    {
        "line": 12,
        "fullcodeline": "if hasattr(f, 'read'):"
    },
    {
        "line": 28,
        "fullcodeline": "if image.width * image.height > MAX_IMAGE_PIXELS:"
    },
    {
        "line": 13,
        "fullcodeline": "file = BytesIO(f.read())"
    },
    {
        "line": 15,
        "fullcodeline": "file = BytesIO(f['content'])"
    },
    {
        "line": 19,
        "fullcodeline": "image = Image.open(file, formats=settings.PILLOW_FORMATS_QUESTIONS_IMAGE)"
    },
    {
        "line": 21,
        "fullcodeline": "image.verify()"
    },
    {
        "line": 29,
        "fullcodeline": "raise ValidationError(_("
    },
    {
        "line": 33,
        "fullcodeline": "logger.exception('Could not parse image')"
    },
    {
        "line": 37,
        "fullcodeline": "raise ValidationError(_("
    },
    {
        "line": 35,
        "fullcodeline": "if isinstance(exc, ValidationError):"
    },
    {
        "line": 23,
        "fullcodeline": "raise ValidationError(_("
    },
    {
        "line": 36,
        "fullcodeline": "raise"
    }
]