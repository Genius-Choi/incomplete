[
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"
    },
    {
        "line": 5,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &hits));"
    },
    {
        "line": 7,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));"
    },
    {
        "line": 9,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &key));"
    },
    {
        "line": 11,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 2, &value));"
    },
    {
        "line": 13,
        "fullcodeline": "const int num_rows = SizeOfDimension(value, 0);"
    },
    {
        "line": 14,
        "fullcodeline": "const int row_bytes = value->bytes / num_rows;"
    },
    {
        "line": 15,
        "fullcodeline": "void* pointer = nullptr;"
    },
    {
        "line": 18,
        "fullcodeline": "for (int i = 0; i < SizeOfDimension(lookup, 0); i++) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (output->type == kTfLiteString) {"
    },
    {
        "line": 19,
        "fullcodeline": "int idx = -1;"
    },
    {
        "line": 20,
        "fullcodeline": "pointer = bsearch(&(lookup->data.i32[i]), key->data.i32, num_rows,"
    },
    {
        "line": 45,
        "fullcodeline": "buf.WriteToTensorAsVector(output);"
    },
    {
        "line": 22,
        "fullcodeline": "if (pointer != nullptr) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (idx >= num_rows || idx < 0) {"
    },
    {
        "line": 23,
        "fullcodeline": "idx = (reinterpret_cast<char*>(pointer) - (key->data.raw)) /"
    },
    {
        "line": 33,
        "fullcodeline": "hits->data.uint8[i] = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "if (output->type == kTfLiteString) {"
    },
    {
        "line": 41,
        "fullcodeline": "hits->data.uint8[i] = 1;"
    },
    {
        "line": 29,
        "fullcodeline": "buf.AddString(nullptr, 0);"
    },
    {
        "line": 35,
        "fullcodeline": "if (output->type == kTfLiteString) {"
    },
    {
        "line": 31,
        "fullcodeline": "memset(output->data.raw + i * row_bytes, 0, row_bytes);"
    },
    {
        "line": 36,
        "fullcodeline": "buf.AddString(GetString(value, idx));"
    },
    {
        "line": 38,
        "fullcodeline": "memcpy(output->data.raw + i * row_bytes,"
    },
    {
        "line": 39,
        "fullcodeline": "value->data.raw + idx * row_bytes, row_bytes);"
    }
]