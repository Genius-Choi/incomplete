[
    {
        "line": 7,
        "fullcodeline": "} field[6], name;"
    },
    {
        "line": 30,
        "fullcodeline": "ret = ARCHIVE_OK;"
    },
    {
        "line": 31,
        "fullcodeline": "types = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "want_type = ARCHIVE_ENTRY_ACL_TYPE_ACCESS;"
    },
    {
        "line": 21,
        "fullcodeline": "numfields = 5;"
    },
    {
        "line": 24,
        "fullcodeline": "numfields = 6;"
    },
    {
        "line": 33,
        "fullcodeline": "while (text != NULL &&  *text != '\\0') {"
    },
    {
        "line": 38,
        "fullcodeline": "fields = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "sol = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "id = -1;"
    },
    {
        "line": 61,
        "fullcodeline": "permset = 0;"
    },
    {
        "line": 62,
        "fullcodeline": "name.start = name.end = NULL;"
    },
    {
        "line": 243,
        "fullcodeline": "r = archive_acl_add_entry_len_l(acl, type, permset,"
    },
    {
        "line": 249,
        "fullcodeline": "types |= type;"
    },
    {
        "line": 47,
        "fullcodeline": "} while (sep == ':');"
    },
    {
        "line": 50,
        "fullcodeline": "for (n = fields; n < numfields; ++n)"
    },
    {
        "line": 64,
        "fullcodeline": "if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {"
    },
    {
        "line": 245,
        "fullcodeline": "if (r < ARCHIVE_WARN)"
    },
    {
        "line": 41,
        "fullcodeline": "next_field(&text, &start, &end, &sep);"
    },
    {
        "line": 46,
        "fullcodeline": "++fields;"
    },
    {
        "line": 51,
        "fullcodeline": "field[n].start = field[n].end = NULL;"
    },
    {
        "line": 53,
        "fullcodeline": "if (field[0].start != NULL && *(field[0].start) == '#') {"
    },
    {
        "line": 74,
        "fullcodeline": "s = field[0].start;"
    },
    {
        "line": 75,
        "fullcodeline": "len = field[0].end - field[0].start;"
    },
    {
        "line": 87,
        "fullcodeline": "isint(field[n + 1].start, field[n + 1].end, &id);"
    },
    {
        "line": 93,
        "fullcodeline": "tag = 0;"
    },
    {
        "line": 95,
        "fullcodeline": "st = field[n].start + 1;"
    },
    {
        "line": 96,
        "fullcodeline": "len = field[n].end - field[n].start;"
    },
    {
        "line": 244,
        "fullcodeline": "tag, id, name.start, name.end - name.start, sc);"
    },
    {
        "line": 248,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 42,
        "fullcodeline": "if (fields < numfields) {"
    },
    {
        "line": 168,
        "fullcodeline": "s = field[0].start;"
    },
    {
        "line": 170,
        "fullcodeline": "tag = 0;"
    },
    {
        "line": 219,
        "fullcodeline": "s = field[3 + n].start;"
    },
    {
        "line": 220,
        "fullcodeline": "len = field[3 + n].end - field[3 + n].start;"
    },
    {
        "line": 221,
        "fullcodeline": "type = 0;"
    },
    {
        "line": 238,
        "fullcodeline": "isint(field[4 + n].start, field[4 + n].end,"
    },
    {
        "line": 76,
        "fullcodeline": "if (*s == 'd' && (len == 1 || (len >= 7"
    },
    {
        "line": 78,
        "fullcodeline": "type = ARCHIVE_ENTRY_ACL_TYPE_DEFAULT;"
    },
    {
        "line": 89,
        "fullcodeline": "if (id == -1 && fields > (n + 3))"
    },
    {
        "line": 90,
        "fullcodeline": "isint(field[n + 3].start, field[n + 3].end,"
    },
    {
        "line": 152,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 160,
        "fullcodeline": "if (permset == 0 && !ismode(field[n + 2 - sol].start,"
    },
    {
        "line": 163,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 169,
        "fullcodeline": "len = field[0].end - field[0].start;"
    },
    {
        "line": 195,
        "fullcodeline": "if (tag == 0) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (len == 4) {"
    },
    {
        "line": 233,
        "fullcodeline": "if (type == 0) {"
    },
    {
        "line": 84,
        "fullcodeline": "type = want_type;"
    },
    {
        "line": 141,
        "fullcodeline": "if (id != -1 ||"
    },
    {
        "line": 197,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 207,
        "fullcodeline": "if (!is_nfs4_perms(field[1 + n].start,"
    },
    {
        "line": 210,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 213,
        "fullcodeline": "if (!is_nfs4_flags(field[2 + n].start,"
    },
    {
        "line": 216,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 235,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 77,
        "fullcodeline": "&& memcmp((s + 1), \"efault\", 6) == 0))) {"
    },
    {
        "line": 80,
        "fullcodeline": "field[0].start += 7;"
    },
    {
        "line": 100,
        "fullcodeline": "if (len == 1 || (len == 4"
    },
    {
        "line": 102,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_USER_OBJ;"
    },
    {
        "line": 105,
        "fullcodeline": "if (len == 1 || (len == 5"
    },
    {
        "line": 107,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_GROUP_OBJ;"
    },
    {
        "line": 110,
        "fullcodeline": "if (len == 1 || (len == 5"
    },
    {
        "line": 112,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_OTHER;"
    },
    {
        "line": 115,
        "fullcodeline": "if (len == 1 || (len == 4"
    },
    {
        "line": 117,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_MASK;"
    },
    {
        "line": 126,
        "fullcodeline": "if (fields == (n + 2)"
    },
    {
        "line": 128,
        "fullcodeline": "&& ismode(field[n + 1].start,"
    },
    {
        "line": 131,
        "fullcodeline": "sol = 1;"
    },
    {
        "line": 142,
        "fullcodeline": "field[n + 1].start < field[n + 1].end) {"
    },
    {
        "line": 143,
        "fullcodeline": "name = field[n + 1];"
    },
    {
        "line": 82,
        "fullcodeline": "n = 1;"
    },
    {
        "line": 101,
        "fullcodeline": "&& memcmp(st, \"ser\", 3) == 0))"
    },
    {
        "line": 106,
        "fullcodeline": "&& memcmp(st, \"roup\", 4) == 0))"
    },
    {
        "line": 111,
        "fullcodeline": "&& memcmp(st, \"ther\", 4) == 0))"
    },
    {
        "line": 116,
        "fullcodeline": "&& memcmp(st, \"ask\", 3) == 0))"
    },
    {
        "line": 127,
        "fullcodeline": "&& field[n + 1].start < field[n + 1].end"
    },
    {
        "line": 144,
        "fullcodeline": "if (tag == ARCHIVE_ENTRY_ACL_USER_OBJ)"
    },
    {
        "line": 174,
        "fullcodeline": "if (memcmp(s, \"user\", 4) == 0)"
    },
    {
        "line": 175,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_USER;"
    },
    {
        "line": 178,
        "fullcodeline": "if (memcmp(s, \"group\", 5) == 0)"
    },
    {
        "line": 179,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_GROUP;"
    },
    {
        "line": 182,
        "fullcodeline": "if (memcmp(s, \"owner@\", 6) == 0)"
    },
    {
        "line": 183,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_USER_OBJ;"
    },
    {
        "line": 188,
        "fullcodeline": "if (memcmp(s, \"everyone@\", 9) == 0)"
    },
    {
        "line": 189,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_EVERYONE;"
    },
    {
        "line": 223,
        "fullcodeline": "if (memcmp(s, \"deny\", 4) == 0)"
    },
    {
        "line": 224,
        "fullcodeline": "type = ARCHIVE_ENTRY_ACL_TYPE_DENY;"
    },
    {
        "line": 132,
        "fullcodeline": "} else if (fields == (n + 3) &&"
    },
    {
        "line": 145,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_USER;"
    },
    {
        "line": 199,
        "fullcodeline": "} else if (tag == ARCHIVE_ENTRY_ACL_USER ||"
    },
    {
        "line": 200,
        "fullcodeline": "tag == ARCHIVE_ENTRY_ACL_GROUP) {"
    },
    {
        "line": 201,
        "fullcodeline": "n = 1;"
    },
    {
        "line": 202,
        "fullcodeline": "name = field[1];"
    },
    {
        "line": 203,
        "fullcodeline": "isint(name.start, name.end, &id);"
    },
    {
        "line": 133,
        "fullcodeline": "field[n + 1].start < field[n + 1].end) {"
    },
    {
        "line": 135,
        "fullcodeline": "ret = ARCHIVE_WARN;"
    },
    {
        "line": 147,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_GROUP;"
    },
    {
        "line": 205,
        "fullcodeline": "n = 0;"
    },
    {
        "line": 184,
        "fullcodeline": "else if (memcmp(s, \"group@\", 6) == 0)"
    },
    {
        "line": 185,
        "fullcodeline": "tag = ARCHIVE_ENTRY_ACL_GROUP_OBJ;"
    },
    {
        "line": 226,
        "fullcodeline": "if (memcmp(s, \"allow\", 5) == 0)"
    },
    {
        "line": 227,
        "fullcodeline": "type = ARCHIVE_ENTRY_ACL_TYPE_ALLOW;"
    },
    {
        "line": 228,
        "fullcodeline": "else if (memcmp(s, \"audit\", 5) == 0)"
    },
    {
        "line": 229,
        "fullcodeline": "type = ARCHIVE_ENTRY_ACL_TYPE_AUDIT;"
    },
    {
        "line": 230,
        "fullcodeline": "else if (memcmp(s, \"alarm\", 5) == 0)"
    },
    {
        "line": 231,
        "fullcodeline": "type = ARCHIVE_ENTRY_ACL_TYPE_ALARM;"
    }
]