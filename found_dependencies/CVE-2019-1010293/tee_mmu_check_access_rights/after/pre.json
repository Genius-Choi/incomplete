[
    {
        "line": 6,
        "fullcodeline": "uaddr_t end_addr = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t addr_incr = MIN(CORE_MMU_USER_CODE_SIZE,"
    },
    {
        "line": 10,
        "fullcodeline": "if (ADD_OVERFLOW(uaddr, len, &end_addr))"
    },
    {
        "line": 25,
        "fullcodeline": "for (a = ROUNDDOWN(uaddr, addr_incr); a < end_addr; a += addr_incr) {"
    },
    {
        "line": 13,
        "fullcodeline": "if ((flags & TEE_MEMORY_ACCESS_NONSECURE) &&"
    },
    {
        "line": 14,
        "fullcodeline": "(flags & TEE_MEMORY_ACCESS_SECURE))"
    },
    {
        "line": 21,
        "fullcodeline": "if (!(flags & TEE_MEMORY_ACCESS_ANY_OWNER) &&"
    },
    {
        "line": 22,
        "fullcodeline": "!tee_mmu_is_vbuf_inside_ta_private(utc, (void *)uaddr, len))"
    },
    {
        "line": 29,
        "fullcodeline": "res = tee_mmu_user_va2pa_attr(utc, (void *)a, NULL, &attr);"
    },
    {
        "line": 30,
        "fullcodeline": "if (res != TEE_SUCCESS)"
    },
    {
        "line": 33,
        "fullcodeline": "if ((flags & TEE_MEMORY_ACCESS_NONSECURE) &&"
    },
    {
        "line": 34,
        "fullcodeline": "(attr & TEE_MATTR_SECURE))"
    },
    {
        "line": 37,
        "fullcodeline": "if ((flags & TEE_MEMORY_ACCESS_SECURE) &&"
    },
    {
        "line": 38,
        "fullcodeline": "!(attr & TEE_MATTR_SECURE))"
    },
    {
        "line": 41,
        "fullcodeline": "if ((flags & TEE_MEMORY_ACCESS_WRITE) && !(attr & TEE_MATTR_UW))"
    },
    {
        "line": 43,
        "fullcodeline": "if ((flags & TEE_MEMORY_ACCESS_READ) && !(attr & TEE_MATTR_UR))"
    }
]