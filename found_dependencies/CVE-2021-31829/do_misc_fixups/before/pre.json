[
    {
        "line": 3,
        "fullcodeline": "struct bpf_prog *prog = env->prog;"
    },
    {
        "line": 4,
        "fullcodeline": "bool expect_blinding = bpf_jit_blinding_enabled(prog);"
    },
    {
        "line": 5,
        "fullcodeline": "struct bpf_insn *insn = prog->insnsi;"
    },
    {
        "line": 7,
        "fullcodeline": "const int insn_cnt = prog->len;"
    },
    {
        "line": 10,
        "fullcodeline": "struct bpf_insn insn_buf[16];"
    },
    {
        "line": 13,
        "fullcodeline": "int i, ret, cnt, delta = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "for (i = 0; i < insn_cnt; i++, insn++) {"
    },
    {
        "line": 348,
        "fullcodeline": "for (i = 0; i < prog->aux->size_poke_tab; i++) {"
    },
    {
        "line": 334,
        "fullcodeline": "fn = env->ops->get_func_proto(insn->imm, env->prog);"
    },
    {
        "line": 344,
        "fullcodeline": "insn->imm = fn->func - __bpf_call_base;"
    },
    {
        "line": 349,
        "fullcodeline": "map_ptr = prog->aux->poke_tab[i].tail_call.map;"
    },
    {
        "line": 357,
        "fullcodeline": "ret = map_ptr->ops->map_poke_track(map_ptr, prog->aux);"
    },
    {
        "line": 17,
        "fullcodeline": "if (insn->code == (BPF_ALU64 | BPF_MOD | BPF_X) ||"
    },
    {
        "line": 58,
        "fullcodeline": "if (BPF_CLASS(insn->code) == BPF_LD &&"
    },
    {
        "line": 78,
        "fullcodeline": "if (insn->code == (BPF_ALU64 | BPF_ADD | BPF_X) ||"
    },
    {
        "line": 125,
        "fullcodeline": "if (insn->code != (BPF_JMP | BPF_CALL))"
    },
    {
        "line": 127,
        "fullcodeline": "if (insn->src_reg == BPF_PSEUDO_CALL)"
    },
    {
        "line": 129,
        "fullcodeline": "if (insn->src_reg == BPF_PSEUDO_KFUNC_CALL) {"
    },
    {
        "line": 136,
        "fullcodeline": "if (insn->imm == BPF_FUNC_get_route_realm)"
    },
    {
        "line": 138,
        "fullcodeline": "if (insn->imm == BPF_FUNC_get_prandom_u32)"
    },
    {
        "line": 140,
        "fullcodeline": "if (insn->imm == BPF_FUNC_override_return)"
    },
    {
        "line": 142,
        "fullcodeline": "if (insn->imm == BPF_FUNC_tail_call) {"
    },
    {
        "line": 221,
        "fullcodeline": "if (prog->jit_requested && BITS_PER_LONG == 64 &&"
    },
    {
        "line": 309,
        "fullcodeline": "if (prog->jit_requested && BITS_PER_LONG == 64 &&"
    },
    {
        "line": 338,
        "fullcodeline": "if (!fn->func) {"
    },
    {
        "line": 358,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "insn->code == (BPF_ALU | BPF_DIV | BPF_X)) {"
    },
    {
        "line": 21,
        "fullcodeline": "bool is64 = BPF_CLASS(insn->code) == BPF_ALU64;"
    },
    {
        "line": 22,
        "fullcodeline": "bool isdiv = BPF_OP(insn->code) == BPF_DIV;"
    },
    {
        "line": 24,
        "fullcodeline": "struct bpf_insn chk_and_div[] = {"
    },
    {
        "line": 33,
        "fullcodeline": "struct bpf_insn chk_and_mod[] = {"
    },
    {
        "line": 43,
        "fullcodeline": "patchlet = isdiv ? chk_and_div : chk_and_mod;"
    },
    {
        "line": 44,
        "fullcodeline": "cnt = isdiv ? ARRAY_SIZE(chk_and_div) :"
    },
    {
        "line": 47,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta, patchlet, cnt);"
    },
    {
        "line": 51,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 52,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 53,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 59,
        "fullcodeline": "(BPF_MODE(insn->code) == BPF_ABS ||"
    },
    {
        "line": 61,
        "fullcodeline": "cnt = env->ops->gen_ld_abs(insn, insn_buf);"
    },
    {
        "line": 67,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta, insn_buf, cnt);"
    },
    {
        "line": 71,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 72,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 73,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 79,
        "fullcodeline": "insn->code == (BPF_ALU64 | BPF_SUB | BPF_X)) {"
    },
    {
        "line": 80,
        "fullcodeline": "const u8 code_add = BPF_ALU64 | BPF_ADD | BPF_X;"
    },
    {
        "line": 81,
        "fullcodeline": "const u8 code_sub = BPF_ALU64 | BPF_SUB | BPF_X;"
    },
    {
        "line": 82,
        "fullcodeline": "struct bpf_insn *patch = &insn_buf[0];"
    },
    {
        "line": 86,
        "fullcodeline": "aux = &env->insn_aux_data[i + delta];"
    },
    {
        "line": 91,
        "fullcodeline": "isneg = aux->alu_state & BPF_ALU_NEG_VALUE;"
    },
    {
        "line": 92,
        "fullcodeline": "issrc = (aux->alu_state & BPF_ALU_SANITIZE) =="
    },
    {
        "line": 95,
        "fullcodeline": "off_reg = issrc ? insn->src_reg : insn->dst_reg;"
    },
    {
        "line": 98,
        "fullcodeline": "*patch++ = BPF_MOV32_IMM(BPF_REG_AX, aux->alu_limit);"
    },
    {
        "line": 99,
        "fullcodeline": "*patch++ = BPF_ALU64_REG(BPF_SUB, BPF_REG_AX, off_reg);"
    },
    {
        "line": 100,
        "fullcodeline": "*patch++ = BPF_ALU64_REG(BPF_OR, BPF_REG_AX, off_reg);"
    },
    {
        "line": 101,
        "fullcodeline": "*patch++ = BPF_ALU64_IMM(BPF_NEG, BPF_REG_AX, 0);"
    },
    {
        "line": 102,
        "fullcodeline": "*patch++ = BPF_ALU64_IMM(BPF_ARSH, BPF_REG_AX, 63);"
    },
    {
        "line": 103,
        "fullcodeline": "*patch++ = BPF_ALU64_REG(BPF_AND, BPF_REG_AX, off_reg);"
    },
    {
        "line": 106,
        "fullcodeline": "insn->src_reg = BPF_REG_AX;"
    },
    {
        "line": 110,
        "fullcodeline": "*patch++ = *insn;"
    },
    {
        "line": 113,
        "fullcodeline": "cnt = patch - insn_buf;"
    },
    {
        "line": 115,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta, insn_buf, cnt);"
    },
    {
        "line": 119,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 120,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 121,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 130,
        "fullcodeline": "ret = fixup_kfunc_call(env, insn);"
    },
    {
        "line": 137,
        "fullcodeline": "prog->dst_needed = 1;"
    },
    {
        "line": 139,
        "fullcodeline": "bpf_user_rnd_init_once();"
    },
    {
        "line": 141,
        "fullcodeline": "prog->kprobe_override = 1;"
    },
    {
        "line": 148,
        "fullcodeline": "prog->cb_access = 1;"
    },
    {
        "line": 151,
        "fullcodeline": "prog->aux->max_pkt_offset = MAX_PACKET_OFF;"
    },
    {
        "line": 158,
        "fullcodeline": "insn->imm = 0;"
    },
    {
        "line": 159,
        "fullcodeline": "insn->code = BPF_JMP | BPF_TAIL_CALL;"
    },
    {
        "line": 161,
        "fullcodeline": "aux = &env->insn_aux_data[i + delta];"
    },
    {
        "line": 198,
        "fullcodeline": "map_ptr = BPF_MAP_PTR(aux->map_ptr_state);"
    },
    {
        "line": 199,
        "fullcodeline": "insn_buf[0] = BPF_JMP_IMM(BPF_JGE, BPF_REG_3,"
    },
    {
        "line": 205,
        "fullcodeline": "insn_buf[2] = *insn;"
    },
    {
        "line": 206,
        "fullcodeline": "cnt = 3;"
    },
    {
        "line": 207,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta, insn_buf, cnt);"
    },
    {
        "line": 211,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 212,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 213,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 222,
        "fullcodeline": "(insn->imm == BPF_FUNC_map_lookup_elem ||"
    },
    {
        "line": 229,
        "fullcodeline": "aux = &env->insn_aux_data[i + delta];"
    },
    {
        "line": 233,
        "fullcodeline": "map_ptr = BPF_MAP_PTR(aux->map_ptr_state);"
    },
    {
        "line": 234,
        "fullcodeline": "ops = map_ptr->ops;"
    },
    {
        "line": 256,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_lookup_elem,"
    },
    {
        "line": 258,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_delete_elem,"
    },
    {
        "line": 260,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_update_elem,"
    },
    {
        "line": 263,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_push_elem,"
    },
    {
        "line": 266,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_pop_elem,"
    },
    {
        "line": 268,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_peek_elem,"
    },
    {
        "line": 270,
        "fullcodeline": "BUILD_BUG_ON(!__same_type(ops->map_redirect,"
    },
    {
        "line": 310,
        "fullcodeline": "insn->imm == BPF_FUNC_jiffies64) {"
    },
    {
        "line": 311,
        "fullcodeline": "struct bpf_insn ld_jiffies_addr[2] = {"
    },
    {
        "line": 316,
        "fullcodeline": "insn_buf[0] = ld_jiffies_addr[0];"
    },
    {
        "line": 317,
        "fullcodeline": "insn_buf[1] = ld_jiffies_addr[1];"
    },
    {
        "line": 318,
        "fullcodeline": "insn_buf[2] = BPF_LDX_MEM(BPF_DW, BPF_REG_0,"
    },
    {
        "line": 320,
        "fullcodeline": "cnt = 3;"
    },
    {
        "line": 322,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta, insn_buf,"
    },
    {
        "line": 327,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 328,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 329,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 350,
        "fullcodeline": "if (!map_ptr->ops->map_poke_track ||"
    },
    {
        "line": 352,
        "fullcodeline": "!map_ptr->ops->map_poke_run) {"
    },
    {
        "line": 19,
        "fullcodeline": "insn->code == (BPF_ALU | BPF_MOD | BPF_X) ||"
    },
    {
        "line": 48,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 60,
        "fullcodeline": "BPF_MODE(insn->code) == BPF_IND)) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (cnt == 0 || cnt >= ARRAY_SIZE(insn_buf)) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 87,
        "fullcodeline": "if (!aux->alu_state ||"
    },
    {
        "line": 104,
        "fullcodeline": "if (!issrc)"
    },
    {
        "line": 111,
        "fullcodeline": "if (issrc && isneg)"
    },
    {
        "line": 116,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 149,
        "fullcodeline": "if (!allow_tail_call_in_subprogs(env))"
    },
    {
        "line": 162,
        "fullcodeline": "if (env->bpf_capable && !expect_blinding &&"
    },
    {
        "line": 184,
        "fullcodeline": "if (!bpf_map_ptr_unpriv(aux))"
    },
    {
        "line": 193,
        "fullcodeline": "if (bpf_map_ptr_poisoned(aux)) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 228,
        "fullcodeline": "insn->imm == BPF_FUNC_redirect_map)) {"
    },
    {
        "line": 230,
        "fullcodeline": "if (bpf_map_ptr_poisoned(aux))"
    },
    {
        "line": 235,
        "fullcodeline": "if (insn->imm == BPF_FUNC_map_lookup_elem &&"
    },
    {
        "line": 324,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 341,
        "fullcodeline": "func_id_name(insn->imm), insn->imm);"
    },
    {
        "line": 342,
        "fullcodeline": "return -EFAULT;"
    },
    {
        "line": 351,
        "fullcodeline": "!map_ptr->ops->map_poke_untrack ||"
    },
    {
        "line": 354,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 18,
        "fullcodeline": "insn->code == (BPF_ALU64 | BPF_DIV | BPF_X) ||"
    },
    {
        "line": 26,
        "fullcodeline": "BPF_RAW_INSN((is64 ? BPF_JMP : BPF_JMP32) |"
    },
    {
        "line": 29,
        "fullcodeline": "BPF_ALU32_REG(BPF_XOR, insn->dst_reg, insn->dst_reg),"
    },
    {
        "line": 30,
        "fullcodeline": "BPF_JMP_IMM(BPF_JA, 0, 0, 1),"
    },
    {
        "line": 35,
        "fullcodeline": "BPF_RAW_INSN((is64 ? BPF_JMP : BPF_JMP32) |"
    },
    {
        "line": 39,
        "fullcodeline": "BPF_JMP_IMM(BPF_JA, 0, 0, 1),"
    },
    {
        "line": 40,
        "fullcodeline": "BPF_MOV32_REG(insn->dst_reg, insn->dst_reg),"
    },
    {
        "line": 45,
        "fullcodeline": "ARRAY_SIZE(chk_and_mod) - (is64 ? 2 : 0);"
    },
    {
        "line": 88,
        "fullcodeline": "aux->alu_state == BPF_ALU_NON_POINTER)"
    },
    {
        "line": 97,
        "fullcodeline": "*patch++ = BPF_ALU64_IMM(BPF_MUL, off_reg, -1);"
    },
    {
        "line": 105,
        "fullcodeline": "*patch++ = BPF_MOV64_REG(insn->dst_reg, insn->src_reg);"
    },
    {
        "line": 108,
        "fullcodeline": "insn->code = insn->code == code_add ?"
    },
    {
        "line": 112,
        "fullcodeline": "*patch++ = BPF_ALU64_IMM(BPF_MUL, off_reg, -1);"
    },
    {
        "line": 150,
        "fullcodeline": "prog->aux->stack_depth = MAX_BPF_STACK;"
    },
    {
        "line": 166,
        "fullcodeline": "!bpf_map_ptr_unpriv(aux)) {"
    },
    {
        "line": 167,
        "fullcodeline": "struct bpf_jit_poke_descriptor desc = {"
    },
    {
        "line": 174,
        "fullcodeline": "ret = bpf_jit_add_poke_descriptor(prog, &desc);"
    },
    {
        "line": 180,
        "fullcodeline": "insn->imm = ret + 1;"
    },
    {
        "line": 227,
        "fullcodeline": "insn->imm == BPF_FUNC_map_peek_elem   ||"
    },
    {
        "line": 237,
        "fullcodeline": "cnt = ops->map_gen_lookup(map_ptr, insn_buf);"
    },
    {
        "line": 245,
        "fullcodeline": "new_prog = bpf_patch_insn_data(env, i + delta,"
    },
    {
        "line": 250,
        "fullcodeline": "delta    += cnt - 1;"
    },
    {
        "line": 251,
        "fullcodeline": "env->prog = prog = new_prog;"
    },
    {
        "line": 252,
        "fullcodeline": "insn      = new_prog->insnsi + i + delta;"
    },
    {
        "line": 276,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_lookup_elem) -"
    },
    {
        "line": 280,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_update_elem) -"
    },
    {
        "line": 284,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_delete_elem) -"
    },
    {
        "line": 288,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_push_elem) -"
    },
    {
        "line": 292,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_pop_elem) -"
    },
    {
        "line": 296,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_peek_elem) -"
    },
    {
        "line": 300,
        "fullcodeline": "insn->imm = BPF_CAST_CALL(ops->map_redirect) -"
    },
    {
        "line": 312,
        "fullcodeline": "BPF_LD_IMM64(BPF_REG_0,"
    },
    {
        "line": 37,
        "fullcodeline": "0, 1 + (is64 ? 0 : 1), 0),"
    },
    {
        "line": 49,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 64,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 69,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 117,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 165,
        "fullcodeline": "!bpf_map_ptr_poisoned(aux) &&"
    },
    {
        "line": 175,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 195,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 209,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 226,
        "fullcodeline": "insn->imm == BPF_FUNC_map_pop_elem    ||"
    },
    {
        "line": 238,
        "fullcodeline": "if (cnt == -EOPNOTSUPP)"
    },
    {
        "line": 240,
        "fullcodeline": "if (cnt <= 0 || cnt >= ARRAY_SIZE(insn_buf)) {"
    },
    {
        "line": 247,
        "fullcodeline": "if (!new_prog)"
    },
    {
        "line": 271,
        "fullcodeline": "(int (*)(struct bpf_map *map, u32 ifindex, u64 flags))NULL));"
    },
    {
        "line": 313,
        "fullcodeline": "(unsigned long)&jiffies),"
    },
    {
        "line": 325,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 164,
        "fullcodeline": "!bpf_map_key_poisoned(aux) &&"
    },
    {
        "line": 225,
        "fullcodeline": "insn->imm == BPF_FUNC_map_push_elem   ||"
    },
    {
        "line": 168,
        "fullcodeline": ".reason = BPF_POKE_REASON_TAIL_CALL,"
    },
    {
        "line": 169,
        "fullcodeline": ".tail_call.map = BPF_MAP_PTR(aux->map_ptr_state),"
    },
    {
        "line": 170,
        "fullcodeline": ".tail_call.key = bpf_map_key_immediate(aux),"
    },
    {
        "line": 171,
        "fullcodeline": ".insn_idx = i + delta,"
    },
    {
        "line": 224,
        "fullcodeline": "insn->imm == BPF_FUNC_map_delete_elem ||"
    },
    {
        "line": 242,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 248,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 223,
        "fullcodeline": "insn->imm == BPF_FUNC_map_update_elem ||"
    }
]