[
    {
        "line": 11,
        "fullcodeline": "assert len(contract_sig.args) == len(args_lll)"
    },
    {
        "line": 21,
        "fullcodeline": "sub = [\"seq\"]"
    },
    {
        "line": 27,
        "fullcodeline": "sub += arg_packer"
    },
    {
        "line": 43,
        "fullcodeline": "sub.append([\"assert\", call_op])"
    },
    {
        "line": 48,
        "fullcodeline": "ret = LLLnode.from_list("
    },
    {
        "line": 5,
        "fullcodeline": "if value is None:"
    },
    {
        "line": 7,
        "fullcodeline": "if gas is None:"
    },
    {
        "line": 13,
        "fullcodeline": "if context.is_constant() and contract_sig.mutability not in (\"view\", \"pure\"):"
    },
    {
        "line": 23,
        "fullcodeline": "buf, arg_packer, args_ofst, args_len = _pack_arguments(contract_sig, args_lll, context, pos)"
    },
    {
        "line": 25,
        "fullcodeline": "ret_unpacker, ret_ofst, ret_len = _unpack_returndata(buf, contract_sig, context, pos)"
    },
    {
        "line": 29,
        "fullcodeline": "if contract_sig.return_type is None:"
    },
    {
        "line": 38,
        "fullcodeline": "if context.is_constant() or contract_sig.mutability in (\"view\", \"pure\"):"
    },
    {
        "line": 45,
        "fullcodeline": "if contract_sig.return_type is not None:"
    },
    {
        "line": 6,
        "fullcodeline": "value = 0"
    },
    {
        "line": 8,
        "fullcodeline": "gas = \"gas\""
    },
    {
        "line": 15,
        "fullcodeline": "raise StateAccessViolation("
    },
    {
        "line": 36,
        "fullcodeline": "sub.append([\"assert\", [\"extcodesize\", contract_address]])"
    },
    {
        "line": 39,
        "fullcodeline": "call_op = [\"staticcall\", gas, contract_address, args_ofst, args_len, ret_ofst, ret_len]"
    },
    {
        "line": 41,
        "fullcodeline": "call_op = [\"call\", gas, contract_address, value, args_ofst, args_len, ret_ofst, ret_len]"
    },
    {
        "line": 46,
        "fullcodeline": "sub += ret_unpacker"
    },
    {
        "line": 53,
        "fullcodeline": "encoding=_returndata_encoding(contract_sig),"
    },
    {
        "line": 16,
        "fullcodeline": "f\"May not call state modifying function '{contract_sig.name}' \""
    },
    {
        "line": 17,
        "fullcodeline": "f\"within {context.pp_constancy()}.\","
    }
]