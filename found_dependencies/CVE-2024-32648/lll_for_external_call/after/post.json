[
    {
        "line": 2,
        "fullcodeline": "from vyper.old_codegen.expr import ("
    },
    {
        "line": 6,
        "fullcodeline": "pos = getpos(stmt_expr)"
    },
    {
        "line": 8,
        "fullcodeline": "args_lll = [Expr(x, context).lll_node for x in stmt_expr.args]"
    },
    {
        "line": 50,
        "fullcodeline": "ret = _external_call_helper("
    },
    {
        "line": 53,
        "fullcodeline": "ret.annotation = stmt_expr.get(\"node_source_code\")"
    },
    {
        "line": 7,
        "fullcodeline": "value, gas = get_gas_and_value(stmt_expr, context)"
    },
    {
        "line": 10,
        "fullcodeline": "if isinstance(stmt_expr.func, vy_ast.Attribute) and isinstance("
    },
    {
        "line": 16,
        "fullcodeline": "assert len(stmt_expr.func.value.args) == 1"
    },
    {
        "line": 18,
        "fullcodeline": "contract_address = Expr.parse_value_expr(stmt_expr.func.value.args[0], context)"
    },
    {
        "line": 21,
        "fullcodeline": "isinstance(stmt_expr.func.value, vy_ast.Attribute)"
    },
    {
        "line": 22,
        "fullcodeline": "and stmt_expr.func.value.attr in context.globals"
    },
    {
        "line": 29,
        "fullcodeline": "assert stmt_expr.func.value.value.id == \"self\", stmt_expr"
    },
    {
        "line": 34,
        "fullcodeline": "contract_address = unwrap_location("
    },
    {
        "line": 45,
        "fullcodeline": "raise StructureException(\"Unsupported operator.\", stmt_expr)"
    },
    {
        "line": 35,
        "fullcodeline": "LLLnode.from_list("
    },
    {
        "line": 40,
        "fullcodeline": "annotation=\"self.\" + stmt_expr.func.value.attr,"
    }
]