[
    {
        "line": 2,
        "fullcodeline": "for _interfacename in global_ctx._contracts:"
    },
    {
        "line": 36,
        "fullcodeline": "for interface_name, interface in global_ctx._interfaces.items():"
    },
    {
        "line": 5,
        "fullcodeline": "_defnames = [_def.name for _def in _interface_defs]"
    },
    {
        "line": 6,
        "fullcodeline": "interface = {}"
    },
    {
        "line": 34,
        "fullcodeline": "external_interfaces[_interfacename] = interface"
    },
    {
        "line": 37,
        "fullcodeline": "external_interfaces[interface_name] = {"
    },
    {
        "line": 7,
        "fullcodeline": "if len(set(_defnames)) < len(_interface_defs):"
    },
    {
        "line": 13,
        "fullcodeline": "for _def in _interface_defs:"
    },
    {
        "line": 8,
        "fullcodeline": "raise FunctionDeclarationException("
    },
    {
        "line": 14,
        "fullcodeline": "constant = False"
    },
    {
        "line": 27,
        "fullcodeline": "sig = FunctionSignature.from_definition("
    },
    {
        "line": 33,
        "fullcodeline": "interface[sig.name] = sig"
    },
    {
        "line": 9,
        "fullcodeline": "\"Duplicate function name: \""
    },
    {
        "line": 17,
        "fullcodeline": "len(_def.body) == 1"
    },
    {
        "line": 10,
        "fullcodeline": "f\"{[name for name in _defnames if _defnames.count(name) > 1][0]}\""
    },
    {
        "line": 23,
        "fullcodeline": "constant = True if _def.body[0].value.id in (\"view\", \"pure\") else False"
    },
    {
        "line": 25,
        "fullcodeline": "raise StructureException(\"state mutability of call type must be specified\", _def)"
    },
    {
        "line": 38,
        "fullcodeline": "sig.name: sig for sig in interface if isinstance(sig, FunctionSignature)"
    }
]