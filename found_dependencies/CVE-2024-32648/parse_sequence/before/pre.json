[
    {
        "line": 24,
        "fullcodeline": "init_lll = []"
    },
    {
        "line": 25,
        "fullcodeline": "sequence_lll = []"
    },
    {
        "line": 26,
        "fullcodeline": "for node in elements:"
    },
    {
        "line": 58,
        "fullcodeline": "return init_lll, sequence_lll"
    },
    {
        "line": 37,
        "fullcodeline": "lll_node = Expr(node, context).lll_node"
    },
    {
        "line": 27,
        "fullcodeline": "if isinstance(node, vy_ast.List):"
    },
    {
        "line": 38,
        "fullcodeline": "if isinstance(node, vy_ast.Call) or ("
    },
    {
        "line": 30,
        "fullcodeline": "init_lll.extend(init)"
    },
    {
        "line": 31,
        "fullcodeline": "out_type = next((i.typ for i in seq if not i.typ.is_literal), seq[0].typ)"
    },
    {
        "line": 32,
        "fullcodeline": "typ = ListType(out_type, len(node.elements), is_literal=True)"
    },
    {
        "line": 33,
        "fullcodeline": "multi_lll = LLLnode.from_list([\"multi\"] + seq, typ=typ, pos=getpos(node))"
    },
    {
        "line": 34,
        "fullcodeline": "sequence_lll.append(multi_lll)"
    },
    {
        "line": 39,
        "fullcodeline": "isinstance(node, vy_ast.Subscript) and isinstance(node.value, vy_ast.Call)"
    },
    {
        "line": 43,
        "fullcodeline": "target = LLLnode.from_list("
    },
    {
        "line": 49,
        "fullcodeline": "init_lll.append(make_setter(target, lll_node, \"memory\", pos=getpos(base_node)))"
    },
    {
        "line": 50,
        "fullcodeline": "sequence_lll.append("
    },
    {
        "line": 56,
        "fullcodeline": "sequence_lll.append(lll_node)"
    },
    {
        "line": 29,
        "fullcodeline": "init, seq = parse_sequence(node, node.elements, context)"
    },
    {
        "line": 51,
        "fullcodeline": "LLLnode.from_list("
    },
    {
        "line": 44,
        "fullcodeline": "context.new_internal_variable(lll_node.typ),"
    },
    {
        "line": 47,
        "fullcodeline": "pos=getpos(base_node),"
    },
    {
        "line": 52,
        "fullcodeline": "target, typ=lll_node.typ, pos=getpos(base_node), location=\"memory\""
    }
]