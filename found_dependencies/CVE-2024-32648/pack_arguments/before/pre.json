[
    {
        "line": 2,
        "fullcodeline": "pos = getpos(stmt_expr)"
    },
    {
        "line": 3,
        "fullcodeline": "setters = []"
    },
    {
        "line": 4,
        "fullcodeline": "staticarray_offset = 0"
    },
    {
        "line": 6,
        "fullcodeline": "maxlen = sum([get_size_of_type(arg.typ) for arg in signature.args]) * 32"
    },
    {
        "line": 10,
        "fullcodeline": "placeholder_typ = ByteArrayType(maxlen=maxlen)"
    },
    {
        "line": 11,
        "fullcodeline": "placeholder = context.new_internal_variable(placeholder_typ)"
    },
    {
        "line": 20,
        "fullcodeline": "dynamic_remaining = len([i for i in signature.args if isinstance(i.typ, ByteArrayLike)])"
    },
    {
        "line": 16,
        "fullcodeline": "if len(signature.args) != len(args):"
    },
    {
        "line": 21,
        "fullcodeline": "needpos = bool(dynamic_remaining)"
    },
    {
        "line": 23,
        "fullcodeline": "for i, (arg, typ) in enumerate(zip(args, [arg.typ for arg in signature.args])):"
    },
    {
        "line": 8,
        "fullcodeline": "maxlen += 32"
    },
    {
        "line": 13,
        "fullcodeline": "setters.append([\"mstore\", placeholder, signature.method_id])"
    },
    {
        "line": 14,
        "fullcodeline": "placeholder += 32"
    },
    {
        "line": 78,
        "fullcodeline": "returner = [[placeholder - 4]]"
    },
    {
        "line": 79,
        "fullcodeline": "inargsize = placeholder_typ.maxlen - 28"
    },
    {
        "line": 82,
        "fullcodeline": "returner = []"
    },
    {
        "line": 83,
        "fullcodeline": "inargsize = placeholder_typ.maxlen"
    },
    {
        "line": 86,
        "fullcodeline": "return ("
    },
    {
        "line": 96,
        "fullcodeline": "return ("
    },
    {
        "line": 24,
        "fullcodeline": "if isinstance(typ, BaseType):"
    },
    {
        "line": 87,
        "fullcodeline": "LLLnode.from_list("
    },
    {
        "line": 97,
        "fullcodeline": "LLLnode.from_list([\"seq\"] + setters + returner, typ=placeholder_typ, location=\"memory\"),"
    },
    {
        "line": 25,
        "fullcodeline": "setters.append("
    },
    {
        "line": 88,
        "fullcodeline": "[\"with\", \"_poz\", len(args) * 32 + staticarray_offset, [\"seq\"] + setters + returner],"
    },
    {
        "line": 26,
        "fullcodeline": "make_setter("
    },
    {
        "line": 35,
        "fullcodeline": "elif isinstance(typ, ByteArrayLike):"
    },
    {
        "line": 27,
        "fullcodeline": "LLLnode.from_list(placeholder + staticarray_offset + i * 32, typ=typ,),"
    },
    {
        "line": 37,
        "fullcodeline": "setters.append([\"mstore\", placeholder + staticarray_offset + i * 32, \"_poz\"])"
    },
    {
        "line": 38,
        "fullcodeline": "arg_copy = LLLnode.from_list(\"_s\", typ=arg.typ, location=arg.location)"
    },
    {
        "line": 39,
        "fullcodeline": "target = LLLnode.from_list([\"add\", placeholder, \"_poz\"], typ=typ, location=\"memory\",)"
    },
    {
        "line": 40,
        "fullcodeline": "pos_setter = \"pass\""
    },
    {
        "line": 65,
        "fullcodeline": "elif isinstance(typ, (StructType, ListType)):"
    },
    {
        "line": 44,
        "fullcodeline": "if arg.value is None or arg.typ.maxlen == 0:"
    },
    {
        "line": 48,
        "fullcodeline": "setters.append([\"seq\", mzero(target, 64), pos_setter])"
    },
    {
        "line": 56,
        "fullcodeline": "setters.append("
    },
    {
        "line": 68,
        "fullcodeline": "target = LLLnode.from_list("
    },
    {
        "line": 71,
        "fullcodeline": "setters.append(make_setter(target, arg, \"memory\", pos=pos))"
    },
    {
        "line": 72,
        "fullcodeline": "staticarray_offset += 32 * (get_size_of_type(typ) - 1)"
    },
    {
        "line": 57,
        "fullcodeline": "["
    },
    {
        "line": 66,
        "fullcodeline": "if has_dynamic_data(typ):"
    },
    {
        "line": 47,
        "fullcodeline": "pos_setter = [\"set\", \"_poz\", [\"add\", \"_poz\", 64]]"
    },
    {
        "line": 51,
        "fullcodeline": "pos_setter = ["
    },
    {
        "line": 61,
        "fullcodeline": "[\"seq\", make_byte_array_copier(target, arg_copy, pos), pos_setter],"
    },
    {
        "line": 69,
        "fullcodeline": "[placeholder + staticarray_offset + i * 32], typ=typ, location=\"memory\","
    },
    {
        "line": 54,
        "fullcodeline": "[\"add\", 32, [\"ceil32\", [\"add\", \"_poz\", get_bytearray_length(arg_copy)]]],"
    }
]