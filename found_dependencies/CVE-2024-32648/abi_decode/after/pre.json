[
    {
        "line": 2,
        "fullcodeline": "os = o_list(lll_node, pos=pos)"
    },
    {
        "line": 3,
        "fullcodeline": "lll_ret = [\"seq\"]"
    },
    {
        "line": 4,
        "fullcodeline": "parent_abi_t = abi_type_of(lll_node.typ)"
    },
    {
        "line": 38,
        "fullcodeline": "lll_ret = [\"with\", \"src\", src, [\"with\", \"src_loc\", \"src\", lll_ret]]"
    },
    {
        "line": 5,
        "fullcodeline": "for i, o in enumerate(os):"
    },
    {
        "line": 6,
        "fullcodeline": "abi_t = abi_type_of(o.typ)"
    },
    {
        "line": 7,
        "fullcodeline": "src_loc = LLLnode(\"src_loc\", typ=o.typ, location=src.location)"
    },
    {
        "line": 8,
        "fullcodeline": "if parent_abi_t.is_complex_type():"
    },
    {
        "line": 32,
        "fullcodeline": "if i + 1 == len(os):"
    },
    {
        "line": 17,
        "fullcodeline": "lll_ret.append(abi_decode(o, child_loc, clamp=clamp, pos=pos))"
    },
    {
        "line": 30,
        "fullcodeline": "lll_ret.append(make_setter(o, src_loc, location=o.location, pos=pos))"
    },
    {
        "line": 33,
        "fullcodeline": "pass  # optimize out the last pointer increment"
    },
    {
        "line": 35,
        "fullcodeline": "sz = abi_t.embedded_static_size()"
    },
    {
        "line": 36,
        "fullcodeline": "lll_ret.append([\"set\", \"src_loc\", [\"add\", \"src_loc\", sz]])"
    },
    {
        "line": 9,
        "fullcodeline": "if abi_t.is_dynamic():"
    },
    {
        "line": 21,
        "fullcodeline": "if clamp and _needs_clamp(o.typ, Encoding.ABI):"
    },
    {
        "line": 12,
        "fullcodeline": "child_loc = [\"add\", \"src\", unwrap_location(src_loc)]"
    },
    {
        "line": 13,
        "fullcodeline": "child_loc = LLLnode.from_list(child_loc, typ=o.typ, location=src.location)"
    },
    {
        "line": 15,
        "fullcodeline": "child_loc = src_loc"
    },
    {
        "line": 22,
        "fullcodeline": "src_loc = LLLnode.from_list("
    },
    {
        "line": 28,
        "fullcodeline": "pass"
    },
    {
        "line": 23,
        "fullcodeline": "[\"with\", \"src_loc\", src_loc, [\"seq\", clamp_basetype(src_loc), src_loc]],"
    }
]