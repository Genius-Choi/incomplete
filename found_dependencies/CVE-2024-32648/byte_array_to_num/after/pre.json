[
    {
        "line": 4,
        "fullcodeline": "if arg.location == \"storage\":"
    },
    {
        "line": 12,
        "fullcodeline": "if out_type == \"int128\":"
    },
    {
        "line": 17,
        "fullcodeline": "return LLLnode.from_list("
    },
    {
        "line": 5,
        "fullcodeline": "lengetter = LLLnode.from_list([\"sload\", \"_sub\"], typ=BaseType(\"int256\"))"
    },
    {
        "line": 6,
        "fullcodeline": "first_el_getter = LLLnode.from_list([\"sload\", [\"add\", 1, \"_sub\"]], typ=BaseType(\"int256\"))"
    },
    {
        "line": 8,
        "fullcodeline": "op = load_op(arg.location)"
    },
    {
        "line": 9,
        "fullcodeline": "lengetter = LLLnode.from_list([op, \"_sub\"], typ=BaseType(\"int256\"))"
    },
    {
        "line": 10,
        "fullcodeline": "first_el_getter = LLLnode.from_list([op, [\"add\", 32, \"_sub\"]], typ=BaseType(\"int256\"))"
    },
    {
        "line": 13,
        "fullcodeline": "result = int128_clamp([\"div\", \"_el1\", [\"exp\", 256, [\"sub\", 32, \"_len\"]]])"
    },
    {
        "line": 18,
        "fullcodeline": "["
    },
    {
        "line": 29,
        "fullcodeline": "typ=BaseType(out_type),"
    },
    {
        "line": 30,
        "fullcodeline": "annotation=f\"bytearray to number ({out_type})\","
    },
    {
        "line": 14,
        "fullcodeline": "elif out_type in (\"int256\", \"uint256\"):"
    },
    {
        "line": 22,
        "fullcodeline": "["
    },
    {
        "line": 15,
        "fullcodeline": "result = [\"div\", \"_el1\", [\"exp\", 256, [\"sub\", offset, \"_len\"]]]"
    },
    {
        "line": 26,
        "fullcodeline": "[\"with\", \"_len\", [\"clamp\", 0, lengetter, 32], result],"
    }
]