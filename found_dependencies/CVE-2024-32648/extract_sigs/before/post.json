[
    {
        "line": 2,
        "fullcodeline": "if sig_code[\"type\"] == \"vyper\":"
    },
    {
        "line": 3,
        "fullcodeline": "interface_ast = ["
    },
    {
        "line": 22,
        "fullcodeline": "global_ctx = GlobalContext.get_global_context(interface_ast)"
    },
    {
        "line": 23,
        "fullcodeline": "return sig_utils.mk_full_signature(global_ctx, sig_formatter=lambda x: x)"
    },
    {
        "line": 24,
        "fullcodeline": "elif sig_code[\"type\"] == \"json\":"
    },
    {
        "line": 27,
        "fullcodeline": "raise Exception("
    },
    {
        "line": 25,
        "fullcodeline": "return mk_full_signature_from_json(sig_code[\"code\"])"
    },
    {
        "line": 29,
        "fullcodeline": "f\"Unknown interface signature type '{sig_code['type']}' supplied. \""
    },
    {
        "line": 5,
        "fullcodeline": "for i in vy_ast.parse_to_ast(sig_code[\"code\"], contract_name=interface_name)"
    },
    {
        "line": 7,
        "fullcodeline": "if isinstance("
    },
    {
        "line": 20,
        "fullcodeline": "or (isinstance(i, vy_ast.AnnAssign) and i.target.id != \"implements\")"
    },
    {
        "line": 9,
        "fullcodeline": "("
    }
]