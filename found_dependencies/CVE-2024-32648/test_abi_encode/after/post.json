[
    {
        "line": 2,
        "fullcodeline": "code = \"\"\""
    },
    {
        "line": 77,
        "fullcodeline": "c = get_contract(code)"
    },
    {
        "line": 79,
        "fullcodeline": "method_id = 0xDEADBEEF .to_bytes(4, \"big\")"
    },
    {
        "line": 83,
        "fullcodeline": "arg = 123"
    },
    {
        "line": 84,
        "fullcodeline": "assert c.abi_encode3(arg, False, False).hex() == abi_encode(\"uint256\", arg).hex()"
    },
    {
        "line": 85,
        "fullcodeline": "assert c.abi_encode3(arg, True, False).hex() == abi_encode(\"(uint256)\", (arg,)).hex()"
    },
    {
        "line": 86,
        "fullcodeline": "assert c.abi_encode3(arg, False, True).hex() == (method_id + abi_encode(\"uint256\", arg)).hex()"
    },
    {
        "line": 87,
        "fullcodeline": "assert ("
    },
    {
        "line": 91,
        "fullcodeline": "arg = \"some string\""
    },
    {
        "line": 92,
        "fullcodeline": "assert c.abi_encode2(arg, False, False).hex() == abi_encode(\"string\", arg).hex()"
    },
    {
        "line": 93,
        "fullcodeline": "assert c.abi_encode2(arg, True, False).hex() == abi_encode(\"(string)\", (arg,)).hex()"
    },
    {
        "line": 94,
        "fullcodeline": "assert c.abi_encode2(arg, False, True).hex() == (method_id + abi_encode(\"string\", arg)).hex()"
    },
    {
        "line": 95,
        "fullcodeline": "assert ("
    },
    {
        "line": 99,
        "fullcodeline": "test_addr = b\"\".join(chr(i).encode(\"utf-8\") for i in range(20))"
    },
    {
        "line": 100,
        "fullcodeline": "test_bytes32 = b\"\".join(chr(i).encode(\"utf-8\") for i in range(32))"
    },
    {
        "line": 101,
        "fullcodeline": "human_tuple = ("
    },
    {
        "line": 105,
        "fullcodeline": "args = tuple([human_tuple[0]] + list(human_tuple[1]))"
    },
    {
        "line": 106,
        "fullcodeline": "human_t = \"(string,(string,address,int128,bool,fixed168x10,uint256[3],bytes32))\""
    },
    {
        "line": 107,
        "fullcodeline": "human_encoded = abi_encode(human_t, human_tuple)"
    },
    {
        "line": 108,
        "fullcodeline": "assert c.abi_encode(*args, False, False).hex() == human_encoded.hex()"
    },
    {
        "line": 109,
        "fullcodeline": "assert c.abi_encode(*args, False, True).hex() == (method_id + human_encoded).hex()"
    },
    {
        "line": 111,
        "fullcodeline": "human_encoded = abi_encode(f\"({human_t})\", (human_tuple,))"
    },
    {
        "line": 112,
        "fullcodeline": "assert c.abi_encode(*args, True, False).hex() == human_encoded.hex()"
    },
    {
        "line": 113,
        "fullcodeline": "assert c.abi_encode(*args, True, True).hex() == (method_id + human_encoded).hex()"
    },
    {
        "line": 88,
        "fullcodeline": "c.abi_encode3(arg, True, True).hex() == (method_id + abi_encode(\"(uint256)\", (arg,))).hex()"
    },
    {
        "line": 96,
        "fullcodeline": "c.abi_encode2(arg, True, True).hex() == (method_id + abi_encode(\"(string)\", (arg,))).hex()"
    },
    {
        "line": 103,
        "fullcodeline": "(\"vyper\", test_addr, 123, True, Decimal(\"123.4\"), [123, 456, 789], test_bytes32),"
    }
]