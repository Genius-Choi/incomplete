[
    {
        "line": 2,
        "fullcodeline": "typ, location = parent.typ, parent.location"
    },
    {
        "line": 3,
        "fullcodeline": "if isinstance(typ, TupleLike):"
    },
    {
        "line": 4,
        "fullcodeline": "if isinstance(typ, StructType):"
    },
    {
        "line": 15,
        "fullcodeline": "if parent.value is None:"
    },
    {
        "line": 18,
        "fullcodeline": "if location == \"storage\":"
    },
    {
        "line": 42,
        "fullcodeline": "elif isinstance(typ, MappingType):"
    },
    {
        "line": 6,
        "fullcodeline": "attrs = list(typ.tuple_keys())"
    },
    {
        "line": 7,
        "fullcodeline": "index = attrs.index(key)"
    },
    {
        "line": 8,
        "fullcodeline": "annotation = key"
    },
    {
        "line": 10,
        "fullcodeline": "attrs = list(range(len(typ.members)))"
    },
    {
        "line": 11,
        "fullcodeline": "index = key"
    },
    {
        "line": 12,
        "fullcodeline": "annotation = None"
    },
    {
        "line": 21,
        "fullcodeline": "offset = 0"
    },
    {
        "line": 44,
        "fullcodeline": "sub = None"
    },
    {
        "line": 16,
        "fullcodeline": "return LLLnode.from_list(None, typ=subtype)"
    },
    {
        "line": 22,
        "fullcodeline": "for i in range(index):"
    },
    {
        "line": 24,
        "fullcodeline": "return LLLnode.from_list([\"add\", parent, offset], typ=subtype, location=\"storage\",)"
    },
    {
        "line": 25,
        "fullcodeline": "elif location == \"storage_prehashed\":"
    },
    {
        "line": 45,
        "fullcodeline": "if isinstance(key.typ, ByteArrayLike):"
    },
    {
        "line": 71,
        "fullcodeline": "if sub is not None and location == \"storage\":"
    },
    {
        "line": 74,
        "fullcodeline": "elif isinstance(typ, ListType) and is_base_type(key.typ, (\"int128\", \"int256\", \"uint256\")):"
    },
    {
        "line": 68,
        "fullcodeline": "subtype = typ.valuetype"
    },
    {
        "line": 69,
        "fullcodeline": "sub = unwrap_location(key)"
    },
    {
        "line": 75,
        "fullcodeline": "subtype = typ.subtype"
    },
    {
        "line": 80,
        "fullcodeline": "k = unwrap_location(key)"
    },
    {
        "line": 23,
        "fullcodeline": "offset += get_size_of_type(typ.members[attrs[i]])"
    },
    {
        "line": 26,
        "fullcodeline": "return LLLnode.from_list("
    },
    {
        "line": 31,
        "fullcodeline": "elif location in (\"calldata\", \"memory\"):"
    },
    {
        "line": 46,
        "fullcodeline": "if isinstance(typ.keytype, ByteArrayLike) and (typ.keytype.maxlen >= key.typ.maxlen):"
    },
    {
        "line": 72,
        "fullcodeline": "return LLLnode.from_list([\"sha3_64\", parent, sub], typ=subtype, location=\"storage\")"
    },
    {
        "line": 77,
        "fullcodeline": "if parent.value is None:"
    },
    {
        "line": 81,
        "fullcodeline": "if not array_bounds_check:"
    },
    {
        "line": 95,
        "fullcodeline": "if location == \"storage\":"
    },
    {
        "line": 27,
        "fullcodeline": "[\"add\", parent, LLLnode.from_list(index, annotation=annotation)],"
    },
    {
        "line": 32,
        "fullcodeline": "offset = 0"
    },
    {
        "line": 48,
        "fullcodeline": "subtype = typ.valuetype"
    },
    {
        "line": 82,
        "fullcodeline": "sub = k"
    },
    {
        "line": 97,
        "fullcodeline": "offset = get_size_of_type(subtype)"
    },
    {
        "line": 33,
        "fullcodeline": "for i in range(index):"
    },
    {
        "line": 35,
        "fullcodeline": "return LLLnode.from_list("
    },
    {
        "line": 49,
        "fullcodeline": "if len(key.args[0].args) >= 3:  # handle bytes literal."
    },
    {
        "line": 78,
        "fullcodeline": "return LLLnode.from_list(None, typ=subtype)"
    },
    {
        "line": 98,
        "fullcodeline": "return LLLnode.from_list("
    },
    {
        "line": 101,
        "fullcodeline": "elif location == \"storage_prehashed\":"
    },
    {
        "line": 36,
        "fullcodeline": "[\"add\", offset, parent],"
    },
    {
        "line": 50,
        "fullcodeline": "sub = LLLnode.from_list("
    },
    {
        "line": 66,
        "fullcodeline": "sub = LLLnode.from_list([\"sha3\", [\"add\", value, 32], key])"
    },
    {
        "line": 87,
        "fullcodeline": "sub = k"
    },
    {
        "line": 93,
        "fullcodeline": "sub = [\"uclamplt\", k, typ.count]"
    },
    {
        "line": 99,
        "fullcodeline": "[\"add\", parent, [\"mul\", sub, offset]], typ=subtype, location=\"storage\", pos=pos"
    },
    {
        "line": 34,
        "fullcodeline": "offset += 32 * get_size_of_type(typ.members[attrs[i]])"
    },
    {
        "line": 63,
        "fullcodeline": "if value == \"add\":"
    },
    {
        "line": 85,
        "fullcodeline": "if key.value < 0 or key.value >= typ.count:"
    },
    {
        "line": 102,
        "fullcodeline": "return LLLnode.from_list([\"add\", parent, sub], typ=subtype, location=\"storage\", pos=pos)"
    },
    {
        "line": 103,
        "fullcodeline": "elif location in (\"calldata\", \"memory\"):"
    },
    {
        "line": 51,
        "fullcodeline": "["
    },
    {
        "line": 65,
        "fullcodeline": "value = key.args[0]"
    },
    {
        "line": 104,
        "fullcodeline": "offset = 32 * get_size_of_type(subtype)"
    },
    {
        "line": 54,
        "fullcodeline": "["
    },
    {
        "line": 105,
        "fullcodeline": "return LLLnode.from_list("
    },
    {
        "line": 56,
        "fullcodeline": "[\"add\", key.args[0].args[-1], 32],"
    },
    {
        "line": 57,
        "fullcodeline": "[\"mload\", key.args[0].args[-1]],"
    },
    {
        "line": 106,
        "fullcodeline": "[\"add\", [\"mul\", offset, sub], parent], typ=subtype, location=location, pos=pos"
    }
]