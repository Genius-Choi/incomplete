[
    {
        "line": 18,
        "fullcodeline": "sig = FunctionSignature.from_definition(code, sigs=sigs, custom_structs=global_ctx._structs,)"
    },
    {
        "line": 21,
        "fullcodeline": "check_single_exit(code)"
    },
    {
        "line": 30,
        "fullcodeline": "def _run_pass(memory_allocator=None):"
    },
    {
        "line": 60,
        "fullcodeline": "allocate_start = context.max_callee_frame_size"
    },
    {
        "line": 61,
        "fullcodeline": "allocate_start += MemoryPositions.RESERVED_MEMORY"
    },
    {
        "line": 65,
        "fullcodeline": "frame_size = context.memory_allocator.size_of_mem - MemoryPositions.RESERVED_MEMORY"
    },
    {
        "line": 75,
        "fullcodeline": "o.context = context"
    },
    {
        "line": 76,
        "fullcodeline": "o.func_name = sig.name"
    },
    {
        "line": 16,
        "fullcodeline": "if _vars is None:"
    },
    {
        "line": 58,
        "fullcodeline": "_, context = _run_pass(memory_allocator=None)"
    },
    {
        "line": 63,
        "fullcodeline": "o, context = _run_pass(memory_allocator=MemoryAllocator(allocate_start))"
    },
    {
        "line": 67,
        "fullcodeline": "if not sig.internal:"
    },
    {
        "line": 77,
        "fullcodeline": "return o, allocate_start, frame_size"
    },
    {
        "line": 17,
        "fullcodeline": "_vars = {}  # noqa: F841"
    },
    {
        "line": 69,
        "fullcodeline": "o.total_gas = o.gas + calc_mem_gas(frame_size)"
    },
    {
        "line": 73,
        "fullcodeline": "o.total_gas = o.gas"
    }
]