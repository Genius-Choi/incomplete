[
    {
        "line": 2,
        "fullcodeline": "if isinstance(typ, BaseType):"
    },
    {
        "line": 4,
        "fullcodeline": "elif isinstance(typ, ByteArrayLike):"
    },
    {
        "line": 6,
        "fullcodeline": "elif isinstance(typ, ListType):"
    },
    {
        "line": 7,
        "fullcodeline": "return get_size_of_type(typ.subtype) * typ.count"
    },
    {
        "line": 8,
        "fullcodeline": "elif isinstance(typ, MappingType):"
    },
    {
        "line": 9,
        "fullcodeline": "raise InvalidType(\"Maps are not supported for function arguments or outputs.\")"
    },
    {
        "line": 10,
        "fullcodeline": "elif isinstance(typ, TupleLike):"
    },
    {
        "line": 11,
        "fullcodeline": "return sum([get_size_of_type(v) for v in typ.tuple_members()])"
    },
    {
        "line": 13,
        "fullcodeline": "raise InvalidType(f\"Can not get size of type, Unexpected type: {repr(typ)}\")"
    }
]