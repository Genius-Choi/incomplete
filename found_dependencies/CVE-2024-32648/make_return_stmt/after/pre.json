[
    {
        "line": 3,
        "fullcodeline": "sig = context.sig"
    },
    {
        "line": 5,
        "fullcodeline": "jump_to_exit = [\"goto\", sig.exit_sequence_label]"
    },
    {
        "line": 7,
        "fullcodeline": "_pos = getpos(stmt)"
    },
    {
        "line": 9,
        "fullcodeline": "if context.return_type is None:"
    },
    {
        "line": 29,
        "fullcodeline": "if context.return_type is None:"
    },
    {
        "line": 15,
        "fullcodeline": "_tmp = LLLnode(\"fake node\", location=\"memory\", typ=context.return_type)"
    },
    {
        "line": 16,
        "fullcodeline": "check_assign(_tmp, lll_val, _pos)"
    },
    {
        "line": 33,
        "fullcodeline": "dst = LLLnode.from_list([\"return_buffer\"], typ=context.return_type, location=\"memory\")"
    },
    {
        "line": 34,
        "fullcodeline": "fill_return_buffer = ["
    },
    {
        "line": 45,
        "fullcodeline": "lll_val = wrap_value_for_external_return(lll_val)"
    },
    {
        "line": 47,
        "fullcodeline": "maxlen = abi_type_of(context.return_type).size_bound()"
    },
    {
        "line": 48,
        "fullcodeline": "return_buffer_ofst = context.new_internal_variable(get_type_for_exact_size(maxlen))"
    },
    {
        "line": 52,
        "fullcodeline": "encode_out = abi_encode(return_buffer_ofst, lll_val, pos=_pos, returns_len=True)"
    },
    {
        "line": 10,
        "fullcodeline": "if stmt.value is not None:"
    },
    {
        "line": 30,
        "fullcodeline": "return finalize([\"pass\"])"
    },
    {
        "line": 41,
        "fullcodeline": "return finalize(fill_return_buffer)"
    },
    {
        "line": 55,
        "fullcodeline": "return finalize([\"seq_unchecked\", encode_out, return_buffer_ofst])"
    },
    {
        "line": 38,
        "fullcodeline": "make_setter(dst, lll_val, location=\"memory\", pos=_pos),"
    }
]