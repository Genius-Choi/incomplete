[
    {
        "line": 17,
        "fullcodeline": "atomic_thread_fence();"
    },
    {
        "line": 19,
        "fullcodeline": "base = vq->base;"
    },
    {
        "line": 20,
        "fullcodeline": "old_idx = vq->save_used;"
    },
    {
        "line": 21,
        "fullcodeline": "vq->save_used = new_idx = vq->used->idx;"
    },
    {
        "line": 22,
        "fullcodeline": "if (used_all_avail &&"
    },
    {
        "line": 23,
        "fullcodeline": "(base->negotiated_caps & (1 << VIRTIO_F_NOTIFY_ON_EMPTY)))"
    },
    {
        "line": 24,
        "fullcodeline": "intr = 1;"
    },
    {
        "line": 38,
        "fullcodeline": "vq_interrupt(base, vq);"
    },
    {
        "line": 25,
        "fullcodeline": "else if (base->negotiated_caps & (1 << VIRTIO_RING_F_EVENT_IDX)) {"
    },
    {
        "line": 26,
        "fullcodeline": "event_idx = VQ_USED_EVENT_IDX(vq);"
    },
    {
        "line": 31,
        "fullcodeline": "intr = (uint16_t)(new_idx - event_idx - 1) <"
    },
    {
        "line": 34,
        "fullcodeline": "intr = new_idx != old_idx &&"
    },
    {
        "line": 32,
        "fullcodeline": "(uint16_t)(new_idx - old_idx);"
    },
    {
        "line": 35,
        "fullcodeline": "!(vq->avail->flags & VRING_AVAIL_F_NO_INTERRUPT);"
    }
]