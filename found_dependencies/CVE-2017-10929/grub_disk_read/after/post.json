[
    {
        "line": 17,
        "fullcodeline": "real_offset = offset;"
    },
    {
        "line": 20,
        "fullcodeline": "tmp_buf = grub_malloc (GRUB_DISK_SECTOR_SIZE << GRUB_DISK_CACHE_BITS);"
    },
    {
        "line": 150,
        "fullcodeline": "grub_free (tmp_buf);"
    },
    {
        "line": 8,
        "fullcodeline": "if (grub_disk_adjust_range (disk, &sector, &offset, size) != GRUB_ERR_NONE)"
    },
    {
        "line": 21,
        "fullcodeline": "if (! tmp_buf)"
    },
    {
        "line": 10,
        "fullcodeline": "grub_error_push ();"
    },
    {
        "line": 11,
        "fullcodeline": "grub_dprintf (\"disk\", \"Read out of range: sector 0x%llx (%s).\\n\","
    },
    {
        "line": 13,
        "fullcodeline": "grub_error_pop ();"
    },
    {
        "line": 33,
        "fullcodeline": "start_sector = sector & ~(GRUB_DISK_CACHE_SIZE - 1);"
    },
    {
        "line": 34,
        "fullcodeline": "pos = (sector - start_sector) << GRUB_DISK_SECTOR_BITS;"
    },
    {
        "line": 35,
        "fullcodeline": "len = ((GRUB_DISK_SECTOR_SIZE << GRUB_DISK_CACHE_BITS)"
    },
    {
        "line": 41,
        "fullcodeline": "data = grub_disk_cache_fetch (disk->dev->id, disk->id, start_sector);"
    },
    {
        "line": 141,
        "fullcodeline": "sector = start_sector + GRUB_DISK_CACHE_SIZE;"
    },
    {
        "line": 144,
        "fullcodeline": "size -= len;"
    },
    {
        "line": 145,
        "fullcodeline": "real_offset = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "(unsigned long long) sector, grub_errmsg);"
    },
    {
        "line": 37,
        "fullcodeline": "if (len > size)"
    },
    {
        "line": 38,
        "fullcodeline": "len = size;"
    },
    {
        "line": 53,
        "fullcodeline": "grub_disk_cache_unlock (disk->dev->id, disk->id, start_sector);"
    },
    {
        "line": 122,
        "fullcodeline": "grub_disk_addr_t s = sector;"
    },
    {
        "line": 123,
        "fullcodeline": "grub_size_t l = len;"
    },
    {
        "line": 143,
        "fullcodeline": "buf = (char *) buf + len;"
    },
    {
        "line": 115,
        "fullcodeline": "grub_disk_cache_store (disk->dev->id, disk->id,"
    },
    {
        "line": 51,
        "fullcodeline": "grub_memcpy (buf, data + pos + real_offset, len);"
    },
    {
        "line": 58,
        "fullcodeline": "if (start_sector + GRUB_DISK_CACHE_SIZE > disk->total_sectors"
    },
    {
        "line": 127,
        "fullcodeline": "(disk->read_hook) (s, real_offset,"
    },
    {
        "line": 135,
        "fullcodeline": "s++;"
    },
    {
        "line": 136,
        "fullcodeline": "l -= GRUB_DISK_SECTOR_SIZE - real_offset;"
    },
    {
        "line": 137,
        "fullcodeline": "real_offset = 0;"
    },
    {
        "line": 46,
        "fullcodeline": "if (pos + real_offset + len >= size) {"
    },
    {
        "line": 59,
        "fullcodeline": "|| (disk->dev->read) (disk, start_sector,"
    },
    {
        "line": 67,
        "fullcodeline": "grub_errno = GRUB_ERR_NONE;"
    },
    {
        "line": 69,
        "fullcodeline": "num = ((size + real_offset + GRUB_DISK_SECTOR_SIZE - 1)"
    },
    {
        "line": 72,
        "fullcodeline": "p = grub_realloc (tmp_buf, num << GRUB_DISK_SECTOR_BITS);"
    },
    {
        "line": 76,
        "fullcodeline": "tmp_buf = p;"
    },
    {
        "line": 114,
        "fullcodeline": "grub_memcpy (buf, tmp_buf + pos + real_offset, len);"
    },
    {
        "line": 128,
        "fullcodeline": "((l > GRUB_DISK_SECTOR_SIZE)"
    },
    {
        "line": 132,
        "fullcodeline": "if (l < GRUB_DISK_SECTOR_SIZE - real_offset)"
    },
    {
        "line": 48,
        "fullcodeline": "grub_errno = GRUB_ERR_BAD_FS;"
    },
    {
        "line": 73,
        "fullcodeline": "if (!p)"
    },
    {
        "line": 78,
        "fullcodeline": "if ((disk->dev->read) (disk, sector, num, tmp_buf))"
    },
    {
        "line": 80,
        "fullcodeline": "grub_error_push ();"
    },
    {
        "line": 81,
        "fullcodeline": "grub_dprintf (\"disk\", \"%s read failed\\n\", disk->name);"
    },
    {
        "line": 82,
        "fullcodeline": "grub_error_pop ();"
    },
    {
        "line": 87,
        "fullcodeline": "grub_memcpy (buf, tmp_buf + real_offset, size);"
    },
    {
        "line": 95,
        "fullcodeline": "to_read = size;"
    },
    {
        "line": 98,
        "fullcodeline": "(disk->read_hook) (sector, real_offset,"
    },
    {
        "line": 103,
        "fullcodeline": "sector++;"
    },
    {
        "line": 104,
        "fullcodeline": "size -= to_read;"
    },
    {
        "line": 105,
        "fullcodeline": "real_offset = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "if (real_offset + to_read > GRUB_DISK_SECTOR_SIZE)"
    },
    {
        "line": 100,
        "fullcodeline": "if (grub_errno != GRUB_ERR_NONE)"
    },
    {
        "line": 97,
        "fullcodeline": "to_read = GRUB_DISK_SECTOR_SIZE - real_offset;"
    }
]