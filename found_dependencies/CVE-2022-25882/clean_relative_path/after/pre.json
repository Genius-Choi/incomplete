[
    {
        "line": 8,
        "fullcodeline": "char sep = k_preferred_path_separator[0];"
    },
    {
        "line": 9,
        "fullcodeline": "size_t n = path.size();"
    },
    {
        "line": 11,
        "fullcodeline": "size_t r = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "size_t dotdot = 0;"
    },
    {
        "line": 61,
        "fullcodeline": "normalize_separator(out);"
    },
    {
        "line": 2,
        "fullcodeline": "if (path.empty()) {"
    },
    {
        "line": 14,
        "fullcodeline": "while (r < n) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (out.empty()) {"
    },
    {
        "line": 57,
        "fullcodeline": "out.push_back('.');"
    },
    {
        "line": 15,
        "fullcodeline": "if (is_path_separator(path[r])) {"
    },
    {
        "line": 51,
        "fullcodeline": "for (; r < n && !is_path_separator(path[r]); r++) {"
    },
    {
        "line": 16,
        "fullcodeline": "r++;"
    },
    {
        "line": 20,
        "fullcodeline": "if (path[r] == '.' && (r + 1 == n || is_path_separator(path[r + 1]))) {"
    },
    {
        "line": 21,
        "fullcodeline": "r++;"
    },
    {
        "line": 25,
        "fullcodeline": "if (path[r] == '.' && path[r + 1] == '.' && (r + 2 == n || is_path_separator(path[r + 2]))) {"
    },
    {
        "line": 26,
        "fullcodeline": "r += 2;"
    },
    {
        "line": 47,
        "fullcodeline": "if (!out.empty() && out.back() != sep) {"
    },
    {
        "line": 48,
        "fullcodeline": "out.push_back(sep);"
    },
    {
        "line": 52,
        "fullcodeline": "out.push_back(path[r]);"
    },
    {
        "line": 28,
        "fullcodeline": "if (out.size() > dotdot) {"
    },
    {
        "line": 39,
        "fullcodeline": "out.push_back('.');"
    },
    {
        "line": 40,
        "fullcodeline": "out.push_back('.');"
    },
    {
        "line": 41,
        "fullcodeline": "dotdot = out.size();"
    },
    {
        "line": 29,
        "fullcodeline": "while (out.size() > dotdot && !is_path_separator(out.back())) {"
    },
    {
        "line": 30,
        "fullcodeline": "out.pop_back();"
    },
    {
        "line": 32,
        "fullcodeline": "if (!out.empty())"
    },
    {
        "line": 33,
        "fullcodeline": "out.pop_back();"
    },
    {
        "line": 35,
        "fullcodeline": "if (!out.empty()) {"
    },
    {
        "line": 36,
        "fullcodeline": "out.push_back(sep);"
    }
]