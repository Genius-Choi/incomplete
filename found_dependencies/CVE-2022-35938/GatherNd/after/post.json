[
    {
        "line": 7,
        "fullcodeline": "const IndicesT* index_data = tflite::micro::GetTensorData<IndicesT>(indices);"
    },
    {
        "line": 8,
        "fullcodeline": "const ParamsT* param_data = tflite::micro::GetTensorData<ParamsT>(params);"
    },
    {
        "line": 9,
        "fullcodeline": "ParamsT* output_data = tflite::micro::GetTensorData<ParamsT>(output);"
    },
    {
        "line": 11,
        "fullcodeline": "int n_slices = 1;"
    },
    {
        "line": 18,
        "fullcodeline": "int slice_size = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "int params_flat_size = ElementCount(*params->dims);"
    },
    {
        "line": 24,
        "fullcodeline": "int remain_flat_size = params_flat_size;"
    },
    {
        "line": 27,
        "fullcodeline": "int dims_to_count[MAX_INDICES_ND];"
    },
    {
        "line": 12,
        "fullcodeline": "for (int i = 0; i < indices_dims - 1; ++i) {"
    },
    {
        "line": 19,
        "fullcodeline": "for (int i = indices_nd; i < params_dims; ++i) {"
    },
    {
        "line": 28,
        "fullcodeline": "for (int i = 0; i < indices_nd; ++i) {"
    },
    {
        "line": 33,
        "fullcodeline": "for (int i = 0; i < n_slices; ++i) {"
    },
    {
        "line": 5,
        "fullcodeline": "const int indices_nd = indices->dims->data[indices_dims - 1];"
    },
    {
        "line": 13,
        "fullcodeline": "n_slices *= indices->dims->data[i];"
    },
    {
        "line": 20,
        "fullcodeline": "slice_size *= params->dims->data[i];"
    },
    {
        "line": 29,
        "fullcodeline": "dims_to_count[i] = remain_flat_size / params->dims->data[i];"
    },
    {
        "line": 30,
        "fullcodeline": "remain_flat_size = dims_to_count[i];"
    },
    {
        "line": 34,
        "fullcodeline": "int from_pos = 0;"
    },
    {
        "line": 43,
        "fullcodeline": "std::memcpy(output_data + i * slice_size, param_data + from_pos,"
    },
    {
        "line": 35,
        "fullcodeline": "for (int j = 0; j < indices_nd; ++j) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (from_pos < 0 || from_pos + slice_size > params_flat_size) {"
    },
    {
        "line": 44,
        "fullcodeline": "sizeof(ParamsT) * slice_size);"
    },
    {
        "line": 36,
        "fullcodeline": "int offset = i * indices_nd + j;"
    },
    {
        "line": 37,
        "fullcodeline": "IndicesT index = index_data[offset];"
    },
    {
        "line": 38,
        "fullcodeline": "from_pos += index * dims_to_count[j];"
    }
]