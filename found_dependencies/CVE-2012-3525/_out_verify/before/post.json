[
    {
        "line": 8,
        "fullcodeline": "attr = nad_find_attr(nad, 0, -1, \"from\", NULL);"
    },
    {
        "line": 15,
        "fullcodeline": "attr = nad_find_attr(nad, 0, -1, \"to\", NULL);"
    },
    {
        "line": 23,
        "fullcodeline": "attr = nad_find_attr(nad, 0, -1, \"id\", NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "in = xhash_getx(out->s2s->in, NAD_AVAL(nad, attr), NAD_AVAL_L(nad, attr));"
    },
    {
        "line": 42,
        "fullcodeline": "rkey = s2s_route_key(NULL, to->domain, from->domain);"
    },
    {
        "line": 44,
        "fullcodeline": "attr = nad_find_attr(nad, 0, -1, \"type\", \"valid\");"
    },
    {
        "line": 54,
        "fullcodeline": "free(rkey);"
    },
    {
        "line": 56,
        "fullcodeline": "nad_free(nad);"
    },
    {
        "line": 59,
        "fullcodeline": "--out->verify;"
    },
    {
        "line": 62,
        "fullcodeline": "nad = nad_new();"
    },
    {
        "line": 64,
        "fullcodeline": "ns = nad_add_namespace(nad, uri_DIALBACK, \"db\");"
    },
    {
        "line": 65,
        "fullcodeline": "nad_append_elem(nad, ns, \"result\", 0);"
    },
    {
        "line": 66,
        "fullcodeline": "nad_append_attr(nad, -1, \"to\", from->domain);"
    },
    {
        "line": 67,
        "fullcodeline": "nad_append_attr(nad, -1, \"from\", to->domain);"
    },
    {
        "line": 68,
        "fullcodeline": "nad_append_attr(nad, -1, \"type\", valid ? \"valid\" : \"invalid\");"
    },
    {
        "line": 71,
        "fullcodeline": "sx_nad_write(in->s, nad);"
    },
    {
        "line": 82,
        "fullcodeline": "jid_free(from);"
    },
    {
        "line": 83,
        "fullcodeline": "jid_free(to);"
    },
    {
        "line": 9,
        "fullcodeline": "if(attr < 0 || (from = jid_new(NAD_AVAL(nad, attr), NAD_AVAL_L(nad, attr))) == NULL) {"
    },
    {
        "line": 16,
        "fullcodeline": "if(attr < 0 || (to = jid_new(NAD_AVAL(nad, attr), NAD_AVAL_L(nad, attr))) == NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "if(attr < 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "if(in == NULL) {"
    },
    {
        "line": 45,
        "fullcodeline": "if(attr >= 0) {"
    },
    {
        "line": 74,
        "fullcodeline": "if (!valid) {"
    },
    {
        "line": 10,
        "fullcodeline": "log_debug(ZONE, \"missing or invalid from on db verify packet\");"
    },
    {
        "line": 11,
        "fullcodeline": "nad_free(nad);"
    },
    {
        "line": 17,
        "fullcodeline": "log_debug(ZONE, \"missing or invalid to on db verify packet\");"
    },
    {
        "line": 18,
        "fullcodeline": "jid_free(from);"
    },
    {
        "line": 19,
        "fullcodeline": "nad_free(nad);"
    },
    {
        "line": 25,
        "fullcodeline": "log_debug(ZONE, \"missing id on db verify packet\");"
    },
    {
        "line": 26,
        "fullcodeline": "jid_free(from);"
    },
    {
        "line": 27,
        "fullcodeline": "jid_free(to);"
    },
    {
        "line": 28,
        "fullcodeline": "nad_free(nad);"
    },
    {
        "line": 35,
        "fullcodeline": "log_debug(ZONE, \"got a verify for incoming conn %.*s, but it doesn't exist, dropping the packet\", NAD_AVAL_L(nad, attr), NAD_AVAL(nad, attr));"
    },
    {
        "line": 36,
        "fullcodeline": "jid_free(from);"
    },
    {
        "line": 37,
        "fullcodeline": "jid_free(to);"
    },
    {
        "line": 38,
        "fullcodeline": "nad_free(nad);"
    },
    {
        "line": 46,
        "fullcodeline": "xhash_put(in->states, pstrdup(xhash_pool(in->states), rkey), (void *) conn_VALID);"
    },
    {
        "line": 47,
        "fullcodeline": "log_write(in->s2s->log, LOG_NOTICE, \"[%d] [%s, port=%d] incoming route '%s' is now valid%s%s\", in->fd->fd, in->ip, in->port, rkey, (in->s->flags & SX_SSL_WRAPPER) ? \", TLS negotiated\" : \"\", in->s->compressed ? \", ZLIB compression enabled\" : \"\");"
    },
    {
        "line": 48,
        "fullcodeline": "valid = 1;"
    },
    {
        "line": 76,
        "fullcodeline": "sx_error(in->s, stream_err_INVALID_ID, \"dialback negotiation failed\");"
    },
    {
        "line": 79,
        "fullcodeline": "sx_close(in->s);"
    },
    {
        "line": 50,
        "fullcodeline": "log_write(in->s2s->log, LOG_NOTICE, \"[%d] [%s, port=%d] incoming route '%s' is now invalid\", in->fd->fd, in->ip, in->port, rkey);"
    },
    {
        "line": 51,
        "fullcodeline": "valid = 0;"
    }
]