[
    {
        "line": 3,
        "fullcodeline": "uint32_t ret = 0xFF000000;"
    },
    {
        "line": 5,
        "fullcodeline": "char color_name[100];"
    },
    {
        "line": 7,
        "fullcodeline": "len = FFMIN(FFMAX(len, 0), sizeof(color_name) - 1);"
    },
    {
        "line": 9,
        "fullcodeline": "if (*p == '#') {"
    },
    {
        "line": 10,
        "fullcodeline": "p++;"
    },
    {
        "line": 11,
        "fullcodeline": "len--;"
    },
    {
        "line": 12,
        "fullcodeline": "if (len == 3) {"
    },
    {
        "line": 39,
        "fullcodeline": "strncpy(color_name, p, len);"
    },
    {
        "line": 40,
        "fullcodeline": "color_name[len] = '\\0';"
    },
    {
        "line": 42,
        "fullcodeline": "entry = bsearch(color_name,"
    },
    {
        "line": 51,
        "fullcodeline": "ret = entry->rgb_color;"
    },
    {
        "line": 13,
        "fullcodeline": "ret |= (hex_char_to_number(p[2]) <<  4) |"
    },
    {
        "line": 48,
        "fullcodeline": "if (!entry)"
    },
    {
        "line": 44,
        "fullcodeline": "FF_ARRAY_ELEMS(color_table),"
    },
    {
        "line": 45,
        "fullcodeline": "sizeof(ColorEntry),"
    },
    {
        "line": 15,
        "fullcodeline": "(hex_char_to_number(p[0]) << 20);"
    },
    {
        "line": 16,
        "fullcodeline": "} else if (len == 4) {"
    },
    {
        "line": 14,
        "fullcodeline": "(hex_char_to_number(p[1]) << 12) |"
    },
    {
        "line": 17,
        "fullcodeline": "ret  = (hex_char_to_number(p[3]) <<  4) |"
    },
    {
        "line": 20,
        "fullcodeline": "(hex_char_to_number(p[0]) << 28);"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (len == 6) {"
    },
    {
        "line": 19,
        "fullcodeline": "(hex_char_to_number(p[1]) << 20) |"
    },
    {
        "line": 22,
        "fullcodeline": "ret |=  hex_char_to_number(p[5])        |"
    },
    {
        "line": 18,
        "fullcodeline": "(hex_char_to_number(p[2]) << 12) |"
    },
    {
        "line": 27,
        "fullcodeline": "(hex_char_to_number(p[0]) << 20);"
    },
    {
        "line": 26,
        "fullcodeline": "(hex_char_to_number(p[1]) << 16) |"
    },
    {
        "line": 29,
        "fullcodeline": "ret  =  hex_char_to_number(p[7])        |"
    },
    {
        "line": 25,
        "fullcodeline": "(hex_char_to_number(p[2]) << 12) |"
    },
    {
        "line": 24,
        "fullcodeline": "(hex_char_to_number(p[3]) <<  8) |"
    },
    {
        "line": 36,
        "fullcodeline": "(hex_char_to_number(p[0]) << 28);"
    },
    {
        "line": 23,
        "fullcodeline": "(hex_char_to_number(p[4]) <<  4) |"
    },
    {
        "line": 35,
        "fullcodeline": "(hex_char_to_number(p[1]) << 24) |"
    },
    {
        "line": 34,
        "fullcodeline": "(hex_char_to_number(p[2]) << 20) |"
    },
    {
        "line": 33,
        "fullcodeline": "(hex_char_to_number(p[3]) << 16) |"
    },
    {
        "line": 32,
        "fullcodeline": "(hex_char_to_number(p[4]) << 12) |"
    },
    {
        "line": 31,
        "fullcodeline": "(hex_char_to_number(p[5]) <<  8) |"
    },
    {
        "line": 30,
        "fullcodeline": "(hex_char_to_number(p[6]) <<  4) |"
    }
]