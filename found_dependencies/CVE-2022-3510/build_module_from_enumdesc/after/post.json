[
    {
        "line": 2,
        "fullcodeline": "const upb_EnumDef* e = EnumDescriptor_GetEnumDef(_enumdesc);"
    },
    {
        "line": 3,
        "fullcodeline": "VALUE mod = rb_define_module_id(rb_intern(upb_EnumDef_FullName(e)));"
    },
    {
        "line": 5,
        "fullcodeline": "int n = upb_EnumDef_ValueCount(e);"
    },
    {
        "line": 24,
        "fullcodeline": "rb_define_singleton_method(mod, \"lookup\", enum_lookup, 1);"
    },
    {
        "line": 25,
        "fullcodeline": "rb_define_singleton_method(mod, \"resolve\", enum_resolve, 1);"
    },
    {
        "line": 26,
        "fullcodeline": "rb_define_singleton_method(mod, \"descriptor\", enum_descriptor, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "rb_ivar_set(mod, descriptor_instancevar_interned, _enumdesc);"
    },
    {
        "line": 6,
        "fullcodeline": "for (int i = 0; i < n; i++) {"
    },
    {
        "line": 7,
        "fullcodeline": "const upb_EnumValueDef* ev = upb_EnumDef_Value(e, i);"
    },
    {
        "line": 8,
        "fullcodeline": "char* name = strdup(upb_EnumValueDef_Name(ev));"
    },
    {
        "line": 9,
        "fullcodeline": "int32_t value = upb_EnumValueDef_Number(ev);"
    },
    {
        "line": 20,
        "fullcodeline": "rb_define_const(mod, name, INT2NUM(value));"
    },
    {
        "line": 21,
        "fullcodeline": "free(name);"
    },
    {
        "line": 10,
        "fullcodeline": "if (name[0] < 'A' || name[0] > 'Z') {"
    },
    {
        "line": 11,
        "fullcodeline": "if (name[0] >= 'a' && name[0] <= 'z') {"
    },
    {
        "line": 12,
        "fullcodeline": "name[0] -= 32; // auto capitalize"
    },
    {
        "line": 14,
        "fullcodeline": "rb_warn("
    }
]