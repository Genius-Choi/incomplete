[
    {
        "line": 2,
        "fullcodeline": "m = Google::Protobuf::Map.new(:string, :message, TestMessage)"
    },
    {
        "line": 3,
        "fullcodeline": "m[\"asdf\"] = TestMessage.new"
    },
    {
        "line": 4,
        "fullcodeline": "success = false"
    },
    {
        "line": 10,
        "fullcodeline": "assert(success)"
    },
    {
        "line": 12,
        "fullcodeline": "m = Google::Protobuf::Map.new("
    },
    {
        "line": 16,
        "fullcodeline": "assert m.length == 2"
    },
    {
        "line": 17,
        "fullcodeline": "assert m.values.map{|msg| msg.optional_int32}.sort == [42, 84]"
    },
    {
        "line": 19,
        "fullcodeline": "m = Google::Protobuf::Map.new(:string, :enum, TestEnum,"
    },
    {
        "line": 21,
        "fullcodeline": "assert m.length == 3"
    },
    {
        "line": 22,
        "fullcodeline": "assert m[\"z\"] == :C"
    },
    {
        "line": 23,
        "fullcodeline": "m[\"z\"] = 2"
    },
    {
        "line": 24,
        "fullcodeline": "assert m[\"z\"] == :B"
    },
    {
        "line": 25,
        "fullcodeline": "m[\"z\"] = 4"
    },
    {
        "line": 26,
        "fullcodeline": "assert m[\"z\"] == 4"
    },
    {
        "line": 27,
        "fullcodeline": "assert_raise RangeError do"
    },
    {
        "line": 30,
        "fullcodeline": "assert_raise RangeError do"
    },
    {
        "line": 6,
        "fullcodeline": "m[\"jkl;\"] = TestMessage2.new"
    },
    {
        "line": 8,
        "fullcodeline": "success = true"
    },
    {
        "line": 14,
        "fullcodeline": "{ \"a\" => TestMessage.new(:optional_int32 => 42),"
    },
    {
        "line": 15,
        "fullcodeline": "\"b\" => TestMessage.new(:optional_int32 => 84) })"
    },
    {
        "line": 20,
        "fullcodeline": "{ \"x\" => :A, \"y\" => :B, \"z\" => :C })"
    }
]