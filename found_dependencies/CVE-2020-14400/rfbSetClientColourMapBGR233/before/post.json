[
    {
        "line": 3,
        "fullcodeline": "char buf[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];"
    },
    {
        "line": 4,
        "fullcodeline": "rfbSetColourMapEntriesMsg *scme = (rfbSetColourMapEntriesMsg *)buf;"
    },
    {
        "line": 5,
        "fullcodeline": "uint16_t *rgb = (uint16_t *)(&buf[sz_rfbSetColourMapEntriesMsg]);"
    },
    {
        "line": 16,
        "fullcodeline": "scme->type = rfbSetColourMapEntries;"
    },
    {
        "line": 18,
        "fullcodeline": "scme->firstColour = Swap16IfLE(0);"
    },
    {
        "line": 19,
        "fullcodeline": "scme->nColours = Swap16IfLE(256);"
    },
    {
        "line": 21,
        "fullcodeline": "len = sz_rfbSetColourMapEntriesMsg;"
    },
    {
        "line": 23,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "len += 256 * 3 * 2;"
    },
    {
        "line": 9,
        "fullcodeline": "if (cl->format.bitsPerPixel != 8 ) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (b = 0; b < 4; b++) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (rfbWriteExact(cl, buf, len) < 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "rfbErr(\"%s: client not 8 bits per pixel\\n\","
    },
    {
        "line": 12,
        "fullcodeline": "rfbCloseClient(cl);"
    },
    {
        "line": 38,
        "fullcodeline": "rfbLogPerror(\"rfbSetClientColourMapBGR233: write\");"
    },
    {
        "line": 39,
        "fullcodeline": "rfbCloseClient(cl);"
    },
    {
        "line": 26,
        "fullcodeline": "for (g = 0; g < 8; g++) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (r = 0; r < 8; r++) {"
    },
    {
        "line": 28,
        "fullcodeline": "rgb[i++] = Swap16IfLE(r * 65535 / 7);"
    },
    {
        "line": 29,
        "fullcodeline": "rgb[i++] = Swap16IfLE(g * 65535 / 7);"
    },
    {
        "line": 30,
        "fullcodeline": "rgb[i++] = Swap16IfLE(b * 65535 / 3);"
    }
]