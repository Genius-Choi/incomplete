[
    {
        "line": 3,
        "fullcodeline": "bool did_match_rule = false;"
    },
    {
        "line": 4,
        "fullcodeline": "bool did_match_exception = false;"
    },
    {
        "line": 5,
        "fullcodeline": "bool did_match_important = false;"
    },
    {
        "line": 9,
        "fullcodeline": "std::string source_host = ctx->initiator_url.host();"
    },
    {
        "line": 11,
        "fullcodeline": "g_brave_browser_process->ad_block_service()->ShouldStartRequest("
    },
    {
        "line": 6,
        "fullcodeline": "if (!ctx->initiator_url.is_valid()) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (canonical_name.has_value() && ctx->request_url.host() != *canonical_name"
    },
    {
        "line": 21,
        "fullcodeline": "&& *canonical_name != \"\") {"
    },
    {
        "line": 22,
        "fullcodeline": "GURL::Replacements replacements = GURL::Replacements();"
    },
    {
        "line": 23,
        "fullcodeline": "replacements.SetHost("
    },
    {
        "line": 28,
        "fullcodeline": "g_brave_browser_process->ad_block_service()->ShouldStartRequest("
    },
    {
        "line": 34,
        "fullcodeline": "if (did_match_important || (did_match_rule && !did_match_exception)) {"
    },
    {
        "line": 24,
        "fullcodeline": "canonical_name->c_str(),"
    },
    {
        "line": 25,
        "fullcodeline": "url::Component(0, static_cast<int>(canonical_name->length())));"
    },
    {
        "line": 26,
        "fullcodeline": "const GURL canonical_url = ctx->request_url.ReplaceComponents(replacements);"
    }
]