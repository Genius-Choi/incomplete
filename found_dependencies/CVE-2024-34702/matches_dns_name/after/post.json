[
    {
        "line": 6,
        "fullcodeline": "bool is_ipv4 = false;"
    },
    {
        "line": 14,
        "fullcodeline": "std::vector<std::string> issued_names;"
    },
    {
        "line": 3,
        "fullcodeline": "if(name.empty())"
    },
    {
        "line": 16,
        "fullcodeline": "if(subject_alt_name().has_items()) {"
    },
    {
        "line": 23,
        "fullcodeline": "for(size_t i = 0; i != issued_names.size(); ++i)"
    },
    {
        "line": 9,
        "fullcodeline": "string_to_ipv4(name);"
    },
    {
        "line": 10,
        "fullcodeline": "is_ipv4 = true;"
    },
    {
        "line": 17,
        "fullcodeline": "issued_names = subject_alt_name().get_attribute(is_ipv4 ? \"IP\" : \"DNS\");"
    },
    {
        "line": 18,
        "fullcodeline": "} else if(is_ipv4 == false) {"
    },
    {
        "line": 20,
        "fullcodeline": "issued_names = subject_info(\"Name\");"
    },
    {
        "line": 27,
        "fullcodeline": "if(issued_names[i] == name)"
    },
    {
        "line": 32,
        "fullcodeline": "if(host_wildcard_match(issued_names[i], name))"
    }
]