[
    {
        "line": 3,
        "fullcodeline": "const std::string constraint = tolower_string(name());"
    },
    {
        "line": 4,
        "fullcodeline": "const std::string issued = tolower_string(nam);"
    },
    {
        "line": 6,
        "fullcodeline": "if(nam.size() == constraint.size())"
    },
    {
        "line": 8,
        "fullcodeline": "return issued == constraint;"
    },
    {
        "line": 10,
        "fullcodeline": "else if(constraint.size() > nam.size())"
    },
    {
        "line": 21,
        "fullcodeline": "std::string substr = issued.substr(nam.size() - constraint.size(), constraint.size());"
    },
    {
        "line": 17,
        "fullcodeline": "if(constraint.empty()) {"
    },
    {
        "line": 23,
        "fullcodeline": "if(constraint.front() == '.') {"
    },
    {
        "line": 24,
        "fullcodeline": "return substr == constraint;"
    },
    {
        "line": 25,
        "fullcodeline": "} else if(substr[0] == '.') {"
    },
    {
        "line": 26,
        "fullcodeline": "return substr.substr(1) == constraint;"
    },
    {
        "line": 28,
        "fullcodeline": "return substr == constraint && issued[issued.size() - constraint.size() - 1] == '.';"
    }
]