[
    {
        "line": 2,
        "fullcodeline": "const char *help[] = {"
    },
    {
        "line": 10,
        "fullcodeline": "stream *s = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "sds grpname = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "streamCG *cg = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "if (c->argc >= 4) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (!strcasecmp(opt,\"CREATE\") && c->argc == 5) {"
    },
    {
        "line": 17,
        "fullcodeline": "robj *o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr);"
    },
    {
        "line": 19,
        "fullcodeline": "s = o->ptr;"
    },
    {
        "line": 42,
        "fullcodeline": "streamCG *cg = streamCreateCG(s,grpname,sdslen(grpname),&id);"
    },
    {
        "line": 18,
        "fullcodeline": "if (o == NULL || checkType(c,o,OBJ_STREAM)) return;"
    },
    {
        "line": 23,
        "fullcodeline": "if ((cg = streamLookupCG(s,grpname)) == NULL &&"
    },
    {
        "line": 37,
        "fullcodeline": "if (!strcmp(c->argv[4]->ptr,\"$\")) {"
    },
    {
        "line": 24,
        "fullcodeline": "(!strcasecmp(opt,\"SETID\") ||"
    },
    {
        "line": 27,
        "fullcodeline": "addReplyErrorFormat(c, \"-NOGROUP No such consumer group '%s' \""
    },
    {
        "line": 38,
        "fullcodeline": "id = s->last_id;"
    },
    {
        "line": 44,
        "fullcodeline": "addReply(c,shared.ok);"
    },
    {
        "line": 50,
        "fullcodeline": "} else if (!strcasecmp(opt,\"SETID\") && c->argc == 5) {"
    },
    {
        "line": 25,
        "fullcodeline": "!strcasecmp(opt,\"DELCONSUMER\")))"
    },
    {
        "line": 29,
        "fullcodeline": "(char*)grpname, (char*)c->argv[2]->ptr);"
    },
    {
        "line": 47,
        "fullcodeline": "addReplySds(c,"
    },
    {
        "line": 57,
        "fullcodeline": "cg->last_id = id;"
    },
    {
        "line": 58,
        "fullcodeline": "addReply(c,shared.ok);"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK) {"
    },
    {
        "line": 48,
        "fullcodeline": "sdsnew(\"-BUSYGROUP Consumer Group name already exists\\r\\n\"));"
    },
    {
        "line": 52,
        "fullcodeline": "if (!strcmp(c->argv[4]->ptr,\"$\")) {"
    },
    {
        "line": 53,
        "fullcodeline": "id = s->last_id;"
    },
    {
        "line": 59,
        "fullcodeline": "} else if (!strcasecmp(opt,\"DESTROY\") && c->argc == 4) {"
    },
    {
        "line": 54,
        "fullcodeline": "} else if (streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK) {"
    },
    {
        "line": 61,
        "fullcodeline": "raxRemove(s->cgroups,(unsigned char*)grpname,sdslen(grpname),NULL);"
    },
    {
        "line": 62,
        "fullcodeline": "streamFreeCG(cg);"
    },
    {
        "line": 63,
        "fullcodeline": "addReply(c,shared.cone);"
    },
    {
        "line": 67,
        "fullcodeline": "} else if (!strcasecmp(opt,\"DELCONSUMER\") && c->argc == 5) {"
    },
    {
        "line": 65,
        "fullcodeline": "addReply(c,shared.czero);"
    },
    {
        "line": 70,
        "fullcodeline": "long long pending = streamDelConsumer(cg,c->argv[4]->ptr);"
    },
    {
        "line": 71,
        "fullcodeline": "addReplyLongLong(c,pending);"
    },
    {
        "line": 73,
        "fullcodeline": "} else if (!strcasecmp(opt,\"HELP\")) {"
    },
    {
        "line": 74,
        "fullcodeline": "addReplyHelp(c, help);"
    },
    {
        "line": 76,
        "fullcodeline": "addReply(c,shared.syntaxerr);"
    }
]