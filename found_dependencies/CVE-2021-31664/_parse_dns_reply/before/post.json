[
    {
        "line": 3,
        "fullcodeline": "const uint8_t *buflim = buf + len;"
    },
    {
        "line": 4,
        "fullcodeline": "sock_dns_hdr_t *hdr = (sock_dns_hdr_t*) buf;"
    },
    {
        "line": 5,
        "fullcodeline": "uint8_t *bufpos = buf + sizeof(*hdr);"
    },
    {
        "line": 8,
        "fullcodeline": "for (unsigned n = 0; n < ntohs(hdr->qdcount); n++) {"
    },
    {
        "line": 18,
        "fullcodeline": "for (unsigned n = 0; n < ntohs(hdr->ancount); n++) {"
    },
    {
        "line": 64,
        "fullcodeline": "return -1;"
    },
    {
        "line": 9,
        "fullcodeline": "ssize_t tmp = _skip_hostname(buf, len, bufpos);"
    },
    {
        "line": 13,
        "fullcodeline": "bufpos += tmp;"
    },
    {
        "line": 15,
        "fullcodeline": "bufpos += (RR_TYPE_LENGTH + RR_CLASS_LENGTH);"
    },
    {
        "line": 19,
        "fullcodeline": "ssize_t tmp = _skip_hostname(buf, len, bufpos);"
    },
    {
        "line": 23,
        "fullcodeline": "bufpos += tmp;"
    },
    {
        "line": 27,
        "fullcodeline": "uint16_t _type = ntohs(_get_short(bufpos));"
    },
    {
        "line": 28,
        "fullcodeline": "bufpos += RR_TYPE_LENGTH;"
    },
    {
        "line": 29,
        "fullcodeline": "uint16_t class = ntohs(_get_short(bufpos));"
    },
    {
        "line": 30,
        "fullcodeline": "bufpos += RR_CLASS_LENGTH;"
    },
    {
        "line": 31,
        "fullcodeline": "bufpos += RR_TTL_LENGTH; /* skip ttl */"
    },
    {
        "line": 33,
        "fullcodeline": "unsigned addrlen = ntohs(_get_short(bufpos));"
    },
    {
        "line": 55,
        "fullcodeline": "bufpos += RR_RDLENGTH_LENGTH;"
    },
    {
        "line": 60,
        "fullcodeline": "memcpy(addr_out, bufpos, addrlen);"
    },
    {
        "line": 10,
        "fullcodeline": "if (tmp < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (tmp < 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "if ((bufpos + RR_TYPE_LENGTH + RR_CLASS_LENGTH + RR_TTL_LENGTH) >= buflim) {"
    },
    {
        "line": 35,
        "fullcodeline": "if ((class != DNS_CLASS_IN) ||"
    },
    {
        "line": 49,
        "fullcodeline": "if (((addrlen != INADDRSZ) && (family == AF_INET)) ||"
    },
    {
        "line": 56,
        "fullcodeline": "if ((bufpos + addrlen) > buflim) {"
    },
    {
        "line": 38,
        "fullcodeline": "! ((_type == DNS_TYPE_A) || ((_type == DNS_TYPE_AAAA))"
    },
    {
        "line": 44,
        "fullcodeline": "bufpos += addrlen;"
    },
    {
        "line": 51,
        "fullcodeline": "((addrlen != IN6ADDRSZ) && (addrlen != INADDRSZ) &&"
    },
    {
        "line": 25,
        "fullcodeline": "return -EBADMSG;"
    },
    {
        "line": 37,
        "fullcodeline": "((_type == DNS_TYPE_AAAA) && (family == AF_INET)) ||"
    },
    {
        "line": 40,
        "fullcodeline": "if (addrlen > len) {"
    },
    {
        "line": 50,
        "fullcodeline": "((addrlen != IN6ADDRSZ) && (family == AF_INET6)) ||"
    },
    {
        "line": 52,
        "fullcodeline": "(family == AF_UNSPEC))) {"
    },
    {
        "line": 53,
        "fullcodeline": "return -EBADMSG;"
    },
    {
        "line": 57,
        "fullcodeline": "return -EBADMSG;"
    },
    {
        "line": 36,
        "fullcodeline": "((_type == DNS_TYPE_A) && (family == AF_INET6)) ||"
    },
    {
        "line": 42,
        "fullcodeline": "return -EBADMSG;"
    }
]