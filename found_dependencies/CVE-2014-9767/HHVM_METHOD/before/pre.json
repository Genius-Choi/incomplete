[
    {
        "line": 3,
        "fullcodeline": "auto zipDir = getResource<ZipDirectory>(this_, \"zipDir\");"
    },
    {
        "line": 5,
        "fullcodeline": "FAIL_IF_INVALID_ZIPARCHIVE(extractTo, zipDir);"
    },
    {
        "line": 6,
        "fullcodeline": "FAIL_IF_EMPTY_STRING_ZIPARCHIVE(extractTo, destination);"
    },
    {
        "line": 8,
        "fullcodeline": "auto fileCount = zip_get_num_files(zipDir->getZip());"
    },
    {
        "line": 24,
        "fullcodeline": "auto toSize = to.size();"
    },
    {
        "line": 9,
        "fullcodeline": "if (fileCount == -1) {"
    },
    {
        "line": 14,
        "fullcodeline": "std::string to(destination.c_str());"
    },
    {
        "line": 15,
        "fullcodeline": "if (to[to.size() - 1] != '/') {"
    },
    {
        "line": 23,
        "fullcodeline": "char buf[1024];"
    },
    {
        "line": 26,
        "fullcodeline": "if (entries.isString()) {"
    },
    {
        "line": 54,
        "fullcodeline": "zip_error_clear(zipDir->getZip());"
    },
    {
        "line": 10,
        "fullcodeline": "raise_warning(\"Illegal archive\");"
    },
    {
        "line": 16,
        "fullcodeline": "to.push_back('/');"
    },
    {
        "line": 19,
        "fullcodeline": "if (!HHVM_FN(is_dir)(to) && !HHVM_FN(mkdir)(to)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (!extractFileTo(zipDir->getZip(), entries.asCStrRef().c_str(),"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (entries.isArray() && entries.asCArrRef().size() != 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "for (ArrayIter it(entries.asCArrRef()); it; ++it) {"
    },
    {
        "line": 35,
        "fullcodeline": "auto var = it.second();"
    },
    {
        "line": 41,
        "fullcodeline": "to.resize(toSize);"
    },
    {
        "line": 45,
        "fullcodeline": "for (decltype(fileCount) index = 0; index < fileCount; ++index) {"
    },
    {
        "line": 46,
        "fullcodeline": "auto file = zip_get_name(zipDir->getZip(), index, ZIP_FL_UNCHANGED);"
    },
    {
        "line": 50,
        "fullcodeline": "to.resize(toSize);"
    },
    {
        "line": 36,
        "fullcodeline": "if (!var.isString() || !extractFileTo(zipDir->getZip(),"
    },
    {
        "line": 47,
        "fullcodeline": "if (!extractFileTo(zipDir->getZip(), file, to, buf, sizeof(buf))) {"
    },
    {
        "line": 37,
        "fullcodeline": "var.asCStrRef().c_str(),"
    }
]