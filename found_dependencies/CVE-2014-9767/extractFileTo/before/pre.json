[
    {
        "line": 3,
        "fullcodeline": "auto sep = file.rfind('/');"
    },
    {
        "line": 15,
        "fullcodeline": "to.append(file);"
    },
    {
        "line": 21,
        "fullcodeline": "auto zipFile = zip_fopen_index(zip, zipStat.index, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "FAIL_IF_INVALID_PTR(zipFile);"
    },
    {
        "line": 24,
        "fullcodeline": "auto outFile = fopen(to.c_str(), \"wb\");"
    },
    {
        "line": 4,
        "fullcodeline": "if (sep != std::string::npos) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (outFile == nullptr) {"
    },
    {
        "line": 30,
        "fullcodeline": "for (auto n = zip_fread(zipFile, buf, len); n != 0;"
    },
    {
        "line": 31,
        "fullcodeline": "n = zip_fread(zipFile, buf, len)) {"
    },
    {
        "line": 5,
        "fullcodeline": "auto path = to + file.substr(0, sep);"
    },
    {
        "line": 17,
        "fullcodeline": "if (zip_stat(zip, file.c_str(), 0, &zipStat) != 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (fclose(outFile) != 0) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (!HHVM_FN(is_dir)(path) && !HHVM_FN(mkdir)(path, 0777, true)) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (sep == file.length() - 1) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (n < 0 || fwrite(buf, sizeof(char), n, outFile) != n) {"
    },
    {
        "line": 35,
        "fullcodeline": "remove(to.c_str());"
    }
]