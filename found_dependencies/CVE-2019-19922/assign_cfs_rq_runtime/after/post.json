[
    {
        "line": 3,
        "fullcodeline": "struct task_group *tg = cfs_rq->tg;"
    },
    {
        "line": 4,
        "fullcodeline": "struct cfs_bandwidth *cfs_b = tg_cfs_bandwidth(tg);"
    },
    {
        "line": 5,
        "fullcodeline": "u64 amount = 0, min_amount;"
    },
    {
        "line": 8,
        "fullcodeline": "min_amount = sched_cfs_bandwidth_slice() - cfs_rq->runtime_remaining;"
    },
    {
        "line": 10,
        "fullcodeline": "raw_spin_lock(&cfs_b->lock);"
    },
    {
        "line": 22,
        "fullcodeline": "raw_spin_unlock(&cfs_b->lock);"
    },
    {
        "line": 24,
        "fullcodeline": "cfs_rq->runtime_remaining += amount;"
    },
    {
        "line": 11,
        "fullcodeline": "if (cfs_b->quota == RUNTIME_INF)"
    },
    {
        "line": 26,
        "fullcodeline": "return cfs_rq->runtime_remaining > 0;"
    },
    {
        "line": 12,
        "fullcodeline": "amount = min_amount;"
    },
    {
        "line": 14,
        "fullcodeline": "start_cfs_bandwidth(cfs_b);"
    },
    {
        "line": 16,
        "fullcodeline": "if (cfs_b->runtime > 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "amount = min(cfs_b->runtime, min_amount);"
    },
    {
        "line": 18,
        "fullcodeline": "cfs_b->runtime -= amount;"
    },
    {
        "line": 19,
        "fullcodeline": "cfs_b->idle = 0;"
    }
]