[
    {
        "line": 11,
        "fullcodeline": "number_extensionss=0;"
    },
    {
        "line": 43,
        "fullcodeline": "buffer[257];"
    },
    {
        "line": 48,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 49,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 53,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 54,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 55,
        "fullcodeline": "image=AcquireImage(image_info,exception);"
    },
    {
        "line": 56,
        "fullcodeline": "status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);"
    },
    {
        "line": 65,
        "fullcodeline": "count=ReadBlob(image,6,buffer);"
    },
    {
        "line": 69,
        "fullcodeline": "page.width=ReadBlobLSBShort(image);"
    },
    {
        "line": 70,
        "fullcodeline": "page.height=ReadBlobLSBShort(image);"
    },
    {
        "line": 71,
        "fullcodeline": "flag=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 72,
        "fullcodeline": "background=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 73,
        "fullcodeline": "c=(unsigned char) ReadBlobByte(image);  /* reserved */"
    },
    {
        "line": 74,
        "fullcodeline": "one=1;"
    },
    {
        "line": 75,
        "fullcodeline": "global_colors=one << (((size_t) flag & 0x07)+1);"
    },
    {
        "line": 76,
        "fullcodeline": "global_colormap=(unsigned char *) AcquireQuantumMemory((size_t)"
    },
    {
        "line": 92,
        "fullcodeline": "delay=0;"
    },
    {
        "line": 93,
        "fullcodeline": "dispose=0;"
    },
    {
        "line": 94,
        "fullcodeline": "duration=0;"
    },
    {
        "line": 95,
        "fullcodeline": "iterations=1;"
    },
    {
        "line": 96,
        "fullcodeline": "opacity=(-1);"
    },
    {
        "line": 97,
        "fullcodeline": "image_count=0;"
    },
    {
        "line": 98,
        "fullcodeline": "meta_image=AcquireImage(image_info,exception);  /* metadata container */"
    },
    {
        "line": 441,
        "fullcodeline": "image->duration=duration;"
    },
    {
        "line": 50,
        "fullcodeline": "if (image_info->debug != MagickFalse)"
    },
    {
        "line": 57,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 78,
        "fullcodeline": "if (global_colormap == (unsigned char *) NULL)"
    },
    {
        "line": 80,
        "fullcodeline": "(void) ResetMagickMemory(global_colormap,0,3*MagickMax(global_colors,256)*"
    },
    {
        "line": 442,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 446,
        "fullcodeline": "(void) CloseBlob(image);"
    },
    {
        "line": 447,
        "fullcodeline": "return(GetFirstImageInList(image));"
    },
    {
        "line": 51,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\","
    },
    {
        "line": 59,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 66,
        "fullcodeline": "if ((count != 6) || ((LocaleNCompare((char *) buffer,\"GIF87\",5) != 0) &&"
    },
    {
        "line": 68,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 79,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 82,
        "fullcodeline": "if (BitSet((int) flag,0x80) != 0)"
    },
    {
        "line": 84,
        "fullcodeline": "count=ReadBlob(image,(size_t) (3*global_colors),global_colormap);"
    },
    {
        "line": 101,
        "fullcodeline": "count=ReadBlob(image,1,&c);"
    },
    {
        "line": 295,
        "fullcodeline": "image_count++;"
    },
    {
        "line": 299,
        "fullcodeline": "meta_image->scene=image->scene;"
    },
    {
        "line": 301,
        "fullcodeline": "DestroyImageProperties(meta_image);"
    },
    {
        "line": 303,
        "fullcodeline": "DestroyImageProfiles(meta_image);"
    },
    {
        "line": 304,
        "fullcodeline": "image->storage_class=PseudoClass;"
    },
    {
        "line": 305,
        "fullcodeline": "image->compression=LZWCompression;"
    },
    {
        "line": 306,
        "fullcodeline": "page.x=(ssize_t) ReadBlobLSBShort(image);"
    },
    {
        "line": 307,
        "fullcodeline": "page.y=(ssize_t) ReadBlobLSBShort(image);"
    },
    {
        "line": 308,
        "fullcodeline": "image->columns=ReadBlobLSBShort(image);"
    },
    {
        "line": 309,
        "fullcodeline": "image->rows=ReadBlobLSBShort(image);"
    },
    {
        "line": 310,
        "fullcodeline": "image->depth=8;"
    },
    {
        "line": 311,
        "fullcodeline": "flag=(unsigned char) ReadBlobByte(image);"
    },
    {
        "line": 312,
        "fullcodeline": "image->interlace=BitSet((int) flag,0x40) != 0 ? GIFInterlace : NoInterlace;"
    },
    {
        "line": 313,
        "fullcodeline": "image->colors=BitSet((int) flag,0x80) == 0 ? global_colors : one <<"
    },
    {
        "line": 321,
        "fullcodeline": "image->delay=delay;"
    },
    {
        "line": 322,
        "fullcodeline": "image->ticks_per_second=100;"
    },
    {
        "line": 323,
        "fullcodeline": "image->dispose=(DisposeType) dispose;"
    },
    {
        "line": 324,
        "fullcodeline": "image->iterations=iterations;"
    },
    {
        "line": 325,
        "fullcodeline": "image->alpha_trait=opacity >= 0 ? BlendPixelTrait : UndefinedPixelTrait;"
    },
    {
        "line": 326,
        "fullcodeline": "delay=0;"
    },
    {
        "line": 327,
        "fullcodeline": "dispose=0;"
    },
    {
        "line": 414,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows,exception);"
    },
    {
        "line": 431,
        "fullcodeline": "duration+=image->delay*image->iterations;"
    },
    {
        "line": 435,
        "fullcodeline": "opacity=(-1);"
    },
    {
        "line": 436,
        "fullcodeline": "status=SetImageProgress(image,LoadImageTag,(MagickOffsetType) image->scene-"
    },
    {
        "line": 443,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory(global_colormap);"
    },
    {
        "line": 444,
        "fullcodeline": "if ((image->columns == 0) || (image->rows == 0))"
    },
    {
        "line": 60,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 67,
        "fullcodeline": "(LocaleNCompare((char *) buffer,\"GIF89\",5) != 0)))"
    },
    {
        "line": 77,
        "fullcodeline": "MagickMax(global_colors,256),3UL*sizeof(*global_colormap));"
    },
    {
        "line": 104,
        "fullcodeline": "if (c == (unsigned char) ';')"
    },
    {
        "line": 106,
        "fullcodeline": "if (c == (unsigned char) '!')"
    },
    {
        "line": 278,
        "fullcodeline": "if (c != (unsigned char) ',')"
    },
    {
        "line": 280,
        "fullcodeline": "if (image_count != 0)"
    },
    {
        "line": 300,
        "fullcodeline": "(void) CloneImageProperties(image,meta_image);"
    },
    {
        "line": 302,
        "fullcodeline": "(void) CloneImageProfiles(image,meta_image);"
    },
    {
        "line": 315,
        "fullcodeline": "if (opacity >= (ssize_t) image->colors)"
    },
    {
        "line": 328,
        "fullcodeline": "if ((image->columns == 0) || (image->rows == 0))"
    },
    {
        "line": 338,
        "fullcodeline": "if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)"
    },
    {
        "line": 403,
        "fullcodeline": "if (image->gamma == 1.0)"
    },
    {
        "line": 415,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 420,
        "fullcodeline": "if (image_info->ping != MagickFalse)"
    },
    {
        "line": 432,
        "fullcodeline": "if (image_info->number_scenes != 0)"
    },
    {
        "line": 438,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 85,
        "fullcodeline": "if (count != (ssize_t) (3*global_colors))"
    },
    {
        "line": 87,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 89,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\");"
    },
    {
        "line": 111,
        "fullcodeline": "count=ReadBlob(image,1,&c);"
    },
    {
        "line": 285,
        "fullcodeline": "AcquireNextImage(image_info,image,exception);"
    },
    {
        "line": 293,
        "fullcodeline": "image=SyncNextImageInList(image);"
    },
    {
        "line": 316,
        "fullcodeline": "opacity=(-1);"
    },
    {
        "line": 330,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 332,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 333,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"NegativeOrZeroImageSize\");"
    },
    {
        "line": 340,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 342,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 343,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 345,
        "fullcodeline": "if (BitSet((int) flag,0x80) == 0)"
    },
    {
        "line": 350,
        "fullcodeline": "p=global_colormap;"
    },
    {
        "line": 362,
        "fullcodeline": "image->background_color=image->colormap[MagickMin((ssize_t) background,"
    },
    {
        "line": 411,
        "fullcodeline": "if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0))"
    },
    {
        "line": 421,
        "fullcodeline": "status=PingGIFImage(image,exception);"
    },
    {
        "line": 424,
        "fullcodeline": "if ((image_info->ping == MagickFalse) && (status == MagickFalse))"
    },
    {
        "line": 426,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 428,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 429,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"CorruptImage\");"
    },
    {
        "line": 112,
        "fullcodeline": "if (count != 1)"
    },
    {
        "line": 351,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 373,
        "fullcodeline": "colormap=(unsigned char *) AcquireQuantumMemory(image->colors,3*"
    },
    {
        "line": 382,
        "fullcodeline": "count=ReadBlob(image,(3*image->colors)*sizeof(*colormap),colormap);"
    },
    {
        "line": 392,
        "fullcodeline": "p=colormap;"
    },
    {
        "line": 405,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 408,
        "fullcodeline": "(void) SetImageColorspace(image,i == (ssize_t) image->colors ?"
    },
    {
        "line": 412,
        "fullcodeline": "if (image->scene >= (image_info->scene+image_info->number_scenes-1))"
    },
    {
        "line": 416,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 423,
        "fullcodeline": "status=DecodeImage(image,opacity,exception);"
    },
    {
        "line": 433,
        "fullcodeline": "if (image->scene >= (image_info->scene+image_info->number_scenes-1))"
    },
    {
        "line": 114,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 116,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 117,
        "fullcodeline": "ThrowReaderException(CorruptImageError,"
    },
    {
        "line": 286,
        "fullcodeline": "if (GetNextImageInList(image) == (Image *) NULL)"
    },
    {
        "line": 314,
        "fullcodeline": "((size_t) (flag & 0x07)+1);"
    },
    {
        "line": 375,
        "fullcodeline": "if (colormap == (unsigned char *) NULL)"
    },
    {
        "line": 393,
        "fullcodeline": "for (i=0; i < (ssize_t) image->colors; i++)"
    },
    {
        "line": 406,
        "fullcodeline": "if (IsPixelInfoGray(image->colormap+i) == MagickFalse)"
    },
    {
        "line": 128,
        "fullcodeline": "dispose=(size_t) (buffer[0] >> 2);"
    },
    {
        "line": 129,
        "fullcodeline": "delay=(size_t) ((buffer[2] << 8) | buffer[1]);"
    },
    {
        "line": 145,
        "fullcodeline": "comments=AcquireString((char *) NULL);"
    },
    {
        "line": 166,
        "fullcodeline": "loop=MagickFalse;"
    },
    {
        "line": 288,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 291,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 356,
        "fullcodeline": "if (i == opacity)"
    },
    {
        "line": 363,
        "fullcodeline": "(ssize_t) image->colors-1)];"
    },
    {
        "line": 377,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 379,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 380,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 383,
        "fullcodeline": "if (count != (ssize_t) (3*image->colors))"
    },
    {
        "line": 385,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 387,
        "fullcodeline": "colormap=(unsigned char *) RelinquishMagickMemory(colormap);"
    },
    {
        "line": 388,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 389,
        "fullcodeline": "ThrowReaderException(CorruptImageError,"
    },
    {
        "line": 401,
        "fullcodeline": "colormap=(unsigned char *) RelinquishMagickMemory(colormap);"
    },
    {
        "line": 154,
        "fullcodeline": "(void) SetImageProperty(meta_image,\"comment\",comments,exception);"
    },
    {
        "line": 155,
        "fullcodeline": "comments=DestroyString(comments);"
    },
    {
        "line": 170,
        "fullcodeline": "if (loop != MagickFalse)"
    },
    {
        "line": 289,
        "fullcodeline": "global_colormap=(unsigned char *) RelinquishMagickMemory("
    },
    {
        "line": 353,
        "fullcodeline": "image->colormap[i].red=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 354,
        "fullcodeline": "image->colormap[i].green=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 355,
        "fullcodeline": "image->colormap[i].blue=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 359,
        "fullcodeline": "image->transparent_color=image->colormap[opacity];"
    },
    {
        "line": 398,
        "fullcodeline": "if (i == opacity)"
    },
    {
        "line": 127,
        "fullcodeline": "while (ReadBlobBlock(image,buffer) != 0) ;"
    },
    {
        "line": 130,
        "fullcodeline": "if ((ssize_t) (buffer[0] & 0x01) == 0x01)"
    },
    {
        "line": 131,
        "fullcodeline": "opacity=(ssize_t) buffer[3];"
    },
    {
        "line": 146,
        "fullcodeline": "for (length=0; ; length+=count)"
    },
    {
        "line": 148,
        "fullcodeline": "count=(ssize_t) ReadBlobBlock(image,buffer);"
    },
    {
        "line": 151,
        "fullcodeline": "buffer[count]='\\0';"
    },
    {
        "line": 167,
        "fullcodeline": "if (ReadBlobBlock(image,buffer) != 0)"
    },
    {
        "line": 168,
        "fullcodeline": "loop=LocaleNCompare((char *) buffer,\"NETSCAPE2.0\",11) == 0 ?"
    },
    {
        "line": 273,
        "fullcodeline": "while (ReadBlobBlock(image,buffer) != 0) ;"
    },
    {
        "line": 395,
        "fullcodeline": "image->colormap[i].red=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 396,
        "fullcodeline": "image->colormap[i].green=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 397,
        "fullcodeline": "image->colormap[i].blue=(double) ScaleCharToQuantum(*p++);"
    },
    {
        "line": 149,
        "fullcodeline": "if (count == 0)"
    },
    {
        "line": 152,
        "fullcodeline": "(void) ConcatenateString(&comments,(const char *) buffer);"
    },
    {
        "line": 173,
        "fullcodeline": "iterations=(size_t) ((buffer[2] << 8) | buffer[1]);"
    },
    {
        "line": 201,
        "fullcodeline": "icc=LocaleNCompare((char *) buffer,\"ICCRGBG1012\",11) == 0 ?"
    },
    {
        "line": 203,
        "fullcodeline": "magick=LocaleNCompare((char *) buffer,\"ImageMagick\",11) == 0 ?"
    },
    {
        "line": 205,
        "fullcodeline": "i8bim=LocaleNCompare((char *) buffer,\"MGK8BIM0000\",11) == 0 ?"
    },
    {
        "line": 207,
        "fullcodeline": "iptc=LocaleNCompare((char *) buffer,\"MGKIPTC0000\",11) == 0 ?"
    },
    {
        "line": 212,
        "fullcodeline": "info=(unsigned char *) AcquireQuantumMemory(255UL,"
    },
    {
        "line": 220,
        "fullcodeline": "reserved_length=255;"
    },
    {
        "line": 240,
        "fullcodeline": "profile=BlobToStringInfo(info,(size_t) info_length);"
    },
    {
        "line": 172,
        "fullcodeline": "while (ReadBlobBlock(image,buffer) != 0)"
    },
    {
        "line": 179,
        "fullcodeline": "name[MagickPathExtent];"
    },
    {
        "line": 210,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 214,
        "fullcodeline": "if (info == (unsigned char *) NULL)"
    },
    {
        "line": 241,
        "fullcodeline": "if (profile == (StringInfo *) NULL)"
    },
    {
        "line": 247,
        "fullcodeline": "if (i8bim != MagickFalse)"
    },
    {
        "line": 263,
        "fullcodeline": "if (magick == MagickFalse)"
    },
    {
        "line": 265,
        "fullcodeline": "profile=DestroyStringInfo(profile);"
    },
    {
        "line": 266,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 216,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 217,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,"
    },
    {
        "line": 221,
        "fullcodeline": "for (info_length=0; ; )"
    },
    {
        "line": 223,
        "fullcodeline": "block_length=(int) ReadBlobBlock(image,&info[info_length]);"
    },
    {
        "line": 226,
        "fullcodeline": "info_length+=block_length;"
    },
    {
        "line": 243,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 244,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,"
    },
    {
        "line": 262,
        "fullcodeline": "info=(unsigned char *) RelinquishMagickMemory(info);"
    },
    {
        "line": 224,
        "fullcodeline": "if (block_length == 0)"
    },
    {
        "line": 227,
        "fullcodeline": "if (info_length > (reserved_length-255))"
    },
    {
        "line": 248,
        "fullcodeline": "(void) CopyMagickString(name,\"8bim\",sizeof(name));"
    },
    {
        "line": 264,
        "fullcodeline": "(void) SetImageProfile(meta_image,name,profile,exception);"
    },
    {
        "line": 229,
        "fullcodeline": "reserved_length+=4096;"
    },
    {
        "line": 230,
        "fullcodeline": "info=(unsigned char *) ResizeQuantumMemory(info,(size_t)"
    },
    {
        "line": 249,
        "fullcodeline": "else if (icc != MagickFalse)"
    },
    {
        "line": 232,
        "fullcodeline": "if (info == (unsigned char *) NULL)"
    },
    {
        "line": 234,
        "fullcodeline": "meta_image=DestroyImage(meta_image);"
    },
    {
        "line": 235,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,"
    },
    {
        "line": 250,
        "fullcodeline": "(void) CopyMagickString(name,\"icc\",sizeof(name));"
    },
    {
        "line": 251,
        "fullcodeline": "else if (iptc != MagickFalse)"
    },
    {
        "line": 252,
        "fullcodeline": "(void) CopyMagickString(name,\"iptc\",sizeof(name));"
    },
    {
        "line": 253,
        "fullcodeline": "else if (magick != MagickFalse)"
    },
    {
        "line": 256,
        "fullcodeline": "meta_image->gamma=StringToDouble((char *) info+6,"
    },
    {
        "line": 255,
        "fullcodeline": "(void) CopyMagickString(name,\"magick\",sizeof(name));"
    },
    {
        "line": 260,
        "fullcodeline": "(void) FormatLocaleString(name,sizeof(name),\"gif:%.11s\","
    }
]