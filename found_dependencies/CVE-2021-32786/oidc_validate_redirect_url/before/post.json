[
    {
        "line": 5,
        "fullcodeline": "const char *c_host = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "apr_hash_index_t *hi = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (c->redirect_urls_allowed != NULL) {"
    },
    {
        "line": 46,
        "fullcodeline": "if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {"
    },
    {
        "line": 9,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 10,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool, \"not a valid URL value: %s\", url);"
    },
    {
        "line": 11,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 47,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 48,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 52,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 70,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Invalid URL\");"
    },
    {
        "line": 71,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 75,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 16,
        "fullcodeline": "for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi ="
    },
    {
        "line": 23,
        "fullcodeline": "if (hi == NULL) {"
    },
    {
        "line": 49,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 72,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 17,
        "fullcodeline": "apr_hash_next(hi)) {"
    },
    {
        "line": 18,
        "fullcodeline": "apr_hash_this(hi, (const void**) &c_host, NULL, NULL);"
    },
    {
        "line": 24,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"URL not allowed\");"
    },
    {
        "line": 25,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 29,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 32,
        "fullcodeline": "} else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {"
    },
    {
        "line": 54,
        "fullcodeline": "} else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (oidc_util_regexp_first_match(r->pool, url, c_host,"
    },
    {
        "line": 26,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 33,
        "fullcodeline": "c_host = oidc_get_current_url_host(r);"
    },
    {
        "line": 55,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 56,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool,"
    },
    {
        "line": 58,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 34,
        "fullcodeline": "if ((strstr(c_host, uri.hostname) == NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "|| (strstr(uri.hostname, c_host) == NULL)) {"
    },
    {
        "line": 36,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Invalid Request\");"
    },
    {
        "line": 37,
        "fullcodeline": "*err_desc ="
    },
    {
        "line": 41,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 60,
        "fullcodeline": "} else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {"
    },
    {
        "line": 38,
        "fullcodeline": "apr_psprintf(r->pool,"
    },
    {
        "line": 61,
        "fullcodeline": "*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"
    },
    {
        "line": 62,
        "fullcodeline": "*err_desc = apr_psprintf(r->pool,"
    },
    {
        "line": 64,
        "fullcodeline": "oidc_error(r, \"%s: %s\", *err_str, *err_desc);"
    },
    {
        "line": 40,
        "fullcodeline": "apr_uri_unparse(r->pool, &uri, 0), c_host);"
    }
]