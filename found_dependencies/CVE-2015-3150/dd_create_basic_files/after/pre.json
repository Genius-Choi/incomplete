[
    {
        "line": 3,
        "fullcodeline": "char long_str[sizeof(long) * 3 + 2];"
    },
    {
        "line": 5,
        "fullcodeline": "char *time_str = dd_load_text_ext(dd, FILENAME_TIME,"
    },
    {
        "line": 16,
        "fullcodeline": "free(time_str);"
    },
    {
        "line": 26,
        "fullcodeline": "uname(&buf); /* never fails */"
    },
    {
        "line": 37,
        "fullcodeline": "char *release = load_text_file(\"/etc/os-release\","
    },
    {
        "line": 53,
        "fullcodeline": "release = dd_load_text_ext(dd, FILENAME_OS_RELEASE,"
    },
    {
        "line": 74,
        "fullcodeline": "free(release);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!time_str)"
    },
    {
        "line": 19,
        "fullcodeline": "if (uid != (uid_t)-1L)"
    },
    {
        "line": 30,
        "fullcodeline": "if (!dd_exist(dd, FILENAME_KERNEL))"
    },
    {
        "line": 32,
        "fullcodeline": "if (!dd_exist(dd, FILENAME_ARCHITECTURE))"
    },
    {
        "line": 34,
        "fullcodeline": "if (!dd_exist(dd, FILENAME_HOSTNAME))"
    },
    {
        "line": 56,
        "fullcodeline": "if (!release)"
    },
    {
        "line": 6,
        "fullcodeline": "DD_FAIL_QUIETLY_ENOENT | DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE);"
    },
    {
        "line": 9,
        "fullcodeline": "time_t t = time(NULL);"
    },
    {
        "line": 10,
        "fullcodeline": "sprintf(long_str, \"%lu\", (long)t);"
    },
    {
        "line": 12,
        "fullcodeline": "dd_save_text(dd, FILENAME_TIME, long_str);"
    },
    {
        "line": 14,
        "fullcodeline": "dd_save_text(dd, FILENAME_LAST_OCCURRENCE, long_str);"
    },
    {
        "line": 21,
        "fullcodeline": "snprintf(long_str, sizeof(long_str), \"%li\", (long)uid);"
    },
    {
        "line": 22,
        "fullcodeline": "dd_save_text(dd, FILENAME_UID, long_str);"
    },
    {
        "line": 31,
        "fullcodeline": "dd_save_text(dd, FILENAME_KERNEL, buf.release);"
    },
    {
        "line": 33,
        "fullcodeline": "dd_save_text(dd, FILENAME_ARCHITECTURE, buf.machine);"
    },
    {
        "line": 35,
        "fullcodeline": "dd_save_text(dd, FILENAME_HOSTNAME, buf.nodename);"
    },
    {
        "line": 38,
        "fullcodeline": "DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE | DD_OPEN_FOLLOW);"
    },
    {
        "line": 41,
        "fullcodeline": "dd_save_text(dd, FILENAME_OS_INFO, release);"
    },
    {
        "line": 46,
        "fullcodeline": "copy_file_from_chroot(dd, FILENAME_OS_INFO_IN_ROOTDIR, chroot_dir, \"/etc/os-release\");"
    },
    {
        "line": 54,
        "fullcodeline": "DD_FAIL_QUIETLY_ENOENT | DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE);"
    },
    {
        "line": 58,
        "fullcodeline": "release = load_text_file(\"/etc/system-release\","
    },
    {
        "line": 66,
        "fullcodeline": "char *newline = strchr(release, '\\n');"
    },
    {
        "line": 70,
        "fullcodeline": "dd_save_text(dd, FILENAME_OS_RELEASE, release);"
    },
    {
        "line": 60,
        "fullcodeline": "if (!release)"
    },
    {
        "line": 63,
        "fullcodeline": "if (!release)"
    },
    {
        "line": 59,
        "fullcodeline": "DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE | DD_OPEN_FOLLOW);"
    },
    {
        "line": 61,
        "fullcodeline": "release = load_text_file(\"/etc/redhat-release\","
    },
    {
        "line": 64,
        "fullcodeline": "release = load_text_file(\"/etc/SuSE-release\", DD_OPEN_FOLLOW);"
    },
    {
        "line": 68,
        "fullcodeline": "*newline = '\\0';"
    },
    {
        "line": 72,
        "fullcodeline": "copy_file_from_chroot(dd, FILENAME_OS_RELEASE_IN_ROOTDIR, chroot_dir, \"/etc/system-release\");"
    },
    {
        "line": 62,
        "fullcodeline": "DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE | DD_OPEN_FOLLOW);"
    }
]