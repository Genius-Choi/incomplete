[
    {
        "line": 4,
        "fullcodeline": "int fd = secure_openat_read(dir_fd, filename);"
    },
    {
        "line": 13,
        "fullcodeline": "ssize_t rdsz = read(fd, time_buf, sizeof(time_buf));"
    },
    {
        "line": 39,
        "fullcodeline": "time_buf[rdsz] = '\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "errno = 0;    /* To distinguish success/failure after call */"
    },
    {
        "line": 45,
        "fullcodeline": "long long val = strtoll(time_buf, &endptr, /* base */ 10);"
    },
    {
        "line": 46,
        "fullcodeline": "const long long MAX_TIME_T = (1ULL << (sizeof(time_t)*8 - 1)) - 1;"
    },
    {
        "line": 5,
        "fullcodeline": "if (fd < 0)"
    },
    {
        "line": 12,
        "fullcodeline": "char time_buf[sizeof(time_t) * 3 + 1];"
    },
    {
        "line": 18,
        "fullcodeline": "if (rdsz == -1)"
    },
    {
        "line": 27,
        "fullcodeline": "if (rdsz == sizeof(time_buf))"
    },
    {
        "line": 7,
        "fullcodeline": "VERB2 pwarn_msg(\"Can't open '%s'\", filename);"
    },
    {
        "line": 37,
        "fullcodeline": "if (rdsz > 0 && time_buf[rdsz - 1] == '\\n')"
    },
    {
        "line": 49,
        "fullcodeline": "if (errno"
    },
    {
        "line": 52,
        "fullcodeline": "|| !isdigit_str(time_buf) /* this filters out \"-num\", \"   num\", \"\" */"
    },
    {
        "line": 8,
        "fullcodeline": "return -1;"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 31,
        "fullcodeline": "return -1;"
    },
    {
        "line": 51,
        "fullcodeline": "|| val >= MAX_TIME_T"
    },
    {
        "line": 56,
        "fullcodeline": "return -1;"
    },
    {
        "line": 50,
        "fullcodeline": "|| (*endptr != '\\0')"
    }
]