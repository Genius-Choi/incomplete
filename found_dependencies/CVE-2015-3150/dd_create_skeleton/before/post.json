[
    {
        "line": 4,
        "fullcodeline": "mode_t dir_mode = mode | ((mode & 0444) >> 2);"
    },
    {
        "line": 5,
        "fullcodeline": "struct dump_dir *dd = dd_init();"
    },
    {
        "line": 7,
        "fullcodeline": "dd->mode = mode;"
    },
    {
        "line": 13,
        "fullcodeline": "dir = dd->dd_dirname = rm_trailing_slashes(dir);"
    },
    {
        "line": 15,
        "fullcodeline": "const char *last_component = strrchr(dir, '/');"
    },
    {
        "line": 61,
        "fullcodeline": "dd->dd_uid = (uid_t)-1L;"
    },
    {
        "line": 62,
        "fullcodeline": "dd->dd_gid = (gid_t)-1L;"
    },
    {
        "line": 20,
        "fullcodeline": "if (dot_or_dotdot(last_component))"
    },
    {
        "line": 35,
        "fullcodeline": "if ((flags & DD_CREATE_PARENTS))"
    },
    {
        "line": 40,
        "fullcodeline": "if (r != 0)"
    },
    {
        "line": 47,
        "fullcodeline": "if (dd_lock(dd, CREATE_LOCK_USLEEP, /*flags:*/ 0) < 0)"
    },
    {
        "line": 54,
        "fullcodeline": "if (chmod(dir, dir_mode) == -1)"
    },
    {
        "line": 63,
        "fullcodeline": "if (uid != (uid_t)-1L)"
    },
    {
        "line": 17,
        "fullcodeline": "last_component++;"
    },
    {
        "line": 25,
        "fullcodeline": "error_msg(\"Bad dir name '%s'\", dir);"
    },
    {
        "line": 26,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 36,
        "fullcodeline": "r = g_mkdir_with_parents(dd->dd_dirname, dir_mode);"
    },
    {
        "line": 42,
        "fullcodeline": "perror_msg(\"Can't create directory '%s'\", dir);"
    },
    {
        "line": 43,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 49,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 56,
        "fullcodeline": "perror_msg(\"Can't change mode of '%s'\", dir);"
    },
    {
        "line": 57,
        "fullcodeline": "dd_close(dd);"
    },
    {
        "line": 65,
        "fullcodeline": "dd->dd_uid = 0;"
    },
    {
        "line": 66,
        "fullcodeline": "dd->dd_uid = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "struct passwd *pw = getpwnam(\"abrt\");"
    },
    {
        "line": 91,
        "fullcodeline": "pw = getpwuid(uid);"
    },
    {
        "line": 19,
        "fullcodeline": "last_component = dir;"
    },
    {
        "line": 38,
        "fullcodeline": "r = mkdir(dd->dd_dirname, dir_mode);"
    },
    {
        "line": 86,
        "fullcodeline": "dd->dd_uid = pw->pw_uid;"
    },
    {
        "line": 93,
        "fullcodeline": "dd->dd_gid = pw->pw_gid;"
    },
    {
        "line": 88,
        "fullcodeline": "error_msg(\"User 'abrt' does not exist, using uid 0\");"
    },
    {
        "line": 95,
        "fullcodeline": "error_msg(\"User %lu does not exist, using gid 0\", (long)uid);"
    }
]