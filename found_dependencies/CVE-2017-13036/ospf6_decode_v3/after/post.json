[
    {
        "line": 14,
        "fullcodeline": "register const struct hello6 *hellop = (const struct hello6 *)((const uint8_t *)op + OSPF6HDR_LEN);"
    },
    {
        "line": 16,
        "fullcodeline": "ND_TCHECK_32BITS(&hellop->hello_options);"
    },
    {
        "line": 17,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\tOptions [%s]\","
    },
    {
        "line": 21,
        "fullcodeline": "ND_TCHECK(hellop->hello_deadint);"
    },
    {
        "line": 22,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Hello Timer %us, Dead Timer %us, Interface-ID %s, Priority %u\","
    },
    {
        "line": 28,
        "fullcodeline": "ND_TCHECK(hellop->hello_dr);"
    },
    {
        "line": 32,
        "fullcodeline": "ND_TCHECK(hellop->hello_bdr);"
    },
    {
        "line": 49,
        "fullcodeline": "register const struct dd6 *ddp = (const struct dd6 *)((const uint8_t *)op + OSPF6HDR_LEN);"
    },
    {
        "line": 51,
        "fullcodeline": "ND_TCHECK(ddp->db_options);"
    },
    {
        "line": 52,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\tOptions [%s]\","
    },
    {
        "line": 55,
        "fullcodeline": "ND_TCHECK(ddp->db_flags);"
    },
    {
        "line": 56,
        "fullcodeline": "ND_PRINT((ndo, \", DD Flags [%s]\","
    },
    {
        "line": 59,
        "fullcodeline": "ND_TCHECK(ddp->db_seq);"
    },
    {
        "line": 60,
        "fullcodeline": "ND_PRINT((ndo, \", MTU %u, DD-Sequence 0x%08x\","
    },
    {
        "line": 75,
        "fullcodeline": "if (ndo->ndo_vflag > 1) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (ndo->ndo_vflag > 1) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (ndo->ndo_vflag > 1) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (EXTRACT_32BITS(&hellop->hello_dr) != 0)"
    },
    {
        "line": 33,
        "fullcodeline": "if (EXTRACT_32BITS(&hellop->hello_bdr) != 0)"
    },
    {
        "line": 36,
        "fullcodeline": "if (ndo->ndo_vflag > 1) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (ndo->ndo_vflag > 1) {"
    },
    {
        "line": 76,
        "fullcodeline": "lsrp = (const struct lsr6 *)((const uint8_t *)op + OSPF6HDR_LEN);"
    },
    {
        "line": 90,
        "fullcodeline": "register const struct lsu6 *lsup = (const struct lsu6 *)((const uint8_t *)op + OSPF6HDR_LEN);"
    },
    {
        "line": 92,
        "fullcodeline": "ND_TCHECK(lsup->lsu_count);"
    },
    {
        "line": 93,
        "fullcodeline": "i = EXTRACT_32BITS(&lsup->lsu_count);"
    },
    {
        "line": 94,
        "fullcodeline": "lsap = lsup->lsu_lsa;"
    },
    {
        "line": 106,
        "fullcodeline": "lshp = (const struct lsa6_hdr *)((const uint8_t *)op + OSPF6HDR_LEN);"
    },
    {
        "line": 30,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Designated Router %s\","
    },
    {
        "line": 34,
        "fullcodeline": "ND_PRINT((ndo, \", Backup Designated Router %s\","
    },
    {
        "line": 37,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Neighbor List:\"));"
    },
    {
        "line": 38,
        "fullcodeline": "ap = hellop->hello_neighbor;"
    },
    {
        "line": 65,
        "fullcodeline": "lshp = ddp->db_lshdr;"
    },
    {
        "line": 77,
        "fullcodeline": "while ((const u_char *)lsrp < dataend) {"
    },
    {
        "line": 95,
        "fullcodeline": "while ((const u_char *)lsap < dataend && i--) {"
    },
    {
        "line": 107,
        "fullcodeline": "while ((const u_char *)lshp < dataend) {"
    },
    {
        "line": 18,
        "fullcodeline": "bittok2str(ospf6_option_values, \"none\","
    },
    {
        "line": 23,
        "fullcodeline": "EXTRACT_16BITS(&hellop->hello_helloint),"
    },
    {
        "line": 24,
        "fullcodeline": "EXTRACT_16BITS(&hellop->hello_deadint),"
    },
    {
        "line": 25,
        "fullcodeline": "ipaddr_string(ndo, &hellop->hello_ifid),"
    },
    {
        "line": 39,
        "fullcodeline": "while ((const u_char *)ap < dataend) {"
    },
    {
        "line": 53,
        "fullcodeline": "bittok2str(ospf6_option_values, \"none\","
    },
    {
        "line": 57,
        "fullcodeline": "bittok2str(ospf6_dd_flag_values,\"none\",ddp->db_flags)));"
    },
    {
        "line": 61,
        "fullcodeline": "EXTRACT_16BITS(&ddp->db_mtu),"
    },
    {
        "line": 62,
        "fullcodeline": "EXTRACT_32BITS(&ddp->db_seq)));"
    },
    {
        "line": 66,
        "fullcodeline": "while ((const u_char *)lshp < dataend) {"
    },
    {
        "line": 79,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t  Advertising Router %s\","
    },
    {
        "line": 81,
        "fullcodeline": "ospf6_print_ls_type(ndo, EXTRACT_16BITS(&lsrp->ls_type),"
    },
    {
        "line": 83,
        "fullcodeline": "++lsrp;"
    },
    {
        "line": 98,
        "fullcodeline": "lsap = (const struct lsa6 *)((const u_char *)lsap +"
    },
    {
        "line": 19,
        "fullcodeline": "EXTRACT_32BITS(&hellop->hello_options))));"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    %s\", ipaddr_string(ndo, ap)));"
    },
    {
        "line": 42,
        "fullcodeline": "++ap;"
    },
    {
        "line": 54,
        "fullcodeline": "EXTRACT_32BITS(&ddp->db_options))));"
    },
    {
        "line": 96,
        "fullcodeline": "if (ospf6_print_lsa(ndo, lsap, dataend))"
    },
    {
        "line": 108,
        "fullcodeline": "if (ospf6_print_lshdr(ndo, lshp++, dataend))"
    },
    {
        "line": 31,
        "fullcodeline": "ipaddr_string(ndo, &hellop->hello_dr)));"
    },
    {
        "line": 35,
        "fullcodeline": "ipaddr_string(ndo, &hellop->hello_bdr)));"
    },
    {
        "line": 67,
        "fullcodeline": "if (ospf6_print_lshdr(ndo, lshp++, dataend))"
    },
    {
        "line": 80,
        "fullcodeline": "ipaddr_string(ndo, &lsrp->ls_router)));"
    }
]