[
    {
        "line": 9,
        "fullcodeline": "int\t\tlen = (int)STRLEN(word);"
    },
    {
        "line": 10,
        "fullcodeline": "int\t\tct = captype(word, word + len);"
    },
    {
        "line": 11,
        "fullcodeline": "char_u\tfoldword[MAXWLEN];"
    },
    {
        "line": 12,
        "fullcodeline": "int\t\tres = OK;"
    },
    {
        "line": 15,
        "fullcodeline": "(void)spell_casefold(curwin, word, len, foldword, MAXWLEN);"
    },
    {
        "line": 24,
        "fullcodeline": "++spin->si_foldwcount;"
    },
    {
        "line": 16,
        "fullcodeline": "for (p = pfxlist; res == OK; ++p)"
    },
    {
        "line": 26,
        "fullcodeline": "if (res == OK && (ct == WF_KEEPCAP || (flags & WF_KEEPCAP)))"
    },
    {
        "line": 36,
        "fullcodeline": "++spin->si_keepwcount;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!need_affix || (p != NULL && *p != NUL))"
    },
    {
        "line": 21,
        "fullcodeline": "if (p == NULL || *p == NUL)"
    },
    {
        "line": 28,
        "fullcodeline": "for (p = pfxlist; res == OK; ++p)"
    },
    {
        "line": 19,
        "fullcodeline": "res = tree_add_word(spin, foldword, spin->si_foldroot, ct | flags,"
    },
    {
        "line": 30,
        "fullcodeline": "if (!need_affix || (p != NULL && *p != NUL))"
    },
    {
        "line": 33,
        "fullcodeline": "if (p == NULL || *p == NUL)"
    },
    {
        "line": 20,
        "fullcodeline": "region, p == NULL ? 0 : *p);"
    },
    {
        "line": 31,
        "fullcodeline": "res = tree_add_word(spin, word, spin->si_keeproot, flags,"
    },
    {
        "line": 32,
        "fullcodeline": "region, p == NULL ? 0 : *p);"
    }
]