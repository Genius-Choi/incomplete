[
    {
        "line": 3,
        "fullcodeline": "struct rose_sock *rose = from_timer(rose, t, idletimer);"
    },
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = &rose->sock;"
    },
    {
        "line": 6,
        "fullcodeline": "bh_lock_sock(sk);"
    },
    {
        "line": 7,
        "fullcodeline": "rose_clear_queues(sk);"
    },
    {
        "line": 9,
        "fullcodeline": "rose_write_internal(sk, ROSE_CLEAR_REQUEST);"
    },
    {
        "line": 10,
        "fullcodeline": "rose_sk(sk)->state = ROSE_STATE_2;"
    },
    {
        "line": 12,
        "fullcodeline": "rose_start_t3timer(sk);"
    },
    {
        "line": 14,
        "fullcodeline": "sk->sk_state     = TCP_CLOSE;"
    },
    {
        "line": 15,
        "fullcodeline": "sk->sk_err       = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "sk->sk_shutdown |= SEND_SHUTDOWN;"
    },
    {
        "line": 22,
        "fullcodeline": "bh_unlock_sock(sk);"
    },
    {
        "line": 23,
        "fullcodeline": "sock_put(sk);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!sock_flag(sk, SOCK_DEAD)) {"
    },
    {
        "line": 19,
        "fullcodeline": "sk->sk_state_change(sk);"
    },
    {
        "line": 20,
        "fullcodeline": "sock_set_flag(sk, SOCK_DEAD);"
    }
]