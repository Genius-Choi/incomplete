[
    {
        "line": 3,
        "fullcodeline": "struct inode *inode = filp->f_path.dentry->d_inode;"
    },
    {
        "line": 4,
        "fullcodeline": "struct super_block *sb = inode->i_sb;"
    },
    {
        "line": 6,
        "fullcodeline": "char strbuf[HFSPLUS_MAX_STRLEN + 1];"
    },
    {
        "line": 15,
        "fullcodeline": "err = hfs_find_init(HFSPLUS_SB(sb)->cat_tree, &fd);"
    },
    {
        "line": 18,
        "fullcodeline": "hfsplus_cat_build_key(sb, fd.search_key, inode->i_ino, NULL);"
    },
    {
        "line": 19,
        "fullcodeline": "err = hfs_brec_find(&fd);"
    },
    {
        "line": 105,
        "fullcodeline": "rd = filp->private_data;"
    },
    {
        "line": 116,
        "fullcodeline": "memcpy(&rd->key, fd.key, sizeof(struct hfsplus_cat_key));"
    },
    {
        "line": 12,
        "fullcodeline": "if (filp->f_pos >= inode->i_size)"
    },
    {
        "line": 106,
        "fullcodeline": "if (!rd) {"
    },
    {
        "line": 28,
        "fullcodeline": "filp->f_pos++;"
    },
    {
        "line": 31,
        "fullcodeline": "hfs_bnode_read(fd.bnode, &entry, fd.entryoffset,"
    },
    {
        "line": 46,
        "fullcodeline": "filp->f_pos++;"
    },
    {
        "line": 51,
        "fullcodeline": "err = hfs_brec_goto(&fd, filp->f_pos - 1);"
    },
    {
        "line": 62,
        "fullcodeline": "hfs_bnode_read(fd.bnode, &entry, fd.entryoffset,"
    },
    {
        "line": 64,
        "fullcodeline": "type = be16_to_cpu(entry.type);"
    },
    {
        "line": 65,
        "fullcodeline": "len = HFSPLUS_MAX_STRLEN;"
    },
    {
        "line": 66,
        "fullcodeline": "err = hfsplus_uni2asc(sb, &fd.key->cat.name, strbuf, &len);"
    },
    {
        "line": 98,
        "fullcodeline": "filp->f_pos++;"
    },
    {
        "line": 101,
        "fullcodeline": "err = hfs_brec_goto(&fd, 1);"
    },
    {
        "line": 107,
        "fullcodeline": "rd = kmalloc(sizeof(struct hfsplus_readdir_data), GFP_KERNEL);"
    },
    {
        "line": 112,
        "fullcodeline": "filp->private_data = rd;"
    },
    {
        "line": 26,
        "fullcodeline": "if (filldir(dirent, \".\", 1, 0, inode->i_ino, DT_DIR))"
    },
    {
        "line": 33,
        "fullcodeline": "if (be16_to_cpu(entry.type) != HFSPLUS_FOLDER_THREAD) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (fd.entrylength < HFSPLUS_MIN_THREAD_SZ) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (filldir(dirent, \"..\", 2, 1,"
    },
    {
        "line": 49,
        "fullcodeline": "if (filp->f_pos >= inode->i_size)"
    },
    {
        "line": 57,
        "fullcodeline": "if (be32_to_cpu(fd.key->cat.parent) != inode->i_ino) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (type == HFSPLUS_FOLDER) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (filp->f_pos >= inode->i_size)"
    },
    {
        "line": 108,
        "fullcodeline": "if (!rd) {"
    },
    {
        "line": 35,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 40,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 44,
        "fullcodeline": "be32_to_cpu(entry.thread.parentID), DT_DIR))"
    },
    {
        "line": 59,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 109,
        "fullcodeline": "err = -ENOMEM;"
    },
    {
        "line": 70,
        "fullcodeline": "if (fd.entrylength <"
    },
    {
        "line": 80,
        "fullcodeline": "if (filldir(dirent, strbuf, len, filp->f_pos,"
    },
    {
        "line": 71,
        "fullcodeline": "sizeof(struct hfsplus_cat_folder)) {"
    },
    {
        "line": 73,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 77,
        "fullcodeline": "HFSPLUS_SB(sb)->hidden_dir->i_ino =="
    },
    {
        "line": 81,
        "fullcodeline": "be32_to_cpu(entry.folder.id), DT_DIR))"
    },
    {
        "line": 83,
        "fullcodeline": "} else if (type == HFSPLUS_FILE) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (HFSPLUS_SB(sb)->hidden_dir &&"
    },
    {
        "line": 78,
        "fullcodeline": "be32_to_cpu(entry.folder.id))"
    },
    {
        "line": 84,
        "fullcodeline": "if (fd.entrylength < sizeof(struct hfsplus_cat_file)) {"
    },
    {
        "line": 89,
        "fullcodeline": "if (filldir(dirent, strbuf, len, filp->f_pos,"
    },
    {
        "line": 94,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 86,
        "fullcodeline": "err = -EIO;"
    },
    {
        "line": 90,
        "fullcodeline": "be32_to_cpu(entry.file.id), DT_REG))"
    }
]