[
    {
        "line": 3,
        "fullcodeline": "TIFF* tif = img->tif;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char *buf = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned char *p0 = NULL, *p1 = NULL, *p2 = NULL, *pa = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "uint32 imagewidth = img->width;"
    },
    {
        "line": 15,
        "fullcodeline": "int alpha = img->alpha;"
    },
    {
        "line": 16,
        "fullcodeline": "int ret = 1, flip;"
    },
    {
        "line": 19,
        "fullcodeline": "stripsize = TIFFStripSize(tif);"
    },
    {
        "line": 20,
        "fullcodeline": "bufsize = _TIFFMultiplySSize(tif,alpha?4:3,stripsize, \"gtStripSeparate\");"
    },
    {
        "line": 25,
        "fullcodeline": "flip = setorientation(img);"
    },
    {
        "line": 48,
        "fullcodeline": "TIFFGetFieldDefaulted(tif, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);"
    },
    {
        "line": 49,
        "fullcodeline": "scanline = TIFFScanlineSize(tif);"
    },
    {
        "line": 50,
        "fullcodeline": "fromskew = (w < imagewidth ? imagewidth - w : 0);"
    },
    {
        "line": 138,
        "fullcodeline": "_TIFFfree(buf);"
    },
    {
        "line": 21,
        "fullcodeline": "if (bufsize == 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (flip & FLIP_VERTICALLY) {"
    },
    {
        "line": 51,
        "fullcodeline": "for (row = 0; row < h; row += nrow)"
    },
    {
        "line": 121,
        "fullcodeline": "if (flip & FLIP_HORIZONTALLY) {"
    },
    {
        "line": 27,
        "fullcodeline": "y = h - 1;"
    },
    {
        "line": 28,
        "fullcodeline": "toskew = -(int32)(w + w);"
    },
    {
        "line": 40,
        "fullcodeline": "colorchannels = 1;"
    },
    {
        "line": 44,
        "fullcodeline": "colorchannels = 3;"
    },
    {
        "line": 53,
        "fullcodeline": "rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;"
    },
    {
        "line": 54,
        "fullcodeline": "nrow = (row + rowstoread > h ? h - row : rowstoread);"
    },
    {
        "line": 55,
        "fullcodeline": "offset_row = row + img->row_offset;"
    },
    {
        "line": 114,
        "fullcodeline": "pos = ((row + img->row_offset) % rowsperstrip) * scanline + \\"
    },
    {
        "line": 116,
        "fullcodeline": "(*put)(img, raster+y*w, 0, y, w, nrow, fromskew, toskew, p0 + pos, p1 + pos,"
    },
    {
        "line": 118,
        "fullcodeline": "y += ((flip & FLIP_VERTICALLY) ? -(int32) nrow : (int32) nrow);"
    },
    {
        "line": 31,
        "fullcodeline": "y = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "toskew = -(int32)(w - w);"
    },
    {
        "line": 56,
        "fullcodeline": "if( buf == NULL )"
    },
    {
        "line": 87,
        "fullcodeline": "if (colorchannels > 1"
    },
    {
        "line": 95,
        "fullcodeline": "if (colorchannels > 1"
    },
    {
        "line": 117,
        "fullcodeline": "p2 + pos, (alpha?(pa+pos):NULL));"
    },
    {
        "line": 124,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 67,
        "fullcodeline": "p0 = buf;"
    },
    {
        "line": 92,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 100,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "((tmsize_t) img->col_offset * img->samplesperpixel);"
    },
    {
        "line": 125,
        "fullcodeline": "uint32 *left = raster + (line * w);"
    },
    {
        "line": 126,
        "fullcodeline": "uint32 *right = left + w - 1;"
    },
    {
        "line": 58,
        "fullcodeline": "if (_TIFFReadEncodedStripAndAllocBuffer("
    },
    {
        "line": 68,
        "fullcodeline": "if( colorchannels == 1 )"
    },
    {
        "line": 88,
        "fullcodeline": "&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),"
    },
    {
        "line": 96,
        "fullcodeline": "&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),"
    },
    {
        "line": 105,
        "fullcodeline": "if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),"
    },
    {
        "line": 128,
        "fullcodeline": "while ( left < right ) {"
    },
    {
        "line": 62,
        "fullcodeline": "&& (buf == NULL || img->stoponerr))"
    },
    {
        "line": 64,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "p2 = p1 = p0;"
    },
    {
        "line": 71,
        "fullcodeline": "pa = (alpha?(p0+3*stripsize):NULL);"
    },
    {
        "line": 80,
        "fullcodeline": "else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),"
    },
    {
        "line": 89,
        "fullcodeline": "p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)"
    },
    {
        "line": 97,
        "fullcodeline": "p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)"
    },
    {
        "line": 109,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 129,
        "fullcodeline": "uint32 temp = *left;"
    },
    {
        "line": 130,
        "fullcodeline": "*left = *right;"
    },
    {
        "line": 131,
        "fullcodeline": "*right = temp;"
    },
    {
        "line": 132,
        "fullcodeline": "left++;"
    },
    {
        "line": 133,
        "fullcodeline": "right--;"
    },
    {
        "line": 61,
        "fullcodeline": "((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)"
    },
    {
        "line": 75,
        "fullcodeline": "p1 = p0 + stripsize;"
    },
    {
        "line": 76,
        "fullcodeline": "p2 = p1 + stripsize;"
    },
    {
        "line": 77,
        "fullcodeline": "pa = (alpha?(p2+stripsize):NULL);"
    },
    {
        "line": 84,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)"
    },
    {
        "line": 59,
        "fullcodeline": "tif, TIFFComputeStrip(tif, offset_row, 0),"
    },
    {
        "line": 81,
        "fullcodeline": "p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)"
    }
]