[
    {
        "line": 3,
        "fullcodeline": "TIFF* tif = img->tif;"
    },
    {
        "line": 7,
        "fullcodeline": "unsigned char* buf = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "uint32 imagewidth = img->width;"
    },
    {
        "line": 13,
        "fullcodeline": "int ret = 1, flip;"
    },
    {
        "line": 16,
        "fullcodeline": "TIFFGetFieldDefaulted(tif, TIFFTAG_YCBCRSUBSAMPLING, &subsamplinghor, &subsamplingver);"
    },
    {
        "line": 22,
        "fullcodeline": "maxstripsize = TIFFStripSize(tif);"
    },
    {
        "line": 24,
        "fullcodeline": "flip = setorientation(img);"
    },
    {
        "line": 33,
        "fullcodeline": "TIFFGetFieldDefaulted(tif, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);"
    },
    {
        "line": 35,
        "fullcodeline": "scanline = TIFFScanlineSize(tif);"
    },
    {
        "line": 36,
        "fullcodeline": "fromskew = (w < imagewidth ? imagewidth - w : 0);"
    },
    {
        "line": 78,
        "fullcodeline": "_TIFFfree(buf);"
    },
    {
        "line": 17,
        "fullcodeline": "if( subsamplingver == 0 ) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (flip & FLIP_VERTICALLY) {"
    },
    {
        "line": 37,
        "fullcodeline": "for (row = 0; row < h; row += nrow)"
    },
    {
        "line": 61,
        "fullcodeline": "if (flip & FLIP_HORIZONTALLY) {"
    },
    {
        "line": 18,
        "fullcodeline": "TIFFErrorExt(tif->tif_clientdata, TIFFFileName(tif), \"Invalid vertical YCbCr subsampling\");"
    },
    {
        "line": 26,
        "fullcodeline": "y = h - 1;"
    },
    {
        "line": 27,
        "fullcodeline": "toskew = -(int32)(w + w);"
    },
    {
        "line": 39,
        "fullcodeline": "rowstoread = rowsperstrip - (row + img->row_offset) % rowsperstrip;"
    },
    {
        "line": 40,
        "fullcodeline": "nrow = (row + rowstoread > h ? h - row : rowstoread);"
    },
    {
        "line": 41,
        "fullcodeline": "nrowsub = nrow;"
    },
    {
        "line": 55,
        "fullcodeline": "pos = ((row + img->row_offset) % rowsperstrip) * scanline + \\"
    },
    {
        "line": 57,
        "fullcodeline": "(*put)(img, raster+y*w, 0, y, w, nrow, fromskew, toskew, buf + pos);"
    },
    {
        "line": 58,
        "fullcodeline": "y += ((flip & FLIP_VERTICALLY) ? -(int32) nrow : (int32) nrow);"
    },
    {
        "line": 29,
        "fullcodeline": "y = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "toskew = -(int32)(w - w);"
    },
    {
        "line": 42,
        "fullcodeline": "if ((nrowsub%subsamplingver)!=0)"
    },
    {
        "line": 44,
        "fullcodeline": "if (_TIFFReadEncodedStripAndAllocBuffer(tif,"
    },
    {
        "line": 64,
        "fullcodeline": "for (line = 0; line < h; line++) {"
    },
    {
        "line": 43,
        "fullcodeline": "nrowsub+=subsamplingver-nrowsub%subsamplingver;"
    },
    {
        "line": 49,
        "fullcodeline": "&& (buf == NULL || img->stoponerr))"
    },
    {
        "line": 51,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "((tmsize_t) img->col_offset * img->samplesperpixel);"
    },
    {
        "line": 65,
        "fullcodeline": "uint32 *left = raster + (line * w);"
    },
    {
        "line": 66,
        "fullcodeline": "uint32 *right = left + w - 1;"
    },
    {
        "line": 48,
        "fullcodeline": "((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)"
    },
    {
        "line": 68,
        "fullcodeline": "while ( left < right ) {"
    },
    {
        "line": 45,
        "fullcodeline": "TIFFComputeStrip(tif,row+img->row_offset, 0),"
    },
    {
        "line": 69,
        "fullcodeline": "uint32 temp = *left;"
    },
    {
        "line": 70,
        "fullcodeline": "*left = *right;"
    },
    {
        "line": 71,
        "fullcodeline": "*right = temp;"
    },
    {
        "line": 72,
        "fullcodeline": "left++;"
    },
    {
        "line": 73,
        "fullcodeline": "right--;"
    }
]