[
    {
        "line": 3,
        "fullcodeline": "const auto& sig_def_map = meta_graph_def.signature_def();"
    },
    {
        "line": 4,
        "fullcodeline": "const auto& init_op_sig_it ="
    },
    {
        "line": 13,
        "fullcodeline": "const auto& collection_def_map = meta_graph_def.collection_def();"
    },
    {
        "line": 22,
        "fullcodeline": "const auto init_op_it = collection_def_map.find(init_op_collection_key);"
    },
    {
        "line": 5,
        "fullcodeline": "meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);"
    },
    {
        "line": 6,
        "fullcodeline": "if (init_op_sig_it != sig_def_map.end()) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (init_op_it != collection_def_map.end()) {"
    },
    {
        "line": 30,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 7,
        "fullcodeline": "*init_op_name = init_op_sig_it->second.outputs()"
    },
    {
        "line": 15,
        "fullcodeline": "if (collection_def_map.find(kSavedModelMainOpKey) !="
    },
    {
        "line": 16,
        "fullcodeline": "collection_def_map.end()) {"
    },
    {
        "line": 17,
        "fullcodeline": "init_op_collection_key = kSavedModelMainOpKey;"
    },
    {
        "line": 10,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 19,
        "fullcodeline": "init_op_collection_key = kSavedModelLegacyInitOpKey;"
    },
    {
        "line": 28,
        "fullcodeline": "*init_op_name = init_op_it->second.node_list().value(0);"
    },
    {
        "line": 24,
        "fullcodeline": "if (init_op_it->second.node_list().value_size() != 1) {"
    },
    {
        "line": 25,
        "fullcodeline": "return errors::FailedPrecondition("
    },
    {
        "line": 26,
        "fullcodeline": "strings::StrCat(\"Expected exactly one main op in : \", export_dir));"
    }
]