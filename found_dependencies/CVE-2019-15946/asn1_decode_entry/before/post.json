[
    {
        "line": 4,
        "fullcodeline": "void *parm = entry->parm;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t *len = (size_t *) entry->arg;"
    },
    {
        "line": 8,
        "fullcodeline": "int r = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "callback_func = parm;"
    },
    {
        "line": 12,
        "fullcodeline": "sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s', raw data:%s%s\\n\","
    },
    {
        "line": 185,
        "fullcodeline": "entry->flags |= SC_ASN1_PRESENT;"
    },
    {
        "line": 14,
        "fullcodeline": "sc_dump_hex(obj, objlen > 16  ? 16 : objlen),"
    },
    {
        "line": 15,
        "fullcodeline": "objlen > 16 ? \"...\" : \"\");"
    },
    {
        "line": 177,
        "fullcodeline": "sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"invalid ASN.1 type: %d\\n\", entry->type);"
    },
    {
        "line": 181,
        "fullcodeline": "sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"decoding of ASN.1 object '%s' failed: %s\\n\", entry->name,"
    },
    {
        "line": 19,
        "fullcodeline": "if (parm != NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (parm != NULL)"
    },
    {
        "line": 75,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 124,
        "fullcodeline": "if (parm != NULL)"
    },
    {
        "line": 129,
        "fullcodeline": "if (parm != NULL) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (entry->parm != NULL)"
    },
    {
        "line": 152,
        "fullcodeline": "if (entry->parm != NULL) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (entry->parm != NULL)"
    },
    {
        "line": 165,
        "fullcodeline": "if (entry->parm != NULL)"
    },
    {
        "line": 169,
        "fullcodeline": "if (entry->parm != NULL)"
    },
    {
        "line": 173,
        "fullcodeline": "if (entry->parm != NULL)"
    },
    {
        "line": 182,
        "fullcodeline": "sc_strerror(r));"
    },
    {
        "line": 20,
        "fullcodeline": "r = asn1_decode(ctx, (struct sc_asn1_entry *) parm, obj,"
    },
    {
        "line": 39,
        "fullcodeline": "r = sc_asn1_decode_integer(obj, objlen, (int *) entry->parm);"
    },
    {
        "line": 40,
        "fullcodeline": "sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s' returned %d\\n\", depth, depth, \"\","
    },
    {
        "line": 47,
        "fullcodeline": "int invert = entry->type == SC_ASN1_BIT_STRING ? 1 : 0;"
    },
    {
        "line": 48,
        "fullcodeline": "assert(len != NULL);"
    },
    {
        "line": 63,
        "fullcodeline": "r = decode_bit_string(obj, objlen, (u8 *) parm, *len, invert);"
    },
    {
        "line": 72,
        "fullcodeline": "r = decode_bit_field(obj, objlen, (u8 *) parm, *len);"
    },
    {
        "line": 77,
        "fullcodeline": "assert(len != NULL);"
    },
    {
        "line": 99,
        "fullcodeline": "memcpy(parm, obj, c);"
    },
    {
        "line": 100,
        "fullcodeline": "*len = c;"
    },
    {
        "line": 106,
        "fullcodeline": "assert(len != NULL);"
    },
    {
        "line": 119,
        "fullcodeline": "memcpy(parm, obj, c);"
    },
    {
        "line": 120,
        "fullcodeline": "*len = c;"
    },
    {
        "line": 125,
        "fullcodeline": "r = sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm);"
    },
    {
        "line": 130,
        "fullcodeline": "assert(len != NULL);"
    },
    {
        "line": 141,
        "fullcodeline": "r = sc_asn1_decode_utf8string(obj, objlen, (u8 *) parm, len);"
    },
    {
        "line": 149,
        "fullcodeline": "r = asn1_decode_path(ctx, obj, objlen, (sc_path_t *) parm, depth);"
    },
    {
        "line": 153,
        "fullcodeline": "struct sc_pkcs15_id *id = (struct sc_pkcs15_id *) parm;"
    },
    {
        "line": 154,
        "fullcodeline": "size_t c = objlen > sizeof(id->value) ? sizeof(id->value) : objlen;"
    },
    {
        "line": 156,
        "fullcodeline": "memcpy(id->value, obj, c);"
    },
    {
        "line": 157,
        "fullcodeline": "id->len = c;"
    },
    {
        "line": 162,
        "fullcodeline": "r = asn1_decode_p15_object(ctx, obj, objlen, (struct sc_asn1_pkcs15_object *) parm, depth);"
    },
    {
        "line": 166,
        "fullcodeline": "r = sc_asn1_decode_algorithm_id(ctx, obj, objlen, (struct sc_algorithm_id *) parm, depth);"
    },
    {
        "line": 170,
        "fullcodeline": "r = asn1_decode_se_info(ctx, obj, objlen, (sc_pkcs15_sec_env_info_t ***)entry->parm, len, depth);"
    },
    {
        "line": 174,
        "fullcodeline": "r = callback_func(ctx, entry->arg, obj, objlen, depth);"
    },
    {
        "line": 27,
        "fullcodeline": "if (objlen != 1) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (objlen < 1) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (entry->flags & SC_ASN1_ALLOC) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (r >= 0) {"
    },
    {
        "line": 80,
        "fullcodeline": "if ((entry->flags & SC_ASN1_UNSIGNED)"
    },
    {
        "line": 87,
        "fullcodeline": "if (entry->flags & SC_ASN1_ALLOC) {"
    },
    {
        "line": 107,
        "fullcodeline": "if (entry->flags & SC_ASN1_ALLOC) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (entry->flags & SC_ASN1_ALLOC) {"
    },
    {
        "line": 142,
        "fullcodeline": "if (entry->flags & SC_ASN1_ALLOC) {"
    },
    {
        "line": 21,
        "fullcodeline": "objlen, NULL, NULL, 0, depth + 1);"
    },
    {
        "line": 31,
        "fullcodeline": "r = SC_ERROR_INVALID_ASN1_OBJECT;"
    },
    {
        "line": 41,
        "fullcodeline": "entry->name, *((int *) entry->parm));"
    },
    {
        "line": 50,
        "fullcodeline": "r = SC_ERROR_INVALID_ASN1_OBJECT;"
    },
    {
        "line": 54,
        "fullcodeline": "u8 **buf = (u8 **) parm;"
    },
    {
        "line": 55,
        "fullcodeline": "*buf = malloc(objlen-1);"
    },
    {
        "line": 60,
        "fullcodeline": "*len = objlen-1;"
    },
    {
        "line": 61,
        "fullcodeline": "parm = *buf;"
    },
    {
        "line": 65,
        "fullcodeline": "*len = r;"
    },
    {
        "line": 66,
        "fullcodeline": "r = 0;"
    },
    {
        "line": 81,
        "fullcodeline": "&& obj[0] == 0x00 && objlen > 1) {"
    },
    {
        "line": 82,
        "fullcodeline": "objlen--;"
    },
    {
        "line": 83,
        "fullcodeline": "obj++;"
    },
    {
        "line": 88,
        "fullcodeline": "u8 **buf = (u8 **) parm;"
    },
    {
        "line": 89,
        "fullcodeline": "*buf = malloc(objlen);"
    },
    {
        "line": 94,
        "fullcodeline": "c = *len = objlen;"
    },
    {
        "line": 95,
        "fullcodeline": "parm = *buf;"
    },
    {
        "line": 108,
        "fullcodeline": "u8 **buf = (u8 **) parm;"
    },
    {
        "line": 109,
        "fullcodeline": "*buf = malloc(objlen);"
    },
    {
        "line": 114,
        "fullcodeline": "c = *len = objlen;"
    },
    {
        "line": 115,
        "fullcodeline": "parm = *buf;"
    },
    {
        "line": 132,
        "fullcodeline": "u8 **buf = (u8 **) parm;"
    },
    {
        "line": 133,
        "fullcodeline": "*buf = malloc(objlen+1);"
    },
    {
        "line": 138,
        "fullcodeline": "*len = objlen+1;"
    },
    {
        "line": 139,
        "fullcodeline": "parm = *buf;"
    },
    {
        "line": 143,
        "fullcodeline": "*len -= 1;"
    },
    {
        "line": 33,
        "fullcodeline": "*((int *) parm) = obj[0] ? 1 : 0;"
    },
    {
        "line": 56,
        "fullcodeline": "if (*buf == NULL) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (*buf == NULL) {"
    },
    {
        "line": 97,
        "fullcodeline": "c = objlen > *len ? *len : objlen;"
    },
    {
        "line": 110,
        "fullcodeline": "if (*buf == NULL) {"
    },
    {
        "line": 117,
        "fullcodeline": "c = objlen > *len ? *len : objlen;"
    },
    {
        "line": 134,
        "fullcodeline": "if (*buf == NULL) {"
    },
    {
        "line": 57,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    },
    {
        "line": 91,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    },
    {
        "line": 111,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    },
    {
        "line": 135,
        "fullcodeline": "r = SC_ERROR_OUT_OF_MEMORY;"
    }
]