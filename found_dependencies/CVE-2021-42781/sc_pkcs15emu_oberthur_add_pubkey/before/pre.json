[
    {
        "line": 4,
        "fullcodeline": "struct sc_context *ctx = p15card->card->ctx;"
    },
    {
        "line": 7,
        "fullcodeline": "char ch_tmp[0x100];"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned char *info_blob = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "LOG_FUNC_CALLED(ctx);"
    },
    {
        "line": 14,
        "fullcodeline": "sc_log(ctx, \"public key(file-id:%04X,size:%X)\", file_id, size);"
    },
    {
        "line": 16,
        "fullcodeline": "memset(&key_info, 0, sizeof(key_info));"
    },
    {
        "line": 17,
        "fullcodeline": "memset(&key_obj, 0, sizeof(key_obj));"
    },
    {
        "line": 19,
        "fullcodeline": "snprintf(ch_tmp, sizeof(ch_tmp), \"%s%04X\", AWP_OBJECTS_DF_PUB, file_id | 0x100);"
    },
    {
        "line": 20,
        "fullcodeline": "rv = sc_oberthur_read_file(p15card, ch_tmp, &info_blob, &info_len, 1);"
    },
    {
        "line": 21,
        "fullcodeline": "LOG_TEST_RET(ctx, rv, \"Failed to add public key: read oberthur file error\");"
    },
    {
        "line": 24,
        "fullcodeline": "offs = 2;"
    },
    {
        "line": 29,
        "fullcodeline": "flags = *(info_blob + 0) * 0x100 + *(info_blob + 1);"
    },
    {
        "line": 30,
        "fullcodeline": "key_info.usage = sc_oberthur_decode_usage(flags);"
    },
    {
        "line": 33,
        "fullcodeline": "sc_log(ctx, \"Public key key-usage:%04X\", key_info.usage);"
    },
    {
        "line": 40,
        "fullcodeline": "len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;"
    },
    {
        "line": 46,
        "fullcodeline": "offs += 2 + len;"
    },
    {
        "line": 53,
        "fullcodeline": "len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;"
    },
    {
        "line": 60,
        "fullcodeline": "memcpy(key_info.id.value, info_blob + offs + 2, len);"
    },
    {
        "line": 61,
        "fullcodeline": "key_info.id.len = len;"
    },
    {
        "line": 63,
        "fullcodeline": "free(info_blob);"
    },
    {
        "line": 67,
        "fullcodeline": "snprintf(ch_tmp, sizeof(ch_tmp), \"%s%04X\", AWP_OBJECTS_DF_PUB, file_id);"
    },
    {
        "line": 68,
        "fullcodeline": "sc_format_path(ch_tmp, &key_info.path);"
    },
    {
        "line": 70,
        "fullcodeline": "key_info.native = 1;"
    },
    {
        "line": 71,
        "fullcodeline": "key_info.key_reference = file_id & 0xFF;"
    },
    {
        "line": 72,
        "fullcodeline": "key_info.modulus_length = size;"
    },
    {
        "line": 74,
        "fullcodeline": "rv = sc_pkcs15emu_add_rsa_pubkey(p15card, &key_obj, &key_info);"
    },
    {
        "line": 76,
        "fullcodeline": "LOG_FUNC_RETURN(ctx, rv);"
    },
    {
        "line": 25,
        "fullcodeline": "if (offs > info_len) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (flags & OBERTHUR_ATTR_MODIFIABLE)"
    },
    {
        "line": 36,
        "fullcodeline": "if (offs + 2 > info_len) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (offs + 2 > info_len) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (len == 0"
    },
    {
        "line": 26,
        "fullcodeline": "free(info_blob);"
    },
    {
        "line": 27,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'tag'\");"
    },
    {
        "line": 32,
        "fullcodeline": "key_obj.flags = SC_PKCS15_CO_FLAG_MODIFIABLE;"
    },
    {
        "line": 37,
        "fullcodeline": "free(info_blob);"
    },
    {
        "line": 38,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'Label'\");"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(key_obj.label, info_blob + offs + 2, len);"
    },
    {
        "line": 50,
        "fullcodeline": "free(info_blob);"
    },
    {
        "line": 51,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'ID'\");"
    },
    {
        "line": 56,
        "fullcodeline": "|| offs + 2 + len > info_len) {"
    },
    {
        "line": 57,
        "fullcodeline": "free(info_blob);"
    },
    {
        "line": 58,
        "fullcodeline": "LOG_TEST_RET(ctx, SC_ERROR_INVALID_DATA, \"Failed to add public key: invalid 'ID' length\");"
    },
    {
        "line": 42,
        "fullcodeline": "if (len > sizeof(key_obj.label) - 1)"
    },
    {
        "line": 55,
        "fullcodeline": "|| len > sizeof(key_info.id.value)"
    },
    {
        "line": 43,
        "fullcodeline": "len = sizeof(key_obj.label) - 1;"
    }
]