[
    {
        "line": 9,
        "fullcodeline": "struct sctp_chunk *chunk = arg;"
    },
    {
        "line": 11,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "new_asoc = sctp_unpack_cookie(ep, asoc, chunk, GFP_ATOMIC, &error,"
    },
    {
        "line": 67,
        "fullcodeline": "action = sctp_tietags_compare(new_asoc, asoc);"
    },
    {
        "line": 96,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SET_ASOC, SCTP_ASOC(new_asoc));"
    },
    {
        "line": 97,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_DELETE_TCB, SCTP_NULL());"
    },
    {
        "line": 102,
        "fullcodeline": "sctp_add_cmd_sf(commands, SCTP_CMD_SET_ASOC,"
    },
    {
        "line": 20,
        "fullcodeline": "if (!sctp_chunk_length_valid(chunk, sizeof(sctp_chunkhdr_t)))"
    },
    {
        "line": 28,
        "fullcodeline": "if (!pskb_pull(chunk->skb, ntohs(chunk->chunk_hdr->length) -"
    },
    {
        "line": 46,
        "fullcodeline": "if (!new_asoc) {"
    },
    {
        "line": 103,
        "fullcodeline": "SCTP_ASOC((struct sctp_association *)asoc));"
    },
    {
        "line": 71,
        "fullcodeline": "retval = sctp_sf_do_dupcook_a(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 76,
        "fullcodeline": "retval = sctp_sf_do_dupcook_b(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 81,
        "fullcodeline": "retval = sctp_sf_do_dupcook_c(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 86,
        "fullcodeline": "retval = sctp_sf_do_dupcook_d(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 91,
        "fullcodeline": "retval = sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 21,
        "fullcodeline": "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,"
    },
    {
        "line": 51,
        "fullcodeline": "case -SCTP_IERROR_NOMEM:"
    },
    {
        "line": 54,
        "fullcodeline": "case -SCTP_IERROR_STALE_COOKIE:"
    },
    {
        "line": 55,
        "fullcodeline": "sctp_send_stale_cookie_err(net, ep, asoc, chunk, commands,"
    },
    {
        "line": 58,
        "fullcodeline": "case -SCTP_IERROR_BAD_SIG:"
    },
    {
        "line": 57,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    },
    {
        "line": 60,
        "fullcodeline": "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"
    }
]