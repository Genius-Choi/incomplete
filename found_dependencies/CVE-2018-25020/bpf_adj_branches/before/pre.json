[
    {
        "line": 3,
        "fullcodeline": "struct bpf_insn *insn = prog->insnsi;"
    },
    {
        "line": 4,
        "fullcodeline": "u32 i, insn_cnt = prog->len;"
    },
    {
        "line": 9,
        "fullcodeline": "for (i = 0; i < insn_cnt; i++, insn++) {"
    },
    {
        "line": 10,
        "fullcodeline": "code = insn->code;"
    },
    {
        "line": 23,
        "fullcodeline": "off = pseudo_call ? insn->imm : insn->off;"
    },
    {
        "line": 11,
        "fullcodeline": "if (BPF_CLASS(code) != BPF_JMP)"
    },
    {
        "line": 13,
        "fullcodeline": "if (BPF_OP(code) == BPF_EXIT)"
    },
    {
        "line": 15,
        "fullcodeline": "if (BPF_OP(code) == BPF_CALL) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (i < pos && i + off + 1 > pos)"
    },
    {
        "line": 27,
        "fullcodeline": "off += delta;"
    },
    {
        "line": 32,
        "fullcodeline": "insn->imm = off;"
    },
    {
        "line": 16,
        "fullcodeline": "if (insn->src_reg == BPF_PSEUDO_CALL)"
    },
    {
        "line": 21,
        "fullcodeline": "pseudo_call = false;"
    },
    {
        "line": 34,
        "fullcodeline": "insn->off = off;"
    },
    {
        "line": 17,
        "fullcodeline": "pseudo_call = true;"
    },
    {
        "line": 28,
        "fullcodeline": "else if (i > pos + delta && i + off + 1 <= pos + delta)"
    },
    {
        "line": 29,
        "fullcodeline": "off -= delta;"
    }
]