[
    {
        "line": 4,
        "fullcodeline": "disconnect(socket, &QAbstractSocket::disconnected, socket, &QObject::deleteLater);"
    },
    {
        "line": 8,
        "fullcodeline": "QMap< QString, LanDeviceLink* >::iterator linkIterator = m_links.find(deviceId);"
    },
    {
        "line": 24,
        "fullcodeline": "Q_EMIT onConnectionReceived(*receivedPacket, deviceLink);"
    },
    {
        "line": 9,
        "fullcodeline": "if (linkIterator != m_links.end()) {"
    },
    {
        "line": 11,
        "fullcodeline": "deviceLink = linkIterator.value();"
    },
    {
        "line": 12,
        "fullcodeline": "deviceLink->reset(socket, connectionOrigin);"
    },
    {
        "line": 14,
        "fullcodeline": "deviceLink = new LanDeviceLink(deviceId, this, socket, connectionOrigin);"
    },
    {
        "line": 15,
        "fullcodeline": "connect(deviceLink, &QObject::destroyed, this, &LanLinkProvider::deviceLinkDestroyed);"
    },
    {
        "line": 16,
        "fullcodeline": "m_links[deviceId] = deviceLink;"
    },
    {
        "line": 17,
        "fullcodeline": "if (m_pairingHandlers.contains(deviceId)) {"
    },
    {
        "line": 20,
        "fullcodeline": "Q_ASSERT(m_pairingHandlers.contains(deviceId));"
    },
    {
        "line": 21,
        "fullcodeline": "m_pairingHandlers[deviceId]->setDeviceLink(deviceLink);"
    }
]