[
    {
        "line": 11,
        "fullcodeline": "*p = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "pack = rad_packet_alloc(0);"
    },
    {
        "line": 18,
        "fullcodeline": "ptr = mempool_alloc(buf_pool);"
    },
    {
        "line": 24,
        "fullcodeline": "pack->buf = ptr;"
    },
    {
        "line": 25,
        "fullcodeline": "clock_gettime(CLOCK_MONOTONIC, &pack->tv);"
    },
    {
        "line": 50,
        "fullcodeline": "pack->code = *ptr; ptr++;"
    },
    {
        "line": 51,
        "fullcodeline": "pack->id = *ptr; ptr++;"
    },
    {
        "line": 52,
        "fullcodeline": "pack->len = ntohs(*(uint16_t*)ptr); ptr += 2;"
    },
    {
        "line": 59,
        "fullcodeline": "ptr += 16;"
    },
    {
        "line": 60,
        "fullcodeline": "n -= 20;"
    },
    {
        "line": 156,
        "fullcodeline": "*p = pack;"
    },
    {
        "line": 161,
        "fullcodeline": "rad_packet_free(pack);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!pack)"
    },
    {
        "line": 19,
        "fullcodeline": "if (ptr == MAP_FAILED) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (n < 20) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (pack->len > n) {"
    },
    {
        "line": 62,
        "fullcodeline": "while (n>0) {"
    },
    {
        "line": 20,
        "fullcodeline": "log_emerg(\"radius:packet: out of memory\\n\");"
    },
    {
        "line": 46,
        "fullcodeline": "log_ppp_warn(\"radius:packet: short packed received (%i)\\n\", n);"
    },
    {
        "line": 55,
        "fullcodeline": "log_ppp_warn(\"radius:packet: short packet received %i, expected %i\\n\", pack->len, n);"
    },
    {
        "line": 63,
        "fullcodeline": "id = *ptr; ptr++;"
    },
    {
        "line": 64,
        "fullcodeline": "len = *ptr - 2; ptr++;"
    },
    {
        "line": 100,
        "fullcodeline": "da = rad_dict_find_attr_id(vendor, id);"
    },
    {
        "line": 152,
        "fullcodeline": "ptr += len;"
    },
    {
        "line": 153,
        "fullcodeline": "n -= 2 + len;"
    },
    {
        "line": 32,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (len < 0) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (2 + len > n) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (id == 26) {"
    },
    {
        "line": 29,
        "fullcodeline": "n = recvfrom(fd, pack->buf, REQ_LENGTH_MAX, 0, addr, &addr_len);"
    },
    {
        "line": 33,
        "fullcodeline": "rad_packet_free(pack);"
    },
    {
        "line": 66,
        "fullcodeline": "log_ppp_warn(\"radius:packet short attribute len received\\n\");"
    },
    {
        "line": 70,
        "fullcodeline": "log_ppp_warn(\"radius:packet: too long attribute received (%i, %i)\\n\", id, len);"
    },
    {
        "line": 74,
        "fullcodeline": "vendor_id = ntohl(*(uint32_t *)ptr);"
    },
    {
        "line": 75,
        "fullcodeline": "vendor = rad_dict_find_vendor_id(vendor_id);"
    },
    {
        "line": 102,
        "fullcodeline": "attr = mempool_alloc(attr_pool);"
    },
    {
        "line": 107,
        "fullcodeline": "memset(attr, 0, sizeof(*attr));"
    },
    {
        "line": 108,
        "fullcodeline": "attr->vendor = vendor;"
    },
    {
        "line": 109,
        "fullcodeline": "attr->attr = da;"
    },
    {
        "line": 110,
        "fullcodeline": "attr->len = len;"
    },
    {
        "line": 111,
        "fullcodeline": "attr->raw = ptr;"
    },
    {
        "line": 149,
        "fullcodeline": "list_add_tail(&attr->entry, &pack->attrs);"
    },
    {
        "line": 31,
        "fullcodeline": "n = read(fd, pack->buf, REQ_LENGTH_MAX);"
    },
    {
        "line": 34,
        "fullcodeline": "if (errno == EAGAIN)"
    },
    {
        "line": 37,
        "fullcodeline": "if (errno != ECONNREFUSED)"
    },
    {
        "line": 40,
        "fullcodeline": "return -1;"
    },
    {
        "line": 99,
        "fullcodeline": "vendor = NULL;"
    },
    {
        "line": 103,
        "fullcodeline": "if (!attr) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (!da->array) {"
    },
    {
        "line": 151,
        "fullcodeline": "log_ppp_warn(\"radius:packet: unknown attribute received (%i,%i)\\n\", vendor ? vendor->id : 0, id);"
    },
    {
        "line": 38,
        "fullcodeline": "log_ppp_error(\"radius:packet:read: %s\\n\", strerror(errno));"
    },
    {
        "line": 77,
        "fullcodeline": "ptr += 4;"
    },
    {
        "line": 84,
        "fullcodeline": "ptr += vendor->tag;"
    },
    {
        "line": 91,
        "fullcodeline": "ptr += vendor->len;"
    },
    {
        "line": 93,
        "fullcodeline": "len -= vendor->tag + vendor->len;"
    },
    {
        "line": 95,
        "fullcodeline": "n -= 4 + vendor->tag + vendor->len;"
    },
    {
        "line": 104,
        "fullcodeline": "log_emerg(\"radius:packet: out of memory\\n\");"
    },
    {
        "line": 79,
        "fullcodeline": "if (vendor->tag == 2)"
    },
    {
        "line": 86,
        "fullcodeline": "if (vendor->len == 2)"
    },
    {
        "line": 97,
        "fullcodeline": "log_ppp_warn(\"radius:packet: vendor %i not found\\n\", id);"
    },
    {
        "line": 80,
        "fullcodeline": "id = (uint16_t)ntohs(*(uint16_t *)ptr);"
    },
    {
        "line": 87,
        "fullcodeline": "len = (uint16_t)ntohs(*(uint16_t *)ptr);"
    },
    {
        "line": 116,
        "fullcodeline": "attr->alloc = 1;"
    },
    {
        "line": 117,
        "fullcodeline": "attr->val.string = _malloc(len + 1);"
    },
    {
        "line": 118,
        "fullcodeline": "memcpy(attr->val.string, ptr, len);"
    },
    {
        "line": 119,
        "fullcodeline": "attr->val.string[len] = 0;"
    },
    {
        "line": 124,
        "fullcodeline": "attr->val.octets = ptr;"
    },
    {
        "line": 140,
        "fullcodeline": "memcpy(&attr->val.integer, ptr, len);"
    },
    {
        "line": 143,
        "fullcodeline": "attr->val.ipv6prefix.len = ptr[1];"
    },
    {
        "line": 144,
        "fullcodeline": "memset(&attr->val.ipv6prefix.prefix, 0, sizeof(attr->val.ipv6prefix.prefix));"
    },
    {
        "line": 145,
        "fullcodeline": "memcpy(&attr->val.ipv6prefix.prefix, ptr + 2, len - 2);"
    },
    {
        "line": 82,
        "fullcodeline": "id = *ptr;"
    },
    {
        "line": 89,
        "fullcodeline": "len = *ptr;"
    },
    {
        "line": 127,
        "fullcodeline": "if (len != da->size)"
    },
    {
        "line": 130,
        "fullcodeline": "if (len == 4)"
    },
    {
        "line": 128,
        "fullcodeline": "log_ppp_warn(\"radius:packet: attribute %s has invalid length %i (must be %i)\\n\", da->name, len, da->size);"
    },
    {
        "line": 131,
        "fullcodeline": "attr->val.integer = ntohl(*(uint32_t*)ptr);"
    },
    {
        "line": 132,
        "fullcodeline": "else if (len == 2)"
    },
    {
        "line": 133,
        "fullcodeline": "attr->val.integer = ntohs(*(uint16_t*)ptr);"
    },
    {
        "line": 134,
        "fullcodeline": "else if (len == 1)"
    },
    {
        "line": 135,
        "fullcodeline": "attr->val.integer = *ptr;"
    }
]