[
    {
        "line": 5,
        "fullcodeline": "struct hid_device *djrcv_hdev = djrcv_dev->hdev;"
    },
    {
        "line": 6,
        "fullcodeline": "struct usb_interface *intf = to_usb_interface(djrcv_hdev->dev.parent);"
    },
    {
        "line": 7,
        "fullcodeline": "struct usb_device *usbdev = interface_to_usbdev(intf);"
    },
    {
        "line": 14,
        "fullcodeline": "unsigned char tmpstr[3];"
    },
    {
        "line": 29,
        "fullcodeline": "dj_hiddev = hid_allocate_device();"
    },
    {
        "line": 36,
        "fullcodeline": "dj_hiddev->ll_driver = &logi_dj_ll_driver;"
    },
    {
        "line": 39,
        "fullcodeline": "dj_hiddev->bus = BUS_USB;"
    },
    {
        "line": 40,
        "fullcodeline": "dj_hiddev->vendor = le16_to_cpu(usbdev->descriptor.idVendor);"
    },
    {
        "line": 41,
        "fullcodeline": "dj_hiddev->product = le16_to_cpu(usbdev->descriptor.idProduct);"
    },
    {
        "line": 42,
        "fullcodeline": "snprintf(dj_hiddev->name, sizeof(dj_hiddev->name),"
    },
    {
        "line": 48,
        "fullcodeline": "snprintf(tmpstr, sizeof(tmpstr), \":%d\", dj_report->device_index);"
    },
    {
        "line": 49,
        "fullcodeline": "strlcat(dj_hiddev->phys, tmpstr, sizeof(dj_hiddev->phys));"
    },
    {
        "line": 51,
        "fullcodeline": "dj_dev = kzalloc(sizeof(struct dj_device), GFP_KERNEL);"
    },
    {
        "line": 59,
        "fullcodeline": "dj_dev->reports_supported = get_unaligned_le32("
    },
    {
        "line": 61,
        "fullcodeline": "dj_dev->hdev = dj_hiddev;"
    },
    {
        "line": 62,
        "fullcodeline": "dj_dev->dj_receiver_dev = djrcv_dev;"
    },
    {
        "line": 63,
        "fullcodeline": "dj_dev->device_index = dj_report->device_index;"
    },
    {
        "line": 64,
        "fullcodeline": "dj_hiddev->driver_data = dj_dev;"
    },
    {
        "line": 77,
        "fullcodeline": "djrcv_dev->paired_dj_devices[dj_report->device_index] = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "if (dj_report->report_params[DEVICE_PAIRED_PARAM_SPFUNCTION] &"
    },
    {
        "line": 30,
        "fullcodeline": "if (IS_ERR(dj_hiddev)) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (!dj_dev) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (hid_add_device(dj_hiddev)) {"
    },
    {
        "line": 18,
        "fullcodeline": "dbg_hid(\"%s: device list is empty\\n\", __func__);"
    },
    {
        "line": 19,
        "fullcodeline": "djrcv_dev->querying_devices = false;"
    },
    {
        "line": 60,
        "fullcodeline": "dj_report->report_params + DEVICE_PAIRED_RF_REPORT_TYPE);"
    }
]