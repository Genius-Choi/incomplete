[
    {
        "line": 3,
        "fullcodeline": "struct snd_seq_port_info *info = arg;"
    },
    {
        "line": 12,
        "fullcodeline": "port = snd_seq_create_port(client, (info->flags & SNDRV_SEQ_PORT_FLG_GIVEN_PORT) ? info->addr.port : -1);"
    },
    {
        "line": 36,
        "fullcodeline": "info->addr = port->addr;"
    },
    {
        "line": 38,
        "fullcodeline": "snd_seq_set_port_info(port, info);"
    },
    {
        "line": 9,
        "fullcodeline": "if (info->addr.client != client->number)"
    },
    {
        "line": 13,
        "fullcodeline": "if (port == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "if (client->type == USER_CLIENT && info->kernel) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (client->type == KERNEL_CLIENT) {"
    },
    {
        "line": 17,
        "fullcodeline": "port_idx = port->addr.port;"
    },
    {
        "line": 10,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 14,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 20,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "if ((callback = info->kernel) != NULL) {"
    },
    {
        "line": 26,
        "fullcodeline": "port->private_data = callback->private_data;"
    },
    {
        "line": 27,
        "fullcodeline": "port->private_free = callback->private_free;"
    },
    {
        "line": 28,
        "fullcodeline": "port->event_input = callback->event_input;"
    },
    {
        "line": 25,
        "fullcodeline": "port->owner = callback->owner;"
    }
]