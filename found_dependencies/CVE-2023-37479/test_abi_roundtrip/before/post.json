[
    {
        "line": 3,
        "fullcodeline": "printf(\"=== test_abi_roundtrip()\\n\");"
    },
    {
        "line": 5,
        "fullcodeline": "oe_result_t result = OE_UNEXPECTED;"
    },
    {
        "line": 6,
        "fullcodeline": "abi_state_t before_ecall_state = {};"
    },
    {
        "line": 7,
        "fullcodeline": "abi_state_t after_ecall_state = {};"
    },
    {
        "line": 9,
        "fullcodeline": "uint64_t global_id = OE_GLOBAL_ECALL_ID_NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "void* tcs = (void*)binding->tcs;"
    },
    {
        "line": 35,
        "fullcodeline": "flat_ecall_args_t* args = NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "const flat_ecall_args_t args_template = {"
    },
    {
        "line": 63,
        "fullcodeline": "memcpy(args, &args_template, sizeof(args_template));"
    },
    {
        "line": 64,
        "fullcodeline": "args->enc_function_args.input_buffer = &args->check_abi_args;"
    },
    {
        "line": 65,
        "fullcodeline": "args->enc_function_args.output_buffer = &args->check_abi_args;"
    },
    {
        "line": 66,
        "fullcodeline": "OE_CHECK(oe_get_ecall_ids("
    },
    {
        "line": 97,
        "fullcodeline": "oe_thread_setspecific(thread_binding_key - 1, binding);"
    },
    {
        "line": 98,
        "fullcodeline": "binding->flags |= _OE_THREAD_BUSY;"
    },
    {
        "line": 99,
        "fullcodeline": "binding->thread = oe_thread_self();"
    },
    {
        "line": 100,
        "fullcodeline": "binding->count = 1;"
    },
    {
        "line": 166,
        "fullcodeline": "result = OE_OK;"
    },
    {
        "line": 60,
        "fullcodeline": "if (!args)"
    },
    {
        "line": 75,
        "fullcodeline": "if (binding->flags & _OE_THREAD_BUSY)"
    },
    {
        "line": 88,
        "fullcodeline": "if (!oe_thread_key_create(&thread_binding_key))"
    },
    {
        "line": 103,
        "fullcodeline": "if (enclave->debug && enclave->debug_enclave != NULL)"
    },
    {
        "line": 108,
        "fullcodeline": "uint64_t arg1 = oe_make_call_arg1("
    },
    {
        "line": 110,
        "fullcodeline": "uint64_t arg2 = (uint64_t)args;"
    },
    {
        "line": 111,
        "fullcodeline": "uint64_t arg3 = 0;"
    },
    {
        "line": 112,
        "fullcodeline": "uint64_t arg4 = 0;"
    },
    {
        "line": 115,
        "fullcodeline": "set_test_xmm_state();"
    },
    {
        "line": 116,
        "fullcodeline": "set_test_abi_state();"
    },
    {
        "line": 117,
        "fullcodeline": "read_abi_state(&before_ecall_state);"
    },
    {
        "line": 120,
        "fullcodeline": "oe_enter(tcs, OE_AEP_ADDRESS, arg1, arg2, &arg3, &arg4, enclave);"
    },
    {
        "line": 123,
        "fullcodeline": "read_abi_state(&after_ecall_state);"
    },
    {
        "line": 124,
        "fullcodeline": "reset_test_abi_state();"
    },
    {
        "line": 126,
        "fullcodeline": "oe_code_t code_out = oe_get_code_from_call_arg1(arg3);"
    },
    {
        "line": 127,
        "fullcodeline": "uint16_t result_out = oe_get_result_from_call_arg1(arg3);"
    },
    {
        "line": 139,
        "fullcodeline": "OE_CHECK((oe_result_t)result_out);"
    },
    {
        "line": 152,
        "fullcodeline": "if (args->check_abi_args._retval != EXPECTED_CHECK_ABI_RETURN_VALUE)"
    },
    {
        "line": 160,
        "fullcodeline": "if (!is_same_abi_state(&before_ecall_state, &after_ecall_state))"
    },
    {
        "line": 170,
        "fullcodeline": "if (binding->flags & _OE_THREAD_BUSY)"
    },
    {
        "line": 38,
        "fullcodeline": "{.function_id = 0,"
    },
    {
        "line": 45,
        "fullcodeline": "{._result = OE_UNEXPECTED,"
    },
    {
        "line": 53,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 76,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 92,
        "fullcodeline": "oe_thread_key_delete(thread_binding_key);"
    },
    {
        "line": 104,
        "fullcodeline": "oe_debug_push_thread_binding(enclave->debug_enclave, (sgx_tcs_t*)tcs);"
    },
    {
        "line": 131,
        "fullcodeline": "if (code_out != OE_CODE_ERET)"
    },
    {
        "line": 146,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 153,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 161,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 172,
        "fullcodeline": "binding->count--;"
    },
    {
        "line": 95,
        "fullcodeline": "OE_RAISE_MSG(OE_UNEXPECTED, \"oe_thread_key_create failed\\n\", NULL);"
    },
    {
        "line": 132,
        "fullcodeline": "OE_RAISE_MSG("
    },
    {
        "line": 175,
        "fullcodeline": "if (enclave->debug && enclave->debug_enclave != NULL)"
    },
    {
        "line": 178,
        "fullcodeline": "if (binding->count == 0)"
    },
    {
        "line": 39,
        "fullcodeline": ".input_buffer = NULL,"
    },
    {
        "line": 41,
        "fullcodeline": ".output_buffer = NULL,"
    },
    {
        "line": 43,
        "fullcodeline": ".output_bytes_written = 0,"
    },
    {
        "line": 44,
        "fullcodeline": ".result = OE_UNEXPECTED},"
    },
    {
        "line": 46,
        "fullcodeline": ".deepcopy_out_buffer = NULL,"
    },
    {
        "line": 47,
        "fullcodeline": ".deepcopy_out_buffer_size = 0,"
    },
    {
        "line": 48,
        "fullcodeline": "._retval = 0}};"
    },
    {
        "line": 176,
        "fullcodeline": "oe_debug_pop_thread_binding();"
    },
    {
        "line": 180,
        "fullcodeline": "binding->flags &= (~_OE_THREAD_BUSY);"
    },
    {
        "line": 181,
        "fullcodeline": "binding->thread = 0;"
    },
    {
        "line": 182,
        "fullcodeline": "memset(&binding->event, 0, sizeof(binding->event));"
    },
    {
        "line": 183,
        "fullcodeline": "oe_thread_setspecific(thread_binding_key - 1, NULL);"
    }
]