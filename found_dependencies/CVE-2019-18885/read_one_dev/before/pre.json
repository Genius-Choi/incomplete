[
    {
        "line": 5,
        "fullcodeline": "struct btrfs_fs_devices *fs_devices = fs_info->fs_devices;"
    },
    {
        "line": 9,
        "fullcodeline": "u8 fs_uuid[BTRFS_FSID_SIZE];"
    },
    {
        "line": 10,
        "fullcodeline": "u8 dev_uuid[BTRFS_UUID_SIZE];"
    },
    {
        "line": 12,
        "fullcodeline": "devid = btrfs_device_id(leaf, dev_item);"
    },
    {
        "line": 13,
        "fullcodeline": "read_extent_buffer(leaf, dev_uuid, btrfs_device_uuid(dev_item),"
    },
    {
        "line": 15,
        "fullcodeline": "read_extent_buffer(leaf, fs_uuid, btrfs_device_fsid(dev_item),"
    },
    {
        "line": 24,
        "fullcodeline": "device = btrfs_find_device(fs_info->fs_devices, devid, dev_uuid,"
    },
    {
        "line": 87,
        "fullcodeline": "fill_device_from_item(leaf, dev_item, device);"
    },
    {
        "line": 88,
        "fullcodeline": "set_bit(BTRFS_DEV_STATE_IN_FS_METADATA, &device->dev_state);"
    },
    {
        "line": 95,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "if (memcmp(fs_uuid, fs_devices->metadata_uuid, BTRFS_FSID_SIZE)) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (!device) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (device->fs_devices != fs_info->fs_devices) {"
    },
    {
        "line": 19,
        "fullcodeline": "fs_devices = open_seed_devices(fs_info, fs_uuid);"
    },
    {
        "line": 33,
        "fullcodeline": "device = add_missing_dev(fs_devices, devid, dev_uuid);"
    },
    {
        "line": 40,
        "fullcodeline": "btrfs_report_missing_device(fs_info, devid, dev_uuid, false);"
    },
    {
        "line": 89,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state) &&"
    },
    {
        "line": 90,
        "fullcodeline": "!test_bit(BTRFS_DEV_STATE_REPLACE_TGT, &device->dev_state)) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (IS_ERR(fs_devices))"
    },
    {
        "line": 34,
        "fullcodeline": "if (IS_ERR(device)) {"
    },
    {
        "line": 81,
        "fullcodeline": "BUG_ON(test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state));"
    },
    {
        "line": 82,
        "fullcodeline": "if (device->generation !="
    },
    {
        "line": 92,
        "fullcodeline": "atomic64_add(device->total_bytes - device->bytes_used,"
    },
    {
        "line": 27,
        "fullcodeline": "if (!btrfs_test_opt(fs_info, DEGRADED)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (!device->bdev) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (device->fs_devices != fs_devices) {"
    },
    {
        "line": 83,
        "fullcodeline": "btrfs_device_generation(leaf, dev_item))"
    },
    {
        "line": 21,
        "fullcodeline": "return PTR_ERR(fs_devices);"
    },
    {
        "line": 30,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 37,
        "fullcodeline": "devid, PTR_ERR(device));"
    },
    {
        "line": 38,
        "fullcodeline": "return PTR_ERR(device);"
    },
    {
        "line": 48,
        "fullcodeline": "btrfs_report_missing_device(fs_info, devid,"
    },
    {
        "line": 52,
        "fullcodeline": "if (!device->bdev &&"
    },
    {
        "line": 53,
        "fullcodeline": "!test_bit(BTRFS_DEV_STATE_MISSING, &device->dev_state)) {"
    },
    {
        "line": 60,
        "fullcodeline": "device->fs_devices->missing_devices++;"
    },
    {
        "line": 61,
        "fullcodeline": "set_bit(BTRFS_DEV_STATE_MISSING, &device->dev_state);"
    },
    {
        "line": 70,
        "fullcodeline": "device->fs_devices->num_devices--;"
    },
    {
        "line": 71,
        "fullcodeline": "fs_devices->num_devices++;"
    },
    {
        "line": 73,
        "fullcodeline": "device->fs_devices->missing_devices--;"
    },
    {
        "line": 74,
        "fullcodeline": "fs_devices->missing_devices++;"
    },
    {
        "line": 76,
        "fullcodeline": "device->fs_devices = fs_devices;"
    },
    {
        "line": 84,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 66,
        "fullcodeline": "ASSERT(test_bit(BTRFS_DEV_STATE_MISSING,"
    },
    {
        "line": 43,
        "fullcodeline": "if (!btrfs_test_opt(fs_info, DEGRADED)) {"
    },
    {
        "line": 46,
        "fullcodeline": "return -ENOENT;"
    }
]