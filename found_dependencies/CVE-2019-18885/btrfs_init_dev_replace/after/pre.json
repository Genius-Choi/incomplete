[
    {
        "line": 4,
        "fullcodeline": "struct btrfs_root *dev_root = fs_info->dev_root;"
    },
    {
        "line": 5,
        "fullcodeline": "struct btrfs_dev_replace *dev_replace = &fs_info->dev_replace;"
    },
    {
        "line": 8,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "struct btrfs_path *path = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "path = btrfs_alloc_path();"
    },
    {
        "line": 20,
        "fullcodeline": "key.objectid = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "key.type = BTRFS_DEV_REPLACE_KEY;"
    },
    {
        "line": 22,
        "fullcodeline": "key.offset = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "ret = btrfs_search_slot(NULL, dev_root, &key, path, 0, 0);"
    },
    {
        "line": 45,
        "fullcodeline": "slot = path->slots[0];"
    },
    {
        "line": 46,
        "fullcodeline": "eb = path->nodes[0];"
    },
    {
        "line": 47,
        "fullcodeline": "item_size = btrfs_item_size_nr(eb, slot);"
    },
    {
        "line": 56,
        "fullcodeline": "src_devid = btrfs_dev_replace_src_devid(eb, ptr);"
    },
    {
        "line": 57,
        "fullcodeline": "dev_replace->cont_reading_from_srcdev_mode ="
    },
    {
        "line": 59,
        "fullcodeline": "dev_replace->replace_state = btrfs_dev_replace_replace_state(eb, ptr);"
    },
    {
        "line": 60,
        "fullcodeline": "dev_replace->time_started = btrfs_dev_replace_time_started(eb, ptr);"
    },
    {
        "line": 61,
        "fullcodeline": "dev_replace->time_stopped ="
    },
    {
        "line": 63,
        "fullcodeline": "atomic64_set(&dev_replace->num_write_errors,"
    },
    {
        "line": 65,
        "fullcodeline": "atomic64_set(&dev_replace->num_uncorrectable_read_errors,"
    },
    {
        "line": 67,
        "fullcodeline": "dev_replace->cursor_left = btrfs_dev_replace_cursor_left(eb, ptr);"
    },
    {
        "line": 68,
        "fullcodeline": "dev_replace->committed_cursor_left = dev_replace->cursor_left;"
    },
    {
        "line": 69,
        "fullcodeline": "dev_replace->cursor_left_last_write_of_item = dev_replace->cursor_left;"
    },
    {
        "line": 70,
        "fullcodeline": "dev_replace->cursor_right = btrfs_dev_replace_cursor_right(eb, ptr);"
    },
    {
        "line": 71,
        "fullcodeline": "dev_replace->is_valid = 1;"
    },
    {
        "line": 73,
        "fullcodeline": "dev_replace->item_needs_writeback = 0;"
    },
    {
        "line": 138,
        "fullcodeline": "btrfs_free_path(path);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!path) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (item_size != sizeof(struct btrfs_dev_replace_item)) {"
    },
    {
        "line": 58,
        "fullcodeline": "btrfs_dev_replace_cont_reading_from_srcdev_mode(eb, ptr);"
    },
    {
        "line": 62,
        "fullcodeline": "btrfs_dev_replace_time_stopped(eb, ptr);"
    },
    {
        "line": 64,
        "fullcodeline": "btrfs_dev_replace_num_write_errors(eb, ptr));"
    },
    {
        "line": 66,
        "fullcodeline": "btrfs_dev_replace_num_uncorrectable_read_errors(eb, ptr));"
    },
    {
        "line": 16,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 26,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "dev_replace->replace_state ="
    },
    {
        "line": 29,
        "fullcodeline": "dev_replace->cont_reading_from_srcdev_mode ="
    },
    {
        "line": 31,
        "fullcodeline": "dev_replace->time_started = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "dev_replace->time_stopped = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "atomic64_set(&dev_replace->num_write_errors, 0);"
    },
    {
        "line": 34,
        "fullcodeline": "atomic64_set(&dev_replace->num_uncorrectable_read_errors, 0);"
    },
    {
        "line": 35,
        "fullcodeline": "dev_replace->cursor_left = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "dev_replace->committed_cursor_left = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "dev_replace->cursor_left_last_write_of_item = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "dev_replace->cursor_right = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "dev_replace->srcdev = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "dev_replace->tgtdev = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "dev_replace->is_valid = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "dev_replace->item_needs_writeback = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "btrfs_warn(fs_info,"
    },
    {
        "line": 78,
        "fullcodeline": "dev_replace->srcdev = NULL;"
    },
    {
        "line": 79,
        "fullcodeline": "dev_replace->tgtdev = NULL;"
    },
    {
        "line": 83,
        "fullcodeline": "dev_replace->srcdev = btrfs_find_device(fs_info->fs_devices,"
    },
    {
        "line": 85,
        "fullcodeline": "dev_replace->tgtdev = btrfs_find_device(fs_info->fs_devices,"
    },
    {
        "line": 92,
        "fullcodeline": "if (!dev_replace->srcdev &&"
    },
    {
        "line": 101,
        "fullcodeline": "if (!dev_replace->tgtdev &&"
    },
    {
        "line": 93,
        "fullcodeline": "!btrfs_test_opt(fs_info, DEGRADED)) {"
    },
    {
        "line": 94,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 95,
        "fullcodeline": "btrfs_warn(fs_info,"
    },
    {
        "line": 97,
        "fullcodeline": "btrfs_warn(fs_info,"
    },
    {
        "line": 102,
        "fullcodeline": "!btrfs_test_opt(fs_info, DEGRADED)) {"
    },
    {
        "line": 103,
        "fullcodeline": "ret = -EIO;"
    },
    {
        "line": 104,
        "fullcodeline": "btrfs_warn(fs_info,"
    },
    {
        "line": 106,
        "fullcodeline": "btrfs_warn(fs_info,"
    },
    {
        "line": 123,
        "fullcodeline": "set_bit(BTRFS_DEV_STATE_REPLACE_TGT,"
    },
    {
        "line": 126,
        "fullcodeline": "WARN_ON(fs_info->fs_devices->rw_devices == 0);"
    },
    {
        "line": 127,
        "fullcodeline": "dev_replace->tgtdev->io_width = fs_info->sectorsize;"
    },
    {
        "line": 128,
        "fullcodeline": "dev_replace->tgtdev->io_align = fs_info->sectorsize;"
    },
    {
        "line": 129,
        "fullcodeline": "dev_replace->tgtdev->sector_size = fs_info->sectorsize;"
    },
    {
        "line": 130,
        "fullcodeline": "dev_replace->tgtdev->fs_info = fs_info;"
    },
    {
        "line": 131,
        "fullcodeline": "set_bit(BTRFS_DEV_STATE_IN_FS_METADATA,"
    },
    {
        "line": 112,
        "fullcodeline": "dev_replace->tgtdev->total_bytes ="
    },
    {
        "line": 114,
        "fullcodeline": "dev_replace->tgtdev->disk_total_bytes ="
    },
    {
        "line": 116,
        "fullcodeline": "dev_replace->tgtdev->commit_total_bytes ="
    },
    {
        "line": 118,
        "fullcodeline": "dev_replace->tgtdev->bytes_used ="
    },
    {
        "line": 120,
        "fullcodeline": "dev_replace->tgtdev->commit_bytes_used ="
    }
]