[
    {
        "line": 4,
        "fullcodeline": "struct btrfs_root *root = fs_info->chunk_root;"
    },
    {
        "line": 10,
        "fullcodeline": "u8 fs_uuid[BTRFS_FSID_SIZE];"
    },
    {
        "line": 11,
        "fullcodeline": "u8 dev_uuid[BTRFS_UUID_SIZE];"
    },
    {
        "line": 15,
        "fullcodeline": "path = btrfs_alloc_path();"
    },
    {
        "line": 19,
        "fullcodeline": "key.objectid = BTRFS_DEV_ITEMS_OBJECTID;"
    },
    {
        "line": 20,
        "fullcodeline": "key.offset = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "key.type = BTRFS_DEV_ITEM_KEY;"
    },
    {
        "line": 67,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "btrfs_free_path(path);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!path)"
    },
    {
        "line": 24,
        "fullcodeline": "ret = btrfs_search_slot(trans, root, &key, path, 0, 1);"
    },
    {
        "line": 42,
        "fullcodeline": "btrfs_item_key_to_cpu(leaf, &key, path->slots[0]);"
    },
    {
        "line": 49,
        "fullcodeline": "devid = btrfs_device_id(leaf, dev_item);"
    },
    {
        "line": 50,
        "fullcodeline": "read_extent_buffer(leaf, dev_uuid, btrfs_device_uuid(dev_item),"
    },
    {
        "line": 52,
        "fullcodeline": "read_extent_buffer(leaf, fs_uuid, btrfs_device_fsid(dev_item),"
    },
    {
        "line": 54,
        "fullcodeline": "device = btrfs_find_device(fs_info->fs_devices, devid, dev_uuid,"
    },
    {
        "line": 56,
        "fullcodeline": "BUG_ON(!device); /* Logic error */"
    },
    {
        "line": 64,
        "fullcodeline": "path->slots[0]++;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 25,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 30,
        "fullcodeline": "if (path->slots[0] >= btrfs_header_nritems(leaf)) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (key.objectid != BTRFS_DEV_ITEMS_OBJECTID ||"
    },
    {
        "line": 31,
        "fullcodeline": "ret = btrfs_next_leaf(root, path);"
    },
    {
        "line": 37,
        "fullcodeline": "btrfs_item_key_to_cpu(leaf, &key, path->slots[0]);"
    },
    {
        "line": 38,
        "fullcodeline": "btrfs_release_path(path);"
    },
    {
        "line": 44,
        "fullcodeline": "key.type != BTRFS_DEV_ITEM_KEY)"
    },
    {
        "line": 59,
        "fullcodeline": "btrfs_set_device_generation(leaf, dev_item,"
    },
    {
        "line": 61,
        "fullcodeline": "btrfs_mark_buffer_dirty(leaf);"
    },
    {
        "line": 32,
        "fullcodeline": "if (ret > 0)"
    },
    {
        "line": 34,
        "fullcodeline": "if (ret < 0)"
    }
]