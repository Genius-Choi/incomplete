[
    {
        "line": 3,
        "fullcodeline": "TCHAR szDumpPath[MAX_PATH];"
    },
    {
        "line": 4,
        "fullcodeline": "TCHAR szScratch[MAX_PATH];"
    },
    {
        "line": 5,
        "fullcodeline": "LPCTSTR szResult = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "bool retval = false;"
    },
    {
        "line": 8,
        "fullcodeline": "HMODULE hDll = ::LoadLibrary( TEXT(\"DBGHELP.DLL\") );\t//that wont work on older windows version than XP, #care :)"
    },
    {
        "line": 12,
        "fullcodeline": "MINIDUMPWRITEDUMP pDump = (MINIDUMPWRITEDUMP)::GetProcAddress( hDll, \"MiniDumpWriteDump\" );"
    },
    {
        "line": 61,
        "fullcodeline": "::FreeLibrary(hDll);"
    },
    {
        "line": 69,
        "fullcodeline": "::MessageBox(NULL, szResult, msgTitle, MB_OK);"
    },
    {
        "line": 65,
        "fullcodeline": "szResult = TEXT(\"Unable to load the debugging DLL,\\r\\nfind a recent copy of dbghelp.dll and install it.\");"
    },
    {
        "line": 15,
        "fullcodeline": "::GetModuleFileName(NULL, szDumpPath, MAX_PATH);"
    },
    {
        "line": 16,
        "fullcodeline": "::PathRemoveFileSpec(szDumpPath);"
    },
    {
        "line": 17,
        "fullcodeline": "wcscat_s(szDumpPath, TEXT(\"\\\\NppDump.dmp\"));"
    },
    {
        "line": 20,
        "fullcodeline": "int msgret = ::MessageBox(NULL, TEXT(\"Do you want to save a dump file?\\r\\nDoing so can aid in developing Notepad++.\"), msgTitle, MB_YESNO);"
    },
    {
        "line": 21,
        "fullcodeline": "if (msgret == IDYES)"
    },
    {
        "line": 59,
        "fullcodeline": "szResult = TEXT(\"The debugging DLL is outdated,\\r\\nfind a recent copy of dbghelp.dll and install it.\");"
    },
    {
        "line": 24,
        "fullcodeline": "HANDLE hFile = ::CreateFile( szDumpPath, GENERIC_WRITE, FILE_SHARE_WRITE, NULL, CREATE_ALWAYS,"
    },
    {
        "line": 27,
        "fullcodeline": "if (hFile!=INVALID_HANDLE_VALUE)"
    },
    {
        "line": 31,
        "fullcodeline": "ExInfo.ThreadId = ::GetCurrentThreadId();"
    },
    {
        "line": 32,
        "fullcodeline": "ExInfo.ExceptionPointers = pExceptionInfo;"
    },
    {
        "line": 33,
        "fullcodeline": "ExInfo.ClientPointers = NULL;"
    },
    {
        "line": 36,
        "fullcodeline": "BOOL bOK = pDump( GetCurrentProcess(), GetCurrentProcessId(), hFile, MiniDumpNormal, &ExInfo, NULL, NULL );"
    },
    {
        "line": 48,
        "fullcodeline": "::CloseHandle(hFile);"
    },
    {
        "line": 52,
        "fullcodeline": "wsprintf( szScratch, TEXT(\"Failed to create dump file '%s' (error %d)\"), szDumpPath, GetLastError() );"
    },
    {
        "line": 53,
        "fullcodeline": "szResult = szScratch;"
    },
    {
        "line": 39,
        "fullcodeline": "wsprintf( szScratch, TEXT(\"Saved dump file to '%s'\"), szDumpPath );"
    },
    {
        "line": 40,
        "fullcodeline": "szResult = szScratch;"
    },
    {
        "line": 41,
        "fullcodeline": "retval = true;"
    },
    {
        "line": 45,
        "fullcodeline": "wsprintf( szScratch, TEXT(\"Failed to save dump file to '%s' (error %d)\"), szDumpPath, GetLastError() );"
    },
    {
        "line": 46,
        "fullcodeline": "szResult = szScratch;"
    }
]