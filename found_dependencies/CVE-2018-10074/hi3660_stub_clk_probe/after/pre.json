[
    {
        "line": 3,
        "fullcodeline": "struct device *dev = &pdev->dev;"
    },
    {
        "line": 9,
        "fullcodeline": "stub_clk_chan.cl.dev = dev;"
    },
    {
        "line": 10,
        "fullcodeline": "stub_clk_chan.cl.tx_done = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "stub_clk_chan.cl.tx_block = false;"
    },
    {
        "line": 12,
        "fullcodeline": "stub_clk_chan.cl.knows_txdone = false;"
    },
    {
        "line": 15,
        "fullcodeline": "stub_clk_chan.mbox = mbox_request_channel(&stub_clk_chan.cl, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "res = platform_get_resource(pdev, IORESOURCE_MEM, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "freq_reg = devm_ioremap(dev, res->start, resource_size(res));"
    },
    {
        "line": 26,
        "fullcodeline": "freq_reg += HI3660_STUB_CLOCK_DATA;"
    },
    {
        "line": 16,
        "fullcodeline": "if (IS_ERR(stub_clk_chan.mbox))"
    },
    {
        "line": 20,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 23,
        "fullcodeline": "if (!freq_reg)"
    },
    {
        "line": 28,
        "fullcodeline": "for (i = 0; i < HI3660_CLK_STUB_NUM; i++) {"
    },
    {
        "line": 34,
        "fullcodeline": "return devm_of_clk_add_hw_provider(&pdev->dev, hi3660_stub_clk_hw_get,"
    },
    {
        "line": 29,
        "fullcodeline": "ret = devm_clk_hw_register(&pdev->dev, &hi3660_stub_clks[i].hw);"
    },
    {
        "line": 17,
        "fullcodeline": "return PTR_ERR(stub_clk_chan.mbox);"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -ENOMEM;"
    }
]