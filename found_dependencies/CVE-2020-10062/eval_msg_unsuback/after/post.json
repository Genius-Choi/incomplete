[
    {
        "line": 3,
        "fullcodeline": "struct mqtt_unsuback_param *param ="
    },
    {
        "line": 11,
        "fullcodeline": "memset(&dec_param, 0, sizeof(dec_param));"
    },
    {
        "line": 13,
        "fullcodeline": "buf.cur = mqtt_test->expected;"
    },
    {
        "line": 14,
        "fullcodeline": "buf.end = mqtt_test->expected + mqtt_test->expected_len;"
    },
    {
        "line": 16,
        "fullcodeline": "rc = fixed_header_decode(&buf, &type_and_flags, &length);"
    },
    {
        "line": 18,
        "fullcodeline": "zassert_false(rc, \"fixed_header_decode failed\");"
    },
    {
        "line": 20,
        "fullcodeline": "rc = unsubscribe_ack_decode(&buf, &dec_param);"
    },
    {
        "line": 22,
        "fullcodeline": "zassert_false(rc, \"unsubscribe_ack_decode failed\");"
    },
    {
        "line": 24,
        "fullcodeline": "zassert_equal(dec_param.message_id, param->message_id,"
    },
    {
        "line": 4,
        "fullcodeline": "(struct mqtt_unsuback_param *)mqtt_test->ctx;"
    }
]