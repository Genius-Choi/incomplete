[
    {
        "line": 3,
        "fullcodeline": "u8_t shift = 0U;"
    },
    {
        "line": 4,
        "fullcodeline": "u8_t bytes = 0U;"
    },
    {
        "line": 6,
        "fullcodeline": "*length = 0U;"
    },
    {
        "line": 22,
        "fullcodeline": "MQTT_TRC(\"length:0x%08x\", *length);"
    },
    {
        "line": 20,
        "fullcodeline": "} while ((*(buf->cur++) & MQTT_LENGTH_CONTINUATION_BIT) != 0U);"
    },
    {
        "line": 16,
        "fullcodeline": "*length += ((u32_t)*(buf->cur) & MQTT_LENGTH_VALUE_MASK)"
    },
    {
        "line": 18,
        "fullcodeline": "shift += MQTT_LENGTH_SHIFT;"
    },
    {
        "line": 19,
        "fullcodeline": "bytes++;"
    },
    {
        "line": 8,
        "fullcodeline": "if (bytes > MQTT_MAX_LENGTH_BYTES) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (buf->cur >= buf->end) {"
    },
    {
        "line": 9,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 13,
        "fullcodeline": "return -EAGAIN;"
    }
]