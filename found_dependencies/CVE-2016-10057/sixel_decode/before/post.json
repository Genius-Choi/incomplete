[
    {
        "line": 13,
        "fullcodeline": "int repeat_count, color_index, max_color_index = 2, background_color_index;"
    },
    {
        "line": 14,
        "fullcodeline": "int param[10];"
    },
    {
        "line": 15,
        "fullcodeline": "int sixel_palet[SIXEL_PALETTE_MAX];"
    },
    {
        "line": 21,
        "fullcodeline": "posision_x = posision_y = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "max_x = max_y = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "attributed_pan = 2;"
    },
    {
        "line": 24,
        "fullcodeline": "attributed_pad = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "attributed_ph = attributed_pv = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "repeat_count = 1;"
    },
    {
        "line": 27,
        "fullcodeline": "color_index = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "background_color_index = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "imsx = 2048;"
    },
    {
        "line": 31,
        "fullcodeline": "imsy = 2048;"
    },
    {
        "line": 32,
        "fullcodeline": "imbuf = (unsigned char *) AcquireQuantumMemory(imsx * imsy,1);"
    },
    {
        "line": 59,
        "fullcodeline": "(void) ResetMagickMemory(imbuf, background_color_index, imsx * imsy);"
    },
    {
        "line": 303,
        "fullcodeline": "*pixels = imbuf;"
    },
    {
        "line": 304,
        "fullcodeline": "*pwidth = imsx;"
    },
    {
        "line": 305,
        "fullcodeline": "*pheight = imsy;"
    },
    {
        "line": 306,
        "fullcodeline": "*ncolors = max_color_index + 1;"
    },
    {
        "line": 307,
        "fullcodeline": "*palette = (unsigned char *) AcquireQuantumMemory(*ncolors,4);"
    },
    {
        "line": 34,
        "fullcodeline": "if (imbuf == NULL) {"
    },
    {
        "line": 38,
        "fullcodeline": "for (n = 0; n < 16; n++) {"
    },
    {
        "line": 43,
        "fullcodeline": "for (r = 0; r < 6; r++) {"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < 24; i++) {"
    },
    {
        "line": 55,
        "fullcodeline": "for (; n < SIXEL_PALETTE_MAX; n++) {"
    },
    {
        "line": 61,
        "fullcodeline": "while (*p != '\\0') {"
    },
    {
        "line": 280,
        "fullcodeline": "if (++max_x < attributed_ph) {"
    },
    {
        "line": 283,
        "fullcodeline": "if (++max_y < attributed_pv) {"
    },
    {
        "line": 287,
        "fullcodeline": "if (imsx > max_x || imsy > max_y) {"
    },
    {
        "line": 308,
        "fullcodeline": "for (n = 0; n < (ssize_t) *ncolors; ++n) {"
    },
    {
        "line": 52,
        "fullcodeline": "sixel_palet[n++] = SIXEL_RGB(i * 11, i * 11, i * 11);"
    },
    {
        "line": 56,
        "fullcodeline": "sixel_palet[n] = SIXEL_RGB(255, 255, 255);"
    },
    {
        "line": 281,
        "fullcodeline": "max_x = attributed_ph;"
    },
    {
        "line": 284,
        "fullcodeline": "max_y = attributed_pv;"
    },
    {
        "line": 288,
        "fullcodeline": "dmsx = max_x;"
    },
    {
        "line": 289,
        "fullcodeline": "dmsy = max_y;"
    },
    {
        "line": 297,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 298,
        "fullcodeline": "imsx = dmsx;"
    },
    {
        "line": 299,
        "fullcodeline": "imsy = dmsy;"
    },
    {
        "line": 300,
        "fullcodeline": "imbuf = dmbuf;"
    },
    {
        "line": 309,
        "fullcodeline": "(*palette)[n * 4 + 0] = sixel_palet[n] >> 16 & 0xff;"
    },
    {
        "line": 310,
        "fullcodeline": "(*palette)[n * 4 + 1] = sixel_palet[n] >> 8 & 0xff;"
    },
    {
        "line": 311,
        "fullcodeline": "(*palette)[n * 4 + 2] = sixel_palet[n] & 0xff;"
    },
    {
        "line": 312,
        "fullcodeline": "(*palette)[n * 4 + 3] = 0xff;"
    },
    {
        "line": 44,
        "fullcodeline": "for (g = 0; g < 6; g++) {"
    },
    {
        "line": 62,
        "fullcodeline": "if ((p[0] == '\\033' && p[1] == 'P') || *p == 0x90) {"
    },
    {
        "line": 290,
        "fullcodeline": "if ((dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1)) == NULL) {"
    },
    {
        "line": 294,
        "fullcodeline": "for (y = 0; y < dmsy; ++y) {"
    },
    {
        "line": 67,
        "fullcodeline": "p = get_params(++p, param, &n);"
    },
    {
        "line": 291,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 295,
        "fullcodeline": "(void) CopyMagickMemory(dmbuf + dmsx * y, imbuf + imsx * y, dmsx);"
    },
    {
        "line": 45,
        "fullcodeline": "for (b = 0; b < 6; b++) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (*p == '\\033') {"
    },
    {
        "line": 69,
        "fullcodeline": "if (*p == 'q') {"
    },
    {
        "line": 46,
        "fullcodeline": "sixel_palet[n++] = SIXEL_RGB(r * 51, g * 51, b * 51);"
    },
    {
        "line": 64,
        "fullcodeline": "p++;"
    },
    {
        "line": 70,
        "fullcodeline": "p++;"
    },
    {
        "line": 116,
        "fullcodeline": "} else if ((p[0] == '\\033' && p[1] == '\\\\') || *p == 0x9C) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (n > 0) {        /* Pn1 */"
    },
    {
        "line": 105,
        "fullcodeline": "if (n > 2) {        /* Pn3 */"
    },
    {
        "line": 109,
        "fullcodeline": "attributed_pan = attributed_pan * param[2] / 10;"
    },
    {
        "line": 110,
        "fullcodeline": "attributed_pad = attributed_pad * param[2] / 10;"
    },
    {
        "line": 106,
        "fullcodeline": "if (param[2] == 0) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (attributed_pan <= 0) attributed_pan = 1;"
    },
    {
        "line": 112,
        "fullcodeline": "if (attributed_pad <= 0) attributed_pad = 1;"
    },
    {
        "line": 118,
        "fullcodeline": "} else if (*p == '\"') {"
    },
    {
        "line": 76,
        "fullcodeline": "attributed_pad = 2;"
    },
    {
        "line": 79,
        "fullcodeline": "attributed_pad = 5;"
    },
    {
        "line": 82,
        "fullcodeline": "attributed_pad = 4;"
    },
    {
        "line": 85,
        "fullcodeline": "attributed_pad = 4;"
    },
    {
        "line": 88,
        "fullcodeline": "attributed_pad = 3;"
    },
    {
        "line": 91,
        "fullcodeline": "attributed_pad = 3;"
    },
    {
        "line": 94,
        "fullcodeline": "attributed_pad = 2;"
    },
    {
        "line": 97,
        "fullcodeline": "attributed_pad = 2;"
    },
    {
        "line": 100,
        "fullcodeline": "attributed_pad = 1;"
    },
    {
        "line": 107,
        "fullcodeline": "param[2] = 10;"
    },
    {
        "line": 120,
        "fullcodeline": "p = get_params(++p, param, &n);"
    },
    {
        "line": 122,
        "fullcodeline": "if (n > 0) attributed_pad = param[0];"
    },
    {
        "line": 123,
        "fullcodeline": "if (n > 1) attributed_pan = param[1];"
    },
    {
        "line": 124,
        "fullcodeline": "if (n > 2 && param[2] > 0) attributed_ph = param[2];"
    },
    {
        "line": 125,
        "fullcodeline": "if (n > 3 && param[3] > 0) attributed_pv = param[3];"
    },
    {
        "line": 127,
        "fullcodeline": "if (attributed_pan <= 0) attributed_pan = 1;"
    },
    {
        "line": 128,
        "fullcodeline": "if (attributed_pad <= 0) attributed_pad = 1;"
    },
    {
        "line": 130,
        "fullcodeline": "if (imsx < attributed_ph || imsy < attributed_pv) {"
    },
    {
        "line": 131,
        "fullcodeline": "dmsx = imsx > attributed_ph ? imsx : attributed_ph;"
    },
    {
        "line": 132,
        "fullcodeline": "dmsy = imsy > attributed_pv ? imsy : attributed_pv;"
    },
    {
        "line": 133,
        "fullcodeline": "dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1);"
    },
    {
        "line": 138,
        "fullcodeline": "(void) ResetMagickMemory(dmbuf, background_color_index, dmsx * dmsy);"
    },
    {
        "line": 142,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 143,
        "fullcodeline": "imsx = dmsx;"
    },
    {
        "line": 144,
        "fullcodeline": "imsy = dmsy;"
    },
    {
        "line": 145,
        "fullcodeline": "imbuf = dmbuf;"
    },
    {
        "line": 148,
        "fullcodeline": "} else if (*p == '!') {"
    },
    {
        "line": 134,
        "fullcodeline": "if (dmbuf == (unsigned char *) NULL) {"
    },
    {
        "line": 139,
        "fullcodeline": "for (y = 0; y < imsy; ++y) {"
    },
    {
        "line": 150,
        "fullcodeline": "p = get_params(++p, param, &n);"
    },
    {
        "line": 135,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 140,
        "fullcodeline": "(void) CopyMagickMemory(dmbuf + dmsx * y, imbuf + imsx * y, imsx);"
    },
    {
        "line": 152,
        "fullcodeline": "if (n > 0) {"
    },
    {
        "line": 153,
        "fullcodeline": "repeat_count = param[0];"
    },
    {
        "line": 156,
        "fullcodeline": "} else if (*p == '#') {"
    },
    {
        "line": 158,
        "fullcodeline": "p = get_params(++p, param, &n);"
    },
    {
        "line": 160,
        "fullcodeline": "if (n > 0) {"
    },
    {
        "line": 168,
        "fullcodeline": "if (n > 4) {"
    },
    {
        "line": 182,
        "fullcodeline": "} else if (*p == '$') {"
    },
    {
        "line": 161,
        "fullcodeline": "if ((color_index = param[0]) < 0) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (param[1] == 1) {            /* HLS */"
    },
    {
        "line": 184,
        "fullcodeline": "p++;"
    },
    {
        "line": 185,
        "fullcodeline": "posision_x = 0;"
    },
    {
        "line": 186,
        "fullcodeline": "repeat_count = 1;"
    },
    {
        "line": 162,
        "fullcodeline": "color_index = 0;"
    },
    {
        "line": 173,
        "fullcodeline": "sixel_palet[color_index] = hls_to_rgb(param[2] * 100 / 360, param[3], param[4]);"
    },
    {
        "line": 170,
        "fullcodeline": "if (param[2] > 360) param[2] = 360;"
    },
    {
        "line": 171,
        "fullcodeline": "if (param[3] > 100) param[3] = 100;"
    },
    {
        "line": 172,
        "fullcodeline": "if (param[4] > 100) param[4] = 100;"
    },
    {
        "line": 188,
        "fullcodeline": "} else if (*p == '-') {"
    },
    {
        "line": 163,
        "fullcodeline": "} else if (color_index >= SIXEL_PALETTE_MAX) {"
    },
    {
        "line": 174,
        "fullcodeline": "} else if (param[1] == 2) {    /* RGB */"
    },
    {
        "line": 190,
        "fullcodeline": "p++;"
    },
    {
        "line": 191,
        "fullcodeline": "posision_x  = 0;"
    },
    {
        "line": 192,
        "fullcodeline": "posision_y += 6;"
    },
    {
        "line": 193,
        "fullcodeline": "repeat_count = 1;"
    },
    {
        "line": 164,
        "fullcodeline": "color_index = SIXEL_PALETTE_MAX - 1;"
    },
    {
        "line": 178,
        "fullcodeline": "sixel_palet[color_index] = SIXEL_XRGB(param[2], param[3], param[4]);"
    },
    {
        "line": 175,
        "fullcodeline": "if (param[2] > 100) param[2] = 100;"
    },
    {
        "line": 176,
        "fullcodeline": "if (param[3] > 100) param[3] = 100;"
    },
    {
        "line": 177,
        "fullcodeline": "if (param[4] > 100) param[4] = 100;"
    },
    {
        "line": 195,
        "fullcodeline": "} else if (*p >= '?' && *p <= '\\177') {"
    },
    {
        "line": 274,
        "fullcodeline": "repeat_count = 1;"
    },
    {
        "line": 196,
        "fullcodeline": "if (imsx < (posision_x + repeat_count) || imsy < (posision_y + 6)) {"
    },
    {
        "line": 222,
        "fullcodeline": "if (color_index > max_color_index) {"
    },
    {
        "line": 225,
        "fullcodeline": "if ((b = *(p++) - '?') == 0) {"
    },
    {
        "line": 276,
        "fullcodeline": "p++;"
    },
    {
        "line": 197,
        "fullcodeline": "int nx = imsx * 2;"
    },
    {
        "line": 198,
        "fullcodeline": "int ny = imsy * 2;"
    },
    {
        "line": 205,
        "fullcodeline": "dmsx = nx;"
    },
    {
        "line": 206,
        "fullcodeline": "dmsy = ny;"
    },
    {
        "line": 207,
        "fullcodeline": "dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1);"
    },
    {
        "line": 212,
        "fullcodeline": "(void) ResetMagickMemory(dmbuf, background_color_index, dmsx * dmsy);"
    },
    {
        "line": 216,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 217,
        "fullcodeline": "imsx = dmsx;"
    },
    {
        "line": 218,
        "fullcodeline": "imsy = dmsy;"
    },
    {
        "line": 219,
        "fullcodeline": "imbuf = dmbuf;"
    },
    {
        "line": 223,
        "fullcodeline": "max_color_index = color_index;"
    },
    {
        "line": 226,
        "fullcodeline": "posision_x += repeat_count;"
    },
    {
        "line": 200,
        "fullcodeline": "while (nx < (posision_x + repeat_count) || ny < (posision_y + 6)) {"
    },
    {
        "line": 208,
        "fullcodeline": "if (dmbuf == (unsigned char *) NULL) {"
    },
    {
        "line": 213,
        "fullcodeline": "for (y = 0; y < imsy; ++y) {"
    },
    {
        "line": 229,
        "fullcodeline": "sixel_vertical_mask = 0x01;"
    },
    {
        "line": 201,
        "fullcodeline": "nx *= 2;"
    },
    {
        "line": 202,
        "fullcodeline": "ny *= 2;"
    },
    {
        "line": 209,
        "fullcodeline": "imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);"
    },
    {
        "line": 214,
        "fullcodeline": "(void) CopyMagickMemory(dmbuf + dmsx * y, imbuf + imsx * y, imsx);"
    },
    {
        "line": 231,
        "fullcodeline": "if (repeat_count <= 1) {"
    },
    {
        "line": 244,
        "fullcodeline": "posision_x += 1;"
    },
    {
        "line": 232,
        "fullcodeline": "for (i = 0; i < 6; i++) {"
    },
    {
        "line": 271,
        "fullcodeline": "posision_x += repeat_count;"
    },
    {
        "line": 242,
        "fullcodeline": "sixel_vertical_mask <<= 1;"
    },
    {
        "line": 247,
        "fullcodeline": "for (i = 0; i < 6; i++) {"
    },
    {
        "line": 233,
        "fullcodeline": "if ((b & sixel_vertical_mask) != 0) {"
    },
    {
        "line": 269,
        "fullcodeline": "sixel_vertical_mask <<= 1;"
    },
    {
        "line": 234,
        "fullcodeline": "imbuf[imsx * (posision_y + i) + posision_x] = color_index;"
    },
    {
        "line": 248,
        "fullcodeline": "if ((b & sixel_vertical_mask) != 0) {"
    },
    {
        "line": 235,
        "fullcodeline": "if (max_x < posision_x) {"
    },
    {
        "line": 238,
        "fullcodeline": "if (max_y < (posision_y + i)) {"
    },
    {
        "line": 249,
        "fullcodeline": "c = sixel_vertical_mask << 1;"
    },
    {
        "line": 266,
        "fullcodeline": "i += (n - 1);"
    },
    {
        "line": 267,
        "fullcodeline": "sixel_vertical_mask <<= (n - 1);"
    },
    {
        "line": 236,
        "fullcodeline": "max_x = posision_x;"
    },
    {
        "line": 239,
        "fullcodeline": "max_y = posision_y + i;"
    },
    {
        "line": 250,
        "fullcodeline": "for (n = 1; (i + n) < 6; n++) {"
    },
    {
        "line": 256,
        "fullcodeline": "for (y = posision_y + i; y < posision_y + i + n; ++y) {"
    },
    {
        "line": 259,
        "fullcodeline": "if (max_x < (posision_x + repeat_count - 1)) {"
    },
    {
        "line": 262,
        "fullcodeline": "if (max_y < (posision_y + i + n - 1)) {"
    },
    {
        "line": 254,
        "fullcodeline": "c <<= 1;"
    },
    {
        "line": 257,
        "fullcodeline": "(void) ResetMagickMemory(imbuf + imsx * y + posision_x, color_index, repeat_count);"
    },
    {
        "line": 260,
        "fullcodeline": "max_x = posision_x + repeat_count - 1;"
    },
    {
        "line": 263,
        "fullcodeline": "max_y = posision_y + i + n - 1;"
    },
    {
        "line": 251,
        "fullcodeline": "if ((b & c) == 0) {"
    }
]