[
    {
        "line": 4,
        "fullcodeline": "unsigned short video_port_status = vga_video_port_reg + 6;"
    },
    {
        "line": 5,
        "fullcodeline": "int font_select = 0x00, beg, i;"
    },
    {
        "line": 7,
        "fullcodeline": "bool clear_attribs = false;"
    },
    {
        "line": 43,
        "fullcodeline": "raw_spin_lock_irq(&vga_lock);"
    },
    {
        "line": 45,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_RESET, 0x1);"
    },
    {
        "line": 47,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_PLANE_WRITE, 0x04);"
    },
    {
        "line": 49,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_MEMORY_MODE, 0x07);"
    },
    {
        "line": 51,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_RESET, 0x03);"
    },
    {
        "line": 54,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_PLANE_READ, 0x02);"
    },
    {
        "line": 56,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_MODE, 0x00);"
    },
    {
        "line": 58,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_MISC, 0x00);"
    },
    {
        "line": 59,
        "fullcodeline": "raw_spin_unlock_irq(&vga_lock);"
    },
    {
        "line": 94,
        "fullcodeline": "raw_spin_lock_irq(&vga_lock);"
    },
    {
        "line": 96,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_RESET, 0x01);"
    },
    {
        "line": 98,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_PLANE_WRITE, 0x03);"
    },
    {
        "line": 100,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_MEMORY_MODE, 0x03);"
    },
    {
        "line": 105,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_RESET, 0x03);"
    },
    {
        "line": 108,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_PLANE_READ, 0x00);"
    },
    {
        "line": 110,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_MODE, 0x10);"
    },
    {
        "line": 112,
        "fullcodeline": "vga_wgfx(state->vgabase, VGA_GFX_MISC, beg);"
    },
    {
        "line": 128,
        "fullcodeline": "raw_spin_unlock_irq(&vga_lock);"
    },
    {
        "line": 8,
        "fullcodeline": "if (vga_video_type != VIDEO_TYPE_EGAM) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (!vga_font_is_default)"
    },
    {
        "line": 115,
        "fullcodeline": "if ((set) && (ch512 != vga_512_chars)) {"
    },
    {
        "line": 9,
        "fullcodeline": "charmap = (char *) VGA_MAP_MEM(colourmap, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "beg = 0x0e;"
    },
    {
        "line": 33,
        "fullcodeline": "vga_font_is_default = !arg;"
    },
    {
        "line": 36,
        "fullcodeline": "font_select = arg ? (ch512 ? 0x0e : 0x0a) : 0x00;"
    },
    {
        "line": 40,
        "fullcodeline": "charmap += 4 * cmapsz;"
    },
    {
        "line": 103,
        "fullcodeline": "vga_wseq(state->vgabase, VGA_SEQ_CHARACTER_MAP, font_select);"
    },
    {
        "line": 116,
        "fullcodeline": "vga_512_chars = ch512;"
    },
    {
        "line": 119,
        "fullcodeline": "inb_p(video_port_status);\t/* clear address flip-flop */"
    },
    {
        "line": 121,
        "fullcodeline": "vga_wattr(state->vgabase, VGA_ATC_PLANE_ENABLE, ch512 ? 0x07 : 0x0f);"
    },
    {
        "line": 124,
        "fullcodeline": "inb_p(video_port_status);"
    },
    {
        "line": 125,
        "fullcodeline": "vga_wattr(state->vgabase, VGA_AR_ENABLE_DISPLAY, 0);"
    },
    {
        "line": 126,
        "fullcodeline": "clear_attribs = true;"
    },
    {
        "line": 12,
        "fullcodeline": "charmap = (char *) VGA_MAP_MEM(blackwmap, 0);"
    },
    {
        "line": 13,
        "fullcodeline": "beg = 0x0a;"
    },
    {
        "line": 34,
        "fullcodeline": "if (!arg)"
    },
    {
        "line": 131,
        "fullcodeline": "for (i = 0; i < MAX_NR_CONSOLES; i++) {"
    },
    {
        "line": 35,
        "fullcodeline": "ch512 = false;\t/* Default font is always 256 */"
    },
    {
        "line": 79,
        "fullcodeline": "charmap += 2 * cmapsz;"
    },
    {
        "line": 80,
        "fullcodeline": "arg += cmapsz;"
    },
    {
        "line": 132,
        "fullcodeline": "struct vc_data *c = vc_cons[i].d;"
    },
    {
        "line": 63,
        "fullcodeline": "for (i = 0; i < cmapsz; i++) {"
    },
    {
        "line": 133,
        "fullcodeline": "if (c && c->vc_sw == &vga_con) {"
    },
    {
        "line": 64,
        "fullcodeline": "vga_writeb(arg[i], charmap + i);"
    },
    {
        "line": 65,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 68,
        "fullcodeline": "for (i = 0; i < cmapsz; i++) {"
    },
    {
        "line": 136,
        "fullcodeline": "c->vc_hi_font_mask = 0x00;"
    },
    {
        "line": 137,
        "fullcodeline": "clear_buffer_attributes(c);"
    },
    {
        "line": 138,
        "fullcodeline": "c->vc_hi_font_mask = ch512 ? 0x0800 : 0;"
    },
    {
        "line": 69,
        "fullcodeline": "arg[i] = vga_readb(charmap + i);"
    },
    {
        "line": 70,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 82,
        "fullcodeline": "for (i = 0; i < cmapsz; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "vga_writeb(arg[i], charmap + i);"
    },
    {
        "line": 84,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 87,
        "fullcodeline": "for (i = 0; i < cmapsz; i++) {"
    },
    {
        "line": 88,
        "fullcodeline": "arg[i] = vga_readb(charmap + i);"
    },
    {
        "line": 89,
        "fullcodeline": "cond_resched();"
    }
]