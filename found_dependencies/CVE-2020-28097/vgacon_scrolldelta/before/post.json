[
    {
        "line": 20,
        "fullcodeline": "vgacon_scrollback_cur->restore = 0;"
    },
    {
        "line": 21,
        "fullcodeline": "start = vgacon_scrollback_cur->cur + lines;"
    },
    {
        "line": 22,
        "fullcodeline": "end = start + abs(lines);"
    },
    {
        "line": 36,
        "fullcodeline": "vgacon_scrollback_cur->cur = start;"
    },
    {
        "line": 37,
        "fullcodeline": "count = end - start;"
    },
    {
        "line": 38,
        "fullcodeline": "soff = vgacon_scrollback_cur->tail -"
    },
    {
        "line": 40,
        "fullcodeline": "soff -= count * c->vc_size_row;"
    },
    {
        "line": 45,
        "fullcodeline": "count = vgacon_scrollback_cur->cnt - start;"
    },
    {
        "line": 5,
        "fullcodeline": "if (!lines) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (start < 0)"
    },
    {
        "line": 27,
        "fullcodeline": "if (start > vgacon_scrollback_cur->cnt)"
    },
    {
        "line": 30,
        "fullcodeline": "if (end < 0)"
    },
    {
        "line": 33,
        "fullcodeline": "if (end > vgacon_scrollback_cur->cnt)"
    },
    {
        "line": 42,
        "fullcodeline": "if (soff < 0)"
    },
    {
        "line": 47,
        "fullcodeline": "if (count > c->vc_rows)"
    },
    {
        "line": 6,
        "fullcodeline": "vgacon_restore_screen(c);"
    },
    {
        "line": 14,
        "fullcodeline": "vgacon_cursor(c, CM_ERASE);"
    },
    {
        "line": 15,
        "fullcodeline": "vgacon_save_screen(c);"
    },
    {
        "line": 16,
        "fullcodeline": "c->vc_origin = (unsigned long)c->vc_screenbuf;"
    },
    {
        "line": 17,
        "fullcodeline": "vgacon_scrollback_cur->save = 1;"
    },
    {
        "line": 25,
        "fullcodeline": "start = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "start = vgacon_scrollback_cur->cnt;"
    },
    {
        "line": 31,
        "fullcodeline": "end = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "end = vgacon_scrollback_cur->cnt;"
    },
    {
        "line": 39,
        "fullcodeline": "((vgacon_scrollback_cur->cnt - end) * c->vc_size_row);"
    },
    {
        "line": 43,
        "fullcodeline": "soff += vgacon_scrollback_cur->size;"
    },
    {
        "line": 48,
        "fullcodeline": "count = c->vc_rows;"
    },
    {
        "line": 53,
        "fullcodeline": "int diff = c->vc_rows - count;"
    },
    {
        "line": 54,
        "fullcodeline": "void *d = (void *) c->vc_visible_origin;"
    },
    {
        "line": 55,
        "fullcodeline": "void *s = (void *) c->vc_screenbuf;"
    },
    {
        "line": 57,
        "fullcodeline": "count *= c->vc_size_row;"
    },
    {
        "line": 59,
        "fullcodeline": "copysize = min(count, vgacon_scrollback_cur->size - soff);"
    },
    {
        "line": 60,
        "fullcodeline": "scr_memcpyw(d, vgacon_scrollback_cur->data + soff, copysize);"
    },
    {
        "line": 61,
        "fullcodeline": "d += copysize;"
    },
    {
        "line": 62,
        "fullcodeline": "count -= copysize;"
    },
    {
        "line": 72,
        "fullcodeline": "vgacon_cursor(c, CM_MOVE);"
    },
    {
        "line": 65,
        "fullcodeline": "scr_memcpyw(d, vgacon_scrollback_cur->data, count);"
    },
    {
        "line": 66,
        "fullcodeline": "d += count;"
    },
    {
        "line": 70,
        "fullcodeline": "scr_memcpyw(d, s, diff * c->vc_size_row);"
    }
]