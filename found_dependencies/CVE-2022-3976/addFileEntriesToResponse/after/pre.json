[
    {
        "line": 3,
        "fullcodeline": "int directoryNameLength = strlen(directoryName);"
    },
    {
        "line": 5,
        "fullcodeline": "DirectoryHandle directory = openDirectory(basepath, directoryName);"
    },
    {
        "line": 76,
        "fullcodeline": "directoryName[directoryNameLength] = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "if (directory != NULL) {"
    },
    {
        "line": 10,
        "fullcodeline": "char* fileName = FileSystem_readDirectory(directory, &isDirectory);"
    },
    {
        "line": 30,
        "fullcodeline": "FileSystem_closeDirectory(directory);"
    },
    {
        "line": 12,
        "fullcodeline": "while (fileName != NULL) {"
    },
    {
        "line": 13,
        "fullcodeline": "directoryName[directoryNameLength] = 0;"
    },
    {
        "line": 20,
        "fullcodeline": "StringUtils_appendString(directoryName, 256, fileName);"
    },
    {
        "line": 22,
        "fullcodeline": "bufPos = addFileEntriesToResponse(basepath, buffer, bufPos, maxBufSize, directoryName, continueAfterFileName, moreFollows);"
    },
    {
        "line": 27,
        "fullcodeline": "fileName = FileSystem_readDirectory(directory, &isDirectory);"
    },
    {
        "line": 34,
        "fullcodeline": "if (*continueAfterFileName != NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (directoryNameLength > 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (*moreFollows == true)"
    },
    {
        "line": 35,
        "fullcodeline": "if (strcmp(*continueAfterFileName, directoryName) == 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (directoryName[directoryNameLength - 1] != '/')"
    },
    {
        "line": 36,
        "fullcodeline": "*continueAfterFileName = NULL;"
    },
    {
        "line": 44,
        "fullcodeline": "if (getFileInfo(basepath, directoryName, &fileSize, &msTime)) {"
    },
    {
        "line": 17,
        "fullcodeline": "StringUtils_appendString(directoryName, 256, \"/\");"
    },
    {
        "line": 45,
        "fullcodeline": "char gtString[30];"
    },
    {
        "line": 47,
        "fullcodeline": "Conversions_msTimeToGeneralizedTime(msTime, (uint8_t*) gtString);"
    },
    {
        "line": 49,
        "fullcodeline": "int fileAttributesSize = encodeFileAttributes(0xa1, fileSize, gtString, NULL, 0);"
    },
    {
        "line": 51,
        "fullcodeline": "int filenameSize = encodeFileSpecification(0xa0, directoryName, NULL, 0);"
    },
    {
        "line": 53,
        "fullcodeline": "int dirEntrySize = 2 + fileAttributesSize + filenameSize;"
    },
    {
        "line": 55,
        "fullcodeline": "int overallEntrySize = 1 + BerEncoder_determineLengthSize(dirEntrySize) + dirEntrySize;"
    },
    {
        "line": 57,
        "fullcodeline": "int bufferSpaceLeft = maxBufSize - bufPos;"
    },
    {
        "line": 59,
        "fullcodeline": "if (overallEntrySize > bufferSpaceLeft) {"
    },
    {
        "line": 70,
        "fullcodeline": "bufPos = -1;"
    },
    {
        "line": 60,
        "fullcodeline": "*moreFollows = true;"
    },
    {
        "line": 64,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0x30, dirEntrySize, buffer, bufPos); /* SEQUENCE (DirectoryEntry) */"
    },
    {
        "line": 65,
        "fullcodeline": "bufPos = encodeFileSpecification(0xa0, directoryName, buffer, bufPos); /* fileName */"
    },
    {
        "line": 66,
        "fullcodeline": "bufPos = encodeFileAttributes(0xa1, fileSize, gtString, buffer, bufPos); /* file attributes */"
    }
]