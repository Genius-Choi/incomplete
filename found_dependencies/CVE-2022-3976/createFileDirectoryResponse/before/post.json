[
    {
        "line": 3,
        "fullcodeline": "int maxSize = maxPduSize - 3; /* reserve space for moreFollows */"
    },
    {
        "line": 4,
        "fullcodeline": "uint8_t* buffer = response->buffer;"
    },
    {
        "line": 6,
        "fullcodeline": "bool moreFollows = false;"
    },
    {
        "line": 8,
        "fullcodeline": "int tempStartPos = 30; /* estimated header part with safety margin */"
    },
    {
        "line": 9,
        "fullcodeline": "int tempCurPos = tempStartPos;"
    },
    {
        "line": 10,
        "fullcodeline": "int tempEncoded = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "tempCurPos = addFileEntriesToResponse(basepath, buffer, tempCurPos, maxSize, directoryName, &continueAfterFileName, &moreFollows);"
    },
    {
        "line": 29,
        "fullcodeline": "tempEncoded = tempCurPos - tempStartPos;"
    },
    {
        "line": 31,
        "fullcodeline": "uint32_t invokeIdSize = BerEncoder_UInt32determineEncodedSize((uint32_t) invokeId) + 2;"
    },
    {
        "line": 33,
        "fullcodeline": "uint32_t listOfDirectoryEntrySeqSize = tempEncoded;"
    },
    {
        "line": 35,
        "fullcodeline": "uint32_t listOfDirectoryEntrySize = 1 + BerEncoder_determineLengthSize(tempEncoded) + tempEncoded;"
    },
    {
        "line": 37,
        "fullcodeline": "uint32_t fileDirectoryResponseSize = 1 + BerEncoder_determineLengthSize(listOfDirectoryEntrySize)"
    },
    {
        "line": 43,
        "fullcodeline": "uint32_t confirmedResponsePDUSize = invokeIdSize + 2 + BerEncoder_determineLengthSize(fileDirectoryResponseSize)"
    },
    {
        "line": 46,
        "fullcodeline": "int bufPos = 0;"
    },
    {
        "line": 48,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0xa1, confirmedResponsePDUSize, buffer, bufPos);"
    },
    {
        "line": 50,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0x02, invokeIdSize - 2, buffer, bufPos);"
    },
    {
        "line": 51,
        "fullcodeline": "bufPos = BerEncoder_encodeUInt32(invokeId, buffer, bufPos);"
    },
    {
        "line": 53,
        "fullcodeline": "buffer[bufPos++] = 0xbf;"
    },
    {
        "line": 54,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0x4d, fileDirectoryResponseSize, buffer, bufPos);"
    },
    {
        "line": 55,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0xa0, listOfDirectoryEntrySize, buffer, bufPos);"
    },
    {
        "line": 57,
        "fullcodeline": "bufPos = BerEncoder_encodeTL(0x30, listOfDirectoryEntrySeqSize, buffer, bufPos); /* SEQUENCE OF (DirectoryEntry) */"
    },
    {
        "line": 60,
        "fullcodeline": "memmove(buffer + bufPos, buffer + tempStartPos, tempEncoded);"
    },
    {
        "line": 62,
        "fullcodeline": "bufPos += tempEncoded;"
    },
    {
        "line": 67,
        "fullcodeline": "response->size = bufPos;"
    },
    {
        "line": 12,
        "fullcodeline": "if (continueAfterFileName != NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (tempCurPos < 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "mmsMsg_createServiceErrorPdu(invokeId, response, MMS_ERROR_FILE_FILE_NON_EXISTENT);"
    },
    {
        "line": 41,
        "fullcodeline": "fileDirectoryResponseSize += 3; /* for moreFollows */"
    },
    {
        "line": 65,
        "fullcodeline": "bufPos = BerEncoder_encodeBoolean(0x81, moreFollows, buffer, bufPos);"
    },
    {
        "line": 13,
        "fullcodeline": "if (strlen(continueAfterFileName) == 0)"
    },
    {
        "line": 14,
        "fullcodeline": "continueAfterFileName = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "printf(\"MMS_SERVER: Error opening directory!\\n\");"
    }
]