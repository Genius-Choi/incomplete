[
    {
        "line": 3,
        "fullcodeline": "int bitmap_size = 0, info_size, total_size, padding;"
    },
    {
        "line": 5,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "unsigned char *uncompressed_row = NULL, *uncompressed_row_start = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "FILE *tmpfile_for_compression = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "gdIOCtxPtr out_original = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "int ret = 1;"
    },
    {
        "line": 30,
        "fullcodeline": "bitmap_size = ((im->sx * (im->trueColor ? 24 : 8)) / 8) * im->sy;"
    },
    {
        "line": 33,
        "fullcodeline": "info_size = BMP_WINDOWS_V3;"
    },
    {
        "line": 44,
        "fullcodeline": "total_size = 14 + info_size + bitmap_size;"
    },
    {
        "line": 47,
        "fullcodeline": "gdPutBuf(\"BM\", 2, out);"
    },
    {
        "line": 48,
        "fullcodeline": "gdBMPPutInt(out, total_size);"
    },
    {
        "line": 49,
        "fullcodeline": "gdBMPPutWord(out, 0);"
    },
    {
        "line": 50,
        "fullcodeline": "gdBMPPutWord(out, 0);"
    },
    {
        "line": 51,
        "fullcodeline": "gdBMPPutInt(out, 14 + info_size);"
    },
    {
        "line": 54,
        "fullcodeline": "gdBMPPutInt(out, BMP_WINDOWS_V3); /* header size */"
    },
    {
        "line": 55,
        "fullcodeline": "gdBMPPutInt(out, im->sx); /* width */"
    },
    {
        "line": 56,
        "fullcodeline": "gdBMPPutInt(out, im->sy); /* height */"
    },
    {
        "line": 57,
        "fullcodeline": "gdBMPPutWord(out, 1); /* colour planes */"
    },
    {
        "line": 58,
        "fullcodeline": "gdBMPPutWord(out, (im->trueColor ? 24 : 8)); /* bit count */"
    },
    {
        "line": 59,
        "fullcodeline": "gdBMPPutInt(out, (compression ? BMP_BI_RLE8 : BMP_BI_RGB)); /* compression */"
    },
    {
        "line": 60,
        "fullcodeline": "gdBMPPutInt(out, bitmap_size); /* image size */"
    },
    {
        "line": 61,
        "fullcodeline": "gdBMPPutInt(out, 0); /* H resolution */"
    },
    {
        "line": 62,
        "fullcodeline": "gdBMPPutInt(out, 0); /* V ressolution */"
    },
    {
        "line": 63,
        "fullcodeline": "gdBMPPutInt(out, im->colorsTotal); /* colours used */"
    },
    {
        "line": 64,
        "fullcodeline": "gdBMPPutInt(out, 0); /* important colours */"
    },
    {
        "line": 67,
        "fullcodeline": "padding = ((int)(im->trueColor ? 3 : 1) * im->sx) % 4;"
    },
    {
        "line": 187,
        "fullcodeline": "ret = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "if (compression && !out->seek) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!im->trueColor) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (!im->trueColor) {"
    },
    {
        "line": 13,
        "fullcodeline": "compression = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "info_size += im->colorsTotal * 4;"
    },
    {
        "line": 69,
        "fullcodeline": "padding = 4 - padding;"
    },
    {
        "line": 164,
        "fullcodeline": "unsigned char* copy_buffer = NULL;"
    },
    {
        "line": 165,
        "fullcodeline": "int buffer_size = 0;"
    },
    {
        "line": 167,
        "fullcodeline": "gdSeek(out, 0);"
    },
    {
        "line": 168,
        "fullcodeline": "copy_buffer = (unsigned char *) gdMalloc(1024 * sizeof(unsigned char));"
    },
    {
        "line": 179,
        "fullcodeline": "gdFree(copy_buffer);"
    },
    {
        "line": 182,
        "fullcodeline": "out->gd_free(out);"
    },
    {
        "line": 183,
        "fullcodeline": "out = out_original;"
    },
    {
        "line": 184,
        "fullcodeline": "out_original = NULL;"
    },
    {
        "line": 193,
        "fullcodeline": "fclose(tmpfile_for_compression);"
    },
    {
        "line": 195,
        "fullcodeline": "tmpfile_for_compression = NULL;"
    },
    {
        "line": 199,
        "fullcodeline": "out_original->gd_free(out_original);"
    },
    {
        "line": 18,
        "fullcodeline": "if ((tmpfile_for_compression = tmpfile()) == NULL) {"
    },
    {
        "line": 74,
        "fullcodeline": "for(i = 0; i< im->colorsTotal; ++i) {"
    },
    {
        "line": 90,
        "fullcodeline": "for (row = (im->sy - 1); row >= 0; row--) {"
    },
    {
        "line": 125,
        "fullcodeline": "if (compression && uncompressed_row) {"
    },
    {
        "line": 169,
        "fullcodeline": "if (copy_buffer == NULL) {"
    },
    {
        "line": 173,
        "fullcodeline": "while ((buffer_size = gdGetBuf(copy_buffer, 1024, out)) != EOF) {"
    },
    {
        "line": 19,
        "fullcodeline": "compression = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "bitmap_size = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "gdPutC(gdImageBlue(im, i), out);"
    },
    {
        "line": 76,
        "fullcodeline": "gdPutC(gdImageGreen(im, i), out);"
    },
    {
        "line": 77,
        "fullcodeline": "gdPutC(gdImageRed(im, i), out);"
    },
    {
        "line": 78,
        "fullcodeline": "gdPutC(0, out);"
    },
    {
        "line": 83,
        "fullcodeline": "uncompressed_row = uncompressed_row_start = (unsigned char *) gdCalloc(gdImageSX(im) * 2, sizeof(char));"
    },
    {
        "line": 126,
        "fullcodeline": "gdFree(uncompressed_row);"
    },
    {
        "line": 131,
        "fullcodeline": "gdPutC(BMP_RLE_COMMAND, out);"
    },
    {
        "line": 132,
        "fullcodeline": "gdPutC(BMP_RLE_ENDOFBITMAP, out);"
    },
    {
        "line": 133,
        "fullcodeline": "bitmap_size += 2;"
    },
    {
        "line": 136,
        "fullcodeline": "gdSeek(out, 2);"
    },
    {
        "line": 137,
        "fullcodeline": "gdBMPPutInt(out, total_size + bitmap_size);"
    },
    {
        "line": 140,
        "fullcodeline": "gdSeek(out, 34);"
    },
    {
        "line": 141,
        "fullcodeline": "gdBMPPutInt(out, bitmap_size);"
    },
    {
        "line": 145,
        "fullcodeline": "for (row = (im->sy - 1); row >= 0; row--) {"
    },
    {
        "line": 177,
        "fullcodeline": "gdPutBuf(copy_buffer , buffer_size, out_original);"
    },
    {
        "line": 21,
        "fullcodeline": "out_original = out;"
    },
    {
        "line": 84,
        "fullcodeline": "if (!uncompressed_row) {"
    },
    {
        "line": 95,
        "fullcodeline": "for (xpos = 0; xpos < im->sx; xpos++) {"
    },
    {
        "line": 103,
        "fullcodeline": "if (!compression) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (error != 0) {"
    },
    {
        "line": 174,
        "fullcodeline": "if (buffer_size == 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if ((out = (gdIOCtxPtr)gdNewFileCtx(tmpfile_for_compression)) == NULL) {"
    },
    {
        "line": 92,
        "fullcodeline": "memset (uncompressed_row, 0, gdImageSX(im));"
    },
    {
        "line": 146,
        "fullcodeline": "for (xpos = 0; xpos < im->sx; xpos++) {"
    },
    {
        "line": 155,
        "fullcodeline": "for (xpos = padding; xpos > 0; --xpos) {"
    },
    {
        "line": 23,
        "fullcodeline": "out = out_original;"
    },
    {
        "line": 24,
        "fullcodeline": "out_original = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "compression = 0;"
    },
    {
        "line": 105,
        "fullcodeline": "for (xpos = padding; xpos > 0; --xpos) {"
    },
    {
        "line": 109,
        "fullcodeline": "int compressed_size = 0;"
    },
    {
        "line": 110,
        "fullcodeline": "uncompressed_row = uncompressed_row_start;"
    },
    {
        "line": 115,
        "fullcodeline": "bitmap_size += compressed_size;"
    },
    {
        "line": 118,
        "fullcodeline": "gdPutBuf(uncompressed_row, compressed_size, out);"
    },
    {
        "line": 119,
        "fullcodeline": "gdPutC(BMP_RLE_COMMAND, out);"
    },
    {
        "line": 120,
        "fullcodeline": "gdPutC(BMP_RLE_ENDOFLINE, out);"
    },
    {
        "line": 121,
        "fullcodeline": "bitmap_size += 2;"
    },
    {
        "line": 147,
        "fullcodeline": "pixel = gdImageGetPixel(im, xpos, row);"
    },
    {
        "line": 149,
        "fullcodeline": "gdPutC(gdTrueColorGetBlue(pixel), out);"
    },
    {
        "line": 150,
        "fullcodeline": "gdPutC(gdTrueColorGetGreen(pixel), out);"
    },
    {
        "line": 151,
        "fullcodeline": "gdPutC(gdTrueColorGetRed(pixel), out);"
    },
    {
        "line": 156,
        "fullcodeline": "gdPutC('\\0', out);"
    },
    {
        "line": 97,
        "fullcodeline": "*uncompressed_row++ = (unsigned char)gdImageGetPixel(im, xpos, row);"
    },
    {
        "line": 106,
        "fullcodeline": "gdPutC('\\0', out);"
    },
    {
        "line": 111,
        "fullcodeline": "if ((compressed_size = compress_row(uncompressed_row, gdImageSX(im))) < 0) {"
    },
    {
        "line": 99,
        "fullcodeline": "gdPutC(gdImageGetPixel(im, xpos, row), out);"
    },
    {
        "line": 112,
        "fullcodeline": "error = 1;"
    }
]