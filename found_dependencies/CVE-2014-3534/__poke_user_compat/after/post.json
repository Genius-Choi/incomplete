[
    {
        "line": 4,
        "fullcodeline": "struct compat_user *dummy32 = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "__u32 tmp = (__u32) data;"
    },
    {
        "line": 8,
        "fullcodeline": "if (addr < (addr_t) &dummy32->regs.acrs) {"
    },
    {
        "line": 9,
        "fullcodeline": "struct pt_regs *regs = task_pt_regs(child);"
    },
    {
        "line": 13,
        "fullcodeline": "if (addr == (addr_t) &dummy32->regs.psw.mask) {"
    },
    {
        "line": 14,
        "fullcodeline": "__u32 mask = PSW32_MASK_USER;"
    },
    {
        "line": 16,
        "fullcodeline": "mask |= is_ri_task(child) ? PSW32_MASK_RI : 0;"
    },
    {
        "line": 24,
        "fullcodeline": "regs->psw.mask = (regs->psw.mask & ~PSW_MASK_USER) |"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy32->regs.orig_gpr2)) {"
    },
    {
        "line": 18,
        "fullcodeline": "if ((tmp ^ PSW32_USER_BITS) & ~mask)"
    },
    {
        "line": 21,
        "fullcodeline": "if ((data & PSW32_MASK_ASC) == PSW32_ASC_HOME)"
    },
    {
        "line": 41,
        "fullcodeline": "offset = addr - (addr_t) &dummy32->regs.acrs;"
    },
    {
        "line": 42,
        "fullcodeline": "*(__u32*)((addr_t) &child->thread.acrs + offset) = tmp;"
    },
    {
        "line": 26,
        "fullcodeline": "(__u64)(tmp & mask) << 32;"
    },
    {
        "line": 27,
        "fullcodeline": "} else if (addr == (addr_t) &dummy32->regs.psw.addr) {"
    },
    {
        "line": 20,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 23,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 25,
        "fullcodeline": "(regs->psw.mask & PSW_MASK_BA) |"
    },
    {
        "line": 29,
        "fullcodeline": "regs->psw.addr = (__u64) tmp & PSW32_ADDR_INSN;"
    },
    {
        "line": 31,
        "fullcodeline": "regs->psw.mask = (regs->psw.mask & ~PSW_MASK_BA) |"
    },
    {
        "line": 44,
        "fullcodeline": "} else if (addr == (addr_t) (&dummy32->regs.orig_gpr2)) {"
    },
    {
        "line": 35,
        "fullcodeline": "*(__u32*)((addr_t) &regs->psw + addr*2 + 4) = tmp;"
    },
    {
        "line": 48,
        "fullcodeline": "*(__u32*)((addr_t) &task_pt_regs(child)->orig_gpr2 + 4) = tmp;"
    },
    {
        "line": 32,
        "fullcodeline": "(__u64)(tmp & PSW32_ADDR_AMODE);"
    },
    {
        "line": 50,
        "fullcodeline": "} else if (addr < (addr_t) &dummy32->regs.fp_regs) {"
    },
    {
        "line": 57,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy32->regs.fp_regs + 1)) {"
    },
    {
        "line": 64,
        "fullcodeline": "offset = addr - (addr_t) &dummy32->regs.fp_regs;"
    },
    {
        "line": 65,
        "fullcodeline": "*(__u32 *)((addr_t) &child->thread.fp_regs + offset) = tmp;"
    },
    {
        "line": 61,
        "fullcodeline": "if (addr == (addr_t) &dummy32->regs.fp_regs.fpc &&"
    },
    {
        "line": 62,
        "fullcodeline": "test_fp_ctl(tmp))"
    },
    {
        "line": 67,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy32->regs.per_info + 1)) {"
    },
    {
        "line": 63,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 71,
        "fullcodeline": "addr -= (addr_t) &dummy32->regs.per_info;"
    },
    {
        "line": 72,
        "fullcodeline": "__poke_user_per_compat(child, addr, data);"
    }
]