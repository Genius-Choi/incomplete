[
    {
        "line": 3,
        "fullcodeline": "struct user *dummy = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "if (addr < (addr_t) &dummy->regs.acrs) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (addr == (addr_t) &dummy->regs.psw.mask) {"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned long mask = PSW_MASK_USER;"
    },
    {
        "line": 13,
        "fullcodeline": "mask |= is_ri_task(child) ? PSW_MASK_RI : 0;"
    },
    {
        "line": 21,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy->regs.orig_gpr2)) {"
    },
    {
        "line": 14,
        "fullcodeline": "if ((data & ~mask) != PSW_USER_BITS)"
    },
    {
        "line": 19,
        "fullcodeline": "*(addr_t *)((addr_t) &task_pt_regs(child)->psw + addr) = data;"
    },
    {
        "line": 25,
        "fullcodeline": "offset = addr - (addr_t) &dummy->regs.acrs;"
    },
    {
        "line": 16,
        "fullcodeline": "if ((data & PSW_MASK_EA) && !(data & PSW_MASK_BA))"
    },
    {
        "line": 15,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 37,
        "fullcodeline": "*(addr_t *)((addr_t) &child->thread.acrs + offset) = data;"
    },
    {
        "line": 39,
        "fullcodeline": "} else if (addr == (addr_t) &dummy->regs.orig_gpr2) {"
    },
    {
        "line": 45,
        "fullcodeline": "} else if (addr < (addr_t) &dummy->regs.fp_regs) {"
    },
    {
        "line": 52,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy->regs.fp_regs + 1)) {"
    },
    {
        "line": 60,
        "fullcodeline": "offset = addr - (addr_t) &dummy->regs.fp_regs;"
    },
    {
        "line": 56,
        "fullcodeline": "if (addr == (addr_t) &dummy->regs.fp_regs.fpc)"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (addr < (addr_t) (&dummy->regs.per_info + 1)) {"
    },
    {
        "line": 61,
        "fullcodeline": "*(addr_t *)((addr_t) &child->thread.fp_regs + offset) = data;"
    },
    {
        "line": 67,
        "fullcodeline": "addr -= (addr_t) &dummy->regs.per_info;"
    },
    {
        "line": 57,
        "fullcodeline": "if ((unsigned int) data != 0 ||"
    },
    {
        "line": 58,
        "fullcodeline": "test_fp_ctl(data >> (BITS_PER_LONG - 32)))"
    },
    {
        "line": 59,
        "fullcodeline": "return -EINVAL;"
    }
]