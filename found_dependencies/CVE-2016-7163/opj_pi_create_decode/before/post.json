[
    {
        "line": 23,
        "fullcodeline": "opj_pi_iterator_t *l_pi = 00;"
    },
    {
        "line": 24,
        "fullcodeline": "opj_tcp_t *l_tcp = 00;"
    },
    {
        "line": 25,
        "fullcodeline": "const opj_tccp_t *l_tccp = 00;"
    },
    {
        "line": 26,
        "fullcodeline": "opj_pi_comp_t *l_current_comp = 00;"
    },
    {
        "line": 27,
        "fullcodeline": "opj_image_comp_t * l_img_comp = 00;"
    },
    {
        "line": 28,
        "fullcodeline": "opj_pi_iterator_t * l_current_pi = 00;"
    },
    {
        "line": 29,
        "fullcodeline": "OPJ_UINT32 * l_encoding_value_ptr = 00;"
    },
    {
        "line": 32,
        "fullcodeline": "assert(p_cp != 00);"
    },
    {
        "line": 33,
        "fullcodeline": "assert(p_image != 00);"
    },
    {
        "line": 34,
        "fullcodeline": "assert(p_tile_no < p_cp->tw * p_cp->th);"
    },
    {
        "line": 38,
        "fullcodeline": "l_bound = l_tcp->numpocs+1;"
    },
    {
        "line": 40,
        "fullcodeline": "l_data_stride = 4 * OPJ_J2K_MAXRLVLS;"
    },
    {
        "line": 41,
        "fullcodeline": "l_tmp_data = (OPJ_UINT32*)opj_malloc("
    },
    {
        "line": 48,
        "fullcodeline": "l_tmp_ptr = (OPJ_UINT32**)opj_malloc("
    },
    {
        "line": 58,
        "fullcodeline": "l_pi = opj_pi_create(p_image, p_cp, p_tile_no);"
    },
    {
        "line": 65,
        "fullcodeline": "l_encoding_value_ptr = l_tmp_data;"
    },
    {
        "line": 74,
        "fullcodeline": "opj_get_all_encoding_parameters(p_image,p_cp,p_tile_no,&l_tx0,&l_tx1,&l_ty0,&l_ty1,&l_dx_min,&l_dy_min,&l_max_prec,&l_max_res,l_tmp_ptr);"
    },
    {
        "line": 77,
        "fullcodeline": "l_step_p = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "l_step_c = l_max_prec * l_step_p;"
    },
    {
        "line": 79,
        "fullcodeline": "l_step_r = p_image->numcomps * l_step_c;"
    },
    {
        "line": 80,
        "fullcodeline": "l_step_l = l_max_res * l_step_r;"
    },
    {
        "line": 83,
        "fullcodeline": "l_current_pi = l_pi;"
    },
    {
        "line": 87,
        "fullcodeline": "l_current_pi->include = 00;"
    },
    {
        "line": 103,
        "fullcodeline": "l_current_comp = l_current_pi->comps;"
    },
    {
        "line": 104,
        "fullcodeline": "l_img_comp = p_image->comps;"
    },
    {
        "line": 105,
        "fullcodeline": "l_tccp = l_tcp->tccps;"
    },
    {
        "line": 107,
        "fullcodeline": "l_current_pi->tx0 = l_tx0;"
    },
    {
        "line": 108,
        "fullcodeline": "l_current_pi->ty0 = l_ty0;"
    },
    {
        "line": 109,
        "fullcodeline": "l_current_pi->tx1 = l_tx1;"
    },
    {
        "line": 110,
        "fullcodeline": "l_current_pi->ty1 = l_ty1;"
    },
    {
        "line": 115,
        "fullcodeline": "l_current_pi->step_p = l_step_p;"
    },
    {
        "line": 116,
        "fullcodeline": "l_current_pi->step_c = l_step_c;"
    },
    {
        "line": 117,
        "fullcodeline": "l_current_pi->step_r = l_step_r;"
    },
    {
        "line": 118,
        "fullcodeline": "l_current_pi->step_l = l_step_l;"
    },
    {
        "line": 143,
        "fullcodeline": "++l_current_pi;"
    },
    {
        "line": 189,
        "fullcodeline": "opj_free(l_tmp_data);"
    },
    {
        "line": 190,
        "fullcodeline": "l_tmp_data = 00;"
    },
    {
        "line": 191,
        "fullcodeline": "opj_free(l_tmp_ptr);"
    },
    {
        "line": 192,
        "fullcodeline": "l_tmp_ptr = 00;"
    },
    {
        "line": 44,
        "fullcodeline": "(! l_tmp_data)"
    },
    {
        "line": 51,
        "fullcodeline": "(! l_tmp_ptr)"
    },
    {
        "line": 59,
        "fullcodeline": "if (!l_pi) {"
    },
    {
        "line": 68,
        "fullcodeline": "(compno = 0; compno < p_image->numcomps; ++compno)"
    },
    {
        "line": 88,
        "fullcodeline": "if (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U)))"
    },
    {
        "line": 94,
        "fullcodeline": "(!l_current_pi->include)"
    },
    {
        "line": 122,
        "fullcodeline": "(compno = 0; compno < l_current_pi->numcomps; ++compno)"
    },
    {
        "line": 145,
        "fullcodeline": "for (pino = 1 ; pino<l_bound ; ++pino )"
    },
    {
        "line": 53,
        "fullcodeline": "opj_free(l_tmp_data);"
    },
    {
        "line": 60,
        "fullcodeline": "opj_free(l_tmp_data);"
    },
    {
        "line": 61,
        "fullcodeline": "opj_free(l_tmp_ptr);"
    },
    {
        "line": 70,
        "fullcodeline": "l_tmp_ptr[compno] = l_encoding_value_ptr;"
    },
    {
        "line": 71,
        "fullcodeline": "l_encoding_value_ptr += l_data_stride;"
    },
    {
        "line": 90,
        "fullcodeline": "l_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));"
    },
    {
        "line": 96,
        "fullcodeline": "opj_free(l_tmp_data);"
    },
    {
        "line": 97,
        "fullcodeline": "opj_free(l_tmp_ptr);"
    },
    {
        "line": 98,
        "fullcodeline": "opj_pi_destroy(l_pi, l_bound);"
    },
    {
        "line": 124,
        "fullcodeline": "opj_pi_resolution_t *l_res = l_current_comp->resolutions;"
    },
    {
        "line": 125,
        "fullcodeline": "l_encoding_value_ptr = l_tmp_ptr[compno];"
    },
    {
        "line": 127,
        "fullcodeline": "l_current_comp->dx = l_img_comp->dx;"
    },
    {
        "line": 128,
        "fullcodeline": "l_current_comp->dy = l_img_comp->dy;"
    },
    {
        "line": 139,
        "fullcodeline": "++l_current_comp;"
    },
    {
        "line": 140,
        "fullcodeline": "++l_img_comp;"
    },
    {
        "line": 141,
        "fullcodeline": "++l_tccp;"
    },
    {
        "line": 147,
        "fullcodeline": "l_current_comp = l_current_pi->comps;"
    },
    {
        "line": 148,
        "fullcodeline": "l_img_comp = p_image->comps;"
    },
    {
        "line": 149,
        "fullcodeline": "l_tccp = l_tcp->tccps;"
    },
    {
        "line": 151,
        "fullcodeline": "l_current_pi->tx0 = l_tx0;"
    },
    {
        "line": 152,
        "fullcodeline": "l_current_pi->ty0 = l_ty0;"
    },
    {
        "line": 153,
        "fullcodeline": "l_current_pi->tx1 = l_tx1;"
    },
    {
        "line": 154,
        "fullcodeline": "l_current_pi->ty1 = l_ty1;"
    },
    {
        "line": 157,
        "fullcodeline": "l_current_pi->step_p = l_step_p;"
    },
    {
        "line": 158,
        "fullcodeline": "l_current_pi->step_c = l_step_c;"
    },
    {
        "line": 159,
        "fullcodeline": "l_current_pi->step_r = l_step_r;"
    },
    {
        "line": 160,
        "fullcodeline": "l_current_pi->step_l = l_step_l;"
    },
    {
        "line": 187,
        "fullcodeline": "++l_current_pi;"
    },
    {
        "line": 196,
        "fullcodeline": "opj_pi_update_decode_poc (l_pi,l_tcp,l_max_prec,l_max_res);"
    },
    {
        "line": 42,
        "fullcodeline": "l_data_stride * p_image->numcomps * sizeof(OPJ_UINT32));"
    },
    {
        "line": 49,
        "fullcodeline": "p_image->numcomps * sizeof(OPJ_UINT32 *));"
    },
    {
        "line": 131,
        "fullcodeline": "(resno = 0; resno < l_current_comp->numresolutions; resno++)"
    },
    {
        "line": 164,
        "fullcodeline": "(compno = 0; compno < l_current_pi->numcomps; ++compno)"
    },
    {
        "line": 200,
        "fullcodeline": "opj_pi_update_decode_not_poc(l_pi,l_tcp,l_max_prec,l_max_res);"
    },
    {
        "line": 137,
        "fullcodeline": "++l_res;"
    },
    {
        "line": 166,
        "fullcodeline": "opj_pi_resolution_t *l_res = l_current_comp->resolutions;"
    },
    {
        "line": 167,
        "fullcodeline": "l_encoding_value_ptr = l_tmp_ptr[compno];"
    },
    {
        "line": 169,
        "fullcodeline": "l_current_comp->dx = l_img_comp->dx;"
    },
    {
        "line": 170,
        "fullcodeline": "l_current_comp->dy = l_img_comp->dy;"
    },
    {
        "line": 181,
        "fullcodeline": "++l_current_comp;"
    },
    {
        "line": 182,
        "fullcodeline": "++l_img_comp;"
    },
    {
        "line": 183,
        "fullcodeline": "++l_tccp;"
    },
    {
        "line": 186,
        "fullcodeline": "l_current_pi->include = (l_current_pi-1)->include;"
    },
    {
        "line": 173,
        "fullcodeline": "(resno = 0; resno < l_current_comp->numresolutions; resno++)"
    },
    {
        "line": 133,
        "fullcodeline": "l_res->pdx = *(l_encoding_value_ptr++);"
    },
    {
        "line": 134,
        "fullcodeline": "l_res->pdy = *(l_encoding_value_ptr++);"
    },
    {
        "line": 135,
        "fullcodeline": "l_res->pw =  *(l_encoding_value_ptr++);"
    },
    {
        "line": 136,
        "fullcodeline": "l_res->ph =  *(l_encoding_value_ptr++);"
    },
    {
        "line": 179,
        "fullcodeline": "++l_res;"
    },
    {
        "line": 175,
        "fullcodeline": "l_res->pdx = *(l_encoding_value_ptr++);"
    },
    {
        "line": 176,
        "fullcodeline": "l_res->pdy = *(l_encoding_value_ptr++);"
    },
    {
        "line": 177,
        "fullcodeline": "l_res->pw =  *(l_encoding_value_ptr++);"
    },
    {
        "line": 178,
        "fullcodeline": "l_res->ph =  *(l_encoding_value_ptr++);"
    }
]