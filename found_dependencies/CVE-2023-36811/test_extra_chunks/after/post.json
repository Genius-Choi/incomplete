[
    {
        "line": 2,
        "fullcodeline": "archiver = request.getfixturevalue(archivers)"
    },
    {
        "line": 5,
        "fullcodeline": "check_cmd_setup(archiver)"
    },
    {
        "line": 6,
        "fullcodeline": "cmd(archiver, \"check\", exit_code=0)"
    },
    {
        "line": 10,
        "fullcodeline": "cmd(archiver, \"check\", exit_code=1)"
    },
    {
        "line": 11,
        "fullcodeline": "cmd(archiver, \"check\", exit_code=1)"
    },
    {
        "line": 12,
        "fullcodeline": "cmd(archiver, \"check\", \"--repair\", exit_code=0)"
    },
    {
        "line": 13,
        "fullcodeline": "cmd(archiver, \"check\", exit_code=0)"
    },
    {
        "line": 14,
        "fullcodeline": "cmd(archiver, \"extract\", \"archive1\", \"--dry-run\", exit_code=0)"
    },
    {
        "line": 3,
        "fullcodeline": "if archiver.get_kind() == \"remote\":"
    },
    {
        "line": 7,
        "fullcodeline": "with Repository(archiver.repository_location, exclusive=True) as repository:"
    },
    {
        "line": 4,
        "fullcodeline": "pytest.skip(\"only works locally\")"
    },
    {
        "line": 8,
        "fullcodeline": "repository.put(b\"01234567890123456789012345678901\", b\"xxxx\")"
    },
    {
        "line": 9,
        "fullcodeline": "repository.commit(compact=False)"
    }
]