[
    {
        "line": 2,
        "fullcodeline": "cmd(archiver, \"rcreate\", RK_ENCRYPTION)"
    },
    {
        "line": 3,
        "fullcodeline": "create_src_archive(archiver, \"archive_tam\")"
    },
    {
        "line": 4,
        "fullcodeline": "repository = Repository(archiver.repository_path, exclusive=True)"
    },
    {
        "line": 9,
        "fullcodeline": "cmd(archiver, \"check\", \"--repair\")"
    },
    {
        "line": 10,
        "fullcodeline": "output = cmd(archiver, \"rlist\", \"--format='{name} tam:{tam}{NL}'\")"
    },
    {
        "line": 11,
        "fullcodeline": "assert \"archive_tam tam:verified\" in output  # TAM-verified archive is in rebuilt manifest"
    },
    {
        "line": 12,
        "fullcodeline": "assert \"archive_no_tam\" not in output  # check got rid of untrusted not TAM-verified archive"
    },
    {
        "line": 5,
        "fullcodeline": "with repository:"
    },
    {
        "line": 6,
        "fullcodeline": "write_archive_without_tam(repository, \"archive_no_tam\")"
    },
    {
        "line": 7,
        "fullcodeline": "repository.delete(Manifest.MANIFEST_ID)  # kill manifest, so check has to rebuild it"
    },
    {
        "line": 8,
        "fullcodeline": "repository.commit(compact=False)"
    }
]