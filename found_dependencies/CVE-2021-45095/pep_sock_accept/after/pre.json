[
    {
        "line": 4,
        "fullcodeline": "struct pep_sock *pn = pep_sk(sk), *newpn;"
    },
    {
        "line": 5,
        "fullcodeline": "struct sock *newsk = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "u8 aligned = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "skb = skb_recv_datagram(sk, 0, flags & O_NONBLOCK, errp);"
    },
    {
        "line": 18,
        "fullcodeline": "lock_sock(sk);"
    },
    {
        "line": 23,
        "fullcodeline": "sk_acceptq_removed(sk);"
    },
    {
        "line": 25,
        "fullcodeline": "err = -EPROTO;"
    },
    {
        "line": 29,
        "fullcodeline": "hdr = pnp_hdr(skb);"
    },
    {
        "line": 30,
        "fullcodeline": "pipe_handle = hdr->pipe_handle;"
    },
    {
        "line": 43,
        "fullcodeline": "peer_type = hdr->other_pep_type << 8;"
    },
    {
        "line": 46,
        "fullcodeline": "n_sb = hdr->data[3];"
    },
    {
        "line": 67,
        "fullcodeline": "newsk = pep_find_pipe(&pn->hlist, &dst, pipe_handle);"
    },
    {
        "line": 76,
        "fullcodeline": "newsk = sk_alloc(sock_net(sk), PF_PHONET, GFP_KERNEL, sk->sk_prot,"
    },
    {
        "line": 84,
        "fullcodeline": "sock_init_data(NULL, newsk);"
    },
    {
        "line": 85,
        "fullcodeline": "newsk->sk_state = TCP_SYN_RECV;"
    },
    {
        "line": 86,
        "fullcodeline": "newsk->sk_backlog_rcv = pipe_do_rcv;"
    },
    {
        "line": 87,
        "fullcodeline": "newsk->sk_protocol = sk->sk_protocol;"
    },
    {
        "line": 88,
        "fullcodeline": "newsk->sk_destruct = pipe_destruct;"
    },
    {
        "line": 90,
        "fullcodeline": "newpn = pep_sk(newsk);"
    },
    {
        "line": 91,
        "fullcodeline": "pn_skb_get_dst_sockaddr(skb, &dst);"
    },
    {
        "line": 92,
        "fullcodeline": "pn_skb_get_src_sockaddr(skb, &src);"
    },
    {
        "line": 96,
        "fullcodeline": "sock_hold(sk);"
    },
    {
        "line": 108,
        "fullcodeline": "err = pep_accept_conn(newsk, skb);"
    },
    {
        "line": 115,
        "fullcodeline": "sk_add_node(newsk, &pn->hlist);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 19,
        "fullcodeline": "if (sk->sk_state != TCP_LISTEN) {"
    },
    {
        "line": 47,
        "fullcodeline": "while (n_sb > 0) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (unlikely(newsk)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!newsk) {"
    },
    {
        "line": 93,
        "fullcodeline": "newpn->pn_sk.sobject = pn_sockaddr_get_object(&dst);"
    },
    {
        "line": 94,
        "fullcodeline": "newpn->pn_sk.dobject = pn_sockaddr_get_object(&src);"
    },
    {
        "line": 95,
        "fullcodeline": "newpn->pn_sk.resource = pn_sockaddr_get_resource(&dst);"
    },
    {
        "line": 104,
        "fullcodeline": "newpn->rx_fc = newpn->tx_fc = PN_LEGACY_FLOW_CONTROL;"
    },
    {
        "line": 20,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!pskb_may_pull(skb, sizeof(*hdr) + 4))"
    },
    {
        "line": 33,
        "fullcodeline": "enabled = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "enabled = 1;"
    },
    {
        "line": 39,
        "fullcodeline": "pep_reject_conn(sk, skb, PN_PIPE_ERR_INVALID_PARAM,"
    },
    {
        "line": 48,
        "fullcodeline": "u8 type, buf[1], len = sizeof(buf);"
    },
    {
        "line": 49,
        "fullcodeline": "const u8 *data = pep_get_sb(skb, &type, &len, buf);"
    },
    {
        "line": 63,
        "fullcodeline": "n_sb--;"
    },
    {
        "line": 70,
        "fullcodeline": "newsk = NULL;"
    },
    {
        "line": 71,
        "fullcodeline": "pep_reject_conn(sk, skb, PN_PIPE_ERR_PEP_IN_USE, GFP_KERNEL);"
    },
    {
        "line": 79,
        "fullcodeline": "pep_reject_conn(sk, skb, PN_PIPE_ERR_OVERLOAD, GFP_KERNEL);"
    },
    {
        "line": 80,
        "fullcodeline": "err = -ENOBUFS;"
    },
    {
        "line": 110,
        "fullcodeline": "__sock_put(sk);"
    },
    {
        "line": 112,
        "fullcodeline": "newsk = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "if (data == NULL)"
    },
    {
        "line": 57,
        "fullcodeline": "peer_type = (peer_type & 0xff00) | data[0];"
    },
    {
        "line": 60,
        "fullcodeline": "aligned = data[0] != 0;"
    }
]