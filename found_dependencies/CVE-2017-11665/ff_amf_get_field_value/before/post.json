[
    {
        "line": 4,
        "fullcodeline": "int namelen = strlen(name);"
    },
    {
        "line": 15,
        "fullcodeline": "data++;"
    },
    {
        "line": 7,
        "fullcodeline": "while (*data != AMF_DATA_TYPE_OBJECT && data < data_end) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (data_end - data < 3)"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 8,
        "fullcodeline": "len = ff_amf_tag_size(data, data_end);"
    },
    {
        "line": 11,
        "fullcodeline": "data += len;"
    },
    {
        "line": 17,
        "fullcodeline": "int size = bytestream_get_be16(&data);"
    },
    {
        "line": 22,
        "fullcodeline": "data += size;"
    },
    {
        "line": 40,
        "fullcodeline": "len = ff_amf_tag_size(data, data_end);"
    },
    {
        "line": 43,
        "fullcodeline": "data += len;"
    },
    {
        "line": 9,
        "fullcodeline": "if (len < 0)"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 18,
        "fullcodeline": "if (!size)"
    },
    {
        "line": 20,
        "fullcodeline": "if (size < 0 || size >= data_end - data)"
    },
    {
        "line": 23,
        "fullcodeline": "if (size == namelen && !memcmp(data-size, name, namelen)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (len < 0 || len >= data_end - data)"
    },
    {
        "line": 10,
        "fullcodeline": "len = data_end - data;"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 42,
        "fullcodeline": "return -1;"
    },
    {
        "line": 24,
        "fullcodeline": "switch (*data++) {"
    },
    {
        "line": 26,
        "fullcodeline": "snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data)));"
    },
    {
        "line": 29,
        "fullcodeline": "snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\");"
    },
    {
        "line": 32,
        "fullcodeline": "len = bytestream_get_be16(&data);"
    },
    {
        "line": 33,
        "fullcodeline": "av_strlcpy(dst, data, FFMIN(len+1, dst_size));"
    },
    {
        "line": 36,
        "fullcodeline": "return -1;"
    }
]