[
    {
        "line": 11,
        "fullcodeline": "exc = error"
    },
    {
        "line": 21,
        "fullcodeline": "result[\"extensions\"][\"exception\"] = {\"code\": type(exc).__name__}"
    },
    {
        "line": 3,
        "fullcodeline": "if isinstance(error, GraphQLError):"
    },
    {
        "line": 8,
        "fullcodeline": "if \"extensions\" not in result:"
    },
    {
        "line": 12,
        "fullcodeline": "while isinstance(exc, GraphQLError) and hasattr(exc, \"original_error\"):"
    },
    {
        "line": 14,
        "fullcodeline": "if isinstance(exc, AssertionError):"
    },
    {
        "line": 16,
        "fullcodeline": "if isinstance(exc, handled_exceptions):"
    },
    {
        "line": 4,
        "fullcodeline": "result = format_graphql_error(error)"
    },
    {
        "line": 6,
        "fullcodeline": "result = {\"message\": str(error)}"
    },
    {
        "line": 9,
        "fullcodeline": "result[\"extensions\"] = {}"
    },
    {
        "line": 13,
        "fullcodeline": "exc = exc.original_error"
    },
    {
        "line": 15,
        "fullcodeline": "exc = GraphQLError(str(exc))"
    },
    {
        "line": 17,
        "fullcodeline": "handled_errors_logger.info(\"A query had an error\", exc_info=exc)"
    },
    {
        "line": 19,
        "fullcodeline": "unhandled_errors_logger.error(\"A query failed unexpectedly\", exc_info=exc)"
    },
    {
        "line": 23,
        "fullcodeline": "lines = []"
    },
    {
        "line": 28,
        "fullcodeline": "result[\"extensions\"][\"exception\"][\"stacktrace\"] = lines"
    },
    {
        "line": 25,
        "fullcodeline": "if isinstance(exc, BaseException):"
    },
    {
        "line": 26,
        "fullcodeline": "for line in traceback.format_exception(type(exc), exc, exc.__traceback__):"
    },
    {
        "line": 27,
        "fullcodeline": "lines.extend(line.rstrip().splitlines())"
    }
]