[
    {
        "line": 6,
        "fullcodeline": "DTLS_LOCK(ds);"
    },
    {
        "line": 9,
        "fullcodeline": "status = ssl_create(ds, idx);"
    },
    {
        "line": 27,
        "fullcodeline": "err = SSL_do_handshake(ds->ossl_ssl[idx]);"
    },
    {
        "line": 57,
        "fullcodeline": "status = pjmedia_clock_start(ds->clock[idx]);"
    },
    {
        "line": 62,
        "fullcodeline": "ds->nego_started[idx] = PJ_TRUE;"
    },
    {
        "line": 63,
        "fullcodeline": "PJ_LOG(4,(ds->base.name, \"DTLS-SRTP %s negotiation initiated as %s\","
    },
    {
        "line": 10,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (ds->nego_started[idx] || SSL_is_init_finished(ds->ossl_ssl[idx])) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (ds->setup == DTLS_SETUP_ACTIVE) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (err < 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 68,
        "fullcodeline": "if (status != PJ_SUCCESS) {"
    },
    {
        "line": 11,
        "fullcodeline": "DTLS_UNLOCK(ds);"
    },
    {
        "line": 17,
        "fullcodeline": "DTLS_UNLOCK(ds);"
    },
    {
        "line": 23,
        "fullcodeline": "SSL_set_connect_state(ds->ossl_ssl[idx]);"
    },
    {
        "line": 29,
        "fullcodeline": "err = SSL_get_error(ds->ossl_ssl[idx], err);"
    },
    {
        "line": 31,
        "fullcodeline": "DTLS_UNLOCK(ds);"
    },
    {
        "line": 49,
        "fullcodeline": "ds->channel[idx].dtls_srtp = ds;"
    },
    {
        "line": 50,
        "fullcodeline": "ds->channel[idx].channel = idx;"
    },
    {
        "line": 51,
        "fullcodeline": "status = pjmedia_clock_create(ds->pool, 4, 1, 1,"
    },
    {
        "line": 25,
        "fullcodeline": "SSL_set_accept_state(ds->ossl_ssl[idx]);"
    },
    {
        "line": 33,
        "fullcodeline": "if (err == SSL_ERROR_WANT_READ) {"
    },
    {
        "line": 44,
        "fullcodeline": "DTLS_UNLOCK(ds);"
    },
    {
        "line": 54,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 64,
        "fullcodeline": "CHANNEL_TO_STRING(idx),"
    },
    {
        "line": 65,
        "fullcodeline": "(ds->setup==DTLS_SETUP_ACTIVE? \"client\":\"server\")));"
    },
    {
        "line": 34,
        "fullcodeline": "status = ssl_flush_wbio(ds, idx);"
    },
    {
        "line": 70,
        "fullcodeline": "pjmedia_clock_stop(ds->clock[idx]);"
    },
    {
        "line": 35,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 37,
        "fullcodeline": "} else if (err != SSL_ERROR_NONE) {"
    },
    {
        "line": 39,
        "fullcodeline": "status = STATUS_FROM_SSL_ERR(ds, err);"
    },
    {
        "line": 40,
        "fullcodeline": "pj_perror(2, ds->base.name, status, \"SSL_do_handshake() error\");"
    }
]