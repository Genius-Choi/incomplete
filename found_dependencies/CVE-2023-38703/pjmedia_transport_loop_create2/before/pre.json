[
    {
        "line": 9,
        "fullcodeline": "PJ_ASSERT_RETURN(endpt && p_tp, PJ_EINVAL);"
    },
    {
        "line": 12,
        "fullcodeline": "pool = pjmedia_endpt_create_pool(endpt, \"tploop\", 512, 512);"
    },
    {
        "line": 18,
        "fullcodeline": "pj_memcpy(tp->base.name, tp->pool->obj_name, PJ_MAX_OBJ_NAME);"
    },
    {
        "line": 19,
        "fullcodeline": "tp->base.op = &transport_udp_op;"
    },
    {
        "line": 20,
        "fullcodeline": "tp->base.type = PJMEDIA_TRANSPORT_TYPE_UDP;"
    },
    {
        "line": 37,
        "fullcodeline": "tp->max_attach_cnt = tp->setting.max_attach_cnt;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!pool)"
    },
    {
        "line": 38,
        "fullcodeline": "if (tp->max_attach_cnt == 0)"
    },
    {
        "line": 28,
        "fullcodeline": "pj_strdup(pool, &tp->setting.addr, &opt->addr);"
    },
    {
        "line": 39,
        "fullcodeline": "tp->max_attach_cnt = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "tp->users = (struct tp_user *)pj_pool_calloc(pool, tp->max_attach_cnt, sizeof(struct tp_user));"
    }
]