[
    {
        "line": 8,
        "fullcodeline": "pool = pj_pool_create(srtp->pool->factory, \"dtls%p\","
    },
    {
        "line": 10,
        "fullcodeline": "ds = PJ_POOL_ZALLOC_T(pool, dtls_srtp);"
    },
    {
        "line": 11,
        "fullcodeline": "ds->pool = pool;"
    },
    {
        "line": 13,
        "fullcodeline": "pj_ansi_strxcpy(ds->base.name, pool->obj_name, PJ_MAX_OBJ_NAME);"
    },
    {
        "line": 14,
        "fullcodeline": "ds->base.type = (pjmedia_transport_type)PJMEDIA_SRTP_KEYING_DTLS_SRTP;"
    },
    {
        "line": 15,
        "fullcodeline": "ds->base.op = &dtls_op;"
    },
    {
        "line": 16,
        "fullcodeline": "ds->base.user_data = srtp;"
    },
    {
        "line": 17,
        "fullcodeline": "ds->srtp = srtp;"
    },
    {
        "line": 33,
        "fullcodeline": "*p_keying = &ds->base;"
    },
    {
        "line": 34,
        "fullcodeline": "PJ_LOG(5,(srtp->pool->obj_name, \"SRTP keying DTLS-SRTP created\"));"
    },
    {
        "line": 23,
        "fullcodeline": "ds->base.grp_lock = grp_lock;"
    },
    {
        "line": 24,
        "fullcodeline": "pj_grp_lock_add_ref(grp_lock);"
    },
    {
        "line": 25,
        "fullcodeline": "pj_grp_lock_add_handler(grp_lock, pool, ds, &dtls_on_destroy);"
    },
    {
        "line": 27,
        "fullcodeline": "status = pj_lock_create_simple_mutex(ds->pool, \"dtls_ssl_lock%p\","
    },
    {
        "line": 29,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    }
]