[
    {
        "line": 3,
        "fullcodeline": "unsigned char material[SRTP_MAX_KEY_LEN * 2];"
    },
    {
        "line": 5,
        "fullcodeline": "int rc, i, crypto_idx = -1;"
    },
    {
        "line": 7,
        "fullcodeline": "pj_status_t status = PJ_SUCCESS;"
    },
    {
        "line": 9,
        "fullcodeline": "DTLS_LOCK(ds);"
    },
    {
        "line": 17,
        "fullcodeline": "profile = SSL_get_selected_srtp_profile(ds->ossl_ssl[idx]);"
    },
    {
        "line": 25,
        "fullcodeline": "pj_bzero(tx, sizeof(*tx));"
    },
    {
        "line": 26,
        "fullcodeline": "pj_bzero(rx, sizeof(*rx));"
    },
    {
        "line": 43,
        "fullcodeline": "rc = SSL_export_keying_material(ds->ossl_ssl[idx], material,"
    },
    {
        "line": 80,
        "fullcodeline": "DTLS_UNLOCK(ds);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!profile) {"
    },
    {
        "line": 27,
        "fullcodeline": "for (i=0; i<(int)PJ_ARRAY_SIZE(ossl_profiles); ++i) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (crypto_idx == -1) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (rc == 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "char *p = (char*)material;"
    },
    {
        "line": 58,
        "fullcodeline": "key_len = cs->cipher_key_len - cs->cipher_salt_len;"
    },
    {
        "line": 59,
        "fullcodeline": "salt_len = cs->cipher_salt_len;"
    },
    {
        "line": 61,
        "fullcodeline": "tx->key.ptr = (char*)pj_pool_alloc(ds->pool, key_len+salt_len);"
    },
    {
        "line": 62,
        "fullcodeline": "tx->key.slen = key_len+salt_len;"
    },
    {
        "line": 63,
        "fullcodeline": "rx->key.ptr = (char*)pj_pool_alloc(ds->pool, key_len+salt_len);"
    },
    {
        "line": 64,
        "fullcodeline": "rx->key.slen = key_len+salt_len;"
    },
    {
        "line": 72,
        "fullcodeline": "pj_memcpy(k1, p, key_len); p += key_len;"
    },
    {
        "line": 73,
        "fullcodeline": "pj_memcpy(k2, p, key_len); p += key_len;"
    },
    {
        "line": 74,
        "fullcodeline": "pj_memcpy(k1+key_len, p, salt_len); p += salt_len;"
    },
    {
        "line": 75,
        "fullcodeline": "pj_memcpy(k2+key_len, p, salt_len);"
    },
    {
        "line": 76,
        "fullcodeline": "ds->got_keys = PJ_TRUE;"
    },
    {
        "line": 12,
        "fullcodeline": "status = PJ_EGONE;"
    },
    {
        "line": 19,
        "fullcodeline": "status = PJMEDIA_SRTP_DTLS_ENOCRYPTO;"
    },
    {
        "line": 36,
        "fullcodeline": "status = PJMEDIA_SRTP_ENOTSUPCRYPTO;"
    },
    {
        "line": 47,
        "fullcodeline": "status = PJMEDIA_SRTP_EINKEYLEN;"
    },
    {
        "line": 65,
        "fullcodeline": "if (ds->setup == DTLS_SETUP_ACTIVE) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (pj_ansi_stricmp(profile->name, ossl_profiles[i])==0) {"
    },
    {
        "line": 66,
        "fullcodeline": "k1 = tx->key.ptr;"
    },
    {
        "line": 67,
        "fullcodeline": "k2 = rx->key.ptr;"
    },
    {
        "line": 29,
        "fullcodeline": "pj_strset2(&tx->name, pj_profiles[i]);"
    },
    {
        "line": 30,
        "fullcodeline": "pj_strset2(&rx->name, pj_profiles[i]);"
    },
    {
        "line": 31,
        "fullcodeline": "crypto_idx = get_crypto_idx(&tx->name);"
    },
    {
        "line": 69,
        "fullcodeline": "k1 = rx->key.ptr;"
    },
    {
        "line": 70,
        "fullcodeline": "k2 = tx->key.ptr;"
    }
]