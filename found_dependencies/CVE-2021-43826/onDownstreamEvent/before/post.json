[
    {
        "line": 2,
        "fullcodeline": "ENVOY_CONN_LOG(trace, \"on downstream event {}, has upstream = {}\", read_callbacks_->connection(),"
    },
    {
        "line": 3,
        "fullcodeline": "static_cast<int>(event), upstream_ == nullptr);"
    },
    {
        "line": 5,
        "fullcodeline": "Tcp::ConnectionPool::ConnectionDataPtr conn_data(upstream_->onDownstreamEvent(event));"
    },
    {
        "line": 6,
        "fullcodeline": "if (conn_data != nullptr &&"
    },
    {
        "line": 12,
        "fullcodeline": "if (event != Network::ConnectionEvent::Connected) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (event == Network::ConnectionEvent::LocalClose ||"
    },
    {
        "line": 7,
        "fullcodeline": "conn_data->connection().state() != Network::Connection::State::Closed) {"
    },
    {
        "line": 8,
        "fullcodeline": "config_->drainManager().add(config_->sharedConfig(), std::move(conn_data),"
    },
    {
        "line": 13,
        "fullcodeline": "upstream_.reset();"
    },
    {
        "line": 14,
        "fullcodeline": "disableIdleTimer();"
    },
    {
        "line": 19,
        "fullcodeline": "event == Network::ConnectionEvent::RemoteClose) {"
    },
    {
        "line": 21,
        "fullcodeline": "generic_conn_pool_.reset();"
    },
    {
        "line": 9,
        "fullcodeline": "std::move(upstream_callbacks_), std::move(idle_timer_),"
    },
    {
        "line": 10,
        "fullcodeline": "read_callbacks_->upstreamHost());"
    }
]