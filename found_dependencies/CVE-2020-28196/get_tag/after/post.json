[
    {
        "line": 7,
        "fullcodeline": "const uint8_t *c, *p, *tag_start = asn1;"
    },
    {
        "line": 11,
        "fullcodeline": "*contents_out = *remainder_out = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "*clen_out = *rlen_out = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "len--;"
    },
    {
        "line": 17,
        "fullcodeline": "tag_out->asn1class = o & 0xC0;"
    },
    {
        "line": 18,
        "fullcodeline": "tag_out->construction = o & 0x20;"
    },
    {
        "line": 35,
        "fullcodeline": "len--;"
    },
    {
        "line": 80,
        "fullcodeline": "tag_out->tag_len = *contents_out - tag_start;"
    },
    {
        "line": 13,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 19,
        "fullcodeline": "if ((o & 0x1F) != 0x1F) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 37,
        "fullcodeline": "if (o == 0x80) {"
    },
    {
        "line": 15,
        "fullcodeline": "o = *asn1++;"
    },
    {
        "line": 20,
        "fullcodeline": "tag_out->tagnum = o & 0x1F;"
    },
    {
        "line": 34,
        "fullcodeline": "o = *asn1++;"
    },
    {
        "line": 43,
        "fullcodeline": "p = asn1;"
    },
    {
        "line": 49,
        "fullcodeline": "tag_out->tag_end_len = 2;"
    },
    {
        "line": 50,
        "fullcodeline": "*contents_out = asn1;"
    },
    {
        "line": 51,
        "fullcodeline": "*clen_out = p - asn1;"
    },
    {
        "line": 52,
        "fullcodeline": "*remainder_out = p + 2;"
    },
    {
        "line": 53,
        "fullcodeline": "*rlen_out = len - 2;"
    },
    {
        "line": 22,
        "fullcodeline": "tag_out->tagnum = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "if (tag_out->construction != CONSTRUCTED)"
    },
    {
        "line": 41,
        "fullcodeline": "if (recursion >= 32)"
    },
    {
        "line": 44,
        "fullcodeline": "while (!(len >= 2 && p[0] == 0 && p[1] == 0)) {"
    },
    {
        "line": 29,
        "fullcodeline": "} while (o & 0x80);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = get_tag(p, len, &t, &c, &clen, &p, &len, recursion + 1);"
    },
    {
        "line": 54,
        "fullcodeline": "} else if ((o & 0x80) == 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "len--;"
    },
    {
        "line": 28,
        "fullcodeline": "tag_out->tagnum = (tag_out->tagnum << 7) | (o & 0x7F);"
    },
    {
        "line": 58,
        "fullcodeline": "tag_out->tag_end_len = 0;"
    },
    {
        "line": 59,
        "fullcodeline": "*contents_out = asn1;"
    },
    {
        "line": 60,
        "fullcodeline": "*clen_out = o;"
    },
    {
        "line": 61,
        "fullcodeline": "*remainder_out = asn1 + *clen_out;"
    },
    {
        "line": 62,
        "fullcodeline": "*rlen_out = len - (*remainder_out - asn1);"
    },
    {
        "line": 24,
        "fullcodeline": "if (len == 0)"
    },
    {
        "line": 56,
        "fullcodeline": "if (o > len)"
    },
    {
        "line": 65,
        "fullcodeline": "llen = o & 0x7F;"
    },
    {
        "line": 74,
        "fullcodeline": "tag_out->tag_end_len = 0;"
    },
    {
        "line": 75,
        "fullcodeline": "*contents_out = asn1 + llen;"
    },
    {
        "line": 76,
        "fullcodeline": "*clen_out = clen;"
    },
    {
        "line": 77,
        "fullcodeline": "*remainder_out = *contents_out + clen;"
    },
    {
        "line": 78,
        "fullcodeline": "*rlen_out = len - (*remainder_out - asn1);"
    },
    {
        "line": 26,
        "fullcodeline": "o = *asn1++;"
    },
    {
        "line": 66,
        "fullcodeline": "if (llen > len)"
    },
    {
        "line": 68,
        "fullcodeline": "if (llen > sizeof(*clen_out))"
    },
    {
        "line": 70,
        "fullcodeline": "for (i = 0, clen = 0; i < llen; i++)"
    },
    {
        "line": 71,
        "fullcodeline": "clen = (clen << 8) | asn1[i];"
    },
    {
        "line": 72,
        "fullcodeline": "if (clen > len - llen)"
    }
]