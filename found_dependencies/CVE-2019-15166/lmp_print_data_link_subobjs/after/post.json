[
    {
        "line": 4,
        "fullcodeline": "int hexdump = FALSE;"
    },
    {
        "line": 12,
        "fullcodeline": "while (total_subobj_len > 0 && hexdump == FALSE ) {"
    },
    {
        "line": 13,
        "fullcodeline": "ND_TCHECK_16BITS(obj_tptr + offset);"
    },
    {
        "line": 14,
        "fullcodeline": "subobj_type = EXTRACT_8BITS(obj_tptr + offset);"
    },
    {
        "line": 15,
        "fullcodeline": "subobj_len  = EXTRACT_8BITS(obj_tptr + offset + 1);"
    },
    {
        "line": 16,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t    Subobject, Type: %s (%u), Length: %u\","
    },
    {
        "line": 67,
        "fullcodeline": "total_subobj_len-=subobj_len;"
    },
    {
        "line": 68,
        "fullcodeline": "offset+=subobj_len;"
    },
    {
        "line": 22,
        "fullcodeline": "if (subobj_len < 4) {"
    },
    {
        "line": 26,
        "fullcodeline": "if ((subobj_len % 4) != 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (total_subobj_len < subobj_len) {"
    },
    {
        "line": 23,
        "fullcodeline": "ND_PRINT((ndo, \" (too short)\"));"
    },
    {
        "line": 27,
        "fullcodeline": "ND_PRINT((ndo, \" (not a multiple of 4)\"));"
    },
    {
        "line": 31,
        "fullcodeline": "ND_PRINT((ndo, \" (goes past the end of the object)\"));"
    },
    {
        "line": 36,
        "fullcodeline": "ND_TCHECK_8BITS(obj_tptr + offset + 2);"
    },
    {
        "line": 37,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Switching Type: %s (%u)\","
    },
    {
        "line": 42,
        "fullcodeline": "ND_TCHECK_8BITS(obj_tptr + offset + 3);"
    },
    {
        "line": 43,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Encoding Type: %s (%u)\","
    },
    {
        "line": 48,
        "fullcodeline": "ND_TCHECK_32BITS(obj_tptr + offset + 4);"
    },
    {
        "line": 49,
        "fullcodeline": "bw.i = EXTRACT_32BITS(obj_tptr+offset+4);"
    },
    {
        "line": 50,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Min Reservable Bandwidth: %.3f Mbps\","
    },
    {
        "line": 52,
        "fullcodeline": "ND_TCHECK_32BITS(obj_tptr + offset + 8);"
    },
    {
        "line": 53,
        "fullcodeline": "bw.i = EXTRACT_32BITS(obj_tptr+offset+8);"
    },
    {
        "line": 54,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Max Reservable Bandwidth: %.3f Mbps\","
    },
    {
        "line": 58,
        "fullcodeline": "ND_TCHECK_32BITS(obj_tptr + offset + 4);"
    },
    {
        "line": 59,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t      Wavelength: %u\","
    },
    {
        "line": 64,
        "fullcodeline": "hexdump=TRUE;"
    },
    {
        "line": 17,
        "fullcodeline": "tok2str(lmp_data_link_subobj,"
    },
    {
        "line": 38,
        "fullcodeline": "tok2str(gmpls_switch_cap_values,"
    },
    {
        "line": 41,
        "fullcodeline": "EXTRACT_8BITS(obj_tptr + offset + 2)));"
    },
    {
        "line": 44,
        "fullcodeline": "tok2str(gmpls_encoding_values,"
    },
    {
        "line": 47,
        "fullcodeline": "EXTRACT_8BITS(obj_tptr + offset + 3)));"
    },
    {
        "line": 51,
        "fullcodeline": "bw.f*8/1000000));"
    },
    {
        "line": 55,
        "fullcodeline": "bw.f*8/1000000));"
    },
    {
        "line": 60,
        "fullcodeline": "EXTRACT_32BITS(obj_tptr+offset+4)));"
    },
    {
        "line": 40,
        "fullcodeline": "EXTRACT_8BITS(obj_tptr + offset + 2)),"
    },
    {
        "line": 46,
        "fullcodeline": "EXTRACT_8BITS(obj_tptr + offset + 3)),"
    }
]