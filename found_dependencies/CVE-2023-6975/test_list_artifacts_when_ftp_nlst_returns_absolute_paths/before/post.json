[
    {
        "line": 2,
        "fullcodeline": "artifact_root_path = \"/experiment_id/run_id/\""
    },
    {
        "line": 3,
        "fullcodeline": "repo = FTPArtifactRepository(\"ftp://test_ftp\" + artifact_root_path)"
    },
    {
        "line": 5,
        "fullcodeline": "repo.get_ftp_client = MagicMock()"
    },
    {
        "line": 6,
        "fullcodeline": "call_mock = MagicMock(return_value=ftp_mock)"
    },
    {
        "line": 7,
        "fullcodeline": "repo.get_ftp_client.return_value = MagicMock(__enter__=call_mock)"
    },
    {
        "line": 14,
        "fullcodeline": "file_path = \"file\""
    },
    {
        "line": 15,
        "fullcodeline": "dir_path = \"model\""
    },
    {
        "line": 16,
        "fullcodeline": "file_size = 678"
    },
    {
        "line": 17,
        "fullcodeline": "ftp_mock.cwd = MagicMock(side_effect=[None, ftplib.error_perm, None])"
    },
    {
        "line": 18,
        "fullcodeline": "ftp_mock.nlst = MagicMock("
    },
    {
        "line": 25,
        "fullcodeline": "ftp_mock.size = MagicMock(return_value=file_size)"
    },
    {
        "line": 27,
        "fullcodeline": "artifacts = repo.list_artifacts(path=None)"
    },
    {
        "line": 32,
        "fullcodeline": "assert len(artifacts) == 2"
    },
    {
        "line": 33,
        "fullcodeline": "assert artifacts[0].path == file_path"
    },
    {
        "line": 34,
        "fullcodeline": "assert artifacts[0].is_dir is False"
    },
    {
        "line": 35,
        "fullcodeline": "assert artifacts[0].file_size == file_size"
    },
    {
        "line": 36,
        "fullcodeline": "assert artifacts[1].path == dir_path"
    },
    {
        "line": 37,
        "fullcodeline": "assert artifacts[1].is_dir is True"
    },
    {
        "line": 38,
        "fullcodeline": "assert artifacts[1].file_size is None"
    },
    {
        "line": 29,
        "fullcodeline": "ftp_mock.nlst.assert_called_once_with(artifact_root_path)"
    },
    {
        "line": 30,
        "fullcodeline": "ftp_mock.size.assert_called_once_with(artifact_root_path + file_path)"
    },
    {
        "line": 19,
        "fullcodeline": "return_value=["
    },
    {
        "line": 20,
        "fullcodeline": "posixpath.join(artifact_root_path, file_path),"
    },
    {
        "line": 21,
        "fullcodeline": "posixpath.join(artifact_root_path, dir_path),"
    }
]