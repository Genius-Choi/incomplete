[
    {
        "line": 13,
        "fullcodeline": "TfLiteStatus status = kTfLiteError;"
    },
    {
        "line": 4,
        "fullcodeline": "if (IsDynamicTensor(output)) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (status != kTfLiteOk) {"
    },
    {
        "line": 5,
        "fullcodeline": "TF_LITE_ENSURE_OK("
    },
    {
        "line": 9,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 16,
        "fullcodeline": "status = ScatterNd<IndicesT, float>(indices, updates, output);"
    },
    {
        "line": 19,
        "fullcodeline": "status = ScatterNd<IndicesT, uint8_t>(indices, updates, output);"
    },
    {
        "line": 22,
        "fullcodeline": "status = ScatterNd<IndicesT, bool>(indices, updates, output);"
    },
    {
        "line": 25,
        "fullcodeline": "status = ScatterNd<IndicesT, int8_t>(indices, updates, output);"
    },
    {
        "line": 28,
        "fullcodeline": "status = ScatterNd<IndicesT, int32_t>(indices, updates, output);"
    },
    {
        "line": 31,
        "fullcodeline": "status = ScatterNd<IndicesT, int64_t>(indices, updates, output);"
    },
    {
        "line": 34,
        "fullcodeline": "TF_LITE_KERNEL_LOG("
    },
    {
        "line": 6,
        "fullcodeline": "context, CheckShapes<IndicesT>("
    },
    {
        "line": 10,
        "fullcodeline": "ResizeOutputTensor<IndicesT>(context, shape, output));"
    },
    {
        "line": 36,
        "fullcodeline": "TfLiteTypeGetName(updates->type));"
    },
    {
        "line": 7,
        "fullcodeline": "context, GetTensorShape(indices), GetTensorShape(updates),"
    },
    {
        "line": 8,
        "fullcodeline": "GetTensorShape(shape), GetTensorData<IndicesT>(shape)));"
    }
]