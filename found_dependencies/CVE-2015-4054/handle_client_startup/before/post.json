[
    {
        "line": 7,
        "fullcodeline": "SBuf *sbuf = &client->sbuf;"
    },
    {
        "line": 91,
        "fullcodeline": "sbuf_prepare_skip(sbuf, pkt->len);"
    },
    {
        "line": 92,
        "fullcodeline": "client->request_time = get_cached_time();"
    },
    {
        "line": 10,
        "fullcodeline": "if (incomplete_pkt(pkt)) {"
    },
    {
        "line": 11,
        "fullcodeline": "disconnect_client(client, true, \"client sent partial pkt in startup phase\");"
    },
    {
        "line": 26,
        "fullcodeline": "slog_noise(client, \"C: req SSL\");"
    },
    {
        "line": 27,
        "fullcodeline": "slog_noise(client, \"P: nak\");"
    },
    {
        "line": 36,
        "fullcodeline": "disconnect_client(client, true, \"Old V2 protocol not supported\");"
    },
    {
        "line": 69,
        "fullcodeline": "ok = mbuf_get_string(&pkt->data, &passwd);"
    },
    {
        "line": 88,
        "fullcodeline": "disconnect_client(client, false, \"bad packet\");"
    },
    {
        "line": 16,
        "fullcodeline": "if  (finish_client_login(client)) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (!sbuf_answer(&client->sbuf, \"N\", 1)) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (!decide_startup_pool(client, pkt))"
    },
    {
        "line": 52,
        "fullcodeline": "if (cf_auth_type <= AUTH_TRUST || client->own_user) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (cf_auth_type <= AUTH_TRUST) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (ok && check_client_passwd(client, passwd)) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (mbuf_avail_for_read(&pkt->data) == BACKENDKEY_LEN"
    },
    {
        "line": 18,
        "fullcodeline": "sbuf_prepare_skip(sbuf, pkt->len);"
    },
    {
        "line": 31,
        "fullcodeline": "disconnect_client(client, false, \"failed to nak SSL\");"
    },
    {
        "line": 40,
        "fullcodeline": "disconnect_client(client, true, \"client re-sent startup pkt\");"
    },
    {
        "line": 65,
        "fullcodeline": "disconnect_client(client, true, \"unrequested passwd pkt\");"
    },
    {
        "line": 80,
        "fullcodeline": "&& mbuf_get_bytes(&pkt->data, BACKENDKEY_LEN, &key))"
    },
    {
        "line": 82,
        "fullcodeline": "memcpy(client->cancel_key, key, BACKENDKEY_LEN);"
    },
    {
        "line": 83,
        "fullcodeline": "accept_cancel_request(client);"
    },
    {
        "line": 48,
        "fullcodeline": "if (!admin_pre_login(client))"
    },
    {
        "line": 53,
        "fullcodeline": "if (!finish_client_login(client))"
    },
    {
        "line": 71,
        "fullcodeline": "if (!finish_client_login(client))"
    },
    {
        "line": 74,
        "fullcodeline": "disconnect_client(client, true, \"Auth failed\");"
    },
    {
        "line": 85,
        "fullcodeline": "disconnect_client(client, false, \"bad cancel request\");"
    },
    {
        "line": 56,
        "fullcodeline": "if (!send_client_authreq(client)) {"
    },
    {
        "line": 57,
        "fullcodeline": "disconnect_client(client, false, \"failed to send auth req\");"
    }
]