[
    {
        "line": 5,
        "fullcodeline": "GF_ItemInfoEntryBox *ptr = (GF_ItemInfoEntryBox *)s;"
    },
    {
        "line": 7,
        "fullcodeline": "ISOM_DECREASE_SIZE(ptr, 4);"
    },
    {
        "line": 8,
        "fullcodeline": "ptr->item_ID = gf_bs_read_u16(bs);"
    },
    {
        "line": 9,
        "fullcodeline": "ptr->item_protection_index = gf_bs_read_u16(bs);"
    },
    {
        "line": 15,
        "fullcodeline": "buf_len = (u32) (ptr->size);"
    },
    {
        "line": 16,
        "fullcodeline": "buf = (char*)gf_malloc(buf_len);"
    },
    {
        "line": 22,
        "fullcodeline": "string_len = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "string_start = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "if (ptr->version == 2) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (!buf) return GF_OUT_OF_MEM;"
    },
    {
        "line": 18,
        "fullcodeline": "if (buf_len != gf_bs_read_data(bs, buf, buf_len)) {"
    },
    {
        "line": 24,
        "fullcodeline": "for (i = 0; i < buf_len; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "ISOM_DECREASE_SIZE(ptr, 4);"
    },
    {
        "line": 13,
        "fullcodeline": "ptr->item_type = gf_bs_read_u32(bs);"
    },
    {
        "line": 45,
        "fullcodeline": "string_len++;"
    },
    {
        "line": 48,
        "fullcodeline": "if (!ptr->item_name || (!ptr->content_type && ptr->version < 2)) {"
    },
    {
        "line": 49,
        "fullcodeline": "GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[isoff] Infe without name or content type !\\n\"));"
    },
    {
        "line": 25,
        "fullcodeline": "if (buf[i] == 0) {"
    },
    {
        "line": 39,
        "fullcodeline": "string_start += string_len;"
    },
    {
        "line": 40,
        "fullcodeline": "string_len = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "if (!ptr->item_name) {"
    },
    {
        "line": 27,
        "fullcodeline": "ptr->item_name = (char*)gf_malloc(sizeof(char)*string_len);"
    },
    {
        "line": 29,
        "fullcodeline": "memcpy(ptr->item_name, buf+string_start, string_len);"
    },
    {
        "line": 41,
        "fullcodeline": "if (ptr->content_encoding && ptr->version == 1) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (!ptr->item_name) return GF_OUT_OF_MEM;"
    },
    {
        "line": 30,
        "fullcodeline": "} else if (!ptr->content_type) {"
    },
    {
        "line": 31,
        "fullcodeline": "ptr->content_type = (char*)gf_malloc(sizeof(char)*string_len);"
    },
    {
        "line": 33,
        "fullcodeline": "memcpy(ptr->content_type, buf+string_start, string_len);"
    },
    {
        "line": 32,
        "fullcodeline": "if (!ptr->content_type) return GF_OUT_OF_MEM;"
    },
    {
        "line": 35,
        "fullcodeline": "ptr->content_encoding = (char*)gf_malloc(sizeof(char)*string_len);"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(ptr->content_encoding, buf+string_start, string_len);"
    },
    {
        "line": 36,
        "fullcodeline": "if (!ptr->content_encoding) return GF_OUT_OF_MEM;"
    }
]