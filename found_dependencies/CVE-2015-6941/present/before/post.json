[
    {
        "line": 146,
        "fullcodeline": "fullname = salt.utils.sdecode(fullname) if fullname is not None else fullname"
    },
    {
        "line": 147,
        "fullcodeline": "roomnumber = salt.utils.sdecode(roomnumber) if roomnumber is not None else roomnumber"
    },
    {
        "line": 148,
        "fullcodeline": "workphone = salt.utils.sdecode(workphone) if workphone is not None else workphone"
    },
    {
        "line": 149,
        "fullcodeline": "homephone = salt.utils.sdecode(homephone) if homephone is not None else homephone"
    },
    {
        "line": 151,
        "fullcodeline": "ret = {'name': name,"
    },
    {
        "line": 187,
        "fullcodeline": "changes = _changes(name,"
    },
    {
        "line": 176,
        "fullcodeline": "if groups and optional_groups:"
    },
    {
        "line": 305,
        "fullcodeline": "if changes is False:"
    },
    {
        "line": 157,
        "fullcodeline": "missing_groups = [x for x in groups if not __salt__['group.info'](x)]"
    },
    {
        "line": 165,
        "fullcodeline": "present_optgroups = [x for x in optional_groups"
    },
    {
        "line": 172,
        "fullcodeline": "present_optgroups = None"
    },
    {
        "line": 182,
        "fullcodeline": "gid = __salt__['file.group_to_gid'](name)"
    },
    {
        "line": 185,
        "fullcodeline": "__salt__['shadow.del_password'](name)"
    },
    {
        "line": 221,
        "fullcodeline": "pre = __salt__['user.info'](name)"
    },
    {
        "line": 260,
        "fullcodeline": "post = __salt__['user.info'](name)"
    },
    {
        "line": 261,
        "fullcodeline": "spost = {}"
    },
    {
        "line": 275,
        "fullcodeline": "changes = _changes(name,"
    },
    {
        "line": 167,
        "fullcodeline": "for missing_optgroup in [x for x in optional_groups"
    },
    {
        "line": 177,
        "fullcodeline": "for isected in set(groups).intersection(optional_groups):"
    },
    {
        "line": 219,
        "fullcodeline": "if 'shadow.info' in __salt__:"
    },
    {
        "line": 222,
        "fullcodeline": "for key, val in changes.items():"
    },
    {
        "line": 262,
        "fullcodeline": "if 'shadow.info' in __salt__:"
    },
    {
        "line": 266,
        "fullcodeline": "for key in post:"
    },
    {
        "line": 269,
        "fullcodeline": "if 'shadow.info' in __salt__:"
    },
    {
        "line": 311,
        "fullcodeline": "if groups and present_optgroups:"
    },
    {
        "line": 315,
        "fullcodeline": "if __salt__['user.add'](name,"
    },
    {
        "line": 152,
        "fullcodeline": "'changes': {},"
    },
    {
        "line": 154,
        "fullcodeline": "'comment': 'User {0} is present and up to date'.format(name)}"
    },
    {
        "line": 159,
        "fullcodeline": "ret['comment'] = 'The following group(s) are not present: ' \\"
    },
    {
        "line": 161,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 212,
        "fullcodeline": "ret['result'] = None"
    },
    {
        "line": 213,
        "fullcodeline": "ret['comment'] = ('The following user attributes are set to be '"
    },
    {
        "line": 220,
        "fullcodeline": "lshad = __salt__['shadow.info'](name)"
    },
    {
        "line": 274,
        "fullcodeline": "ret['comment'] = 'Updated user {0}'.format(name)"
    },
    {
        "line": 299,
        "fullcodeline": "ret['comment'] = 'These values could not be changed: {0}'.format("
    },
    {
        "line": 302,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 308,
        "fullcodeline": "ret['result'] = None"
    },
    {
        "line": 309,
        "fullcodeline": "ret['comment'] = 'User {0} set to be added'.format(name)"
    },
    {
        "line": 312,
        "fullcodeline": "groups.extend(present_optgroups)"
    },
    {
        "line": 328,
        "fullcodeline": "ret['comment'] = 'New user {0} created'.format(name)"
    },
    {
        "line": 329,
        "fullcodeline": "ret['changes'] = __salt__['user.info'](name)"
    },
    {
        "line": 403,
        "fullcodeline": "ret['comment'] = 'Failed to create new user {0}'.format(name)"
    },
    {
        "line": 404,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 169,
        "fullcodeline": "log.debug('Optional group \"{0}\" for user \"{1}\" is not '"
    },
    {
        "line": 178,
        "fullcodeline": "log.warning('Group \"{0}\" specified in both groups and '"
    },
    {
        "line": 215,
        "fullcodeline": "for key, val in changes.items():"
    },
    {
        "line": 263,
        "fullcodeline": "if lshad['passwd'] != password:"
    },
    {
        "line": 270,
        "fullcodeline": "for key in spost:"
    },
    {
        "line": 330,
        "fullcodeline": "if 'shadow.info' in __salt__ and not salt.utils.is_windows():"
    },
    {
        "line": 223,
        "fullcodeline": "if key == 'passwd' and not empty_password:"
    },
    {
        "line": 226,
        "fullcodeline": "if key == 'date':"
    },
    {
        "line": 230,
        "fullcodeline": "if key == 'home' and 'homeDoesNotExist' not in changes:"
    },
    {
        "line": 233,
        "fullcodeline": "if key == 'homeDoesNotExist':"
    },
    {
        "line": 238,
        "fullcodeline": "if key == 'mindays':"
    },
    {
        "line": 241,
        "fullcodeline": "if key == 'maxdays':"
    },
    {
        "line": 244,
        "fullcodeline": "if key == 'inactdays':"
    },
    {
        "line": 247,
        "fullcodeline": "if key == 'warndays':"
    },
    {
        "line": 250,
        "fullcodeline": "if key == 'expire':"
    },
    {
        "line": 253,
        "fullcodeline": "if key == 'groups':"
    },
    {
        "line": 264,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 267,
        "fullcodeline": "if post[key] != pre[key]:"
    },
    {
        "line": 314,
        "fullcodeline": "groups = present_optgroups[:]"
    },
    {
        "line": 216,
        "fullcodeline": "ret['comment'] += '{0}: {1}\\n'.format(key, val)"
    },
    {
        "line": 224,
        "fullcodeline": "__salt__['shadow.set_password'](name, password)"
    },
    {
        "line": 227,
        "fullcodeline": "__salt__['shadow.set_date'](name, date)"
    },
    {
        "line": 231,
        "fullcodeline": "__salt__['user.chhome'](name, val, False)"
    },
    {
        "line": 234,
        "fullcodeline": "__salt__['user.chhome'](name, val, True)"
    },
    {
        "line": 239,
        "fullcodeline": "__salt__['shadow.set_mindays'](name, mindays)"
    },
    {
        "line": 242,
        "fullcodeline": "__salt__['shadow.set_maxdays'](name, maxdays)"
    },
    {
        "line": 245,
        "fullcodeline": "__salt__['shadow.set_inactdays'](name, inactdays)"
    },
    {
        "line": 248,
        "fullcodeline": "__salt__['shadow.set_warndays'](name, warndays)"
    },
    {
        "line": 251,
        "fullcodeline": "__salt__['shadow.set_expire'](name, expire)"
    },
    {
        "line": 254,
        "fullcodeline": "__salt__['user.ch{0}'.format(key)]("
    },
    {
        "line": 258,
        "fullcodeline": "__salt__['user.ch{0}'.format(key)](name, val)"
    },
    {
        "line": 268,
        "fullcodeline": "ret['changes'][key] = post[key]"
    },
    {
        "line": 331,
        "fullcodeline": "if password and not empty_password:"
    },
    {
        "line": 160,
        "fullcodeline": "'{0}'.format(','.join(missing_groups))"
    },
    {
        "line": 166,
        "fullcodeline": "if __salt__['group.info'](x)]"
    },
    {
        "line": 235,
        "fullcodeline": "if not os.path.isdir(val):"
    },
    {
        "line": 255,
        "fullcodeline": "name, val, not remove_groups"
    },
    {
        "line": 271,
        "fullcodeline": "if lshad[key] != spost[key]:"
    },
    {
        "line": 332,
        "fullcodeline": "__salt__['shadow.set_password'](name, password)"
    },
    {
        "line": 333,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 339,
        "fullcodeline": "ret['changes']['password'] = password"
    },
    {
        "line": 341,
        "fullcodeline": "__salt__['shadow.set_date'](name, date)"
    },
    {
        "line": 342,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 348,
        "fullcodeline": "ret['changes']['date'] = date"
    },
    {
        "line": 350,
        "fullcodeline": "__salt__['shadow.set_mindays'](name, mindays)"
    },
    {
        "line": 351,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 357,
        "fullcodeline": "ret['changes']['mindays'] = mindays"
    },
    {
        "line": 359,
        "fullcodeline": "__salt__['shadow.set_maxdays'](name, maxdays)"
    },
    {
        "line": 360,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 366,
        "fullcodeline": "ret['changes']['maxdays'] = maxdays"
    },
    {
        "line": 368,
        "fullcodeline": "__salt__['shadow.set_inactdays'](name, inactdays)"
    },
    {
        "line": 369,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 375,
        "fullcodeline": "ret['changes']['inactdays'] = inactdays"
    },
    {
        "line": 377,
        "fullcodeline": "__salt__['shadow.set_warndays'](name, warndays)"
    },
    {
        "line": 378,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 384,
        "fullcodeline": "ret['changes']['warndays'] = warndays"
    },
    {
        "line": 386,
        "fullcodeline": "__salt__['shadow.set_expire'](name, expire)"
    },
    {
        "line": 387,
        "fullcodeline": "spost = __salt__['shadow.info'](name)"
    },
    {
        "line": 393,
        "fullcodeline": "ret['changes']['expire'] = expire"
    },
    {
        "line": 394,
        "fullcodeline": "elif salt.utils.is_windows():"
    },
    {
        "line": 236,
        "fullcodeline": "__salt__['file.mkdir'](val, pre['uid'], pre['gid'], 0755)"
    },
    {
        "line": 272,
        "fullcodeline": "ret['changes'][key] = spost[key]"
    },
    {
        "line": 334,
        "fullcodeline": "if spost['passwd'] != password:"
    },
    {
        "line": 343,
        "fullcodeline": "if spost['lstchg'] != date:"
    },
    {
        "line": 352,
        "fullcodeline": "if spost['min'] != mindays:"
    },
    {
        "line": 361,
        "fullcodeline": "if spost['max'] != maxdays:"
    },
    {
        "line": 370,
        "fullcodeline": "if spost['inact'] != inactdays:"
    },
    {
        "line": 379,
        "fullcodeline": "if spost['warn'] != warndays:"
    },
    {
        "line": 388,
        "fullcodeline": "if spost['expire'] != expire:"
    },
    {
        "line": 395,
        "fullcodeline": "if password and not empty_password:"
    },
    {
        "line": 335,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 338,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 344,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 347,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 353,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 356,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 362,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 365,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 371,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 374,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 380,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 383,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 389,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 392,
        "fullcodeline": "ret['result'] = False"
    },
    {
        "line": 401,
        "fullcodeline": "ret['changes']['passwd'] = password"
    },
    {
        "line": 168,
        "fullcodeline": "if x not in present_optgroups]:"
    },
    {
        "line": 396,
        "fullcodeline": "if not __salt__['user.setpassword'](name, password):"
    },
    {
        "line": 397,
        "fullcodeline": "ret['comment'] = 'User {0} created but failed to set' \\"
    },
    {
        "line": 400,
        "fullcodeline": "ret['result'] = False"
    }
]