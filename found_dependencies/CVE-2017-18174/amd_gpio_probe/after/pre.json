[
    {
        "line": 3,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "gpio_dev = devm_kzalloc(&pdev->dev,"
    },
    {
        "line": 15,
        "fullcodeline": "res = platform_get_resource(pdev, IORESOURCE_MEM, 0);"
    },
    {
        "line": 21,
        "fullcodeline": "gpio_dev->base = devm_ioremap_nocache(&pdev->dev, res->start,"
    },
    {
        "line": 26,
        "fullcodeline": "irq_base = platform_get_irq(pdev, 0);"
    },
    {
        "line": 32,
        "fullcodeline": "gpio_dev->pdev = pdev;"
    },
    {
        "line": 33,
        "fullcodeline": "gpio_dev->gc.direction_input\t= amd_gpio_direction_input;"
    },
    {
        "line": 34,
        "fullcodeline": "gpio_dev->gc.direction_output\t= amd_gpio_direction_output;"
    },
    {
        "line": 35,
        "fullcodeline": "gpio_dev->gc.get\t\t\t= amd_gpio_get_value;"
    },
    {
        "line": 36,
        "fullcodeline": "gpio_dev->gc.set\t\t\t= amd_gpio_set_value;"
    },
    {
        "line": 37,
        "fullcodeline": "gpio_dev->gc.set_debounce\t= amd_gpio_set_debounce;"
    },
    {
        "line": 38,
        "fullcodeline": "gpio_dev->gc.dbg_show\t\t= amd_gpio_dbg_show;"
    },
    {
        "line": 42,
        "fullcodeline": "gpio_dev->gc.owner\t\t\t= THIS_MODULE;"
    },
    {
        "line": 49,
        "fullcodeline": "gpio_dev->groups = kerncz_groups;"
    },
    {
        "line": 50,
        "fullcodeline": "gpio_dev->ngroups = ARRAY_SIZE(kerncz_groups);"
    },
    {
        "line": 52,
        "fullcodeline": "amd_pinctrl_desc.name = dev_name(&pdev->dev);"
    },
    {
        "line": 53,
        "fullcodeline": "gpio_dev->pctrl = devm_pinctrl_register(&pdev->dev, &amd_pinctrl_desc,"
    },
    {
        "line": 60,
        "fullcodeline": "ret = gpiochip_add_data(&gpio_dev->gc, gpio_dev);"
    },
    {
        "line": 64,
        "fullcodeline": "ret = gpiochip_add_pin_range(&gpio_dev->gc, dev_name(&pdev->dev),"
    },
    {
        "line": 71,
        "fullcodeline": "ret = gpiochip_irqchip_add(&gpio_dev->gc,"
    },
    {
        "line": 82,
        "fullcodeline": "gpiochip_set_chained_irqchip(&gpio_dev->gc,"
    },
    {
        "line": 87,
        "fullcodeline": "platform_set_drvdata(pdev, gpio_dev);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!gpio_dev)"
    },
    {
        "line": 16,
        "fullcodeline": "if (!res) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!gpio_dev->base)"
    },
    {
        "line": 27,
        "fullcodeline": "if (irq_base < 0) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (IS_ERR(gpio_dev->pctrl)) {"
    },
    {
        "line": 9,
        "fullcodeline": "sizeof(struct amd_gpio), GFP_KERNEL);"
    },
    {
        "line": 22,
        "fullcodeline": "resource_size(res));"
    },
    {
        "line": 78,
        "fullcodeline": "ret = -ENODEV;"
    },
    {
        "line": 11,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 18,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 24,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 29,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 57,
        "fullcodeline": "return PTR_ERR(gpio_dev->pctrl);"
    }
]