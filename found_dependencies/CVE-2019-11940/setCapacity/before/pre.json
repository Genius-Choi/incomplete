[
    {
        "line": 2,
        "fullcodeline": "auto oldCapacity = capacity_;"
    },
    {
        "line": 3,
        "fullcodeline": "capacity_ = capacity;"
    },
    {
        "line": 4,
        "fullcodeline": "if (capacity_ <= oldCapacity) {"
    },
    {
        "line": 5,
        "fullcodeline": "evict(0);"
    },
    {
        "line": 7,
        "fullcodeline": "auto oldTail = tail();"
    },
    {
        "line": 8,
        "fullcodeline": "auto oldLength = table_.size();"
    },
    {
        "line": 9,
        "fullcodeline": "uint32_t newLength = (capacity_ >> 5) + 1;"
    },
    {
        "line": 10,
        "fullcodeline": "table_.resize(newLength);"
    },
    {
        "line": 11,
        "fullcodeline": "if (size_ > 0 && oldTail > head_) {"
    },
    {
        "line": 15,
        "fullcodeline": "table_.begin() + newLength - (oldLength - oldTail));"
    },
    {
        "line": 14,
        "fullcodeline": "std::copy(table_.begin() + oldTail, table_.begin() + oldLength,"
    },
    {
        "line": 19,
        "fullcodeline": "if (idx >= oldTail) {"
    },
    {
        "line": 21,
        "fullcodeline": "idx += (table_.size() - oldLength);"
    },
    {
        "line": 20,
        "fullcodeline": "DCHECK_LT(idx + (table_.size() - oldLength), table_.size());"
    }
]