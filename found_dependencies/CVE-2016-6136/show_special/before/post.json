[
    {
        "line": 6,
        "fullcodeline": "ab = audit_log_start(context, GFP_KERNEL, context->type);"
    },
    {
        "line": 98,
        "fullcodeline": "audit_log_end(ab);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!ab)"
    },
    {
        "line": 13,
        "fullcodeline": "audit_log_format(ab, \"nargs=%d\", nargs);"
    },
    {
        "line": 21,
        "fullcodeline": "audit_log_format(ab, \"ouid=%u ogid=%u mode=%#ho\","
    },
    {
        "line": 51,
        "fullcodeline": "audit_log_format(ab,"
    },
    {
        "line": 61,
        "fullcodeline": "audit_log_format(ab,"
    },
    {
        "line": 71,
        "fullcodeline": "audit_log_format(ab, \"mqdes=%d sigev_signo=%d\","
    },
    {
        "line": 77,
        "fullcodeline": "audit_log_format(ab,"
    },
    {
        "line": 85,
        "fullcodeline": "audit_log_format(ab, \"pid=%d\", context->capset.pid);"
    },
    {
        "line": 86,
        "fullcodeline": "audit_log_cap(ab, \"cap_pi\", &context->capset.cap.inheritable);"
    },
    {
        "line": 87,
        "fullcodeline": "audit_log_cap(ab, \"cap_pp\", &context->capset.cap.permitted);"
    },
    {
        "line": 88,
        "fullcodeline": "audit_log_cap(ab, \"cap_pe\", &context->capset.cap.effective);"
    },
    {
        "line": 91,
        "fullcodeline": "audit_log_format(ab, \"fd=%d flags=0x%x\", context->mmap.fd,"
    },
    {
        "line": 95,
        "fullcodeline": "audit_log_execve_info(context, &ab);"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = 0; i < nargs; i++)"
    },
    {
        "line": 15,
        "fullcodeline": "audit_log_format(ab, \" a%d=%lx\", i,"
    },
    {
        "line": 22,
        "fullcodeline": "from_kuid(&init_user_ns, context->ipc.uid),"
    },
    {
        "line": 23,
        "fullcodeline": "from_kgid(&init_user_ns, context->ipc.gid),"
    },
    {
        "line": 26,
        "fullcodeline": "char *ctx = NULL;"
    },
    {
        "line": 37,
        "fullcodeline": "audit_log_end(ab);"
    },
    {
        "line": 38,
        "fullcodeline": "ab = audit_log_start(context, GFP_KERNEL,"
    },
    {
        "line": 42,
        "fullcodeline": "audit_log_format(ab,"
    },
    {
        "line": 28,
        "fullcodeline": "if (security_secid_to_secctx(osid, &ctx, &len)) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (unlikely(!ab))"
    },
    {
        "line": 29,
        "fullcodeline": "audit_log_format(ab, \" osid=%u\", osid);"
    },
    {
        "line": 30,
        "fullcodeline": "*call_panic = 1;"
    },
    {
        "line": 32,
        "fullcodeline": "audit_log_format(ab, \" obj=%s\", ctx);"
    },
    {
        "line": 33,
        "fullcodeline": "security_release_secctx(ctx, len);"
    }
]