[
    {
        "line": 4,
        "fullcodeline": "TRANSACTION2_FNEXT_REQ *pSMB = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "TRANSACTION2_FNEXT_RSP *pSMBr = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "int rc = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "cFYI(1, \"In FindNext\");"
    },
    {
        "line": 18,
        "fullcodeline": "rc = smb_init(SMB_COM_TRANSACTION2, 15, tcon, (void **) &pSMB,"
    },
    {
        "line": 23,
        "fullcodeline": "params = 14; /* includes 2 bytes of null string, converted to LE below*/"
    },
    {
        "line": 24,
        "fullcodeline": "byte_count = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "pSMB->TotalDataCount = 0;       /* no EAs */"
    },
    {
        "line": 26,
        "fullcodeline": "pSMB->MaxParameterCount = cpu_to_le16(8);"
    },
    {
        "line": 27,
        "fullcodeline": "pSMB->MaxDataCount ="
    },
    {
        "line": 30,
        "fullcodeline": "pSMB->MaxSetupCount = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "pSMB->Reserved = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "pSMB->Flags = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "pSMB->Timeout = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "pSMB->Reserved2 = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "pSMB->DataCount = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "pSMB->DataOffset = 0;"
    },
    {
        "line": 39,
        "fullcodeline": "pSMB->SetupCount = 1;"
    },
    {
        "line": 40,
        "fullcodeline": "pSMB->Reserved3 = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "pSMB->SubCommand = cpu_to_le16(TRANS2_FIND_NEXT);"
    },
    {
        "line": 42,
        "fullcodeline": "pSMB->SearchHandle = searchHandle;      /* always kept as le */"
    },
    {
        "line": 43,
        "fullcodeline": "pSMB->SearchCount ="
    },
    {
        "line": 45,
        "fullcodeline": "pSMB->InformationLevel = cpu_to_le16(psrch_inf->info_level);"
    },
    {
        "line": 46,
        "fullcodeline": "pSMB->ResumeKey = psrch_inf->resume_key;"
    },
    {
        "line": 47,
        "fullcodeline": "pSMB->SearchFlags ="
    },
    {
        "line": 50,
        "fullcodeline": "name_len = psrch_inf->resume_name_len;"
    },
    {
        "line": 51,
        "fullcodeline": "params += name_len;"
    },
    {
        "line": 62,
        "fullcodeline": "byte_count = params + 1 /* pad */ ;"
    },
    {
        "line": 63,
        "fullcodeline": "pSMB->TotalParameterCount = cpu_to_le16(params);"
    },
    {
        "line": 64,
        "fullcodeline": "pSMB->ParameterCount = pSMB->TotalParameterCount;"
    },
    {
        "line": 65,
        "fullcodeline": "inc_rfc1001_len(pSMB, byte_count);"
    },
    {
        "line": 66,
        "fullcodeline": "pSMB->ByteCount = cpu_to_le16(byte_count);"
    },
    {
        "line": 68,
        "fullcodeline": "rc = SendReceive(xid, tcon->ses, (struct smb_hdr *) pSMB,"
    },
    {
        "line": 70,
        "fullcodeline": "cifs_stats_inc(&tcon->num_fnext);"
    },
    {
        "line": 28,
        "fullcodeline": "cpu_to_le16((tcon->ses->server->maxBuf - MAX_CIFS_HDR_SIZE) &"
    },
    {
        "line": 44,
        "fullcodeline": "cpu_to_le16(CIFSMaxBufSize / sizeof(FILE_UNIX_INFO));"
    },
    {
        "line": 48,
        "fullcodeline": "cpu_to_le16(CIFS_SEARCH_CLOSE_AT_END | CIFS_SEARCH_RETURN_RESUME);"
    },
    {
        "line": 52,
        "fullcodeline": "if (name_len < PATH_MAX) {"
    },
    {
        "line": 134,
        "fullcodeline": "if (rc != 0)"
    },
    {
        "line": 19,
        "fullcodeline": "(void **) &pSMBr);"
    },
    {
        "line": 53,
        "fullcodeline": "memcpy(pSMB->ResumeFileName, psrch_inf->presume_name, name_len);"
    },
    {
        "line": 54,
        "fullcodeline": "byte_count += name_len;"
    },
    {
        "line": 56,
        "fullcodeline": "pSMB->ResumeFileName[name_len] = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "pSMB->ResumeFileName[name_len+1] = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "(struct smb_hdr *) pSMBr, &bytes_returned, 0);"
    },
    {
        "line": 135,
        "fullcodeline": "cifs_buf_release(pSMB);"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 59,
        "fullcodeline": "rc = -EINVAL;"
    },
    {
        "line": 72,
        "fullcodeline": "if (rc == -EBADF) {"
    },
    {
        "line": 79,
        "fullcodeline": "rc = validate_t2((struct smb_t2_rsp *)pSMBr);"
    },
    {
        "line": 73,
        "fullcodeline": "psrch_inf->endOfSearch = true;"
    },
    {
        "line": 74,
        "fullcodeline": "cifs_buf_release(pSMB);"
    },
    {
        "line": 75,
        "fullcodeline": "rc = 0; /* search probably was closed at end of search*/"
    },
    {
        "line": 81,
        "fullcodeline": "if (rc == 0) {"
    },
    {
        "line": 77,
        "fullcodeline": "cFYI(1, \"FindNext returned = %d\", rc);"
    },
    {
        "line": 89,
        "fullcodeline": "response_data = (char *) &pSMBr->hdr.Protocol +"
    },
    {
        "line": 91,
        "fullcodeline": "parms = (T2_FNEXT_RSP_PARMS *)response_data;"
    },
    {
        "line": 92,
        "fullcodeline": "response_data = (char *)&pSMBr->hdr.Protocol +"
    },
    {
        "line": 99,
        "fullcodeline": "psrch_inf->srch_entries_start = response_data;"
    },
    {
        "line": 100,
        "fullcodeline": "psrch_inf->ntwrk_buf_start = (char *)pSMB;"
    },
    {
        "line": 101,
        "fullcodeline": "psrch_inf->smallBuf = 0;"
    },
    {
        "line": 106,
        "fullcodeline": "psrch_inf->entries_in_buffer ="
    },
    {
        "line": 108,
        "fullcodeline": "psrch_inf->index_of_last_entry +="
    },
    {
        "line": 110,
        "fullcodeline": "lnoff = le16_to_cpu(parms->LastNameOffset);"
    },
    {
        "line": 85,
        "fullcodeline": "if (pSMBr->hdr.Flags2 & SMBFLG2_UNICODE)"
    },
    {
        "line": 107,
        "fullcodeline": "le16_to_cpu(parms->SearchCount);"
    },
    {
        "line": 111,
        "fullcodeline": "if (tcon->ses->server->maxBuf - MAX_CIFS_HDR_SIZE <"
    },
    {
        "line": 86,
        "fullcodeline": "psrch_inf->unicode = true;"
    },
    {
        "line": 95,
        "fullcodeline": "cifs_small_buf_release("
    },
    {
        "line": 103,
        "fullcodeline": "psrch_inf->endOfSearch = true;"
    },
    {
        "line": 113,
        "fullcodeline": "cERROR(1, \"ignoring corrupt resume name\");"
    },
    {
        "line": 114,
        "fullcodeline": "psrch_inf->last_entry = NULL;"
    },
    {
        "line": 88,
        "fullcodeline": "psrch_inf->unicode = false;"
    },
    {
        "line": 98,
        "fullcodeline": "cifs_buf_release(psrch_inf->ntwrk_buf_start);"
    },
    {
        "line": 105,
        "fullcodeline": "psrch_inf->endOfSearch = false;"
    },
    {
        "line": 117,
        "fullcodeline": "psrch_inf->last_entry ="
    },
    {
        "line": 118,
        "fullcodeline": "psrch_inf->srch_entries_start + lnoff;"
    }
]