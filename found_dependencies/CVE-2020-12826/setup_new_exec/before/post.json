[
    {
        "line": 8,
        "fullcodeline": "bprm->secureexec |= bprm->cap_elevated;"
    },
    {
        "line": 25,
        "fullcodeline": "arch_pick_mmap_layout(current->mm, &bprm->rlim_stack);"
    },
    {
        "line": 27,
        "fullcodeline": "current->sas_ss_sp = current->sas_ss_size = 0;"
    },
    {
        "line": 41,
        "fullcodeline": "arch_setup_new_exec();"
    },
    {
        "line": 42,
        "fullcodeline": "perf_event_exec();"
    },
    {
        "line": 43,
        "fullcodeline": "__set_task_comm(current, kbasename(bprm->filename), true);"
    },
    {
        "line": 49,
        "fullcodeline": "current->mm->task_size = TASK_SIZE;"
    },
    {
        "line": 53,
        "fullcodeline": "current->self_exec_id++;"
    },
    {
        "line": 54,
        "fullcodeline": "flush_signal_handlers(current, 0);"
    },
    {
        "line": 34,
        "fullcodeline": "if (bprm->interp_flags & BINPRM_FLAGS_ENFORCE_NONDUMP ||"
    },
    {
        "line": 12,
        "fullcodeline": "current->pdeath_signal = 0;"
    },
    {
        "line": 35,
        "fullcodeline": "!(uid_eq(current_euid(), current_uid()) &&"
    },
    {
        "line": 37,
        "fullcodeline": "set_dumpable(current->mm, suid_dumpable);"
    },
    {
        "line": 21,
        "fullcodeline": "if (bprm->rlim_stack.rlim_cur > _STK_LIM)"
    },
    {
        "line": 39,
        "fullcodeline": "set_dumpable(current->mm, SUID_DUMP_USER);"
    },
    {
        "line": 22,
        "fullcodeline": "bprm->rlim_stack.rlim_cur = _STK_LIM;"
    },
    {
        "line": 36,
        "fullcodeline": "gid_eq(current_egid(), current_gid())))"
    }
]