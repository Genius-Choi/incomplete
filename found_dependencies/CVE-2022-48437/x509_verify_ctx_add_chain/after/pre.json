[
    {
        "line": 5,
        "fullcodeline": "X509 *last = x509_verify_chain_last(chain);"
    },
    {
        "line": 6,
        "fullcodeline": "X509 *leaf = x509_verify_chain_leaf(chain);"
    },
    {
        "line": 8,
        "fullcodeline": "depth = sk_X509_num(chain->certs);"
    },
    {
        "line": 9,
        "fullcodeline": "if (depth > 0)"
    },
    {
        "line": 12,
        "fullcodeline": "if (ctx->chains_count >= ctx->max_chains)"
    },
    {
        "line": 17,
        "fullcodeline": "if (chain->cert_errors[depth] =="
    },
    {
        "line": 10,
        "fullcodeline": "depth--;"
    },
    {
        "line": 21,
        "fullcodeline": "if (!x509_verify_ctx_validate_legacy_chain(ctx, chain, depth))"
    },
    {
        "line": 25,
        "fullcodeline": "if (!x509_verify_cert_valid(ctx, leaf, NULL))"
    },
    {
        "line": 27,
        "fullcodeline": "if (!x509_verify_cert_hostname(ctx, leaf, name))"
    },
    {
        "line": 29,
        "fullcodeline": "if (ctx->error_depth == 0 &&"
    },
    {
        "line": 30,
        "fullcodeline": "ctx->error != X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY)"
    },
    {
        "line": 42,
        "fullcodeline": "if ((ctx->chains[ctx->chains_count] = x509_verify_chain_dup(chain)) =="
    },
    {
        "line": 13,
        "fullcodeline": "return x509_verify_cert_error(ctx, last, depth,"
    },
    {
        "line": 44,
        "fullcodeline": "return x509_verify_cert_error(ctx, last, depth,"
    }
]