[
    {
        "line": 8,
        "fullcodeline": "struct sdp_media *sdpa = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "struct sdp_media *sdpv = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "char *sdpres = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "sdp_dup(&sess, conv_type, remote_sdp, false);"
    },
    {
        "line": 19,
        "fullcodeline": "sdpa = find_media(sess, \"audio\");"
    },
    {
        "line": 20,
        "fullcodeline": "sdpv = find_media(sess, \"video\");"
    },
    {
        "line": 22,
        "fullcodeline": "bundle.mid = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "bundle.mb = mbuf_alloc(128);"
    },
    {
        "line": 24,
        "fullcodeline": "mbuf_printf(bundle.mb, \"%s\", sdp_session_rattr(sess, \"group\"));"
    },
    {
        "line": 26,
        "fullcodeline": "list_flush((struct list *)sdp_session_medial(sess, true));"
    },
    {
        "line": 28,
        "fullcodeline": "LIST_FOREACH(membl, le) {"
    },
    {
        "line": 37,
        "fullcodeline": "bundle.mb->pos = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "mbuf_strdup(bundle.mb, &grpstr, mbuf_get_left(bundle.mb));"
    },
    {
        "line": 39,
        "fullcodeline": "sdp_safe_session_set_lattr(sess, true, \"group\", grpstr);"
    },
    {
        "line": 40,
        "fullcodeline": "mem_deref(grpstr);"
    },
    {
        "line": 41,
        "fullcodeline": "mem_deref(bundle.mb);"
    },
    {
        "line": 43,
        "fullcodeline": "sdp_encode(&mbb, sess, true);"
    },
    {
        "line": 44,
        "fullcodeline": "mbuf_strdup(mbb, &sdpres, mbb->end);"
    },
    {
        "line": 45,
        "fullcodeline": "mem_deref(mbb);"
    },
    {
        "line": 51,
        "fullcodeline": "mem_deref(sdpres);"
    },
    {
        "line": 52,
        "fullcodeline": "mem_deref(sess);"
    },
    {
        "line": 29,
        "fullcodeline": "struct conf_member *cm = (struct conf_member *)le->data;"
    },
    {
        "line": 31,
        "fullcodeline": "if (include_audio && sdpa)"
    },
    {
        "line": 33,
        "fullcodeline": "if (sdpv && cm->ssrcv)"
    },
    {
        "line": 48,
        "fullcodeline": "flow_updateh(flow, sdpres);"
    },
    {
        "line": 32,
        "fullcodeline": "bundle_ssrc(BUNDLE_TYPE_AUDIO, cm, &bundle, sess, sdpa);"
    },
    {
        "line": 34,
        "fullcodeline": "bundle_ssrc(BUNDLE_TYPE_VIDEO, cm, &bundle, sess, sdpv);"
    }
]