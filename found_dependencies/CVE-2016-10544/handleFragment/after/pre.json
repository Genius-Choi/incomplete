[
    {
        "line": 2,
        "fullcodeline": "uS::Socket s((uv_poll_t *) user);"
    },
    {
        "line": 3,
        "fullcodeline": "typename WebSocket<isServer>::Data *webSocketData = (typename WebSocket<isServer>::Data *) s.getSocketData();"
    },
    {
        "line": 5,
        "fullcodeline": "if (opCode < 3) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (!remainingBytes && fin && !webSocketData->fragmentBuffer.length()) {"
    },
    {
        "line": 57,
        "fullcodeline": "webSocketData->controlBuffer.append(data, length);"
    },
    {
        "line": 7,
        "fullcodeline": "if (webSocketData->compressionStatus == WebSocket<isServer>::Data::CompressionStatus::COMPRESSED_FRAME) {"
    },
    {
        "line": 22,
        "fullcodeline": "((Group<isServer> *) s.getSocketData()->nodeData)->messageHandler(WebSocket<isServer>(s), data, length, (OpCode) opCode);"
    },
    {
        "line": 27,
        "fullcodeline": "webSocketData->fragmentBuffer.append(data, length);"
    },
    {
        "line": 58,
        "fullcodeline": "if (!remainingBytes && fin) {"
    },
    {
        "line": 8,
        "fullcodeline": "webSocketData->compressionStatus = WebSocket<isServer>::Data::CompressionStatus::ENABLED;"
    },
    {
        "line": 9,
        "fullcodeline": "Hub *hub = ((Group<isServer> *) s.getSocketData()->nodeData)->hub;"
    },
    {
        "line": 10,
        "fullcodeline": "data = hub->inflate(data, length);"
    },
    {
        "line": 17,
        "fullcodeline": "if (opCode == 1 && !isValidUtf8((unsigned char *) data, length)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (s.isClosed() || s.isShuttingDown()) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (opCode == CLOSE) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (!data) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (!remainingBytes && fin) {"
    },
    {
        "line": 29,
        "fullcodeline": "length = webSocketData->fragmentBuffer.length();"
    },
    {
        "line": 60,
        "fullcodeline": "CloseFrame closeFrame = parseClosePayload((char *) webSocketData->controlBuffer.data(), webSocketData->controlBuffer.length());"
    },
    {
        "line": 12,
        "fullcodeline": "forceClose(user);"
    },
    {
        "line": 48,
        "fullcodeline": "((Group<isServer> *) s.getSocketData()->nodeData)->messageHandler(WebSocket<isServer>(s), data, length, (OpCode) opCode);"
    },
    {
        "line": 61,
        "fullcodeline": "WebSocket<isServer>(s).close(closeFrame.code, closeFrame.message, closeFrame.length);"
    },
    {
        "line": 30,
        "fullcodeline": "if (webSocketData->compressionStatus == WebSocket<isServer>::Data::CompressionStatus::COMPRESSED_FRAME) {"
    },
    {
        "line": 32,
        "fullcodeline": "Hub *hub = ((Group<isServer> *) s.getSocketData()->nodeData)->hub;"
    },
    {
        "line": 33,
        "fullcodeline": "webSocketData->fragmentBuffer.append(\"....\");"
    },
    {
        "line": 34,
        "fullcodeline": "data = hub->inflate((char *) webSocketData->fragmentBuffer.data(), length);"
    },
    {
        "line": 43,
        "fullcodeline": "if (opCode == 1 && !isValidUtf8((unsigned char *) data, length)) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (s.isClosed() || s.isShuttingDown()) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (opCode == PING) {"
    },
    {
        "line": 31,
        "fullcodeline": "webSocketData->compressionStatus = WebSocket<isServer>::Data::CompressionStatus::ENABLED;"
    },
    {
        "line": 35,
        "fullcodeline": "if (!data) {"
    },
    {
        "line": 40,
        "fullcodeline": "data = (char *) webSocketData->fragmentBuffer.data();"
    },
    {
        "line": 65,
        "fullcodeline": "WebSocket<isServer>(s).send(webSocketData->controlBuffer.data(), webSocketData->controlBuffer.length(), (OpCode) OpCode::PONG);"
    },
    {
        "line": 66,
        "fullcodeline": "((Group<isServer> *) s.getSocketData()->nodeData)->pingHandler(WebSocket<isServer>(s), (char *) webSocketData->controlBuffer.data(), webSocketData->controlBuffer.length());"
    },
    {
        "line": 67,
        "fullcodeline": "if (s.isClosed() || s.isShuttingDown()) {"
    },
    {
        "line": 70,
        "fullcodeline": "} else if (opCode == PONG) {"
    },
    {
        "line": 71,
        "fullcodeline": "((Group<isServer> *) s.getSocketData()->nodeData)->pongHandler(WebSocket<isServer>(s), (char *) webSocketData->controlBuffer.data(), webSocketData->controlBuffer.length());"
    },
    {
        "line": 72,
        "fullcodeline": "if (s.isClosed() || s.isShuttingDown()) {"
    }
]