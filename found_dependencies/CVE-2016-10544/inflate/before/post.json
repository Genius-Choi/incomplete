[
    {
        "line": 2,
        "fullcodeline": "dynamicInflationBuffer.clear();"
    },
    {
        "line": 4,
        "fullcodeline": "inflationStream.next_in = (Bytef *) data;"
    },
    {
        "line": 5,
        "fullcodeline": "inflationStream.avail_in = length;"
    },
    {
        "line": 32,
        "fullcodeline": "length = LARGE_BUFFER_SIZE - inflationStream.avail_out;"
    },
    {
        "line": 16,
        "fullcodeline": "} while (err == Z_BUF_ERROR);"
    },
    {
        "line": 20,
        "fullcodeline": "if (err != Z_BUF_ERROR && err != Z_OK) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (dynamicInflationBuffer.length()) {"
    },
    {
        "line": 9,
        "fullcodeline": "inflationStream.next_out = (Bytef *) inflationBuffer;"
    },
    {
        "line": 10,
        "fullcodeline": "inflationStream.avail_out = LARGE_BUFFER_SIZE;"
    },
    {
        "line": 11,
        "fullcodeline": "err = ::inflate(&inflationStream, Z_FINISH);"
    },
    {
        "line": 15,
        "fullcodeline": "dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);"
    },
    {
        "line": 21,
        "fullcodeline": "length = 0;"
    },
    {
        "line": 26,
        "fullcodeline": "dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);"
    },
    {
        "line": 28,
        "fullcodeline": "length = dynamicInflationBuffer.length();"
    },
    {
        "line": 12,
        "fullcodeline": "if (!inflationStream.avail_in) {"
    },
    {
        "line": 29,
        "fullcodeline": "return (char *) dynamicInflationBuffer.data();"
    }
]