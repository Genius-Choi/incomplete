[
    {
        "line": 4,
        "fullcodeline": "struct sock *sk = sock->sk;"
    },
    {
        "line": 5,
        "fullcodeline": "struct rose_sock *rose = rose_sk(sk);"
    },
    {
        "line": 6,
        "fullcodeline": "struct sockaddr_rose *srose = (struct sockaddr_rose *)msg->msg_name;"
    },
    {
        "line": 23,
        "fullcodeline": "qbit = (skb->data[0] & ROSE_Q_BIT) == ROSE_Q_BIT;"
    },
    {
        "line": 25,
        "fullcodeline": "skb_pull(skb, ROSE_MIN_LEN);"
    },
    {
        "line": 32,
        "fullcodeline": "skb_reset_transport_header(skb);"
    },
    {
        "line": 33,
        "fullcodeline": "copied     = skb->len;"
    },
    {
        "line": 40,
        "fullcodeline": "skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied);"
    },
    {
        "line": 16,
        "fullcodeline": "if (sk->sk_state != TCP_ESTABLISHED)"
    },
    {
        "line": 20,
        "fullcodeline": "if ((skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT, flags & MSG_DONTWAIT, &er)) == NULL)"
    },
    {
        "line": 35,
        "fullcodeline": "if (copied > size) {"
    },
    {
        "line": 36,
        "fullcodeline": "copied = size;"
    },
    {
        "line": 37,
        "fullcodeline": "msg->msg_flags |= MSG_TRUNC;"
    },
    {
        "line": 43,
        "fullcodeline": "srose->srose_family = AF_ROSE;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENOTCONN;"
    },
    {
        "line": 28,
        "fullcodeline": "asmptr  = skb_push(skb, 1);"
    },
    {
        "line": 49,
        "fullcodeline": "for (n = 0 ; n < rose->dest_ndigis ; n++)"
    },
    {
        "line": 57,
        "fullcodeline": "msg->msg_namelen = sizeof(struct sockaddr_rose);"
    }
]