[
    {
        "line": 28,
        "fullcodeline": "yytype_int16 yyssa[YYINITDEPTH];"
    },
    {
        "line": 33,
        "fullcodeline": "YYSTYPE yyvsa[YYINITDEPTH];"
    },
    {
        "line": 42,
        "fullcodeline": "int yytoken = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "int yylen = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "yyssp = yyss = yyssa;"
    },
    {
        "line": 61,
        "fullcodeline": "yyvsp = yyvs = yyvsa;"
    },
    {
        "line": 62,
        "fullcodeline": "yystacksize = YYINITDEPTH;"
    },
    {
        "line": 64,
        "fullcodeline": "YYDPRINTF ((stderr, \"Starting parse\\n\"));"
    },
    {
        "line": 66,
        "fullcodeline": "yystate = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "yyerrstatus = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "yynerrs = 0;"
    },
    {
        "line": 69,
        "fullcodeline": "yychar = YYEMPTY; /* Cause a token to be read.  */"
    },
    {
        "line": 78,
        "fullcodeline": "yyssp++;"
    },
    {
        "line": 81,
        "fullcodeline": "*yyssp = yystate;"
    },
    {
        "line": 144,
        "fullcodeline": "YYDPRINTF ((stderr, \"Entering state %d\\n\", yystate));"
    },
    {
        "line": 160,
        "fullcodeline": "yyn = yypact[yystate];"
    },
    {
        "line": 186,
        "fullcodeline": "yyn += yytoken;"
    },
    {
        "line": 189,
        "fullcodeline": "yyn = yytable[yyn];"
    },
    {
        "line": 204,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Shifting\", yytoken, &yylval, &yylloc);"
    },
    {
        "line": 207,
        "fullcodeline": "yychar = YYEMPTY;"
    },
    {
        "line": 209,
        "fullcodeline": "yystate = yyn;"
    },
    {
        "line": 210,
        "fullcodeline": "YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"
    },
    {
        "line": 221,
        "fullcodeline": "yyn = yydefact[yystate];"
    },
    {
        "line": 232,
        "fullcodeline": "yylen = yyr2[yyn];"
    },
    {
        "line": 242,
        "fullcodeline": "yyval = yyvsp[1-yylen];"
    },
    {
        "line": 245,
        "fullcodeline": "YY_REDUCE_PRINT (yyn);"
    },
    {
        "line": 595,
        "fullcodeline": "YY_SYMBOL_PRINT (\"-> $$ =\", yyr1[yyn], &yyval, &yyloc);"
    },
    {
        "line": 597,
        "fullcodeline": "YYPOPSTACK (yylen);"
    },
    {
        "line": 598,
        "fullcodeline": "yylen = 0;"
    },
    {
        "line": 599,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 601,
        "fullcodeline": "*++yyvsp = yyval;"
    },
    {
        "line": 607,
        "fullcodeline": "yyn = yyr1[yyn];"
    },
    {
        "line": 609,
        "fullcodeline": "yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;"
    },
    {
        "line": 624,
        "fullcodeline": "yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);"
    },
    {
        "line": 716,
        "fullcodeline": "yyerrstatus = 3;      /* Each real token shifted decrements this.  */"
    },
    {
        "line": 744,
        "fullcodeline": "YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN"
    },
    {
        "line": 750,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Shifting\", yystos[yyn], yyvsp, yylsp);"
    },
    {
        "line": 752,
        "fullcodeline": "yystate = yyn;"
    },
    {
        "line": 775,
        "fullcodeline": "yyerror (yyscanner, lex_env, YY_(\"memory exhausted\"));"
    },
    {
        "line": 776,
        "fullcodeline": "yyresult = 2;"
    },
    {
        "line": 791,
        "fullcodeline": "YYPOPSTACK (yylen);"
    },
    {
        "line": 792,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 83,
        "fullcodeline": "if (yyss + yystacksize - 1 <= yyssp)"
    },
    {
        "line": 146,
        "fullcodeline": "if (yystate == YYFINAL)"
    },
    {
        "line": 161,
        "fullcodeline": "if (yypact_value_is_default (yyn))"
    },
    {
        "line": 167,
        "fullcodeline": "if (yychar == YYEMPTY)"
    },
    {
        "line": 173,
        "fullcodeline": "if (yychar <= YYEOF)"
    },
    {
        "line": 187,
        "fullcodeline": "if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)"
    },
    {
        "line": 190,
        "fullcodeline": "if (yyn <= 0)"
    },
    {
        "line": 222,
        "fullcodeline": "if (yyn == 0)"
    },
    {
        "line": 610,
        "fullcodeline": "if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)"
    },
    {
        "line": 627,
        "fullcodeline": "if (!yyerrstatus)"
    },
    {
        "line": 668,
        "fullcodeline": "if (yyerrstatus == 3)"
    },
    {
        "line": 781,
        "fullcodeline": "if (yychar != YYEMPTY)"
    },
    {
        "line": 793,
        "fullcodeline": "while (yyssp != yyss)"
    },
    {
        "line": 800,
        "fullcodeline": "if (yyss != yyssa)"
    },
    {
        "line": 86,
        "fullcodeline": "YYSIZE_T yysize = yyssp - yyss + 1;"
    },
    {
        "line": 169,
        "fullcodeline": "YYDPRINTF ((stderr, \"Reading a token: \"));"
    },
    {
        "line": 170,
        "fullcodeline": "yychar = yylex (&yylval, yyscanner, lex_env);"
    },
    {
        "line": 175,
        "fullcodeline": "yychar = yytoken = YYEOF;"
    },
    {
        "line": 176,
        "fullcodeline": "YYDPRINTF ((stderr, \"Now at end of input.\\n\"));"
    },
    {
        "line": 194,
        "fullcodeline": "yyn = -yyn;"
    },
    {
        "line": 201,
        "fullcodeline": "yyerrstatus--;"
    },
    {
        "line": 211,
        "fullcodeline": "*++yyvsp = yylval;"
    },
    {
        "line": 611,
        "fullcodeline": "yystate = yytable[yystate];"
    },
    {
        "line": 629,
        "fullcodeline": "++yynerrs;"
    },
    {
        "line": 631,
        "fullcodeline": "yyerror (yyscanner, lex_env, YY_(\"syntax error\"));"
    },
    {
        "line": 720,
        "fullcodeline": "yyn = yypact[yystate];"
    },
    {
        "line": 737,
        "fullcodeline": "yydestruct (\"Error: popping\","
    },
    {
        "line": 739,
        "fullcodeline": "YYPOPSTACK (1);"
    },
    {
        "line": 740,
        "fullcodeline": "yystate = *yyssp;"
    },
    {
        "line": 741,
        "fullcodeline": "YY_STACK_PRINT (yyss, yyssp);"
    },
    {
        "line": 745,
        "fullcodeline": "*++yyvsp = yylval;"
    },
    {
        "line": 785,
        "fullcodeline": "yytoken = YYTRANSLATE (yychar);"
    },
    {
        "line": 786,
        "fullcodeline": "yydestruct (\"Cleanup: discarding lookahead\","
    },
    {
        "line": 795,
        "fullcodeline": "yydestruct (\"Cleanup: popping\","
    },
    {
        "line": 797,
        "fullcodeline": "YYPOPSTACK (1);"
    },
    {
        "line": 801,
        "fullcodeline": "YYSTACK_FREE (yyss);"
    },
    {
        "line": 140,
        "fullcodeline": "if (yyss + yystacksize - 1 <= yyssp)"
    },
    {
        "line": 180,
        "fullcodeline": "yytoken = YYTRANSLATE (yychar);"
    },
    {
        "line": 181,
        "fullcodeline": "YY_SYMBOL_PRINT (\"Next token is\", yytoken, &yylval, &yylloc);"
    },
    {
        "line": 192,
        "fullcodeline": "if (yytable_value_is_error (yyn))"
    },
    {
        "line": 251,
        "fullcodeline": "RE_AST* re_ast = yyget_extra(yyscanner);"
    },
    {
        "line": 252,
        "fullcodeline": "re_ast->root_node = (yyvsp[-1].re_node);"
    },
    {
        "line": 260,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 268,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 270,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 271,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 273,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 282,
        "fullcodeline": "RE_NODE* leftmost_concat = NULL;"
    },
    {
        "line": 283,
        "fullcodeline": "RE_NODE* leftmost_node = (yyvsp[-1].re_node);"
    },
    {
        "line": 285,
        "fullcodeline": "(yyval.re_node) = NULL;"
    },
    {
        "line": 315,
        "fullcodeline": "new_concat = yr_re_node_create("
    },
    {
        "line": 331,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 332,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 333,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 335,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 343,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 351,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 353,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));"
    },
    {
        "line": 354,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 356,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 364,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 372,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 373,
        "fullcodeline": "(yyval.re_node)->greedy = FALSE;"
    },
    {
        "line": 381,
        "fullcodeline": "lex_env->token_count++;"
    },
    {
        "line": 390,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 398,
        "fullcodeline": "lex_env->inside_or++;"
    },
    {
        "line": 406,
        "fullcodeline": "(yyval.re_node) = (yyvsp[-1].re_node);"
    },
    {
        "line": 407,
        "fullcodeline": "lex_env->inside_or--;"
    },
    {
        "line": 429,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 431,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 433,
        "fullcodeline": "(yyval.re_node)->start = (int) (yyvsp[-1].integer);"
    },
    {
        "line": 434,
        "fullcodeline": "(yyval.re_node)->end = (int) (yyvsp[-1].integer);"
    },
    {
        "line": 465,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 467,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 469,
        "fullcodeline": "(yyval.re_node)->start = (int) (yyvsp[-3].integer);"
    },
    {
        "line": 470,
        "fullcodeline": "(yyval.re_node)->end = (int) (yyvsp[-1].integer);"
    },
    {
        "line": 491,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 493,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 495,
        "fullcodeline": "(yyval.re_node)->start = (int) (yyvsp[-2].integer);"
    },
    {
        "line": 496,
        "fullcodeline": "(yyval.re_node)->end = INT_MAX;"
    },
    {
        "line": 511,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_RANGE_ANY, NULL, NULL);"
    },
    {
        "line": 513,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 515,
        "fullcodeline": "(yyval.re_node)->start = 0;"
    },
    {
        "line": 516,
        "fullcodeline": "(yyval.re_node)->end = INT_MAX;"
    },
    {
        "line": 524,
        "fullcodeline": "(yyval.re_node) = (yyvsp[0].re_node);"
    },
    {
        "line": 532,
        "fullcodeline": "mark_as_not_fast_regexp();"
    },
    {
        "line": 534,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 536,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-2].re_node));"
    },
    {
        "line": 537,
        "fullcodeline": "DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));"
    },
    {
        "line": 539,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 547,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);"
    },
    {
        "line": 549,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 551,
        "fullcodeline": "(yyval.re_node)->value = (int) (yyvsp[0].integer);"
    },
    {
        "line": 559,
        "fullcodeline": "uint8_t mask = (uint8_t) ((yyvsp[0].integer) >> 8);"
    },
    {
        "line": 613,
        "fullcodeline": "yystate = yydefgoto[yyn - YYNTOKENS];"
    },
    {
        "line": 673,
        "fullcodeline": "if (yychar <= YYEOF)"
    },
    {
        "line": 721,
        "fullcodeline": "if (!yypact_value_is_default (yyn))"
    },
    {
        "line": 733,
        "fullcodeline": "if (yyssp == yyss)"
    },
    {
        "line": 309,
        "fullcodeline": "while (leftmost_node->type == RE_NODE_CONCAT)"
    },
    {
        "line": 318,
        "fullcodeline": "if (new_concat != NULL)"
    },
    {
        "line": 383,
        "fullcodeline": "if (lex_env->token_count > MAX_HEX_STRING_TOKENS)"
    },
    {
        "line": 415,
        "fullcodeline": "if ((yyvsp[-1].integer) <= 0)"
    },
    {
        "line": 421,
        "fullcodeline": "if (lex_env->inside_or && (yyvsp[-1].integer) > STRING_CHAINING_THRESHOLD)"
    },
    {
        "line": 442,
        "fullcodeline": "if (lex_env->inside_or &&"
    },
    {
        "line": 453,
        "fullcodeline": "if ((yyvsp[-3].integer) < 0 || (yyvsp[-1].integer) < 0)"
    },
    {
        "line": 459,
        "fullcodeline": "if ((yyvsp[-3].integer) > (yyvsp[-1].integer))"
    },
    {
        "line": 485,
        "fullcodeline": "if ((yyvsp[-2].integer) < 0)"
    },
    {
        "line": 561,
        "fullcodeline": "if (mask == 0x00)"
    },
    {
        "line": 723,
        "fullcodeline": "yyn += YYTERROR;"
    },
    {
        "line": 311,
        "fullcodeline": "leftmost_concat = leftmost_node;"
    },
    {
        "line": 312,
        "fullcodeline": "leftmost_node = leftmost_node->left;"
    },
    {
        "line": 385,
        "fullcodeline": "yr_re_node_destroy((yyvsp[0].re_node));"
    },
    {
        "line": 386,
        "fullcodeline": "yyerror(yyscanner, lex_env, \"string too long\");"
    },
    {
        "line": 417,
        "fullcodeline": "yyerror(yyscanner, lex_env, \"invalid jump length\");"
    },
    {
        "line": 443,
        "fullcodeline": "((yyvsp[-3].integer) > STRING_CHAINING_THRESHOLD ||"
    },
    {
        "line": 455,
        "fullcodeline": "yyerror(yyscanner, lex_env, \"invalid negative jump length\");"
    },
    {
        "line": 461,
        "fullcodeline": "yyerror(yyscanner, lex_env, \"invalid jump range\");"
    },
    {
        "line": 480,
        "fullcodeline": "yyerror(yyscanner, lex_env,"
    },
    {
        "line": 487,
        "fullcodeline": "yyerror(yyscanner, lex_env, \"invalid negative jump length\");"
    },
    {
        "line": 506,
        "fullcodeline": "yyerror(yyscanner, lex_env,"
    },
    {
        "line": 563,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_ANY, NULL, NULL);"
    },
    {
        "line": 565,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 676,
        "fullcodeline": "if (yychar == YYEOF)"
    },
    {
        "line": 681,
        "fullcodeline": "yydestruct (\"Error: discarding\","
    },
    {
        "line": 683,
        "fullcodeline": "yychar = YYEMPTY;"
    },
    {
        "line": 724,
        "fullcodeline": "if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)"
    },
    {
        "line": 320,
        "fullcodeline": "if (leftmost_concat != NULL)"
    },
    {
        "line": 444,
        "fullcodeline": "(yyvsp[-1].integer) > STRING_CHAINING_THRESHOLD) )"
    },
    {
        "line": 569,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_MASKED_LITERAL, NULL, NULL);"
    },
    {
        "line": 571,
        "fullcodeline": "ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);"
    },
    {
        "line": 573,
        "fullcodeline": "(yyval.re_node)->value = (yyvsp[0].integer) & 0xFF;"
    },
    {
        "line": 574,
        "fullcodeline": "(yyval.re_node)->mask = mask;"
    },
    {
        "line": 726,
        "fullcodeline": "yyn = yytable[yyn];"
    },
    {
        "line": 322,
        "fullcodeline": "leftmost_concat->left = new_concat;"
    },
    {
        "line": 323,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));"
    },
    {
        "line": 727,
        "fullcodeline": "if (0 < yyn)"
    },
    {
        "line": 327,
        "fullcodeline": "(yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, new_concat, (yyvsp[0].re_node));"
    }
]