[
    {
        "line": 2,
        "fullcodeline": "const TfLiteTensor* input_resource_id_tensor ="
    },
    {
        "line": 4,
        "fullcodeline": "const int resource_id = input_resource_id_tensor->data.i32[0];"
    },
    {
        "line": 6,
        "fullcodeline": "const TfLiteTensor* key_tensor = GetInput(context, node, kKeyTensor);"
    },
    {
        "line": 7,
        "fullcodeline": "const TfLiteTensor* value_tensor = GetInput(context, node, kValueTensor);"
    },
    {
        "line": 9,
        "fullcodeline": "Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"
    },
    {
        "line": 10,
        "fullcodeline": "auto& resources = subgraph->resources();"
    },
    {
        "line": 11,
        "fullcodeline": "auto* lookup = resource::GetHashtableResource(&resources, resource_id);"
    },
    {
        "line": 12,
        "fullcodeline": "TF_LITE_ENSURE(context, lookup != nullptr);"
    },
    {
        "line": 13,
        "fullcodeline": "TF_LITE_ENSURE_STATUS("
    },
    {
        "line": 17,
        "fullcodeline": "auto result = lookup->Import(context, key_tensor, value_tensor);"
    },
    {
        "line": 3,
        "fullcodeline": "GetInput(context, node, kInputResourceIdTensor);"
    },
    {
        "line": 14,
        "fullcodeline": "lookup->CheckKeyAndValueTypes(context, key_tensor, value_tensor));"
    }
]