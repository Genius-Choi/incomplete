[
    {
        "line": 2,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, PrepareSimple(context, node));"
    },
    {
        "line": 3,
        "fullcodeline": "OpData* data = reinterpret_cast<OpData*>(node->user_data);"
    },
    {
        "line": 6,
        "fullcodeline": "OpContext op_context(context, node);"
    },
    {
        "line": 18,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 24,
        "fullcodeline": "temp_sum->allocation_type = kTfLiteArenaRw;"
    },
    {
        "line": 7,
        "fullcodeline": "if (op_context.input->type == kTfLiteInt8 ||"
    },
    {
        "line": 19,
        "fullcodeline": "GetTemporarySafe(context, node, /*index=*/2, &temp_sum));"
    },
    {
        "line": 20,
        "fullcodeline": "if (!IsConstantTensor(op_context.axis)) {"
    },
    {
        "line": 25,
        "fullcodeline": "return ResizeTempSum(context, &op_context, temp_sum);"
    },
    {
        "line": 9,
        "fullcodeline": "op_context.input->type == kTfLiteInt16) {"
    },
    {
        "line": 10,
        "fullcodeline": "const double real_multiplier ="
    },
    {
        "line": 14,
        "fullcodeline": "QuantizeMultiplier(real_multiplier, &data->multiplier, &exponent);"
    },
    {
        "line": 15,
        "fullcodeline": "data->shift = exponent;"
    },
    {
        "line": 21,
        "fullcodeline": "SetTensorToDynamic(temp_sum);"
    },
    {
        "line": 8,
        "fullcodeline": "op_context.input->type == kTfLiteUInt8 ||"
    }
]