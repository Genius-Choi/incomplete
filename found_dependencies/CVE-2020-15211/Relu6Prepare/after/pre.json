[
    {
        "line": 2,
        "fullcodeline": "TFLITE_DCHECK(node->user_data != nullptr);"
    },
    {
        "line": 3,
        "fullcodeline": "Relu6OpData* data = static_cast<Relu6OpData*>(node->user_data);"
    },
    {
        "line": 5,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, kInputTensor);"
    },
    {
        "line": 6,
        "fullcodeline": "TF_LITE_ENSURE(context, input != nullptr);"
    },
    {
        "line": 8,
        "fullcodeline": "if (input->type == kTfLiteInt8) {"
    },
    {
        "line": 9,
        "fullcodeline": "data->six_int8 = FloatToAsymmetricQuantizedInt8(6.0f, input->params.scale,"
    },
    {
        "line": 11,
        "fullcodeline": "data->zero_int8 = input->params.zero_point;"
    },
    {
        "line": 12,
        "fullcodeline": "} else if (input->type == kTfLiteUInt8) {"
    },
    {
        "line": 13,
        "fullcodeline": "data->six_uint8 = FloatToAsymmetricQuantizedUInt8(6.0f, input->params.scale,"
    },
    {
        "line": 15,
        "fullcodeline": "data->zero_uint8 = input->params.zero_point;"
    }
]