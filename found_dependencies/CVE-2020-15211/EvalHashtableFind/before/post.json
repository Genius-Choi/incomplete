[
    {
        "line": 2,
        "fullcodeline": "const TfLiteTensor* input_resource_id_tensor ="
    },
    {
        "line": 6,
        "fullcodeline": "const TfLiteTensor* key_tensor = GetInput(context, node, kKeyTensor);"
    },
    {
        "line": 7,
        "fullcodeline": "const TfLiteTensor* default_value_tensor ="
    },
    {
        "line": 9,
        "fullcodeline": "TfLiteTensor* output_tensor = GetOutput(context, node, 0);"
    },
    {
        "line": 11,
        "fullcodeline": "Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"
    },
    {
        "line": 12,
        "fullcodeline": "auto& resources = subgraph->resources();"
    },
    {
        "line": 13,
        "fullcodeline": "auto* lookup = resource::GetHashtableResource(&resources, resource_id);"
    },
    {
        "line": 14,
        "fullcodeline": "TF_LITE_ENSURE(context, lookup != nullptr);"
    },
    {
        "line": 15,
        "fullcodeline": "TF_LITE_ENSURE_STATUS("
    },
    {
        "line": 17,
        "fullcodeline": "auto result ="
    },
    {
        "line": 3,
        "fullcodeline": "GetInput(context, node, kInputResourceIdTensor);"
    },
    {
        "line": 8,
        "fullcodeline": "GetInput(context, node, kDefaultValueTensor);"
    },
    {
        "line": 16,
        "fullcodeline": "lookup->CheckKeyAndValueTypes(context, key_tensor, output_tensor));"
    },
    {
        "line": 18,
        "fullcodeline": "lookup->Lookup(context, key_tensor, output_tensor, default_value_tensor);"
    }
]