[
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 6,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 9,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 11,
        "fullcodeline": "bool requires_broadcast = !HaveSameShapes(input1, input2);"
    },
    {
        "line": 4,
        "fullcodeline": "GetInputSafe(context, node, kInputTensor1, &input1));"
    },
    {
        "line": 7,
        "fullcodeline": "GetInputSafe(context, node, kInputTensor2, &input2));"
    },
    {
        "line": 10,
        "fullcodeline": "GetOutputSafe(context, node, kOutputTensor, &output));"
    },
    {
        "line": 14,
        "fullcodeline": "Comparison<float, reference_ops::GreaterEqualFn>(input1, input2, output,"
    },
    {
        "line": 18,
        "fullcodeline": "Comparison<int32_t, reference_ops::GreaterEqualFn>(input1, input2, output,"
    },
    {
        "line": 22,
        "fullcodeline": "Comparison<int64_t, reference_ops::GreaterEqualFn>(input1, input2, output,"
    },
    {
        "line": 26,
        "fullcodeline": "ComparisonQuantized<uint8_t, reference_ops::GreaterEqualFn>("
    },
    {
        "line": 30,
        "fullcodeline": "ComparisonQuantized<int8_t, reference_ops::GreaterEqualFn>("
    },
    {
        "line": 34,
        "fullcodeline": "context->ReportError(context,"
    }
]