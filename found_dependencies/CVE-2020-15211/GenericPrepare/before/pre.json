[
    {
        "line": 2,
        "fullcodeline": "TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"
    },
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"
    },
    {
        "line": 4,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, 0);"
    },
    {
        "line": 5,
        "fullcodeline": "TfLiteTensor* output = GetOutput(context, node, 0);"
    },
    {
        "line": 6,
        "fullcodeline": "TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!IsSupportedType(input->type)) {"
    },
    {
        "line": 8,
        "fullcodeline": "TF_LITE_KERNEL_LOG(context, \"Input data type %s (%d) is not supported.\","
    },
    {
        "line": 9,
        "fullcodeline": "TfLiteTypeGetName(input->type), input->type);"
    }
]