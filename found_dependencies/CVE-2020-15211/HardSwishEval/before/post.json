[
    {
        "line": 2,
        "fullcodeline": "HardSwishData* data = static_cast<HardSwishData*>(node->user_data);"
    },
    {
        "line": 4,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, 0);"
    },
    {
        "line": 5,
        "fullcodeline": "TfLiteTensor* output = GetOutput(context, node, 0);"
    },
    {
        "line": 46,
        "fullcodeline": "TF_LITE_KERNEL_LOG("
    },
    {
        "line": 20,
        "fullcodeline": "HardSwishParams& params = data->params;"
    },
    {
        "line": 33,
        "fullcodeline": "HardSwishParams& params = data->params;"
    },
    {
        "line": 49,
        "fullcodeline": "TfLiteTypeGetName(input->type));"
    },
    {
        "line": 8,
        "fullcodeline": "if (kernel_type == kReference) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (kernel_type == kReference) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (kernel_type == kReference) {"
    },
    {
        "line": 9,
        "fullcodeline": "reference_ops::HardSwish("
    },
    {
        "line": 22,
        "fullcodeline": "reference_ops::HardSwish("
    },
    {
        "line": 35,
        "fullcodeline": "reference_ops::HardSwish("
    },
    {
        "line": 10,
        "fullcodeline": "GetTensorShape(input), GetTensorData<float>(input),"
    },
    {
        "line": 11,
        "fullcodeline": "GetTensorShape(output), GetTensorData<float>(output));"
    },
    {
        "line": 13,
        "fullcodeline": "optimized_ops::HardSwish("
    },
    {
        "line": 23,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<uint8_t>(input),"
    },
    {
        "line": 24,
        "fullcodeline": "GetTensorShape(output), GetTensorData<uint8_t>(output));"
    },
    {
        "line": 26,
        "fullcodeline": "optimized_ops::HardSwish("
    },
    {
        "line": 36,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<int8_t>(input),"
    },
    {
        "line": 37,
        "fullcodeline": "GetTensorShape(output), GetTensorData<int8_t>(output));"
    },
    {
        "line": 39,
        "fullcodeline": "optimized_ops::HardSwish("
    },
    {
        "line": 14,
        "fullcodeline": "GetTensorShape(input), GetTensorData<float>(input),"
    },
    {
        "line": 15,
        "fullcodeline": "GetTensorShape(output), GetTensorData<float>(output));"
    },
    {
        "line": 27,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<uint8_t>(input),"
    },
    {
        "line": 28,
        "fullcodeline": "GetTensorShape(output), GetTensorData<uint8_t>(output));"
    },
    {
        "line": 40,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<int8_t>(input),"
    },
    {
        "line": 41,
        "fullcodeline": "GetTensorShape(output), GetTensorData<int8_t>(output));"
    }
]