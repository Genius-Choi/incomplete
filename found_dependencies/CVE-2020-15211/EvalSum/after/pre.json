[
    {
        "line": 2,
        "fullcodeline": "OpContext op_context(context, node);"
    },
    {
        "line": 3,
        "fullcodeline": "ruy::profiler::ScopeLabel label(\"Sum\");"
    },
    {
        "line": 4,
        "fullcodeline": "const auto& input = op_context.input;"
    },
    {
        "line": 5,
        "fullcodeline": "const auto& output = op_context.output;"
    },
    {
        "line": 6,
        "fullcodeline": "const bool same_scale ="
    },
    {
        "line": 9,
        "fullcodeline": "const bool eight_bit_quantized ="
    },
    {
        "line": 11,
        "fullcodeline": "const bool need_rescale = (eight_bit_quantized && !same_scale);"
    },
    {
        "line": 7,
        "fullcodeline": "(input->params.scale == output->params.scale &&"
    },
    {
        "line": 10,
        "fullcodeline": "input->type == kTfLiteUInt8 || input->type == kTfLiteInt8;"
    },
    {
        "line": 8,
        "fullcodeline": "input->params.zero_point == output->params.zero_point);"
    },
    {
        "line": 14,
        "fullcodeline": "int num_axis = static_cast<int>(NumElements(op_context.axis));"
    },
    {
        "line": 16,
        "fullcodeline": "TF_LITE_ENSURE_OK("
    },
    {
        "line": 19,
        "fullcodeline": "TF_LITE_ENSURE_OK("
    },
    {
        "line": 22,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 17,
        "fullcodeline": "context, GetTemporarySafe(context, node, /*index=*/0, &temp_index));"
    },
    {
        "line": 20,
        "fullcodeline": "context, GetTemporarySafe(context, node, /*index=*/1, &resolved_axis));"
    },
    {
        "line": 23,
        "fullcodeline": "GetTemporarySafe(context, node, /*index=*/2, &temp_sum));"
    },
    {
        "line": 25,
        "fullcodeline": "if (IsDynamicTensor(op_context.output)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (input->type == kTfLiteUInt8) {"
    },
    {
        "line": 26,
        "fullcodeline": "TF_LITE_ENSURE_OK(context,"
    },
    {
        "line": 28,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, ResizeOutputTensor(context, &op_context));"
    },
    {
        "line": 29,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, ResizeTempSum(context, &op_context, temp_sum));"
    },
    {
        "line": 32,
        "fullcodeline": "TF_LITE_ENSURE("
    },
    {
        "line": 66,
        "fullcodeline": "return EvalGeneric<kReference, kSum>(context, node);"
    },
    {
        "line": 27,
        "fullcodeline": "ResizeTempAxis(context, &op_context, resolved_axis));"
    },
    {
        "line": 34,
        "fullcodeline": "reference_ops::QuantizedMeanOrSum<>("
    },
    {
        "line": 51,
        "fullcodeline": "reference_ops::QuantizedMeanOrSum<>("
    },
    {
        "line": 35,
        "fullcodeline": "GetTensorData<uint8_t>(op_context.input),"
    },
    {
        "line": 39,
        "fullcodeline": "GetTensorData<uint8_t>(op_context.output),"
    },
    {
        "line": 43,
        "fullcodeline": "GetTensorData<int>(op_context.axis), num_axis,"
    },
    {
        "line": 44,
        "fullcodeline": "op_context.params->keep_dims, GetTensorData<int>(temp_index),"
    },
    {
        "line": 45,
        "fullcodeline": "GetTensorData<int>(resolved_axis), GetTensorData<int32>(temp_sum),"
    },
    {
        "line": 52,
        "fullcodeline": "GetTensorData<int8_t>(op_context.input),"
    },
    {
        "line": 56,
        "fullcodeline": "GetTensorData<int8_t>(op_context.output),"
    },
    {
        "line": 60,
        "fullcodeline": "GetTensorData<int>(op_context.axis), num_axis,"
    },
    {
        "line": 61,
        "fullcodeline": "op_context.params->keep_dims, GetTensorData<int>(temp_index),"
    },
    {
        "line": 62,
        "fullcodeline": "GetTensorData<int>(resolved_axis), GetTensorData<int32>(temp_sum),"
    }
]