[
    {
        "line": 2,
        "fullcodeline": "OpData* data = reinterpret_cast<OpData*>(node->user_data);"
    },
    {
        "line": 4,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, 0);"
    },
    {
        "line": 5,
        "fullcodeline": "TfLiteTensor* output = GetOutput(context, node, 0);"
    },
    {
        "line": 66,
        "fullcodeline": "TF_LITE_KERNEL_LOG(context,"
    },
    {
        "line": 69,
        "fullcodeline": "TfLiteTypeGetName(input->type));"
    },
    {
        "line": 21,
        "fullcodeline": "if (kernel_type == kReference || (data->input_multiplier > 0)) {"
    },
    {
        "line": 22,
        "fullcodeline": "const int size ="
    },
    {
        "line": 38,
        "fullcodeline": "params.input_zero_point = input->params.zero_point;"
    },
    {
        "line": 39,
        "fullcodeline": "params.input_range_radius = data->input_range_radius;"
    },
    {
        "line": 40,
        "fullcodeline": "params.input_multiplier = data->input_multiplier;"
    },
    {
        "line": 41,
        "fullcodeline": "params.input_left_shift = data->input_left_shift;"
    },
    {
        "line": 53,
        "fullcodeline": "params.input_zero_point = input->params.zero_point;"
    },
    {
        "line": 54,
        "fullcodeline": "params.input_range_radius = data->input_range_radius;"
    },
    {
        "line": 55,
        "fullcodeline": "params.input_multiplier = data->input_multiplier;"
    },
    {
        "line": 56,
        "fullcodeline": "params.input_left_shift = data->input_left_shift;"
    },
    {
        "line": 10,
        "fullcodeline": "GetTensorShape(input), GetTensorData<float>(input),"
    },
    {
        "line": 11,
        "fullcodeline": "GetTensorShape(output), GetTensorData<float>(output));"
    },
    {
        "line": 23,
        "fullcodeline": "MatchingFlatSize(GetTensorShape(input), GetTensorShape(output));"
    },
    {
        "line": 26,
        "fullcodeline": "GetTensorData<int16_t>(input),"
    },
    {
        "line": 27,
        "fullcodeline": "GetTensorData<int16_t>(output));"
    },
    {
        "line": 43,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<uint8_t>(input),"
    },
    {
        "line": 44,
        "fullcodeline": "GetTensorShape(output), GetTensorData<uint8_t>(output));"
    },
    {
        "line": 58,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<int8_t>(input),"
    },
    {
        "line": 59,
        "fullcodeline": "GetTensorShape(output), GetTensorData<int8_t>(output));"
    },
    {
        "line": 14,
        "fullcodeline": "GetTensorShape(input), GetTensorData<float>(input),"
    },
    {
        "line": 15,
        "fullcodeline": "GetTensorShape(output), GetTensorData<float>(output));"
    },
    {
        "line": 30,
        "fullcodeline": "params, GetTensorShape(input), GetTensorData<int16_t>(input),"
    },
    {
        "line": 31,
        "fullcodeline": "GetTensorShape(output), GetTensorData<int16_t>(output));"
    }
]