[
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"
    },
    {
        "line": 5,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"
    },
    {
        "line": 6,
        "fullcodeline": "ReluOpData* data = reinterpret_cast<ReluOpData*>(node->user_data);"
    },
    {
        "line": 9,
        "fullcodeline": "size_t elements = input->bytes / sizeof(float);"
    },
    {
        "line": 10,
        "fullcodeline": "const float* in = GetTensorData<float>(input);"
    },
    {
        "line": 11,
        "fullcodeline": "const float* in_end = in + elements;"
    },
    {
        "line": 12,
        "fullcodeline": "float* out = GetTensorData<float>(output);"
    },
    {
        "line": 17,
        "fullcodeline": "QuantizedReluX<uint8_t>(0.0f, 6.0f, input, output, data);"
    },
    {
        "line": 27,
        "fullcodeline": "TfLiteTypeGetName(input->type));"
    },
    {
        "line": 13,
        "fullcodeline": "for (; in < in_end; in++, out++) *out = std::min(std::max(0.f, *in), 6.f);"
    },
    {
        "line": 20,
        "fullcodeline": "QuantizedReluX<int8_t>(0.0f, 6.0f, input, output, data);"
    }
]