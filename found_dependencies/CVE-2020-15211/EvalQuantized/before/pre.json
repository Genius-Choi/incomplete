[
    {
        "line": 6,
        "fullcodeline": "if (lhs->type == kTfLiteFloat32) {"
    },
    {
        "line": 7,
        "fullcodeline": "TfLiteTensor* input_quantized = GetTemporary(context, node, /*index=*/2);"
    },
    {
        "line": 8,
        "fullcodeline": "TfLiteTensor* scaling_factors = GetTemporary(context, node, /*index=*/3);"
    },
    {
        "line": 9,
        "fullcodeline": "TfLiteTensor* accum_scratch = GetTemporary(context, node, /*index=*/4);"
    },
    {
        "line": 10,
        "fullcodeline": "TfLiteTensor* input_offsets = GetTemporary(context, node, /*index=*/5);"
    },
    {
        "line": 11,
        "fullcodeline": "TfLiteTensor* row_sums = GetTemporary(context, node, /*index=*/6);"
    },
    {
        "line": 12,
        "fullcodeline": "return EvalHybrid<kernel_type>("
    },
    {
        "line": 15,
        "fullcodeline": "} else if (lhs->type == kTfLiteInt8) {"
    },
    {
        "line": 13,
        "fullcodeline": "context, node, data, lhs_shape, lhs, rhs_shape, rhs, input_quantized,"
    },
    {
        "line": 16,
        "fullcodeline": "return EvalInt8<kernel_type>(context, data, lhs_shape, lhs, rhs_shape, rhs,"
    },
    {
        "line": 17,
        "fullcodeline": "GetTensorShape(output), output);"
    }
]