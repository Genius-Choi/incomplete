[
    {
        "line": 3,
        "fullcodeline": "TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,"
    },
    {
        "line": 5,
        "fullcodeline": "int resource_id = input_resource_id_tensor->data.i32[0];"
    },
    {
        "line": 8,
        "fullcodeline": "TF_LITE_ENSURE_OK("
    },
    {
        "line": 10,
        "fullcodeline": "auto* output_data = GetTensorData<std::int64_t>(output_tensor);"
    },
    {
        "line": 12,
        "fullcodeline": "Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"
    },
    {
        "line": 13,
        "fullcodeline": "auto& resources = subgraph->resources();"
    },
    {
        "line": 14,
        "fullcodeline": "auto* lookup = resource::GetHashtableResource(&resources, resource_id);"
    },
    {
        "line": 15,
        "fullcodeline": "TF_LITE_ENSURE(context, lookup != nullptr);"
    },
    {
        "line": 17,
        "fullcodeline": "output_data[0] = lookup->Size();"
    },
    {
        "line": 9,
        "fullcodeline": "context, GetOutputSafe(context, node, kOutputTensor, &output_tensor));"
    }
]