[
    {
        "line": 2,
        "fullcodeline": "const TfLiteTensor* input_resource_id_tensor ="
    },
    {
        "line": 6,
        "fullcodeline": "TfLiteTensor* output_tensor = GetOutput(context, node, kOutputTensor);"
    },
    {
        "line": 7,
        "fullcodeline": "auto* output_data = GetTensorData<std::int64_t>(output_tensor);"
    },
    {
        "line": 9,
        "fullcodeline": "Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"
    },
    {
        "line": 10,
        "fullcodeline": "auto& resources = subgraph->resources();"
    },
    {
        "line": 11,
        "fullcodeline": "auto* lookup = resource::GetHashtableResource(&resources, resource_id);"
    },
    {
        "line": 12,
        "fullcodeline": "TF_LITE_ENSURE(context, lookup != nullptr);"
    },
    {
        "line": 14,
        "fullcodeline": "output_data[0] = lookup->Size();"
    },
    {
        "line": 3,
        "fullcodeline": "GetInput(context, node, kInputResourceIdTensor);"
    }
]