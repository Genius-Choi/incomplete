[
    {
        "line": 5,
        "fullcodeline": "const auto* fc_params ="
    },
    {
        "line": 7,
        "fullcodeline": "const int kInput = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "const int kWeights = 1;"
    },
    {
        "line": 9,
        "fullcodeline": "const int kBias = 2;"
    },
    {
        "line": 14,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, kInput);"
    },
    {
        "line": 15,
        "fullcodeline": "const TfLiteTensor* weights = GetInput(context, node, kWeights);"
    },
    {
        "line": 36,
        "fullcodeline": "TfLiteFusedActivation activation = fc_params->activation;"
    },
    {
        "line": 4,
        "fullcodeline": "if (node->builtin_data == nullptr) return false;"
    },
    {
        "line": 6,
        "fullcodeline": "reinterpret_cast<const TfLiteFullyConnectedParams*>(node->builtin_data);"
    },
    {
        "line": 11,
        "fullcodeline": "if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (!IsFloatType(input->type)) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (!IsFloatType(weights->type) || !IsConstantTensor(weights)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (input->dims->data[input->dims->size - 1] != NumElements(input)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (node->inputs->size > 2) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (activation == kTfLiteActSignBit) {"
    },
    {
        "line": 30,
        "fullcodeline": "const TfLiteTensor* bias = GetInput(context, node, kBias);"
    },
    {
        "line": 31,
        "fullcodeline": "if (!IsFloatType(bias->type) || !IsConstantTensor(bias)) {"
    }
]