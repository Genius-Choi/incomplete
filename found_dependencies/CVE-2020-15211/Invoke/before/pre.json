[
    {
        "line": 3,
        "fullcodeline": "OpData* data = reinterpret_cast<OpData*>(node->user_data);"
    },
    {
        "line": 4,
        "fullcodeline": "*data->invoke_count += 1;"
    },
    {
        "line": 6,
        "fullcodeline": "const TfLiteTensor* input = GetInput(context, node, kInputTensor);"
    },
    {
        "line": 7,
        "fullcodeline": "const uint8_t* input_data = GetTensorData<uint8_t>(input);"
    },
    {
        "line": 8,
        "fullcodeline": "int size = NumElements(input->dims);"
    },
    {
        "line": 10,
        "fullcodeline": "uint8_t* sorting_buffer = reinterpret_cast<uint8_t*>("
    },
    {
        "line": 25,
        "fullcodeline": "TfLiteTensor* median = GetOutput(context, node, kMedianTensor);"
    },
    {
        "line": 26,
        "fullcodeline": "uint8_t* median_data = GetTensorData<uint8_t>(median);"
    },
    {
        "line": 27,
        "fullcodeline": "TfLiteTensor* invoke_count = GetOutput(context, node, kInvokeCount);"
    },
    {
        "line": 28,
        "fullcodeline": "int32_t* invoke_count_data = GetTensorData<int32_t>(invoke_count);"
    },
    {
        "line": 30,
        "fullcodeline": "median_data[0] = sorting_buffer[size / 2];"
    },
    {
        "line": 31,
        "fullcodeline": "invoke_count_data[0] = *data->invoke_count;"
    },
    {
        "line": 14,
        "fullcodeline": "for (int i = 0; i < size; i++) {"
    },
    {
        "line": 19,
        "fullcodeline": "for (int i = 1; i < size; i++) {"
    },
    {
        "line": 11,
        "fullcodeline": "context->GetScratchBuffer(context, data->sorting_buffer));"
    },
    {
        "line": 15,
        "fullcodeline": "sorting_buffer[i] = input_data[i];"
    },
    {
        "line": 20,
        "fullcodeline": "for (int j = i; j > 0 && sorting_buffer[j] < sorting_buffer[j - 1]; j--) {"
    },
    {
        "line": 21,
        "fullcodeline": "std::swap(sorting_buffer[j], sorting_buffer[j - 1]);"
    }
]