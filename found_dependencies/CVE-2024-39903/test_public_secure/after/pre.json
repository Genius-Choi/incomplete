[
    {
        "line": 2,
        "fullcodeline": "public_url = solara_server.base_url + \"/static/public\""
    },
    {
        "line": 4,
        "fullcodeline": "with solara_app(str(HERE / \"apps/secure/app.py\")):"
    },
    {
        "line": 5,
        "fullcodeline": "apps = list(solara.server.app.apps.values())"
    },
    {
        "line": 6,
        "fullcodeline": "assert len(apps) == 1"
    },
    {
        "line": 7,
        "fullcodeline": "app = apps[0]"
    },
    {
        "line": 8,
        "fullcodeline": "public_directory = app.directory.parent / \"public\""
    },
    {
        "line": 9,
        "fullcodeline": "url = public_url + \"/test.txt\""
    },
    {
        "line": 10,
        "fullcodeline": "response = requests.get(url)"
    },
    {
        "line": 11,
        "fullcodeline": "assert response.status_code == 200"
    },
    {
        "line": 12,
        "fullcodeline": "test_file = public_directory.parent / \"not-allowed\""
    },
    {
        "line": 13,
        "fullcodeline": "assert test_file.exists()"
    },
    {
        "line": 14,
        "fullcodeline": "url = public_url + \"/..%2fnot-allowed\""
    },
    {
        "line": 15,
        "fullcodeline": "response = requests.get(url)"
    },
    {
        "line": 18,
        "fullcodeline": "url = public_url + \"/foo/..%2f..%2fnot-allowed\""
    },
    {
        "line": 19,
        "fullcodeline": "response = requests.get(url)"
    },
    {
        "line": 20,
        "fullcodeline": "assert response.status_code == 404"
    },
    {
        "line": 16,
        "fullcodeline": "assert response.status_code == 404"
    }
]