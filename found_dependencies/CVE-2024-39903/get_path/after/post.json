[
    {
        "line": 2,
        "fullcodeline": "parts = path.replace(\"\\\\\", \"/\").split(\"/\")"
    },
    {
        "line": 3,
        "fullcodeline": "store_path = path if len(parts) != 1 else pathlib.Path(path) / \"__main.js\""
    },
    {
        "line": 4,
        "fullcodeline": "cache_path = base_cache_dir / store_path"
    },
    {
        "line": 17,
        "fullcodeline": "url = get_cdn_url(path)"
    },
    {
        "line": 18,
        "fullcodeline": "response = requests.get(url)"
    },
    {
        "line": 6,
        "fullcodeline": "if not path_is_child_of(cache_path, base_cache_dir):"
    },
    {
        "line": 9,
        "fullcodeline": "if cache_path.exists():"
    },
    {
        "line": 7,
        "fullcodeline": "raise PermissionError(\"Trying to read from outside of cache directory\")"
    },
    {
        "line": 20,
        "fullcodeline": "put_in_cache(base_cache_dir, store_path, response.content)"
    },
    {
        "line": 21,
        "fullcodeline": "assert cache_path.exists(), f\"Could not write to {cache_path}\""
    },
    {
        "line": 24,
        "fullcodeline": "logger.warning(\"Could not load URL: %r\", url)"
    },
    {
        "line": 25,
        "fullcodeline": "raise Exception(f\"Could not load URL: {url}\")"
    },
    {
        "line": 13,
        "fullcodeline": "if cache_path.is_dir():"
    },
    {
        "line": 14,
        "fullcodeline": "shutil.rmtree(cache_path)"
    }
]