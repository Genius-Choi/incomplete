[
    {
        "line": 14,
        "fullcodeline": "TF_LITE_ENSURE(context, axis_value >= 0);"
    },
    {
        "line": 15,
        "fullcodeline": "TF_LITE_ENSURE(context, axis_value < NumDimensions(input));"
    },
    {
        "line": 18,
        "fullcodeline": "TfLiteIntArray* output_dims = TfLiteIntArrayCreate(NumDimensions(input) - 1);"
    },
    {
        "line": 19,
        "fullcodeline": "int j = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "if (axis->type == kTfLiteInt64) {"
    },
    {
        "line": 10,
        "fullcodeline": "if (axis_value < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "for (int i = 0; i < NumDimensions(input); ++i) {"
    },
    {
        "line": 26,
        "fullcodeline": "return context->ResizeTensor(context, output, output_dims);"
    },
    {
        "line": 6,
        "fullcodeline": "axis_value = static_cast<int>(*GetTensorData<int64_t>(axis));"
    },
    {
        "line": 11,
        "fullcodeline": "axis_value += NumDimensions(input);"
    },
    {
        "line": 21,
        "fullcodeline": "if (i != axis_value) {"
    },
    {
        "line": 22,
        "fullcodeline": "output_dims->data[j] = SizeOfDimension(input, i);"
    },
    {
        "line": 23,
        "fullcodeline": "++j;"
    },
    {
        "line": 8,
        "fullcodeline": "axis_value = *GetTensorData<int>(axis);"
    }
]