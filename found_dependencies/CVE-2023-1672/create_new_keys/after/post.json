[
    {
        "line": 3,
        "fullcodeline": "const char* alg[] = {\"ES512\", \"ECMR\", NULL};"
    },
    {
        "line": 4,
        "fullcodeline": "char path[PATH_MAX];"
    },
    {
        "line": 7,
        "fullcodeline": "umask(0337);"
    },
    {
        "line": 8,
        "fullcodeline": "for (int i = 0; alg[i] != NULL; i++) {"
    },
    {
        "line": 9,
        "fullcodeline": "json_auto_t* jwk = jwk_generate(alg[i]);"
    },
    {
        "line": 13,
        "fullcodeline": "__attribute__ ((__cleanup__(cleanup_str))) char* thp = jwk_thumbprint(jwk, DEFAULT_THP_HASH);"
    },
    {
        "line": 21,
        "fullcodeline": "path[sizeof(path) - 1] = '\\0';"
    },
    {
        "line": 10,
        "fullcodeline": "if (!jwk) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (!thp) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (snprintf(path, PATH_MAX, \"%s/%s.jwk\", jwkdir, thp) < 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (json_dump_file(jwk, path, 0) == -1) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (chmod(path, S_IRUSR | S_IRGRP) == -1) {"
    },
    {
        "line": 18,
        "fullcodeline": "fprintf(stderr, \"Unable to prepare variable with file full path (%s)\\n\", thp);"
    },
    {
        "line": 23,
        "fullcodeline": "fprintf(stderr, \"Error saving JWK to file (%s)\\n\", path);"
    },
    {
        "line": 29,
        "fullcodeline": "fprintf(stderr, \"Unable to set permissions for JWK file (%s)\\n\", path);"
    }
]