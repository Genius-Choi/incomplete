[
    {
        "line": 3,
        "fullcodeline": "struct peer *const peer = args->peer;"
    },
    {
        "line": 4,
        "fullcodeline": "struct attr *const attr = args->attr;"
    },
    {
        "line": 10,
        "fullcodeline": "size_t psid_parsed_length = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "SET_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_PREFIX_SID));"
    },
    {
        "line": 12,
        "fullcodeline": "while (STREAM_READABLE(peer->curr) > 0"
    },
    {
        "line": 13,
        "fullcodeline": "&& psid_parsed_length < args->length) {"
    },
    {
        "line": 25,
        "fullcodeline": "type = stream_getc(peer->curr);"
    },
    {
        "line": 26,
        "fullcodeline": "length = stream_getw(peer->curr);"
    },
    {
        "line": 38,
        "fullcodeline": "ret = bgp_attr_psid_sub(type, length, args);"
    },
    {
        "line": 43,
        "fullcodeline": "psid_parsed_length += length + headersz;"
    },
    {
        "line": 15,
        "fullcodeline": "if (STREAM_READABLE(peer->curr) < headersz) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (STREAM_READABLE(peer->curr) < length) {"
    },
    {
        "line": 40,
        "fullcodeline": "if (ret != BGP_ATTR_PARSE_PROCEED)"
    },
    {
        "line": 45,
        "fullcodeline": "if (psid_parsed_length > args->length) {"
    },
    {
        "line": 16,
        "fullcodeline": "flog_err("
    },
    {
        "line": 29,
        "fullcodeline": "flog_err("
    },
    {
        "line": 46,
        "fullcodeline": "flog_err("
    },
    {
        "line": 19,
        "fullcodeline": "headersz, STREAM_READABLE(peer->curr));"
    },
    {
        "line": 20,
        "fullcodeline": "return bgp_attr_malformed("
    },
    {
        "line": 32,
        "fullcodeline": "length, STREAM_READABLE(peer->curr));"
    },
    {
        "line": 33,
        "fullcodeline": "return bgp_attr_malformed(args,"
    },
    {
        "line": 49,
        "fullcodeline": "length + headersz, psid_parsed_length - (length + headersz));"
    },
    {
        "line": 50,
        "fullcodeline": "return bgp_attr_malformed("
    }
]