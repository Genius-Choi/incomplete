[
    {
        "line": 4,
        "fullcodeline": "struct peer *const peer = args->peer;"
    },
    {
        "line": 5,
        "fullcodeline": "struct attr *const attr = args->attr;"
    },
    {
        "line": 6,
        "fullcodeline": "const uint8_t flags = args->flags;"
    },
    {
        "line": 11,
        "fullcodeline": "uint8_t *notify_datap = (length > 0 ? args->startp : NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "stream_set_getp(BGP_INPUT(peer),"
    },
    {
        "line": 13,
        "fullcodeline": "if (bgp_debug_update(peer, NULL, NULL, 1)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (peer->sort != BGP_PEER_EBGP) {"
    },
    {
        "line": 33,
        "fullcodeline": "(args->startp - STREAM_DATA(BGP_INPUT(peer)))"
    },
    {
        "line": 78,
        "fullcodeline": "if (CHECK_FLAG(flags, BGP_ATTR_FLAG_TRANS)"
    },
    {
        "line": 14,
        "fullcodeline": "char attr_str[BUFSIZ] = {0};"
    },
    {
        "line": 16,
        "fullcodeline": "bgp_dump_attr(attr, attr_str, sizeof(attr_str));"
    },
    {
        "line": 18,
        "fullcodeline": "zlog_debug(\"%s: attributes: %s\", __func__, attr_str);"
    },
    {
        "line": 23,
        "fullcodeline": "bgp_notify_send_with_data(peer->connection,"
    },
    {
        "line": 68,
        "fullcodeline": "bgp_notify_send_with_data(peer->connection,"
    },
    {
        "line": 80,
        "fullcodeline": "&& CHECK_FLAG(flags, BGP_ATTR_FLAG_PARTIAL))"
    },
    {
        "line": 79,
        "fullcodeline": "&& CHECK_FLAG(flags, BGP_ATTR_FLAG_OPTIONAL)"
    }
]