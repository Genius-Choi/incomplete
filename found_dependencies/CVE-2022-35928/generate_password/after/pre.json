[
    {
        "line": 3,
        "fullcodeline": "const char pwchars[] ="
    },
    {
        "line": 13,
        "fullcodeline": "unsigned char pwtemp[MAX_PASSWD_BUF];"
    },
    {
        "line": 47,
        "fullcodeline": "passlen = passwd_to_utf16(pwtemp, length, MAX_PASSWD_LEN, password);"
    },
    {
        "line": 4,
        "fullcodeline": "{"
    },
    {
        "line": 18,
        "fullcodeline": "if ((length <= 0) || (length > MAX_PASSWD_LEN))"
    },
    {
        "line": 25,
        "fullcodeline": "if ((randfp = fopen(\"/dev/urandom\", \"r\")) == NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if ((n = fread((char*)pwtemp, 1, length, randfp)) != length)"
    },
    {
        "line": 41,
        "fullcodeline": "for (i = 0, p = pwtemp; i < length; i++, p++)"
    },
    {
        "line": 20,
        "fullcodeline": "fprintf(stderr, \"Invalid password length specified.\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "*p = pwchars[((int)(*p)) % 64];"
    },
    {
        "line": 21,
        "fullcodeline": "return -1;"
    },
    {
        "line": 28,
        "fullcodeline": "return  -1;"
    },
    {
        "line": 36,
        "fullcodeline": "return  -1;"
    }
]