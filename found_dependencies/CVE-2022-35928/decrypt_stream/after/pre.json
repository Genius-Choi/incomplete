[
    {
        "line": 7,
        "fullcodeline": "unsigned char IV[16];"
    },
    {
        "line": 8,
        "fullcodeline": "unsigned char iv_key[48];"
    },
    {
        "line": 11,
        "fullcodeline": "unsigned char buffer[64], buffer2[32];"
    },
    {
        "line": 13,
        "fullcodeline": "unsigned char ipad[64], opad[64];"
    },
    {
        "line": 14,
        "fullcodeline": "int reached_eof = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "memset(digest, 0, 32);"
    },
    {
        "line": 112,
        "fullcodeline": "memcpy(digest, IV, 16);"
    },
    {
        "line": 122,
        "fullcodeline": "aes_set_key(&aes_ctx, digest, 256);"
    },
    {
        "line": 128,
        "fullcodeline": "memset(ipad, 0x36, 64);"
    },
    {
        "line": 129,
        "fullcodeline": "memset(opad, 0x5C, 64);"
    },
    {
        "line": 137,
        "fullcodeline": "sha256_starts(&sha_ctx);"
    },
    {
        "line": 138,
        "fullcodeline": "sha256_update(&sha_ctx, ipad, 64);"
    },
    {
        "line": 292,
        "fullcodeline": "head = buffer + 48;"
    },
    {
        "line": 293,
        "fullcodeline": "tail = buffer;"
    },
    {
        "line": 398,
        "fullcodeline": "sha256_finish(&sha_ctx, digest);"
    },
    {
        "line": 399,
        "fullcodeline": "sha256_starts(&sha_ctx);"
    },
    {
        "line": 400,
        "fullcodeline": "sha256_update(&sha_ctx, opad, 64);"
    },
    {
        "line": 401,
        "fullcodeline": "sha256_update(&sha_ctx, digest, 32);"
    },
    {
        "line": 402,
        "fullcodeline": "sha256_finish(&sha_ctx, digest);"
    },
    {
        "line": 17,
        "fullcodeline": "if ((bytes_read = fread(&aeshdr, 1, sizeof(aeshdr), infp)) !="
    },
    {
        "line": 44,
        "fullcodeline": "if (aeshdr.version == 0)"
    },
    {
        "line": 60,
        "fullcodeline": "if (aeshdr.version >= 0x02)"
    },
    {
        "line": 113,
        "fullcodeline": "for (i = 0; i < 8192; i++)"
    },
    {
        "line": 131,
        "fullcodeline": "for (i = 0; i < 32; i++)"
    },
    {
        "line": 143,
        "fullcodeline": "if (aeshdr.version >= 0x01)"
    },
    {
        "line": 295,
        "fullcodeline": "while(!reached_eof)"
    },
    {
        "line": 405,
        "fullcodeline": "if (aeshdr.version == 0x00)"
    },
    {
        "line": 18,
        "fullcodeline": "sizeof(aescrypt_hdr))"
    },
    {
        "line": 31,
        "fullcodeline": "if (!(aeshdr.aes[0] == 'A' && aeshdr.aes[1] == 'E' &&"
    },
    {
        "line": 50,
        "fullcodeline": "aeshdr.last_block_size = (aeshdr.last_block_size & 0x0F);"
    },
    {
        "line": 97,
        "fullcodeline": "if ((bytes_read = fread(IV, 1, 16, infp)) != 16)"
    },
    {
        "line": 115,
        "fullcodeline": "sha256_starts(&sha_ctx);"
    },
    {
        "line": 116,
        "fullcodeline": "sha256_update(&sha_ctx, digest, 32);"
    },
    {
        "line": 117,
        "fullcodeline": "sha256_update(&sha_ctx, passwd, passlen);"
    },
    {
        "line": 118,
        "fullcodeline": "sha256_finish(&sha_ctx, digest);"
    },
    {
        "line": 133,
        "fullcodeline": "ipad[i] ^= digest[i];"
    },
    {
        "line": 134,
        "fullcodeline": "opad[i] ^= digest[i];"
    },
    {
        "line": 179,
        "fullcodeline": "sha256_finish(&sha_ctx, digest);"
    },
    {
        "line": 180,
        "fullcodeline": "sha256_starts(&sha_ctx);"
    },
    {
        "line": 181,
        "fullcodeline": "sha256_update(&sha_ctx, opad, 64);"
    },
    {
        "line": 182,
        "fullcodeline": "sha256_update(&sha_ctx, digest, 32);"
    },
    {
        "line": 183,
        "fullcodeline": "sha256_finish(&sha_ctx, digest);"
    },
    {
        "line": 211,
        "fullcodeline": "memcpy(IV, iv_key, 16);"
    },
    {
        "line": 214,
        "fullcodeline": "aes_set_key(&aes_ctx, iv_key+16, 256);"
    },
    {
        "line": 221,
        "fullcodeline": "memset(ipad, 0x36, 64);"
    },
    {
        "line": 222,
        "fullcodeline": "memset(opad, 0x5C, 64);"
    },
    {
        "line": 233,
        "fullcodeline": "sha256_starts(&sha_ctx);"
    },
    {
        "line": 234,
        "fullcodeline": "sha256_update(&sha_ctx, ipad, 64);"
    },
    {
        "line": 243,
        "fullcodeline": "if ((bytes_read = fread(buffer, 1, 48, infp)) < 48)"
    },
    {
        "line": 407,
        "fullcodeline": "memcpy(buffer2, tail, 16);"
    },
    {
        "line": 408,
        "fullcodeline": "tail += 16;"
    },
    {
        "line": 20,
        "fullcodeline": "if (feof(infp))"
    },
    {
        "line": 28,
        "fullcodeline": "return -1;"
    },
    {
        "line": 32,
        "fullcodeline": "aeshdr.aes[2] == 'S'))"
    },
    {
        "line": 40,
        "fullcodeline": "return -1;"
    },
    {
        "line": 107,
        "fullcodeline": "return -1;"
    },
    {
        "line": 145,
        "fullcodeline": "for (i = 0; i < 48; i += 16)"
    },
    {
        "line": 198,
        "fullcodeline": "if (memcmp(digest, buffer, 32))"
    },
    {
        "line": 224,
        "fullcodeline": "for (i = 0; i < 32; i++)"
    },
    {
        "line": 298,
        "fullcodeline": "if (head == (buffer + 64))"
    },
    {
        "line": 349,
        "fullcodeline": "if ((bytes_read > 0) || (aeshdr.version == 0x00))"
    },
    {
        "line": 409,
        "fullcodeline": "if (tail == (buffer + 64))"
    },
    {
        "line": 417,
        "fullcodeline": "memcpy(buffer2, tail+1, 15);"
    },
    {
        "line": 418,
        "fullcodeline": "tail += 16;"
    },
    {
        "line": 423,
        "fullcodeline": "memcpy(buffer2+15, tail, 16);"
    },
    {
        "line": 424,
        "fullcodeline": "tail += 16;"
    },
    {
        "line": 447,
        "fullcodeline": "return -1;"
    },
    {
        "line": 454,
        "fullcodeline": "return -1;"
    },
    {
        "line": 22,
        "fullcodeline": "fprintf(stderr, \"Error: Input file is too short\\n\");"
    },
    {
        "line": 52,
        "fullcodeline": "else if (aeshdr.version > 0x02)"
    },
    {
        "line": 77,
        "fullcodeline": "i = j = (((int)buffer[0]) << 8) | (int)buffer[1];"
    },
    {
        "line": 160,
        "fullcodeline": "memcpy(buffer2, buffer, 16);"
    },
    {
        "line": 162,
        "fullcodeline": "sha256_update(&sha_ctx, buffer, 16);"
    },
    {
        "line": 163,
        "fullcodeline": "aes_decrypt(&aes_ctx, buffer, buffer);"
    },
    {
        "line": 175,
        "fullcodeline": "memcpy(IV, buffer2, 16);"
    },
    {
        "line": 185,
        "fullcodeline": "if ((bytes_read = fread(buffer, 1, 32, infp)) != 32)"
    },
    {
        "line": 226,
        "fullcodeline": "ipad[i] ^= iv_key[i + 16];"
    },
    {
        "line": 227,
        "fullcodeline": "opad[i] ^= iv_key[i + 16];"
    },
    {
        "line": 245,
        "fullcodeline": "if (!feof(infp))"
    },
    {
        "line": 300,
        "fullcodeline": "head = buffer;"
    },
    {
        "line": 303,
        "fullcodeline": "if ((bytes_read = fread(head, 1, 16, infp)) < 16)"
    },
    {
        "line": 357,
        "fullcodeline": "memcpy(buffer2, tail, 16);"
    },
    {
        "line": 359,
        "fullcodeline": "sha256_update(&sha_ctx, tail, 16);"
    },
    {
        "line": 360,
        "fullcodeline": "aes_decrypt(&aes_ctx, tail, tail);"
    },
    {
        "line": 372,
        "fullcodeline": "memcpy(IV, buffer2, 16);"
    },
    {
        "line": 378,
        "fullcodeline": "n = ((!reached_eof) ||"
    },
    {
        "line": 389,
        "fullcodeline": "tail += 16;"
    },
    {
        "line": 411,
        "fullcodeline": "tail = buffer;"
    },
    {
        "line": 419,
        "fullcodeline": "if (tail == (buffer + 64))"
    },
    {
        "line": 425,
        "fullcodeline": "if (tail == (buffer + 64))"
    },
    {
        "line": 26,
        "fullcodeline": "perror(\"Error reading the file header:\");"
    },
    {
        "line": 169,
        "fullcodeline": "for (j = 0; j < 16; j++)"
    },
    {
        "line": 195,
        "fullcodeline": "return -1;"
    },
    {
        "line": 203,
        "fullcodeline": "return -1;"
    },
    {
        "line": 248,
        "fullcodeline": "return -1;"
    },
    {
        "line": 289,
        "fullcodeline": "reached_eof = 1;"
    },
    {
        "line": 352,
        "fullcodeline": "if (bytes_read > 0)"
    },
    {
        "line": 366,
        "fullcodeline": "for (i = 0; i < 16; i++)"
    },
    {
        "line": 390,
        "fullcodeline": "if (tail == (buffer+64))"
    },
    {
        "line": 421,
        "fullcodeline": "tail = buffer;"
    },
    {
        "line": 427,
        "fullcodeline": "tail = buffer;"
    },
    {
        "line": 56,
        "fullcodeline": "return -1;"
    },
    {
        "line": 64,
        "fullcodeline": "if ((bytes_read = fread(buffer, 1, 2, infp)) != 2)"
    },
    {
        "line": 147,
        "fullcodeline": "if ((bytes_read = fread(buffer, 1, 16, infp)) != 16)"
    },
    {
        "line": 171,
        "fullcodeline": "iv_key[i + j] = (buffer[j] ^ IV[j]);"
    },
    {
        "line": 305,
        "fullcodeline": "if (!feof(infp))"
    },
    {
        "line": 354,
        "fullcodeline": "head += 16;"
    },
    {
        "line": 368,
        "fullcodeline": "tail[i] ^= IV[i];"
    },
    {
        "line": 382,
        "fullcodeline": "if ((i = fwrite(tail, 1, n, outfp)) != n)"
    },
    {
        "line": 392,
        "fullcodeline": "tail = buffer;"
    },
    {
        "line": 74,
        "fullcodeline": "return -1;"
    },
    {
        "line": 157,
        "fullcodeline": "return -1;"
    },
    {
        "line": 257,
        "fullcodeline": "if ((aeshdr.version == 0x00 && bytes_read != 32) ||"
    },
    {
        "line": 258,
        "fullcodeline": "(aeshdr.version >= 0x01 && bytes_read != 33))"
    },
    {
        "line": 308,
        "fullcodeline": "return -1;"
    },
    {
        "line": 340,
        "fullcodeline": "reached_eof = 1;"
    },
    {
        "line": 379,
        "fullcodeline": "(aeshdr.last_block_size == 0)) ? 16 : aeshdr.last_block_size;"
    },
    {
        "line": 385,
        "fullcodeline": "return -1;"
    },
    {
        "line": 80,
        "fullcodeline": "if ((bytes_read = fread(buffer, 1, 1, infp)) != 1)"
    },
    {
        "line": 262,
        "fullcodeline": "return -1;"
    },
    {
        "line": 327,
        "fullcodeline": "if (aeshdr.version >= 0x01)"
    },
    {
        "line": 90,
        "fullcodeline": "return -1;"
    },
    {
        "line": 271,
        "fullcodeline": "if (aeshdr.version >= 0x01)"
    },
    {
        "line": 283,
        "fullcodeline": "if (aeshdr.last_block_size != 0)"
    },
    {
        "line": 313,
        "fullcodeline": "if ((aeshdr.version == 0x00 && bytes_read > 0) ||"
    },
    {
        "line": 314,
        "fullcodeline": "(aeshdr.version >= 0x01 && bytes_read != 1))"
    },
    {
        "line": 277,
        "fullcodeline": "aeshdr.last_block_size = (buffer[0] & 0x0F);"
    },
    {
        "line": 318,
        "fullcodeline": "return -1;"
    },
    {
        "line": 286,
        "fullcodeline": "return -1;"
    },
    {
        "line": 331,
        "fullcodeline": "aeshdr.last_block_size = (tail[16] & 0x0F);"
    },
    {
        "line": 335,
        "fullcodeline": "aeshdr.last_block_size = (buffer[0] & 0x0F);"
    }
]