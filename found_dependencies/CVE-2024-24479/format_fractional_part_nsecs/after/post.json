[
    {
        "line": 8,
        "fullcodeline": "gint8 num_buf[CHARS_NANOSECONDS];"
    },
    {
        "line": 9,
        "fullcodeline": "gint8 *num_end = &num_buf[CHARS_NANOSECONDS];"
    },
    {
        "line": 13,
        "fullcodeline": "ws_assert(precision != 0);"
    },
    {
        "line": 43,
        "fullcodeline": "ptr = buf;"
    },
    {
        "line": 44,
        "fullcodeline": "remaining = buflen;"
    },
    {
        "line": 45,
        "fullcodeline": "num_bytes = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "decimal_point_len = g_strlcpy(buf, decimal_point, buflen);"
    },
    {
        "line": 61,
        "fullcodeline": "ptr += decimal_point_len;"
    },
    {
        "line": 62,
        "fullcodeline": "remaining -= decimal_point_len;"
    },
    {
        "line": 63,
        "fullcodeline": "num_bytes += decimal_point_len;"
    },
    {
        "line": 150,
        "fullcodeline": "num_ptr = uint_to_str_back_len(num_end, frac_part, precision);"
    },
    {
        "line": 160,
        "fullcodeline": "num_len = MIN((size_t)(num_end - num_ptr), remaining - 1);"
    },
    {
        "line": 172,
        "fullcodeline": "memcpy(ptr, num_ptr, num_len);"
    },
    {
        "line": 173,
        "fullcodeline": "ptr += num_len;"
    },
    {
        "line": 174,
        "fullcodeline": "num_bytes += num_len;"
    },
    {
        "line": 179,
        "fullcodeline": "*ptr = '\\0';"
    },
    {
        "line": 15,
        "fullcodeline": "if (buflen == 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (nsecs >= 1000000000U) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (decimal_point_len >= buflen) {"
    },
    {
        "line": 161,
        "fullcodeline": "if (num_len == 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "num_bytes = snprintf(buf, buflen, \"%s(%u nanoseconds)\","
    },
    {
        "line": 86,
        "fullcodeline": "frac_part = nsecs / 100000000U;"
    },
    {
        "line": 93,
        "fullcodeline": "frac_part = nsecs / 10000000U;"
    },
    {
        "line": 100,
        "fullcodeline": "frac_part = nsecs / 1000000U;"
    },
    {
        "line": 107,
        "fullcodeline": "frac_part = nsecs / 100000U;"
    },
    {
        "line": 114,
        "fullcodeline": "frac_part = nsecs / 10000U;"
    },
    {
        "line": 121,
        "fullcodeline": "frac_part = nsecs / 1000U;"
    },
    {
        "line": 128,
        "fullcodeline": "frac_part = nsecs / 100U;"
    },
    {
        "line": 135,
        "fullcodeline": "frac_part = nsecs / 10U;"
    },
    {
        "line": 142,
        "fullcodeline": "frac_part = nsecs;"
    },
    {
        "line": 146,
        "fullcodeline": "ws_assert_not_reached();"
    },
    {
        "line": 30,
        "fullcodeline": "if ((unsigned int)num_bytes >= buflen) {"
    },
    {
        "line": 59,
        "fullcodeline": "return (int)(buflen - 1);"
    },
    {
        "line": 38,
        "fullcodeline": "return (int)(buflen - 1);"
    }
]