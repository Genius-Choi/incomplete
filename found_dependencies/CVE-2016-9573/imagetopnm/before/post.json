[
    {
        "line": 10,
        "fullcodeline": "FILE *fdest = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "const char *tmp = outfile;"
    },
    {
        "line": 14,
        "fullcodeline": "alpha = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "two = has_alpha = 0; fails = 1;"
    },
    {
        "line": 23,
        "fullcodeline": "ncomp = image->numcomps;"
    },
    {
        "line": 25,
        "fullcodeline": "while (*tmp) ++tmp; tmp -= 2;"
    },
    {
        "line": 26,
        "fullcodeline": "want_gray = (*tmp == 'g' || *tmp == 'G');"
    },
    {
        "line": 27,
        "fullcodeline": "ncomp = image->numcomps;"
    },
    {
        "line": 162,
        "fullcodeline": "destname = (char*)malloc(strlen(outfile) + 8);"
    },
    {
        "line": 231,
        "fullcodeline": "free(destname);"
    },
    {
        "line": 16,
        "fullcodeline": "if((prec = (int)image->comps[0].prec) > 16)"
    },
    {
        "line": 31,
        "fullcodeline": "if ((force_split == 0) &&"
    },
    {
        "line": 157,
        "fullcodeline": "if (image->numcomps > ncomp)"
    },
    {
        "line": 163,
        "fullcodeline": "if(destname == NULL){"
    },
    {
        "line": 167,
        "fullcodeline": "for (compno = 0; compno < ncomp; compno++)"
    },
    {
        "line": 18,
        "fullcodeline": "fprintf(stderr,\"%s:%d:imagetopnm\\n\\tprecision %d is larger than 16\""
    },
    {
        "line": 29,
        "fullcodeline": "if(want_gray) ncomp = 1;"
    },
    {
        "line": 32,
        "fullcodeline": "(ncomp == 2 /* GRAYA */"
    },
    {
        "line": 42,
        "fullcodeline": "fdest = fopen(outfile, \"wb\");"
    },
    {
        "line": 49,
        "fullcodeline": "two = (prec > 8);"
    },
    {
        "line": 50,
        "fullcodeline": "triple = (ncomp > 2);"
    },
    {
        "line": 52,
        "fullcodeline": "max = (1<<prec) - 1; has_alpha = (ncomp == 4 || ncomp == 2);"
    },
    {
        "line": 80,
        "fullcodeline": "adjustR = (image->comps[0].sgnd ? 1 << (image->comps[0].prec - 1) : 0);"
    },
    {
        "line": 152,
        "fullcodeline": "fclose(fdest); return 0;"
    },
    {
        "line": 159,
        "fullcodeline": "fprintf(stderr,\"WARNING -> [PGM file] Only the first component\\n\");"
    },
    {
        "line": 160,
        "fullcodeline": "fprintf(stderr,\"           is written to the file\\n\");"
    },
    {
        "line": 164,
        "fullcodeline": "fprintf(stderr, \"imagetopnm: memory out\\n\");"
    },
    {
        "line": 181,
        "fullcodeline": "fdest = fopen(destname, \"wb\");"
    },
    {
        "line": 190,
        "fullcodeline": "max = (1<<prec) - 1;"
    },
    {
        "line": 192,
        "fullcodeline": "fprintf(fdest, \"P5\\n#OpenJPEG-%s\\n%d %d\\n%d\\n\","
    },
    {
        "line": 196,
        "fullcodeline": "adjustR ="
    },
    {
        "line": 229,
        "fullcodeline": "fclose(fdest);"
    },
    {
        "line": 33,
        "fullcodeline": "|| (ncomp > 2 /* RGB, RGBA */"
    },
    {
        "line": 44,
        "fullcodeline": "if (!fdest)"
    },
    {
        "line": 89,
        "fullcodeline": "for(i = 0; i < wr * hr; ++i)"
    },
    {
        "line": 169,
        "fullcodeline": "if (ncomp > 1)"
    },
    {
        "line": 182,
        "fullcodeline": "if (!fdest)"
    },
    {
        "line": 197,
        "fullcodeline": "(image->comps[compno].sgnd ? 1 << (image->comps[compno].prec - 1) : 0);"
    },
    {
        "line": 199,
        "fullcodeline": "if(prec > 8)"
    },
    {
        "line": 39,
        "fullcodeline": "&& image->comps[1].prec == image->comps[2].prec"
    },
    {
        "line": 46,
        "fullcodeline": "fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", outfile);"
    },
    {
        "line": 65,
        "fullcodeline": "const char *tt = (triple?\"RGB_ALPHA\":\"GRAYSCALE_ALPHA\");"
    },
    {
        "line": 67,
        "fullcodeline": "fprintf(fdest, \"P7\\n# OpenJPEG-%s\\nWIDTH %d\\nHEIGHT %d\\nDEPTH %u\\n\""
    },
    {
        "line": 71,
        "fullcodeline": "adjustA = (image->comps[ncomp - 1].sgnd ?"
    },
    {
        "line": 84,
        "fullcodeline": "adjustG = (image->comps[1].sgnd ? 1 << (image->comps[1].prec - 1) : 0);"
    },
    {
        "line": 85,
        "fullcodeline": "adjustB = (image->comps[2].sgnd ? 1 << (image->comps[2].prec - 1) : 0);"
    },
    {
        "line": 131,
        "fullcodeline": "fprintf(fdest, \"%c\", (unsigned char)v);"
    },
    {
        "line": 172,
        "fullcodeline": "const size_t olen = strlen(outfile);"
    },
    {
        "line": 173,
        "fullcodeline": "const size_t dotpos = olen - 4;"
    },
    {
        "line": 175,
        "fullcodeline": "strncpy(destname, outfile, dotpos);"
    },
    {
        "line": 176,
        "fullcodeline": "sprintf(destname+dotpos, \"_%u.pgm\", compno);"
    },
    {
        "line": 184,
        "fullcodeline": "fprintf(stderr, \"ERROR -> failed to open %s for writing\\n\", destname);"
    },
    {
        "line": 185,
        "fullcodeline": "free(destname);"
    },
    {
        "line": 61,
        "fullcodeline": "else green = blue = NULL;"
    },
    {
        "line": 76,
        "fullcodeline": "fprintf(fdest, \"P6\\n# OpenJPEG-%s\\n%d %d\\n%d\\n\","
    },
    {
        "line": 78,
        "fullcodeline": "adjustA = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "else adjustG = adjustB = 0;"
    },
    {
        "line": 129,
        "fullcodeline": "if(v > 255) v = 255; else if(v < 0) v = 0;"
    },
    {
        "line": 179,
        "fullcodeline": "sprintf(destname, \"%s\", outfile);"
    },
    {
        "line": 201,
        "fullcodeline": "for (i = 0; i < wr * hr; i++)"
    },
    {
        "line": 37,
        "fullcodeline": "&& image->comps[1].dy == image->comps[2].dy"
    },
    {
        "line": 72,
        "fullcodeline": "1 << (image->comps[ncomp - 1].prec - 1) : 0);"
    },
    {
        "line": 93,
        "fullcodeline": "v = *red + adjustR; ++red;"
    },
    {
        "line": 97,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 128,
        "fullcodeline": "v = *red++;"
    },
    {
        "line": 137,
        "fullcodeline": "fprintf(fdest, \"%c\", (unsigned char)v);"
    },
    {
        "line": 141,
        "fullcodeline": "fprintf(fdest, \"%c\", (unsigned char)v);"
    },
    {
        "line": 148,
        "fullcodeline": "fprintf(fdest, \"%c\", (unsigned char)v);"
    },
    {
        "line": 203,
        "fullcodeline": "v = *red + adjustR; ++red;"
    },
    {
        "line": 207,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 221,
        "fullcodeline": "for(i = 0; i < wr * hr; ++i)"
    },
    {
        "line": 70,
        "fullcodeline": "alpha = image->comps[ncomp - 1].data;"
    },
    {
        "line": 94,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 135,
        "fullcodeline": "if(v > 255) v = 255; else if(v < 0) v = 0;"
    },
    {
        "line": 139,
        "fullcodeline": "if(v > 255) v = 255; else if(v < 0) v = 0;"
    },
    {
        "line": 146,
        "fullcodeline": "if(v > 255) v = 255; else if(v < 0) v = 0;"
    },
    {
        "line": 204,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 223,
        "fullcodeline": "v = *red + adjustR; ++red;"
    },
    {
        "line": 226,
        "fullcodeline": "fprintf(fdest, \"%c\", (unsigned char)v);"
    },
    {
        "line": 35,
        "fullcodeline": "&& image->comps[1].dx == image->comps[2].dx"
    },
    {
        "line": 101,
        "fullcodeline": "v = *green + adjustG; ++green;"
    },
    {
        "line": 105,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 107,
        "fullcodeline": "v =  *blue + adjustB; ++blue;"
    },
    {
        "line": 111,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 117,
        "fullcodeline": "v = *alpha + adjustA; ++alpha;"
    },
    {
        "line": 121,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 134,
        "fullcodeline": "v = *green++;"
    },
    {
        "line": 138,
        "fullcodeline": "v = *blue++;"
    },
    {
        "line": 145,
        "fullcodeline": "v = *alpha++;"
    },
    {
        "line": 215,
        "fullcodeline": "fprintf(fdest, \"%c%c\",(unsigned char)(v>>8), (unsigned char)v);"
    },
    {
        "line": 224,
        "fullcodeline": "if(v > 255) v = 255; else if(v < 0) v = 0;"
    },
    {
        "line": 102,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 108,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 118,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 212,
        "fullcodeline": "if(v > 65535) v = 65535; else if(v < 0) v = 0;"
    },
    {
        "line": 211,
        "fullcodeline": "v = *alpha++;"
    }
]