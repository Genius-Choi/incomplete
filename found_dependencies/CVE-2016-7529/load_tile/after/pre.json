[
    {
        "line": 24,
        "fullcodeline": "xcfdata=(XCFPixelInfo *) AcquireQuantumMemory(MagickMax(data_length,"
    },
    {
        "line": 29,
        "fullcodeline": "xcfodata=xcfdata;"
    },
    {
        "line": 30,
        "fullcodeline": "graydata=(unsigned char *) xcfdata;  /* used by gray and indexed */"
    },
    {
        "line": 31,
        "fullcodeline": "count=ReadBlob(image,data_length,(unsigned char *) xcfdata);"
    },
    {
        "line": 68,
        "fullcodeline": "xcfodata=(XCFPixelInfo *) RelinquishMagickMemory(xcfodata);"
    },
    {
        "line": 26,
        "fullcodeline": "if (xcfdata == (XCFPixelInfo *) NULL)"
    },
    {
        "line": 32,
        "fullcodeline": "if (count != (ssize_t) data_length)"
    },
    {
        "line": 35,
        "fullcodeline": "for (y=0; y < (ssize_t) tile_image->rows; y++)"
    },
    {
        "line": 27,
        "fullcodeline": "ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\","
    },
    {
        "line": 33,
        "fullcodeline": "ThrowBinaryException(CorruptImageError,\"NotEnoughPixelData\","
    },
    {
        "line": 37,
        "fullcodeline": "q=GetAuthenticPixels(tile_image,0,y,tile_image->columns,1,exception);"
    },
    {
        "line": 25,
        "fullcodeline": "tile_image->columns*tile_image->rows),sizeof(*xcfdata));"
    },
    {
        "line": 38,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 40,
        "fullcodeline": "if (inDocInfo->image_type == GIMP_GRAY)"
    },
    {
        "line": 65,
        "fullcodeline": "if (SyncAuthenticPixels(tile_image,exception) == MagickFalse)"
    },
    {
        "line": 42,
        "fullcodeline": "for (x=0; x < (ssize_t) tile_image->columns; x++)"
    },
    {
        "line": 44,
        "fullcodeline": "SetPixelGray(tile_image,ScaleCharToQuantum(*graydata),q);"
    },
    {
        "line": 45,
        "fullcodeline": "SetPixelAlpha(tile_image,ScaleCharToQuantum((unsigned char)"
    },
    {
        "line": 47,
        "fullcodeline": "graydata++;"
    },
    {
        "line": 48,
        "fullcodeline": "q+=GetPixelChannels(tile_image);"
    },
    {
        "line": 52,
        "fullcodeline": "if (inDocInfo->image_type == GIMP_RGB)"
    },
    {
        "line": 54,
        "fullcodeline": "for (x=0; x < (ssize_t) tile_image->columns; x++)"
    },
    {
        "line": 56,
        "fullcodeline": "SetPixelRed(tile_image,ScaleCharToQuantum(xcfdata->red),q);"
    },
    {
        "line": 57,
        "fullcodeline": "SetPixelGreen(tile_image,ScaleCharToQuantum(xcfdata->green),q);"
    },
    {
        "line": 58,
        "fullcodeline": "SetPixelBlue(tile_image,ScaleCharToQuantum(xcfdata->blue),q);"
    },
    {
        "line": 59,
        "fullcodeline": "SetPixelAlpha(tile_image,xcfdata->alpha == 255U ? TransparentAlpha :"
    },
    {
        "line": 61,
        "fullcodeline": "xcfdata++;"
    },
    {
        "line": 62,
        "fullcodeline": "q+=GetPixelChannels(tile_image);"
    },
    {
        "line": 60,
        "fullcodeline": "ScaleCharToQuantum((unsigned char) inLayerInfo->alpha),q);"
    }
]