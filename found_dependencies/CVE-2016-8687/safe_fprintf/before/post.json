[
    {
        "line": 3,
        "fullcodeline": "char fmtbuff_stack[256]; /* Place to format the printf() string. */"
    },
    {
        "line": 4,
        "fullcodeline": "char outbuff[256]; /* Buffer for outgoing characters. */"
    },
    {
        "line": 16,
        "fullcodeline": "fmtbuff_heap = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "fmtbuff = fmtbuff_stack;"
    },
    {
        "line": 21,
        "fullcodeline": "va_start(ap, fmt);"
    },
    {
        "line": 22,
        "fullcodeline": "length = vsnprintf(fmtbuff, fmtbuff_length, fmt, ap);"
    },
    {
        "line": 23,
        "fullcodeline": "va_end(ap);"
    },
    {
        "line": 65,
        "fullcodeline": "p = fmtbuff;"
    },
    {
        "line": 66,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "try_wc = 1;"
    },
    {
        "line": 98,
        "fullcodeline": "outbuff[i] = '\\0';"
    },
    {
        "line": 99,
        "fullcodeline": "fprintf(f, \"%s\", outbuff);"
    },
    {
        "line": 102,
        "fullcodeline": "free(fmtbuff_heap);"
    },
    {
        "line": 26,
        "fullcodeline": "while (length < 0 || length >= fmtbuff_length) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (mbtowc(NULL, NULL, 1) == -1) { /* Reset the shift state. */"
    },
    {
        "line": 68,
        "fullcodeline": "while (*p != '\\0') {"
    },
    {
        "line": 38,
        "fullcodeline": "free(fmtbuff_heap);"
    },
    {
        "line": 39,
        "fullcodeline": "fmtbuff_heap = malloc(fmtbuff_length);"
    },
    {
        "line": 60,
        "fullcodeline": "free(fmtbuff_heap);"
    },
    {
        "line": 27,
        "fullcodeline": "if (length >= fmtbuff_length)"
    },
    {
        "line": 42,
        "fullcodeline": "if (fmtbuff_heap != NULL) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (try_wc && (n = mbtowc(&wc, p, length)) != -1) {"
    },
    {
        "line": 92,
        "fullcodeline": "if (i > (sizeof(outbuff) - 20)) {"
    },
    {
        "line": 28,
        "fullcodeline": "fmtbuff_length = length+1;"
    },
    {
        "line": 43,
        "fullcodeline": "fmtbuff = fmtbuff_heap;"
    },
    {
        "line": 44,
        "fullcodeline": "va_start(ap, fmt);"
    },
    {
        "line": 45,
        "fullcodeline": "length = vsnprintf(fmtbuff, fmtbuff_length, fmt, ap);"
    },
    {
        "line": 46,
        "fullcodeline": "va_end(ap);"
    },
    {
        "line": 73,
        "fullcodeline": "length -= n;"
    },
    {
        "line": 93,
        "fullcodeline": "outbuff[i] = '\\0';"
    },
    {
        "line": 94,
        "fullcodeline": "fprintf(f, \"%s\", outbuff);"
    },
    {
        "line": 95,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "length = sizeof(fmtbuff_stack) - 1;"
    },
    {
        "line": 74,
        "fullcodeline": "if (iswprint(wc) && wc != L'\\\\') {"
    },
    {
        "line": 87,
        "fullcodeline": "i += (unsigned)bsdtar_expand_char(outbuff, i, *p++);"
    },
    {
        "line": 88,
        "fullcodeline": "try_wc = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "else if (fmtbuff_length < 8192)"
    },
    {
        "line": 30,
        "fullcodeline": "fmtbuff_length *= 2;"
    },
    {
        "line": 76,
        "fullcodeline": "while (n-- > 0)"
    },
    {
        "line": 80,
        "fullcodeline": "while (n-- > 0)"
    },
    {
        "line": 81,
        "fullcodeline": "i += (unsigned)bsdtar_expand_char("
    },
    {
        "line": 31,
        "fullcodeline": "else if (fmtbuff_length < 1000000)"
    },
    {
        "line": 77,
        "fullcodeline": "outbuff[i++] = *p++;"
    },
    {
        "line": 32,
        "fullcodeline": "fmtbuff_length += fmtbuff_length / 4;"
    },
    {
        "line": 34,
        "fullcodeline": "length = fmtbuff_length;"
    },
    {
        "line": 35,
        "fullcodeline": "fmtbuff_heap[length-1] = '\\0';"
    },
    {
        "line": 82,
        "fullcodeline": "outbuff, i, *p++);"
    }
]