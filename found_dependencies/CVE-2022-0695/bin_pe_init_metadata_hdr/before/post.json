[
    {
        "line": 2,
        "fullcodeline": "PE_(image_metadata_header) * metadata = R_NEW0 (PE_(image_metadata_header));"
    },
    {
        "line": 6,
        "fullcodeline": "PE_DWord metadata_directory = pe->clr_hdr? PE_(va2pa) (pe, pe->clr_hdr->MetaDataDirectoryAddress): 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int rr = r_buf_fread_at (pe->b, metadata_directory,"
    },
    {
        "line": 17,
        "fullcodeline": "rr = r_buf_fread_at (pe->b, metadata_directory + 8,"
    },
    {
        "line": 23,
        "fullcodeline": "rr = r_buf_fread_at (pe->b, metadata_directory + 12,"
    },
    {
        "line": 33,
        "fullcodeline": "int len = metadata->VersionStringLength; // XXX: dont trust this length"
    },
    {
        "line": 51,
        "fullcodeline": "rr = r_buf_fread_at (pe->b, metadata_directory + 16 + metadata->VersionStringLength,"
    },
    {
        "line": 58,
        "fullcodeline": "eprintf (\"Number of Metadata Streams: %d\\n\", metadata->NumberOfStreams);"
    },
    {
        "line": 59,
        "fullcodeline": "pe->metadata_header = metadata;"
    },
    {
        "line": 63,
        "fullcodeline": "int stream_addr = metadata_directory + 20 + metadata->VersionStringLength;"
    },
    {
        "line": 64,
        "fullcodeline": "PE_(image_metadata_stream) * stream;"
    },
    {
        "line": 108,
        "fullcodeline": "pe->streams = streams;"
    },
    {
        "line": 111,
        "fullcodeline": "eprintf (\"Warning: read (metadata header)\\n\");"
    },
    {
        "line": 112,
        "fullcodeline": "free (metadata);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!metadata) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (!metadata_directory) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (rr < 1) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (rr < 1) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (rr < 1) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (rr < 1) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (!streams) {"
    },
    {
        "line": 70,
        "fullcodeline": "for (count = 0; count < metadata->NumberOfStreams; count++) {"
    },
    {
        "line": 8,
        "fullcodeline": "free (metadata);"
    },
    {
        "line": 12,
        "fullcodeline": "(ut8*) metadata, pe->big_endian? \"1I2S\": \"1i2s\", 1);"
    },
    {
        "line": 18,
        "fullcodeline": "(ut8*) (&metadata->Reserved), pe->big_endian? \"1I\": \"1i\", 1);"
    },
    {
        "line": 24,
        "fullcodeline": "(ut8*) (&metadata->VersionStringLength), pe->big_endian? \"1I\": \"1i\", 1);"
    },
    {
        "line": 35,
        "fullcodeline": "metadata->VersionString = calloc (1, len + 1);"
    },
    {
        "line": 40,
        "fullcodeline": "rr = r_buf_read_at (pe->b, metadata_directory + 16, (ut8*)(metadata->VersionString), len);"
    },
    {
        "line": 47,
        "fullcodeline": "eprintf (\".NET Version: %s\\n\", metadata->VersionString);"
    },
    {
        "line": 52,
        "fullcodeline": "(ut8*) (&metadata->Flags), pe->big_endian? \"2S\": \"2s\", 1);"
    },
    {
        "line": 71,
        "fullcodeline": "stream = R_NEW0 (PE_(image_metadata_stream));"
    },
    {
        "line": 87,
        "fullcodeline": "eprintf (\"DirectoryAddress: %x Size: %x\\n\", stream->Offset, stream->Size);"
    },
    {
        "line": 88,
        "fullcodeline": "char* stream_name = calloc (1, MAX_METADATA_STRING_LENGTH + 1);"
    },
    {
        "line": 96,
        "fullcodeline": "int c = bin_pe_read_metadata_string (stream_name, pe->b, stream_addr + 8);"
    },
    {
        "line": 103,
        "fullcodeline": "eprintf (\"Stream name: %s %d\\n\", stream_name, c);"
    },
    {
        "line": 104,
        "fullcodeline": "stream->Name = stream_name;"
    },
    {
        "line": 105,
        "fullcodeline": "streams[count] = stream;"
    },
    {
        "line": 106,
        "fullcodeline": "stream_addr += 8 + c;"
    },
    {
        "line": 36,
        "fullcodeline": "if (!metadata->VersionString) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (rr != len) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!stream) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (r_buf_size (pe->b) < (stream_addr + 8 + MAX_METADATA_STRING_LENGTH)) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (r_buf_fread_at (pe->b, stream_addr, (ut8*) stream, pe->big_endian? \"2I\": \"2i\", 1) < 1) {"
    },
    {
        "line": 90,
        "fullcodeline": "if (!stream_name) {"
    },
    {
        "line": 97,
        "fullcodeline": "if (c == 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "eprintf (\"Warning: read (metadata header) - cannot parse version string\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "free (metadata->VersionString);"
    },
    {
        "line": 44,
        "fullcodeline": "free (metadata);"
    },
    {
        "line": 73,
        "fullcodeline": "free (streams);"
    },
    {
        "line": 77,
        "fullcodeline": "eprintf (\"Truncated\\n\");"
    },
    {
        "line": 78,
        "fullcodeline": "free (stream);"
    },
    {
        "line": 79,
        "fullcodeline": "free (streams);"
    },
    {
        "line": 83,
        "fullcodeline": "free (stream);"
    },
    {
        "line": 84,
        "fullcodeline": "free (streams);"
    },
    {
        "line": 91,
        "fullcodeline": "free (stream);"
    },
    {
        "line": 92,
        "fullcodeline": "free (streams);"
    },
    {
        "line": 98,
        "fullcodeline": "free (stream_name);"
    },
    {
        "line": 99,
        "fullcodeline": "free (stream);"
    },
    {
        "line": 100,
        "fullcodeline": "free (streams);"
    }
]