[
    {
        "line": 13,
        "fullcodeline": "fud = fuse_get_dev(out);"
    },
    {
        "line": 17,
        "fullcodeline": "pipe_lock(pipe);"
    },
    {
        "line": 19,
        "fullcodeline": "bufs = kvmalloc_array(pipe->nrbufs, sizeof(struct pipe_buffer),"
    },
    {
        "line": 26,
        "fullcodeline": "nbuf = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "rem = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "ret = -EINVAL;"
    },
    {
        "line": 35,
        "fullcodeline": "rem = len;"
    },
    {
        "line": 63,
        "fullcodeline": "pipe_unlock(pipe);"
    },
    {
        "line": 65,
        "fullcodeline": "fuse_copy_init(&cs, 0, NULL);"
    },
    {
        "line": 66,
        "fullcodeline": "cs.pipebufs = bufs;"
    },
    {
        "line": 67,
        "fullcodeline": "cs.nr_segs = nbuf;"
    },
    {
        "line": 68,
        "fullcodeline": "cs.pipe = pipe;"
    },
    {
        "line": 73,
        "fullcodeline": "ret = fuse_dev_do_write(fud, &cs, len);"
    },
    {
        "line": 75,
        "fullcodeline": "pipe_lock(pipe);"
    },
    {
        "line": 79,
        "fullcodeline": "pipe_unlock(pipe);"
    },
    {
        "line": 81,
        "fullcodeline": "kvfree(bufs);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!fud)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!bufs) {"
    },
    {
        "line": 28,
        "fullcodeline": "for (idx = 0; idx < pipe->nrbufs && rem < len; idx++)"
    },
    {
        "line": 29,
        "fullcodeline": "rem += pipe->bufs[(pipe->curbuf + idx) & (pipe->buffers - 1)].len;"
    },
    {
        "line": 32,
        "fullcodeline": "if (rem < len)"
    },
    {
        "line": 70,
        "fullcodeline": "if (flags & SPLICE_F_MOVE)"
    },
    {
        "line": 77,
        "fullcodeline": "for (idx = 0; idx < nbuf; idx++)"
    },
    {
        "line": 78,
        "fullcodeline": "pipe_buf_release(pipe, &bufs[idx]);"
    },
    {
        "line": 22,
        "fullcodeline": "pipe_unlock(pipe);"
    },
    {
        "line": 40,
        "fullcodeline": "BUG_ON(nbuf >= pipe->buffers);"
    },
    {
        "line": 41,
        "fullcodeline": "BUG_ON(!pipe->nrbufs);"
    },
    {
        "line": 60,
        "fullcodeline": "nbuf++;"
    },
    {
        "line": 61,
        "fullcodeline": "rem -= obuf->len;"
    },
    {
        "line": 71,
        "fullcodeline": "cs.move_pages = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "return -EPERM;"
    },
    {
        "line": 23,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 45,
        "fullcodeline": "if (rem >= ibuf->len) {"
    },
    {
        "line": 47,
        "fullcodeline": "ibuf->ops = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "pipe->curbuf = (pipe->curbuf + 1) & (pipe->buffers - 1);"
    },
    {
        "line": 49,
        "fullcodeline": "pipe->nrbufs--;"
    },
    {
        "line": 55,
        "fullcodeline": "obuf->flags &= ~PIPE_BUF_FLAG_GIFT;"
    },
    {
        "line": 56,
        "fullcodeline": "obuf->len = rem;"
    },
    {
        "line": 57,
        "fullcodeline": "ibuf->offset += obuf->len;"
    },
    {
        "line": 58,
        "fullcodeline": "ibuf->len -= obuf->len;"
    },
    {
        "line": 51,
        "fullcodeline": "if (!pipe_buf_get(pipe, ibuf))"
    }
]