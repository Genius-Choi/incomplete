[
    {
        "line": 3,
        "fullcodeline": "struct smb2_tree_disconnect_rsp *rsp = smb2_get_msg(work->response_buf);"
    },
    {
        "line": 4,
        "fullcodeline": "struct ksmbd_session *sess = work->sess;"
    },
    {
        "line": 5,
        "fullcodeline": "struct ksmbd_tree_connect *tcon = work->tcon;"
    },
    {
        "line": 7,
        "fullcodeline": "rsp->StructureSize = cpu_to_le16(4);"
    },
    {
        "line": 8,
        "fullcodeline": "inc_rfc1001_len(work->response_buf, 4);"
    },
    {
        "line": 10,
        "fullcodeline": "ksmbd_debug(SMB, \"request\\n\");"
    },
    {
        "line": 22,
        "fullcodeline": "ksmbd_close_tree_conn_fds(work);"
    },
    {
        "line": 23,
        "fullcodeline": "ksmbd_tree_conn_disconnect(sess, tcon);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!tcon) {"
    },
    {
        "line": 13,
        "fullcodeline": "struct smb2_tree_disconnect_req *req ="
    },
    {
        "line": 16,
        "fullcodeline": "ksmbd_debug(SMB, \"Invalid tid %d\\n\", req->hdr.Id.SyncId.TreeId);"
    },
    {
        "line": 17,
        "fullcodeline": "rsp->hdr.Status = STATUS_NETWORK_NAME_DELETED;"
    },
    {
        "line": 18,
        "fullcodeline": "smb2_set_err_rsp(work);"
    },
    {
        "line": 14,
        "fullcodeline": "smb2_get_msg(work->request_buf);"
    }
]