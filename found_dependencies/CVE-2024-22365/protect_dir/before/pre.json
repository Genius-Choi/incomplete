[
    {
        "line": 4,
        "fullcodeline": "char *p = strdup(path);"
    },
    {
        "line": 6,
        "fullcodeline": "char *dir = p;"
    },
    {
        "line": 7,
        "fullcodeline": "int dfd = AT_FDCWD;"
    },
    {
        "line": 10,
        "fullcodeline": "int flags = O_RDONLY;"
    },
    {
        "line": 11,
        "fullcodeline": "int rv = -1;"
    },
    {
        "line": 55,
        "fullcodeline": "rv = openat(dfd, dir, flags);"
    },
    {
        "line": 91,
        "fullcodeline": "save_errno = errno;"
    },
    {
        "line": 92,
        "fullcodeline": "free(p);"
    },
    {
        "line": 95,
        "fullcodeline": "errno = save_errno;"
    },
    {
        "line": 14,
        "fullcodeline": "if (p == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (*dir == '/') {"
    },
    {
        "line": 26,
        "fullcodeline": "while ((d=strchr(dir, '/')) != NULL) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (rv == -1) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (rv != -1) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (flags & O_NOFOLLOW) {"
    },
    {
        "line": 93,
        "fullcodeline": "if (dfd != AT_FDCWD && dfd >= 0)"
    },
    {
        "line": 19,
        "fullcodeline": "dfd = open(\"/\", flags);"
    },
    {
        "line": 23,
        "fullcodeline": "dir++;\t/* assume / is safe */"
    },
    {
        "line": 27,
        "fullcodeline": "*d = '\\0';"
    },
    {
        "line": 28,
        "fullcodeline": "dfd_next = openat(dfd, dir, flags);"
    },
    {
        "line": 35,
        "fullcodeline": "dfd = dfd_next;"
    },
    {
        "line": 51,
        "fullcodeline": "*d = '/';"
    },
    {
        "line": 52,
        "fullcodeline": "dir = d + 1;"
    },
    {
        "line": 61,
        "fullcodeline": "rv = openat(dfd, dir, flags);"
    },
    {
        "line": 94,
        "fullcodeline": "close(dfd);"
    },
    {
        "line": 20,
        "fullcodeline": "if (dfd == -1) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (dfd_next == -1) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (dfd != AT_FDCWD)"
    },
    {
        "line": 37,
        "fullcodeline": "if (fstat(dfd, &st) != 0) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (flags & O_NOFOLLOW) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (!do_mkdir || mkdirat(dfd, dir, mode) != 0) {"
    },
    {
        "line": 65,
        "fullcodeline": "if (fstat(rv, &st) != 0) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (!S_ISDIR(st.st_mode)) {"
    },
    {
        "line": 82,
        "fullcodeline": "if (protect_mount(rv, p, idata) == -1) {"
    },
    {
        "line": 34,
        "fullcodeline": "close(dfd);"
    },
    {
        "line": 66,
        "fullcodeline": "save_errno = errno;"
    },
    {
        "line": 67,
        "fullcodeline": "close(rv);"
    },
    {
        "line": 68,
        "fullcodeline": "rv = -1;"
    },
    {
        "line": 69,
        "fullcodeline": "errno = save_errno;"
    },
    {
        "line": 73,
        "fullcodeline": "close(rv);"
    },
    {
        "line": 74,
        "fullcodeline": "errno = ENOTDIR;"
    },
    {
        "line": 75,
        "fullcodeline": "rv = -1;"
    },
    {
        "line": 83,
        "fullcodeline": "save_errno = errno;"
    },
    {
        "line": 84,
        "fullcodeline": "close(rv);"
    },
    {
        "line": 85,
        "fullcodeline": "rv = -1;"
    },
    {
        "line": 86,
        "fullcodeline": "errno = save_errno;"
    },
    {
        "line": 43,
        "fullcodeline": "if (protect_mount(dfd, p, idata) == -1)"
    },
    {
        "line": 45,
        "fullcodeline": "} else if (st.st_uid != 0 || st.st_gid != 0 ||"
    },
    {
        "line": 46,
        "fullcodeline": "(st.st_mode & S_IWOTH)) {"
    },
    {
        "line": 48,
        "fullcodeline": "flags |= O_NOFOLLOW;"
    }
]