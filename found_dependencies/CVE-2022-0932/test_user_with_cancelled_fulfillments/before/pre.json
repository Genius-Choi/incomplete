[
    {
        "line": 7,
        "fullcodeline": "query = \"\"\""
    },
    {
        "line": 23,
        "fullcodeline": "user_id = graphene.Node.to_global_id(\"User\", customer_user.id)"
    },
    {
        "line": 24,
        "fullcodeline": "variables = {\"id\": user_id}"
    },
    {
        "line": 26,
        "fullcodeline": "response = staff_api_client.post_graphql(query, variables)"
    },
    {
        "line": 27,
        "fullcodeline": "content = get_graphql_content(response)"
    },
    {
        "line": 28,
        "fullcodeline": "order_id = graphene.Node.to_global_id("
    },
    {
        "line": 31,
        "fullcodeline": "data = content[\"data\"][\"user\"]"
    },
    {
        "line": 32,
        "fullcodeline": "order = data[\"orders\"][\"edges\"][0][\"node\"]"
    },
    {
        "line": 33,
        "fullcodeline": "assert order[\"id\"] == order_id"
    },
    {
        "line": 34,
        "fullcodeline": "fulfillments = order[\"fulfillments\"]"
    },
    {
        "line": 35,
        "fullcodeline": "assert len(fulfillments) == 2"
    },
    {
        "line": 36,
        "fullcodeline": "assert fulfillments[0][\"status\"] == FulfillmentStatus.FULFILLED.upper()"
    },
    {
        "line": 37,
        "fullcodeline": "assert fulfillments[1][\"status\"] == FulfillmentStatus.CANCELED.upper()"
    },
    {
        "line": 25,
        "fullcodeline": "staff_api_client.user.user_permissions.add(permission_manage_users)"
    }
]