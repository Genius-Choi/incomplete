[
    {
        "line": 12,
        "fullcodeline": "user = customer_user"
    },
    {
        "line": 13,
        "fullcodeline": "user.default_shipping_address.country = \"US\""
    },
    {
        "line": 17,
        "fullcodeline": "avatar_mock = MagicMock(spec=File)"
    },
    {
        "line": 18,
        "fullcodeline": "avatar_mock.name = \"image.jpg\""
    },
    {
        "line": 19,
        "fullcodeline": "user.avatar = avatar_mock"
    },
    {
        "line": 20,
        "fullcodeline": "user.save()"
    },
    {
        "line": 24,
        "fullcodeline": "query = FULL_USER_QUERY"
    },
    {
        "line": 25,
        "fullcodeline": "ID = graphene.Node.to_global_id(\"User\", customer_user.id)"
    },
    {
        "line": 26,
        "fullcodeline": "variables = {\"id\": ID}"
    },
    {
        "line": 30,
        "fullcodeline": "response = staff_api_client.post_graphql(query, variables)"
    },
    {
        "line": 31,
        "fullcodeline": "content = get_graphql_content(response)"
    },
    {
        "line": 32,
        "fullcodeline": "data = content[\"data\"][\"user\"]"
    },
    {
        "line": 33,
        "fullcodeline": "assert data[\"email\"] == user.email"
    },
    {
        "line": 34,
        "fullcodeline": "assert data[\"firstName\"] == user.first_name"
    },
    {
        "line": 35,
        "fullcodeline": "assert data[\"lastName\"] == user.last_name"
    },
    {
        "line": 36,
        "fullcodeline": "assert data[\"isStaff\"] == user.is_staff"
    },
    {
        "line": 37,
        "fullcodeline": "assert data[\"isActive\"] == user.is_active"
    },
    {
        "line": 38,
        "fullcodeline": "assert data[\"orders\"][\"totalCount\"] == user.orders.count()"
    },
    {
        "line": 39,
        "fullcodeline": "assert data[\"avatar\"][\"url\"]"
    },
    {
        "line": 40,
        "fullcodeline": "assert data[\"languageCode\"] == settings.LANGUAGE_CODE.upper()"
    },
    {
        "line": 41,
        "fullcodeline": "assert len(data[\"editableGroups\"]) == 0"
    },
    {
        "line": 43,
        "fullcodeline": "assert len(data[\"addresses\"]) == user.addresses.count()"
    },
    {
        "line": 56,
        "fullcodeline": "address = data[\"defaultShippingAddress\"]"
    },
    {
        "line": 57,
        "fullcodeline": "user_address = user.default_shipping_address"
    },
    {
        "line": 72,
        "fullcodeline": "address = data[\"defaultBillingAddress\"]"
    },
    {
        "line": 73,
        "fullcodeline": "user_address = user.default_billing_address"
    },
    {
        "line": 74,
        "fullcodeline": "assert address[\"firstName\"] == user_address.first_name"
    },
    {
        "line": 75,
        "fullcodeline": "assert address[\"lastName\"] == user_address.last_name"
    },
    {
        "line": 76,
        "fullcodeline": "assert address[\"companyName\"] == user_address.company_name"
    },
    {
        "line": 77,
        "fullcodeline": "assert address[\"streetAddress1\"] == user_address.street_address_1"
    },
    {
        "line": 78,
        "fullcodeline": "assert address[\"streetAddress2\"] == user_address.street_address_2"
    },
    {
        "line": 79,
        "fullcodeline": "assert address[\"city\"] == user_address.city"
    },
    {
        "line": 80,
        "fullcodeline": "assert address[\"cityArea\"] == user_address.city_area"
    },
    {
        "line": 81,
        "fullcodeline": "assert address[\"postalCode\"] == user_address.postal_code"
    },
    {
        "line": 82,
        "fullcodeline": "assert address[\"country\"][\"code\"] == user_address.country.code"
    },
    {
        "line": 83,
        "fullcodeline": "assert address[\"countryArea\"] == user_address.country_area"
    },
    {
        "line": 84,
        "fullcodeline": "assert address[\"phone\"] == user_address.phone.as_e164"
    },
    {
        "line": 85,
        "fullcodeline": "assert address[\"isDefaultShippingAddress\"] is None"
    },
    {
        "line": 86,
        "fullcodeline": "assert address[\"isDefaultBillingAddress\"] is None"
    },
    {
        "line": 87,
        "fullcodeline": "assert len(data[\"giftCards\"]) == 1"
    },
    {
        "line": 88,
        "fullcodeline": "assert data[\"giftCards\"][\"edges\"][0][\"node\"][\"id\"] == graphene.Node.to_global_id("
    },
    {
        "line": 14,
        "fullcodeline": "user.default_shipping_address.save()"
    },
    {
        "line": 15,
        "fullcodeline": "user.addresses.add(address.get_copy())"
    },
    {
        "line": 22,
        "fullcodeline": "Group.objects.create(name=\"empty group\")"
    },
    {
        "line": 27,
        "fullcodeline": "staff_api_client.user.user_permissions.add("
    },
    {
        "line": 44,
        "fullcodeline": "for address in data[\"addresses\"]:"
    },
    {
        "line": 58,
        "fullcodeline": "assert address[\"firstName\"] == user_address.first_name"
    },
    {
        "line": 59,
        "fullcodeline": "assert address[\"lastName\"] == user_address.last_name"
    },
    {
        "line": 60,
        "fullcodeline": "assert address[\"companyName\"] == user_address.company_name"
    },
    {
        "line": 61,
        "fullcodeline": "assert address[\"streetAddress1\"] == user_address.street_address_1"
    },
    {
        "line": 62,
        "fullcodeline": "assert address[\"streetAddress2\"] == user_address.street_address_2"
    },
    {
        "line": 63,
        "fullcodeline": "assert address[\"city\"] == user_address.city"
    },
    {
        "line": 64,
        "fullcodeline": "assert address[\"cityArea\"] == user_address.city_area"
    },
    {
        "line": 65,
        "fullcodeline": "assert address[\"postalCode\"] == user_address.postal_code"
    },
    {
        "line": 66,
        "fullcodeline": "assert address[\"country\"][\"code\"] == user_address.country.code"
    },
    {
        "line": 67,
        "fullcodeline": "assert address[\"countryArea\"] == user_address.country_area"
    },
    {
        "line": 68,
        "fullcodeline": "assert address[\"phone\"] == user_address.phone.as_e164"
    },
    {
        "line": 69,
        "fullcodeline": "assert address[\"isDefaultShippingAddress\"] is None"
    },
    {
        "line": 70,
        "fullcodeline": "assert address[\"isDefaultBillingAddress\"] is None"
    },
    {
        "line": 46,
        "fullcodeline": "address_id = graphene.Node.to_global_id("
    },
    {
        "line": 49,
        "fullcodeline": "assert address[\"id\"] == address_id"
    },
    {
        "line": 51,
        "fullcodeline": "address_id = graphene.Node.to_global_id("
    },
    {
        "line": 54,
        "fullcodeline": "assert address[\"id\"] == address_id"
    }
]