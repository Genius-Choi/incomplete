[
    {
        "line": 12,
        "fullcodeline": "group = permission_group_manage_users"
    },
    {
        "line": 15,
        "fullcodeline": "staff_user = group.user_set.first()"
    },
    {
        "line": 19,
        "fullcodeline": "avatar_mock = MagicMock(spec=File)"
    },
    {
        "line": 20,
        "fullcodeline": "avatar_mock.name = \"image.jpg\""
    },
    {
        "line": 21,
        "fullcodeline": "staff_user.avatar = avatar_mock"
    },
    {
        "line": 22,
        "fullcodeline": "staff_user.save()"
    },
    {
        "line": 24,
        "fullcodeline": "query = \"\"\""
    },
    {
        "line": 92,
        "fullcodeline": "user_id = graphene.Node.to_global_id(\"User\", staff_user.pk)"
    },
    {
        "line": 93,
        "fullcodeline": "variables = {\"id\": user_id}"
    },
    {
        "line": 94,
        "fullcodeline": "response = staff_api_client.post_graphql("
    },
    {
        "line": 97,
        "fullcodeline": "content = get_graphql_content(response)"
    },
    {
        "line": 98,
        "fullcodeline": "data = content[\"data\"][\"user\"]"
    },
    {
        "line": 99,
        "fullcodeline": "assert data"
    },
    {
        "line": 13,
        "fullcodeline": "group.permissions.add(permission_manage_products)"
    },
    {
        "line": 16,
        "fullcodeline": "staff_user.user_permissions.add(permission_manage_orders, permission_manage_staff)"
    },
    {
        "line": 17,
        "fullcodeline": "staff_user.addresses.add(address.get_copy())"
    },
    {
        "line": 95,
        "fullcodeline": "query, variables, permissions=[permission_manage_staff]"
    }
]