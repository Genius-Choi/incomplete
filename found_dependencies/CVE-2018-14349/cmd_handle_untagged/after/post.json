[
    {
        "line": 3,
        "fullcodeline": "unsigned int count = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "char *s = imap_next_word(idata->buf);"
    },
    {
        "line": 5,
        "fullcodeline": "char *pn = imap_next_word(s);"
    },
    {
        "line": 7,
        "fullcodeline": "if ((idata->state >= IMAP_SELECTED) && isdigit((unsigned char) *s))"
    },
    {
        "line": 9,
        "fullcodeline": "pn = s;"
    },
    {
        "line": 10,
        "fullcodeline": "s = imap_next_word(s);"
    },
    {
        "line": 15,
        "fullcodeline": "if (mutt_str_strncasecmp(\"EXISTS\", s, 6) == 0)"
    },
    {
        "line": 17,
        "fullcodeline": "mutt_debug(2, \"Handling EXISTS\\n\");"
    },
    {
        "line": 52,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"CAPABILITY\", s, 10) == 0)"
    },
    {
        "line": 20,
        "fullcodeline": "if (mutt_str_atoui(pn, &count) < 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (!(idata->reopen & IMAP_EXPUNGE_PENDING) && count < idata->max_msn)"
    },
    {
        "line": 53,
        "fullcodeline": "cmd_parse_capability(idata, s);"
    },
    {
        "line": 22,
        "fullcodeline": "mutt_debug(1, \"Malformed EXISTS: '%s'\\n\", pn);"
    },
    {
        "line": 29,
        "fullcodeline": "mutt_debug(1, \"Message count is out of sync\\n\");"
    },
    {
        "line": 47,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"EXPUNGE\", s, 7) == 0)"
    },
    {
        "line": 48,
        "fullcodeline": "cmd_parse_expunge(idata, pn);"
    },
    {
        "line": 54,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"OK [CAPABILITY\", s, 14) == 0)"
    },
    {
        "line": 34,
        "fullcodeline": "else if (count == idata->max_msn)"
    },
    {
        "line": 55,
        "fullcodeline": "cmd_parse_capability(idata, pn);"
    },
    {
        "line": 35,
        "fullcodeline": "mutt_debug(3, \"superfluous EXISTS message.\\n\");"
    },
    {
        "line": 49,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"FETCH\", s, 5) == 0)"
    },
    {
        "line": 43,
        "fullcodeline": "idata->new_mail_count = count;"
    },
    {
        "line": 50,
        "fullcodeline": "cmd_parse_fetch(idata, pn);"
    },
    {
        "line": 56,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"OK [CAPABILITY\", pn, 14) == 0)"
    },
    {
        "line": 38,
        "fullcodeline": "if (!(idata->reopen & IMAP_EXPUNGE_PENDING))"
    },
    {
        "line": 57,
        "fullcodeline": "cmd_parse_capability(idata, imap_next_word(pn));"
    },
    {
        "line": 40,
        "fullcodeline": "mutt_debug(2, \"New mail in %s - %d messages total.\\n\", idata->mailbox, count);"
    },
    {
        "line": 41,
        "fullcodeline": "idata->reopen |= IMAP_NEWMAIL_PENDING;"
    },
    {
        "line": 58,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"LIST\", s, 4) == 0)"
    },
    {
        "line": 59,
        "fullcodeline": "cmd_parse_list(idata, s);"
    },
    {
        "line": 60,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"LSUB\", s, 4) == 0)"
    },
    {
        "line": 61,
        "fullcodeline": "cmd_parse_lsub(idata, s);"
    },
    {
        "line": 62,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"MYRIGHTS\", s, 8) == 0)"
    },
    {
        "line": 63,
        "fullcodeline": "cmd_parse_myrights(idata, s);"
    },
    {
        "line": 64,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"SEARCH\", s, 6) == 0)"
    },
    {
        "line": 65,
        "fullcodeline": "cmd_parse_search(idata, s);"
    },
    {
        "line": 66,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"STATUS\", s, 6) == 0)"
    },
    {
        "line": 67,
        "fullcodeline": "cmd_parse_status(idata, s);"
    },
    {
        "line": 68,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"ENABLED\", s, 7) == 0)"
    },
    {
        "line": 69,
        "fullcodeline": "cmd_parse_enabled(idata, s);"
    },
    {
        "line": 70,
        "fullcodeline": "else if (mutt_str_strncasecmp(\"BYE\", s, 3) == 0)"
    },
    {
        "line": 72,
        "fullcodeline": "mutt_debug(2, \"Handling BYE\\n\");"
    },
    {
        "line": 79,
        "fullcodeline": "s += 3;"
    },
    {
        "line": 80,
        "fullcodeline": "SKIPWS(s);"
    },
    {
        "line": 81,
        "fullcodeline": "mutt_error(\"%s\", s);"
    },
    {
        "line": 82,
        "fullcodeline": "cmd_handle_fatal(idata);"
    },
    {
        "line": 75,
        "fullcodeline": "if (idata->status == IMAP_BYE)"
    },
    {
        "line": 84,
        "fullcodeline": "return -1;"
    },
    {
        "line": 86,
        "fullcodeline": "else if (ImapServernoise && (mutt_str_strncasecmp(\"NO\", s, 2) == 0))"
    },
    {
        "line": 88,
        "fullcodeline": "mutt_debug(2, \"Handling untagged NO\\n\");"
    },
    {
        "line": 91,
        "fullcodeline": "mutt_error(\"%s\", s + 2);"
    }
]