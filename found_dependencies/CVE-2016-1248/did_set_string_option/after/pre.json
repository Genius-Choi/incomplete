[
    {
        "line": 9,
        "fullcodeline": "char_u\t*errmsg = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "int\t\tdid_chartab = FALSE;"
    },
    {
        "line": 13,
        "fullcodeline": "long_u\tfree_oldval = (options[opt_idx].flags & P_ALLOCED);"
    },
    {
        "line": 21,
        "fullcodeline": "gvarp = (char_u **)get_varp_scope(&(options[opt_idx]), OPT_GLOBAL);"
    },
    {
        "line": 1568,
        "fullcodeline": "check_redraw(options[opt_idx].flags);"
    },
    {
        "line": 24,
        "fullcodeline": "if ((secure"
    },
    {
        "line": 1458,
        "fullcodeline": "if (errmsg != NULL)"
    },
    {
        "line": 1560,
        "fullcodeline": "if (curwin->w_curswant != MAXCOL"
    },
    {
        "line": 28,
        "fullcodeline": ") && (options[opt_idx].flags & P_SECURE))"
    },
    {
        "line": 30,
        "fullcodeline": "errmsg = e_secure;"
    },
    {
        "line": 1462,
        "fullcodeline": "*varp = oldval;"
    },
    {
        "line": 1561,
        "fullcodeline": "&& (options[opt_idx].flags & (P_CURSWANT | P_RALL)) != 0)"
    },
    {
        "line": 1562,
        "fullcodeline": "curwin->w_set_curswant = TRUE;"
    },
    {
        "line": 1468,
        "fullcodeline": "if (varp == &p_hl)"
    },
    {
        "line": 36,
        "fullcodeline": "else if ((options[opt_idx].flags & P_NFNAME)"
    },
    {
        "line": 1461,
        "fullcodeline": "free_string_option(*varp);"
    },
    {
        "line": 1467,
        "fullcodeline": "(void)init_chartab();"
    },
    {
        "line": 1469,
        "fullcodeline": "(void)highlight_changed();"
    },
    {
        "line": 1489,
        "fullcodeline": "if ((opt_flags & (OPT_LOCAL | OPT_GLOBAL)) == 0"
    },
    {
        "line": 37,
        "fullcodeline": "&& vim_strpbrk(*varp, (char_u *)\"/\\\\*?[|<>\") != NULL)"
    },
    {
        "line": 39,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1483,
        "fullcodeline": "free_string_option(oldval);"
    },
    {
        "line": 1485,
        "fullcodeline": "options[opt_idx].flags |= P_ALLOCED;"
    },
    {
        "line": 1490,
        "fullcodeline": "&& ((int)options[opt_idx].indir & PV_BOTH))"
    },
    {
        "line": 1494,
        "fullcodeline": "p = get_varp_scope(&(options[opt_idx]), OPT_LOCAL);"
    },
    {
        "line": 1495,
        "fullcodeline": "free_string_option(*(char_u **)p);"
    },
    {
        "line": 1496,
        "fullcodeline": "*(char_u **)p = empty_option;"
    },
    {
        "line": 1487,
        "fullcodeline": "options[opt_idx].flags &= ~P_ALLOCED;"
    },
    {
        "line": 43,
        "fullcodeline": "else if (varp == &T_NAME)"
    },
    {
        "line": 1500,
        "fullcodeline": "else if (!(opt_flags & OPT_LOCAL) && opt_flags != OPT_GLOBAL)"
    },
    {
        "line": 1501,
        "fullcodeline": "set_string_option_global(opt_idx, varp);"
    },
    {
        "line": 45,
        "fullcodeline": "if (T_NAME[0] == NUL)"
    },
    {
        "line": 46,
        "fullcodeline": "errmsg = (char_u *)N_(\"E529: Cannot set 'term' to empty string\");"
    },
    {
        "line": 61,
        "fullcodeline": "else if (gvarp == &p_bkc)"
    },
    {
        "line": 63,
        "fullcodeline": "char_u\t\t*bkc = p_bkc;"
    },
    {
        "line": 64,
        "fullcodeline": "unsigned int\t*flags = &bkc_flags;"
    },
    {
        "line": 53,
        "fullcodeline": "else if (set_termname(T_NAME) == FAIL)"
    },
    {
        "line": 66,
        "fullcodeline": "if (opt_flags & OPT_LOCAL)"
    },
    {
        "line": 72,
        "fullcodeline": "if ((opt_flags & OPT_LOCAL) && *bkc == NUL)"
    },
    {
        "line": 54,
        "fullcodeline": "errmsg = (char_u *)N_(\"E522: Not found in termcap\");"
    },
    {
        "line": 68,
        "fullcodeline": "bkc = curbuf->b_p_bkc;"
    },
    {
        "line": 69,
        "fullcodeline": "flags = &curbuf->b_bkc_flags;"
    },
    {
        "line": 74,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 91,
        "fullcodeline": "else if (varp == &p_bex || varp == &p_pm)"
    },
    {
        "line": 57,
        "fullcodeline": "redraw_later_clear();"
    },
    {
        "line": 77,
        "fullcodeline": "if (opt_strings_flags(bkc, p_bkc_values, flags, TRUE) != OK)"
    },
    {
        "line": 79,
        "fullcodeline": "if ((((int)*flags & BKC_AUTO) != 0)"
    },
    {
        "line": 93,
        "fullcodeline": "if (STRCMP(*p_bex == '.' ? p_bex + 1 : p_bex,"
    },
    {
        "line": 78,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 84,
        "fullcodeline": "(void)opt_strings_flags(oldval, p_bkc_values, flags, TRUE);"
    },
    {
        "line": 85,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 95,
        "fullcodeline": "errmsg = (char_u *)N_(\"E589: 'backupext' and 'patchmode' are equal\");"
    },
    {
        "line": 111,
        "fullcodeline": "else if (  varp == &p_isi"
    },
    {
        "line": 81,
        "fullcodeline": "+ (((int)*flags & BKC_NO) != 0) != 1)"
    },
    {
        "line": 94,
        "fullcodeline": "*p_pm == '.' ? p_pm + 1 : p_pm) == 0)"
    },
    {
        "line": 114,
        "fullcodeline": "|| varp == &p_isf)"
    },
    {
        "line": 80,
        "fullcodeline": "+ (((int)*flags & BKC_YES) != 0)"
    },
    {
        "line": 113,
        "fullcodeline": "|| varp == &p_isp"
    },
    {
        "line": 116,
        "fullcodeline": "if (init_chartab() == FAIL)"
    },
    {
        "line": 112,
        "fullcodeline": "|| varp == &(curbuf->b_p_isk)"
    },
    {
        "line": 118,
        "fullcodeline": "did_chartab = TRUE;\t    /* need to restore it below */"
    },
    {
        "line": 119,
        "fullcodeline": "errmsg = e_invarg;\t    /* error in value */"
    },
    {
        "line": 124,
        "fullcodeline": "else if (varp == &p_hf)"
    },
    {
        "line": 129,
        "fullcodeline": "vim_setenv((char_u *)\"VIM\", (char_u *)\"\");"
    },
    {
        "line": 130,
        "fullcodeline": "didset_vim = FALSE;"
    },
    {
        "line": 134,
        "fullcodeline": "vim_setenv((char_u *)\"VIMRUNTIME\", (char_u *)\"\");"
    },
    {
        "line": 135,
        "fullcodeline": "didset_vimruntime = FALSE;"
    },
    {
        "line": 164,
        "fullcodeline": "else if (varp == &p_hl)"
    },
    {
        "line": 166,
        "fullcodeline": "if (highlight_changed() == FAIL)"
    },
    {
        "line": 167,
        "fullcodeline": "errmsg = e_invarg;\t/* invalid flags */"
    },
    {
        "line": 171,
        "fullcodeline": "else if (gvarp == &p_nf)"
    },
    {
        "line": 173,
        "fullcodeline": "if (check_opt_strings(*varp, p_nf_values, TRUE) != OK)"
    },
    {
        "line": 174,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 223,
        "fullcodeline": "else if (varp == &p_bg)"
    },
    {
        "line": 225,
        "fullcodeline": "if (check_opt_strings(p_bg, p_bg_values, FALSE) == OK)"
    },
    {
        "line": 231,
        "fullcodeline": "init_highlight(FALSE, FALSE);"
    },
    {
        "line": 253,
        "fullcodeline": "else if (varp == &p_wim)"
    },
    {
        "line": 249,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 255,
        "fullcodeline": "if (check_opt_wim() == FAIL)"
    },
    {
        "line": 256,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 445,
        "fullcodeline": "else if (gvarp == &p_ff)"
    },
    {
        "line": 447,
        "fullcodeline": "if (!curbuf->b_p_ma && !(opt_flags & OPT_GLOBAL))"
    },
    {
        "line": 448,
        "fullcodeline": "errmsg = e_modifiable;"
    },
    {
        "line": 471,
        "fullcodeline": "else if (varp == &p_ffs)"
    },
    {
        "line": 449,
        "fullcodeline": "else if (check_opt_strings(*varp, p_ff_values, FALSE) != OK)"
    },
    {
        "line": 473,
        "fullcodeline": "if (check_opt_strings(p_ffs, p_ff_values, TRUE) != OK)"
    },
    {
        "line": 450,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 474,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 558,
        "fullcodeline": "else if (gvarp == &p_mps)"
    },
    {
        "line": 462,
        "fullcodeline": "ml_setflags(curbuf);"
    },
    {
        "line": 454,
        "fullcodeline": "if (get_fileformat(curbuf) == EOL_DOS)"
    },
    {
        "line": 465,
        "fullcodeline": "if (get_fileformat(curbuf) == EOL_MAC || *oldval == 'm')"
    },
    {
        "line": 478,
        "fullcodeline": "if (*p_ffs == NUL)"
    },
    {
        "line": 455,
        "fullcodeline": "curbuf->b_p_tx = TRUE;"
    },
    {
        "line": 466,
        "fullcodeline": "redraw_curbuf_later(NOT_VALID);"
    },
    {
        "line": 479,
        "fullcodeline": "p_ta = FALSE;"
    },
    {
        "line": 590,
        "fullcodeline": "for (p = *varp; *p != NUL; p += 4)"
    },
    {
        "line": 637,
        "fullcodeline": "else if (varp == &p_lcs)"
    },
    {
        "line": 457,
        "fullcodeline": "curbuf->b_p_tx = FALSE;"
    },
    {
        "line": 481,
        "fullcodeline": "p_ta = TRUE;"
    },
    {
        "line": 639,
        "fullcodeline": "errmsg = set_chars_option(varp);"
    },
    {
        "line": 592,
        "fullcodeline": "if (p[1] != ':' || p[2] == NUL || (p[3] != NUL && p[3] != ','))"
    },
    {
        "line": 597,
        "fullcodeline": "if (p[3] == NUL)"
    },
    {
        "line": 594,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 659,
        "fullcodeline": "else if (varp == &p_vfile)"
    },
    {
        "line": 661,
        "fullcodeline": "verbose_stop();"
    },
    {
        "line": 662,
        "fullcodeline": "if (*p_vfile != NUL && verbose_open() == FAIL)"
    },
    {
        "line": 663,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 731,
        "fullcodeline": "else if (istermoption(&options[opt_idx]) && full_screen)"
    },
    {
        "line": 754,
        "fullcodeline": "ttest(FALSE);"
    },
    {
        "line": 734,
        "fullcodeline": "if (varp == &T_CCO)"
    },
    {
        "line": 755,
        "fullcodeline": "if (varp == &T_ME)"
    },
    {
        "line": 736,
        "fullcodeline": "int colors = atoi((char *)T_CCO);"
    },
    {
        "line": 757,
        "fullcodeline": "out_str(T_ME);"
    },
    {
        "line": 758,
        "fullcodeline": "redraw_later(CLEAR);"
    },
    {
        "line": 940,
        "fullcodeline": "else if (varp == &p_sel)"
    },
    {
        "line": 741,
        "fullcodeline": "if (colors != t_colors)"
    },
    {
        "line": 743,
        "fullcodeline": "t_colors = colors;"
    },
    {
        "line": 751,
        "fullcodeline": "init_highlight(TRUE, FALSE);"
    },
    {
        "line": 942,
        "fullcodeline": "if (*p_sel == NUL"
    },
    {
        "line": 744,
        "fullcodeline": "if (t_colors <= 1)"
    },
    {
        "line": 943,
        "fullcodeline": "|| check_opt_strings(p_sel, p_sel_values, FALSE) != OK)"
    },
    {
        "line": 944,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 948,
        "fullcodeline": "else if (varp == &p_slm)"
    },
    {
        "line": 748,
        "fullcodeline": "T_CCO = empty_option;"
    },
    {
        "line": 950,
        "fullcodeline": "if (check_opt_strings(p_slm, p_slm_values, TRUE) != OK)"
    },
    {
        "line": 747,
        "fullcodeline": "vim_free(T_CCO);"
    },
    {
        "line": 951,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 965,
        "fullcodeline": "else if (varp == &p_km)"
    },
    {
        "line": 967,
        "fullcodeline": "if (check_opt_strings(p_km, p_km_values, TRUE) != OK)"
    },
    {
        "line": 968,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 977,
        "fullcodeline": "else if (varp == &p_mousem)"
    },
    {
        "line": 971,
        "fullcodeline": "km_stopsel = (vim_strchr(p_km, 'o') != NULL);"
    },
    {
        "line": 972,
        "fullcodeline": "km_startsel = (vim_strchr(p_km, 'a') != NULL);"
    },
    {
        "line": 979,
        "fullcodeline": "if (check_opt_strings(p_mousem, p_mousem_values, FALSE) != OK)"
    },
    {
        "line": 980,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 990,
        "fullcodeline": "else if (varp == &p_swb)"
    },
    {
        "line": 992,
        "fullcodeline": "if (opt_strings_flags(p_swb, p_swb_values, &swb_flags, TRUE) != OK)"
    },
    {
        "line": 993,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 997,
        "fullcodeline": "else if (varp == &p_debug)"
    },
    {
        "line": 999,
        "fullcodeline": "if (check_opt_strings(p_debug, p_debug_values, TRUE) != OK)"
    },
    {
        "line": 1000,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1004,
        "fullcodeline": "else if (varp == &p_dy)"
    },
    {
        "line": 1006,
        "fullcodeline": "if (opt_strings_flags(p_dy, p_dy_values, &dy_flags, TRUE) != OK)"
    },
    {
        "line": 1007,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1208,
        "fullcodeline": "else if (varp == &p_pt)"
    },
    {
        "line": 1009,
        "fullcodeline": "(void)init_chartab();"
    },
    {
        "line": 1212,
        "fullcodeline": "(void)replace_termcodes(p_pt, &p, TRUE, TRUE, FALSE);"
    },
    {
        "line": 1224,
        "fullcodeline": "else if (varp == &p_bs)"
    },
    {
        "line": 1213,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 1217,
        "fullcodeline": "p_pt = p;"
    },
    {
        "line": 1218,
        "fullcodeline": "new_value_alloced = TRUE;"
    },
    {
        "line": 1226,
        "fullcodeline": "if (VIM_ISDIGIT(*p_bs))"
    },
    {
        "line": 1234,
        "fullcodeline": "else if (varp == &p_bo)"
    },
    {
        "line": 1216,
        "fullcodeline": "free_string_option(p_pt);"
    },
    {
        "line": 1228,
        "fullcodeline": "if (*p_bs > '2' || p_bs[1] != NUL)"
    },
    {
        "line": 1229,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1231,
        "fullcodeline": "else if (check_opt_strings(p_bs, p_bs_values, TRUE) != OK)"
    },
    {
        "line": 1236,
        "fullcodeline": "if (opt_strings_flags(p_bo, p_bo_values, &bo_flags, TRUE) != OK)"
    },
    {
        "line": 1232,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1237,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1241,
        "fullcodeline": "else if (gvarp == &p_tc)"
    },
    {
        "line": 1245,
        "fullcodeline": "if (opt_flags & OPT_LOCAL)"
    },
    {
        "line": 1256,
        "fullcodeline": "if ((opt_flags & OPT_LOCAL) && *p == NUL)"
    },
    {
        "line": 1418,
        "fullcodeline": "p = NULL;"
    },
    {
        "line": 1247,
        "fullcodeline": "p = curbuf->b_p_tc;"
    },
    {
        "line": 1248,
        "fullcodeline": "flags = &curbuf->b_tc_flags;"
    },
    {
        "line": 1258,
        "fullcodeline": "*flags = 0;"
    },
    {
        "line": 1419,
        "fullcodeline": "if (varp == &p_ww)"
    },
    {
        "line": 1421,
        "fullcodeline": "if (varp == &p_shm)"
    },
    {
        "line": 1444,
        "fullcodeline": "if (p != NULL)"
    },
    {
        "line": 1252,
        "fullcodeline": "p = p_tc;"
    },
    {
        "line": 1253,
        "fullcodeline": "flags = &tc_flags;"
    },
    {
        "line": 1420,
        "fullcodeline": "p = (char_u *)WW_ALL;"
    },
    {
        "line": 1422,
        "fullcodeline": "p = (char_u *)SHM_ALL;"
    },
    {
        "line": 1259,
        "fullcodeline": "else if (*p == NUL"
    },
    {
        "line": 1446,
        "fullcodeline": "for (s = *varp; *s; ++s)"
    },
    {
        "line": 1260,
        "fullcodeline": "|| opt_strings_flags(p, p_tc_values, flags, FALSE) != OK)"
    },
    {
        "line": 1261,
        "fullcodeline": "errmsg = e_invarg;"
    },
    {
        "line": 1423,
        "fullcodeline": "else if (varp == &(p_cpo))"
    },
    {
        "line": 1447,
        "fullcodeline": "if (vim_strchr(p, *s) == NULL)"
    },
    {
        "line": 1424,
        "fullcodeline": "p = (char_u *)CPO_ALL;"
    },
    {
        "line": 1449,
        "fullcodeline": "errmsg = illegal_char(errbuf, *s);"
    },
    {
        "line": 1425,
        "fullcodeline": "else if (varp == &(curbuf->b_p_fo))"
    },
    {
        "line": 1426,
        "fullcodeline": "p = (char_u *)FO_ALL;"
    },
    {
        "line": 1431,
        "fullcodeline": "else if (varp == &p_mouse)"
    },
    {
        "line": 1436,
        "fullcodeline": "if (*p_mouse != NUL)"
    },
    {
        "line": 1437,
        "fullcodeline": "errmsg = (char_u *)N_(\"E538: No mouse support\");"
    }
]