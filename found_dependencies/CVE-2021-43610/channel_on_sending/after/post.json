[
    {
        "line": 3,
        "fullcodeline": "belle_sip_header_content_length_t* content_length = (belle_sip_header_content_length_t*)belle_sip_message_get_header(msg,\"Content-Length\");"
    },
    {
        "line": 6,
        "fullcodeline": "belle_sip_provider_t *prov=BELLE_SIP_PROVIDER(obj);"
    },
    {
        "line": 30,
        "fullcodeline": "refer_to = belle_sip_message_get_header_by_type(msg, belle_sip_header_refer_to_t);"
    },
    {
        "line": 8,
        "fullcodeline": "if (belle_sip_message_is_request(msg)){"
    },
    {
        "line": 25,
        "fullcodeline": "for (contacts=belle_sip_message_get_headers(msg,\"Contact\");contacts!=NULL;contacts=contacts->next){"
    },
    {
        "line": 36,
        "fullcodeline": "if (!content_length"
    },
    {
        "line": 26,
        "fullcodeline": "contact=(belle_sip_header_address_t*)contacts->data;"
    },
    {
        "line": 27,
        "fullcodeline": "fix_automatic_header_address(prov, chan, contact);"
    },
    {
        "line": 31,
        "fullcodeline": "if (refer_to) fix_automatic_header_address(prov, chan, (belle_sip_header_address_t*)refer_to);"
    },
    {
        "line": 39,
        "fullcodeline": "&& strcasecmp(\"udp\",belle_sip_channel_get_transport_name(chan))!=0"
    },
    {
        "line": 42,
        "fullcodeline": "content_length = belle_sip_header_content_length_create(0);"
    },
    {
        "line": 43,
        "fullcodeline": "belle_sip_message_add_header(msg,(belle_sip_header_t*)content_length);"
    },
    {
        "line": 11,
        "fullcodeline": "if (strcmp(\"CANCEL\",belle_sip_request_get_method(BELLE_SIP_REQUEST(msg))) != 0)"
    },
    {
        "line": 16,
        "fullcodeline": "for (rroutes=belle_sip_message_get_headers(msg,\"Record-Route\");rroutes!=NULL;rroutes=rroutes->next){"
    },
    {
        "line": 37,
        "fullcodeline": "&& belle_sip_message_get_body_size(msg) == 0 /*if body present, content_length is automatically added at channel level*/"
    },
    {
        "line": 12,
        "fullcodeline": "fix_outgoing_via(prov, chan, msg);"
    },
    {
        "line": 17,
        "fullcodeline": "belle_sip_header_record_route_t* rr=(belle_sip_header_record_route_t*)rroutes->data;"
    },
    {
        "line": 18,
        "fullcodeline": "if (belle_sip_header_record_route_get_auto_outgoing(rr)) {"
    },
    {
        "line": 19,
        "fullcodeline": "belle_sip_uri_t *rr_uri = belle_sip_channel_create_routable_uri(chan);"
    },
    {
        "line": 20,
        "fullcodeline": "belle_sip_header_address_set_uri((belle_sip_header_address_t*) rr, rr_uri);"
    }
]