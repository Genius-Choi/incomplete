[
    {
        "line": 6,
        "fullcodeline": "struct ath_hw *ah = wmi->drv_priv->ah;"
    },
    {
        "line": 7,
        "fullcodeline": "struct ath_common *common = ath9k_hw_common(ah);"
    },
    {
        "line": 8,
        "fullcodeline": "u16 headroom = sizeof(struct htc_frame_hdr) +"
    },
    {
        "line": 12,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "skb = alloc_skb(headroom + cmd_len, GFP_ATOMIC);"
    },
    {
        "line": 21,
        "fullcodeline": "skb_reserve(skb, headroom);"
    },
    {
        "line": 27,
        "fullcodeline": "mutex_lock(&wmi->op_mutex);"
    },
    {
        "line": 36,
        "fullcodeline": "wmi->cmd_rsp_buf = rsp_buf;"
    },
    {
        "line": 37,
        "fullcodeline": "wmi->cmd_rsp_len = rsp_len;"
    },
    {
        "line": 39,
        "fullcodeline": "ret = ath9k_wmi_cmd_issue(wmi, skb, cmd_id, cmd_len);"
    },
    {
        "line": 43,
        "fullcodeline": "time_left = wait_for_completion_timeout(&wmi->cmd_wait, timeout);"
    },
    {
        "line": 14,
        "fullcodeline": "if (ah->ah_flags & AH_UNPLUGGED)"
    },
    {
        "line": 18,
        "fullcodeline": "if (!skb)"
    },
    {
        "line": 30,
        "fullcodeline": "if (unlikely(wmi->stopped)) {"
    },
    {
        "line": 57,
        "fullcodeline": "ath_dbg(common, WMI, \"WMI failure for: %s\\n\", wmi_cmd_to_name(cmd_id));"
    },
    {
        "line": 9,
        "fullcodeline": "sizeof(struct wmi_cmd_hdr);"
    },
    {
        "line": 23,
        "fullcodeline": "if (cmd_len != 0 && cmd_buf != NULL) {"
    },
    {
        "line": 24,
        "fullcodeline": "skb_put_data(skb, cmd_buf, cmd_len);"
    },
    {
        "line": 31,
        "fullcodeline": "ret = -EPROTO;"
    },
    {
        "line": 19,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 46,
        "fullcodeline": "wmi_cmd_to_name(cmd_id));"
    },
    {
        "line": 49,
        "fullcodeline": "return -ETIMEDOUT;"
    }
]