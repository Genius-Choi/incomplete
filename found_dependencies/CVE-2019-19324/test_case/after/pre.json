[
    {
        "line": 9,
        "fullcodeline": "int result = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "cjwt_t *jwt = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "char jwt_buf[65535];"
    },
    {
        "line": 12,
        "fullcodeline": "char pem_buf[8192];"
    },
    {
        "line": 13,
        "fullcodeline": "jwt_fname = test_list[_i].jwt_file_name;"
    },
    {
        "line": 14,
        "fullcodeline": "key_str = test_list[_i].key;"
    },
    {
        "line": 15,
        "fullcodeline": "key_len = strlen( key_str );"
    },
    {
        "line": 16,
        "fullcodeline": "expected = test_list[_i].expected;"
    },
    {
        "line": 17,
        "fullcodeline": "decode_test_name = test_list[_i].decode_test_name;"
    },
    {
        "line": 39,
        "fullcodeline": "printf (\"key in file %d, keylen = %d\\n\", test_list[_i].is_key_in_file,"
    },
    {
        "line": 43,
        "fullcodeline": "printf( \"--- Input jwt : %s \\n\", jwt_fname );"
    },
    {
        "line": 44,
        "fullcodeline": "jwt_bytes = read_file( jwt_fname, jwt_buf, sizeof( jwt_buf ) );"
    },
    {
        "line": 19,
        "fullcodeline": "if( key_len == 0 ) {"
    },
    {
        "line": 46,
        "fullcodeline": "if( jwt_bytes > 0 ) {"
    },
    {
        "line": 52,
        "fullcodeline": "if( expected == result ) {"
    },
    {
        "line": 61,
        "fullcodeline": "CU_ASSERT ( expected == result );"
    },
    {
        "line": 20,
        "fullcodeline": "key_str = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "printf( \"\\n--- Test %s expected good\\n\", decode_test_name );"
    },
    {
        "line": 47,
        "fullcodeline": "result = cjwt_decode( jwt_buf, 0, &jwt, ( const uint8_t * )key_str, key_len );"
    },
    {
        "line": 54,
        "fullcodeline": "pass_cnt += 1;"
    },
    {
        "line": 37,
        "fullcodeline": "printf( \"\\n--- Test %s expected bad\\n\", decode_test_name );"
    },
    {
        "line": 49,
        "fullcodeline": "result = jwt_bytes;"
    },
    {
        "line": 56,
        "fullcodeline": "printf( \"\\e[01;31m--- FAILED: %s (%d != %d)\\e[00m\\n\", decode_test_name, expected, result );"
    },
    {
        "line": 22,
        "fullcodeline": "key_len = read_file( key_str, pem_buf, sizeof( pem_buf ) );"
    },
    {
        "line": 24,
        "fullcodeline": "if( key_len >= 0 ) {"
    },
    {
        "line": 25,
        "fullcodeline": "key_str = ( const char * ) pem_buf;"
    },
    {
        "line": 27,
        "fullcodeline": "printf( \"Error reading pem file\\n\" );"
    },
    {
        "line": 28,
        "fullcodeline": "CU_ASSERT ( 0 == 1 );"
    },
    {
        "line": 29,
        "fullcodeline": "fail_cnt += 1;"
    }
]