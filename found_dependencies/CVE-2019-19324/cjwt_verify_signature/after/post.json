[
    {
        "line": 3,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "int sz_signed = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char* signed_out = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "ret = cjwt_sign( p_jwt, &signed_out, p_in, &sz_signed );"
    },
    {
        "line": 26,
        "fullcodeline": "size_t sz_p_sign = strlen( p_sign );"
    },
    {
        "line": 27,
        "fullcodeline": "size_t sz_decoded = b64url_get_decoded_buffer_size( sz_p_sign );"
    },
    {
        "line": 28,
        "fullcodeline": "uint8_t *signed_dec = malloc( sz_decoded + 1 );"
    },
    {
        "line": 35,
        "fullcodeline": "memset( signed_dec, 0, ( sz_decoded + 1 ) );"
    },
    {
        "line": 37,
        "fullcodeline": "int out_size = b64url_decode( ( uint8_t * )p_sign, sz_p_sign, signed_dec );"
    },
    {
        "line": 44,
        "fullcodeline": "signed_dec[out_size] = '\\0';"
    },
    {
        "line": 45,
        "fullcodeline": "cjwt_info( \"Signature length : enc %d, signature %d\\n\","
    },
    {
        "line": 47,
        "fullcodeline": "cjwt_info( \"signed token : %s\\n\", signed_out );"
    },
    {
        "line": 48,
        "fullcodeline": "cjwt_info( \"expected token signature  %s\\n\", signed_dec );"
    },
    {
        "line": 62,
        "fullcodeline": "free( signed_dec );"
    },
    {
        "line": 64,
        "fullcodeline": "free( signed_out );"
    },
    {
        "line": 7,
        "fullcodeline": "if( !p_jwt || !p_in || !p_sign ) {"
    },
    {
        "line": 30,
        "fullcodeline": "if( !signed_dec ) {"
    },
    {
        "line": 39,
        "fullcodeline": "if( !out_size ) {"
    },
    {
        "line": 46,
        "fullcodeline": "( int )sz_signed, ( int )out_size );"
    },
    {
        "line": 50,
        "fullcodeline": "if( sz_signed != out_size ) {"
    },
    {
        "line": 57,
        "fullcodeline": "if( 0 != CRYPTO_memcmp(signed_out, signed_dec, out_size) ) {"
    },
    {
        "line": 8,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 13,
        "fullcodeline": "ret = cjwt_verify_rsa( p_jwt, p_in, p_sign );"
    },
    {
        "line": 21,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 31,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 40,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 51,
        "fullcodeline": "cjwt_info( \"Signature length mismatch: enc %d, signature %d\\n\","
    },
    {
        "line": 53,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 58,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 52,
        "fullcodeline": "( int )sz_signed, ( int )out_size );"
    }
]