[
    {
        "line": 9,
        "fullcodeline": "cJSON *j_header = cJSON_Parse( ( char* )p_dechead );"
    },
    {
        "line": 16,
        "fullcodeline": "cjwt_info( \"Json  = %s\\n\", cJSON_Print( j_header ) );"
    },
    {
        "line": 17,
        "fullcodeline": "cjwt_info( \"--------------------------------------------- \\n\\n\" );"
    },
    {
        "line": 19,
        "fullcodeline": "cJSON* j_typ = cJSON_GetObjectItem( j_header, \"typ\" );"
    },
    {
        "line": 25,
        "fullcodeline": "cJSON* j_alg = cJSON_GetObjectItem( j_header, \"alg\" );"
    },
    {
        "line": 39,
        "fullcodeline": "cJSON_Delete( j_header );"
    },
    {
        "line": 4,
        "fullcodeline": "if( !p_cjwt || !p_dechead ) {"
    },
    {
        "line": 11,
        "fullcodeline": "if( !j_header ) {"
    },
    {
        "line": 21,
        "fullcodeline": "if( !j_typ || strcmp( j_typ->valuestring, \"JWT\" ) ) {"
    },
    {
        "line": 22,
        "fullcodeline": "cjwt_info( \"may not be a JWT token\\n\" );"
    },
    {
        "line": 30,
        "fullcodeline": "alg = cjwt_alg_str_to_enum( j_alg->valuestring );"
    },
    {
        "line": 35,
        "fullcodeline": "p_cjwt->header.alg = alg;"
    },
    {
        "line": 31,
        "fullcodeline": "if( -1 == alg ) {"
    },
    {
        "line": 32,
        "fullcodeline": "cJSON_Delete( j_header );"
    }
]