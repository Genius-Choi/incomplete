[
    {
        "line": 4,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "( void )options; //suppressing unused parameter warning"
    },
    {
        "line": 15,
        "fullcodeline": "cjwt_info( \"parameters cjwt_decode()\\n encoded : %s\\n options : %d\\n\", encoded, options );"
    },
    {
        "line": 17,
        "fullcodeline": "char *enc_token = malloc( strlen( encoded ) + 1 );"
    },
    {
        "line": 25,
        "fullcodeline": "strcpy( enc_token, encoded );"
    },
    {
        "line": 36,
        "fullcodeline": "payload[0] = '\\0';"
    },
    {
        "line": 37,
        "fullcodeline": "payload++;"
    },
    {
        "line": 47,
        "fullcodeline": "signature[0] = '\\0';"
    },
    {
        "line": 48,
        "fullcodeline": "signature++;"
    },
    {
        "line": 50,
        "fullcodeline": "cjwt_t *out = cjwt_create();"
    },
    {
        "line": 59,
        "fullcodeline": "ret = cjwt_update_key( out, key, key_len );"
    },
    {
        "line": 67,
        "fullcodeline": "ret = cjwt_parse_header( out, enc_token );"
    },
    {
        "line": 75,
        "fullcodeline": "ret = cjwt_parse_payload( out, payload );"
    },
    {
        "line": 105,
        "fullcodeline": "free( enc_token );"
    },
    {
        "line": 9,
        "fullcodeline": "if( !encoded || !jwt ) {"
    },
    {
        "line": 19,
        "fullcodeline": "if( !enc_token ) {"
    },
    {
        "line": 28,
        "fullcodeline": "for( payload = enc_token; payload[0] != '.'; payload++ ) {"
    },
    {
        "line": 39,
        "fullcodeline": "for( signature = payload; signature[0] != '.'; signature++ ) {"
    },
    {
        "line": 52,
        "fullcodeline": "if( !out ) {"
    },
    {
        "line": 82,
        "fullcodeline": "if( out->header.alg != alg_none ) {"
    },
    {
        "line": 10,
        "fullcodeline": "cjwt_error( \"null parameter\\n\" );"
    },
    {
        "line": 11,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 20,
        "fullcodeline": "cjwt_error( \"memory alloc failed\\n\" );"
    },
    {
        "line": 21,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 53,
        "fullcodeline": "cjwt_error( \"cjwt memory alloc failed\\n\" );"
    },
    {
        "line": 54,
        "fullcodeline": "ret = ENOMEM;"
    },
    {
        "line": 62,
        "fullcodeline": "cjwt_error( \"Failed to update key\\n\" );"
    },
    {
        "line": 70,
        "fullcodeline": "cjwt_error( \"Invalid header\\n\" );"
    },
    {
        "line": 78,
        "fullcodeline": "cjwt_error( \"Invalid payload\\n\" );"
    },
    {
        "line": 83,
        "fullcodeline": "enc_token[strlen( enc_token )] = '.';"
    },
    {
        "line": 85,
        "fullcodeline": "ret = cjwt_verify_signature( out, enc_token, signature );"
    },
    {
        "line": 92,
        "fullcodeline": "cjwt_info( \"\\nSignature authentication passed\\n\" );"
    },
    {
        "line": 98,
        "fullcodeline": "cjwt_destroy( &out );"
    },
    {
        "line": 99,
        "fullcodeline": "*jwt = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "if( payload[0] == '\\0' ) {"
    },
    {
        "line": 40,
        "fullcodeline": "if( signature[0] == '\\0' ) {"
    },
    {
        "line": 101,
        "fullcodeline": "*jwt = out;"
    },
    {
        "line": 30,
        "fullcodeline": "cjwt_error( \"Invalid jwt token,has only header\\n\" );"
    },
    {
        "line": 31,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 41,
        "fullcodeline": "cjwt_error( \"Invalid jwt token,missing signature\\n\" );"
    },
    {
        "line": 42,
        "fullcodeline": "ret = EINVAL;"
    },
    {
        "line": 88,
        "fullcodeline": "cjwt_error( \"\\nSignature authentication failed\\n\" );"
    }
]