[
    {
        "line": 5,
        "fullcodeline": "size_t out_size = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "sz_payload = strlen( ( char * )p_payload );"
    },
    {
        "line": 13,
        "fullcodeline": "pl_desize = b64url_get_decoded_buffer_size( sz_payload );"
    },
    {
        "line": 15,
        "fullcodeline": "cjwt_info( \"Payload Size = %d , Decoded size = %d\\n\", sz_payload, ( int )pl_desize );"
    },
    {
        "line": 16,
        "fullcodeline": "decoded_pl = malloc( pl_desize + 1 );"
    },
    {
        "line": 22,
        "fullcodeline": "memset( decoded_pl, 0, ( pl_desize + 1 ) );"
    },
    {
        "line": 24,
        "fullcodeline": "out_size = b64url_decode( ( uint8_t * )p_payload, sz_payload, decoded_pl );"
    },
    {
        "line": 32,
        "fullcodeline": "decoded_pl[out_size] = '\\0';"
    },
    {
        "line": 33,
        "fullcodeline": "cjwt_info( \"Raw data  = %*s\\n\", ( int )out_size, decoded_pl );"
    },
    {
        "line": 34,
        "fullcodeline": "ret = cjwt_update_payload( p_cjwt, ( char* )decoded_pl );"
    },
    {
        "line": 8,
        "fullcodeline": "if( !p_cjwt || !p_payload ) {"
    },
    {
        "line": 18,
        "fullcodeline": "if( !decoded_pl ) {"
    },
    {
        "line": 27,
        "fullcodeline": "if( !out_size ) {"
    },
    {
        "line": 28,
        "fullcodeline": "ret = EINVAL;"
    }
]