[
    {
        "line": 5,
        "fullcodeline": "gnrc_sixlowpan_frag_vrb_t *vrbe = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "assert(base != NULL);"
    },
    {
        "line": 8,
        "fullcodeline": "assert(out_netif != NULL);"
    },
    {
        "line": 9,
        "fullcodeline": "assert(out_dst != NULL);"
    },
    {
        "line": 10,
        "fullcodeline": "assert(out_dst_len > 0);"
    },
    {
        "line": 11,
        "fullcodeline": "for (unsigned i = 0; i < CONFIG_GNRC_SIXLOWPAN_FRAG_VRB_SIZE; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "gnrc_sixlowpan_frag_vrb_t *ptr = &_vrb[i];"
    },
    {
        "line": 14,
        "fullcodeline": "if (gnrc_sixlowpan_frag_vrb_entry_empty(ptr) ||"
    },
    {
        "line": 15,
        "fullcodeline": "_equal_index(ptr, base->src, base->src_len, base->tag)) {"
    },
    {
        "line": 16,
        "fullcodeline": "vrbe = ptr;"
    },
    {
        "line": 17,
        "fullcodeline": "if (gnrc_sixlowpan_frag_vrb_entry_empty(vrbe)) {"
    },
    {
        "line": 18,
        "fullcodeline": "vrbe->super = *base;"
    },
    {
        "line": 19,
        "fullcodeline": "vrbe->out_netif = out_netif;"
    },
    {
        "line": 20,
        "fullcodeline": "memcpy(vrbe->super.dst, out_dst, out_dst_len);"
    },
    {
        "line": 21,
        "fullcodeline": "vrbe->out_tag = gnrc_sixlowpan_frag_fb_next_tag();"
    },
    {
        "line": 22,
        "fullcodeline": "vrbe->super.dst_len = out_dst_len;"
    },
    {
        "line": 23,
        "fullcodeline": "DEBUG(\"6lo vrb: creating entry (%s, \","
    },
    {
        "line": 27,
        "fullcodeline": "DEBUG(\"%s, %u, %u) => \","
    },
    {
        "line": 32,
        "fullcodeline": "DEBUG(\"(%s, %u)\\n\","
    },
    {
        "line": 24,
        "fullcodeline": "gnrc_netif_addr_to_str(vrbe->super.src,"
    },
    {
        "line": 28,
        "fullcodeline": "gnrc_netif_addr_to_str(vrbe->super.dst,"
    },
    {
        "line": 31,
        "fullcodeline": "(unsigned)vrbe->super.datagram_size, vrbe->super.tag);"
    },
    {
        "line": 33,
        "fullcodeline": "gnrc_netif_addr_to_str(vrbe->super.dst,"
    },
    {
        "line": 39,
        "fullcodeline": "else if (base->ints != NULL) {"
    },
    {
        "line": 40,
        "fullcodeline": "gnrc_sixlowpan_frag_rb_int_t *tmp = vrbe->super.ints;"
    },
    {
        "line": 42,
        "fullcodeline": "if (tmp != base->ints) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (tmp != NULL) {"
    },
    {
        "line": 47,
        "fullcodeline": "while (tmp->next != NULL) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (tmp != NULL) {"
    },
    {
        "line": 59,
        "fullcodeline": "vrbe->super.ints = base->ints;"
    },
    {
        "line": 52,
        "fullcodeline": "tmp = tmp->next;"
    },
    {
        "line": 55,
        "fullcodeline": "tmp->next = base->ints;"
    },
    {
        "line": 48,
        "fullcodeline": "if (tmp == base->ints) {"
    },
    {
        "line": 49,
        "fullcodeline": "tmp = NULL;"
    }
]