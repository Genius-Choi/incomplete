[
    {
        "line": 13,
        "fullcodeline": "ti = proto_tree_add_item (parent_tree, hf_packet, tvb, offset, 20, ENC_NA);"
    },
    {
        "line": 14,
        "fullcodeline": "tree = proto_item_add_subtree (ti, ett_packet);"
    },
    {
        "line": 16,
        "fullcodeline": "ts.secs = tvb_get_ntohl (tvb, offset);"
    },
    {
        "line": 17,
        "fullcodeline": "ts.nsecs = tvb_get_ntohl (tvb, offset + 4) * 1000;"
    },
    {
        "line": 18,
        "fullcodeline": "proto_tree_add_time(tree, hf_timestamp, tvb, offset, 8, &ts);"
    },
    {
        "line": 19,
        "fullcodeline": "offset += 8;"
    },
    {
        "line": 21,
        "fullcodeline": "caplen = tvb_get_ntohl (tvb, offset);"
    },
    {
        "line": 22,
        "fullcodeline": "ti = proto_tree_add_item (tree, hf_caplen, tvb, offset, 4, ENC_BIG_ENDIAN);"
    },
    {
        "line": 23,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 25,
        "fullcodeline": "len = tvb_get_ntohl (tvb, offset);"
    },
    {
        "line": 26,
        "fullcodeline": "proto_tree_add_item (tree, hf_len, tvb, offset, 4, ENC_BIG_ENDIAN);"
    },
    {
        "line": 27,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 29,
        "fullcodeline": "frame_no = tvb_get_ntohl (tvb, offset);"
    },
    {
        "line": 30,
        "fullcodeline": "proto_tree_add_item (tree, hf_npkt, tvb, offset, 4, ENC_BIG_ENDIAN);"
    },
    {
        "line": 31,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 33,
        "fullcodeline": "proto_item_append_text (ti, \", Frame %u\", frame_no);"
    },
    {
        "line": 34,
        "fullcodeline": "proto_item_append_text (top_item, \" Frame %u\", frame_no);"
    },
    {
        "line": 40,
        "fullcodeline": "reported_length_remaining = tvb_reported_length_remaining (tvb, offset);"
    },
    {
        "line": 46,
        "fullcodeline": "new_tvb = tvb_new_subset (tvb, offset, caplen, len);"
    },
    {
        "line": 41,
        "fullcodeline": "if (caplen > (guint)reported_length_remaining) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (decode_content && linktype != WTAP_ENCAP_UNKNOWN) {"
    },
    {
        "line": 42,
        "fullcodeline": "expert_add_info(pinfo, ti, &ei_caplen_too_big);"
    },
    {
        "line": 59,
        "fullcodeline": "dissector_try_uint_new(wtap_encap_dissector_table, linktype, new_tvb, pinfo, top_tree, TRUE, phdr);"
    },
    {
        "line": 61,
        "fullcodeline": "if (!info_added) {"
    },
    {
        "line": 75,
        "fullcodeline": "call_dissector (data_handle, new_tvb, pinfo, top_tree);"
    },
    {
        "line": 51,
        "fullcodeline": "eth.fcs_len = -1;    /* Unknown whether we have an FCS */"
    },
    {
        "line": 52,
        "fullcodeline": "phdr = &eth;"
    },
    {
        "line": 56,
        "fullcodeline": "phdr = NULL;"
    },
    {
        "line": 64,
        "fullcodeline": "col_prepend_fence_fstr(pinfo->cinfo, COL_PROTOCOL, \"R|\");"
    },
    {
        "line": 67,
        "fullcodeline": "col_prepend_fence_fstr (pinfo->cinfo, COL_INFO, \"Remote | \");"
    },
    {
        "line": 68,
        "fullcodeline": "info_added = TRUE;"
    },
    {
        "line": 69,
        "fullcodeline": "register_frame_end_routine(pinfo, rpcap_frame_end);"
    },
    {
        "line": 72,
        "fullcodeline": "if (linktype == WTAP_ENCAP_UNKNOWN) {"
    },
    {
        "line": 73,
        "fullcodeline": "proto_item_append_text (ti, \", Unknown link-layer type\");"
    }
]