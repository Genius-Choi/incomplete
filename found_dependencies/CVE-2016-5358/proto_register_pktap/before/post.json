[
    {
        "line": 3,
        "fullcodeline": "static hf_register_info hf[] = {"
    },
    {
        "line": 51,
        "fullcodeline": "static gint *ett[] = {"
    },
    {
        "line": 55,
        "fullcodeline": "static ei_register_info ei[] = {"
    },
    {
        "line": 63,
        "fullcodeline": "proto_pktap = proto_register_protocol(\"PKTAP packet header\", \"PKTAP\","
    },
    {
        "line": 65,
        "fullcodeline": "proto_register_field_array(proto_pktap, hf, array_length(hf));"
    },
    {
        "line": 66,
        "fullcodeline": "proto_register_subtree_array(ett, array_length(ett));"
    },
    {
        "line": 67,
        "fullcodeline": "expert_pktap = expert_register_protocol(proto_pktap);"
    },
    {
        "line": 68,
        "fullcodeline": "expert_register_field_array(expert_pktap, ei, array_length(ei));"
    },
    {
        "line": 70,
        "fullcodeline": "pktap_handle = register_dissector(\"pktap\", dissect_pktap, proto_pktap);"
    },
    {
        "line": 4,
        "fullcodeline": "{ &hf_pktap_hdrlen,"
    },
    {
        "line": 7,
        "fullcodeline": "{ &hf_pktap_rectype,"
    },
    {
        "line": 10,
        "fullcodeline": "{ &hf_pktap_dlt,"
    },
    {
        "line": 13,
        "fullcodeline": "{ &hf_pktap_ifname,\t/* fixed length *and* null-terminated */"
    },
    {
        "line": 16,
        "fullcodeline": "{ &hf_pktap_flags,"
    },
    {
        "line": 19,
        "fullcodeline": "{ &hf_pktap_pfamily,"
    },
    {
        "line": 22,
        "fullcodeline": "{ &hf_pktap_llhdrlen,"
    },
    {
        "line": 25,
        "fullcodeline": "{ &hf_pktap_lltrlrlen,"
    },
    {
        "line": 28,
        "fullcodeline": "{ &hf_pktap_pid,"
    },
    {
        "line": 31,
        "fullcodeline": "{ &hf_pktap_cmdname,\t/* fixed length *and* null-terminated */"
    },
    {
        "line": 34,
        "fullcodeline": "{ &hf_pktap_svc_class,"
    },
    {
        "line": 37,
        "fullcodeline": "{ &hf_pktap_iftype,"
    },
    {
        "line": 40,
        "fullcodeline": "{ &hf_pktap_ifunit,"
    },
    {
        "line": 43,
        "fullcodeline": "{ &hf_pktap_epid,"
    },
    {
        "line": 46,
        "fullcodeline": "{ &hf_pktap_ecmdname,\t/* fixed length *and* null-terminated */"
    },
    {
        "line": 56,
        "fullcodeline": "{ &ei_pktap_hdrlen_too_short,"
    },
    {
        "line": 5,
        "fullcodeline": "{ \"Header length\", \"pktap.hdrlen\","
    },
    {
        "line": 8,
        "fullcodeline": "{ \"Record type\", \"pktap.rectype\","
    },
    {
        "line": 11,
        "fullcodeline": "{ \"DLT\", \"pktap.dlt\","
    },
    {
        "line": 14,
        "fullcodeline": "{ \"Interface name\", \"pktap.ifname\","
    },
    {
        "line": 17,
        "fullcodeline": "{ \"Flags\", \"pktap.flags\","
    },
    {
        "line": 20,
        "fullcodeline": "{ \"Protocol family\", \"pktap.pfamily\","
    },
    {
        "line": 23,
        "fullcodeline": "{ \"Link-layer header length\", \"pktap.llhdrlen\","
    },
    {
        "line": 26,
        "fullcodeline": "{ \"Link-layer trailer length\", \"pktap.lltrlrlen\","
    },
    {
        "line": 29,
        "fullcodeline": "{ \"Process ID\", \"pktap.pid\","
    },
    {
        "line": 32,
        "fullcodeline": "{ \"Command name\", \"pktap.cmdname\","
    },
    {
        "line": 35,
        "fullcodeline": "{ \"Service class\", \"pktap.svc_class\","
    },
    {
        "line": 38,
        "fullcodeline": "{ \"Interface type\", \"pktap.iftype\","
    },
    {
        "line": 41,
        "fullcodeline": "{ \"Interface unit\", \"pktap.ifunit\","
    },
    {
        "line": 44,
        "fullcodeline": "{ \"Effective process ID\", \"pktap.epid\","
    },
    {
        "line": 47,
        "fullcodeline": "{ \"Effective command name\", \"pktap.ecmdname\","
    },
    {
        "line": 57,
        "fullcodeline": "{ \"pktap.hdrlen_too_short\", PI_MALFORMED, PI_ERROR,"
    }
]