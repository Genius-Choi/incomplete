[
    {
        "line": 3,
        "fullcodeline": "proto_tree *pktap_tree = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "proto_item *ti = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "int offset = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "col_set_str(pinfo->cinfo, COL_PROTOCOL, \"PKTAP\");"
    },
    {
        "line": 13,
        "fullcodeline": "col_clear(pinfo->cinfo, COL_INFO);"
    },
    {
        "line": 15,
        "fullcodeline": "pkt_len = tvb_get_letohl(tvb, offset);"
    },
    {
        "line": 16,
        "fullcodeline": "col_add_fstr(pinfo->cinfo, COL_INFO, \"PKTAP, %u byte header\", pkt_len);"
    },
    {
        "line": 19,
        "fullcodeline": "ti = proto_tree_add_item(tree, proto_pktap, tvb, offset, pkt_len, ENC_NA);"
    },
    {
        "line": 20,
        "fullcodeline": "pktap_tree = proto_item_add_subtree(ti, ett_pktap);"
    },
    {
        "line": 22,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_hdrlen, tvb, offset, 4,"
    },
    {
        "line": 29,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 31,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_rectype, tvb, offset, 4,"
    },
    {
        "line": 33,
        "fullcodeline": "rectype = tvb_get_letohl(tvb, offset);"
    },
    {
        "line": 34,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 35,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_dlt, tvb, offset, 4,"
    },
    {
        "line": 37,
        "fullcodeline": "dlt = tvb_get_letohl(tvb, offset);"
    },
    {
        "line": 38,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 39,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_ifname, tvb, offset, 24,"
    },
    {
        "line": 41,
        "fullcodeline": "offset += 24;"
    },
    {
        "line": 42,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_flags, tvb, offset, 4,"
    },
    {
        "line": 44,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 45,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_pfamily, tvb, offset, 4,"
    },
    {
        "line": 47,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 48,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_llhdrlen, tvb, offset, 4,"
    },
    {
        "line": 50,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 51,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_lltrlrlen, tvb, offset, 4,"
    },
    {
        "line": 53,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 54,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_pid, tvb, offset, 4,"
    },
    {
        "line": 56,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 57,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_cmdname, tvb, offset, 20,"
    },
    {
        "line": 59,
        "fullcodeline": "offset += 20;"
    },
    {
        "line": 60,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_svc_class, tvb, offset, 4,"
    },
    {
        "line": 62,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 63,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_iftype, tvb, offset, 2,"
    },
    {
        "line": 65,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 66,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_ifunit, tvb, offset, 2,"
    },
    {
        "line": 68,
        "fullcodeline": "offset += 2;"
    },
    {
        "line": 69,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_epid, tvb, offset, 4,"
    },
    {
        "line": 71,
        "fullcodeline": "offset += 4;"
    },
    {
        "line": 72,
        "fullcodeline": "proto_tree_add_item(pktap_tree, hf_pktap_ecmdname, tvb, offset, 20,"
    },
    {
        "line": 24,
        "fullcodeline": "if (pkt_len < MIN_PKTAP_HDR_LEN) {"
    },
    {
        "line": 40,
        "fullcodeline": "ENC_ASCII|ENC_NA);"
    },
    {
        "line": 58,
        "fullcodeline": "ENC_UTF_8|ENC_NA);"
    },
    {
        "line": 73,
        "fullcodeline": "ENC_UTF_8|ENC_NA);"
    },
    {
        "line": 76,
        "fullcodeline": "if (rectype == PKT_REC_PACKET) {"
    },
    {
        "line": 25,
        "fullcodeline": "proto_tree_add_expert(tree, pinfo, &ei_pktap_hdrlen_too_short,"
    },
    {
        "line": 77,
        "fullcodeline": "next_tvb = tvb_new_subset_remaining(tvb, pkt_len);"
    },
    {
        "line": 78,
        "fullcodeline": "wtap_encap = wtap_pcap_encap_to_wtap_encap(dlt);"
    },
    {
        "line": 90,
        "fullcodeline": "dissector_try_uint_new(wtap_encap_dissector_table,"
    },
    {
        "line": 82,
        "fullcodeline": "eth.fcs_len = -1;    /* Unknown whether we have an FCS */"
    },
    {
        "line": 83,
        "fullcodeline": "phdr = &eth;"
    },
    {
        "line": 87,
        "fullcodeline": "phdr = NULL;"
    }
]