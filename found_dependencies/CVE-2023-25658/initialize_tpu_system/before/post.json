[
    {
        "line": 19,
        "fullcodeline": "logging.info(\"Deallocate tpu buffers before initializing tpu system.\")"
    },
    {
        "line": 22,
        "fullcodeline": "gc.collect()"
    },
    {
        "line": 24,
        "fullcodeline": "job = None"
    },
    {
        "line": 34,
        "fullcodeline": "assert isinstance(cluster_resolver, TPUClusterResolver)"
    },
    {
        "line": 36,
        "fullcodeline": "tpu_name = compat.as_text(cluster_resolver._tpu)  # pylint: disable=protected-access"
    },
    {
        "line": 43,
        "fullcodeline": "logging.info(\"Initializing the TPU system: %s\", tpu_name)"
    },
    {
        "line": 104,
        "fullcodeline": "logging.info(\"Finished initializing TPU system.\")"
    },
    {
        "line": 105,
        "fullcodeline": "tpu_topology = topology.Topology(serialized=serialized_topology)"
    },
    {
        "line": 106,
        "fullcodeline": "cluster_resolver.set_tpu_topology(serialized_topology)"
    },
    {
        "line": 107,
        "fullcodeline": "_INITIALIZED_TPU_SYSTEMS[tpu_name] = tpu_topology"
    },
    {
        "line": 20,
        "fullcodeline": "context.context()._clear_caches()  # pylint: disable=protected-access"
    },
    {
        "line": 21,
        "fullcodeline": "context.context().clear_kernel_cache()"
    },
    {
        "line": 25,
        "fullcodeline": "if cluster_resolver is None:"
    },
    {
        "line": 37,
        "fullcodeline": "if tpu_name in _INITIALIZED_TPU_SYSTEMS:"
    },
    {
        "line": 50,
        "fullcodeline": "if tpu_name not in _LOCAL_MASTERS:"
    },
    {
        "line": 55,
        "fullcodeline": "if context.executing_eagerly():"
    },
    {
        "line": 113,
        "fullcodeline": "_tpu_worker_address.get_cell(\"address\").set(cluster_resolver.get_master())"
    },
    {
        "line": 33,
        "fullcodeline": "cluster_resolver = TPUClusterResolver(\"\")"
    },
    {
        "line": 38,
        "fullcodeline": "logging.warning("
    },
    {
        "line": 53,
        "fullcodeline": "job = \"{}/replica:0/task:0\".format(cluster_resolver.get_job_name())"
    },
    {
        "line": 57,
        "fullcodeline": "def _tpu_init_fn():"
    },
    {
        "line": 83,
        "fullcodeline": "serialized_topology = output.numpy()"
    },
    {
        "line": 28,
        "fullcodeline": "if context.executing_eagerly():"
    },
    {
        "line": 39,
        "fullcodeline": "\"TPU system %s has already been initialized. \""
    },
    {
        "line": 56,
        "fullcodeline": "@function"
    },
    {
        "line": 81,
        "fullcodeline": "context.context()._initialize_logical_devices()  # pylint: disable=protected-access"
    },
    {
        "line": 84,
        "fullcodeline": "elif not ops.executing_eagerly_outside_functions():"
    },
    {
        "line": 29,
        "fullcodeline": "curr_device = device.DeviceSpec.from_string(context.context().device_name)"
    },
    {
        "line": 73,
        "fullcodeline": "context.async_wait()"
    },
    {
        "line": 85,
        "fullcodeline": "master = cluster_resolver.master()"
    },
    {
        "line": 86,
        "fullcodeline": "cluster_spec = cluster_resolver.cluster_spec()"
    },
    {
        "line": 88,
        "fullcodeline": "session_config = config_pb2.ConfigProto(allow_soft_placement=True)"
    },
    {
        "line": 30,
        "fullcodeline": "if curr_device.job is not None:"
    },
    {
        "line": 71,
        "fullcodeline": "with ops.device(tpu._tpu_system_device_name(job)):  # pylint: disable=protected-access"
    },
    {
        "line": 92,
        "fullcodeline": "with ops.Graph().as_default():"
    },
    {
        "line": 96,
        "fullcodeline": "with ops.device(tpu._tpu_system_device_name(job)):  # pylint: disable=protected-access"
    },
    {
        "line": 31,
        "fullcodeline": "job = \"{}/replica:0/task:0\".format(curr_device.job)"
    },
    {
        "line": 75,
        "fullcodeline": "raise errors.NotFoundError("
    },
    {
        "line": 72,
        "fullcodeline": "output = _tpu_init_fn()"
    },
    {
        "line": 90,
        "fullcodeline": "session_config.cluster_def.CopyFrom(cluster_spec.as_cluster_def())"
    },
    {
        "line": 97,
        "fullcodeline": "serialized_topology = tpu.initialize_system("
    },
    {
        "line": 77,
        "fullcodeline": "\"TPUs not found in the cluster. Failed in initialization: \""
    },
    {
        "line": 93,
        "fullcodeline": "with session_lib.Session(config=session_config, target=master) as sess:"
    },
    {
        "line": 78,
        "fullcodeline": "+ str(e))"
    },
    {
        "line": 94,
        "fullcodeline": "serialized_topology = sess.run(tpu.initialize_system())"
    }
]