[
    {
        "line": 3,
        "fullcodeline": "CHECK(platform != nullptr);"
    },
    {
        "line": 4,
        "fullcodeline": "std::string key = absl::AsciiStrToLower(platform->Name());"
    },
    {
        "line": 5,
        "fullcodeline": "absl::MutexLock lock(&mu_);"
    },
    {
        "line": 11,
        "fullcodeline": "Platform* platform_ptr = platform.get();"
    },
    {
        "line": 18,
        "fullcodeline": "name_map_[key] = platform.release();"
    },
    {
        "line": 6,
        "fullcodeline": "if (name_map_.find(key) != name_map_.end()) {"
    },
    {
        "line": 22,
        "fullcodeline": "return ::tsl::OkStatus();"
    },
    {
        "line": 12,
        "fullcodeline": "CHECK(id_map_.emplace(platform->id(), platform_ptr).second);"
    },
    {
        "line": 20,
        "fullcodeline": "listener->PlatformRegistered(platform_ptr);"
    },
    {
        "line": 7,
        "fullcodeline": "return tsl::Status(tsl::error::INTERNAL,"
    },
    {
        "line": 8,
        "fullcodeline": "\"platform is already registered with name: \\\"\" +"
    },
    {
        "line": 9,
        "fullcodeline": "platform->Name() + \"\\\"\");"
    }
]