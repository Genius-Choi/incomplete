[
    {
        "line": 17,
        "fullcodeline": "model_dims.num_layers = rnn_desc.num_layers();"
    },
    {
        "line": 18,
        "fullcodeline": "model_dims.batch_size = input_desc.batch_size();"
    },
    {
        "line": 19,
        "fullcodeline": "model_dims.max_seq_length = input_desc.max_seq_length();"
    },
    {
        "line": 20,
        "fullcodeline": "model_dims.hidden_size = rnn_desc.hidden_size();"
    },
    {
        "line": 21,
        "fullcodeline": "model_dims.input_size = input_desc.data_size();"
    },
    {
        "line": 22,
        "fullcodeline": "model_dims.cell_size = rnn_desc.cell_size();"
    },
    {
        "line": 23,
        "fullcodeline": "model_dims.dir_count ="
    },
    {
        "line": 24,
        "fullcodeline": "(rnn_desc.direction_mode() == CUDNN_BIDIRECTIONAL) ? 2 : 1;"
    },
    {
        "line": 27,
        "fullcodeline": "if (!(input_h_desc.num_layers() =="
    },
    {
        "line": 35,
        "fullcodeline": "if (!(input_h_desc.num_layers() == input_c_desc.num_layers() &&"
    },
    {
        "line": 40,
        "fullcodeline": "if (!(output_desc.max_seq_length() == model_dims.max_seq_length &&"
    },
    {
        "line": 46,
        "fullcodeline": "if (!(input_h_desc.num_layers() == output_h_desc.num_layers() &&"
    },
    {
        "line": 51,
        "fullcodeline": "if (!(input_h_desc.num_layers() == output_c_desc.num_layers() &&"
    },
    {
        "line": 30,
        "fullcodeline": "input_h_desc.data_size() == model_dims.hidden_size)) {"
    },
    {
        "line": 31,
        "fullcodeline": "return tsl::Status(port::error::INVALID_ARGUMENT, \"Invalid input_h shape\");"
    },
    {
        "line": 37,
        "fullcodeline": "input_h_desc.data_size() <= input_c_desc.data_size())) {"
    },
    {
        "line": 38,
        "fullcodeline": "return tsl::Status(port::error::INVALID_ARGUMENT, \"Invalid input_c shape\");"
    },
    {
        "line": 42,
        "fullcodeline": "output_desc.data_size() =="
    },
    {
        "line": 44,
        "fullcodeline": "return tsl::Status(port::error::INVALID_ARGUMENT, \"Invalid output shape\");"
    },
    {
        "line": 48,
        "fullcodeline": "input_h_desc.data_size() == output_h_desc.data_size())) {"
    },
    {
        "line": 49,
        "fullcodeline": "return tsl::Status(port::error::INVALID_ARGUMENT, \"Invalid output_h shape\");"
    },
    {
        "line": 53,
        "fullcodeline": "input_h_desc.data_size() <= output_c_desc.data_size())) {"
    },
    {
        "line": 54,
        "fullcodeline": "return tsl::Status(port::error::INVALID_ARGUMENT, \"Invalid output_c shape\");"
    },
    {
        "line": 29,
        "fullcodeline": "input_h_desc.batch_size() == model_dims.batch_size &&"
    },
    {
        "line": 36,
        "fullcodeline": "input_h_desc.batch_size() == input_c_desc.batch_size() &&"
    },
    {
        "line": 41,
        "fullcodeline": "output_desc.batch_size() == model_dims.batch_size &&"
    },
    {
        "line": 43,
        "fullcodeline": "model_dims.hidden_size * model_dims.dir_count)) {"
    },
    {
        "line": 47,
        "fullcodeline": "input_h_desc.batch_size() == output_h_desc.batch_size() &&"
    },
    {
        "line": 52,
        "fullcodeline": "input_h_desc.batch_size() == output_c_desc.batch_size() &&"
    },
    {
        "line": 28,
        "fullcodeline": "model_dims.num_layers * model_dims.dir_count &&"
    }
]