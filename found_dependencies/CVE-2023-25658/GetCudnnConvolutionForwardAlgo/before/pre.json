[
    {
        "line": 28,
        "fullcodeline": "cudnnConvolutionFwdPreference_t preference ="
    },
    {
        "line": 32,
        "fullcodeline": "RETURN_IF_CUDNN_ERROR(cudnnGetConvolutionForwardAlgorithm("
    },
    {
        "line": 29,
        "fullcodeline": "specify_workspace_limit ? CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT"
    },
    {
        "line": 33,
        "fullcodeline": "cudnn.handle(), input_nd.handle(), filter.handle(), conv.handle(),"
    },
    {
        "line": 34,
        "fullcodeline": "output_nd.handle(), preference, memory_limit_bytes, &algo_to_use));"
    }
]