[
    {
        "line": 4,
        "fullcodeline": "*context = nullptr;"
    },
    {
        "line": 6,
        "fullcodeline": "int flags = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "CHECK_EQ(CUDA_SUCCESS,"
    },
    {
        "line": 31,
        "fullcodeline": "former_context = cuda::CurrentContextOrDie();"
    },
    {
        "line": 32,
        "fullcodeline": "res = cuDevicePrimaryCtxRetain(&new_context, device);"
    },
    {
        "line": 54,
        "fullcodeline": "CHECK_EQ(CUDA_SUCCESS, cuCtxSetCurrent(former_context));"
    },
    {
        "line": 65,
        "fullcodeline": "std::string message ="
    },
    {
        "line": 7,
        "fullcodeline": "if (!DeviceOptionsToContextFlags(device_options, &flags)) {"
    },
    {
        "line": 18,
        "fullcodeline": "cuDevicePrimaryCtxGetState(device, &former_primary_context_flags,"
    },
    {
        "line": 20,
        "fullcodeline": "if (former_primary_context_flags != flags) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (former_context != nullptr) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (res == CUDA_SUCCESS) {"
    },
    {
        "line": 66,
        "fullcodeline": "\"failed call to cuDevicePrimaryCtxRetain: \" + ToString(res);"
    },
    {
        "line": 67,
        "fullcodeline": "if (res == CUDA_ERROR_OUT_OF_MEMORY) {"
    },
    {
        "line": 76,
        "fullcodeline": "return tsl::Status(tsl::error::INTERNAL, message);"
    },
    {
        "line": 8,
        "fullcodeline": "LOG(WARNING) << \"could not convert all device options into context flags\";"
    },
    {
        "line": 57,
        "fullcodeline": "*context = CreatedContexts::Add(new_context, device_ordinal);"
    },
    {
        "line": 58,
        "fullcodeline": "CHECK(*context != nullptr)"
    },
    {
        "line": 60,
        "fullcodeline": "VLOG(2) << \"created or reused context \" << new_context"
    },
    {
        "line": 35,
        "fullcodeline": "if (cuCtxGetDevice(&former_device) == CUDA_SUCCESS) {"
    },
    {
        "line": 62,
        "fullcodeline": "return ::tsl::OkStatus();"
    },
    {
        "line": 69,
        "fullcodeline": "if (GetDeviceTotalMemory(device, &total_memory)) {"
    },
    {
        "line": 22,
        "fullcodeline": "LOG(ERROR)"
    },
    {
        "line": 70,
        "fullcodeline": "absl::StrAppend(&message, \"; total memory reported: \", total_memory);"
    },
    {
        "line": 27,
        "fullcodeline": "CHECK_EQ(CUDA_SUCCESS, cuDevicePrimaryCtxSetFlags(device, flags));"
    },
    {
        "line": 36,
        "fullcodeline": "if (former_device == device) {"
    },
    {
        "line": 50,
        "fullcodeline": "LOG(ERROR) << \"Failed to get the device of the current context \""
    },
    {
        "line": 72,
        "fullcodeline": "absl::StrAppend(&message, \"; could not query total memory\");"
    },
    {
        "line": 37,
        "fullcodeline": "if (former_context == new_context) {"
    },
    {
        "line": 38,
        "fullcodeline": "VLOG(2) << \"The primary context \" << former_context << \" for device \""
    },
    {
        "line": 42,
        "fullcodeline": "LOG(WARNING) << \"A non-primary context \" << former_context"
    }
]