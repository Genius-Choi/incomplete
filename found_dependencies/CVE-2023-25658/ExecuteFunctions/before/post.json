[
    {
        "line": 4,
        "fullcodeline": "profiler::TraceMe trace_me(\"TPUPartitionedCallOp-ExecuteFunctions\");"
    },
    {
        "line": 6,
        "fullcodeline": "opts.step_container = ctx->step_container();"
    },
    {
        "line": 7,
        "fullcodeline": "opts.stats_collector = ctx->stats_collector();"
    },
    {
        "line": 10,
        "fullcodeline": "opts.runner = ctx->runner();"
    },
    {
        "line": 11,
        "fullcodeline": "opts.source_device = local_device_name_;"
    },
    {
        "line": 12,
        "fullcodeline": "opts.run_all_kernels_inline = ctx->run_all_kernels_inline();"
    },
    {
        "line": 15,
        "fullcodeline": "OP_REQUIRES_OK_ASYNC(ctx, ctx->input_list(\"args\", &arguments), done);"
    },
    {
        "line": 17,
        "fullcodeline": "auto* local_cm = new CancellationManager(ctx->cancellation_manager());"
    },
    {
        "line": 18,
        "fullcodeline": "auto* rendez = new RefCountedIntraProcessRendezvous(device_mgr_);"
    },
    {
        "line": 19,
        "fullcodeline": "opts.cancellation_manager = local_cm;"
    },
    {
        "line": 20,
        "fullcodeline": "opts.rendezvous = rendez;"
    },
    {
        "line": 22,
        "fullcodeline": "StatusCallback callback("
    },
    {
        "line": 37,
        "fullcodeline": "auto* refcounted_done = new ReffedStatusCallback(std::move(callback));"
    },
    {
        "line": 38,
        "fullcodeline": "for (int i = 1; i < functions.size(); ++i) {"
    },
    {
        "line": 39,
        "fullcodeline": "refcounted_done->Ref();"
    },
    {
        "line": 44,
        "fullcodeline": "VLOG(3) << \"Running function shard on device \" << target_device"
    },
    {
        "line": 46,
        "fullcodeline": "if (target_device == local_device_name_) {"
    },
    {
        "line": 47,
        "fullcodeline": "opts.remote_execution = false;"
    },
    {
        "line": 48,
        "fullcodeline": "ExecuteLocalFunction(opts, arguments, handle, ctx, refcounted_done);"
    },
    {
        "line": 50,
        "fullcodeline": "opts.remote_execution = true;"
    },
    {
        "line": 51,
        "fullcodeline": "ExecuteRemoteFunction(opts, handle, ctx, refcounted_done);"
    }
]