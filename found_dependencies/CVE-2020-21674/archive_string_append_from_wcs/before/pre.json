[
    {
        "line": 10,
        "fullcodeline": "int n, ret_val = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "wctomb(NULL, L'\\0');"
    },
    {
        "line": 29,
        "fullcodeline": "p = as->s + as->length;"
    },
    {
        "line": 30,
        "fullcodeline": "end = as->s + as->buffer_length - MB_CUR_MAX -1;"
    },
    {
        "line": 26,
        "fullcodeline": "if (archive_string_ensure(as, as->length + len + 1) == NULL)"
    },
    {
        "line": 60,
        "fullcodeline": "as->length = p - as->s;"
    },
    {
        "line": 31,
        "fullcodeline": "while (*w != L'\\0' && len > 0) {"
    },
    {
        "line": 45,
        "fullcodeline": "n = wctomb(p, *w++);"
    },
    {
        "line": 58,
        "fullcodeline": "len--;"
    },
    {
        "line": 27,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 32,
        "fullcodeline": "if (p >= end) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (n == -1) {"
    },
    {
        "line": 33,
        "fullcodeline": "as->length = p - as->s;"
    },
    {
        "line": 34,
        "fullcodeline": "as->s[as->length] = '\\0';"
    },
    {
        "line": 39,
        "fullcodeline": "p = as->s + as->length;"
    },
    {
        "line": 40,
        "fullcodeline": "end = as->s + as->buffer_length - MB_CUR_MAX -1;"
    },
    {
        "line": 48,
        "fullcodeline": "if (errno == EILSEQ) {"
    },
    {
        "line": 57,
        "fullcodeline": "p += n;"
    },
    {
        "line": 36,
        "fullcodeline": "if (archive_string_ensure(as,"
    },
    {
        "line": 51,
        "fullcodeline": "ret_val = -1;"
    },
    {
        "line": 38,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 53,
        "fullcodeline": "ret_val = -1;"
    },
    {
        "line": 50,
        "fullcodeline": "*p++ = '?';"
    },
    {
        "line": 37,
        "fullcodeline": "as->length + len * 2 + 1) == NULL)"
    }
]