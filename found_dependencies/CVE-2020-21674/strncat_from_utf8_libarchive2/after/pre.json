[
    {
        "line": 15,
        "fullcodeline": "wctomb(NULL, L'\\0');"
    },
    {
        "line": 17,
        "fullcodeline": "(void)sc; /* UNUSED */"
    },
    {
        "line": 26,
        "fullcodeline": "s = (const char *)_p;"
    },
    {
        "line": 27,
        "fullcodeline": "p = as->s + as->length;"
    },
    {
        "line": 28,
        "fullcodeline": "end = as->s + as->buffer_length - MB_CUR_MAX -1;"
    },
    {
        "line": 23,
        "fullcodeline": "if (archive_string_ensure(as, as->length + len + 1) == NULL)"
    },
    {
        "line": 67,
        "fullcodeline": "as->length = p - as->s;"
    },
    {
        "line": 29,
        "fullcodeline": "while ((n = _utf8_to_unicode(&unicode, s, len)) != 0) {"
    },
    {
        "line": 53,
        "fullcodeline": "s += n;"
    },
    {
        "line": 54,
        "fullcodeline": "len -= n;"
    },
    {
        "line": 61,
        "fullcodeline": "n = (int)wctomb(p, wc);"
    },
    {
        "line": 65,
        "fullcodeline": "p += n;"
    },
    {
        "line": 24,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 32,
        "fullcodeline": "if (p >= end) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (n < 0) {"
    },
    {
        "line": 63,
        "fullcodeline": "if (n == -1)"
    },
    {
        "line": 33,
        "fullcodeline": "as->length = p - as->s;"
    },
    {
        "line": 39,
        "fullcodeline": "p = as->s + as->length;"
    },
    {
        "line": 40,
        "fullcodeline": "end = as->s + as->buffer_length - MB_CUR_MAX -1;"
    },
    {
        "line": 48,
        "fullcodeline": "n *= -1;"
    },
    {
        "line": 49,
        "fullcodeline": "wc = L'?';"
    },
    {
        "line": 51,
        "fullcodeline": "wc = (wchar_t)unicode;"
    },
    {
        "line": 64,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 35,
        "fullcodeline": "if (archive_string_ensure(as,"
    },
    {
        "line": 38,
        "fullcodeline": "return (-1);"
    },
    {
        "line": 36,
        "fullcodeline": "as->length + max(len * 2,"
    }
]