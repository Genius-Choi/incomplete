[
    {
        "line": 7,
        "fullcodeline": "std::string bookmark_cmd = cfg.get_configvalue(\"bookmark-cmd\");"
    },
    {
        "line": 8,
        "fullcodeline": "bool is_interactive = cfg.get_configvalue_as_bool(\"bookmark-interactive\");"
    },
    {
        "line": 9,
        "fullcodeline": "if (bookmark_cmd.length() > 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "std::string cmdline = strprintf::fmt(\"%s '%s' %s %s %s\","
    },
    {
        "line": 17,
        "fullcodeline": "LOG(level::DEBUG, \"controller::bookmark: cmd = %s\", cmdline);"
    },
    {
        "line": 12,
        "fullcodeline": "utils::replace_all(url,\"'\", \"%27\"),"
    },
    {
        "line": 13,
        "fullcodeline": "quote_empty(stfl::quote(title)),"
    },
    {
        "line": 14,
        "fullcodeline": "quote_empty(stfl::quote(description)),"
    },
    {
        "line": 15,
        "fullcodeline": "quote_empty(stfl::quote(feed_title)));"
    },
    {
        "line": 20,
        "fullcodeline": "v->push_empty_formaction();"
    },
    {
        "line": 21,
        "fullcodeline": "stfl::reset();"
    },
    {
        "line": 22,
        "fullcodeline": "utils::run_interactively(cmdline, \"controller::bookmark\");"
    },
    {
        "line": 23,
        "fullcodeline": "v->pop_current_formaction();"
    },
    {
        "line": 34,
        "fullcodeline": "return _(\"bookmarking support is not configured. Please set the configuration variable `bookmark-cmd' accordingly.\");"
    },
    {
        "line": 26,
        "fullcodeline": "char * my_argv[4];"
    },
    {
        "line": 27,
        "fullcodeline": "my_argv[0] = const_cast<char *>(\"/bin/sh\");"
    },
    {
        "line": 28,
        "fullcodeline": "my_argv[1] = const_cast<char *>(\"-c\");"
    },
    {
        "line": 29,
        "fullcodeline": "my_argv[2] = const_cast<char *>(cmdline.c_str());"
    },
    {
        "line": 30,
        "fullcodeline": "my_argv[3] = nullptr;"
    },
    {
        "line": 31,
        "fullcodeline": "return utils::run_program(my_argv, \"\");"
    }
]