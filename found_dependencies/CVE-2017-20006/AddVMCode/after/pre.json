[
    {
        "line": 3,
        "fullcodeline": "VMCodeInp.InitBitInput();"
    },
    {
        "line": 4,
        "fullcodeline": "memcpy(VMCodeInp.InBuf,Code,Min(BitInput::MAX_SIZE,CodeSize));"
    },
    {
        "line": 5,
        "fullcodeline": "VM.Init();"
    },
    {
        "line": 24,
        "fullcodeline": "UnpackFilter30 *StackFilter=new UnpackFilter30; // New filter for PrgStack."
    },
    {
        "line": 52,
        "fullcodeline": "uint EmptyCount=0;"
    },
    {
        "line": 74,
        "fullcodeline": "uint BlockStart=RarVM::ReadData(VMCodeInp);"
    },
    {
        "line": 8,
        "fullcodeline": "if ((FirstByte & 0x80)!=0)"
    },
    {
        "line": 19,
        "fullcodeline": "if (FiltPos>Filters30.Size() || FiltPos>OldFilterLengths.Size())"
    },
    {
        "line": 22,
        "fullcodeline": "bool NewFilter=(FiltPos==Filters30.Size());"
    },
    {
        "line": 53,
        "fullcodeline": "for (uint I=0;I<PrgStack.Size();I++)"
    },
    {
        "line": 61,
        "fullcodeline": "if (EmptyCount==0)"
    },
    {
        "line": 71,
        "fullcodeline": "size_t StackPos=PrgStack.Size()-EmptyCount;"
    },
    {
        "line": 77,
        "fullcodeline": "StackFilter->BlockStart=(uint)((BlockStart+UnpPtr)&MaxWinMask);"
    },
    {
        "line": 94,
        "fullcodeline": "StackFilter->NextWindow=WrPtr!=UnpPtr && ((WrPtr-UnpPtr)&MaxWinMask)<=BlockStart;"
    },
    {
        "line": 10,
        "fullcodeline": "FiltPos=RarVM::ReadData(VMCodeInp);"
    },
    {
        "line": 36,
        "fullcodeline": "Filters30.Add(1);"
    },
    {
        "line": 37,
        "fullcodeline": "Filters30[Filters30.Size()-1]=Filter=new UnpackFilter30;"
    },
    {
        "line": 38,
        "fullcodeline": "StackFilter->ParentFilter=(uint)(Filters30.Size()-1);"
    },
    {
        "line": 44,
        "fullcodeline": "OldFilterLengths.Push(0);"
    },
    {
        "line": 55,
        "fullcodeline": "PrgStack[I-EmptyCount]=PrgStack[I];"
    },
    {
        "line": 68,
        "fullcodeline": "PrgStack.Add(1);"
    },
    {
        "line": 69,
        "fullcodeline": "EmptyCount=1;"
    },
    {
        "line": 75,
        "fullcodeline": "if ((FirstByte & 0x40)!=0)"
    },
    {
        "line": 76,
        "fullcodeline": "BlockStart+=258;"
    },
    {
        "line": 78,
        "fullcodeline": "if ((FirstByte & 0x20)!=0)"
    },
    {
        "line": 80,
        "fullcodeline": "StackFilter->BlockLength=RarVM::ReadData(VMCodeInp);"
    },
    {
        "line": 101,
        "fullcodeline": "if ((FirstByte & 0x10)!=0) // Set registers to optional parameters if any."
    },
    {
        "line": 103,
        "fullcodeline": "uint InitMask=VMCodeInp.fgetbits()>>9;"
    },
    {
        "line": 104,
        "fullcodeline": "VMCodeInp.faddbits(7);"
    },
    {
        "line": 112,
        "fullcodeline": "uint VMCodeSize=RarVM::ReadData(VMCodeInp);"
    },
    {
        "line": 11,
        "fullcodeline": "if (FiltPos==0)"
    },
    {
        "line": 17,
        "fullcodeline": "FiltPos=LastFilter; // Use the same filter as last time."
    },
    {
        "line": 29,
        "fullcodeline": "if (FiltPos>MAX3_UNPACK_FILTERS)"
    },
    {
        "line": 48,
        "fullcodeline": "Filter=Filters30[FiltPos];"
    },
    {
        "line": 49,
        "fullcodeline": "StackFilter->ParentFilter=FiltPos;"
    },
    {
        "line": 56,
        "fullcodeline": "if (PrgStack[I]==NULL)"
    },
    {
        "line": 58,
        "fullcodeline": "if (EmptyCount>0)"
    },
    {
        "line": 91,
        "fullcodeline": "StackFilter->BlockLength=FiltPos<OldFilterLengths.Size() ? OldFilterLengths[FiltPos]:0;"
    },
    {
        "line": 105,
        "fullcodeline": "for (uint I=0;I<7;I++)"
    },
    {
        "line": 115,
        "fullcodeline": "Array<byte> VMCode(VMCodeSize);"
    },
    {
        "line": 116,
        "fullcodeline": "for (uint I=0;I<VMCodeSize;I++)"
    },
    {
        "line": 12,
        "fullcodeline": "InitFilters30(false);"
    },
    {
        "line": 57,
        "fullcodeline": "EmptyCount++;"
    },
    {
        "line": 59,
        "fullcodeline": "PrgStack[I]=NULL;"
    },
    {
        "line": 63,
        "fullcodeline": "if (PrgStack.Size()>MAX3_UNPACK_FILTERS)"
    },
    {
        "line": 113,
        "fullcodeline": "if (VMCodeSize>=0x10000 || VMCodeSize==0 || VMCodeInp.InAddr+VMCodeSize>CodeSize)"
    },
    {
        "line": 121,
        "fullcodeline": "VMCodeInp.faddbits(8);"
    },
    {
        "line": 14,
        "fullcodeline": "FiltPos--;"
    },
    {
        "line": 106,
        "fullcodeline": "if (InitMask & (1<<I))"
    },
    {
        "line": 118,
        "fullcodeline": "if (VMCodeInp.Overflow(3))"
    },
    {
        "line": 120,
        "fullcodeline": "VMCode[I]=VMCodeInp.fgetbits()>>8;"
    },
    {
        "line": 107,
        "fullcodeline": "StackFilter->Prg.InitR[I]=RarVM::ReadData(VMCodeInp);"
    }
]