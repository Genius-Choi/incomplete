[
    {
        "line": 3,
        "fullcodeline": "wchar ArcName[NM];"
    },
    {
        "line": 4,
        "fullcodeline": "wcsncpyz(ArcName,Name,ASIZE(ArcName));"
    },
    {
        "line": 6,
        "fullcodeline": "wchar *Num=GetVolNumPart(ArcName);"
    },
    {
        "line": 11,
        "fullcodeline": "wcsncpyz(Num,L\"*.*\",ASIZE(ArcName)-(Num-ArcName));"
    },
    {
        "line": 13,
        "fullcodeline": "wchar FirstVolName[NM];"
    },
    {
        "line": 14,
        "fullcodeline": "*FirstVolName=0;"
    },
    {
        "line": 16,
        "fullcodeline": "int64 RecFileSize=0;"
    },
    {
        "line": 19,
        "fullcodeline": "VolFind.SetMask(ArcName);"
    },
    {
        "line": 21,
        "fullcodeline": "uint FoundRecVolumes=0;"
    },
    {
        "line": 97,
        "fullcodeline": "MissingVolumes=0;"
    },
    {
        "line": 126,
        "fullcodeline": "uiMsg(UIMSG_RECVOLMISSING,MissingVolumes);"
    },
    {
        "line": 144,
        "fullcodeline": "uint64 MaxVolSize=0;"
    },
    {
        "line": 186,
        "fullcodeline": "int64 ProcessedSize=0;"
    },
    {
        "line": 187,
        "fullcodeline": "int LastPercent=-1;"
    },
    {
        "line": 188,
        "fullcodeline": "mprintf(L\"     \");"
    },
    {
        "line": 192,
        "fullcodeline": "MissingVolumes=0;"
    },
    {
        "line": 194,
        "fullcodeline": "ValidFlags=new bool[TotalCount];"
    },
    {
        "line": 203,
        "fullcodeline": "RecBufferSize=TotalBufferSize/MissingVolumes;"
    },
    {
        "line": 210,
        "fullcodeline": "uint *Data=new uint[TotalCount];"
    },
    {
        "line": 220,
        "fullcodeline": "RealReadBuffer=new byte[RecBufferSize+SSE_ALIGNMENT];"
    },
    {
        "line": 221,
        "fullcodeline": "byte *ReadBuf=(byte *)ALIGN_VALUE(RealReadBuffer,SSE_ALIGNMENT);"
    },
    {
        "line": 278,
        "fullcodeline": "delete[] ValidFlags;"
    },
    {
        "line": 279,
        "fullcodeline": "delete[] Data;"
    },
    {
        "line": 7,
        "fullcodeline": "if (Num==ArcName)"
    },
    {
        "line": 9,
        "fullcodeline": "while (Num>ArcName && IsDigit(*(Num-1)))"
    },
    {
        "line": 10,
        "fullcodeline": "Num--;"
    },
    {
        "line": 22,
        "fullcodeline": "while (VolFind.Next(&fd))"
    },
    {
        "line": 90,
        "fullcodeline": "if (!Silent || FoundRecVolumes!=0)"
    },
    {
        "line": 92,
        "fullcodeline": "if (FoundRecVolumes==0)"
    },
    {
        "line": 98,
        "fullcodeline": "for (uint I=0;I<TotalCount;I++)"
    },
    {
        "line": 128,
        "fullcodeline": "if (MissingVolumes==0)"
    },
    {
        "line": 134,
        "fullcodeline": "if (MissingVolumes>FoundRecVolumes)"
    },
    {
        "line": 145,
        "fullcodeline": "for (uint I=0;I<DataCount;I++)"
    },
    {
        "line": 195,
        "fullcodeline": "for (uint I=0;I<TotalCount;I++)"
    },
    {
        "line": 204,
        "fullcodeline": "if ((RecBufferSize&1)==1) // Must be even for our RS16 codec."
    },
    {
        "line": 213,
        "fullcodeline": "if (!RS.Init(DataCount,RecCount,ValidFlags))"
    },
    {
        "line": 274,
        "fullcodeline": "for (uint I=0;I<TotalCount;I++)"
    },
    {
        "line": 281,
        "fullcodeline": "if (!Cmd->DisablePercentage)"
    },
    {
        "line": 283,
        "fullcodeline": "if (!Silent && !Cmd->DisableDone)"
    },
    {
        "line": 24,
        "fullcodeline": "Wait();"
    },
    {
        "line": 26,
        "fullcodeline": "Archive *Vol=new Archive(Cmd);"
    },
    {
        "line": 27,
        "fullcodeline": "int ItemPos=-1;"
    },
    {
        "line": 91,
        "fullcodeline": "uiMsg(UIMSG_RECVOLFOUND,FoundRecVolumes);"
    },
    {
        "line": 100,
        "fullcodeline": "RecVolItem *Item=&RecItems[I];"
    },
    {
        "line": 136,
        "fullcodeline": "uiMsg(UIERROR_RECVOLFOUND,FoundRecVolumes); // Intentionally not displayed in console mode."
    },
    {
        "line": 147,
        "fullcodeline": "RecVolItem *Item=&RecItems[I];"
    },
    {
        "line": 182,
        "fullcodeline": "NextVolumeName(FirstVolName,ASIZE(FirstVolName),false);"
    },
    {
        "line": 197,
        "fullcodeline": "ValidFlags[I]=RecItems[I].f!=NULL && !RecItems[I].New;"
    },
    {
        "line": 205,
        "fullcodeline": "RecBufferSize--;"
    },
    {
        "line": 215,
        "fullcodeline": "delete[] ValidFlags;"
    },
    {
        "line": 216,
        "fullcodeline": "delete[] Data;"
    },
    {
        "line": 225,
        "fullcodeline": "Wait();"
    },
    {
        "line": 227,
        "fullcodeline": "int MaxRead=0;"
    },
    {
        "line": 265,
        "fullcodeline": "int CurPercent=ToPercent(ProcessedSize,RecFileSize);"
    },
    {
        "line": 271,
        "fullcodeline": "ProcessedSize+=MaxRead;"
    },
    {
        "line": 275,
        "fullcodeline": "if (RecItems[I].f!=NULL)"
    },
    {
        "line": 282,
        "fullcodeline": "mprintf(L\"\\b\\b\\b\\b100%%\");"
    },
    {
        "line": 28,
        "fullcodeline": "if (Vol->WOpen(fd.Name))"
    },
    {
        "line": 77,
        "fullcodeline": "if (ItemPos==-1)"
    },
    {
        "line": 101,
        "fullcodeline": "if (Item->f!=NULL)"
    },
    {
        "line": 122,
        "fullcodeline": "if (I<DataCount && (Item->f==NULL || !Item->Valid))"
    },
    {
        "line": 148,
        "fullcodeline": "if (Item->FileSize>MaxVolSize)"
    },
    {
        "line": 150,
        "fullcodeline": "if (Item->f!=NULL && !Item->Valid)"
    },
    {
        "line": 165,
        "fullcodeline": "if ((Item->New=(Item->f==NULL))) // Additional parentheses to avoid GCC warning."
    },
    {
        "line": 198,
        "fullcodeline": "if (I<DataCount && !ValidFlags[I])"
    },
    {
        "line": 228,
        "fullcodeline": "for (uint I=0,J=DataCount;I<DataCount;I++)"
    },
    {
        "line": 253,
        "fullcodeline": "if (MaxRead==0)"
    },
    {
        "line": 256,
        "fullcodeline": "for (uint I=0,J=0;I<DataCount;I++)"
    },
    {
        "line": 266,
        "fullcodeline": "if (!Cmd->DisablePercentage && CurPercent!=LastPercent)"
    },
    {
        "line": 276,
        "fullcodeline": "RecItems[I].f->Close();"
    },
    {
        "line": 78,
        "fullcodeline": "delete Vol; // Skip found file, it is not RAR or REV volume."
    },
    {
        "line": 103,
        "fullcodeline": "uiMsg(UIMSG_STRING,Item->Name);"
    },
    {
        "line": 106,
        "fullcodeline": "CalcFileSum(Item->f,&RevCRC,NULL,Cmd->Threads,INT64NDF,CALCFSUM_CURPOS);"
    },
    {
        "line": 107,
        "fullcodeline": "Item->Valid=RevCRC==Item->CRC;"
    },
    {
        "line": 123,
        "fullcodeline": "MissingVolumes++;"
    },
    {
        "line": 149,
        "fullcodeline": "MaxVolSize=Item->FileSize;"
    },
    {
        "line": 152,
        "fullcodeline": "Item->f->Close();"
    },
    {
        "line": 154,
        "fullcodeline": "wchar NewName[NM];"
    },
    {
        "line": 155,
        "fullcodeline": "wcscpy(NewName,Item->Name);"
    },
    {
        "line": 156,
        "fullcodeline": "wcscat(NewName,L\".bad\");"
    },
    {
        "line": 158,
        "fullcodeline": "uiMsg(UIMSG_BADARCHIVE,Item->Name);"
    },
    {
        "line": 159,
        "fullcodeline": "uiMsg(UIMSG_RENAMING,Item->Name,NewName);"
    },
    {
        "line": 160,
        "fullcodeline": "RenameFile(Item->Name,NewName);"
    },
    {
        "line": 161,
        "fullcodeline": "delete Item->f;"
    },
    {
        "line": 162,
        "fullcodeline": "Item->f=NULL;"
    },
    {
        "line": 167,
        "fullcodeline": "wcsncpyz(Item->Name,FirstVolName,ASIZE(Item->Name));"
    },
    {
        "line": 168,
        "fullcodeline": "uiMsg(UIMSG_CREATING,Item->Name);"
    },
    {
        "line": 169,
        "fullcodeline": "uiMsg(UIEVENT_NEWARCHIVE,Item->Name);"
    },
    {
        "line": 170,
        "fullcodeline": "File *NewVol=new File;"
    },
    {
        "line": 178,
        "fullcodeline": "NewVol->Prealloc(Item->FileSize);"
    },
    {
        "line": 179,
        "fullcodeline": "Item->f=NewVol;"
    },
    {
        "line": 180,
        "fullcodeline": "Item->New=true;"
    },
    {
        "line": 199,
        "fullcodeline": "MissingVolumes++;"
    },
    {
        "line": 230,
        "fullcodeline": "uint VolNum=I;"
    },
    {
        "line": 237,
        "fullcodeline": "RecVolItem *Item=RecItems+VolNum;"
    },
    {
        "line": 239,
        "fullcodeline": "byte *B=&ReadBuf[0];"
    },
    {
        "line": 240,
        "fullcodeline": "int ReadSize=0;"
    },
    {
        "line": 250,
        "fullcodeline": "uint DataToProcess=(uint)Min(RecBufferSize,MaxVolSize-ProcessedSize);"
    },
    {
        "line": 251,
        "fullcodeline": "ProcessRS(Cmd,I,B,DataToProcess,false);"
    },
    {
        "line": 257,
        "fullcodeline": "if (!ValidFlags[I])"
    },
    {
        "line": 268,
        "fullcodeline": "uiProcessProgress(\"RV\",ProcessedSize,RecFileSize);"
    },
    {
        "line": 269,
        "fullcodeline": "LastPercent=CurPercent;"
    },
    {
        "line": 30,
        "fullcodeline": "if (CmpExt(fd.Name,L\"rev\"))"
    },
    {
        "line": 108,
        "fullcodeline": "if (!Item->Valid)"
    },
    {
        "line": 172,
        "fullcodeline": "if (!FileCreate(Cmd,NewVol,Item->Name,ASIZE(Item->Name),&UserReject))"
    },
    {
        "line": 231,
        "fullcodeline": "if (!ValidFlags[I]) // If next RAR volume is missing or invalid."
    },
    {
        "line": 241,
        "fullcodeline": "if (Item->f!=NULL && !Item->New)"
    },
    {
        "line": 243,
        "fullcodeline": "if (ReadSize!=RecBufferSize)"
    },
    {
        "line": 245,
        "fullcodeline": "if (ReadSize>MaxRead)"
    },
    {
        "line": 259,
        "fullcodeline": "RecVolItem *Item=RecItems+I;"
    },
    {
        "line": 260,
        "fullcodeline": "size_t WriteSize=(size_t)Min(MaxRead,Item->FileSize);"
    },
    {
        "line": 261,
        "fullcodeline": "Item->f->Write(Buf+(J++)*RecBufferSize,WriteSize);"
    },
    {
        "line": 262,
        "fullcodeline": "Item->FileSize-=WriteSize;"
    },
    {
        "line": 32,
        "fullcodeline": "uint RecNum=ReadHeader(Vol,FoundRecVolumes==0);"
    },
    {
        "line": 80,
        "fullcodeline": "if ((uint)ItemPos<RecItems.Size()) // Check if found more REV than needed."
    },
    {
        "line": 110,
        "fullcodeline": "uiMsg(UIMSG_CHECKSUM,Item->Name);"
    },
    {
        "line": 176,
        "fullcodeline": "ErrHandler.Exit(UserReject ? RARX_USERBREAK:RARX_CREATE);"
    },
    {
        "line": 235,
        "fullcodeline": "VolNum=J++; // Use next valid REV volume data instead of RAR."
    },
    {
        "line": 242,
        "fullcodeline": "ReadSize=Item->f->Read(B,RecBufferSize);"
    },
    {
        "line": 244,
        "fullcodeline": "memset(B+ReadSize,0,RecBufferSize-ReadSize);"
    },
    {
        "line": 246,
        "fullcodeline": "MaxRead=ReadSize;"
    },
    {
        "line": 33,
        "fullcodeline": "if (RecNum!=0)"
    },
    {
        "line": 83,
        "fullcodeline": "RecVolItem *Item=RecItems+ItemPos;"
    },
    {
        "line": 84,
        "fullcodeline": "Item->f=Vol;"
    },
    {
        "line": 85,
        "fullcodeline": "Item->New=false;"
    },
    {
        "line": 86,
        "fullcodeline": "wcsncpyz(Item->Name,fd.Name,ASIZE(Item->Name));"
    },
    {
        "line": 114,
        "fullcodeline": "if (I>=DataCount)"
    },
    {
        "line": 174,
        "fullcodeline": "if (!UserReject)"
    },
    {
        "line": 233,
        "fullcodeline": "while (!ValidFlags[J]) // Find next valid REV volume."
    },
    {
        "line": 234,
        "fullcodeline": "J++;"
    },
    {
        "line": 38,
        "fullcodeline": "ItemPos=RecNum;"
    },
    {
        "line": 39,
        "fullcodeline": "FoundRecVolumes++;"
    },
    {
        "line": 43,
        "fullcodeline": "if (Vol->IsArchive(true) && (Vol->SFXSize>0 || CmpExt(fd.Name,L\"rar\")))"
    },
    {
        "line": 116,
        "fullcodeline": "Item->f->Close();"
    },
    {
        "line": 117,
        "fullcodeline": "Item->f=NULL;"
    },
    {
        "line": 118,
        "fullcodeline": "FoundRecVolumes--;"
    },
    {
        "line": 175,
        "fullcodeline": "ErrHandler.CreateErrorMsg(Item->Name);"
    },
    {
        "line": 35,
        "fullcodeline": "if (FoundRecVolumes==0)"
    },
    {
        "line": 52,
        "fullcodeline": "Vol->QOpenUnload();"
    },
    {
        "line": 54,
        "fullcodeline": "Vol->Seek(0,SEEK_SET);"
    },
    {
        "line": 58,
        "fullcodeline": "wchar *Num=GetVolNumPart(fd.Name);"
    },
    {
        "line": 59,
        "fullcodeline": "uint VolNum=0;"
    },
    {
        "line": 64,
        "fullcodeline": "size_t CurSize=RecItems.Size();"
    },
    {
        "line": 71,
        "fullcodeline": "ItemPos=VolNum-1;"
    },
    {
        "line": 36,
        "fullcodeline": "RecFileSize=Vol->FileLength();"
    },
    {
        "line": 45,
        "fullcodeline": "if (!Vol->Volume && !Vol->BrokenHeader)"
    },
    {
        "line": 60,
        "fullcodeline": "for (uint K=1;Num>=fd.Name && IsDigit(*Num);K*=10,Num--)"
    },
    {
        "line": 61,
        "fullcodeline": "VolNum+=(*Num-'0')*K;"
    },
    {
        "line": 62,
        "fullcodeline": "if (VolNum==0 || VolNum>MaxVolumes)"
    },
    {
        "line": 65,
        "fullcodeline": "if (VolNum>CurSize)"
    },
    {
        "line": 73,
        "fullcodeline": "if (*FirstVolName==0)"
    },
    {
        "line": 47,
        "fullcodeline": "uiMsg(UIERROR_NOTVOLUME,ArcName);"
    },
    {
        "line": 67,
        "fullcodeline": "RecItems.Alloc(VolNum);"
    },
    {
        "line": 74,
        "fullcodeline": "VolNameToFirstName(fd.Name,FirstVolName,ASIZE(FirstVolName),true);"
    },
    {
        "line": 68,
        "fullcodeline": "for (size_t I=CurSize;I<VolNum;I++)"
    },
    {
        "line": 69,
        "fullcodeline": "RecItems[I].f=NULL;"
    }
]