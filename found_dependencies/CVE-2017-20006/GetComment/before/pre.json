[
    {
        "line": 5,
        "fullcodeline": "SaveFilePos SavePos(*this);"
    },
    {
        "line": 3,
        "fullcodeline": "if (!MainComment)"
    },
    {
        "line": 9,
        "fullcodeline": "if (Format==RARFMT14)"
    },
    {
        "line": 125,
        "fullcodeline": "return CmtData->Size() > 0;"
    },
    {
        "line": 12,
        "fullcodeline": "CmtLength=GetByte();"
    },
    {
        "line": 13,
        "fullcodeline": "CmtLength+=(GetByte()<<8);"
    },
    {
        "line": 44,
        "fullcodeline": "if (Format==RARFMT14 && MainHead.PackComment || Format!=RARFMT14 && CommHead.Method!=0x30)"
    },
    {
        "line": 49,
        "fullcodeline": "DataIO.SetTestMode(true);"
    },
    {
        "line": 65,
        "fullcodeline": "DataIO.SetFiles(this,NULL);"
    },
    {
        "line": 66,
        "fullcodeline": "DataIO.EnableShowProgress(false);"
    },
    {
        "line": 67,
        "fullcodeline": "DataIO.SetPackedSizeToRead(CmtLength);"
    },
    {
        "line": 68,
        "fullcodeline": "DataIO.UnpHash.Init(HASH_CRC32,1);"
    },
    {
        "line": 69,
        "fullcodeline": "DataIO.SetNoFileHeader(true); // this->FileHead is not filled yet."
    },
    {
        "line": 71,
        "fullcodeline": "Unpack CmtUnpack(&DataIO);"
    },
    {
        "line": 72,
        "fullcodeline": "CmtUnpack.Init(0x10000,false);"
    },
    {
        "line": 73,
        "fullcodeline": "CmtUnpack.SetDestSize(UnpCmtLength);"
    },
    {
        "line": 11,
        "fullcodeline": "Seek(SFXSize+SIZEOF_MAINHEAD14,SEEK_SET);"
    },
    {
        "line": 40,
        "fullcodeline": "CmtLength=CommHead.HeadSize-SIZEOF_COMMHEAD;"
    },
    {
        "line": 51,
        "fullcodeline": "if (Format==RARFMT14)"
    },
    {
        "line": 102,
        "fullcodeline": "int ReadSize=Read(&CmtRaw[0],CmtLength);"
    },
    {
        "line": 114,
        "fullcodeline": "CmtData->Alloc(CmtLength+1);"
    },
    {
        "line": 115,
        "fullcodeline": "CmtRaw.Push(0);"
    },
    {
        "line": 122,
        "fullcodeline": "CmtData->Alloc(wcslen(CmtData->Addr(0)));"
    },
    {
        "line": 46,
        "fullcodeline": "if (Format!=RARFMT14 && (CommHead.UnpVer < 15 || CommHead.UnpVer > VER_UNPACK || CommHead.Method > 0x35))"
    },
    {
        "line": 56,
        "fullcodeline": "UnpCmtLength=GetByte();"
    },
    {
        "line": 57,
        "fullcodeline": "UnpCmtLength+=(GetByte()<<8);"
    },
    {
        "line": 58,
        "fullcodeline": "CmtLength-=2;"
    },
    {
        "line": 59,
        "fullcodeline": "DataIO.SetCmt13Encryption();"
    },
    {
        "line": 60,
        "fullcodeline": "CommHead.UnpVer=15;"
    },
    {
        "line": 76,
        "fullcodeline": "if (Format!=RARFMT14 && (DataIO.UnpHash.GetCRC32()&0xffff)!=CommHead.CommCRC)"
    },
    {
        "line": 99,
        "fullcodeline": "if (CmtLength==0)"
    },
    {
        "line": 101,
        "fullcodeline": "Array<byte> CmtRaw(CmtLength);"
    },
    {
        "line": 121,
        "fullcodeline": "CharToWide((char *)&CmtRaw[0],CmtData->Addr(0),CmtLength);"
    },
    {
        "line": 64,
        "fullcodeline": "UnpCmtLength=CommHead.UnpSize;"
    },
    {
        "line": 85,
        "fullcodeline": "DataIO.GetUnpackedData(&UnpData,&UnpDataSize);"
    },
    {
        "line": 91,
        "fullcodeline": "CmtData->Alloc(UnpDataSize+1);"
    },
    {
        "line": 94,
        "fullcodeline": "CmtData->Alloc(wcslen(CmtData->Addr(0)));"
    },
    {
        "line": 103,
        "fullcodeline": "if (ReadSize>=0 && (uint)ReadSize<CmtLength) // Comment is shorter than declared."
    },
    {
        "line": 105,
        "fullcodeline": "CmtLength=ReadSize;"
    },
    {
        "line": 106,
        "fullcodeline": "CmtRaw.Alloc(CmtLength);"
    },
    {
        "line": 109,
        "fullcodeline": "if (Format!=RARFMT14 && CommHead.CommCRC!=(~CRC32(0xffffffff,&CmtRaw[0],CmtLength)&0xffff))"
    },
    {
        "line": 22,
        "fullcodeline": "Seek(SFXSize+SIZEOF_MARKHEAD3+SIZEOF_MAINHEAD3,SEEK_SET);"
    },
    {
        "line": 92,
        "fullcodeline": "memset(CmtData->Addr(0),0,CmtData->Size()*sizeof(wchar));"
    },
    {
        "line": 93,
        "fullcodeline": "CharToWide((char *)UnpData,CmtData->Addr(0),CmtData->Size());"
    },
    {
        "line": 30,
        "fullcodeline": "return SearchSubBlock(SUBHEAD_TYPE_CMT)!=0 && ReadCommentData(CmtData);"
    }
]