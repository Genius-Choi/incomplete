[
    {
        "line": 21,
        "fullcodeline": "thresh = 1 << roishift;"
    },
    {
        "line": 23,
        "fullcodeline": "warn = false;"
    },
    {
        "line": 11,
        "fullcodeline": "if (roishift < 0) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (roishift == 0 && bgshift == 0) {"
    },
    {
        "line": 24,
        "fullcodeline": "for (i = 0; i < jas_matrix_numrows(x); ++i) {"
    },
    {
        "line": 14,
        "fullcodeline": "jas_eprintf(\"warning: forcing negative ROI shift to zero \""
    },
    {
        "line": 16,
        "fullcodeline": "roishift = 0;"
    },
    {
        "line": 25,
        "fullcodeline": "for (j = 0; j < jas_matrix_numcols(x); ++j) {"
    },
    {
        "line": 26,
        "fullcodeline": "val = jas_matrix_get(x, i, j);"
    },
    {
        "line": 27,
        "fullcodeline": "mag = JAS_ABS(val);"
    },
    {
        "line": 28,
        "fullcodeline": "if (mag >= thresh) {"
    },
    {
        "line": 30,
        "fullcodeline": "mag >>= roishift;"
    },
    {
        "line": 31,
        "fullcodeline": "val = (val < 0) ? (-mag) : mag;"
    },
    {
        "line": 32,
        "fullcodeline": "jas_matrix_set(x, i, j, val);"
    },
    {
        "line": 35,
        "fullcodeline": "mag <<= bgshift;"
    },
    {
        "line": 36,
        "fullcodeline": "mask = (JAS_CAST(uint_fast32_t, 1) << numbps) - 1;"
    },
    {
        "line": 48,
        "fullcodeline": "val = (val < 0) ? (-mag) : mag;"
    },
    {
        "line": 49,
        "fullcodeline": "jas_matrix_set(x, i, j, val);"
    },
    {
        "line": 41,
        "fullcodeline": "if (mag & (~mask)) {"
    },
    {
        "line": 46,
        "fullcodeline": "mag &= mask;"
    },
    {
        "line": 42,
        "fullcodeline": "if (!warn) {"
    },
    {
        "line": 43,
        "fullcodeline": "jas_eprintf(\"warning: possibly corrupt code stream\\n\");"
    },
    {
        "line": 44,
        "fullcodeline": "warn = true;"
    }
]