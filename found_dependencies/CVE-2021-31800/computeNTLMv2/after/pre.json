[
    {
        "line": 4,
        "fullcodeline": "responseKeyNT = ntlm.NTOWFv2(identity, '', authenticateMessage['domain_name'].decode('utf-16le'), nthash)"
    },
    {
        "line": 5,
        "fullcodeline": "responseKeyLM = ntlm.LMOWFv2(identity, '', authenticateMessage['domain_name'].decode('utf-16le'), lmhash)"
    },
    {
        "line": 7,
        "fullcodeline": "ntProofStr = authenticateMessage['ntlm'][:16]"
    },
    {
        "line": 8,
        "fullcodeline": "temp = authenticateMessage['ntlm'][16:]"
    },
    {
        "line": 9,
        "fullcodeline": "ntProofStr2 = ntlm.hmac_md5(responseKeyNT, serverChallenge + temp)"
    },
    {
        "line": 10,
        "fullcodeline": "lmChallengeResponse = authenticateMessage['lanman']"
    },
    {
        "line": 11,
        "fullcodeline": "sessionBaseKey = ntlm.hmac_md5(responseKeyNT, ntProofStr)"
    },
    {
        "line": 13,
        "fullcodeline": "responseFlags = type1['flags']"
    },
    {
        "line": 35,
        "fullcodeline": "keyExchangeKey = ntlm.KXKEY(ntlmChallenge['flags'], sessionBaseKey, lmChallengeResponse,"
    },
    {
        "line": 16,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY) == 0:"
    },
    {
        "line": 19,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_128) == 0:"
    },
    {
        "line": 22,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_KEY_EXCH) == 0:"
    },
    {
        "line": 25,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_SEAL) == 0:"
    },
    {
        "line": 28,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_SIGN) == 0:"
    },
    {
        "line": 31,
        "fullcodeline": "if (ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_ALWAYS_SIGN) == 0:"
    },
    {
        "line": 40,
        "fullcodeline": "if ntlmChallenge['flags'] & ntlm.NTLMSSP_NEGOTIATE_KEY_EXCH:"
    },
    {
        "line": 49,
        "fullcodeline": "if ntProofStr == ntProofStr2:"
    },
    {
        "line": 18,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY"
    },
    {
        "line": 21,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_128"
    },
    {
        "line": 24,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_KEY_EXCH"
    },
    {
        "line": 27,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_SEAL"
    },
    {
        "line": 30,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_SIGN"
    },
    {
        "line": 33,
        "fullcodeline": "responseFlags &= 0xffffffff ^ ntlm.NTLMSSP_NEGOTIATE_ALWAYS_SIGN"
    },
    {
        "line": 41,
        "fullcodeline": "exportedSessionKey = authenticateMessage['session_key']"
    },
    {
        "line": 42,
        "fullcodeline": "exportedSessionKey = ntlm.generateEncryptedSessionKey(keyExchangeKey, exportedSessionKey)"
    },
    {
        "line": 44,
        "fullcodeline": "encryptedRandomSessionKey = None"
    },
    {
        "line": 46,
        "fullcodeline": "exportedSessionKey = keyExchangeKey"
    },
    {
        "line": 51,
        "fullcodeline": "return STATUS_SUCCESS, exportedSessionKey"
    },
    {
        "line": 53,
        "fullcodeline": "return STATUS_LOGON_FAILURE, exportedSessionKey"
    }
]