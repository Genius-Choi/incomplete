[
    {
        "line": 6,
        "fullcodeline": "def exists(column):"
    },
    {
        "line": 22,
        "fullcodeline": "def add_column(column):"
    },
    {
        "line": 58,
        "fullcodeline": "result = RepoObject.query.all()"
    },
    {
        "line": 67,
        "fullcodeline": "result = RepoObject.query.order_by(RepoObject.userid, RepoObject.repopath).all()"
    },
    {
        "line": 68,
        "fullcodeline": "prev_repo = (None, None)"
    },
    {
        "line": 30,
        "fullcodeline": "if getattr(connection, '_transaction', None):"
    },
    {
        "line": 39,
        "fullcodeline": "if not exists(UserObject.__table__.c.role):"
    },
    {
        "line": 50,
        "fullcodeline": "if not exists(SessionObject.__table__.c.Number):"
    },
    {
        "line": 54,
        "fullcodeline": "if getattr(connection, '_transaction', None):"
    },
    {
        "line": 59,
        "fullcodeline": "for row in result:"
    },
    {
        "line": 69,
        "fullcodeline": "for row in result:"
    },
    {
        "line": 40,
        "fullcodeline": "add_column(UserObject.__table__.c.role)"
    },
    {
        "line": 31,
        "fullcodeline": "connection._transaction.commit()"
    },
    {
        "line": 41,
        "fullcodeline": "UserObject.query.filter(UserObject._is_admin == 1).update({UserObject.role: UserObject.ADMIN_ROLE})"
    },
    {
        "line": 51,
        "fullcodeline": "SessionObject.__table__.drop()"
    },
    {
        "line": 52,
        "fullcodeline": "SessionObject.__table__.create()"
    },
    {
        "line": 55,
        "fullcodeline": "connection._transaction.commit()"
    },
    {
        "line": 60,
        "fullcodeline": "if row.repopath.startswith('/') or row.repopath.endswith('/'):"
    },
    {
        "line": 63,
        "fullcodeline": "if row.repopath == '.':"
    },
    {
        "line": 70,
        "fullcodeline": "if prev_repo[0] == row.userid and (prev_repo[1] == row.repopath or row.repopath.startswith(prev_repo[1] + '/')):"
    },
    {
        "line": 61,
        "fullcodeline": "row.repopath = row.repopath.strip('/')"
    },
    {
        "line": 62,
        "fullcodeline": "row.commit()"
    },
    {
        "line": 64,
        "fullcodeline": "row.repopath = ''"
    },
    {
        "line": 65,
        "fullcodeline": "row.commit()"
    },
    {
        "line": 71,
        "fullcodeline": "row.delete()"
    },
    {
        "line": 73,
        "fullcodeline": "prev_repo = (row.userid, row.repopath)"
    }
]