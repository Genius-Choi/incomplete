[
    {
        "line": 7,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 9,
        "fullcodeline": "CHECK_GE(dtypes.size(), size_t{1});"
    },
    {
        "line": 10,
        "fullcodeline": "int arg_index = result_.nodes.size();"
    },
    {
        "line": 11,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 8,
        "fullcodeline": "ArgNumType(attr_values, arg_def, &is_type_list, &dtypes));"
    },
    {
        "line": 12,
        "fullcodeline": "AddItem(arg_def.name(), {true, arg_index, 0, is_type_list, dtypes}));"
    },
    {
        "line": 14,
        "fullcodeline": "for (size_t i = 0; i < dtypes.size(); ++i) {"
    },
    {
        "line": 42,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 15,
        "fullcodeline": "TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),"
    },
    {
        "line": 17,
        "fullcodeline": "DCHECK_EQ(arg_index, result_.nodes.size());"
    },
    {
        "line": 18,
        "fullcodeline": "string name = arg_def.name();"
    },
    {
        "line": 22,
        "fullcodeline": "NodeDef* gnode = AddNode(name);"
    },
    {
        "line": 28,
        "fullcodeline": "DataType dtype = arg_def.is_ref() ? MakeRefType(dtypes[i]) : dtypes[i];"
    },
    {
        "line": 29,
        "fullcodeline": "AddAttr(\"T\", dtype, gnode);"
    },
    {
        "line": 30,
        "fullcodeline": "AddAttr(\"index\", arg_index, gnode);"
    },
    {
        "line": 39,
        "fullcodeline": "result_.arg_types.push_back(dtypes[i]);"
    },
    {
        "line": 40,
        "fullcodeline": "++arg_index;"
    },
    {
        "line": 19,
        "fullcodeline": "if (dtypes.size() > 1) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (ints_on_device && dtypes[i] == DataType::DT_INT32) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (resource_arg_unique_id >= 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "{true, arg_index, 0, false, {dtypes[i]}}));"
    },
    {
        "line": 20,
        "fullcodeline": "strings::StrAppend(&name, \"_\", i);"
    },
    {
        "line": 24,
        "fullcodeline": "gnode->set_op(FunctionLibraryDefinition::kDeviceArgOp);"
    },
    {
        "line": 32,
        "fullcodeline": "AddAttr(\"_resource_arg_unique_id\", resource_arg_unique_id, gnode);"
    },
    {
        "line": 26,
        "fullcodeline": "gnode->set_op(FunctionLibraryDefinition::kArgOp);"
    },
    {
        "line": 36,
        "fullcodeline": "AddAttr(arg_attr.first, arg_attr.second, gnode->mutable_attr());"
    }
]