[
    {
        "line": 3,
        "fullcodeline": "register const struct rip6 *rp = (const struct rip6 *)dat;"
    },
    {
        "line": 12,
        "fullcodeline": "amt = ndo->ndo_snapend - dat;"
    },
    {
        "line": 13,
        "fullcodeline": "i = min(length, amt);"
    },
    {
        "line": 16,
        "fullcodeline": "i -= (sizeof(struct rip6) - sizeof(struct netinfo6));"
    },
    {
        "line": 10,
        "fullcodeline": "if (ndo->ndo_snapend < dat)"
    },
    {
        "line": 14,
        "fullcodeline": "if (i < (sizeof(struct rip6) - sizeof(struct netinfo6)))"
    },
    {
        "line": 64,
        "fullcodeline": "if (rp->rip6_vers != RIP6_VERSION)"
    },
    {
        "line": 21,
        "fullcodeline": "j = length / sizeof(*ni);"
    },
    {
        "line": 43,
        "fullcodeline": "j = length / sizeof(*ni);"
    },
    {
        "line": 32,
        "fullcodeline": "trunc = ((i / sizeof(*ni)) * sizeof(*ni) != i);"
    },
    {
        "line": 33,
        "fullcodeline": "for (ni = rp->rip6_nets; i >= sizeof(*ni);"
    },
    {
        "line": 48,
        "fullcodeline": "trunc = ((i / sizeof(*ni)) * sizeof(*ni) != i);"
    },
    {
        "line": 49,
        "fullcodeline": "for (ni = rp->rip6_nets; i >= sizeof(*ni);"
    },
    {
        "line": 61,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-%d ?? %u\", rp->rip6_cmd, length));"
    },
    {
        "line": 65,
        "fullcodeline": "ND_PRINT((ndo, \" [vers %d]\", rp->rip6_vers));"
    },
    {
        "line": 22,
        "fullcodeline": "if (j == 1"
    },
    {
        "line": 24,
        "fullcodeline": "&&  IN6_IS_ADDR_UNSPECIFIED(&rp->rip6_nets->rip6_dest)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (j * sizeof(*ni) != length - 4)"
    },
    {
        "line": 34,
        "fullcodeline": "i -= sizeof(*ni), ++ni) {"
    },
    {
        "line": 39,
        "fullcodeline": "rip6_entry_print(ndo, ni, 0);"
    },
    {
        "line": 44,
        "fullcodeline": "if (j * sizeof(*ni) != length - 4)"
    },
    {
        "line": 50,
        "fullcodeline": "i -= sizeof(*ni), ++ni) {"
    },
    {
        "line": 55,
        "fullcodeline": "rip6_entry_print(ndo, ni, ni->rip6_metric);"
    },
    {
        "line": 23,
        "fullcodeline": "&&  rp->rip6_nets->rip6_metric == HOPCNT_INFINITY6"
    },
    {
        "line": 25,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-req dump\"));"
    },
    {
        "line": 29,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-req %d[%u]:\", j, length));"
    },
    {
        "line": 35,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 45,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-resp %d[%u]:\", j, length));"
    },
    {
        "line": 51,
        "fullcodeline": "if (ndo->ndo_vflag > 1)"
    },
    {
        "line": 58,
        "fullcodeline": "ND_PRINT((ndo, \"[|ripng]\"));"
    },
    {
        "line": 31,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-req %d:\", j));"
    },
    {
        "line": 47,
        "fullcodeline": "ND_PRINT((ndo, \" ripng-resp %d:\", j));"
    },
    {
        "line": 36,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t\"));"
    },
    {
        "line": 52,
        "fullcodeline": "ND_PRINT((ndo, \"\\n\\t\"));"
    },
    {
        "line": 38,
        "fullcodeline": "ND_PRINT((ndo, \" \"));"
    },
    {
        "line": 54,
        "fullcodeline": "ND_PRINT((ndo, \" \"));"
    }
]