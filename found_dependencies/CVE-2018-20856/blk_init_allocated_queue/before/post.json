[
    {
        "line": 3,
        "fullcodeline": "WARN_ON_ONCE(q->mq_ops);"
    },
    {
        "line": 5,
        "fullcodeline": "q->fq = blk_alloc_flush_queue(q, NUMA_NO_NODE, q->cmd_size);"
    },
    {
        "line": 15,
        "fullcodeline": "INIT_WORK(&q->timeout_work, blk_timeout_work);"
    },
    {
        "line": 16,
        "fullcodeline": "q->queue_flags\t\t|= QUEUE_FLAG_DEFAULT;"
    },
    {
        "line": 21,
        "fullcodeline": "blk_queue_make_request(q, blk_queue_bio);"
    },
    {
        "line": 23,
        "fullcodeline": "q->sg_reserved_size = INT_MAX;"
    },
    {
        "line": 33,
        "fullcodeline": "blk_free_flush_queue(q->fq);"
    },
    {
        "line": 6,
        "fullcodeline": "if (!q->fq)"
    },
    {
        "line": 9,
        "fullcodeline": "if (q->init_rq_fn && q->init_rq_fn(q, q->fq->flush_rq, GFP_KERNEL))"
    },
    {
        "line": 12,
        "fullcodeline": "if (blk_init_rl(&q->root_rl, q, GFP_KERNEL))"
    },
    {
        "line": 25,
        "fullcodeline": "if (elevator_init(q))"
    },
    {
        "line": 34,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 31,
        "fullcodeline": "q->exit_rq_fn(q, q->fq->flush_rq);"
    },
    {
        "line": 7,
        "fullcodeline": "return -ENOMEM;"
    }
]