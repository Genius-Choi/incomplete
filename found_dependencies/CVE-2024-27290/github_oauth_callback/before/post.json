[
    {
        "line": 4,
        "fullcodeline": "setup_translation()"
    },
    {
        "line": 5,
        "fullcodeline": "failed = False"
    },
    {
        "line": 6,
        "fullcodeline": "do_redirect = False"
    },
    {
        "line": 30,
        "fullcodeline": "flow = get_github_flow()"
    },
    {
        "line": 31,
        "fullcodeline": "credentials = flow.step2_exchange(request.args['code'])"
    },
    {
        "line": 32,
        "fullcodeline": "storage = RedisCredStorage(oauth_app='github')"
    },
    {
        "line": 33,
        "fullcodeline": "storage.put(credentials)"
    },
    {
        "line": 13,
        "fullcodeline": "if failed is False:"
    },
    {
        "line": 34,
        "fullcodeline": "return redirect(github_next['path'], **github_next['arguments'])"
    },
    {
        "line": 8,
        "fullcodeline": "logmessage('github_oauth_callback: server does not use github')"
    },
    {
        "line": 9,
        "fullcodeline": "failed = True"
    },
    {
        "line": 14,
        "fullcodeline": "github_next = json.loads(session['github_next'])"
    },
    {
        "line": 15,
        "fullcodeline": "del session['github_next']"
    },
    {
        "line": 24,
        "fullcodeline": "r.delete('da:github:userid:' + str(current_user.id))"
    },
    {
        "line": 25,
        "fullcodeline": "r.delete('da:using_github:userid:' + str(current_user.id))"
    },
    {
        "line": 3,
        "fullcodeline": "return ('File not found', 404)"
    },
    {
        "line": 10,
        "fullcodeline": "elif 'github_next' not in session:"
    },
    {
        "line": 16,
        "fullcodeline": "if 'code' not in request.args or 'state' not in request.args:"
    },
    {
        "line": 29,
        "fullcodeline": "return ('File not found', 404)"
    },
    {
        "line": 11,
        "fullcodeline": "logmessage('github_oauth_callback: next not in session')"
    },
    {
        "line": 12,
        "fullcodeline": "failed = True"
    },
    {
        "line": 17,
        "fullcodeline": "logmessage('github_oauth_callback: code and state not in args')"
    },
    {
        "line": 18,
        "fullcodeline": "failed = True"
    },
    {
        "line": 19,
        "fullcodeline": "do_redirect = True"
    },
    {
        "line": 27,
        "fullcodeline": "flash(word(\"There was a problem connecting to GitHub. Please check your GitHub configuration and try again.\"), 'danger')"
    },
    {
        "line": 20,
        "fullcodeline": "elif request.args['state'] != github_next['state']:"
    },
    {
        "line": 28,
        "fullcodeline": "return redirect(url_for('github_menu'))"
    },
    {
        "line": 21,
        "fullcodeline": "logmessage('github_oauth_callback: state did not match')"
    },
    {
        "line": 22,
        "fullcodeline": "failed = True"
    }
]