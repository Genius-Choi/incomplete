[
    {
        "line": 3,
        "fullcodeline": "struct state *st = md->st;"
    },
    {
        "line": 4,
        "fullcodeline": "enum state_kind from_state = md->v1_from_state;"
    },
    {
        "line": 5,
        "fullcodeline": "const struct state_v1_microcode *smc = md->smc;"
    },
    {
        "line": 6,
        "fullcodeline": "bool new_iv_set = md->new_iv_set;"
    },
    {
        "line": 7,
        "fullcodeline": "bool self_delete = FALSE;"
    },
    {
        "line": 500,
        "fullcodeline": "pexpect(st == md->st);"
    },
    {
        "line": 501,
        "fullcodeline": "statetime_t start = statetime_start(md->st);"
    },
    {
        "line": 506,
        "fullcodeline": "complete_v1_state_transition(md, smc->processor(st, md));"
    },
    {
        "line": 507,
        "fullcodeline": "statetime_stop(&start, \"%s()\", __func__);"
    },
    {
        "line": 9,
        "fullcodeline": "if (md->hdr.isa_flags & ISAKMP_FLAGS_v1_ENCRYPTION) {"
    },
    {
        "line": 105,
        "fullcodeline": "lset_t needed = smc->req_payloads;"
    },
    {
        "line": 106,
        "fullcodeline": "const char *excuse ="
    },
    {
        "line": 320,
        "fullcodeline": "md->message_pbs.roof = md->message_pbs.cur;"
    },
    {
        "line": 336,
        "fullcodeline": "if (!check_v1_HASH(smc->hash_type, smc->message, st, md)) {"
    },
    {
        "line": 343,
        "fullcodeline": "if (IS_PHASE1(from_state) || IS_PHASE15(from_state)) {"
    },
    {
        "line": 11,
        "fullcodeline": "dbg(\"received encrypted packet from %s\", str_endpoint(&md->sender, &b));"
    },
    {
        "line": 25,
        "fullcodeline": "md->encrypted = TRUE;"
    },
    {
        "line": 52,
        "fullcodeline": "md->raw_packet = clone_bytes_as_chunk(md->packet_pbs.start,"
    },
    {
        "line": 66,
        "fullcodeline": "passert(st->st_v1_new_iv.len >= e->enc_blocksize);"
    },
    {
        "line": 67,
        "fullcodeline": "st->st_v1_new_iv.len = e->enc_blocksize;   /* truncate */"
    },
    {
        "line": 75,
        "fullcodeline": "e->encrypt_ops->do_crypt(e, md->message_pbs.cur,"
    },
    {
        "line": 107,
        "fullcodeline": "LIN(SMF_PSK_AUTH | SMF_FIRST_ENCRYPTED_INPUT,"
    },
    {
        "line": 113,
        "fullcodeline": "while (np != ISAKMP_NEXT_NONE) {"
    },
    {
        "line": 324,
        "fullcodeline": "if (needed != 0) {"
    },
    {
        "line": 434,
        "fullcodeline": "while (p != NULL) {"
    },
    {
        "line": 472,
        "fullcodeline": "while (p != NULL) {"
    },
    {
        "line": 487,
        "fullcodeline": "while (p != NULL) {"
    },
    {
        "line": 495,
        "fullcodeline": "accept_self_delete(md);"
    },
    {
        "line": 496,
        "fullcodeline": "st = md->st;"
    },
    {
        "line": 13,
        "fullcodeline": "if (st == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (st->st_skeyid_e_nss == NULL) {"
    },
    {
        "line": 44,
        "fullcodeline": "if (pbs_left(&md->message_pbs) % e->enc_blocksize != 0) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!new_iv_set) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (DBGP(DBG_CRYPT)) {"
    },
    {
        "line": 76,
        "fullcodeline": "pbs_left(&md->message_pbs),"
    },
    {
        "line": 79,
        "fullcodeline": "if (DBGP(DBG_CRYPT)) {"
    },
    {
        "line": 114,
        "fullcodeline": "struct_desc *sd = v1_payload_desc(np);"
    },
    {
        "line": 125,
        "fullcodeline": "struct payload_digest *const pd = md->digest + md->digest_roof;"
    },
    {
        "line": 228,
        "fullcodeline": "passert(np < LELEM_ROOF);"
    },
    {
        "line": 262,
        "fullcodeline": "pd->payload_type = np;"
    },
    {
        "line": 304,
        "fullcodeline": "md->digest_roof++;"
    },
    {
        "line": 311,
        "fullcodeline": "excuse = \"\";"
    },
    {
        "line": 325,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 347,
        "fullcodeline": "if (md->chain[ISAKMP_NEXT_SA] != NULL &&"
    },
    {
        "line": 468,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 473,
        "fullcodeline": "self_delete |= accept_delete(md, p);"
    },
    {
        "line": 483,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 488,
        "fullcodeline": "handle_vendorid(md, (char *)p->pbs.cur,"
    },
    {
        "line": 490,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 14,
        "fullcodeline": "libreswan_log("
    },
    {
        "line": 19,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 45,
        "fullcodeline": "loglog(RC_LOG_SERIOUS, \"malformed message: not a multiple of encryption blocksize\");"
    },
    {
        "line": 53,
        "fullcodeline": "pbs_room(&md->packet_pbs),"
    },
    {
        "line": 70,
        "fullcodeline": "DBG_log(\"decrypting %u bytes using algorithm %s\","
    },
    {
        "line": 73,
        "fullcodeline": "DBG_dump_hunk(\"IV before:\", st->st_v1_new_iv);"
    },
    {
        "line": 80,
        "fullcodeline": "DBG_dump_hunk(\"IV after:\", st->st_v1_new_iv);"
    },
    {
        "line": 81,
        "fullcodeline": "DBG_log(\"decrypted payload (starts at offset %td):\","
    },
    {
        "line": 83,
        "fullcodeline": "DBG_dump(NULL, md->message_pbs.start,"
    },
    {
        "line": 89,
        "fullcodeline": "if (smc->flags & SMF_INPUT_ENCRYPTED) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (md->digest_roof >= elemsof(md->digest)) {"
    },
    {
        "line": 131,
        "fullcodeline": "if (st != NULL && st->st_connection != NULL &&"
    },
    {
        "line": 154,
        "fullcodeline": "if (sd == NULL) {"
    },
    {
        "line": 231,
        "fullcodeline": "lset_t s = LELEM(np);"
    },
    {
        "line": 255,
        "fullcodeline": "needed &= ~s;"
    },
    {
        "line": 263,
        "fullcodeline": "if (!in_struct(&pd->payload, sd, &md->message_pbs,"
    },
    {
        "line": 294,
        "fullcodeline": "passert(np < elemsof(md->chain));"
    },
    {
        "line": 295,
        "fullcodeline": "struct payload_digest **p = &md->chain[np];"
    },
    {
        "line": 299,
        "fullcodeline": "*p = pd;"
    },
    {
        "line": 300,
        "fullcodeline": "pd->next = NULL;"
    },
    {
        "line": 328,
        "fullcodeline": "bitnamesof(payload_name_ikev1, needed));"
    },
    {
        "line": 329,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 348,
        "fullcodeline": "md->hdr.isa_np != ISAKMP_NEXT_SA) {"
    },
    {
        "line": 349,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 356,
        "fullcodeline": "} else if (IS_QUICK(from_state)) {"
    },
    {
        "line": 463,
        "fullcodeline": "if (DBGP(DBG_BASE)) {"
    },
    {
        "line": 474,
        "fullcodeline": "if (DBGP(DBG_BASE)) {"
    },
    {
        "line": 478,
        "fullcodeline": "if (md->st != st) {"
    },
    {
        "line": 489,
        "fullcodeline": "pbs_left(&p->pbs), FALSE);"
    },
    {
        "line": 58,
        "fullcodeline": "if (st->st_v1_iv.len == 0) {"
    },
    {
        "line": 71,
        "fullcodeline": "(unsigned) pbs_left(&md->message_pbs),"
    },
    {
        "line": 82,
        "fullcodeline": "md->message_pbs.cur - md->message_pbs.roof);"
    },
    {
        "line": 84,
        "fullcodeline": "md->message_pbs.roof - md->message_pbs.start);"
    },
    {
        "line": 90,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 92,
        "fullcodeline": "SEND_NOTIFICATION(INVALID_FLAGS);"
    },
    {
        "line": 117,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 132,
        "fullcodeline": "(st->st_connection->policy & POLICY_AGGRESSIVE) == LEMPTY)"
    },
    {
        "line": 225,
        "fullcodeline": "passert(sd != NULL);"
    },
    {
        "line": 233,
        "fullcodeline": "if (LDISJOINT(s,"
    },
    {
        "line": 265,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 279,
        "fullcodeline": "DBG(DBG_PARSING,"
    },
    {
        "line": 297,
        "fullcodeline": "while (*p != NULL)"
    },
    {
        "line": 330,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 351,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 464,
        "fullcodeline": "DBG_dump(\"info:\", p->pbs.cur,"
    },
    {
        "line": 475,
        "fullcodeline": "DBG_dump(\"del:\", p->pbs.cur,"
    },
    {
        "line": 479,
        "fullcodeline": "pexpect(md->st == NULL);"
    },
    {
        "line": 480,
        "fullcodeline": "dbg(\"zapping ST as accept_delete() zapped MD.ST\");"
    },
    {
        "line": 481,
        "fullcodeline": "st = md->st;"
    },
    {
        "line": 59,
        "fullcodeline": "init_phase2_iv(st, &md->hdr.isa_msgid);"
    },
    {
        "line": 119,
        "fullcodeline": "elemsof(md->digest));"
    },
    {
        "line": 120,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 234,
        "fullcodeline": "needed | smc->opt_payloads |"
    },
    {
        "line": 240,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 268,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 280,
        "fullcodeline": "DBG_dump(\"     obj: \", pd->pbs.cur,"
    },
    {
        "line": 352,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 372,
        "fullcodeline": "if (md->hdr.isa_np != ISAKMP_NEXT_HASH) {"
    },
    {
        "line": 386,
        "fullcodeline": "i = 1;"
    },
    {
        "line": 442,
        "fullcodeline": "if (md->hdr.isa_xchg == ISAKMP_XCHG_INFO) {"
    },
    {
        "line": 448,
        "fullcodeline": "if (st == NULL) {"
    },
    {
        "line": 465,
        "fullcodeline": "pbs_left(&p->pbs));"
    },
    {
        "line": 476,
        "fullcodeline": "pbs_left(&p->pbs));"
    },
    {
        "line": 62,
        "fullcodeline": "restore_new_iv(st, st->st_v1_iv);"
    },
    {
        "line": 121,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 159,
        "fullcodeline": "sd = (IS_PHASE1(from_state) ||"
    },
    {
        "line": 171,
        "fullcodeline": "np = ISAKMP_NEXT_NATD_RFC;"
    },
    {
        "line": 172,
        "fullcodeline": "sd = &isakmp_nat_d_drafts;"
    },
    {
        "line": 177,
        "fullcodeline": "np = ISAKMP_NEXT_NATOA_RFC;"
    },
    {
        "line": 178,
        "fullcodeline": "sd = &isakmp_nat_oa_drafts;"
    },
    {
        "line": 189,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 216,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 239,
        "fullcodeline": "LELEM(ISAKMP_NEXT_CERT))) {"
    },
    {
        "line": 243,
        "fullcodeline": "enum_show(&ikev1_payload_names, np),"
    },
    {
        "line": 245,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 269,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 281,
        "fullcodeline": "pbs_left(&pd->pbs)));"
    },
    {
        "line": 373,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 387,
        "fullcodeline": "while (p != NULL) {"
    },
    {
        "line": 409,
        "fullcodeline": "if (id != NULL) {"
    },
    {
        "line": 449,
        "fullcodeline": "DBG(DBG_CONTROL, DBG_log("
    },
    {
        "line": 137,
        "fullcodeline": "if ((st->hidden_variables.st_nat_traversal & NAT_T_WITH_RFC_VALUES) == LEMPTY) {"
    },
    {
        "line": 201,
        "fullcodeline": "if (!in_struct(&pd->payload, &isakmp_ignore_desc, &md->message_pbs,"
    },
    {
        "line": 219,
        "fullcodeline": "enum_show(&ikev1_payload_names, np));"
    },
    {
        "line": 220,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 238,
        "fullcodeline": "LELEM(ISAKMP_NEXT_CR) |"
    },
    {
        "line": 246,
        "fullcodeline": "SEND_NOTIFICATION(INVALID_PAYLOAD_TYPE);"
    },
    {
        "line": 375,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 396,
        "fullcodeline": "p = p->next;"
    },
    {
        "line": 397,
        "fullcodeline": "i++;"
    },
    {
        "line": 460,
        "fullcodeline": "DBG_dump_pbs(&p->pbs);"
    },
    {
        "line": 142,
        "fullcodeline": "DBG(DBG_NATT,"
    },
    {
        "line": 146,
        "fullcodeline": "sd = NULL;"
    },
    {
        "line": 203,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 221,
        "fullcodeline": "SEND_NOTIFICATION(INVALID_PAYLOAD_TYPE);"
    },
    {
        "line": 237,
        "fullcodeline": "LELEM(ISAKMP_NEXT_D) |"
    },
    {
        "line": 376,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 388,
        "fullcodeline": "if (p != &md->digest[i]) {"
    },
    {
        "line": 410,
        "fullcodeline": "if (id->next == NULL ||"
    },
    {
        "line": 417,
        "fullcodeline": "if (id + 1 != id->next) {"
    },
    {
        "line": 451,
        "fullcodeline": "enum_show(& ikev1_notify_names,"
    },
    {
        "line": 143,
        "fullcodeline": "DBG_log(\"st_nat_traversal was: %s\","
    },
    {
        "line": 160,
        "fullcodeline": "IS_PHASE15(from_state)) ?"
    },
    {
        "line": 206,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 236,
        "fullcodeline": "LELEM(ISAKMP_NEXT_N) |"
    },
    {
        "line": 389,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 411,
        "fullcodeline": "id->next->next != NULL) {"
    },
    {
        "line": 412,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 414,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 418,
        "fullcodeline": "loglog(RC_LOG_SERIOUS,"
    },
    {
        "line": 420,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 144,
        "fullcodeline": "bitnamesof(natt_bit_names,"
    },
    {
        "line": 207,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    },
    {
        "line": 235,
        "fullcodeline": "LELEM(ISAKMP_NEXT_VID) |"
    },
    {
        "line": 391,
        "fullcodeline": "if (!md->encrypted) {"
    },
    {
        "line": 392,
        "fullcodeline": "SEND_NOTIFICATION(PAYLOAD_MALFORMED);"
    }
]