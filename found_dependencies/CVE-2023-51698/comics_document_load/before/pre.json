[
    {
        "line": 5,
        "fullcodeline": "ComicsDocument *comics_document = COMICS_DOCUMENT (document);"
    },
    {
        "line": 12,
        "fullcodeline": "GError *err = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "comics_document->archive = g_filename_from_uri (uri, NULL, error);"
    },
    {
        "line": 18,
        "fullcodeline": "mime_type = ev_file_get_mime_type (uri, FALSE, &err);"
    },
    {
        "line": 44,
        "fullcodeline": "success = g_spawn_command_line_sync (comics_document->list_command,"
    },
    {
        "line": 58,
        "fullcodeline": "cb_files = g_strsplit (std_out, EV_EOL, 0);"
    },
    {
        "line": 70,
        "fullcodeline": "comics_document->page_names = g_ptr_array_sized_new (64);"
    },
    {
        "line": 72,
        "fullcodeline": "supported_extensions = get_supported_image_extensions ();"
    },
    {
        "line": 98,
        "fullcodeline": "g_slist_foreach (supported_extensions, (GFunc) g_free, NULL);"
    },
    {
        "line": 111,
        "fullcodeline": "g_ptr_array_sort (comics_document->page_names, sort_page_names);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!comics_document->archive)"
    },
    {
        "line": 19,
        "fullcodeline": "if (!mime_type) {"
    },
    {
        "line": 62,
        "fullcodeline": "if (!cb_files) {"
    },
    {
        "line": 73,
        "fullcodeline": "for (i = 0; cb_files[i] != NULL; i++) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (comics_document->page_names->len == 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (!comics_check_decompress_command (mime_type, comics_document,"
    },
    {
        "line": 86,
        "fullcodeline": "gchar *suffix = g_strrstr (cb_file, \".\");"
    },
    {
        "line": 89,
        "fullcodeline": "suffix = g_ascii_strdown (suffix + 1, -1);"
    },
    {
        "line": 66,
        "fullcodeline": "_(\"No files in archive\"));"
    },
    {
        "line": 74,
        "fullcodeline": "if (comics_document->offset != NO_OFFSET) {"
    },
    {
        "line": 87,
        "fullcodeline": "if (!suffix)"
    },
    {
        "line": 90,
        "fullcodeline": "if (g_slist_find_custom (supported_extensions, suffix,"
    },
    {
        "line": 105,
        "fullcodeline": "_(\"No images found in archive %s\"),"
    },
    {
        "line": 92,
        "fullcodeline": "g_ptr_array_add (comics_document->page_names,"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (!comics_generate_command_lines (comics_document, error)) {"
    },
    {
        "line": 49,
        "fullcodeline": "} else if (!WIFEXITED(retval) || WEXITSTATUS(retval) != EXIT_SUCCESS) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (g_utf8_strlen (cb_files[i],-1) >"
    },
    {
        "line": 84,
        "fullcodeline": "cb_file = cb_files[i];"
    },
    {
        "line": 91,
        "fullcodeline": "(GCompareFunc) strcmp) != NULL) {"
    },
    {
        "line": 93,
        "fullcodeline": "g_strstrip (g_strdup (cb_file)));"
    },
    {
        "line": 26,
        "fullcodeline": "_(\"Unknown MIME Type\"));"
    },
    {
        "line": 53,
        "fullcodeline": "_(\"File corrupted\"));"
    },
    {
        "line": 77,
        "fullcodeline": "cb_file ="
    },
    {
        "line": 78,
        "fullcodeline": "g_utf8_offset_to_pointer (cb_files[i],"
    }
]