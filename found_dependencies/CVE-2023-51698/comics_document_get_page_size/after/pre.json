[
    {
        "line": 8,
        "fullcodeline": "ComicsDocument *comics_document = COMICS_DOCUMENT (document);"
    },
    {
        "line": 12,
        "fullcodeline": "GError *error = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "page_path = g_ptr_array_index (comics_document->page_names, page->index);"
    },
    {
        "line": 22,
        "fullcodeline": "loader = gdk_pixbuf_loader_new ();"
    },
    {
        "line": 23,
        "fullcodeline": "info.got_info = FALSE;"
    },
    {
        "line": 24,
        "fullcodeline": "g_signal_connect (loader, \"size-prepared\","
    },
    {
        "line": 66,
        "fullcodeline": "gdk_pixbuf_loader_close (loader, NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!archive_reopen_if_needed (comics_document, page_path, &error)) {"
    },
    {
        "line": 25,
        "fullcodeline": "G_CALLBACK (get_page_size_prepared_cb),"
    },
    {
        "line": 17,
        "fullcodeline": "g_warning (\"Fatal error opening archive: %s\", error->message);"
    },
    {
        "line": 18,
        "fullcodeline": "g_error_free (error);"
    },
    {
        "line": 30,
        "fullcodeline": "GError *error = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "name = ev_archive_get_entry_pathname (comics_document->archive);"
    },
    {
        "line": 32,
        "fullcodeline": "if (!ev_archive_read_next_header (comics_document->archive, &error)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (g_strcmp0 (name, page_path) == 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "char buf[BLOCK_SIZE];"
    },
    {
        "line": 46,
        "fullcodeline": "left = ev_archive_get_entry_size (comics_document->archive);"
    },
    {
        "line": 47,
        "fullcodeline": "read = ev_archive_read_data (comics_document->archive, buf,"
    },
    {
        "line": 33,
        "fullcodeline": "if (error != NULL) {"
    },
    {
        "line": 34,
        "fullcodeline": "g_warning (\"Fatal error handling archive (%s): %s\", G_STRFUNC, error->message);"
    },
    {
        "line": 48,
        "fullcodeline": "MIN(BLOCK_SIZE, left), &error);"
    },
    {
        "line": 49,
        "fullcodeline": "while (read > 0 && !info.got_info) {"
    },
    {
        "line": 54,
        "fullcodeline": "left -= read;"
    },
    {
        "line": 55,
        "fullcodeline": "read = ev_archive_read_data (comics_document->archive, buf,"
    },
    {
        "line": 59,
        "fullcodeline": "g_warning (\"Fatal error reading '%s' in archive: %s\", name, error->message);"
    },
    {
        "line": 50,
        "fullcodeline": "if (!gdk_pixbuf_loader_write (loader, (guchar *) buf, read, &error)) {"
    },
    {
        "line": 51,
        "fullcodeline": "read = -1;"
    },
    {
        "line": 56,
        "fullcodeline": "MIN(BLOCK_SIZE, left), &error);"
    }
]