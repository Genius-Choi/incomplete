[
    {
        "line": 9,
        "fullcodeline": "subdomain = get_subdomain(request)"
    },
    {
        "line": 10,
        "fullcodeline": "scim_config_dict = settings.SCIM_CONFIG.get(subdomain)"
    },
    {
        "line": 14,
        "fullcodeline": "valid_bearer_token = scim_config_dict.get(\"bearer_token\")"
    },
    {
        "line": 15,
        "fullcodeline": "scim_client_name = scim_config_dict.get(\"scim_client_name\")"
    },
    {
        "line": 18,
        "fullcodeline": "assert valid_bearer_token"
    },
    {
        "line": 19,
        "fullcodeline": "assert scim_client_name"
    },
    {
        "line": 21,
        "fullcodeline": "authorization = request.headers.get(\"Authorization\")"
    },
    {
        "line": 27,
        "fullcodeline": "request_notes = RequestNotes.get_notes(request)"
    },
    {
        "line": 28,
        "fullcodeline": "assert request_notes.realm"
    },
    {
        "line": 11,
        "fullcodeline": "if not scim_config_dict:"
    },
    {
        "line": 22,
        "fullcodeline": "if authorization is None or not constant_time_compare("
    },
    {
        "line": 33,
        "fullcodeline": "return SCIMClient.objects.get(realm=request_notes.realm, name=scim_client_name)"
    },
    {
        "line": 23,
        "fullcodeline": "authorization, f\"Bearer {valid_bearer_token}\""
    }
]