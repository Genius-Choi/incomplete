[
    {
        "line": 8,
        "fullcodeline": "count = be32_to_cpu(aclp->acl_cnt);"
    },
    {
        "line": 10,
        "fullcodeline": "acl = posix_acl_alloc(count, GFP_KERNEL);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!acl)"
    },
    {
        "line": 14,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "return ERR_PTR(-EINVAL);"
    },
    {
        "line": 16,
        "fullcodeline": "ace = &aclp->acl_entry[i];"
    },
    {
        "line": 12,
        "fullcodeline": "return ERR_PTR(-ENOMEM);"
    },
    {
        "line": 24,
        "fullcodeline": "acl_e->e_tag = be32_to_cpu(ace->ae_tag);"
    },
    {
        "line": 25,
        "fullcodeline": "acl_e->e_perm = be16_to_cpu(ace->ae_perm);"
    },
    {
        "line": 36,
        "fullcodeline": "acl_e->e_id = ACL_UNDEFINED_ID;"
    },
    {
        "line": 30,
        "fullcodeline": "acl_e->e_id = be32_to_cpu(ace->ae_id);"
    }
]