[
    {
        "line": 9,
        "fullcodeline": "key_check(key);"
    },
    {
        "line": 10,
        "fullcodeline": "key_check(keyring);"
    },
    {
        "line": 12,
        "fullcodeline": "awaken = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "ret = -EBUSY;"
    },
    {
        "line": 15,
        "fullcodeline": "mutex_lock(&key_construction_mutex);"
    },
    {
        "line": 49,
        "fullcodeline": "mutex_unlock(&key_construction_mutex);"
    },
    {
        "line": 18,
        "fullcodeline": "if (!test_bit(KEY_FLAG_INSTANTIATED, &key->flags)) {"
    },
    {
        "line": 20,
        "fullcodeline": "ret = key->type->instantiate(key, prep);"
    },
    {
        "line": 53,
        "fullcodeline": "wake_up_bit(&key->flags, KEY_FLAG_USER_CONSTRUCT);"
    },
    {
        "line": 22,
        "fullcodeline": "if (ret == 0) {"
    },
    {
        "line": 25,
        "fullcodeline": "set_bit(KEY_FLAG_INSTANTIATED, &key->flags);"
    },
    {
        "line": 27,
        "fullcodeline": "if (test_and_clear_bit(KEY_FLAG_USER_CONSTRUCT, &key->flags))"
    },
    {
        "line": 42,
        "fullcodeline": "if (prep->expiry != TIME_T_MAX) {"
    },
    {
        "line": 28,
        "fullcodeline": "awaken = 1;"
    },
    {
        "line": 35,
        "fullcodeline": "__key_link(key, _edit);"
    },
    {
        "line": 40,
        "fullcodeline": "key_revoke(authkey);"
    },
    {
        "line": 43,
        "fullcodeline": "key->expiry = prep->expiry;"
    },
    {
        "line": 44,
        "fullcodeline": "key_schedule_gc(prep->expiry + key_gc_delay);"
    },
    {
        "line": 32,
        "fullcodeline": "if (test_bit(KEY_FLAG_KEEP, &keyring->flags))"
    },
    {
        "line": 33,
        "fullcodeline": "set_bit(KEY_FLAG_KEEP, &key->flags);"
    }
]