[
    {
        "line": 18,
        "fullcodeline": "fprintf(trace, \"<OperatingPointsInformation\");"
    },
    {
        "line": 19,
        "fullcodeline": "fprintf(trace, \" scalability_mask=\\\"%u (\", ptr->scalability_mask);"
    },
    {
        "line": 33,
        "fullcodeline": "fprintf(trace, \")\\\" num_profile_tier_level=\\\"%u\\\"\", gf_list_count(ptr->profile_tier_levels) );"
    },
    {
        "line": 34,
        "fullcodeline": "fprintf(trace, \" num_operating_points=\\\"%u\\\" dependency_layers=\\\"%u\\\"\", gf_list_count(ptr->operating_points), gf_list_count(ptr->dependency_layers));"
    },
    {
        "line": 35,
        "fullcodeline": "fprintf(trace, \">\\n\");"
    },
    {
        "line": 38,
        "fullcodeline": "count=gf_list_count(ptr->profile_tier_levels);"
    },
    {
        "line": 45,
        "fullcodeline": "count=gf_list_count(ptr->operating_points);"
    },
    {
        "line": 60,
        "fullcodeline": "count=gf_list_count(ptr->dependency_layers);"
    },
    {
        "line": 77,
        "fullcodeline": "fprintf(trace, \"</OperatingPointsInformation>\\n\");"
    },
    {
        "line": 5,
        "fullcodeline": "if (!ptr) {"
    },
    {
        "line": 39,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 46,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 61,
        "fullcodeline": "for (i = 0; i < count; i++) {"
    },
    {
        "line": 6,
        "fullcodeline": "fprintf(trace, \"<OperatingPointsInformation scalability_mask=\\\"Multiview|Spatial scalability|Auxilary|unknown\\\" num_profile_tier_level=\\\"\\\" num_operating_points=\\\"\\\" dependency_layers=\\\"\\\">\\n\");"
    },
    {
        "line": 8,
        "fullcodeline": "fprintf(trace, \" <ProfileTierLevel general_profile_space=\\\"\\\" general_tier_flag=\\\"\\\" general_profile_idc=\\\"\\\" general_profile_compatibility_flags=\\\"\\\" general_constraint_indicator_flags=\\\"\\\" />\\n\");"
    },
    {
        "line": 10,
        "fullcodeline": "fprintf(trace, \"<OperatingPoint output_layer_set_idx=\\\"\\\" max_temporal_id=\\\"\\\" layer_count=\\\"\\\" minPicWidth=\\\"\\\" minPicHeight=\\\"\\\" maxPicWidth=\\\"\\\" maxPicHeight=\\\"\\\" maxChromaFormat=\\\"\\\" maxBitDepth=\\\"\\\" frame_rate_info_flag=\\\"\\\" bit_rate_info_flag=\\\"\\\" avgFrameRate=\\\"\\\" constantFrameRate=\\\"\\\" maxBitRate=\\\"\\\" avgBitRate=\\\"\\\"/>\\n\");"
    },
    {
        "line": 12,
        "fullcodeline": "fprintf(trace, \"<Layer dependent_layerID=\\\"\\\" num_layers_dependent_on=\\\"\\\" dependent_on_layerID=\\\"\\\" dimension_identifier=\\\"\\\"/>\\n\");"
    },
    {
        "line": 13,
        "fullcodeline": "fprintf(trace, \"</OperatingPointsInformation>\\n\");"
    },
    {
        "line": 22,
        "fullcodeline": "fprintf(trace, \"Multiview\");"
    },
    {
        "line": 25,
        "fullcodeline": "fprintf(trace, \"Spatial scalability\");"
    },
    {
        "line": 28,
        "fullcodeline": "fprintf(trace, \"Auxilary\");"
    },
    {
        "line": 31,
        "fullcodeline": "fprintf(trace, \"unknown\");"
    },
    {
        "line": 40,
        "fullcodeline": "LHEVC_ProfileTierLevel *ptl = (LHEVC_ProfileTierLevel *)gf_list_get(ptr->profile_tier_levels, i);"
    },
    {
        "line": 47,
        "fullcodeline": "LHEVC_OperatingPoint *op = (LHEVC_OperatingPoint *)gf_list_get(ptr->operating_points, i);"
    },
    {
        "line": 48,
        "fullcodeline": "fprintf(trace, \"<OperatingPoint output_layer_set_idx=\\\"%u\\\"\", op->output_layer_set_idx);"
    },
    {
        "line": 49,
        "fullcodeline": "fprintf(trace, \" max_temporal_id=\\\"%u\\\" layer_count=\\\"%u\\\"\", op->max_temporal_id, op->layer_count);"
    },
    {
        "line": 50,
        "fullcodeline": "fprintf(trace, \" minPicWidth=\\\"%u\\\" minPicHeight=\\\"%u\\\"\", op->minPicWidth, op->minPicHeight);"
    },
    {
        "line": 51,
        "fullcodeline": "fprintf(trace, \" maxPicWidth=\\\"%u\\\" maxPicHeight=\\\"%u\\\"\", op->maxPicWidth, op->maxPicHeight);"
    },
    {
        "line": 52,
        "fullcodeline": "fprintf(trace, \" maxChromaFormat=\\\"%u\\\" maxBitDepth=\\\"%u\\\"\", op->maxChromaFormat, op->maxBitDepth);"
    },
    {
        "line": 53,
        "fullcodeline": "fprintf(trace, \" frame_rate_info_flag=\\\"%u\\\" bit_rate_info_flag=\\\"%u\\\"\", op->frame_rate_info_flag, op->bit_rate_info_flag);"
    },
    {
        "line": 58,
        "fullcodeline": "fprintf(trace, \"/>\\n\");"
    },
    {
        "line": 63,
        "fullcodeline": "LHEVC_DependentLayer *dep = (LHEVC_DependentLayer *)gf_list_get(ptr->dependency_layers, i);"
    },
    {
        "line": 64,
        "fullcodeline": "fprintf(trace, \"<Layer dependent_layerID=\\\"%u\\\" num_layers_dependent_on=\\\"%u\\\"\", dep->dependent_layerID, dep->num_layers_dependent_on);"
    },
    {
        "line": 71,
        "fullcodeline": "fprintf(trace, \" dimension_identifier=\\\"\");"
    },
    {
        "line": 75,
        "fullcodeline": "fprintf(trace, \"\\\"/>\\n\");"
    },
    {
        "line": 72,
        "fullcodeline": "for (j = 0; j < 16; j++)"
    },
    {
        "line": 55,
        "fullcodeline": "fprintf(trace, \" avgFrameRate=\\\"%u\\\" constantFrameRate=\\\"%u\\\"\", op->avgFrameRate, op->constantFrameRate);"
    },
    {
        "line": 57,
        "fullcodeline": "fprintf(trace, \" maxBitRate=\\\"%u\\\" avgBitRate=\\\"%u\\\"\", op->maxBitRate, op->avgBitRate);"
    },
    {
        "line": 66,
        "fullcodeline": "fprintf(trace, \" dependent_on_layerID=\\\"\");"
    },
    {
        "line": 69,
        "fullcodeline": "fprintf(trace, \"\\\"\");"
    },
    {
        "line": 73,
        "fullcodeline": "if (ptr->scalability_mask & (1 << j))"
    },
    {
        "line": 67,
        "fullcodeline": "for (j = 0; j < dep->num_layers_dependent_on; j++)"
    },
    {
        "line": 68,
        "fullcodeline": "fprintf(trace, \"%d \", dep->dependent_on_layerID[j]);"
    },
    {
        "line": 74,
        "fullcodeline": "fprintf(trace, \"%d \", dep->dimension_identifier[j]);"
    }
]