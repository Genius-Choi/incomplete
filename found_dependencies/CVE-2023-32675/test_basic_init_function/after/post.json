[
    {
        "line": 2,
        "fullcodeline": "code = \"\"\""
    },
    {
        "line": 10,
        "fullcodeline": "c = get_contract(code, *[123])"
    },
    {
        "line": 12,
        "fullcodeline": "assert c.val() == 123"
    },
    {
        "line": 15,
        "fullcodeline": "assembly = vyper.compile_code(code, [\"asm\"])[\"asm\"].split(\" \")"
    },
    {
        "line": 16,
        "fullcodeline": "ir_return_idx_start = assembly.index(\"{\")"
    },
    {
        "line": 17,
        "fullcodeline": "ir_return_idx_end = assembly.index(\"}\")"
    },
    {
        "line": 19,
        "fullcodeline": "assert \"CALLDATALOAD\" in assembly"
    },
    {
        "line": 20,
        "fullcodeline": "assert \"CALLDATACOPY\" not in assembly[:ir_return_idx_start] + assembly[ir_return_idx_end:]"
    },
    {
        "line": 21,
        "fullcodeline": "assert \"CALLDATALOAD\" not in assembly[:ir_return_idx_start] + assembly[ir_return_idx_end:]"
    }
]