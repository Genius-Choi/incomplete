[
    {
        "line": 9,
        "fullcodeline": "passphrase = _text_to_bytes_and_warn(\"passphrase\", passphrase)"
    },
    {
        "line": 14,
        "fullcodeline": "bio = _new_mem_buf(buffer)"
    },
    {
        "line": 23,
        "fullcodeline": "p12 = _lib.d2i_PKCS12_bio(bio, _ffi.NULL)"
    },
    {
        "line": 26,
        "fullcodeline": "p12 = _ffi.gc(p12, _lib.PKCS12_free)"
    },
    {
        "line": 28,
        "fullcodeline": "pkey = _ffi.new(\"EVP_PKEY**\")"
    },
    {
        "line": 29,
        "fullcodeline": "cert = _ffi.new(\"X509**\")"
    },
    {
        "line": 30,
        "fullcodeline": "cacerts = _ffi.new(\"Cryptography_STACK_OF_X509**\")"
    },
    {
        "line": 32,
        "fullcodeline": "parse_result = _lib.PKCS12_parse(p12, passphrase, pkey, cert, cacerts)"
    },
    {
        "line": 36,
        "fullcodeline": "cacerts = _ffi.gc(cacerts[0], _lib.sk_X509_free)"
    },
    {
        "line": 69,
        "fullcodeline": "pycacerts = []"
    },
    {
        "line": 77,
        "fullcodeline": "pkcs12 = PKCS12.__new__(PKCS12)"
    },
    {
        "line": 78,
        "fullcodeline": "pkcs12._pkey = pykey"
    },
    {
        "line": 79,
        "fullcodeline": "pkcs12._cert = pycert"
    },
    {
        "line": 80,
        "fullcodeline": "pkcs12._cacerts = pycacerts"
    },
    {
        "line": 81,
        "fullcodeline": "pkcs12._friendlyname = friendlyname"
    },
    {
        "line": 11,
        "fullcodeline": "if isinstance(buffer, _text_type):"
    },
    {
        "line": 20,
        "fullcodeline": "if not passphrase:"
    },
    {
        "line": 24,
        "fullcodeline": "if p12 == _ffi.NULL:"
    },
    {
        "line": 33,
        "fullcodeline": "if not parse_result:"
    },
    {
        "line": 46,
        "fullcodeline": "if pkey[0] == _ffi.NULL:"
    },
    {
        "line": 52,
        "fullcodeline": "if cert[0] == _ffi.NULL:"
    },
    {
        "line": 70,
        "fullcodeline": "for i in range(_lib.sk_X509_num(cacerts)):"
    },
    {
        "line": 74,
        "fullcodeline": "if not pycacerts:"
    },
    {
        "line": 12,
        "fullcodeline": "buffer = buffer.encode(\"ascii\")"
    },
    {
        "line": 21,
        "fullcodeline": "passphrase = _ffi.NULL"
    },
    {
        "line": 42,
        "fullcodeline": "_raise_current_error()"
    },
    {
        "line": 47,
        "fullcodeline": "pykey = None"
    },
    {
        "line": 49,
        "fullcodeline": "pykey = PKey.__new__(PKey)"
    },
    {
        "line": 50,
        "fullcodeline": "pykey._pkey = _ffi.gc(pkey[0], _lib.EVP_PKEY_free)"
    },
    {
        "line": 53,
        "fullcodeline": "pycert = None"
    },
    {
        "line": 54,
        "fullcodeline": "friendlyname = None"
    },
    {
        "line": 56,
        "fullcodeline": "pycert = X509.__new__(X509)"
    },
    {
        "line": 57,
        "fullcodeline": "pycert._x509 = _ffi.gc(cert[0], _lib.X509_free)"
    },
    {
        "line": 59,
        "fullcodeline": "friendlyname_length = _ffi.new(\"int*\")"
    },
    {
        "line": 60,
        "fullcodeline": "friendlyname_buffer = _lib.X509_alias_get0("
    },
    {
        "line": 63,
        "fullcodeline": "friendlyname = _ffi.buffer("
    },
    {
        "line": 75,
        "fullcodeline": "pycacerts = None"
    },
    {
        "line": 65,
        "fullcodeline": ")[:]"
    },
    {
        "line": 66,
        "fullcodeline": "if friendlyname_buffer == _ffi.NULL:"
    },
    {
        "line": 71,
        "fullcodeline": "pycacert = X509.__new__(X509)"
    },
    {
        "line": 72,
        "fullcodeline": "pycacert._x509 = _lib.sk_X509_value(cacerts, i)"
    },
    {
        "line": 73,
        "fullcodeline": "pycacerts.append(pycacert)"
    },
    {
        "line": 44,
        "fullcodeline": "pass"
    },
    {
        "line": 67,
        "fullcodeline": "friendlyname = None"
    }
]