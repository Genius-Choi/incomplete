[
    {
        "line": 9,
        "fullcodeline": "if (codec->ActiveQP && node) {"
    },
    {
        "line": 10,
        "fullcodeline": "e = gf_bifs_dec_unquant_field(codec, bs, node, field);"
    },
    {
        "line": 49,
        "fullcodeline": "size = gf_bs_read_int(bs, 5);"
    },
    {
        "line": 50,
        "fullcodeline": "length = gf_bs_read_int(bs, size);"
    },
    {
        "line": 110,
        "fullcodeline": "w = gf_bs_read_int(bs, 12);"
    },
    {
        "line": 111,
        "fullcodeline": "h = gf_bs_read_int(bs, 12);"
    },
    {
        "line": 112,
        "fullcodeline": "length = gf_bs_read_int(bs, 2);"
    },
    {
        "line": 115,
        "fullcodeline": "length += 1;"
    },
    {
        "line": 116,
        "fullcodeline": "size = w * h * length;"
    },
    {
        "line": 193,
        "fullcodeline": "new_node = gf_bifs_dec_node(codec, bs, field->NDTtype);"
    },
    {
        "line": 11,
        "fullcodeline": "if (e != GF_EOS) return e;"
    },
    {
        "line": 19,
        "fullcodeline": "((SFColor *)field->far_ptr)->red = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 20,
        "fullcodeline": "((SFColor *)field->far_ptr)->green = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 21,
        "fullcodeline": "((SFColor *)field->far_ptr)->blue = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 24,
        "fullcodeline": "*((SFFloat *)field->far_ptr) = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 30,
        "fullcodeline": "*((SFTime *)field->far_ptr) = gf_bs_read_double(bs);"
    },
    {
        "line": 34,
        "fullcodeline": "((SFVec2f *)field->far_ptr)->x = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 35,
        "fullcodeline": "((SFVec2f *)field->far_ptr)->y = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 38,
        "fullcodeline": "((SFVec3f *)field->far_ptr)->x = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 39,
        "fullcodeline": "((SFVec3f *)field->far_ptr)->y = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 40,
        "fullcodeline": "((SFVec3f *)field->far_ptr)->z = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 43,
        "fullcodeline": "((SFRotation *)field->far_ptr)->x = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 44,
        "fullcodeline": "((SFRotation *)field->far_ptr)->y = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 45,
        "fullcodeline": "((SFRotation *)field->far_ptr)->z = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 46,
        "fullcodeline": "((SFRotation *)field->far_ptr)->q = BD_ReadSFFloat(codec, bs);"
    },
    {
        "line": 51,
        "fullcodeline": "if (gf_bs_available(bs) < length) return GF_NON_COMPLIANT_BITSTREAM;"
    },
    {
        "line": 76,
        "fullcodeline": "SFURL *url = (SFURL *) field->far_ptr;"
    },
    {
        "line": 114,
        "fullcodeline": "if (length > 3) length = 3;"
    },
    {
        "line": 117,
        "fullcodeline": "if (gf_bs_available(bs) < size) return GF_NON_COMPLIANT_BITSTREAM;"
    },
    {
        "line": 123,
        "fullcodeline": "for (i=0; i<size; i++) {"
    },
    {
        "line": 129,
        "fullcodeline": "SFCommandBuffer *sfcb = (SFCommandBuffer *)field->far_ptr;"
    },
    {
        "line": 142,
        "fullcodeline": "size = gf_bs_read_int(bs, 5);"
    },
    {
        "line": 143,
        "fullcodeline": "length = gf_bs_read_int(bs, size);"
    },
    {
        "line": 146,
        "fullcodeline": "sfcb->bufferSize = length;"
    },
    {
        "line": 156,
        "fullcodeline": "SFCommandBufferChanged(codec, node);"
    },
    {
        "line": 210,
        "fullcodeline": "SFAttrRef *ar = (SFAttrRef *)field->far_ptr;"
    },
    {
        "line": 211,
        "fullcodeline": "u32 nodeID = 1 + gf_bs_read_int(bs, codec->info->config.NodeIDBits);"
    },
    {
        "line": 212,
        "fullcodeline": "ar->node = gf_sg_find_node(codec->current_graph, nodeID);"
    },
    {
        "line": 16,
        "fullcodeline": "* ((SFBool *) field->far_ptr) = (SFBool) gf_bs_read_int(bs, 1);"
    },
    {
        "line": 27,
        "fullcodeline": "*((SFInt32 *)field->far_ptr) = (s32) gf_bs_read_int(bs, 32);"
    },
    {
        "line": 53,
        "fullcodeline": "if (node && (node->sgprivate->tag==TAG_MPEG4_CacheTexture) && (field->fieldIndex<=2)) {"
    },
    {
        "line": 54,
        "fullcodeline": "M_CacheTexture *ct = (M_CacheTexture *) node;"
    },
    {
        "line": 57,
        "fullcodeline": "ct->data = (u8*)gf_malloc(sizeof(char)*length);"
    },
    {
        "line": 77,
        "fullcodeline": "size = gf_bs_read_int(bs, 1);"
    },
    {
        "line": 121,
        "fullcodeline": "((SFImage *)field->far_ptr)->pixels = (unsigned char *)gf_malloc(sizeof(char)*size);"
    },
    {
        "line": 130,
        "fullcodeline": "if (!node) return GF_BAD_PARAM;"
    },
    {
        "line": 136,
        "fullcodeline": "while (gf_list_count(sfcb->commandList)) {"
    },
    {
        "line": 144,
        "fullcodeline": "if (gf_bs_available(bs) < length) return GF_NON_COMPLIANT_BITSTREAM;"
    },
    {
        "line": 175,
        "fullcodeline": "GF_Node *old_node = *((GF_Node **) field->far_ptr);"
    },
    {
        "line": 195,
        "fullcodeline": "e = gf_node_register(new_node, is_mem_com ? NULL : node);"
    },
    {
        "line": 213,
        "fullcodeline": "if (!ar->node) {"
    },
    {
        "line": 81,
        "fullcodeline": "length = gf_bs_read_int(bs, 10);"
    },
    {
        "line": 124,
        "fullcodeline": "((SFImage *)field->far_ptr)->pixels[i] = gf_bs_read_int(bs, 8);"
    },
    {
        "line": 133,
        "fullcodeline": "sfcb->buffer = NULL;"
    },
    {
        "line": 137,
        "fullcodeline": "GF_Command *com = (GF_Command*)gf_list_get(sfcb->commandList, 0);"
    },
    {
        "line": 138,
        "fullcodeline": "gf_list_rem(sfcb->commandList, 0);"
    },
    {
        "line": 148,
        "fullcodeline": "sfcb->buffer = (unsigned char *)gf_malloc(sizeof(char)*(length));"
    },
    {
        "line": 162,
        "fullcodeline": "if (codec->dec_memory_mode || (node->sgprivate->tag==TAG_MPEG4_InputSensor)) {"
    },
    {
        "line": 163,
        "fullcodeline": "CommandBufferItem *cbi = (CommandBufferItem *)gf_malloc(sizeof(CommandBufferItem));"
    },
    {
        "line": 164,
        "fullcodeline": "cbi->node = node;"
    },
    {
        "line": 165,
        "fullcodeline": "gf_node_register(cbi->node, NULL);"
    },
    {
        "line": 166,
        "fullcodeline": "cbi->cb = sfcb;"
    },
    {
        "line": 176,
        "fullcodeline": "if (old_node != NULL) {"
    },
    {
        "line": 59,
        "fullcodeline": "} else if (node && (node->sgprivate->tag==TAG_MPEG4_BitWrapper) ) {"
    },
    {
        "line": 85,
        "fullcodeline": "size = gf_bs_read_int(bs, 5);"
    },
    {
        "line": 86,
        "fullcodeline": "length = gf_bs_read_int(bs, size);"
    },
    {
        "line": 88,
        "fullcodeline": "buffer = NULL;"
    },
    {
        "line": 150,
        "fullcodeline": "for (i=0; i<length; i++) {"
    },
    {
        "line": 177,
        "fullcodeline": "u32 i, count = gf_list_count(codec->command_buffers);"
    },
    {
        "line": 188,
        "fullcodeline": "gf_node_unregister(old_node, node);"
    },
    {
        "line": 216,
        "fullcodeline": "u32 nbBitsDEF = gf_get_bit_size(gf_node_get_num_fields_in_mode(ar->node, GF_SG_FIELD_CODING_DEF) - 1);"
    },
    {
        "line": 217,
        "fullcodeline": "u32 field_ref = gf_bs_read_int(bs, nbBitsDEF);"
    },
    {
        "line": 63,
        "fullcodeline": "bw->buffer.buffer = (char*)gf_malloc(sizeof(char)*length);"
    },
    {
        "line": 87,
        "fullcodeline": "if (gf_bs_available(bs) < length) return GF_NON_COMPLIANT_BITSTREAM;"
    },
    {
        "line": 96,
        "fullcodeline": "if (buffer && strlen(buffer)) {"
    },
    {
        "line": 178,
        "fullcodeline": "for (i=0; i<count; i++) {"
    },
    {
        "line": 218,
        "fullcodeline": "codec->LastError = gf_bifs_get_field_index(ar->node, field_ref, GF_SG_FIELD_CODING_DEF, &ar->fieldIndex);"
    },
    {
        "line": 67,
        "fullcodeline": "((SFString *)field->far_ptr)->buffer = (char *)gf_malloc(sizeof(char)*(length+1));"
    },
    {
        "line": 90,
        "fullcodeline": "buffer = (char *)gf_malloc(sizeof(char)*(length+1));"
    },
    {
        "line": 91,
        "fullcodeline": "memset(buffer, 0, length+1);"
    },
    {
        "line": 151,
        "fullcodeline": "sfcb->buffer[i] = gf_bs_read_int(bs, 8);"
    },
    {
        "line": 179,
        "fullcodeline": "CommandBufferItem *cbi = (CommandBufferItem*) gf_list_get(codec->command_buffers, i);"
    },
    {
        "line": 69,
        "fullcodeline": "for (i=0; i<length; i++) {"
    },
    {
        "line": 84,
        "fullcodeline": "if ( url->OD_ID ) url->OD_ID = (u32) -1;"
    },
    {
        "line": 92,
        "fullcodeline": "for (i=0; i<length; i++) buffer[i] = gf_bs_read_int(bs, 8);"
    },
    {
        "line": 180,
        "fullcodeline": "if (cbi->node == old_node) {"
    },
    {
        "line": 181,
        "fullcodeline": "gf_list_rem(codec->command_buffers, i);"
    },
    {
        "line": 182,
        "fullcodeline": "i--;"
    },
    {
        "line": 183,
        "fullcodeline": "count--;"
    },
    {
        "line": 184,
        "fullcodeline": "gf_node_unregister(cbi->node, NULL);"
    },
    {
        "line": 70,
        "fullcodeline": "((SFString *)field->far_ptr)->buffer[i] = gf_bs_read_int(bs, 8);"
    }
]