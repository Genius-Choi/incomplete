[
    {
        "line": 2,
        "fullcodeline": "mailFrom = sydent.cfg.get('email', 'email.from')"
    },
    {
        "line": 3,
        "fullcodeline": "mailTemplateFile = sydent.cfg.get('email', templateName)"
    },
    {
        "line": 5,
        "fullcodeline": "myHostname = sydent.cfg.get('email', 'email.hostname')"
    },
    {
        "line": 8,
        "fullcodeline": "midRandom = \"\".join([random.choice(string.ascii_letters) for _ in range(16)])"
    },
    {
        "line": 9,
        "fullcodeline": "messageid = \"<%d%s@%s>\" % (time_msec(), midRandom, myHostname)"
    },
    {
        "line": 11,
        "fullcodeline": "allSubstitutions = {}"
    },
    {
        "line": 12,
        "fullcodeline": "allSubstitutions.update(substitutions)"
    },
    {
        "line": 13,
        "fullcodeline": "allSubstitutions.update({"
    },
    {
        "line": 25,
        "fullcodeline": "mailString = open(mailTemplateFile).read().decode('utf8') % allSubstitutions"
    },
    {
        "line": 26,
        "fullcodeline": "parsedFrom = email.utils.parseaddr(mailFrom)[1]"
    },
    {
        "line": 27,
        "fullcodeline": "parsedTo = email.utils.parseaddr(mailTo)[1]"
    },
    {
        "line": 32,
        "fullcodeline": "mailServer = sydent.cfg.get('email', 'email.smtphost')"
    },
    {
        "line": 33,
        "fullcodeline": "mailPort = sydent.cfg.get('email', 'email.smtpport')"
    },
    {
        "line": 34,
        "fullcodeline": "mailUsername = sydent.cfg.get('email', 'email.smtpusername')"
    },
    {
        "line": 35,
        "fullcodeline": "mailPassword = sydent.cfg.get('email', 'email.smtppassword')"
    },
    {
        "line": 36,
        "fullcodeline": "mailTLSMode = sydent.cfg.get('email', 'email.tlsmode')"
    },
    {
        "line": 37,
        "fullcodeline": "logger.info(\"Sending mail to %s with mail server: %s\" % (mailTo, mailServer,))"
    },
    {
        "line": 6,
        "fullcodeline": "if myHostname == '':"
    },
    {
        "line": 20,
        "fullcodeline": "for k,v in allSubstitutions.items():"
    },
    {
        "line": 28,
        "fullcodeline": "if parsedFrom == '' or parsedTo == '':"
    },
    {
        "line": 7,
        "fullcodeline": "myHostname = socket.getfqdn()"
    },
    {
        "line": 29,
        "fullcodeline": "logger.info(\"Couldn't parse from / to address %s / %s\", mailFrom, mailTo)"
    },
    {
        "line": 30,
        "fullcodeline": "raise EmailAddressException()"
    },
    {
        "line": 53,
        "fullcodeline": "smtp.sendmail(mailFrom, mailTo, mailString.encode('utf-8'))"
    },
    {
        "line": 54,
        "fullcodeline": "smtp.quit()"
    },
    {
        "line": 21,
        "fullcodeline": "allSubstitutions[k] = v.decode('utf8')"
    },
    {
        "line": 22,
        "fullcodeline": "allSubstitutions[k+\"_forhtml\"] = cgi.escape(v.decode('utf8'))"
    },
    {
        "line": 23,
        "fullcodeline": "allSubstitutions[k+\"_forurl\"] = urllib.quote(v)"
    },
    {
        "line": 39,
        "fullcodeline": "if mailTLSMode == 'SSL' or mailTLSMode == 'TLS':"
    },
    {
        "line": 46,
        "fullcodeline": "if mailUsername != '':"
    },
    {
        "line": 15,
        "fullcodeline": "'date': email.utils.formatdate(localtime=False),"
    },
    {
        "line": 40,
        "fullcodeline": "smtp = smtplib.SMTP_SSL(mailServer, mailPort, myHostname)"
    },
    {
        "line": 47,
        "fullcodeline": "smtp.login(mailUsername, mailPassword)"
    },
    {
        "line": 57,
        "fullcodeline": "ese = EmailSendException()"
    },
    {
        "line": 58,
        "fullcodeline": "ese.cause = origException"
    },
    {
        "line": 59,
        "fullcodeline": "raise ese"
    },
    {
        "line": 41,
        "fullcodeline": "elif mailTLSMode == 'STARTTLS':"
    },
    {
        "line": 56,
        "fullcodeline": "twisted.python.log.err()"
    },
    {
        "line": 42,
        "fullcodeline": "smtp = smtplib.SMTP(mailServer, mailPort, myHostname)"
    },
    {
        "line": 43,
        "fullcodeline": "smtp.starttls()"
    },
    {
        "line": 45,
        "fullcodeline": "smtp = smtplib.SMTP(mailServer, mailPort, myHostname)"
    }
]