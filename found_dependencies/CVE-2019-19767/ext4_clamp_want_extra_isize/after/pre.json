[
    {
        "line": 3,
        "fullcodeline": "struct ext4_sb_info *sbi = EXT4_SB(sb);"
    },
    {
        "line": 4,
        "fullcodeline": "struct ext4_super_block *es = sbi->s_es;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned def_extra_isize = sizeof(struct ext4_inode) -"
    },
    {
        "line": 8,
        "fullcodeline": "if (sbi->s_inode_size == EXT4_GOOD_OLD_INODE_SIZE) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (sbi->s_want_extra_isize < 4) {"
    },
    {
        "line": 9,
        "fullcodeline": "sbi->s_want_extra_isize = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "sbi->s_want_extra_isize = def_extra_isize;"
    },
    {
        "line": 26,
        "fullcodeline": "if ((sbi->s_want_extra_isize > sbi->s_inode_size) ||"
    },
    {
        "line": 27,
        "fullcodeline": "(EXT4_GOOD_OLD_INODE_SIZE + sbi->s_want_extra_isize >"
    },
    {
        "line": 30,
        "fullcodeline": "ext4_msg(sb, KERN_INFO,"
    },
    {
        "line": 14,
        "fullcodeline": "if (ext4_has_feature_extra_isize(sb)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (sbi->s_want_extra_isize <"
    },
    {
        "line": 19,
        "fullcodeline": "if (sbi->s_want_extra_isize <"
    },
    {
        "line": 16,
        "fullcodeline": "le16_to_cpu(es->s_want_extra_isize))"
    },
    {
        "line": 17,
        "fullcodeline": "sbi->s_want_extra_isize ="
    },
    {
        "line": 20,
        "fullcodeline": "le16_to_cpu(es->s_min_extra_isize))"
    },
    {
        "line": 21,
        "fullcodeline": "sbi->s_want_extra_isize ="
    },
    {
        "line": 18,
        "fullcodeline": "le16_to_cpu(es->s_want_extra_isize);"
    },
    {
        "line": 22,
        "fullcodeline": "le16_to_cpu(es->s_min_extra_isize);"
    }
]