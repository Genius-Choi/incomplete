[
    {
        "line": 3,
        "fullcodeline": "Image *image, *image2=NULL,"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned char *BImgBuff = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "MagickOffsetType filepos=0x80;"
    },
    {
        "line": 29,
        "fullcodeline": "assert(image_info != (const ImageInfo *) NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "assert(image_info->signature == MagickCoreSignature);"
    },
    {
        "line": 31,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 33,
        "fullcodeline": "logging = LogMagickEvent(CoderEvent,GetMagickModule(),\"enter\");"
    },
    {
        "line": 38,
        "fullcodeline": "image = AcquireImage(image_info,exception);"
    },
    {
        "line": 39,
        "fullcodeline": "image2 = (Image *) NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "status = OpenBlob(image_info, image, ReadBinaryBlobMode, exception);"
    },
    {
        "line": 50,
        "fullcodeline": "quantum_info=(QuantumInfo *) NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "clone_info=(ImageInfo *) NULL;"
    },
    {
        "line": 67,
        "fullcodeline": "MATLAB_HDR.Version = ReadBlobLSBShort(image);"
    },
    {
        "line": 100,
        "fullcodeline": "filepos = TellBlob(image);"
    },
    {
        "line": 567,
        "fullcodeline": "RelinquishMagickMemory(BImgBuff);"
    },
    {
        "line": 570,
        "fullcodeline": "CloseBlob(image);"
    },
    {
        "line": 618,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\")"
    },
    {
        "line": 42,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 52,
        "fullcodeline": "if (ReadBlob(image,124,(unsigned char *) &MATLAB_HDR.identific) != 124)"
    },
    {
        "line": 54,
        "fullcodeline": "if (strncmp(MATLAB_HDR.identific,\"MATLAB\",6) != 0)"
    },
    {
        "line": 68,
        "fullcodeline": "if(ReadBlob(image,2,(unsigned char *) &MATLAB_HDR.EndianIndicator) != 2)"
    },
    {
        "line": 74,
        "fullcodeline": "if (!strncmp(MATLAB_HDR.EndianIndicator, \"IM\", 2))"
    },
    {
        "line": 101,
        "fullcodeline": "while(!EOFBlob(image)) /* object parser loop */"
    },
    {
        "line": 568,
        "fullcodeline": "if (quantum_info != (QuantumInfo *) NULL)"
    },
    {
        "line": 575,
        "fullcodeline": "ssize_t scene=0;"
    },
    {
        "line": 580,
        "fullcodeline": "p=image;"
    },
    {
        "line": 581,
        "fullcodeline": "image=NULL;"
    },
    {
        "line": 603,
        "fullcodeline": "if(clone_info != NULL)  /* cleanup garbage file from compression */"
    },
    {
        "line": 615,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 44,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 53,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 56,
        "fullcodeline": "image=ReadMATImageV4(image_info,image,exception);"
    },
    {
        "line": 69,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 72,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"  Endian %c%c\","
    },
    {
        "line": 76,
        "fullcodeline": "ReadBlobXXXLong = ReadBlobLSBLong;"
    },
    {
        "line": 77,
        "fullcodeline": "ReadBlobXXXShort = ReadBlobLSBShort;"
    },
    {
        "line": 78,
        "fullcodeline": "ReadBlobDoublesXXX = ReadBlobDoublesLSB;"
    },
    {
        "line": 79,
        "fullcodeline": "ReadBlobFloatsXXX = ReadBlobFloatsLSB;"
    },
    {
        "line": 80,
        "fullcodeline": "image->endian = LSBEndian;"
    },
    {
        "line": 103,
        "fullcodeline": "Frames = 1;"
    },
    {
        "line": 109,
        "fullcodeline": "MATLAB_HDR.DataType = ReadBlobXXXLong(image);"
    },
    {
        "line": 111,
        "fullcodeline": "MATLAB_HDR.ObjectSize = ReadBlobXXXLong(image);"
    },
    {
        "line": 115,
        "fullcodeline": "filepos += (MagickOffsetType) MATLAB_HDR.ObjectSize + 4 + 4;"
    },
    {
        "line": 119,
        "fullcodeline": "clone_info=CloneImageInfo(image_info);"
    },
    {
        "line": 122,
        "fullcodeline": "image2 = image;"
    },
    {
        "line": 142,
        "fullcodeline": "MATLAB_HDR.unknown1 = ReadBlobXXXLong(image2);"
    },
    {
        "line": 143,
        "fullcodeline": "MATLAB_HDR.unknown2 = ReadBlobXXXLong(image2);"
    },
    {
        "line": 145,
        "fullcodeline": "MATLAB_HDR.unknown5 = ReadBlobXXXLong(image2);"
    },
    {
        "line": 146,
        "fullcodeline": "MATLAB_HDR.StructureClass = MATLAB_HDR.unknown5 & 0xFF;"
    },
    {
        "line": 147,
        "fullcodeline": "MATLAB_HDR.StructureFlag = (MATLAB_HDR.unknown5>>8) & 0xFF;"
    },
    {
        "line": 149,
        "fullcodeline": "MATLAB_HDR.unknown3 = ReadBlobXXXLong(image2);"
    },
    {
        "line": 152,
        "fullcodeline": "MATLAB_HDR.unknown4 = ReadBlobXXXLong(image2);"
    },
    {
        "line": 153,
        "fullcodeline": "MATLAB_HDR.DimFlag = ReadBlobXXXLong(image2);"
    },
    {
        "line": 154,
        "fullcodeline": "MATLAB_HDR.SizeX = ReadBlobXXXLong(image2);"
    },
    {
        "line": 155,
        "fullcodeline": "MATLAB_HDR.SizeY = ReadBlobXXXLong(image2);"
    },
    {
        "line": 209,
        "fullcodeline": "MATLAB_HDR.Flag1 = ReadBlobXXXShort(image2);"
    },
    {
        "line": 210,
        "fullcodeline": "MATLAB_HDR.NameFlag = ReadBlobXXXShort(image2);"
    },
    {
        "line": 253,
        "fullcodeline": "CellType = ReadBlobXXXLong(image2);    /* Additional object type */"
    },
    {
        "line": 327,
        "fullcodeline": "(void) sample_size;"
    },
    {
        "line": 328,
        "fullcodeline": "image->columns = MATLAB_HDR.SizeX;"
    },
    {
        "line": 329,
        "fullcodeline": "image->rows = MATLAB_HDR.SizeY;"
    },
    {
        "line": 330,
        "fullcodeline": "image->colors = GetQuantumRange(image->depth);"
    },
    {
        "line": 355,
        "fullcodeline": "status=SetImageExtent(image,image->columns,image->rows,exception);"
    },
    {
        "line": 364,
        "fullcodeline": "(void) SetImageBackgroundColor(image,exception);"
    },
    {
        "line": 365,
        "fullcodeline": "quantum_info=AcquireQuantumInfo(clone_info,image);"
    },
    {
        "line": 376,
        "fullcodeline": "BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(double));    /* Ldblk was set in the check phase */"
    },
    {
        "line": 387,
        "fullcodeline": "(void) memset(BImgBuff,0,ldblk*sizeof(double));"
    },
    {
        "line": 389,
        "fullcodeline": "MinVal = 0;"
    },
    {
        "line": 390,
        "fullcodeline": "MaxVal = 0;"
    },
    {
        "line": 495,
        "fullcodeline": "rotated_image = RotateImage(image, 90.0, exception);"
    },
    {
        "line": 528,
        "fullcodeline": "AcquireNextImage(image_info,image,exception);"
    },
    {
        "line": 530,
        "fullcodeline": "image=SyncNextImageInList(image);"
    },
    {
        "line": 531,
        "fullcodeline": "image->columns=image->rows=0;"
    },
    {
        "line": 532,
        "fullcodeline": "image->colors=0;"
    },
    {
        "line": 535,
        "fullcodeline": "RelinquishMagickMemory(BImgBuff);"
    },
    {
        "line": 536,
        "fullcodeline": "BImgBuff = NULL;"
    },
    {
        "line": 569,
        "fullcodeline": "quantum_info=DestroyQuantumInfo(quantum_info);"
    },
    {
        "line": 582,
        "fullcodeline": "while (p != (Image *) NULL)"
    },
    {
        "line": 599,
        "fullcodeline": "for (p=image; p != (Image *) NULL; p=p->next)"
    },
    {
        "line": 600,
        "fullcodeline": "p->scene=scene++;"
    },
    {
        "line": 611,
        "fullcodeline": "DestroyImageInfo(clone_info);"
    },
    {
        "line": 612,
        "fullcodeline": "clone_info = NULL;"
    },
    {
        "line": 614,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),\"return\");"
    },
    {
        "line": 616,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 45,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 57,
        "fullcodeline": "if (image == NULL)"
    },
    {
        "line": 104,
        "fullcodeline": "if (filepos != (unsigned int) filepos)"
    },
    {
        "line": 106,
        "fullcodeline": "if(SeekBlob(image,filepos,SEEK_SET) != filepos) break;"
    },
    {
        "line": 110,
        "fullcodeline": "if(EOFBlob(image)) break;"
    },
    {
        "line": 112,
        "fullcodeline": "if(EOFBlob(image)) break;"
    },
    {
        "line": 113,
        "fullcodeline": "if((MagickSizeType) (MATLAB_HDR.ObjectSize+filepos) > GetBlobSize(image))"
    },
    {
        "line": 117,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 120,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 132,
        "fullcodeline": "if (MATLAB_HDR.DataType != miMATRIX)"
    },
    {
        "line": 150,
        "fullcodeline": "if(image!=image2)"
    },
    {
        "line": 214,
        "fullcodeline": "if (MATLAB_HDR.StructureClass != mxCHAR_CLASS &&"
    },
    {
        "line": 259,
        "fullcodeline": "if (ReadBlob(image2, 4, (unsigned char *) &size) != 4)"
    },
    {
        "line": 331,
        "fullcodeline": "if (image->columns == 0 || image->rows == 0)"
    },
    {
        "line": 333,
        "fullcodeline": "if((unsigned int)ldblk*MATLAB_HDR.SizeY > MATLAB_HDR.ObjectSize)"
    },
    {
        "line": 336,
        "fullcodeline": "if ((MATLAB_HDR.DimFlag == 8) &&"
    },
    {
        "line": 356,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 366,
        "fullcodeline": "if (quantum_info == (QuantumInfo *) NULL)"
    },
    {
        "line": 377,
        "fullcodeline": "if (BImgBuff == NULL)"
    },
    {
        "line": 391,
        "fullcodeline": "if (CellType==miDOUBLE || CellType==miSINGLE)        /* Find Min and Max Values for floats */"
    },
    {
        "line": 399,
        "fullcodeline": "if(z==1) z=0; /* read grey scanlines */"
    },
    {
        "line": 447,
        "fullcodeline": "} while(z-- >= 2);"
    },
    {
        "line": 449,
        "fullcodeline": "if (i != (long) MATLAB_HDR.SizeY)"
    },
    {
        "line": 453,
        "fullcodeline": "if (MATLAB_HDR.StructureFlag & FLAG_COMPLEX)"
    },
    {
        "line": 485,
        "fullcodeline": "if ((MATLAB_HDR.DimFlag == 8) &&"
    },
    {
        "line": 488,
        "fullcodeline": "if (image->depth == 1)"
    },
    {
        "line": 491,
        "fullcodeline": "if(image2==image)"
    },
    {
        "line": 496,
        "fullcodeline": "if (rotated_image != (Image *) NULL)"
    },
    {
        "line": 510,
        "fullcodeline": "if(image2!=NULL)"
    },
    {
        "line": 524,
        "fullcodeline": "if (EOFBlob(image) != MagickFalse)"
    },
    {
        "line": 529,
        "fullcodeline": "if (image->next == (Image *) NULL) break;"
    },
    {
        "line": 537,
        "fullcodeline": "if (quantum_info != (QuantumInfo *) NULL)"
    },
    {
        "line": 540,
        "fullcodeline": "if(--Frames>0)"
    },
    {
        "line": 547,
        "fullcodeline": "if ((image2!=NULL) && (image2!=image))   /* Does shadow temporary decompressed image exist? */"
    },
    {
        "line": 584,
        "fullcodeline": "Image *tmp=p;"
    },
    {
        "line": 82,
        "fullcodeline": "else if (!strncmp(MATLAB_HDR.EndianIndicator, \"MI\", 2))"
    },
    {
        "line": 118,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 121,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 134,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 151,
        "fullcodeline": "MATLAB_HDR.unknown4 = ReadBlobXXXLong(image2);  /* ??? don't understand why ?? */"
    },
    {
        "line": 160,
        "fullcodeline": "case  8: z2=z=1; break;      /* 2D matrix*/"
    },
    {
        "line": 161,
        "fullcodeline": "case 12: z2=z = ReadBlobXXXLong(image2);  /* 3D matrix RGB*/"
    },
    {
        "line": 162,
        "fullcodeline": "(void) ReadBlobXXXLong(image2);"
    },
    {
        "line": 173,
        "fullcodeline": "case 16: z2=z = ReadBlobXXXLong(image2);  /* 4D matrix animation */"
    },
    {
        "line": 183,
        "fullcodeline": "Frames = ReadBlobXXXLong(image2);"
    },
    {
        "line": 206,
        "fullcodeline": "ThrowReaderException(CoderError, \"MultidimensionalMatricesAreNotSupported\");"
    },
    {
        "line": 212,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 224,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxUINT64_CLASS)    /* uint64 + uint64 3D */"
    },
    {
        "line": 233,
        "fullcodeline": "ThrowReaderException(CoderError,\"UnsupportedCellTypeInTheMatrix\");"
    },
    {
        "line": 239,
        "fullcodeline": "size = ReadBlobXXXLong(image2);  /* Object name string size */"
    },
    {
        "line": 240,
        "fullcodeline": "size = 4 * (((size_t) size + 3 + 1) / 4);"
    },
    {
        "line": 241,
        "fullcodeline": "(void) SeekBlob(image2, size, SEEK_CUR);"
    },
    {
        "line": 247,
        "fullcodeline": "(void) ReadBlob(image2, 4, (unsigned char *) &size); /* Object name string */"
    },
    {
        "line": 255,
        "fullcodeline": "(void) LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 267,
        "fullcodeline": "sample_size = 8;"
    },
    {
        "line": 272,
        "fullcodeline": "ldblk = (ssize_t) MATLAB_HDR.SizeX;"
    },
    {
        "line": 276,
        "fullcodeline": "sample_size = 16;"
    },
    {
        "line": 277,
        "fullcodeline": "image->depth = 16;        /* Word type cell */"
    },
    {
        "line": 278,
        "fullcodeline": "ldblk = (ssize_t) (2 * MATLAB_HDR.SizeX);"
    },
    {
        "line": 282,
        "fullcodeline": "sample_size = 32;"
    },
    {
        "line": 283,
        "fullcodeline": "image->depth = 32;        /* Dword type cell */"
    },
    {
        "line": 284,
        "fullcodeline": "ldblk = (ssize_t) (4 * MATLAB_HDR.SizeX);"
    },
    {
        "line": 288,
        "fullcodeline": "sample_size = 64;"
    },
    {
        "line": 289,
        "fullcodeline": "image->depth = 64;        /* Qword type cell */"
    },
    {
        "line": 290,
        "fullcodeline": "ldblk = (ssize_t) (8 * MATLAB_HDR.SizeX);"
    },
    {
        "line": 293,
        "fullcodeline": "sample_size = 32;"
    },
    {
        "line": 294,
        "fullcodeline": "image->depth = 32;        /* double type cell */"
    },
    {
        "line": 295,
        "fullcodeline": "(void) SetImageOption(clone_info,\"quantum:format\",\"floating-point\");"
    },
    {
        "line": 299,
        "fullcodeline": "ldblk = (ssize_t) (4 * MATLAB_HDR.SizeX);"
    },
    {
        "line": 302,
        "fullcodeline": "sample_size = 64;"
    },
    {
        "line": 303,
        "fullcodeline": "image->depth = 64;        /* double type cell */"
    },
    {
        "line": 304,
        "fullcodeline": "(void) SetImageOption(clone_info,\"quantum:format\",\"floating-point\");"
    },
    {
        "line": 305,
        "fullcodeline": "DisableMSCWarning(4127)"
    },
    {
        "line": 318,
        "fullcodeline": "ldblk = (ssize_t) (8 * MATLAB_HDR.SizeX);"
    },
    {
        "line": 325,
        "fullcodeline": "ThrowReaderException(CoderError, \"UnsupportedCellTypeInTheMatrix\");"
    },
    {
        "line": 337,
        "fullcodeline": "((MATLAB_HDR.StructureFlag & FLAG_COMPLEX) == 0))"
    },
    {
        "line": 339,
        "fullcodeline": "image->type=GrayscaleType;"
    },
    {
        "line": 340,
        "fullcodeline": "SetImageColorspace(image,GRAYColorspace,exception);"
    },
    {
        "line": 350,
        "fullcodeline": "size_t temp = image->columns;"
    },
    {
        "line": 351,
        "fullcodeline": "image->columns = image->rows;"
    },
    {
        "line": 352,
        "fullcodeline": "image->rows = temp;"
    },
    {
        "line": 372,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 385,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"
    },
    {
        "line": 393,
        "fullcodeline": "CalcMinMax(image2,image_info->endian,MATLAB_HDR.SizeX,MATLAB_HDR.SizeY,"
    },
    {
        "line": 455,
        "fullcodeline": "CellType = ReadBlobXXXLong(image2);    /* Additional object type */"
    },
    {
        "line": 456,
        "fullcodeline": "i = ReadBlobXXXLong(image2);           /* size of a complex part - toss away*/"
    },
    {
        "line": 486,
        "fullcodeline": "((MATLAB_HDR.StructureFlag & FLAG_COMPLEX) == 0))"
    },
    {
        "line": 487,
        "fullcodeline": "image->type=GrayscaleType;"
    },
    {
        "line": 489,
        "fullcodeline": "image->type=BilevelType;"
    },
    {
        "line": 492,
        "fullcodeline": "image2 = NULL;    /* Remove shadow copy to an image before rotation. */"
    },
    {
        "line": 499,
        "fullcodeline": "rotated_image->page.x=0;"
    },
    {
        "line": 500,
        "fullcodeline": "rotated_image->page.y=0;"
    },
    {
        "line": 501,
        "fullcodeline": "rotated_image->colors = image->colors;"
    },
    {
        "line": 502,
        "fullcodeline": "DestroyBlob(rotated_image);"
    },
    {
        "line": 503,
        "fullcodeline": "rotated_image->blob=ReferenceBlob(image->blob);"
    },
    {
        "line": 504,
        "fullcodeline": "AppendImageToList(&image,rotated_image);"
    },
    {
        "line": 505,
        "fullcodeline": "DeleteImageFromList(&image);"
    },
    {
        "line": 538,
        "fullcodeline": "quantum_info=DestroyQuantumInfo(quantum_info);"
    },
    {
        "line": 542,
        "fullcodeline": "z = z2;"
    },
    {
        "line": 550,
        "fullcodeline": "DeleteImageFromList(&image2);"
    },
    {
        "line": 563,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 585,
        "fullcodeline": "if ((p->rows == 0) || (p->columns == 0)) {"
    },
    {
        "line": 607,
        "fullcodeline": "fclose(clone_info->file);"
    },
    {
        "line": 608,
        "fullcodeline": "clone_info->file = NULL;"
    },
    {
        "line": 609,
        "fullcodeline": "(void) remove_utf8(clone_info->filename);"
    },
    {
        "line": 59,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 61,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 63,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 84,
        "fullcodeline": "ReadBlobXXXLong = ReadBlobMSBLong;"
    },
    {
        "line": 85,
        "fullcodeline": "ReadBlobXXXShort = ReadBlobMSBShort;"
    },
    {
        "line": 86,
        "fullcodeline": "ReadBlobDoublesXXX = ReadBlobDoublesMSB;"
    },
    {
        "line": 87,
        "fullcodeline": "ReadBlobFloatsXXX = ReadBlobFloatsMSB;"
    },
    {
        "line": 88,
        "fullcodeline": "image->endian = MSBEndian;"
    },
    {
        "line": 163,
        "fullcodeline": "if(z!=3)"
    },
    {
        "line": 174,
        "fullcodeline": "if(z!=3 && z!=1)"
    },
    {
        "line": 184,
        "fullcodeline": "if (Frames == 0)"
    },
    {
        "line": 192,
        "fullcodeline": "if (AcquireMagickResource(ListLengthResource,Frames) == MagickFalse)"
    },
    {
        "line": 202,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 204,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 223,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxINT64_CLASS &&"
    },
    {
        "line": 226,
        "fullcodeline": "if ((image2 != (Image*) NULL) && (image2 != image))"
    },
    {
        "line": 231,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 268,
        "fullcodeline": "if(MATLAB_HDR.StructureFlag & FLAG_LOGICAL)"
    },
    {
        "line": 296,
        "fullcodeline": "if (MATLAB_HDR.StructureFlag & FLAG_COMPLEX)"
    },
    {
        "line": 313,
        "fullcodeline": "ThrowReaderException(CoderError, \"IncompatibleSizeOfDouble\");"
    },
    {
        "line": 315,
        "fullcodeline": "if (MATLAB_HDR.StructureFlag & FLAG_COMPLEX)"
    },
    {
        "line": 321,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 358,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 360,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 362,
        "fullcodeline": "return(DestroyImageList(image));"
    },
    {
        "line": 368,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 370,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 379,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 381,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 383,
        "fullcodeline": "if (quantum_info != (QuantumInfo *) NULL)"
    },
    {
        "line": 403,
        "fullcodeline": "for (i = 0; i < (ssize_t) MATLAB_HDR.SizeY; i++)"
    },
    {
        "line": 458,
        "fullcodeline": "if (CellType==miDOUBLE || CellType==miSINGLE)"
    },
    {
        "line": 463,
        "fullcodeline": "if (CellType==miDOUBLE)"
    },
    {
        "line": 473,
        "fullcodeline": "if (CellType==miSINGLE)"
    },
    {
        "line": 511,
        "fullcodeline": "if(image2!=image)"
    },
    {
        "line": 543,
        "fullcodeline": "if(image2==NULL) image2 = image;"
    },
    {
        "line": 544,
        "fullcodeline": "if(!EOFBlob(image) && TellBlob(image)<filepos)"
    },
    {
        "line": 589,
        "fullcodeline": "DeleteImageFromList(&tmp);"
    },
    {
        "line": 60,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 62,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 97,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 169,
        "fullcodeline": "ThrowReaderException(CoderError,"
    },
    {
        "line": 180,
        "fullcodeline": "ThrowReaderException(CoderError,"
    },
    {
        "line": 190,
        "fullcodeline": "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");"
    },
    {
        "line": 198,
        "fullcodeline": "ThrowReaderException(ResourceLimitError,\"ListLengthExceedsLimit\");"
    },
    {
        "line": 203,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 205,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 222,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxUINT32_CLASS &&    /* uint32 + uint32 3D */"
    },
    {
        "line": 228,
        "fullcodeline": "CloseBlob(image2);"
    },
    {
        "line": 229,
        "fullcodeline": "DeleteImageFromList(&image2);"
    },
    {
        "line": 232,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 256,
        "fullcodeline": "\"MATLAB_HDR.CellType: %.20g\",(double) CellType);"
    },
    {
        "line": 269,
        "fullcodeline": "image->depth = 1;"
    },
    {
        "line": 309,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 311,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 322,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 324,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 359,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 361,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 369,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 371,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 380,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 382,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 384,
        "fullcodeline": "quantum_info=DestroyQuantumInfo(quantum_info);"
    },
    {
        "line": 405,
        "fullcodeline": "q=GetAuthenticPixels(image,0,MATLAB_HDR.SizeY-i-1,image->columns,1,exception);"
    },
    {
        "line": 460,
        "fullcodeline": "CalcMinMax(image2,  image_info->endian, MATLAB_HDR.SizeX, MATLAB_HDR.SizeY, CellType, ldblk, BImgBuff, &MinVal, &MaxVal);"
    },
    {
        "line": 513,
        "fullcodeline": "DeleteImageFromList(&image2);"
    },
    {
        "line": 587,
        "fullcodeline": "if (tmp == image2)"
    },
    {
        "line": 591,
        "fullcodeline": "image=p;"
    },
    {
        "line": 592,
        "fullcodeline": "p=p->previous;"
    },
    {
        "line": 93,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 95,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 165,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 167,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 176,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 178,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 186,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 188,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 194,
        "fullcodeline": "if (clone_info != (ImageInfo *) NULL)"
    },
    {
        "line": 196,
        "fullcodeline": "if ((image != image2) && (image2 != (Image *) NULL))"
    },
    {
        "line": 221,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxINT32_CLASS &&"
    },
    {
        "line": 271,
        "fullcodeline": "image->depth = 8;         /* Byte type cell */"
    },
    {
        "line": 310,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 312,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 406,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 412,
        "fullcodeline": "if(ReadBlob(image2,ldblk,(unsigned char *)BImgBuff) != (ssize_t) ldblk)"
    },
    {
        "line": 418,
        "fullcodeline": "if((CellType==miINT8 || CellType==miUINT8) && (MATLAB_HDR.StructureFlag & FLAG_LOGICAL))"
    },
    {
        "line": 440,
        "fullcodeline": "if (!SyncAuthenticPixels(image,exception))"
    },
    {
        "line": 464,
        "fullcodeline": "for (i = 0; i < (ssize_t) MATLAB_HDR.SizeY; i++)"
    },
    {
        "line": 474,
        "fullcodeline": "for (i = 0; i < (ssize_t) MATLAB_HDR.SizeY; i++)"
    },
    {
        "line": 588,
        "fullcodeline": "image2=(Image *) NULL;"
    },
    {
        "line": 94,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 96,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 166,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 168,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 177,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 179,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 187,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 189,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 195,
        "fullcodeline": "clone_info=DestroyImageInfo(clone_info);"
    },
    {
        "line": 197,
        "fullcodeline": "image2=DestroyImage(image2);"
    },
    {
        "line": 220,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxUINT16_CLASS &&    /* uint16 + uint16 3D */"
    },
    {
        "line": 420,
        "fullcodeline": "FixLogical((unsigned char *)BImgBuff,ldblk);"
    },
    {
        "line": 466,
        "fullcodeline": "ReadBlobDoublesXXX(image2, ldblk, (double *)BImgBuff);"
    },
    {
        "line": 469,
        "fullcodeline": "InsertComplexDoubleRow(image, (double *)BImgBuff, i, MinVal, MaxVal,"
    },
    {
        "line": 476,
        "fullcodeline": "ReadBlobFloatsXXX(image2, ldblk, (float *)BImgBuff);"
    },
    {
        "line": 479,
        "fullcodeline": "InsertComplexFloatRow(image,(float *)BImgBuff,i,MinVal,MaxVal,"
    },
    {
        "line": 555,
        "fullcodeline": "fclose(clone_info->file);"
    },
    {
        "line": 556,
        "fullcodeline": "clone_info->file = NULL;"
    },
    {
        "line": 557,
        "fullcodeline": "(void) remove_utf8(clone_info->filename);"
    },
    {
        "line": 219,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxINT16_CLASS &&"
    },
    {
        "line": 421,
        "fullcodeline": "if(ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,z2qtype[z],BImgBuff,exception) <= 0)"
    },
    {
        "line": 467,
        "fullcodeline": "if (EOFBlob(image) != MagickFalse)"
    },
    {
        "line": 477,
        "fullcodeline": "if (EOFBlob(image) != MagickFalse)"
    },
    {
        "line": 218,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxUINT8_CLASS &&    /* uint8 + uint8 3D */"
    },
    {
        "line": 408,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 414,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 431,
        "fullcodeline": "if(ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,z2qtype[z],BImgBuff,exception) <= 0)"
    },
    {
        "line": 435,
        "fullcodeline": "if (z<=1 &&       /* fix only during a last pass z==0 || z==1 */"
    },
    {
        "line": 442,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 518,
        "fullcodeline": "fclose(clone_info->file);"
    },
    {
        "line": 519,
        "fullcodeline": "clone_info->file = NULL;"
    },
    {
        "line": 520,
        "fullcodeline": "(void) remove_utf8(clone_info->filename);"
    },
    {
        "line": 217,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxINT8_CLASS &&"
    },
    {
        "line": 436,
        "fullcodeline": "(CellType==miINT8 || CellType==miINT16 || CellType==miINT32 || CellType==miINT64))"
    },
    {
        "line": 437,
        "fullcodeline": "FixSignedValues(image,q,MATLAB_HDR.SizeX);"
    },
    {
        "line": 216,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxDOUBLE_CLASS &&    /* double + complex double */"
    },
    {
        "line": 409,
        "fullcodeline": "\"  MAT set image pixels returns unexpected NULL on a row %u.\", (unsigned)(MATLAB_HDR.SizeY-i-1));"
    },
    {
        "line": 415,
        "fullcodeline": "\"  MAT cannot read scanrow %u from a file.\", (unsigned)(MATLAB_HDR.SizeY-i-1));"
    },
    {
        "line": 424,
        "fullcodeline": "if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"
    },
    {
        "line": 443,
        "fullcodeline": "\"  MAT failed to sync image pixels for a row %u\", (unsigned)(MATLAB_HDR.SizeY-i-1));"
    },
    {
        "line": 215,
        "fullcodeline": "MATLAB_HDR.StructureClass != mxSINGLE_CLASS &&    /* float + complex float */"
    },
    {
        "line": 425,
        "fullcodeline": "\"  MAT failed to ImportQuantumPixels for a row %u\", (unsigned)(MATLAB_HDR.SizeY-i-1));"
    }
]