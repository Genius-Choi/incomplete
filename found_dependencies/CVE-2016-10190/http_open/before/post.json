[
    {
        "line": 4,
        "fullcodeline": "HTTPContext *s = h->priv_data;"
    },
    {
        "line": 12,
        "fullcodeline": "s->filesize = -1;"
    },
    {
        "line": 13,
        "fullcodeline": "s->location = av_strdup(uri);"
    },
    {
        "line": 36,
        "fullcodeline": "ret = http_open_cnx(h, options);"
    },
    {
        "line": 7,
        "fullcodeline": "if( s->seekable == 1 )"
    },
    {
        "line": 14,
        "fullcodeline": "if (!s->location)"
    },
    {
        "line": 37,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 8,
        "fullcodeline": "h->is_streamed = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "av_dict_copy(&s->chained_options, *options, 0);"
    },
    {
        "line": 20,
        "fullcodeline": "int len = strlen(s->headers);"
    },
    {
        "line": 38,
        "fullcodeline": "av_dict_free(&s->chained_options);"
    },
    {
        "line": 10,
        "fullcodeline": "h->is_streamed = 1;"
    },
    {
        "line": 15,
        "fullcodeline": "return AVERROR(ENOMEM);"
    },
    {
        "line": 21,
        "fullcodeline": "if (len < 2 || strcmp(\"\\r\\n\", s->headers + len - 2)) {"
    },
    {
        "line": 34,
        "fullcodeline": "return http_listen(h, uri, flags, options);"
    },
    {
        "line": 22,
        "fullcodeline": "av_log(h, AV_LOG_WARNING,"
    },
    {
        "line": 24,
        "fullcodeline": "ret = av_reallocp(&s->headers, len + 3);"
    },
    {
        "line": 27,
        "fullcodeline": "s->headers[len]     = '\\r';"
    },
    {
        "line": 28,
        "fullcodeline": "s->headers[len + 1] = '\\n';"
    },
    {
        "line": 29,
        "fullcodeline": "s->headers[len + 2] = '\\0';"
    },
    {
        "line": 25,
        "fullcodeline": "if (ret < 0)"
    }
]