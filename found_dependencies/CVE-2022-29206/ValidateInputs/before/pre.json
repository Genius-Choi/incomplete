[
    {
        "line": 3,
        "fullcodeline": "if (!TensorShapeUtils::IsMatrix(a_indices->shape())) {"
    },
    {
        "line": 21,
        "fullcodeline": "const auto a_shape_flat = a_shape->flat<Index>();"
    },
    {
        "line": 22,
        "fullcodeline": "for (int i = 0; i < b->dims(); ++i) {"
    },
    {
        "line": 30,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 8,
        "fullcodeline": "if (!TensorShapeUtils::IsVector(a_values->shape()) ||"
    },
    {
        "line": 9,
        "fullcodeline": "!TensorShapeUtils::IsVector(a_shape->shape())) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (a_shape->NumElements() != b->dims()) {"
    },
    {
        "line": 4,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 10,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 17,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 6,
        "fullcodeline": "a_indices->shape().DebugString());"
    },
    {
        "line": 13,
        "fullcodeline": "a_values->shape().DebugString(), \" and \","
    },
    {
        "line": 14,
        "fullcodeline": "a_shape->shape().DebugString());"
    },
    {
        "line": 18,
        "fullcodeline": "\"Two operands have different ranks; received: \", a_shape->NumElements(),"
    },
    {
        "line": 19,
        "fullcodeline": "\" and \", b->dims());"
    },
    {
        "line": 23,
        "fullcodeline": "if (a_shape_flat(i) != b->dim_size(i)) {"
    },
    {
        "line": 24,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 27,
        "fullcodeline": "a_shape_flat(i), \" vs dense side \", b->dim_size(i));"
    }
]