[
    {
        "line": 3,
        "fullcodeline": "u64 off = core_reg_offset_from_id(reg->id);"
    },
    {
        "line": 37,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 12,
        "fullcodeline": "case KVM_REG_ARM_CORE_REG(sp_el1):"
    },
    {
        "line": 13,
        "fullcodeline": "case KVM_REG_ARM_CORE_REG(elr_el1):"
    },
    {
        "line": 16,
        "fullcodeline": "size = sizeof(__u64);"
    },
    {
        "line": 21,
        "fullcodeline": "size = sizeof(__uint128_t);"
    },
    {
        "line": 26,
        "fullcodeline": "size = sizeof(__u32);"
    },
    {
        "line": 33,
        "fullcodeline": "if (KVM_REG_SIZE(reg->id) == size &&"
    },
    {
        "line": 34,
        "fullcodeline": "IS_ALIGNED(off, size / sizeof(__u32)))"
    },
    {
        "line": 7,
        "fullcodeline": "case KVM_REG_ARM_CORE_REG(regs.regs[0]) ..."
    },
    {
        "line": 8,
        "fullcodeline": "KVM_REG_ARM_CORE_REG(regs.regs[30]):"
    },
    {
        "line": 14,
        "fullcodeline": "case KVM_REG_ARM_CORE_REG(spsr[0]) ..."
    },
    {
        "line": 15,
        "fullcodeline": "KVM_REG_ARM_CORE_REG(spsr[KVM_NR_SPSR - 1]):"
    },
    {
        "line": 19,
        "fullcodeline": "case KVM_REG_ARM_CORE_REG(fp_regs.vregs[0]) ..."
    },
    {
        "line": 20,
        "fullcodeline": "KVM_REG_ARM_CORE_REG(fp_regs.vregs[31]):"
    },
    {
        "line": 30,
        "fullcodeline": "return -EINVAL;"
    }
]