[
    {
        "line": 4,
        "fullcodeline": "struct kvm_regs *regs = vcpu_gp_regs(vcpu);"
    },
    {
        "line": 7,
        "fullcodeline": "void *valp = &tmp;"
    },
    {
        "line": 9,
        "fullcodeline": "int err = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "off = core_reg_offset_from_id(reg->id);"
    },
    {
        "line": 55,
        "fullcodeline": "memcpy((u32 *)regs + off, valp, KVM_REG_SIZE(reg->id));"
    },
    {
        "line": 13,
        "fullcodeline": "if (off >= nr_regs ||"
    },
    {
        "line": 17,
        "fullcodeline": "if (validate_core_offset(reg))"
    },
    {
        "line": 20,
        "fullcodeline": "if (KVM_REG_SIZE(reg->id) > sizeof(tmp))"
    },
    {
        "line": 23,
        "fullcodeline": "if (copy_from_user(valp, uaddr, KVM_REG_SIZE(reg->id))) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (off == KVM_REG_ARM_CORE_REG(regs.pstate)) {"
    },
    {
        "line": 14,
        "fullcodeline": "(off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs)"
    },
    {
        "line": 24,
        "fullcodeline": "err = -EFAULT;"
    },
    {
        "line": 29,
        "fullcodeline": "u64 mode = (*(u64 *)valp) & PSR_AA32_MODE_MASK;"
    },
    {
        "line": 15,
        "fullcodeline": "return -ENOENT;"
    },
    {
        "line": 18,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 21,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 50,
        "fullcodeline": "err = -EINVAL;"
    },
    {
        "line": 32,
        "fullcodeline": "if (!system_supports_32bit_el0())"
    },
    {
        "line": 40,
        "fullcodeline": "if (!vcpu_el1_is_32bit(vcpu))"
    },
    {
        "line": 46,
        "fullcodeline": "if (vcpu_el1_is_32bit(vcpu))"
    },
    {
        "line": 33,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 41,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 47,
        "fullcodeline": "return -EINVAL;"
    }
]