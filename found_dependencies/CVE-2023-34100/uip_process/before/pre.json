[
    {
        "line": 18,
        "fullcodeline": "uip_sappdata = uip_appdata = &uip_buf[UIP_IPTCPH_LEN];"
    },
    {
        "line": 168,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.recv);"
    },
    {
        "line": 210,
        "fullcodeline": "uip_len = uipbuf_get_len_field(UIP_IP_BUF) + UIP_IPH_LEN;"
    },
    {
        "line": 222,
        "fullcodeline": "uip_last_proto = 0;"
    },
    {
        "line": 223,
        "fullcodeline": "last_header = uipbuf_get_last_header(uip_buf, uip_len, &uip_last_proto);"
    },
    {
        "line": 229,
        "fullcodeline": "uip_ext_len = last_header - UIP_IP_PAYLOAD(0);"
    },
    {
        "line": 231,
        "fullcodeline": "LOG_INFO(\"packet received from \");"
    },
    {
        "line": 232,
        "fullcodeline": "LOG_INFO_6ADDR(&UIP_IP_BUF->srcipaddr);"
    },
    {
        "line": 233,
        "fullcodeline": "LOG_INFO_(\" to \");"
    },
    {
        "line": 234,
        "fullcodeline": "LOG_INFO_6ADDR(&UIP_IP_BUF->destipaddr);"
    },
    {
        "line": 235,
        "fullcodeline": "LOG_INFO_(\"\\n\");"
    },
    {
        "line": 342,
        "fullcodeline": "uip_ext_bitmap = 0;"
    },
    {
        "line": 490,
        "fullcodeline": "uip_icmp6_error_output(ICMP6_PARAM_PROB, ICMP6_PARAMPROB_NEXTHEADER, (uint32_t)(next_header - uip_buf));"
    },
    {
        "line": 491,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 492,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.protoerr);"
    },
    {
        "line": 493,
        "fullcodeline": "LOG_ERR(\"unrecognized header\\n\");"
    },
    {
        "line": 499,
        "fullcodeline": "LOG_INFO(\"icmpv6 input length %d type: %d \\n\", uip_len, UIP_ICMP_BUF->type);"
    },
    {
        "line": 511,
        "fullcodeline": "UIP_STAT(++uip_stat.icmp.recv);"
    },
    {
        "line": 1383,
        "fullcodeline": "UIP_IP_BUF->flow = 0x00;"
    },
    {
        "line": 1385,
        "fullcodeline": "LOG_INFO(\"Sending packet with length %d (%d)\\n\", uip_len, uipbuf_get_len_field(UIP_IP_BUF));"
    },
    {
        "line": 1387,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.sent);"
    },
    {
        "line": 1389,
        "fullcodeline": "uip_flags = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "if(flag == UIP_POLL_REQUEST) {"
    },
    {
        "line": 173,
        "fullcodeline": "if(uip_len < UIP_IPH_LEN) {"
    },
    {
        "line": 180,
        "fullcodeline": "if((UIP_IP_BUF->vtc & 0xf0) != 0x60)  { /* IP version and header length. */"
    },
    {
        "line": 196,
        "fullcodeline": "if(uip_len < uipbuf_get_len_field(UIP_IP_BUF)) {"
    },
    {
        "line": 213,
        "fullcodeline": "if(uip_len > sizeof(uip_buf)) {"
    },
    {
        "line": 224,
        "fullcodeline": "if(last_header == NULL) {"
    },
    {
        "line": 237,
        "fullcodeline": "if(uip_is_addr_mcast(&UIP_IP_BUF->srcipaddr)){"
    },
    {
        "line": 328,
        "fullcodeline": "if(!uip_ds6_is_my_addr(&UIP_IP_BUF->destipaddr) &&"
    },
    {
        "line": 344,
        "fullcodeline": "next_header != NULL && uip_is_proto_ext_hdr(protocol);"
    },
    {
        "line": 345,
        "fullcodeline": "next_header = uipbuf_get_next_header(next_header, uip_len - (next_header - uip_buf), &protocol, false)) {"
    },
    {
        "line": 467,
        "fullcodeline": "if(next_header != NULL) {"
    },
    {
        "line": 529,
        "fullcodeline": "if(uip_icmp6_input(UIP_ICMP_BUF->type,"
    },
    {
        "line": 537,
        "fullcodeline": "if(uip_len > 0) {"
    },
    {
        "line": 330,
        "fullcodeline": "!uip_is_addr_mcast(&UIP_IP_BUF->destipaddr)) {"
    },
    {
        "line": 343,
        "fullcodeline": "for(next_header = uipbuf_get_next_header(uip_buf, uip_len, &protocol, true);"
    },
    {
        "line": 347,
        "fullcodeline": "ext_ptr = (struct uip_ext_hdr *)next_header;"
    },
    {
        "line": 531,
        "fullcodeline": "LOG_ERR(\"Unknown ICMPv6 message type/code %d\\n\", UIP_ICMP_BUF->type);"
    },
    {
        "line": 532,
        "fullcodeline": "UIP_STAT(++uip_stat.icmp.drop);"
    },
    {
        "line": 533,
        "fullcodeline": "UIP_STAT(++uip_stat.icmp.typeerr);"
    },
    {
        "line": 534,
        "fullcodeline": "uipbuf_clear();"
    },
    {
        "line": 174,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 181,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 182,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.vhlerr);"
    },
    {
        "line": 197,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 214,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 238,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 329,
        "fullcodeline": "!uip_ds6_is_my_maddr(&UIP_IP_BUF->destipaddr) &&"
    },
    {
        "line": 332,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 39,
        "fullcodeline": "} else if(flag == UIP_TIMER) {"
    },
    {
        "line": 350,
        "fullcodeline": "LOG_DBG(\"Processing hbh header\\n\");"
    },
    {
        "line": 411,
        "fullcodeline": "LOG_DBG(\"Processing Routing header\\n\");"
    },
    {
        "line": 360,
        "fullcodeline": "switch(ext_hdr_options_process(next_header)) {"
    },
    {
        "line": 384,
        "fullcodeline": "switch(ext_hdr_options_process(next_header)) {"
    },
    {
        "line": 412,
        "fullcodeline": "if(((struct uip_routing_hdr *)ext_ptr)->seg_left > 0) {"
    },
    {
        "line": 454,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.drop);"
    },
    {
        "line": 455,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.fragerr);"
    },
    {
        "line": 414,
        "fullcodeline": "if(NETSTACK_ROUTING.ext_header_srh_update()) {"
    },
    {
        "line": 424,
        "fullcodeline": "LOG_INFO(\"Forwarding packet to next hop, dest: \");"
    },
    {
        "line": 425,
        "fullcodeline": "LOG_INFO_6ADDR(&UIP_IP_BUF->destipaddr);"
    },
    {
        "line": 426,
        "fullcodeline": "LOG_INFO_(\"\\n\");"
    },
    {
        "line": 427,
        "fullcodeline": "UIP_STAT(++uip_stat.ip.forwarded);"
    },
    {
        "line": 419,
        "fullcodeline": "if(!uip_check_mtu() || !uip_update_ttl()) {"
    },
    {
        "line": 431,
        "fullcodeline": "LOG_ERR(\"Unrecognized routing type\\n\");"
    }
]