[
    {
        "line": 2,
        "fullcodeline": "_cleanup_free_ char *path = NULL;"
    },
    {
        "line": 3,
        "fullcodeline": "int r, err = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "if (!path)"
    },
    {
        "line": 10,
        "fullcodeline": "for (i = 1; i <= 63; i++) {"
    },
    {
        "line": 40,
        "fullcodeline": "return log_error_errno(err, \"No usable source console found: %m\");"
    },
    {
        "line": 13,
        "fullcodeline": "r = verify_vc_allocation(i);"
    },
    {
        "line": 20,
        "fullcodeline": "sprintf(path, \"/dev/tty%u\", i);"
    },
    {
        "line": 21,
        "fullcodeline": "fd = open_terminal(path, O_RDWR|O_CLOEXEC|O_NOCTTY);"
    },
    {
        "line": 27,
        "fullcodeline": "r = verify_vc_kbmode(fd);"
    },
    {
        "line": 8,
        "fullcodeline": "return log_oom();"
    },
    {
        "line": 11,
        "fullcodeline": "_cleanup_close_ int fd = -1;"
    },
    {
        "line": 14,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (fd < 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (r < 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "*ret_path = TAKE_PTR(path);"
    },
    {
        "line": 37,
        "fullcodeline": "return TAKE_FD(fd);"
    },
    {
        "line": 15,
        "fullcodeline": "if (!err)"
    },
    {
        "line": 23,
        "fullcodeline": "if (!err)"
    },
    {
        "line": 29,
        "fullcodeline": "if (!err)"
    },
    {
        "line": 16,
        "fullcodeline": "err = -r;"
    },
    {
        "line": 24,
        "fullcodeline": "err = -fd;"
    },
    {
        "line": 30,
        "fullcodeline": "err = -r;"
    }
]