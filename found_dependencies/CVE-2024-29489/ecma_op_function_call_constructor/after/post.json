[
    {
        "line": 5,
        "fullcodeline": "ECMA_CHECK_STACK_USAGE ();"
    },
    {
        "line": 7,
        "fullcodeline": "shared_args_p->header.status_flags |= VM_FRAME_CTX_SHARED_NON_ARROW_FUNC;"
    },
    {
        "line": 23,
        "fullcodeline": "ecma_op_create_environment_record (scope_p, this_binding, shared_args_p->header.function_object_p);"
    },
    {
        "line": 30,
        "fullcodeline": "ret_value = vm_run (&shared_args_p->header, this_binding, scope_p);"
    },
    {
        "line": 11,
        "fullcodeline": "if (JERRY_CONTEXT (current_new_target_p) == NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "if (JERRY_UNLIKELY (this_binding == ECMA_VALUE_UNINITIALIZED))"
    },
    {
        "line": 54,
        "fullcodeline": "if (JERRY_UNLIKELY (shared_args_p->header.status_flags & VM_FRAME_CTX_SHARED_FREE_LOCAL_ENV))"
    },
    {
        "line": 13,
        "fullcodeline": "ret_value = ecma_raise_type_error (ECMA_ERR_CLASS_CONSTRUCTOR_REQUIRES_NEW);"
    },
    {
        "line": 20,
        "fullcodeline": "this_binding = ECMA_VALUE_UNINITIALIZED;"
    },
    {
        "line": 56,
        "fullcodeline": "ecma_deref_object (scope_p);"
    },
    {
        "line": 39,
        "fullcodeline": "if (!ECMA_IS_VALUE_ERROR (ret_value) && !ecma_is_value_object (ret_value))"
    },
    {
        "line": 41,
        "fullcodeline": "if (!ecma_is_value_undefined (ret_value))"
    },
    {
        "line": 43,
        "fullcodeline": "ecma_free_value (ret_value);"
    },
    {
        "line": 44,
        "fullcodeline": "ret_value = ecma_raise_type_error (ECMA_ERR_DERIVED_CTOR_RETURN_NOR_OBJECT_OR_UNDEFINED);"
    },
    {
        "line": 48,
        "fullcodeline": "ret_value = ecma_op_get_this_binding (scope_p);"
    }
]