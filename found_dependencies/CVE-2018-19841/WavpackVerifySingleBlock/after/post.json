[
    {
        "line": 3,
        "fullcodeline": "WavpackHeader *wphdr = (WavpackHeader *) buffer;"
    },
    {
        "line": 4,
        "fullcodeline": "uint32_t checksum_passed = 0, bcount, meta_bc;"
    },
    {
        "line": 10,
        "fullcodeline": "bcount = wphdr->ckSize - sizeof (WavpackHeader) + 8;"
    },
    {
        "line": 11,
        "fullcodeline": "dp = (unsigned char *)(wphdr + 1);"
    },
    {
        "line": 7,
        "fullcodeline": "if (strncmp (wphdr->ckID, \"wvpk\", 4) || wphdr->ckSize + 8 < sizeof (WavpackHeader))"
    },
    {
        "line": 13,
        "fullcodeline": "while (bcount >= 2) {"
    },
    {
        "line": 77,
        "fullcodeline": "return (bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed);"
    },
    {
        "line": 17,
        "fullcodeline": "meta_bc = c1 << 1;"
    },
    {
        "line": 18,
        "fullcodeline": "bcount -= 2;"
    },
    {
        "line": 73,
        "fullcodeline": "bcount -= meta_bc;"
    },
    {
        "line": 74,
        "fullcodeline": "dp += meta_bc;"
    },
    {
        "line": 20,
        "fullcodeline": "if (meta_id & ID_LARGE) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (bcount < meta_bc)"
    },
    {
        "line": 33,
        "fullcodeline": "if (verify_checksum && (meta_id & ID_UNIQUE) == ID_BLOCK_CHECKSUM) {"
    },
    {
        "line": 14,
        "fullcodeline": "meta_id = *dp++;"
    },
    {
        "line": 15,
        "fullcodeline": "c1 = *dp++;"
    },
    {
        "line": 26,
        "fullcodeline": "meta_bc += ((uint32_t) c1 << 9) + ((uint32_t) c2 << 17);"
    },
    {
        "line": 27,
        "fullcodeline": "bcount -= 2;"
    },
    {
        "line": 37,
        "fullcodeline": "unsigned char *csptr = buffer;"
    },
    {
        "line": 39,
        "fullcodeline": "int wcount = (int)(dp - 2 - buffer) >> 1;"
    },
    {
        "line": 40,
        "fullcodeline": "uint32_t csum = (uint32_t) -1;"
    },
    {
        "line": 49,
        "fullcodeline": "WavpackNativeToLittleEndian ((WavpackHeader *) buffer, WavpackHeaderFormat);"
    },
    {
        "line": 56,
        "fullcodeline": "WavpackLittleEndianToNative ((WavpackHeader *) buffer, WavpackHeaderFormat);"
    },
    {
        "line": 70,
        "fullcodeline": "checksum_passed++;"
    },
    {
        "line": 21,
        "fullcodeline": "if (bcount < 2)"
    },
    {
        "line": 42,
        "fullcodeline": "if ((meta_id & ID_ODD_SIZE) || meta_bc < 2 || meta_bc > 4)"
    },
    {
        "line": 51,
        "fullcodeline": "while (wcount--) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (meta_bc == 4) {"
    },
    {
        "line": 24,
        "fullcodeline": "c1 = *dp++;"
    },
    {
        "line": 25,
        "fullcodeline": "c2 = *dp++;"
    },
    {
        "line": 52,
        "fullcodeline": "csum = (csum * 3) + csptr [0] + (csptr [1] << 8);"
    },
    {
        "line": 53,
        "fullcodeline": "csptr += 2;"
    },
    {
        "line": 60,
        "fullcodeline": "if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"
    },
    {
        "line": 64,
        "fullcodeline": "csum ^= csum >> 16;"
    },
    {
        "line": 66,
        "fullcodeline": "if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff))"
    }
]