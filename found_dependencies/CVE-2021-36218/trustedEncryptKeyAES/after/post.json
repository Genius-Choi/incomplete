[
    {
        "line": 3,
        "fullcodeline": "LOG_INFO(__FUNCTION__);"
    },
    {
        "line": 5,
        "fullcodeline": "*errString = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "*errStatus = UNKNOWN_ERROR;"
    },
    {
        "line": 8,
        "fullcodeline": "CHECK_STATE(key);"
    },
    {
        "line": 9,
        "fullcodeline": "CHECK_STATE(encryptedPrivateKey);"
    },
    {
        "line": 11,
        "fullcodeline": "*errStatus = UNKNOWN_ERROR;"
    },
    {
        "line": 13,
        "fullcodeline": "int status = AES_encrypt((char *)key, encryptedPrivateKey, BUF_LEN,"
    },
    {
        "line": 16,
        "fullcodeline": "CHECK_STATUS2(\"AES encrypt failed with status %d\");"
    },
    {
        "line": 18,
        "fullcodeline": "SAFE_CHAR_BUF(decryptedKey, BUF_LEN);"
    },
    {
        "line": 20,
        "fullcodeline": "status = AES_decrypt(encryptedPrivateKey, *enc_len, decryptedKey, BUF_LEN);"
    },
    {
        "line": 22,
        "fullcodeline": "CHECK_STATUS2(\"trustedDecryptKey failed with status %d\");"
    },
    {
        "line": 24,
        "fullcodeline": "uint64_t decryptedKeyLen = strnlen(decryptedKey, MAX_KEY_LENGTH);"
    },
    {
        "line": 32,
        "fullcodeline": "*errStatus = -8;"
    },
    {
        "line": 45,
        "fullcodeline": "LOG_INFO(__FUNCTION__ );"
    },
    {
        "line": 46,
        "fullcodeline": "LOG_INFO(\"SGX call completed\");"
    },
    {
        "line": 26,
        "fullcodeline": "if (decryptedKeyLen == MAX_KEY_LENGTH) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (strncmp(key, decryptedKey, MAX_KEY_LENGTH) != 0) {"
    },
    {
        "line": 27,
        "fullcodeline": "snprintf(errString, BUF_LEN, \"Decrypted key is not null terminated\");"
    },
    {
        "line": 28,
        "fullcodeline": "LOG_ERROR(errString);"
    },
    {
        "line": 35,
        "fullcodeline": "snprintf(errString, BUF_LEN, \"Decrypted key does not match original key\");"
    },
    {
        "line": 36,
        "fullcodeline": "LOG_ERROR(key);"
    },
    {
        "line": 37,
        "fullcodeline": "LOG_ERROR(decryptedKey);"
    },
    {
        "line": 38,
        "fullcodeline": "LOG_ERROR(errString);"
    }
]