[
    {
        "line": 4,
        "fullcodeline": "LOG_DEBUG(__FUNCTION__);"
    },
    {
        "line": 8,
        "fullcodeline": "CHECK_STATE(_hashX);"
    },
    {
        "line": 9,
        "fullcodeline": "CHECK_STATE(_hashY);"
    },
    {
        "line": 10,
        "fullcodeline": "CHECK_STATE(signature);"
    },
    {
        "line": 12,
        "fullcodeline": "SAFE_CHAR_BUF(key, BUF_LEN);SAFE_CHAR_BUF(sig, BUF_LEN);"
    },
    {
        "line": 14,
        "fullcodeline": "int status = AES_decrypt(encryptedPrivateKey, enc_len, key, BUF_LEN);"
    },
    {
        "line": 16,
        "fullcodeline": "CHECK_STATUS(\"AES decrypt failed\")"
    },
    {
        "line": 25,
        "fullcodeline": "strncpy(signature, sig, BUF_LEN);"
    },
    {
        "line": 36,
        "fullcodeline": "LOG_DEBUG(\"SGX call completed\");"
    },
    {
        "line": 40,
        "fullcodeline": "LOG_DEBUG(\"SGX call completed\");"
    },
    {
        "line": 18,
        "fullcodeline": "if (!enclave_sign(key, _hashX, _hashY, sig)) {"
    },
    {
        "line": 27,
        "fullcodeline": "if (strnlen(signature, BUF_LEN) < 10) {"
    },
    {
        "line": 19,
        "fullcodeline": "strncpy(errString, \"Enclave failed to create bls signature\", BUF_LEN);"
    },
    {
        "line": 20,
        "fullcodeline": "LOG_ERROR(errString);"
    },
    {
        "line": 21,
        "fullcodeline": "*errStatus = -1;"
    },
    {
        "line": 28,
        "fullcodeline": "strncpy(errString, \"Signature too short\", BUF_LEN);"
    },
    {
        "line": 29,
        "fullcodeline": "LOG_ERROR(errString);"
    },
    {
        "line": 30,
        "fullcodeline": "*errStatus = -1;"
    }
]