[
    {
        "line": 5,
        "fullcodeline": "LOG_INFO(__FUNCTION__);"
    },
    {
        "line": 10,
        "fullcodeline": "CHECK_STATE(encryptedPrivateKey);"
    },
    {
        "line": 11,
        "fullcodeline": "CHECK_STATE(encr_bls_key);"
    },
    {
        "line": 13,
        "fullcodeline": "SAFE_CHAR_BUF(skey, BUF_LEN);"
    },
    {
        "line": 16,
        "fullcodeline": "mpz_init(sum);"
    },
    {
        "line": 17,
        "fullcodeline": "mpz_set_ui(sum, 0);"
    },
    {
        "line": 20,
        "fullcodeline": "mpz_init(q);"
    },
    {
        "line": 21,
        "fullcodeline": "mpz_set_str(q, \"21888242871839275222246405745257275088548364400416034343698204186575808495617\", 10);"
    },
    {
        "line": 24,
        "fullcodeline": "mpz_init(bls_key);"
    },
    {
        "line": 27,
        "fullcodeline": "int status = AES_decrypt(encryptedPrivateKey, key_len, skey, BUF_LEN);"
    },
    {
        "line": 28,
        "fullcodeline": "CHECK_STATUS2(\"aes decrypt failed with status %d\");"
    },
    {
        "line": 30,
        "fullcodeline": "skey[ECDSA_SKEY_LEN - 1] = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "int num_shares = strlen(s_shares) / 192;"
    },
    {
        "line": 73,
        "fullcodeline": "mpz_mod(bls_key, sum, q);"
    },
    {
        "line": 75,
        "fullcodeline": "SAFE_CHAR_BUF(key_share, BLS_KEY_LENGTH);"
    },
    {
        "line": 77,
        "fullcodeline": "SAFE_CHAR_BUF(arr_skey_str, BUF_LEN);"
    },
    {
        "line": 79,
        "fullcodeline": "mpz_get_str(arr_skey_str, 16, bls_key);"
    },
    {
        "line": 80,
        "fullcodeline": "int n_zeroes = 64 - strlen(arr_skey_str);"
    },
    {
        "line": 84,
        "fullcodeline": "strncpy(key_share + n_zeroes, arr_skey_str, 65 - n_zeroes);"
    },
    {
        "line": 85,
        "fullcodeline": "key_share[BLS_KEY_LENGTH - 1] = 0;"
    },
    {
        "line": 87,
        "fullcodeline": "status = AES_encrypt(key_share, encr_bls_key, BUF_LEN, BLS, NON_DECRYPTABLE, enc_bls_key_len);"
    },
    {
        "line": 89,
        "fullcodeline": "CHECK_STATUS2(\"aes encrypt bls private key failed with status %d \");"
    },
    {
        "line": 94,
        "fullcodeline": "mpz_clear(bls_key);"
    },
    {
        "line": 95,
        "fullcodeline": "mpz_clear(sum);"
    },
    {
        "line": 96,
        "fullcodeline": "mpz_clear(q);"
    },
    {
        "line": 97,
        "fullcodeline": "LOG_INFO(__FUNCTION__ );"
    },
    {
        "line": 98,
        "fullcodeline": "LOG_INFO(\"SGX call completed\");"
    },
    {
        "line": 34,
        "fullcodeline": "for (int i = 0; i < num_shares; i++) { SAFE_CHAR_BUF(encr_sshare, 65);"
    },
    {
        "line": 81,
        "fullcodeline": "for (int i = 0; i < n_zeroes; i++) {"
    },
    {
        "line": 35,
        "fullcodeline": "strncpy(encr_sshare, s_shares + 192 * i, 64);"
    },
    {
        "line": 36,
        "fullcodeline": "encr_sshare[64] = 0;"
    },
    {
        "line": 38,
        "fullcodeline": "SAFE_CHAR_BUF(s_share, 193);"
    },
    {
        "line": 39,
        "fullcodeline": "strncpy(s_share, s_shares + 192 * i, 192);"
    },
    {
        "line": 40,
        "fullcodeline": "s_share[192] = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "SAFE_CHAR_BUF(common_key, 65);"
    },
    {
        "line": 44,
        "fullcodeline": "status = session_key_recover(skey, s_share, common_key);"
    },
    {
        "line": 46,
        "fullcodeline": "CHECK_STATUS(\"session_key_recover failed\");"
    },
    {
        "line": 48,
        "fullcodeline": "common_key[64] = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "SAFE_CHAR_BUF(decr_sshare, 65);"
    },
    {
        "line": 52,
        "fullcodeline": "status = xor_decrypt(common_key, encr_sshare, decr_sshare);"
    },
    {
        "line": 53,
        "fullcodeline": "CHECK_STATUS(\"xor_decrypt failed\");"
    },
    {
        "line": 55,
        "fullcodeline": "decr_sshare[64] = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "mpz_init(decr_secret_share);"
    },
    {
        "line": 68,
        "fullcodeline": "mpz_addmul_ui(sum, decr_secret_share, 1);"
    },
    {
        "line": 69,
        "fullcodeline": "mpz_clear(decr_secret_share);"
    },
    {
        "line": 82,
        "fullcodeline": "key_share[i] = '0';"
    },
    {
        "line": 59,
        "fullcodeline": "if (mpz_set_str(decr_secret_share, decr_sshare, 16) == -1) {"
    },
    {
        "line": 60,
        "fullcodeline": "*errStatus = 111;"
    },
    {
        "line": 61,
        "fullcodeline": "snprintf(errString, BUF_LEN, \"invalid decrypted secret share\");"
    },
    {
        "line": 62,
        "fullcodeline": "LOG_ERROR(errString);"
    },
    {
        "line": 64,
        "fullcodeline": "mpz_clear(decr_secret_share);"
    }
]