[
    {
        "line": 8,
        "fullcodeline": "CHECK_STATE(sek_hex);"
    },
    {
        "line": 9,
        "fullcodeline": "CHECK_STATE(strnlen(sek_hex, 33) == 32)"
    },
    {
        "line": 12,
        "fullcodeline": "uint64_t plaintextLen = strlen(sek_hex) + 1;"
    },
    {
        "line": 14,
        "fullcodeline": "uint64_t sealedLen = sgx_calc_sealed_data_size(0, plaintextLen);"
    },
    {
        "line": 17,
        "fullcodeline": "attribute_mask.flags = 0xfffffffffffffff3;"
    },
    {
        "line": 18,
        "fullcodeline": "attribute_mask.xfrm = 0x0;"
    },
    {
        "line": 19,
        "fullcodeline": "sgx_misc_select_t misc = 0xF0000000;"
    },
    {
        "line": 21,
        "fullcodeline": "sgx_status_t status = sgx_seal_data_ex(SGX_KEYPOLICY_MRENCLAVE, attribute_mask, misc, 0, NULL, plaintextLen, (uint8_t *) sek_hex, sealedLen,"
    },
    {
        "line": 23,
        "fullcodeline": "CHECK_STATUS(\"seal SEK failed after SEK generation\");"
    },
    {
        "line": 25,
        "fullcodeline": "uint32_t encrypt_text_length = sgx_get_encrypt_txt_len((const sgx_sealed_data_t *)encrypted_sek);"
    },
    {
        "line": 27,
        "fullcodeline": "CHECK_STATE(encrypt_text_length = plaintextLen);"
    },
    {
        "line": 30,
        "fullcodeline": "SAFE_CHAR_BUF(unsealedKey, BUF_LEN);"
    },
    {
        "line": 31,
        "fullcodeline": "uint32_t decLen = BUF_LEN;"
    },
    {
        "line": 33,
        "fullcodeline": "uint32_t add_text_length = sgx_get_add_mac_txt_len((const sgx_sealed_data_t *)encrypted_sek);"
    },
    {
        "line": 34,
        "fullcodeline": "CHECK_STATE(add_text_length == 0);"
    },
    {
        "line": 35,
        "fullcodeline": "CHECK_STATE(sgx_is_within_enclave(encrypted_sek,sizeof(sgx_sealed_data_t)));"
    },
    {
        "line": 36,
        "fullcodeline": "status = sgx_unseal_data((const sgx_sealed_data_t *)encrypted_sek, NULL, NULL,"
    },
    {
        "line": 39,
        "fullcodeline": "CHECK_STATUS(\"seal/unseal SEK failed after SEK generation in unseal\");"
    },
    {
        "line": 40,
        "fullcodeline": "*enc_len = sealedLen;"
    },
    {
        "line": 44,
        "fullcodeline": "LOG_INFO(__FUNCTION__ );"
    },
    {
        "line": 45,
        "fullcodeline": "LOG_INFO(\"SGX call completed\");"
    },
    {
        "line": 37,
        "fullcodeline": "(uint8_t *) unsealedKey, &decLen );"
    }
]