[
    {
        "line": 2,
        "fullcodeline": "CHECK_STATE(errStatus);"
    },
    {
        "line": 3,
        "fullcodeline": "CHECK_STATE(err_string);"
    },
    {
        "line": 4,
        "fullcodeline": "CHECK_STATE(_key);"
    },
    {
        "line": 5,
        "fullcodeline": "auto keyArray = make_shared<vector<char>>(BUF_LEN, 0);"
    },
    {
        "line": 6,
        "fullcodeline": "auto encryptedKey = make_shared<vector<uint8_t>>(BUF_LEN, 0);"
    },
    {
        "line": 8,
        "fullcodeline": "vector<char> errMsg(BUF_LEN, 0);"
    },
    {
        "line": 10,
        "fullcodeline": "strncpy(keyArray->data(), _key, BUF_LEN);"
    },
    {
        "line": 11,
        "fullcodeline": "*errStatus = 0;"
    },
    {
        "line": 12,
        "fullcodeline": "unsigned int encryptedLen = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "sgx_status_t status = trustedEncryptKeyAES(eid, errStatus, errMsg.data(), keyArray->data(), encryptedKey->data(), &encryptedLen);"
    },
    {
        "line": 16,
        "fullcodeline": "HANDLE_TRUSTED_FUNCTION_ERROR(status, *errStatus, errMsg.data());"
    },
    {
        "line": 18,
        "fullcodeline": "SAFE_CHAR_BUF(resultBuf, 2 * BUF_LEN + 1);"
    },
    {
        "line": 20,
        "fullcodeline": "carray2Hex(encryptedKey->data(), encryptedLen, resultBuf, 2 * BUF_LEN + 1);"
    },
    {
        "line": 22,
        "fullcodeline": "return string(resultBuf);"
    }
]