[
    {
        "line": 9,
        "fullcodeline": "def clean_text(content):"
    },
    {
        "line": 22,
        "fullcodeline": "max_words = int(max_words)"
    },
    {
        "line": 24,
        "fullcodeline": "match_position = content.lower().find(keyword.lower())"
    },
    {
        "line": 26,
        "fullcodeline": "if match_position != -1:"
    },
    {
        "line": 35,
        "fullcodeline": "all_before = clean_text(content[:match_start])"
    },
    {
        "line": 36,
        "fullcodeline": "match = content[match_start:match_end]"
    },
    {
        "line": 37,
        "fullcodeline": "all_after = clean_text(content[match_end:])"
    },
    {
        "line": 38,
        "fullcodeline": "before_words = all_before[-max_words // 2 :]"
    },
    {
        "line": 39,
        "fullcodeline": "after_words = all_after[: max_words - len(before_words)]"
    },
    {
        "line": 40,
        "fullcodeline": "before = \" \".join(before_words)"
    },
    {
        "line": 41,
        "fullcodeline": "after = \" \".join(after_words)"
    },
    {
        "line": 42,
        "fullcodeline": "html = (\"%s %s %s\" % (before, striptags(match), after)).strip()"
    },
    {
        "line": 43,
        "fullcodeline": "kw_p = re.compile(r\"(\\S*%s\\S*)\" % re.escape(keyword), re.IGNORECASE)"
    },
    {
        "line": 44,
        "fullcodeline": "html = kw_p.sub(r\"<strong>\\1</strong>\", html)"
    },
    {
        "line": 48,
        "fullcodeline": "return \" \".join(clean_text(content)[:max_words])"
    },
    {
        "line": 46,
        "fullcodeline": "return mark_safe(html)"
    },
    {
        "line": 28,
        "fullcodeline": "match_start = content.rindex(\" \", 0, match_position) + 1"
    },
    {
        "line": 32,
        "fullcodeline": "match_end = content.index(\" \", match_position + len(keyword))"
    },
    {
        "line": 30,
        "fullcodeline": "match_start = 0"
    },
    {
        "line": 34,
        "fullcodeline": "match_end = len(content)"
    }
]