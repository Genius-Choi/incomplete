[
    {
        "line": 3,
        "fullcodeline": "register char *s = nullptr;"
    },
    {
        "line": 7,
        "fullcodeline": "register int min_width = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "int precision = 0;"
    },
    {
        "line": 16,
        "fullcodeline": "wide_int i_num = (wide_int) 0;"
    },
    {
        "line": 19,
        "fullcodeline": "char num_buf[NUM_BUF_SIZE];"
    },
    {
        "line": 20,
        "fullcodeline": "char char_buf[2];      /* for printing %% and %<unknown> */"
    },
    {
        "line": 37,
        "fullcodeline": "int size = 240;"
    },
    {
        "line": 38,
        "fullcodeline": "char *result = (char *)malloc(size);"
    },
    {
        "line": 39,
        "fullcodeline": "int outpos = 0;"
    },
    {
        "line": 589,
        "fullcodeline": "appendchar(&result, &outpos, &size, NUL);"
    },
    {
        "line": 590,
        "fullcodeline": "*outbuf = result;"
    },
    {
        "line": 591,
        "fullcodeline": "return outpos - 1;"
    },
    {
        "line": 583,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 42,
        "fullcodeline": "if (*fmt != '%') {"
    },
    {
        "line": 43,
        "fullcodeline": "appendchar(&result, &outpos, &size, *fmt);"
    },
    {
        "line": 48,
        "fullcodeline": "adjust = RIGHT;"
    },
    {
        "line": 49,
        "fullcodeline": "alternate_form = print_sign = print_blank = NO;"
    },
    {
        "line": 50,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 51,
        "fullcodeline": "prefix_char = NUL;"
    },
    {
        "line": 53,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 574,
        "fullcodeline": "appendsimplestring(&result, &outpos, &size, s, s_len);"
    },
    {
        "line": 58,
        "fullcodeline": "if (isascii((int)*fmt) && !islower((int)*fmt)) {"
    },
    {
        "line": 556,
        "fullcodeline": "if (prefix_char != NUL) {"
    },
    {
        "line": 560,
        "fullcodeline": "if (adjust_width && adjust == RIGHT && min_width > s_len) {"
    },
    {
        "line": 576,
        "fullcodeline": "if (adjust_width && adjust == LEFT && min_width > s_len) {"
    },
    {
        "line": 123,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 124,
        "fullcodeline": "modifier = LM_LONG_DOUBLE;"
    },
    {
        "line": 127,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 146,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 153,
        "fullcodeline": "modifier = LM_LONG;"
    },
    {
        "line": 156,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 157,
        "fullcodeline": "modifier = LM_SIZE_T;"
    },
    {
        "line": 160,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 164,
        "fullcodeline": "modifier = LM_SIZE_T;"
    },
    {
        "line": 168,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 172,
        "fullcodeline": "modifier = LM_SIZE_T;"
    },
    {
        "line": 176,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 182,
        "fullcodeline": "modifier = LM_STD;"
    },
    {
        "line": 270,
        "fullcodeline": "s = ap_php_conv_10(i_num, (*fmt) == 'u', &is_negative,"
    },
    {
        "line": 272,
        "fullcodeline": "FIX_PRECISION(adjust_precision, precision, s, s_len);"
    },
    {
        "line": 314,
        "fullcodeline": "s = ap_php_conv_p2(ui_num, 3, *fmt,"
    },
    {
        "line": 316,
        "fullcodeline": "FIX_PRECISION(adjust_precision, precision, s, s_len);"
    },
    {
        "line": 354,
        "fullcodeline": "s = ap_php_conv_p2(ui_num, 4, *fmt,"
    },
    {
        "line": 356,
        "fullcodeline": "FIX_PRECISION(adjust_precision, precision, s, s_len);"
    },
    {
        "line": 376,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 463,
        "fullcodeline": "s = php_gcvt(fp_num, precision,"
    },
    {
        "line": 473,
        "fullcodeline": "s_len = strlen(s);"
    },
    {
        "line": 482,
        "fullcodeline": "s = &char_buf[0];"
    },
    {
        "line": 483,
        "fullcodeline": "s_len = 1;"
    },
    {
        "line": 484,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 489,
        "fullcodeline": "char_buf[0] = '%';"
    },
    {
        "line": 491,
        "fullcodeline": "s_len = 1;"
    },
    {
        "line": 492,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 522,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 548,
        "fullcodeline": "char_buf[0] = '%';"
    },
    {
        "line": 549,
        "fullcodeline": "char_buf[1] = *fmt;"
    },
    {
        "line": 550,
        "fullcodeline": "s = char_buf;"
    },
    {
        "line": 551,
        "fullcodeline": "s_len = 2;"
    },
    {
        "line": 552,
        "fullcodeline": "pad_char = ' ';"
    },
    {
        "line": 557,
        "fullcodeline": "*--s = prefix_char;"
    },
    {
        "line": 558,
        "fullcodeline": "s_len++;"
    },
    {
        "line": 62,
        "fullcodeline": "for (;; fmt++) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (isdigit((int)*fmt)) {"
    },
    {
        "line": 101,
        "fullcodeline": "if (*fmt == '.') {"
    },
    {
        "line": 116,
        "fullcodeline": "adjust_precision = adjust_width = NO;"
    },
    {
        "line": 134,
        "fullcodeline": "if (*fmt == '3' && *(fmt+1) == '2') {"
    },
    {
        "line": 177,
        "fullcodeline": "if (*fmt == 'h') {"
    },
    {
        "line": 236,
        "fullcodeline": "if ((*fmt) != 'u') {"
    },
    {
        "line": 274,
        "fullcodeline": "if (*fmt != 'u') {"
    },
    {
        "line": 317,
        "fullcodeline": "if (alternate_form && *s != '0') {"
    },
    {
        "line": 357,
        "fullcodeline": "if (alternate_form && i_num != 0) {"
    },
    {
        "line": 368,
        "fullcodeline": "if (s != nullptr) {"
    },
    {
        "line": 395,
        "fullcodeline": "if (std::isnan(fp_num)) {"
    },
    {
        "line": 436,
        "fullcodeline": "if (std::isnan(fp_num)) {"
    },
    {
        "line": 451,
        "fullcodeline": "if (adjust_precision == NO)"
    },
    {
        "line": 466,
        "fullcodeline": "if (*s == '-')"
    },
    {
        "line": 475,
        "fullcodeline": "if (alternate_form && (q = strchr(s, '.')) == nullptr)"
    },
    {
        "line": 535,
        "fullcodeline": "throw Exception(\"Illegal length modifier specified '%c'\", *fmt);"
    },
    {
        "line": 561,
        "fullcodeline": "if (pad_char == '0' && prefix_char != NUL) {"
    },
    {
        "line": 567,
        "fullcodeline": "for (int i = 0; i < min_width - s_len; i++) {"
    },
    {
        "line": 577,
        "fullcodeline": "for (int i = 0; i < min_width - s_len; i++) {"
    },
    {
        "line": 81,
        "fullcodeline": "STR_TO_DEC(fmt, min_width);"
    },
    {
        "line": 82,
        "fullcodeline": "adjust_width = YES;"
    },
    {
        "line": 102,
        "fullcodeline": "adjust_precision = YES;"
    },
    {
        "line": 103,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 135,
        "fullcodeline": "fmt += 2;"
    },
    {
        "line": 136,
        "fullcodeline": "modifier = LM_LONG;"
    },
    {
        "line": 178,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 201,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, unsigned int);"
    },
    {
        "line": 206,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, unsigned long int);"
    },
    {
        "line": 209,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, size_t);"
    },
    {
        "line": 288,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, unsigned int);"
    },
    {
        "line": 293,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, unsigned long int);"
    },
    {
        "line": 296,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, size_t);"
    },
    {
        "line": 318,
        "fullcodeline": "*--s = '0';"
    },
    {
        "line": 319,
        "fullcodeline": "s_len++;"
    },
    {
        "line": 328,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, unsigned int);"
    },
    {
        "line": 333,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, unsigned long int);"
    },
    {
        "line": 336,
        "fullcodeline": "ui_num = (u_wide_int) va_arg(ap, size_t);"
    },
    {
        "line": 358,
        "fullcodeline": "*--s = *fmt;  /* 'x' or 'X' */"
    },
    {
        "line": 359,
        "fullcodeline": "*--s = '0';"
    },
    {
        "line": 360,
        "fullcodeline": "s_len += 2;"
    },
    {
        "line": 369,
        "fullcodeline": "s_len = strlen(s);"
    },
    {
        "line": 396,
        "fullcodeline": "s = const_cast<char*>(\"nan\");"
    },
    {
        "line": 397,
        "fullcodeline": "s_len = 3;"
    },
    {
        "line": 437,
        "fullcodeline": "s = const_cast<char*>(\"NAN\");"
    },
    {
        "line": 438,
        "fullcodeline": "s_len = 3;"
    },
    {
        "line": 452,
        "fullcodeline": "precision = FLOAT_DIGITS;"
    },
    {
        "line": 464,
        "fullcodeline": "(*fmt=='H' || *fmt == 'k') ? '.' : LCONV_DECIMAL_POINT,"
    },
    {
        "line": 465,
        "fullcodeline": "(*fmt == 'G' || *fmt == 'H')?'E':'e', &num_buf[1]);"
    },
    {
        "line": 476,
        "fullcodeline": "s[s_len++] = '.';"
    },
    {
        "line": 511,
        "fullcodeline": "s = ap_php_conv_p2(ui_num, 4, 'x',"
    },
    {
        "line": 562,
        "fullcodeline": "appendchar(&result, &outpos, &size, *s);"
    },
    {
        "line": 563,
        "fullcodeline": "s++;"
    },
    {
        "line": 564,
        "fullcodeline": "s_len--;"
    },
    {
        "line": 565,
        "fullcodeline": "min_width--;"
    },
    {
        "line": 568,
        "fullcodeline": "appendchar(&result, &outpos, &size, pad_char);"
    },
    {
        "line": 578,
        "fullcodeline": "appendchar(&result, &outpos, &size, pad_char);"
    },
    {
        "line": 63,
        "fullcodeline": "if (*fmt == '-')"
    },
    {
        "line": 104,
        "fullcodeline": "if (isdigit((int)*fmt)) {"
    },
    {
        "line": 114,
        "fullcodeline": "adjust_precision = NO;"
    },
    {
        "line": 141,
        "fullcodeline": "modifier = LM_LONG;"
    },
    {
        "line": 370,
        "fullcodeline": "if (adjust_precision && precision < s_len)"
    },
    {
        "line": 373,
        "fullcodeline": "s = const_cast<char*>(s_null);"
    },
    {
        "line": 374,
        "fullcodeline": "s_len = S_NULL_LEN;"
    },
    {
        "line": 513,
        "fullcodeline": "if (ui_num != 0) {"
    },
    {
        "line": 519,
        "fullcodeline": "s = const_cast<char*>(\"%p\");"
    },
    {
        "line": 520,
        "fullcodeline": "s_len = 2;"
    },
    {
        "line": 64,
        "fullcodeline": "adjust = LEFT;"
    },
    {
        "line": 83,
        "fullcodeline": "} else if (*fmt == '*') {"
    },
    {
        "line": 105,
        "fullcodeline": "STR_TO_DEC(fmt, precision);"
    },
    {
        "line": 239,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, int);"
    },
    {
        "line": 244,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, long int);"
    },
    {
        "line": 250,
        "fullcodeline": "i_num = (wide_int) va_arg(ap, size_t);"
    },
    {
        "line": 276,
        "fullcodeline": "prefix_char = '-';"
    },
    {
        "line": 371,
        "fullcodeline": "s_len = precision;"
    },
    {
        "line": 398,
        "fullcodeline": "} else if (std::isinf(fp_num)) {"
    },
    {
        "line": 440,
        "fullcodeline": "} else if (std::isinf(fp_num)) {"
    },
    {
        "line": 453,
        "fullcodeline": "else if (precision == 0)"
    },
    {
        "line": 467,
        "fullcodeline": "prefix_char = *s++;"
    },
    {
        "line": 514,
        "fullcodeline": "*--s = 'x';"
    },
    {
        "line": 515,
        "fullcodeline": "*--s = '0';"
    },
    {
        "line": 516,
        "fullcodeline": "s_len += 2;"
    },
    {
        "line": 85,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 86,
        "fullcodeline": "adjust_width = YES;"
    },
    {
        "line": 399,
        "fullcodeline": "s = const_cast<char*>(\"inf\");"
    },
    {
        "line": 400,
        "fullcodeline": "s_len = 3;"
    },
    {
        "line": 454,
        "fullcodeline": "precision = 1;"
    },
    {
        "line": 469,
        "fullcodeline": "prefix_char = '+';"
    },
    {
        "line": 65,
        "fullcodeline": "else if (*fmt == '+')"
    },
    {
        "line": 87,
        "fullcodeline": "if (min_width < 0) {"
    },
    {
        "line": 92,
        "fullcodeline": "adjust_width = NO;"
    },
    {
        "line": 106,
        "fullcodeline": "} else if (*fmt == '*') {"
    },
    {
        "line": 407,
        "fullcodeline": "s = php_conv_fp((*fmt == 'f')?'F':*fmt, fp_num, alternate_form,"
    },
    {
        "line": 441,
        "fullcodeline": "if (fp_num > 0) {"
    },
    {
        "line": 66,
        "fullcodeline": "print_sign = YES;"
    },
    {
        "line": 88,
        "fullcodeline": "adjust = LEFT;"
    },
    {
        "line": 89,
        "fullcodeline": "min_width = -min_width;"
    },
    {
        "line": 108,
        "fullcodeline": "fmt++;"
    },
    {
        "line": 278,
        "fullcodeline": "prefix_char = '+';"
    },
    {
        "line": 442,
        "fullcodeline": "s = const_cast<char*>(\"INF\");"
    },
    {
        "line": 443,
        "fullcodeline": "s_len = 3;"
    },
    {
        "line": 109,
        "fullcodeline": "if (precision < 0)"
    },
    {
        "line": 112,
        "fullcodeline": "precision = 0;"
    },
    {
        "line": 408,
        "fullcodeline": "(adjust_precision == NO) ? FLOAT_DIGITS : precision,"
    },
    {
        "line": 409,
        "fullcodeline": "(*fmt == 'f')?LCONV_DECIMAL_POINT:'.',"
    },
    {
        "line": 412,
        "fullcodeline": "prefix_char = '-';"
    },
    {
        "line": 445,
        "fullcodeline": "s = const_cast<char*>(\"-INF\");"
    },
    {
        "line": 446,
        "fullcodeline": "s_len = 4;"
    },
    {
        "line": 471,
        "fullcodeline": "prefix_char = ' ';"
    },
    {
        "line": 67,
        "fullcodeline": "else if (*fmt == '#')"
    },
    {
        "line": 110,
        "fullcodeline": "precision = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "alternate_form = YES;"
    },
    {
        "line": 280,
        "fullcodeline": "prefix_char = ' ';"
    },
    {
        "line": 414,
        "fullcodeline": "prefix_char = '+';"
    },
    {
        "line": 69,
        "fullcodeline": "else if (*fmt == ' ')"
    },
    {
        "line": 70,
        "fullcodeline": "print_blank = YES;"
    },
    {
        "line": 416,
        "fullcodeline": "prefix_char = ' ';"
    },
    {
        "line": 71,
        "fullcodeline": "else if (*fmt == '0')"
    },
    {
        "line": 72,
        "fullcodeline": "pad_char = '0';"
    }
]