[
    {
        "line": 3,
        "fullcodeline": "PyObject *buffer = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "Py_ssize_t left = length;"
    },
    {
        "line": 36,
        "fullcodeline": "PyObject *ret = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "Py_ssize_t chunk_length = length <= 65536 ? length : 65536;"
    },
    {
        "line": 7,
        "fullcodeline": "PyObject *chunk = fp_read_object(self, chunk_length);"
    },
    {
        "line": 33,
        "fullcodeline": "left -= chunk_length;"
    },
    {
        "line": 38,
        "fullcodeline": "ret = PyBytes_FromObject(buffer);"
    },
    {
        "line": 39,
        "fullcodeline": "Py_DECREF(buffer);"
    },
    {
        "line": 8,
        "fullcodeline": "if (!chunk) {"
    },
    {
        "line": 12,
        "fullcodeline": "if (!PyBytes_CheckExact(chunk)) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (ret && string_namespace_add(self, ret, length) == -1) {"
    },
    {
        "line": 13,
        "fullcodeline": "Py_DECREF(chunk);"
    },
    {
        "line": 18,
        "fullcodeline": "PyObject *new_buffer = PyByteArray_Concat(buffer, chunk);"
    },
    {
        "line": 19,
        "fullcodeline": "Py_DECREF(chunk);"
    },
    {
        "line": 42,
        "fullcodeline": "Py_DECREF(ret);"
    },
    {
        "line": 43,
        "fullcodeline": "ret = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!new_buffer)"
    },
    {
        "line": 23,
        "fullcodeline": "if (new_buffer != buffer) {"
    },
    {
        "line": 28,
        "fullcodeline": "buffer = PyByteArray_FromObject(chunk);"
    },
    {
        "line": 29,
        "fullcodeline": "Py_DECREF(chunk);"
    },
    {
        "line": 24,
        "fullcodeline": "Py_DECREF(buffer);"
    },
    {
        "line": 25,
        "fullcodeline": "buffer = new_buffer;"
    },
    {
        "line": 30,
        "fullcodeline": "if (!buffer)"
    }
]