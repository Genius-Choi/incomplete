[
    {
        "line": 3,
        "fullcodeline": "const unsigned high_bit_depth = avctx->bits_per_raw_sample > 8;"
    },
    {
        "line": 60,
        "fullcodeline": "c->put_pixels_clamped        = ff_put_pixels_clamped_c;"
    },
    {
        "line": 61,
        "fullcodeline": "c->put_signed_pixels_clamped = put_signed_pixels_clamped_c;"
    },
    {
        "line": 62,
        "fullcodeline": "c->add_pixels_clamped        = ff_add_pixels_clamped_c;"
    },
    {
        "line": 80,
        "fullcodeline": "ff_init_scantable_permutation(c->idct_permutation,"
    },
    {
        "line": 5,
        "fullcodeline": "if (avctx->lowres==1) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (CONFIG_MPEG4_DECODER && avctx->idct_algo == FF_IDCT_XVID)"
    },
    {
        "line": 6,
        "fullcodeline": "c->idct_put  = ff_jref_idct4_put;"
    },
    {
        "line": 7,
        "fullcodeline": "c->idct_add  = ff_jref_idct4_add;"
    },
    {
        "line": 8,
        "fullcodeline": "c->idct      = ff_j_rev_dct4;"
    },
    {
        "line": 9,
        "fullcodeline": "c->perm_type = FF_IDCT_PERM_NONE;"
    },
    {
        "line": 65,
        "fullcodeline": "ff_xvid_idct_init(c, avctx);"
    },
    {
        "line": 68,
        "fullcodeline": "ff_idctdsp_init_aarch64(c, avctx, high_bit_depth);"
    },
    {
        "line": 70,
        "fullcodeline": "ff_idctdsp_init_alpha(c, avctx, high_bit_depth);"
    },
    {
        "line": 72,
        "fullcodeline": "ff_idctdsp_init_arm(c, avctx, high_bit_depth);"
    },
    {
        "line": 74,
        "fullcodeline": "ff_idctdsp_init_ppc(c, avctx, high_bit_depth);"
    },
    {
        "line": 76,
        "fullcodeline": "ff_idctdsp_init_x86(c, avctx, high_bit_depth);"
    },
    {
        "line": 78,
        "fullcodeline": "ff_idctdsp_init_mips(c, avctx, high_bit_depth);"
    },
    {
        "line": 10,
        "fullcodeline": "} else if (avctx->lowres==2) {"
    },
    {
        "line": 11,
        "fullcodeline": "c->idct_put  = ff_jref_idct2_put;"
    },
    {
        "line": 12,
        "fullcodeline": "c->idct_add  = ff_jref_idct2_add;"
    },
    {
        "line": 13,
        "fullcodeline": "c->idct      = ff_j_rev_dct2;"
    },
    {
        "line": 14,
        "fullcodeline": "c->perm_type = FF_IDCT_PERM_NONE;"
    },
    {
        "line": 15,
        "fullcodeline": "} else if (avctx->lowres==3) {"
    },
    {
        "line": 16,
        "fullcodeline": "c->idct_put  = ff_jref_idct1_put;"
    },
    {
        "line": 17,
        "fullcodeline": "c->idct_add  = ff_jref_idct1_add;"
    },
    {
        "line": 18,
        "fullcodeline": "c->idct      = ff_j_rev_dct1;"
    },
    {
        "line": 19,
        "fullcodeline": "c->perm_type = FF_IDCT_PERM_NONE;"
    },
    {
        "line": 21,
        "fullcodeline": "if (avctx->bits_per_raw_sample == 10 || avctx->bits_per_raw_sample == 9) {"
    },
    {
        "line": 31,
        "fullcodeline": "c->perm_type             = FF_IDCT_PERM_NONE;"
    },
    {
        "line": 24,
        "fullcodeline": "if (avctx->codec_id == AV_CODEC_ID_MPEG4 && avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO)"
    },
    {
        "line": 25,
        "fullcodeline": "c->idct_put              = ff_simple_idct_put_int32_10bit;"
    },
    {
        "line": 32,
        "fullcodeline": "} else if (avctx->bits_per_raw_sample == 12) {"
    },
    {
        "line": 27,
        "fullcodeline": "c->idct_put              = ff_simple_idct_put_int16_10bit;"
    },
    {
        "line": 28,
        "fullcodeline": "c->idct_add              = ff_simple_idct_add_int16_10bit;"
    },
    {
        "line": 29,
        "fullcodeline": "c->idct                  = ff_simple_idct_int16_10bit;"
    },
    {
        "line": 33,
        "fullcodeline": "c->idct_put              = ff_simple_idct_put_int16_12bit;"
    },
    {
        "line": 34,
        "fullcodeline": "c->idct_add              = ff_simple_idct_add_int16_12bit;"
    },
    {
        "line": 35,
        "fullcodeline": "c->idct                  = ff_simple_idct_int16_12bit;"
    },
    {
        "line": 36,
        "fullcodeline": "c->perm_type             = FF_IDCT_PERM_NONE;"
    },
    {
        "line": 38,
        "fullcodeline": "if (avctx->idct_algo == FF_IDCT_INT) {"
    },
    {
        "line": 39,
        "fullcodeline": "c->idct_put  = ff_jref_idct_put;"
    },
    {
        "line": 40,
        "fullcodeline": "c->idct_add  = ff_jref_idct_add;"
    },
    {
        "line": 41,
        "fullcodeline": "c->idct      = ff_j_rev_dct;"
    },
    {
        "line": 42,
        "fullcodeline": "c->perm_type = FF_IDCT_PERM_LIBMPEG2;"
    },
    {
        "line": 52,
        "fullcodeline": "c->idct_put  = ff_simple_idct_put_int16_8bit;"
    },
    {
        "line": 53,
        "fullcodeline": "c->idct_add  = ff_simple_idct_add_int16_8bit;"
    },
    {
        "line": 54,
        "fullcodeline": "c->idct      = ff_simple_idct_int16_8bit;"
    },
    {
        "line": 55,
        "fullcodeline": "c->perm_type = FF_IDCT_PERM_NONE;"
    }
]