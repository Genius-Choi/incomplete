[
    {
        "line": 67,
        "fullcodeline": "signature_status = {}"
    },
    {
        "line": 84,
        "fullcodeline": "good_sigs = []"
    },
    {
        "line": 85,
        "fullcodeline": "bad_sigs = []"
    },
    {
        "line": 86,
        "fullcodeline": "unknown_sigs = []"
    },
    {
        "line": 87,
        "fullcodeline": "untrusted_sigs = []"
    },
    {
        "line": 88,
        "fullcodeline": "unknown_signing_schemes = []"
    },
    {
        "line": 92,
        "fullcodeline": "signed = securesystemslib.formats.encode_canonical(signable['signed']).encode('utf-8')"
    },
    {
        "line": 93,
        "fullcodeline": "signatures = signable['signatures']"
    },
    {
        "line": 158,
        "fullcodeline": "signature_status['threshold'] = threshold"
    },
    {
        "line": 159,
        "fullcodeline": "signature_status['good_sigs'] = good_sigs"
    },
    {
        "line": 160,
        "fullcodeline": "signature_status['bad_sigs'] = bad_sigs"
    },
    {
        "line": 161,
        "fullcodeline": "signature_status['unknown_sigs'] = unknown_sigs"
    },
    {
        "line": 162,
        "fullcodeline": "signature_status['untrusted_sigs'] = untrusted_sigs"
    },
    {
        "line": 163,
        "fullcodeline": "signature_status['unknown_signing_schemes'] = unknown_signing_schemes"
    },
    {
        "line": 54,
        "fullcodeline": "tuf.formats.SIGNABLE_SCHEMA.check_match(signable)"
    },
    {
        "line": 55,
        "fullcodeline": "securesystemslib.formats.NAME_SCHEMA.check_match(repository_name)"
    },
    {
        "line": 57,
        "fullcodeline": "if role is not None:"
    },
    {
        "line": 60,
        "fullcodeline": "if threshold is not None:"
    },
    {
        "line": 63,
        "fullcodeline": "if keyids is not None:"
    },
    {
        "line": 97,
        "fullcodeline": "for signature in signatures:"
    },
    {
        "line": 144,
        "fullcodeline": "if role is not None:"
    },
    {
        "line": 155,
        "fullcodeline": "threshold = 0"
    },
    {
        "line": 58,
        "fullcodeline": "tuf.formats.ROLENAME_SCHEMA.check_match(role)"
    },
    {
        "line": 61,
        "fullcodeline": "tuf.formats.THRESHOLD_SCHEMA.check_match(threshold)"
    },
    {
        "line": 64,
        "fullcodeline": "securesystemslib.formats.KEYIDS_SCHEMA.check_match(keyids)"
    },
    {
        "line": 98,
        "fullcodeline": "keyid = signature['keyid']"
    },
    {
        "line": 145,
        "fullcodeline": "if threshold is None:"
    },
    {
        "line": 148,
        "fullcodeline": "threshold = tuf.roledb.get_role_threshold("
    },
    {
        "line": 152,
        "fullcodeline": "logger.debug('Not using roledb.py\\'s threshold for ' + repr(role))"
    },
    {
        "line": 102,
        "fullcodeline": "key = tuf.keydb.get_key(keyid, repository_name)"
    },
    {
        "line": 110,
        "fullcodeline": "valid_sig = securesystemslib.keys.verify_signature(key, signature, signed)"
    },
    {
        "line": 136,
        "fullcodeline": "good_sigs.append(keyid)"
    },
    {
        "line": 140,
        "fullcodeline": "bad_sigs.append(keyid)"
    },
    {
        "line": 118,
        "fullcodeline": "if role is not None:"
    },
    {
        "line": 105,
        "fullcodeline": "unknown_sigs.append(keyid)"
    },
    {
        "line": 113,
        "fullcodeline": "unknown_signing_schemes.append(keyid)"
    },
    {
        "line": 132,
        "fullcodeline": "unknown_sigs.append(keyid)"
    },
    {
        "line": 123,
        "fullcodeline": "if keyids is None:"
    },
    {
        "line": 126,
        "fullcodeline": "if keyid not in keyids:"
    },
    {
        "line": 124,
        "fullcodeline": "keyids = tuf.roledb.get_role_keyids(role, repository_name)"
    },
    {
        "line": 127,
        "fullcodeline": "untrusted_sigs.append(keyid)"
    }
]