[
    {
        "line": 2,
        "fullcodeline": "params.require(:id)"
    },
    {
        "line": 3,
        "fullcodeline": "params.permit(:email, :username, :name, :password, :timezone, :email_token, user_custom_fields: {})"
    },
    {
        "line": 5,
        "fullcodeline": "invite = Invite.find_by(invite_key: params[:id])"
    },
    {
        "line": 36,
        "fullcodeline": "user.update_timezone_if_missing(params[:timezone])"
    },
    {
        "line": 37,
        "fullcodeline": "post_process_invite(user)"
    },
    {
        "line": 38,
        "fullcodeline": "create_topic_invite_notifications(invite, user)"
    },
    {
        "line": 41,
        "fullcodeline": "response = {}"
    },
    {
        "line": 58,
        "fullcodeline": "render json: success_json.merge(response)"
    },
    {
        "line": 60,
        "fullcodeline": "render json: failed_json.merge(message: I18n.t('invite.not_found_json')), status: 404"
    },
    {
        "line": 9,
        "fullcodeline": "attrs = {"
    },
    {
        "line": 26,
        "fullcodeline": "user = invite.redeem(**attrs)"
    },
    {
        "line": 35,
        "fullcodeline": "log_on_user(user) if user.active?"
    },
    {
        "line": 40,
        "fullcodeline": "topic = invite.topics.first"
    },
    {
        "line": 32,
        "fullcodeline": "return render json: failed_json.merge(message: I18n.t('invite.not_found_json')), status: 404"
    },
    {
        "line": 15,
        "fullcodeline": "session: session"
    },
    {
        "line": 19,
        "fullcodeline": "params.require(:email)"
    },
    {
        "line": 22,
        "fullcodeline": "attrs[:email] = invite.email"
    },
    {
        "line": 28,
        "fullcodeline": "return render json: failed_json.merge(message: e.message), status: 412"
    },
    {
        "line": 51,
        "fullcodeline": "response[:message] = I18n.t('invite.confirm_email')"
    },
    {
        "line": 45,
        "fullcodeline": "if user.guardian.can_see?(topic)"
    },
    {
        "line": 52,
        "fullcodeline": "if user.guardian.can_see?(topic)"
    },
    {
        "line": 46,
        "fullcodeline": "response[:redirect_to] = path(topic.relative_url)"
    },
    {
        "line": 48,
        "fullcodeline": "response[:redirect_to] = path(\"/\")"
    },
    {
        "line": 53,
        "fullcodeline": "cookies[:destination_url] = path(topic.relative_url)"
    }
]