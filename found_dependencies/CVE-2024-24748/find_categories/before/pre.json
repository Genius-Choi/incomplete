[
    {
        "line": 2,
        "fullcodeline": "query = Category.includes(CategoryList.included_associations).secured(@guardian)"
    },
    {
        "line": 10,
        "fullcodeline": "query = self.class.order_categories(query)"
    },
    {
        "line": 21,
        "fullcodeline": "query ="
    },
    {
        "line": 24,
        "fullcodeline": "@categories = query.to_a"
    },
    {
        "line": 44,
        "fullcodeline": "include_subcategories = @options[:include_subcategories] == true"
    },
    {
        "line": 46,
        "fullcodeline": "notification_levels = CategoryUser.notification_levels_for(@guardian.user)"
    },
    {
        "line": 47,
        "fullcodeline": "default_notification_level = CategoryUser.default_notification_level"
    },
    {
        "line": 79,
        "fullcodeline": "allowed_topic_create = Set.new(Category.topic_create_allowed(@guardian).pluck(:id))"
    },
    {
        "line": 22,
        "fullcodeline": "DiscoursePluginRegistry.apply_modifier(:category_list_find_categories_query, query, self)"
    },
    {
        "line": 81,
        "fullcodeline": "categories_with_descendants.each do |category|"
    },
    {
        "line": 8,
        "fullcodeline": ") if @options[:parent_category_id].present?"
    },
    {
        "line": 4,
        "fullcodeline": "query ="
    },
    {
        "line": 12,
        "fullcodeline": "if @guardian.can_lazy_load_categories?"
    },
    {
        "line": 13,
        "fullcodeline": "page = [1, @options[:page].to_i].max"
    },
    {
        "line": 14,
        "fullcodeline": "query ="
    },
    {
        "line": 26,
        "fullcodeline": "if @guardian.can_lazy_load_categories?"
    },
    {
        "line": 27,
        "fullcodeline": "categories_with_rownum ="
    },
    {
        "line": 33,
        "fullcodeline": "@categories +="
    },
    {
        "line": 40,
        "fullcodeline": "if Site.preloaded_category_custom_fields.any?"
    },
    {
        "line": 41,
        "fullcodeline": "Category.preload_custom_fields(@categories, Site.preloaded_category_custom_fields)"
    },
    {
        "line": 49,
        "fullcodeline": "if @guardian.can_lazy_load_categories?"
    },
    {
        "line": 50,
        "fullcodeline": "subcategory_ids = {}"
    },
    {
        "line": 51,
        "fullcodeline": "Category"
    },
    {
        "line": 56,
        "fullcodeline": "@categories.each { |c| c.subcategory_ids = subcategory_ids[c.id] || [] }"
    },
    {
        "line": 5,
        "fullcodeline": "query.where("
    },
    {
        "line": 15,
        "fullcodeline": "query"
    },
    {
        "line": 28,
        "fullcodeline": "Category"
    },
    {
        "line": 34,
        "fullcodeline": "Category.includes(CategoryList.included_associations).where("
    },
    {
        "line": 18,
        "fullcodeline": ".offset((page - 1) * CATEGORIES_PER_PAGE)"
    },
    {
        "line": 31,
        "fullcodeline": ".where(parent_category_id: @categories.map { |c| c.id })"
    },
    {
        "line": 35,
        "fullcodeline": "\"id IN (WITH cte AS (#{categories_with_rownum.to_sql}) SELECT id FROM cte WHERE rownum <= ?)\","
    },
    {
        "line": 57,
        "fullcodeline": "elsif @options[:parent_category_id].blank?"
    },
    {
        "line": 58,
        "fullcodeline": "subcategory_ids = {}"
    },
    {
        "line": 59,
        "fullcodeline": "subcategory_list = {}"
    },
    {
        "line": 60,
        "fullcodeline": "to_delete = Set.new"
    },
    {
        "line": 61,
        "fullcodeline": "@categories.each do |c|"
    },
    {
        "line": 72,
        "fullcodeline": "@categories.each do |c|"
    },
    {
        "line": 76,
        "fullcodeline": "@categories.delete_if { |c| to_delete.include?(c) }"
    },
    {
        "line": 7,
        "fullcodeline": "@options[:parent_category_id].to_i,"
    },
    {
        "line": 53,
        "fullcodeline": ".where(parent_category_id: @categories.map(&:id))"
    }
]