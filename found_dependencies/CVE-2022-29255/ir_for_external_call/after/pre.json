[
    {
        "line": 2,
        "fullcodeline": "from vyper.codegen.expr import Expr  # TODO rethink this circular import"
    },
    {
        "line": 4,
        "fullcodeline": "contract_address = Expr.parse_value_expr(call_expr.func.value, context)"
    },
    {
        "line": 5,
        "fullcodeline": "assert isinstance(contract_address.typ, InterfaceType)"
    },
    {
        "line": 6,
        "fullcodeline": "args_ir = [Expr(x, context).ir_node for x in call_expr.args]"
    },
    {
        "line": 7,
        "fullcodeline": "call_kwargs = _parse_kwargs(call_expr, context)"
    },
    {
        "line": 9,
        "fullcodeline": "with contract_address.cache_when_complex(\"external_contract\") as (b1, contract_address):"
    },
    {
        "line": 10,
        "fullcodeline": "return b1.resolve("
    },
    {
        "line": 11,
        "fullcodeline": "_external_call_helper(contract_address, args_ir, call_kwargs, call_expr, context)"
    }
]