[
    {
        "line": 4,
        "fullcodeline": "struct ath10k_usb *ar_usb = ath10k_usb_priv(ar);"
    },
    {
        "line": 55,
        "fullcodeline": "ath10k_usb_free_urb_to_pipe(urb_context->pipe, urb_context);"
    },
    {
        "line": 11,
        "fullcodeline": "for (i = 0; i < n_items; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "urb_context = ath10k_usb_alloc_urb_from_pipe(pipe);"
    },
    {
        "line": 19,
        "fullcodeline": "urb_context->skb = skb;"
    },
    {
        "line": 21,
        "fullcodeline": "urb = usb_alloc_urb(0, GFP_ATOMIC);"
    },
    {
        "line": 27,
        "fullcodeline": "usb_fill_bulk_urb(urb,"
    },
    {
        "line": 39,
        "fullcodeline": "usb_anchor_urb(urb, &pipe->urb_submitted);"
    },
    {
        "line": 40,
        "fullcodeline": "ret = usb_submit_urb(urb, GFP_ATOMIC);"
    },
    {
        "line": 49,
        "fullcodeline": "usb_free_urb(urb);"
    },
    {
        "line": 13,
        "fullcodeline": "if (!urb_context) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (!urb) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!(skb->len % pipe->max_packet_size)) {"
    },
    {
        "line": 14,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 23,
        "fullcodeline": "ret = -ENOMEM;"
    },
    {
        "line": 36,
        "fullcodeline": "urb->transfer_flags |= URB_ZERO_PACKET;"
    },
    {
        "line": 42,
        "fullcodeline": "ath10k_dbg(ar, ATH10K_DBG_USB_BULK,"
    },
    {
        "line": 44,
        "fullcodeline": "usb_unanchor_urb(urb);"
    },
    {
        "line": 45,
        "fullcodeline": "ret = -EINVAL;"
    }
]