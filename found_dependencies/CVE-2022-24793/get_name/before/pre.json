[
    {
        "line": 14,
        "fullcodeline": "p = start;"
    },
    {
        "line": 9,
        "fullcodeline": "if (rec_counter > 10) {"
    },
    {
        "line": 16,
        "fullcodeline": "if ((*p & 0xc0) == 0xc0) {"
    },
    {
        "line": 21,
        "fullcodeline": "pj_memcpy(&offset, p, 2);"
    },
    {
        "line": 22,
        "fullcodeline": "offset ^= pj_htons((pj_uint16_t)(0xc0 << 8));"
    },
    {
        "line": 23,
        "fullcodeline": "offset = pj_ntohs(offset);"
    },
    {
        "line": 30,
        "fullcodeline": "status = get_name(rec_counter+1, pkt, pkt + offset, max, name);"
    },
    {
        "line": 26,
        "fullcodeline": "if (offset >= max - pkt)"
    },
    {
        "line": 31,
        "fullcodeline": "if (status != PJ_SUCCESS)"
    },
    {
        "line": 36,
        "fullcodeline": "unsigned label_len = *p;"
    },
    {
        "line": 42,
        "fullcodeline": "pj_memcpy(name->ptr + name->slen, p+1, label_len);"
    },
    {
        "line": 43,
        "fullcodeline": "name->slen += label_len;"
    },
    {
        "line": 45,
        "fullcodeline": "p += label_len + 1;"
    },
    {
        "line": 39,
        "fullcodeline": "if (pkt+label_len > max)"
    },
    {
        "line": 46,
        "fullcodeline": "if (*p != 0) {"
    },
    {
        "line": 51,
        "fullcodeline": "if (p >= max)"
    },
    {
        "line": 47,
        "fullcodeline": "*(name->ptr + name->slen) = '.';"
    },
    {
        "line": 48,
        "fullcodeline": "++name->slen;"
    }
]