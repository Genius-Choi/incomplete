[
    {
        "line": 3,
        "fullcodeline": "fflush(stdout);"
    },
    {
        "line": 4,
        "fullcodeline": "char buf[BUFSIZE];"
    },
    {
        "line": 7,
        "fullcodeline": "printf(\"> \");"
    },
    {
        "line": 8,
        "fullcodeline": "fflush(stdout);"
    },
    {
        "line": 9,
        "fullcodeline": "scanf(\"%1023s\", buf);"
    },
    {
        "line": 10,
        "fullcodeline": "if (strcmp(buf, \"stop\") == 0)"
    },
    {
        "line": 12,
        "fullcodeline": "cpdbDeleteFrontendObj(f);"
    },
    {
        "line": 13,
        "fullcodeline": "g_message(\"Stopping front end..\\n\");"
    },
    {
        "line": 14,
        "fullcodeline": "exit(0);"
    },
    {
        "line": 16,
        "fullcodeline": "else if (strcmp(buf, \"restart\") == 0)"
    },
    {
        "line": 18,
        "fullcodeline": "cpdbDisconnectFromDBus(f);"
    },
    {
        "line": 19,
        "fullcodeline": "cpdbConnectToDBus(f);"
    },
    {
        "line": 21,
        "fullcodeline": "else if (strcmp(buf, \"hide-remote\") == 0)"
    },
    {
        "line": 23,
        "fullcodeline": "cpdbHideRemotePrinters(f);"
    },
    {
        "line": 24,
        "fullcodeline": "g_message(\"Hiding remote printers discovered by the backend..\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "else if (strcmp(buf, \"unhide-remote\") == 0)"
    },
    {
        "line": 28,
        "fullcodeline": "cpdbUnhideRemotePrinters(f);"
    },
    {
        "line": 29,
        "fullcodeline": "g_message(\"Unhiding remote printers discovered by the backend..\\n\");"
    },
    {
        "line": 31,
        "fullcodeline": "else if (strcmp(buf, \"hide-temporary\") == 0)"
    },
    {
        "line": 33,
        "fullcodeline": "cpdbHideTemporaryPrinters(f);"
    },
    {
        "line": 34,
        "fullcodeline": "g_message(\"Hiding remote printers discovered by the backend..\\n\");"
    },
    {
        "line": 36,
        "fullcodeline": "else if (strcmp(buf, \"unhide-temporary\") == 0)"
    },
    {
        "line": 38,
        "fullcodeline": "cpdbUnhideTemporaryPrinters(f);"
    },
    {
        "line": 39,
        "fullcodeline": "g_message(\"Unhiding remote printers discovered by the backend..\\n\");"
    },
    {
        "line": 41,
        "fullcodeline": "else if (strcmp(buf, \"get-all-options\") == 0)"
    },
    {
        "line": 43,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 44,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 45,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 46,
        "fullcodeline": "g_message(\"Getting all attributes ..\\n\");"
    },
    {
        "line": 47,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 52,
        "fullcodeline": "cpdb_options_t *opts = cpdbGetAllOptions(p);"
    },
    {
        "line": 54,
        "fullcodeline": "printf(\"Retrieved %d options.\\n\", opts->count);"
    },
    {
        "line": 58,
        "fullcodeline": "g_hash_table_iter_init(&iter, opts->table);"
    },
    {
        "line": 49,
        "fullcodeline": "if(p == NULL)"
    },
    {
        "line": 59,
        "fullcodeline": "while (g_hash_table_iter_next(&iter, NULL, &value))"
    },
    {
        "line": 61,
        "fullcodeline": "printOption(value);"
    },
    {
        "line": 64,
        "fullcodeline": "else if (strcmp(buf, \"get-all-media\") == 0)"
    },
    {
        "line": 66,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 67,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 68,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 69,
        "fullcodeline": "g_message(\"Getting all attributes ..\\n\");"
    },
    {
        "line": 70,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 75,
        "fullcodeline": "cpdb_options_t *opts = cpdbGetAllOptions(p);"
    },
    {
        "line": 77,
        "fullcodeline": "printf(\"Retrieved %d medias.\\n\", opts->media_count);"
    },
    {
        "line": 81,
        "fullcodeline": "g_hash_table_iter_init(&iter, opts->media);"
    },
    {
        "line": 72,
        "fullcodeline": "if(p == NULL)"
    },
    {
        "line": 82,
        "fullcodeline": "while (g_hash_table_iter_next(&iter, NULL, &value))"
    },
    {
        "line": 84,
        "fullcodeline": "printMedia(value);"
    },
    {
        "line": 87,
        "fullcodeline": "else if (strcmp(buf, \"get-default\") == 0)"
    },
    {
        "line": 89,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], option_name[BUFSIZE];"
    },
    {
        "line": 90,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", option_name, printer_id, backend_name);"
    },
    {
        "line": 91,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 92,
        "fullcodeline": "char *ans = cpdbGetDefault(p, option_name);"
    },
    {
        "line": 93,
        "fullcodeline": "if (!ans)"
    },
    {
        "line": 94,
        "fullcodeline": "printf(\"cpdb_option_t %s doesn't exist.\", option_name);"
    },
    {
        "line": 98,
        "fullcodeline": "else if (strcmp(buf, \"get-setting\") == 0)"
    },
    {
        "line": 96,
        "fullcodeline": "printf(\"Default : %s\\n\", ans);"
    },
    {
        "line": 100,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], setting_name[BUFSIZE];"
    },
    {
        "line": 101,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", setting_name, printer_id, backend_name);"
    },
    {
        "line": 102,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 103,
        "fullcodeline": "char *ans = cpdbGetSetting(p, setting_name);"
    },
    {
        "line": 104,
        "fullcodeline": "if (!ans)"
    },
    {
        "line": 105,
        "fullcodeline": "printf(\"Setting %s doesn't exist.\\n\", setting_name);"
    },
    {
        "line": 109,
        "fullcodeline": "else if (strcmp(buf, \"get-current\") == 0)"
    },
    {
        "line": 107,
        "fullcodeline": "printf(\"Setting value : %s\\n\", ans);"
    },
    {
        "line": 111,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], option_name[BUFSIZE];"
    },
    {
        "line": 112,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", option_name, printer_id, backend_name);"
    },
    {
        "line": 113,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 114,
        "fullcodeline": "char *ans = cpdbGetCurrent(p, option_name);"
    },
    {
        "line": 115,
        "fullcodeline": "if (!ans)"
    },
    {
        "line": 116,
        "fullcodeline": "printf(\"cpdb_option_t %s doesn't exist.\", option_name);"
    },
    {
        "line": 120,
        "fullcodeline": "else if (strcmp(buf, \"add-setting\") == 0)"
    },
    {
        "line": 118,
        "fullcodeline": "printf(\"Current value : %s\\n\", ans);"
    },
    {
        "line": 122,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], option_name[BUFSIZE], option_val[BUFSIZE];"
    },
    {
        "line": 123,
        "fullcodeline": "scanf(\"%1023s %1023s %1023s %1023s\", option_name, option_val, printer_id, backend_name);"
    },
    {
        "line": 124,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 125,
        "fullcodeline": "printf(\"%s : %s\\n\", option_name, option_val);"
    },
    {
        "line": 126,
        "fullcodeline": "cpdbAddSettingToPrinter(p, cpdbGetStringCopy(option_name), cpdbGetStringCopy(option_val));"
    },
    {
        "line": 128,
        "fullcodeline": "else if (strcmp(buf, \"clear-setting\") == 0)"
    },
    {
        "line": 130,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], option_name[BUFSIZE];"
    },
    {
        "line": 131,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", option_name, printer_id, backend_name);"
    },
    {
        "line": 132,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 133,
        "fullcodeline": "cpdbClearSettingFromPrinter(p, option_name);"
    },
    {
        "line": 135,
        "fullcodeline": "else if (strcmp(buf, \"get-state\") == 0)"
    },
    {
        "line": 137,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 138,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 139,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 140,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 141,
        "fullcodeline": "printf(\"%s\\n\", cpdbGetState(p));"
    },
    {
        "line": 143,
        "fullcodeline": "else if (strcmp(buf, \"is-accepting-jobs\") == 0)"
    },
    {
        "line": 145,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 146,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 147,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 148,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 149,
        "fullcodeline": "printf(\"Accepting jobs ? : %d \\n\", cpdbIsAcceptingJobs(p));"
    },
    {
        "line": 151,
        "fullcodeline": "else if (strcmp(buf, \"help\") == 0)"
    },
    {
        "line": 153,
        "fullcodeline": "display_help();"
    },
    {
        "line": 155,
        "fullcodeline": "else if (strcmp(buf, \"ping\") == 0)"
    },
    {
        "line": 157,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE];"
    },
    {
        "line": 158,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 159,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 160,
        "fullcodeline": "print_backend_call_ping_sync(p->backend_proxy, p->id, NULL, NULL);"
    },
    {
        "line": 162,
        "fullcodeline": "else if (strcmp(buf, \"get-default-printer\") == 0)"
    },
    {
        "line": 164,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbGetDefaultPrinter(f);"
    },
    {
        "line": 166,
        "fullcodeline": "printf(\"%s#%s\\n\", p->name, p->backend_name);"
    },
    {
        "line": 170,
        "fullcodeline": "else if (strcmp(buf, \"get-default-printer-for-backend\") == 0)"
    },
    {
        "line": 168,
        "fullcodeline": "printf(\"No default printer found\\n\");"
    },
    {
        "line": 172,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 173,
        "fullcodeline": "scanf(\"%1023s\", backend_name);"
    },
    {
        "line": 178,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbGetDefaultPrinterForBackend(f, backend_name);"
    },
    {
        "line": 179,
        "fullcodeline": "printf(\"%s\\n\", p->name);"
    },
    {
        "line": 181,
        "fullcodeline": "else if (strcmp(buf, \"set-user-default-printer\") == 0)"
    },
    {
        "line": 183,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 184,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 185,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 186,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 195,
        "fullcodeline": "else if (strcmp(buf, \"set-system-default-printer\") == 0)"
    },
    {
        "line": 189,
        "fullcodeline": "if (cpdbSetUserDefaultPrinter(p))"
    },
    {
        "line": 197,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 198,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 199,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 200,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 190,
        "fullcodeline": "printf(\"Set printer as user default\\n\");"
    },
    {
        "line": 192,
        "fullcodeline": "printf(\"Couldn't set printer as user default\\n\");"
    },
    {
        "line": 209,
        "fullcodeline": "else if (strcmp(buf, \"print-file\") == 0)"
    },
    {
        "line": 203,
        "fullcodeline": "if (cpdbSetSystemDefaultPrinter(p))"
    },
    {
        "line": 211,
        "fullcodeline": "char printer_id[BUFSIZE], backend_name[BUFSIZE], file_path[BUFSIZE];"
    },
    {
        "line": 212,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", file_path, printer_id, backend_name);"
    },
    {
        "line": 216,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 227,
        "fullcodeline": "cpdbAddSettingToPrinter(p, \"copies\", \"3\");"
    },
    {
        "line": 228,
        "fullcodeline": "cpdbPrintFile(p, file_path);"
    },
    {
        "line": 204,
        "fullcodeline": "printf(\"Set printer as system default\\n\");"
    },
    {
        "line": 218,
        "fullcodeline": "if(strcmp(backend_name, \"FILE\") == 0)"
    },
    {
        "line": 206,
        "fullcodeline": "printf(\"Couldn't set printer as system default\\n\");"
    },
    {
        "line": 220,
        "fullcodeline": "char final_file_path[BUFSIZE];"
    },
    {
        "line": 221,
        "fullcodeline": "printf(\"Please give the final file path: \");"
    },
    {
        "line": 222,
        "fullcodeline": "scanf(\"%1023s\", final_file_path);"
    },
    {
        "line": 223,
        "fullcodeline": "cpdbPrintFilePath(p, file_path, final_file_path);"
    },
    {
        "line": 230,
        "fullcodeline": "else if (strcmp(buf, \"get-active-jobs-count\") == 0)"
    },
    {
        "line": 232,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 233,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 234,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 235,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 236,
        "fullcodeline": "printf(\"%d jobs currently active.\\n\", cpdbGetActiveJobsCount(p));"
    },
    {
        "line": 238,
        "fullcodeline": "else if (strcmp(buf, \"get-all-jobs\") == 0)"
    },
    {
        "line": 241,
        "fullcodeline": "scanf(\"%d\", &active_only);"
    },
    {
        "line": 243,
        "fullcodeline": "int x = cpdbGetAllJobs(f, &j, active_only);"
    },
    {
        "line": 244,
        "fullcodeline": "printf(\"Total %d jobs\\n\", x);"
    },
    {
        "line": 246,
        "fullcodeline": "for (i = 0; i < x; i++)"
    },
    {
        "line": 248,
        "fullcodeline": "printf(\"%s .. %s  .. %s  .. %s  .. %s\\n\", j[i].job_id, j[i].title, j[i].printer_id, j[i].state, j[i].submitted_at);"
    },
    {
        "line": 251,
        "fullcodeline": "else if (strcmp(buf, \"cancel-job\") == 0)"
    },
    {
        "line": 253,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 254,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 255,
        "fullcodeline": "char job_id[BUFSIZE];"
    },
    {
        "line": 256,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", job_id, printer_id, backend_name);"
    },
    {
        "line": 257,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 258,
        "fullcodeline": "if (cpdbCancelJob(p, job_id))"
    },
    {
        "line": 259,
        "fullcodeline": "printf(\"cpdb_job_t %s has been cancelled.\\n\", job_id);"
    },
    {
        "line": 263,
        "fullcodeline": "else if (strcmp(buf, \"pickle-printer\") == 0)"
    },
    {
        "line": 261,
        "fullcodeline": "printf(\"Unable to cancel job %s\\n\", job_id);"
    },
    {
        "line": 265,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 266,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 267,
        "fullcodeline": "char job_id[BUFSIZE];"
    },
    {
        "line": 268,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 269,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 270,
        "fullcodeline": "cpdbPicklePrinterToFile(p, \"/tmp/.printer-pickle\", f);"
    },
    {
        "line": 272,
        "fullcodeline": "else if (strcmp(buf, \"get-option-translation\") == 0)"
    },
    {
        "line": 274,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 275,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 276,
        "fullcodeline": "char option_name[BUFSIZE];"
    },
    {
        "line": 277,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", option_name, printer_id, backend_name);"
    },
    {
        "line": 278,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 279,
        "fullcodeline": "printf(\"%s\\n\", cpdbGetOptionTranslation(p, option_name, locale));"
    },
    {
        "line": 281,
        "fullcodeline": "else if (strcmp(buf, \"get-choice-translation\") == 0)"
    },
    {
        "line": 283,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 284,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 285,
        "fullcodeline": "char option_name[BUFSIZE];"
    },
    {
        "line": 286,
        "fullcodeline": "char choice_name[BUFSIZE];"
    },
    {
        "line": 287,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s%1023s\", option_name, choice_name, printer_id, backend_name);"
    },
    {
        "line": 288,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 289,
        "fullcodeline": "printf(\"%s\\n\", cpdbGetChoiceTranslation(p, option_name, choice_name, locale));"
    },
    {
        "line": 291,
        "fullcodeline": "else if (strcmp(buf, \"get-group-translation\") == 0)"
    },
    {
        "line": 293,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 294,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 295,
        "fullcodeline": "char group_name[BUFSIZE];"
    },
    {
        "line": 296,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", group_name, printer_id, backend_name);"
    },
    {
        "line": 297,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 298,
        "fullcodeline": "printf(\"%s\\n\", cpdbGetGroupTranslation(p, group_name, locale));"
    },
    {
        "line": 300,
        "fullcodeline": "else if (strcmp(buf, \"get-all-translations\") == 0)"
    },
    {
        "line": 302,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 303,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 304,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 305,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 306,
        "fullcodeline": "cpdbGetAllTranslations(p, locale);"
    },
    {
        "line": 307,
        "fullcodeline": "printTranslations(p);"
    },
    {
        "line": 309,
        "fullcodeline": "else if (strcmp(buf, \"get-media-size\") == 0)"
    },
    {
        "line": 311,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 312,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 313,
        "fullcodeline": "char media[BUFSIZE];"
    },
    {
        "line": 315,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", media, printer_id, backend_name);"
    },
    {
        "line": 316,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 317,
        "fullcodeline": "int ok = cpdbGetMediaSize(p, media, &width, &length);"
    },
    {
        "line": 319,
        "fullcodeline": "printf(\"%dx%d\\n\", width, length);"
    },
    {
        "line": 321,
        "fullcodeline": "else if (strcmp(buf, \"get-media-margins\") == 0)"
    },
    {
        "line": 323,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 324,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 325,
        "fullcodeline": "char media[BUFSIZE];"
    },
    {
        "line": 326,
        "fullcodeline": "scanf(\"%1023s%1023s%1023s\", media, printer_id, backend_name);"
    },
    {
        "line": 327,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 330,
        "fullcodeline": "int num_margins = cpdbGetMediaMargins(p, media, &margins);"
    },
    {
        "line": 331,
        "fullcodeline": "for (int i = 0; i < num_margins; i++)"
    },
    {
        "line": 332,
        "fullcodeline": "printf(\"%d %d %d %d\\n\", margins[i].left, margins[i].right, margins[i].top, margins[i].bottom);"
    },
    {
        "line": 334,
        "fullcodeline": "else if (strcmp(buf, \"acquire-details\") == 0)"
    },
    {
        "line": 336,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 337,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 338,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 340,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 344,
        "fullcodeline": "g_message(\"Acquiring printer details asynchronously...\\n\");"
    },
    {
        "line": 345,
        "fullcodeline": "cpdbAcquireDetails(p, acquire_details_callback, NULL);"
    },
    {
        "line": 341,
        "fullcodeline": "if(p == NULL)"
    },
    {
        "line": 347,
        "fullcodeline": "else if (strcmp(buf, \"acquire-translations\") == 0)"
    },
    {
        "line": 349,
        "fullcodeline": "char printer_id[BUFSIZE];"
    },
    {
        "line": 350,
        "fullcodeline": "char backend_name[BUFSIZE];"
    },
    {
        "line": 351,
        "fullcodeline": "scanf(\"%1023s%1023s\", printer_id, backend_name);"
    },
    {
        "line": 353,
        "fullcodeline": "cpdb_printer_obj_t *p = cpdbFindPrinterObj(f, printer_id, backend_name);"
    },
    {
        "line": 357,
        "fullcodeline": "g_message(\"Acquiring printer translations asynchronously...\\n\");"
    },
    {
        "line": 358,
        "fullcodeline": "cpdbAcquireTranslations(p, locale, acquire_translations_callback, NULL);"
    },
    {
        "line": 354,
        "fullcodeline": "if(p == NULL)"
    }
]