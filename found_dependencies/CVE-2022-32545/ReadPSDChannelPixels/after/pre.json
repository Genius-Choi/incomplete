[
    {
        "line": 20,
        "fullcodeline": "p=pixels;"
    },
    {
        "line": 21,
        "fullcodeline": "q=GetAuthenticPixels(image,0,row,image->columns,1,exception);"
    },
    {
        "line": 24,
        "fullcodeline": "packet_size=GetPSDPacketSize(image);"
    },
    {
        "line": 22,
        "fullcodeline": "if (q == (Quantum *) NULL)"
    },
    {
        "line": 25,
        "fullcodeline": "for (x=0; x < (ssize_t) image->columns; x++)"
    },
    {
        "line": 72,
        "fullcodeline": "return(SyncAuthenticPixels(image,exception));"
    },
    {
        "line": 27,
        "fullcodeline": "if (packet_size == 1)"
    },
    {
        "line": 46,
        "fullcodeline": "if (image->depth > 1)"
    },
    {
        "line": 28,
        "fullcodeline": "pixel=ScaleCharToQuantum(*p++);"
    },
    {
        "line": 48,
        "fullcodeline": "SetPSDPixel(image,channel,packet_size,pixel,q,exception);"
    },
    {
        "line": 49,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 57,
        "fullcodeline": "number_bits=(ssize_t) image->columns-x;"
    },
    {
        "line": 30,
        "fullcodeline": "if (packet_size == 2)"
    },
    {
        "line": 58,
        "fullcodeline": "if (number_bits > 8)"
    },
    {
        "line": 60,
        "fullcodeline": "for (bit = 0; bit < (ssize_t) number_bits; bit++)"
    },
    {
        "line": 67,
        "fullcodeline": "if (x != (ssize_t) image->columns)"
    },
    {
        "line": 35,
        "fullcodeline": "p=PushShortPixel(MSBEndian,p,&nibble);"
    },
    {
        "line": 36,
        "fullcodeline": "pixel=ScaleShortToQuantum(nibble);"
    },
    {
        "line": 59,
        "fullcodeline": "number_bits=8;"
    },
    {
        "line": 62,
        "fullcodeline": "SetPSDPixel(image,channel,packet_size,(((unsigned char)((ssize_t)pixel))"
    },
    {
        "line": 64,
        "fullcodeline": "q+=GetPixelChannels(image);"
    },
    {
        "line": 65,
        "fullcodeline": "x++;"
    },
    {
        "line": 68,
        "fullcodeline": "x--;"
    },
    {
        "line": 43,
        "fullcodeline": "p=PushFloatPixel(MSBEndian,p,&nibble);"
    },
    {
        "line": 44,
        "fullcodeline": "pixel=ClampToQuantum(((MagickRealType) QuantumRange)*nibble);"
    },
    {
        "line": 63,
        "fullcodeline": "& (0x01 << (7-bit))) != 0 ? 0 : QuantumRange,q,exception);"
    }
]