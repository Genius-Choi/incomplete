[
    {
        "line": 9,
        "fullcodeline": "int needs_reinit = 0;"
    },
    {
        "line": 15,
        "fullcodeline": "first_mb_in_slice = get_ue_golomb_long(&h->gb);"
    },
    {
        "line": 32,
        "fullcodeline": "slice_type = get_ue_golomb_31(&h->gb);"
    },
    {
        "line": 46,
        "fullcodeline": "h->slice_type     = slice_type;"
    },
    {
        "line": 47,
        "fullcodeline": "h->slice_type_nos = slice_type & 3;"
    },
    {
        "line": 50,
        "fullcodeline": "h->pict_type = h->slice_type;"
    },
    {
        "line": 52,
        "fullcodeline": "pps_id = get_ue_golomb(&h->gb);"
    },
    {
        "line": 96,
        "fullcodeline": "h->avctx->profile = ff_h264_get_profile(&h->sps);"
    },
    {
        "line": 100,
        "fullcodeline": "must_reinit = (h->context_initialized &&"
    },
    {
        "line": 112,
        "fullcodeline": "h->mb_width  = h->sps.mb_width;"
    },
    {
        "line": 113,
        "fullcodeline": "h->mb_height = h->sps.mb_height * (2 - h->sps.frame_mbs_only_flag);"
    },
    {
        "line": 114,
        "fullcodeline": "h->mb_num    = h->mb_width * h->mb_height;"
    },
    {
        "line": 115,
        "fullcodeline": "h->mb_stride = h->mb_width + 1;"
    },
    {
        "line": 117,
        "fullcodeline": "h->b_stride = h->mb_width * 4;"
    },
    {
        "line": 119,
        "fullcodeline": "h->chroma_y_shift = h->sps.chroma_format_idc <= 1; // 400 uses yuv420p"
    },
    {
        "line": 121,
        "fullcodeline": "h->width  = 16 * h->mb_width;"
    },
    {
        "line": 122,
        "fullcodeline": "h->height = 16 * h->mb_height;"
    },
    {
        "line": 124,
        "fullcodeline": "ret = init_dimensions(h);"
    },
    {
        "line": 189,
        "fullcodeline": "h->frame_num = get_bits(&h->gb, h->sps.log2_max_frame_num);"
    },
    {
        "line": 191,
        "fullcodeline": "h->mb_mbaff        = 0;"
    },
    {
        "line": 192,
        "fullcodeline": "h->mb_aff_frame    = 0;"
    },
    {
        "line": 193,
        "fullcodeline": "last_pic_structure = h0->picture_structure;"
    },
    {
        "line": 194,
        "fullcodeline": "last_pic_droppable = h0->droppable;"
    },
    {
        "line": 195,
        "fullcodeline": "h->droppable       = h->nal_ref_idc == 0;"
    },
    {
        "line": 212,
        "fullcodeline": "h->mb_field_decoding_flag = h->picture_structure != PICT_FRAME;"
    },
    {
        "line": 413,
        "fullcodeline": "h->cur_pic_ptr->frame_num = h->frame_num; // FIXME frame_num cleanup"
    },
    {
        "line": 415,
        "fullcodeline": "av_assert1(h->mb_num == h->mb_width * h->mb_height);"
    },
    {
        "line": 421,
        "fullcodeline": "h->resync_mb_x = h->mb_x =  first_mb_in_slice % h->mb_width;"
    },
    {
        "line": 422,
        "fullcodeline": "h->resync_mb_y = h->mb_y = (first_mb_in_slice / h->mb_width) <<"
    },
    {
        "line": 426,
        "fullcodeline": "av_assert1(h->mb_y < h->mb_height);"
    },
    {
        "line": 453,
        "fullcodeline": "ff_init_poc(h, h->cur_pic_ptr->field_poc, &h->cur_pic_ptr->poc);"
    },
    {
        "line": 458,
        "fullcodeline": "ret = ff_set_ref_count(h);"
    },
    {
        "line": 517,
        "fullcodeline": "ff_h264_direct_ref_list_init(h);"
    },
    {
        "line": 528,
        "fullcodeline": "h->last_qscale_diff = 0;"
    },
    {
        "line": 529,
        "fullcodeline": "tmp = h->pps.init_qp + get_se_golomb(&h->gb);"
    },
    {
        "line": 534,
        "fullcodeline": "h->qscale       = tmp;"
    },
    {
        "line": 535,
        "fullcodeline": "h->chroma_qp[0] = get_chroma_qp(h, 0, h->qscale);"
    },
    {
        "line": 536,
        "fullcodeline": "h->chroma_qp[1] = get_chroma_qp(h, 1, h->qscale);"
    },
    {
        "line": 544,
        "fullcodeline": "h->deblocking_filter     = 1;"
    },
    {
        "line": 545,
        "fullcodeline": "h->slice_alpha_c0_offset = 52;"
    },
    {
        "line": 546,
        "fullcodeline": "h->slice_beta_offset     = 52;"
    },
    {
        "line": 599,
        "fullcodeline": "h->qp_thresh = 15 + 52 -"
    },
    {
        "line": 606,
        "fullcodeline": "h0->last_slice_type = slice_type;"
    },
    {
        "line": 607,
        "fullcodeline": "memcpy(h0->last_ref_count, h0->ref_count, sizeof(h0->last_ref_count));"
    },
    {
        "line": 608,
        "fullcodeline": "h->slice_num        = ++h0->current_slice;"
    },
    {
        "line": 17,
        "fullcodeline": "if (first_mb_in_slice == 0) { // FIXME better field boundary detection"
    },
    {
        "line": 33,
        "fullcodeline": "if (slice_type > 9) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (slice_type > 4) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (pps_id >= MAX_PPS_COUNT) {"
    },
    {
        "line": 72,
        "fullcodeline": "if (h->pps.sps_id != h->current_sps_id ||"
    },
    {
        "line": 109,
        "fullcodeline": "if (h0->avctx->pix_fmt != get_pixel_format(h0, 0))"
    },
    {
        "line": 125,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 140,
        "fullcodeline": "if (h->context_initialized &&"
    },
    {
        "line": 166,
        "fullcodeline": "if (!h->context_initialized) {"
    },
    {
        "line": 184,
        "fullcodeline": "if (h == h0 && h->dequant_coeff_pps != pps_id) {"
    },
    {
        "line": 214,
        "fullcodeline": "if (h0->current_slice != 0) {"
    },
    {
        "line": 401,
        "fullcodeline": "if (h != h0 && (ret = clone_slice(h, h0)) < 0)"
    },
    {
        "line": 406,
        "fullcodeline": "for (i = 0; i < h->slice_context_count; i++)"
    },
    {
        "line": 416,
        "fullcodeline": "if (first_mb_in_slice << FIELD_OR_MBAFF_PICTURE(h) >= h->mb_num ||"
    },
    {
        "line": 424,
        "fullcodeline": "if (h->picture_structure == PICT_BOTTOM_FIELD)"
    },
    {
        "line": 428,
        "fullcodeline": "if (h->picture_structure == PICT_FRAME) {"
    },
    {
        "line": 436,
        "fullcodeline": "if (h->nal_unit_type == NAL_IDR_SLICE)"
    },
    {
        "line": 439,
        "fullcodeline": "if (h->sps.poc_type == 0) {"
    },
    {
        "line": 446,
        "fullcodeline": "if (h->sps.poc_type == 1 && !h->sps.delta_pic_order_always_zero_flag) {"
    },
    {
        "line": 459,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 462,
        "fullcodeline": "if (slice_type != AV_PICTURE_TYPE_I &&"
    },
    {
        "line": 470,
        "fullcodeline": "if (h->slice_type_nos != AV_PICTURE_TYPE_I) {"
    },
    {
        "line": 478,
        "fullcodeline": "if ((h->pps.weighted_pred && h->slice_type_nos == AV_PICTURE_TYPE_P) ||"
    },
    {
        "line": 506,
        "fullcodeline": "if (FRAME_MBAFF(h)) {"
    },
    {
        "line": 515,
        "fullcodeline": "if (h->slice_type_nos == AV_PICTURE_TYPE_B && !h->direct_spatial_mv_pred)"
    },
    {
        "line": 519,
        "fullcodeline": "if (h->slice_type_nos != AV_PICTURE_TYPE_I && h->pps.cabac) {"
    },
    {
        "line": 530,
        "fullcodeline": "if (tmp > 51 + 6 * (h->sps.bit_depth_luma - 8)) {"
    },
    {
        "line": 538,
        "fullcodeline": "if (h->slice_type == AV_PICTURE_TYPE_SP)"
    },
    {
        "line": 540,
        "fullcodeline": "if (h->slice_type == AV_PICTURE_TYPE_SP ||"
    },
    {
        "line": 571,
        "fullcodeline": "if (h->avctx->skip_loop_filter >= AVDISCARD_ALL ||"
    },
    {
        "line": 580,
        "fullcodeline": "if (h->deblocking_filter == 1 && h0->max_contexts > 1) {"
    },
    {
        "line": 612,
        "fullcodeline": "if (   h0->slice_row[h->slice_num&(MAX_SLICES-1)] + 3 >= h->resync_mb_y"
    },
    {
        "line": 619,
        "fullcodeline": "for (j = 0; j < 2; j++) {"
    },
    {
        "line": 656,
        "fullcodeline": "if (h->avctx->debug & FF_DEBUG_PICT_INFO) {"
    },
    {
        "line": 22,
        "fullcodeline": "h0->current_slice = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 40,
        "fullcodeline": "slice_type -= 5;"
    },
    {
        "line": 41,
        "fullcodeline": "h->slice_type_fixed = 1;"
    },
    {
        "line": 54,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"pps_id %d out of range\\n\", pps_id);"
    },
    {
        "line": 58,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 66,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 74,
        "fullcodeline": "h0->sps_buffers[h->pps.sps_id]->new = 0;"
    },
    {
        "line": 76,
        "fullcodeline": "h->current_sps_id = h->pps.sps_id;"
    },
    {
        "line": 101,
        "fullcodeline": "(   16*h->sps.mb_width != h->avctx->coded_width"
    },
    {
        "line": 110,
        "fullcodeline": "must_reinit = 1;"
    },
    {
        "line": 129,
        "fullcodeline": "h->avctx->color_range = h->sps.full_range>0 ? AVCOL_RANGE_JPEG"
    },
    {
        "line": 141,
        "fullcodeline": "(h->width  != h->avctx->coded_width   ||"
    },
    {
        "line": 151,
        "fullcodeline": "flush_change(h);"
    },
    {
        "line": 155,
        "fullcodeline": "h->avctx->pix_fmt = ret;"
    },
    {
        "line": 157,
        "fullcodeline": "av_log(h->avctx, AV_LOG_INFO, \"Reinit context to %dx%d, \""
    },
    {
        "line": 175,
        "fullcodeline": "h->avctx->pix_fmt = ret;"
    },
    {
        "line": 185,
        "fullcodeline": "h->dequant_coeff_pps = pps_id;"
    },
    {
        "line": 186,
        "fullcodeline": "init_dequant_tables(h);"
    },
    {
        "line": 197,
        "fullcodeline": "h->picture_structure = PICT_FRAME;"
    },
    {
        "line": 417,
        "fullcodeline": "first_mb_in_slice >= h->mb_num) {"
    },
    {
        "line": 418,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"first_mb_in_slice overflow\\n\");"
    },
    {
        "line": 425,
        "fullcodeline": "h->resync_mb_y = h->mb_y = h->mb_y + 1;"
    },
    {
        "line": 429,
        "fullcodeline": "h->curr_pic_num = h->frame_num;"
    },
    {
        "line": 430,
        "fullcodeline": "h->max_pic_num  = 1 << h->sps.log2_max_frame_num;"
    },
    {
        "line": 437,
        "fullcodeline": "get_ue_golomb(&h->gb); /* idr_pic_id */"
    },
    {
        "line": 440,
        "fullcodeline": "h->poc_lsb = get_bits(&h->gb, h->sps.log2_max_poc_lsb);"
    },
    {
        "line": 447,
        "fullcodeline": "h->delta_poc[0] = get_se_golomb(&h->gb);"
    },
    {
        "line": 456,
        "fullcodeline": "h->redundant_pic_count = get_ue_golomb(&h->gb);"
    },
    {
        "line": 463,
        "fullcodeline": "(h0->current_slice == 0 ||"
    },
    {
        "line": 467,
        "fullcodeline": "ff_h264_fill_default_ref_list(h);"
    },
    {
        "line": 471,
        "fullcodeline": "ret = ff_h264_decode_ref_pic_list_reordering(h);"
    },
    {
        "line": 479,
        "fullcodeline": "(h->pps.weighted_bipred_idc == 1 &&"
    },
    {
        "line": 481,
        "fullcodeline": "ff_pred_weight_table(h);"
    },
    {
        "line": 499,
        "fullcodeline": "ret = ff_h264_decode_ref_pic_marking(h0, &h->gb,"
    },
    {
        "line": 507,
        "fullcodeline": "ff_h264_fill_mbaff_ref_list(h);"
    },
    {
        "line": 516,
        "fullcodeline": "ff_h264_direct_dist_scale_factor(h);"
    },
    {
        "line": 520,
        "fullcodeline": "tmp = get_ue_golomb_31(&h->gb);"
    },
    {
        "line": 525,
        "fullcodeline": "h->cabac_init_idc = tmp;"
    },
    {
        "line": 531,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"QP %u out of range\\n\", tmp);"
    },
    {
        "line": 539,
        "fullcodeline": "get_bits1(&h->gb); /* sp_for_switch_flag */"
    },
    {
        "line": 541,
        "fullcodeline": "h->slice_type == AV_PICTURE_TYPE_SI)"
    },
    {
        "line": 542,
        "fullcodeline": "get_se_golomb(&h->gb); /* slice_qs_delta */"
    },
    {
        "line": 548,
        "fullcodeline": "tmp = get_ue_golomb_31(&h->gb);"
    },
    {
        "line": 554,
        "fullcodeline": "h->deblocking_filter = tmp;"
    },
    {
        "line": 576,
        "fullcodeline": "(h->avctx->skip_loop_filter >= AVDISCARD_NONREF &&"
    },
    {
        "line": 578,
        "fullcodeline": "h->deblocking_filter = 0;"
    },
    {
        "line": 604,
        "fullcodeline": "6 * (h->sps.bit_depth_luma - 8);"
    },
    {
        "line": 611,
        "fullcodeline": "h0->slice_row[(h->slice_num-1)&(MAX_SLICES-1)]= h->resync_mb_y;"
    },
    {
        "line": 614,
        "fullcodeline": "&& h->slice_num >= MAX_SLICES) {"
    },
    {
        "line": 616,
        "fullcodeline": "av_log(h->avctx, AV_LOG_WARNING, \"Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\\n\", h->slice_num, MAX_SLICES);"
    },
    {
        "line": 620,
        "fullcodeline": "int id_list[16];"
    },
    {
        "line": 641,
        "fullcodeline": "ref2frm[0] ="
    },
    {
        "line": 645,
        "fullcodeline": "ref2frm[18 + 0] ="
    },
    {
        "line": 657,
        "fullcodeline": "av_log(h->avctx, AV_LOG_DEBUG,"
    },
    {
        "line": 18,
        "fullcodeline": "if (h0->current_slice && FIELD_PICTURE(h)) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!h0->first_field) {"
    },
    {
        "line": 43,
        "fullcodeline": "h->slice_type_fixed = 0;"
    },
    {
        "line": 79,
        "fullcodeline": "if (h->mb_width  != h->sps.mb_width ||"
    },
    {
        "line": 86,
        "fullcodeline": "if (h->bit_depth_luma    != h->sps.bit_depth_luma ||"
    },
    {
        "line": 92,
        "fullcodeline": "if ((ret = h264_set_parameter_from_sps(h)) < 0)"
    },
    {
        "line": 107,
        "fullcodeline": "|| h->mb_height != h->sps.mb_height * (2 - h->sps.frame_mbs_only_flag)"
    },
    {
        "line": 145,
        "fullcodeline": "if (h != h0) {"
    },
    {
        "line": 153,
        "fullcodeline": "if ((ret = get_pixel_format(h, 1)) < 0)"
    },
    {
        "line": 158,
        "fullcodeline": "\"pix_fmt: %s\\n\", h->width, h->height, av_get_pix_fmt_name(h->avctx->pix_fmt));"
    },
    {
        "line": 160,
        "fullcodeline": "if ((ret = h264_slice_header_init(h, 1)) < 0) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (h != h0) {"
    },
    {
        "line": 173,
        "fullcodeline": "if ((ret = get_pixel_format(h, 1)) < 0)"
    },
    {
        "line": 177,
        "fullcodeline": "if ((ret = h264_slice_header_init(h, 0)) < 0) {"
    },
    {
        "line": 203,
        "fullcodeline": "field_pic_flag = get_bits1(&h->gb);"
    },
    {
        "line": 215,
        "fullcodeline": "if (last_pic_structure != h->picture_structure ||"
    },
    {
        "line": 399,
        "fullcodeline": "h0->last_slice_type = -1;"
    },
    {
        "line": 408,
        "fullcodeline": "ret = alloc_scratch_buffers(h->thread_context[i], h->linesize);"
    },
    {
        "line": 423,
        "fullcodeline": "FIELD_OR_MBAFF_PICTURE(h);"
    },
    {
        "line": 432,
        "fullcodeline": "h->curr_pic_num = 2 * h->frame_num + 1;"
    },
    {
        "line": 433,
        "fullcodeline": "h->max_pic_num  = 1 << (h->sps.log2_max_frame_num + 1);"
    },
    {
        "line": 442,
        "fullcodeline": "if (h->pps.pic_order_present == 1 && h->picture_structure == PICT_FRAME)"
    },
    {
        "line": 449,
        "fullcodeline": "if (h->pps.pic_order_present == 1 && h->picture_structure == PICT_FRAME)"
    },
    {
        "line": 465,
        "fullcodeline": "memcmp(h0->last_ref_count, h0->ref_count, sizeof(h0->ref_count)))) {"
    },
    {
        "line": 472,
        "fullcodeline": "if (ret < 0) {"
    },
    {
        "line": 480,
        "fullcodeline": "h->slice_type_nos == AV_PICTURE_TYPE_B))"
    },
    {
        "line": 502,
        "fullcodeline": "if (ret < 0 && (h->avctx->err_recognition & AV_EF_EXPLODE))"
    },
    {
        "line": 509,
        "fullcodeline": "if (h->pps.weighted_bipred_idc == 2 && h->slice_type_nos == AV_PICTURE_TYPE_B) {"
    },
    {
        "line": 521,
        "fullcodeline": "if (tmp > 2) {"
    },
    {
        "line": 549,
        "fullcodeline": "if (tmp > 2) {"
    },
    {
        "line": 555,
        "fullcodeline": "if (h->deblocking_filter < 2)"
    },
    {
        "line": 574,
        "fullcodeline": "(h->avctx->skip_loop_filter >= AVDISCARD_BIDIR  &&"
    },
    {
        "line": 577,
        "fullcodeline": "h->nal_ref_idc == 0))"
    },
    {
        "line": 581,
        "fullcodeline": "if (h->avctx->flags2 & CODEC_FLAG2_FAST) {"
    },
    {
        "line": 601,
        "fullcodeline": "FFMAX3(0,"
    },
    {
        "line": 613,
        "fullcodeline": "&& h0->slice_row[h->slice_num&(MAX_SLICES-1)] <= h->resync_mb_y"
    },
    {
        "line": 622,
        "fullcodeline": "for (i = 0; i < 16; i++) {"
    },
    {
        "line": 642,
        "fullcodeline": "ref2frm[1] = -1;"
    },
    {
        "line": 643,
        "fullcodeline": "for (i = 0; i < 16; i++)"
    },
    {
        "line": 644,
        "fullcodeline": "ref2frm[i + 2] = 4 * id_list[i] + (h->ref_list[j][i].reference & 3);"
    },
    {
        "line": 646,
        "fullcodeline": "ref2frm[18 + 1] = -1;"
    },
    {
        "line": 647,
        "fullcodeline": "for (i = 16; i < 48; i++)"
    },
    {
        "line": 648,
        "fullcodeline": "ref2frm[i + 4] = 4 * id_list[(i - 16) >> 1] +"
    },
    {
        "line": 660,
        "fullcodeline": "(h->picture_structure == PICT_FRAME ? \"F\" : h->picture_structure == PICT_TOP_FIELD ? \"T\" : \"B\"),"
    },
    {
        "line": 662,
        "fullcodeline": "av_get_picture_type_char(h->slice_type),"
    },
    {
        "line": 663,
        "fullcodeline": "h->slice_type_fixed ? \" fix\" : \"\","
    },
    {
        "line": 664,
        "fullcodeline": "h->nal_unit_type == NAL_IDR_SLICE ? \" IDR\" : \"\","
    },
    {
        "line": 671,
        "fullcodeline": "h->slice_alpha_c0_offset / 2 - 26, h->slice_beta_offset / 2 - 26,"
    },
    {
        "line": 673,
        "fullcodeline": "h->use_weight == 1 && h->use_weight_chroma ? \"c\" : \"\","
    },
    {
        "line": 674,
        "fullcodeline": "h->slice_type == AV_PICTURE_TYPE_B ? (h->direct_spatial_mv_pred ? \"SPAT\" : \"TEMP\") : \"\");"
    },
    {
        "line": 19,
        "fullcodeline": "field_end(h, 1);"
    },
    {
        "line": 28,
        "fullcodeline": "h->cur_pic_ptr = NULL;"
    },
    {
        "line": 82,
        "fullcodeline": "h->cur_chroma_format_idc != h->sps.chroma_format_idc"
    },
    {
        "line": 84,
        "fullcodeline": "needs_reinit = 1;"
    },
    {
        "line": 87,
        "fullcodeline": "h->chroma_format_idc != h->sps.chroma_format_idc) {"
    },
    {
        "line": 88,
        "fullcodeline": "h->bit_depth_luma    = h->sps.bit_depth_luma;"
    },
    {
        "line": 89,
        "fullcodeline": "h->chroma_format_idc = h->sps.chroma_format_idc;"
    },
    {
        "line": 90,
        "fullcodeline": "needs_reinit         = 1;"
    },
    {
        "line": 106,
        "fullcodeline": "|| h->mb_width  != h->sps.mb_width"
    },
    {
        "line": 136,
        "fullcodeline": "h->avctx->colorspace      = h->sps.colorspace;"
    },
    {
        "line": 146,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"changing width/height on \""
    },
    {
        "line": 161,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 168,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 178,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 199,
        "fullcodeline": "if (!h->sps.direct_8x8_inference_flag && slice_type == AV_PICTURE_TYPE_B) {"
    },
    {
        "line": 216,
        "fullcodeline": "last_pic_droppable != h->droppable) {"
    },
    {
        "line": 217,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 220,
        "fullcodeline": "h->picture_structure = last_pic_structure;"
    },
    {
        "line": 221,
        "fullcodeline": "h->droppable         = last_pic_droppable;"
    },
    {
        "line": 232,
        "fullcodeline": "if (h->frame_num != h->prev_frame_num && h->prev_frame_num >= 0) {"
    },
    {
        "line": 305,
        "fullcodeline": "while (h->frame_num != h->prev_frame_num && h->prev_frame_num >= 0 && !h0->first_field &&"
    },
    {
        "line": 382,
        "fullcodeline": "if (!FIELD_PICTURE(h) || h0->first_field) {"
    },
    {
        "line": 392,
        "fullcodeline": "if (FIELD_PICTURE(h)) {"
    },
    {
        "line": 409,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 443,
        "fullcodeline": "h->delta_poc_bottom = get_se_golomb(&h->gb);"
    },
    {
        "line": 450,
        "fullcodeline": "h->delta_poc[1] = get_se_golomb(&h->gb);"
    },
    {
        "line": 464,
        "fullcodeline": "slice_type != h0->last_slice_type ||"
    },
    {
        "line": 473,
        "fullcodeline": "h->ref_count[1] = h->ref_count[0] = 0;"
    },
    {
        "line": 482,
        "fullcodeline": "else if (h->pps.weighted_bipred_idc == 2 &&"
    },
    {
        "line": 500,
        "fullcodeline": "!(h->avctx->active_thread_type & FF_THREAD_FRAME) ||"
    },
    {
        "line": 510,
        "fullcodeline": "implicit_weight_table(h, 0);"
    },
    {
        "line": 511,
        "fullcodeline": "implicit_weight_table(h, 1);"
    },
    {
        "line": 522,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"cabac_init_idc overflow\\n\");"
    },
    {
        "line": 550,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 556,
        "fullcodeline": "h->deblocking_filter ^= 1;  // 1<->0"
    },
    {
        "line": 559,
        "fullcodeline": "h->slice_alpha_c0_offset += get_se_golomb(&h->gb) << 1;"
    },
    {
        "line": 560,
        "fullcodeline": "h->slice_beta_offset     += get_se_golomb(&h->gb) << 1;"
    },
    {
        "line": 572,
        "fullcodeline": "(h->avctx->skip_loop_filter >= AVDISCARD_NONKEY &&"
    },
    {
        "line": 575,
        "fullcodeline": "h->slice_type_nos == AV_PICTURE_TYPE_B) ||"
    },
    {
        "line": 584,
        "fullcodeline": "h->deblocking_filter = 2;"
    },
    {
        "line": 600,
        "fullcodeline": "FFMIN(h->slice_alpha_c0_offset, h->slice_beta_offset) -"
    },
    {
        "line": 623,
        "fullcodeline": "id_list[i] = 60;"
    },
    {
        "line": 24,
        "fullcodeline": "if (h->cur_pic_ptr && !h->droppable) {"
    },
    {
        "line": 142,
        "fullcodeline": "h->height != h->avctx->coded_height  ||"
    },
    {
        "line": 147,
        "fullcodeline": "\"slice %d\\n\", h0->current_slice + 1);"
    },
    {
        "line": 200,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR, \"This stream was generated by a broken encoder, invalid 8x8 inference\\n\");"
    },
    {
        "line": 205,
        "fullcodeline": "bottom_field_flag = get_bits1(&h->gb);"
    },
    {
        "line": 206,
        "fullcodeline": "h->picture_structure = PICT_TOP_FIELD + bottom_field_flag;"
    },
    {
        "line": 233,
        "fullcodeline": "int unwrap_prev_frame_num = h->prev_frame_num;"
    },
    {
        "line": 234,
        "fullcodeline": "int max_frame_num         = 1 << h->sps.log2_max_frame_num;"
    },
    {
        "line": 254,
        "fullcodeline": "assert(h0->cur_pic_ptr);"
    },
    {
        "line": 256,
        "fullcodeline": "assert(h0->cur_pic_ptr->reference != DELAYED_PIC_REF);"
    },
    {
        "line": 306,
        "fullcodeline": "h->frame_num != (h->prev_frame_num + 1) % (1 << h->sps.log2_max_frame_num)) {"
    },
    {
        "line": 307,
        "fullcodeline": "Picture *prev = h->short_ref_count ? h->short_ref[0] : NULL;"
    },
    {
        "line": 308,
        "fullcodeline": "av_log(h->avctx, AV_LOG_DEBUG, \"Frame num gap %d %d\\n\","
    },
    {
        "line": 313,
        "fullcodeline": "ret = h264_frame_start(h);"
    },
    {
        "line": 316,
        "fullcodeline": "h->prev_frame_num++;"
    },
    {
        "line": 317,
        "fullcodeline": "h->prev_frame_num        %= 1 << h->sps.log2_max_frame_num;"
    },
    {
        "line": 318,
        "fullcodeline": "h->cur_pic_ptr->frame_num = h->prev_frame_num;"
    },
    {
        "line": 319,
        "fullcodeline": "ff_thread_report_progress(&h->cur_pic_ptr->tf, INT_MAX, 0);"
    },
    {
        "line": 320,
        "fullcodeline": "ff_thread_report_progress(&h->cur_pic_ptr->tf, INT_MAX, 1);"
    },
    {
        "line": 321,
        "fullcodeline": "ret = ff_generate_sliding_window_mmcos(h, 1);"
    },
    {
        "line": 324,
        "fullcodeline": "ret = ff_h264_execute_ref_pic_marking(h, h->mmco, h->mmco_index);"
    },
    {
        "line": 353,
        "fullcodeline": "assert(h0->cur_pic_ptr);"
    },
    {
        "line": 354,
        "fullcodeline": "assert(h0->cur_pic_ptr->f.data[0]);"
    },
    {
        "line": 355,
        "fullcodeline": "assert(h0->cur_pic_ptr->reference != DELAYED_PIC_REF);"
    },
    {
        "line": 483,
        "fullcodeline": "h->slice_type_nos == AV_PICTURE_TYPE_B) {"
    },
    {
        "line": 484,
        "fullcodeline": "implicit_weight_table(h, -1);"
    },
    {
        "line": 501,
        "fullcodeline": "h0->current_slice == 0);"
    },
    {
        "line": 561,
        "fullcodeline": "if (h->slice_alpha_c0_offset > 104U ||"
    },
    {
        "line": 573,
        "fullcodeline": "h->slice_type_nos != AV_PICTURE_TYPE_I) ||"
    },
    {
        "line": 586,
        "fullcodeline": "h0->max_contexts = 1;"
    },
    {
        "line": 621,
        "fullcodeline": "int *ref2frm = h->ref2frm[h->slice_num & (MAX_SLICES - 1)][j];"
    },
    {
        "line": 624,
        "fullcodeline": "if (j < h->list_count && i < h->ref_count[j] &&"
    },
    {
        "line": 649,
        "fullcodeline": "(h->ref_list[j][i].reference & 3);"
    },
    {
        "line": 25,
        "fullcodeline": "ff_thread_report_progress(&h->cur_pic_ptr->tf, INT_MAX,"
    },
    {
        "line": 80,
        "fullcodeline": "h->mb_height != h->sps.mb_height * (2 - h->sps.frame_mbs_only_flag) ||"
    },
    {
        "line": 104,
        "fullcodeline": "|| h->cur_chroma_format_idc != h->sps.chroma_format_idc"
    },
    {
        "line": 133,
        "fullcodeline": "needs_reinit = 1;"
    },
    {
        "line": 201,
        "fullcodeline": "return -1;"
    },
    {
        "line": 208,
        "fullcodeline": "h->picture_structure = PICT_FRAME;"
    },
    {
        "line": 223,
        "fullcodeline": "} else if (!h0->cur_pic_ptr) {"
    },
    {
        "line": 236,
        "fullcodeline": "if (unwrap_prev_frame_num > h->frame_num)"
    },
    {
        "line": 239,
        "fullcodeline": "if ((h->frame_num - unwrap_prev_frame_num) > h->sps.ref_frame_count) {"
    },
    {
        "line": 259,
        "fullcodeline": "if (!last_pic_droppable && h0->cur_pic_ptr->tf.owner == h0->avctx) {"
    },
    {
        "line": 265,
        "fullcodeline": "if (!FIELD_PICTURE(h) || h->picture_structure == last_pic_structure) {"
    },
    {
        "line": 314,
        "fullcodeline": "if (ret < 0)"
    },
    {
        "line": 322,
        "fullcodeline": "if (ret < 0 && (h->avctx->err_recognition & AV_EF_EXPLODE))"
    },
    {
        "line": 325,
        "fullcodeline": "if (ret < 0 && (h->avctx->err_recognition & AV_EF_EXPLODE))"
    },
    {
        "line": 358,
        "fullcodeline": "if (!FIELD_PICTURE(h) || h->picture_structure == last_pic_structure) {"
    },
    {
        "line": 379,
        "fullcodeline": "h0->first_field = FIELD_PICTURE(h);"
    },
    {
        "line": 383,
        "fullcodeline": "if (h264_frame_start(h) < 0) {"
    },
    {
        "line": 388,
        "fullcodeline": "release_unused_pictures(h, 0);"
    },
    {
        "line": 393,
        "fullcodeline": "for(i = (h->picture_structure == PICT_BOTTOM_FIELD); i<h->mb_height; i++)"
    },
    {
        "line": 394,
        "fullcodeline": "memset(h->slice_table + i*h->mb_stride, -1, (h->mb_stride - (i+1==h->mb_height)) * sizeof(*h->slice_table));"
    },
    {
        "line": 396,
        "fullcodeline": "memset(h->slice_table, -1,"
    },
    {
        "line": 486,
        "fullcodeline": "h->use_weight = 0;"
    },
    {
        "line": 562,
        "fullcodeline": "h->slice_beta_offset     > 104U) {"
    },
    {
        "line": 563,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 587,
        "fullcodeline": "if (!h0->single_decode_warning) {"
    },
    {
        "line": 592,
        "fullcodeline": "if (h != h0) {"
    },
    {
        "line": 26,
        "fullcodeline": "h->picture_structure == PICT_BOTTOM_FIELD);"
    },
    {
        "line": 103,
        "fullcodeline": "|| h->avctx->bits_per_raw_sample != h->sps.bit_depth_luma"
    },
    {
        "line": 224,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 237,
        "fullcodeline": "unwrap_prev_frame_num -= max_frame_num;"
    },
    {
        "line": 240,
        "fullcodeline": "unwrap_prev_frame_num = (h->frame_num - h->sps.ref_frame_count) - 1;"
    },
    {
        "line": 244,
        "fullcodeline": "h->prev_frame_num = unwrap_prev_frame_num;"
    },
    {
        "line": 260,
        "fullcodeline": "ff_thread_report_progress(&h0->cur_pic_ptr->tf, INT_MAX,"
    },
    {
        "line": 345,
        "fullcodeline": "h->short_ref[0]->frame_num = h->prev_frame_num;"
    },
    {
        "line": 361,
        "fullcodeline": "h0->cur_pic_ptr = NULL;"
    },
    {
        "line": 362,
        "fullcodeline": "h0->first_field = FIELD_PICTURE(h);"
    },
    {
        "line": 384,
        "fullcodeline": "h0->first_field = 0;"
    },
    {
        "line": 397,
        "fullcodeline": "(h->mb_height * h->mb_stride - 1) * sizeof(*h->slice_table));"
    },
    {
        "line": 487,
        "fullcodeline": "for (i = 0; i < 2; i++) {"
    },
    {
        "line": 588,
        "fullcodeline": "av_log(h->avctx, AV_LOG_INFO,"
    },
    {
        "line": 590,
        "fullcodeline": "h0->single_decode_warning = 1;"
    },
    {
        "line": 593,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 628,
        "fullcodeline": "for (k = 0; k < h->short_ref_count; k++)"
    },
    {
        "line": 633,
        "fullcodeline": "for (k = 0; k < h->long_ref_count; k++)"
    },
    {
        "line": 102,
        "fullcodeline": "|| 16*h->sps.mb_height * (2 - h->sps.frame_mbs_only_flag) != h->avctx->coded_height"
    },
    {
        "line": 226,
        "fullcodeline": "h0->current_slice + 1);"
    },
    {
        "line": 241,
        "fullcodeline": "if (unwrap_prev_frame_num < 0)"
    },
    {
        "line": 261,
        "fullcodeline": "last_pic_structure == PICT_BOTTOM_FIELD);"
    },
    {
        "line": 268,
        "fullcodeline": "if (!last_pic_droppable && last_pic_structure != PICT_FRAME) {"
    },
    {
        "line": 311,
        "fullcodeline": "for(i=0; i<FF_ARRAY_ELEMS(h->last_pocs); i++)"
    },
    {
        "line": 312,
        "fullcodeline": "h->last_pocs[i] = INT_MIN;"
    },
    {
        "line": 488,
        "fullcodeline": "h->luma_weight_flag[i]   = 0;"
    },
    {
        "line": 489,
        "fullcodeline": "h->chroma_weight_flag[i] = 0;"
    },
    {
        "line": 629,
        "fullcodeline": "if (h->short_ref[k]->f.buf[0]->buffer == buf) {"
    },
    {
        "line": 634,
        "fullcodeline": "if (h->long_ref[k] && h->long_ref[k]->f.buf[0]->buffer == buf) {"
    },
    {
        "line": 242,
        "fullcodeline": "unwrap_prev_frame_num += max_frame_num;"
    },
    {
        "line": 269,
        "fullcodeline": "ff_thread_report_progress(&h0->cur_pic_ptr->tf, INT_MAX,"
    },
    {
        "line": 273,
        "fullcodeline": "if (h0->cur_pic_ptr->frame_num != h->frame_num) {"
    },
    {
        "line": 336,
        "fullcodeline": "av_image_copy(h->short_ref[0]->f.data,"
    },
    {
        "line": 343,
        "fullcodeline": "h->short_ref[0]->poc = prev->poc + 2;"
    },
    {
        "line": 364,
        "fullcodeline": "if (h0->cur_pic_ptr->frame_num != h->frame_num) {"
    },
    {
        "line": 630,
        "fullcodeline": "id_list[i] = k;"
    },
    {
        "line": 635,
        "fullcodeline": "id_list[i] = h->short_ref_count + k;"
    },
    {
        "line": 270,
        "fullcodeline": "last_pic_structure == PICT_TOP_FIELD);"
    },
    {
        "line": 341,
        "fullcodeline": "h->mb_width  * 16,"
    },
    {
        "line": 342,
        "fullcodeline": "h->mb_height * 16);"
    },
    {
        "line": 365,
        "fullcodeline": "ff_thread_report_progress(&h0->cur_pic_ptr->tf, INT_MAX,"
    },
    {
        "line": 370,
        "fullcodeline": "h0->first_field = 1;"
    },
    {
        "line": 371,
        "fullcodeline": "h0->cur_pic_ptr = NULL;"
    },
    {
        "line": 278,
        "fullcodeline": "if (!last_pic_droppable && last_pic_structure != PICT_FRAME) {"
    },
    {
        "line": 366,
        "fullcodeline": "h0->picture_structure==PICT_BOTTOM_FIELD);"
    },
    {
        "line": 374,
        "fullcodeline": "h0->first_field = 0;"
    },
    {
        "line": 279,
        "fullcodeline": "ff_thread_report_progress(&h0->cur_pic_ptr->tf, INT_MAX,"
    },
    {
        "line": 284,
        "fullcodeline": "if (!((last_pic_structure   == PICT_TOP_FIELD &&"
    },
    {
        "line": 280,
        "fullcodeline": "last_pic_structure == PICT_TOP_FIELD);"
    },
    {
        "line": 288,
        "fullcodeline": "av_log(h->avctx, AV_LOG_ERROR,"
    },
    {
        "line": 291,
        "fullcodeline": "h->picture_structure = last_pic_structure;"
    },
    {
        "line": 292,
        "fullcodeline": "h->droppable         = last_pic_droppable;"
    },
    {
        "line": 286,
        "fullcodeline": "(last_pic_structure   == PICT_BOTTOM_FIELD &&"
    },
    {
        "line": 285,
        "fullcodeline": "h->picture_structure == PICT_BOTTOM_FIELD) ||"
    },
    {
        "line": 287,
        "fullcodeline": "h->picture_structure == PICT_TOP_FIELD))) {"
    },
    {
        "line": 294,
        "fullcodeline": "} else if (last_pic_droppable != h->droppable) {"
    },
    {
        "line": 295,
        "fullcodeline": "avpriv_request_sample(h->avctx,"
    },
    {
        "line": 297,
        "fullcodeline": "h->picture_structure = last_pic_structure;"
    },
    {
        "line": 298,
        "fullcodeline": "h->droppable         = last_pic_droppable;"
    }
]