[
    {
        "line": 3,
        "fullcodeline": "struct sd *sd = (struct sd *) gspca_dev;"
    },
    {
        "line": 8,
        "fullcodeline": "intf = usb_ifnum_to_if(sd->gspca_dev.dev, sd->gspca_dev.iface);"
    },
    {
        "line": 9,
        "fullcodeline": "alt = usb_altnum_to_altsetting(intf, sd->gspca_dev.alt);"
    },
    {
        "line": 18,
        "fullcodeline": "packet_size = le16_to_cpu(alt->endpoint[0].desc.wMaxPacketSize);"
    },
    {
        "line": 19,
        "fullcodeline": "err = stv06xx_write_bridge(sd, STV_ISO_SIZE_L, packet_size);"
    },
    {
        "line": 24,
        "fullcodeline": "err = sd->sensor->start(sd);"
    },
    {
        "line": 29,
        "fullcodeline": "err = stv06xx_write_bridge(sd, STV_ISO_ENABLE, 1);"
    },
    {
        "line": 10,
        "fullcodeline": "if (!alt) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 25,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 32,
        "fullcodeline": "if (err < 0)"
    },
    {
        "line": 37,
        "fullcodeline": "return (err < 0) ? err : 0;"
    },
    {
        "line": 11,
        "fullcodeline": "gspca_err(gspca_dev, \"Couldn't get altsetting\\n\");"
    },
    {
        "line": 12,
        "fullcodeline": "return -EIO;"
    },
    {
        "line": 16,
        "fullcodeline": "return -ENODEV;"
    }
]