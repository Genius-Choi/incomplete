[
    {
        "line": 3,
        "fullcodeline": "output->Clear();"
    },
    {
        "line": 4,
        "fullcodeline": "output->starts_.reserve(proto.extent_size());"
    },
    {
        "line": 5,
        "fullcodeline": "output->lengths_.reserve(proto.extent_size());"
    },
    {
        "line": 26,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 7,
        "fullcodeline": "int64_t l = GetExtentLength(e);"
    },
    {
        "line": 22,
        "fullcodeline": "output->starts_.push_back(e.start());"
    },
    {
        "line": 23,
        "fullcodeline": "output->lengths_.push_back(l);"
    },
    {
        "line": 8,
        "fullcodeline": "if (e.start() != 0 || l != kFullExtent) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (e.start() < 0 || l <= 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (static_cast<uint64_t>(e.start()) + static_cast<uint64_t>(e.length()) >"
    },
    {
        "line": 10,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 17,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 12,
        "fullcodeline": "e.start(), \", length = \", l, \": extent = \", e.ShortDebugString());"
    },
    {
        "line": 19,
        "fullcodeline": "e.ShortDebugString());"
    }
]