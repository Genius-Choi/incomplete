[
    {
        "line": 2,
        "fullcodeline": "const string path = io::JoinPath(testing::TmpDir(), \"checkpoint\");"
    },
    {
        "line": 21,
        "fullcodeline": "TensorSliceReader reader(path, OpenTableTensorSliceReader);"
    },
    {
        "line": 22,
        "fullcodeline": "EXPECT_TRUE(reader.status().code() == error::INVALID_ARGUMENT &&"
    },
    {
        "line": 7,
        "fullcodeline": "*sts.mutable_meta()->mutable_versions() = versions;"
    },
    {
        "line": 9,
        "fullcodeline": "EXPECT_TRUE(sts.SerializeToString(&contents));"
    },
    {
        "line": 13,
        "fullcodeline": "TF_ASSERT_OK(CreateTableTensorSliceBuilder(path, &builder));"
    },
    {
        "line": 14,
        "fullcodeline": "builder->Add(kSavedTensorSlicesKey, contents);"
    },
    {
        "line": 16,
        "fullcodeline": "TF_EXPECT_OK(builder->Finish(&file_size));"
    },
    {
        "line": 17,
        "fullcodeline": "delete builder;"
    },
    {
        "line": 25,
        "fullcodeline": "<< \"', got '\" << reader.status() << \"'\";"
    },
    {
        "line": 24,
        "fullcodeline": "<< \"Expected error starting with '\" << errors::InvalidArgument(error)"
    },
    {
        "line": 23,
        "fullcodeline": "absl::StartsWith(reader.status().error_message(), error))"
    }
]