[
    {
        "line": 2,
        "fullcodeline": "std::vector<string> items = str_util::Split(str, ':', str_util::SkipEmpty());"
    },
    {
        "line": 3,
        "fullcodeline": "slice->starts_.reserve(items.size());"
    },
    {
        "line": 4,
        "fullcodeline": "slice->lengths_.reserve(items.size());"
    },
    {
        "line": 31,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 27,
        "fullcodeline": "slice->starts_.push_back(s);"
    },
    {
        "line": 28,
        "fullcodeline": "slice->lengths_.push_back(l);"
    },
    {
        "line": 7,
        "fullcodeline": "if (x == \"-\") {"
    },
    {
        "line": 9,
        "fullcodeline": "s = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "l = kFullExtent;"
    },
    {
        "line": 12,
        "fullcodeline": "std::vector<string> sl = str_util::Split(x, ',', str_util::SkipEmpty());"
    },
    {
        "line": 13,
        "fullcodeline": "if (sl.size() != 2 || !strings::safe_strto64(sl[0], &s) ||"
    },
    {
        "line": 20,
        "fullcodeline": "if (s < 0 || l <= 0) {"
    },
    {
        "line": 14,
        "fullcodeline": "!strings::safe_strto64(sl[1], &l)) {"
    },
    {
        "line": 15,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 21,
        "fullcodeline": "return errors::InvalidArgument("
    }
]