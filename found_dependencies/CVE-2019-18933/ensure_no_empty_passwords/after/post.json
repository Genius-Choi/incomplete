[
    {
        "line": 40,
        "fullcodeline": "UserProfile = apps.get_model('zerver', 'UserProfile')"
    },
    {
        "line": 41,
        "fullcodeline": "RealmAuditLog = apps.get_model('zerver', 'RealmAuditLog')"
    },
    {
        "line": 50,
        "fullcodeline": "event_type_class = RealmAuditLog._meta.get_field('event_type').get_internal_type()"
    },
    {
        "line": 68,
        "fullcodeline": "password_change_user_ids = set(RealmAuditLog.objects.filter("
    },
    {
        "line": 70,
        "fullcodeline": "password_change_user_ids_api_key_reset_needed = set()  # type: Set[int]"
    },
    {
        "line": 71,
        "fullcodeline": "password_change_user_ids_no_reset_needed = set()  # type: Set[int]"
    },
    {
        "line": 120,
        "fullcodeline": "AFFECTED_USER_TYPE_EMPTY_PASSWORD = 'empty_password'"
    },
    {
        "line": 121,
        "fullcodeline": "AFFECTED_USER_TYPE_CHANGED_PASSWORD = 'changed_password'"
    },
    {
        "line": 122,
        "fullcodeline": "MIGRATION_ID = '0209_user_profile_no_empty_password'"
    },
    {
        "line": 124,
        "fullcodeline": "def write_realm_audit_log_entry(user_profile: Any,"
    },
    {
        "line": 141,
        "fullcodeline": "email_auth_enabled = any(isinstance(backend, EmailAuthBackend)"
    },
    {
        "line": 51,
        "fullcodeline": "if event_type_class == 'CharField':"
    },
    {
        "line": 73,
        "fullcodeline": "for user_id in password_change_user_ids:"
    },
    {
        "line": 106,
        "fullcodeline": "if password_change_user_ids_no_reset_needed and settings.PRODUCTION:"
    },
    {
        "line": 152,
        "fullcodeline": "for user_profile in UserProfile.objects.all():"
    },
    {
        "line": 52,
        "fullcodeline": "USER_PASSWORD_CHANGED = 'user_password_changed'  # type: Union[int, str]"
    },
    {
        "line": 53,
        "fullcodeline": "USER_API_KEY_CHANGED = 'user_api_key_changed'  # type: Union[int, str]"
    },
    {
        "line": 55,
        "fullcodeline": "USER_PASSWORD_CHANGED = 122"
    },
    {
        "line": 56,
        "fullcodeline": "USER_API_KEY_CHANGED = 127"
    },
    {
        "line": 78,
        "fullcodeline": "query = RealmAuditLog.objects.filter("
    },
    {
        "line": 83,
        "fullcodeline": "earliest_password_change = query.filter(event_type=USER_PASSWORD_CHANGED).first()"
    },
    {
        "line": 85,
        "fullcodeline": "assert earliest_password_change is not None"
    },
    {
        "line": 87,
        "fullcodeline": "latest_api_key_change = query.filter(event_type=USER_API_KEY_CHANGED).last()"
    },
    {
        "line": 116,
        "fullcodeline": "with open(\"/var/log/zulip/0209_password_migration.log\", \"w\") as log_file:"
    },
    {
        "line": 153,
        "fullcodeline": "event_time = timezone_now()"
    },
    {
        "line": 88,
        "fullcodeline": "if latest_api_key_change is None:"
    },
    {
        "line": 154,
        "fullcodeline": "if check_password('', user_profile.password):"
    },
    {
        "line": 96,
        "fullcodeline": "password_change_user_ids_api_key_reset_needed.add(user_id)"
    },
    {
        "line": 117,
        "fullcodeline": "line = \"No reset needed, but changed password: {}\\n\""
    },
    {
        "line": 118,
        "fullcodeline": "log_file.write(line.format(password_change_user_ids_no_reset_needed))"
    },
    {
        "line": 158,
        "fullcodeline": "user_profile.password = make_password(None)"
    },
    {
        "line": 159,
        "fullcodeline": "update_fields = [\"password\"]"
    },
    {
        "line": 160,
        "fullcodeline": "write_realm_audit_log_entry(user_profile, event_time,"
    },
    {
        "line": 176,
        "fullcodeline": "user_profile.save(update_fields=update_fields)"
    },
    {
        "line": 97,
        "fullcodeline": "elif earliest_password_change.event_time <= latest_api_key_change.event_time:"
    },
    {
        "line": 164,
        "fullcodeline": "if email_auth_enabled and not user_profile.is_bot:"
    },
    {
        "line": 179,
        "fullcodeline": "elif email_auth_enabled and \\"
    },
    {
        "line": 102,
        "fullcodeline": "password_change_user_ids_no_reset_needed.add(user_id)"
    },
    {
        "line": 104,
        "fullcodeline": "password_change_user_ids_api_key_reset_needed.add(user_id)"
    },
    {
        "line": 168,
        "fullcodeline": "reset_user_api_key(user_profile)"
    },
    {
        "line": 169,
        "fullcodeline": "update_fields.append(\"api_key\")"
    },
    {
        "line": 171,
        "fullcodeline": "event_time = timezone_now()"
    },
    {
        "line": 172,
        "fullcodeline": "write_realm_audit_log_entry(user_profile, event_time,"
    },
    {
        "line": 180,
        "fullcodeline": "user_profile.id in password_change_user_ids_api_key_reset_needed:"
    },
    {
        "line": 182,
        "fullcodeline": "reset_user_api_key(user_profile)"
    },
    {
        "line": 183,
        "fullcodeline": "user_profile.save(update_fields=[\"api_key\"])"
    },
    {
        "line": 185,
        "fullcodeline": "write_realm_audit_log_entry(user_profile, event_time,"
    },
    {
        "line": 79,
        "fullcodeline": "modified_user=user_id, event_type__in=[USER_PASSWORD_CHANGED,"
    }
]