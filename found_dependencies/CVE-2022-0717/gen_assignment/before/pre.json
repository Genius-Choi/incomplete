[
    {
        "line": 4,
        "fullcodeline": "int type = nint(tree->car);"
    },
    {
        "line": 37,
        "fullcodeline": "tree = tree->cdr;"
    },
    {
        "line": 29,
        "fullcodeline": "codegen_error(s, \"Can't assign to numbered parameter\");"
    },
    {
        "line": 33,
        "fullcodeline": "codegen_error(s, \"unknown lhs\");"
    },
    {
        "line": 40,
        "fullcodeline": "gen_setxv(s, OP_SETGV, sp, nsym(tree), val);"
    },
    {
        "line": 44,
        "fullcodeline": "idx = lv_idx(s, nsym(tree));"
    },
    {
        "line": 56,
        "fullcodeline": "gen_setxv(s, OP_SETIV, sp, nsym(tree), val);"
    },
    {
        "line": 59,
        "fullcodeline": "gen_setxv(s, OP_SETCV, sp, nsym(tree), val);"
    },
    {
        "line": 62,
        "fullcodeline": "gen_setxv(s, OP_SETCONST, sp, nsym(tree), val);"
    },
    {
        "line": 68,
        "fullcodeline": "sp = cursp();"
    },
    {
        "line": 70,
        "fullcodeline": "codegen(s, tree->car, VAL);"
    },
    {
        "line": 75,
        "fullcodeline": "pop_n(2);"
    },
    {
        "line": 76,
        "fullcodeline": "idx = new_sym(s, nsym(tree->cdr));"
    },
    {
        "line": 77,
        "fullcodeline": "genop_2(s, OP_SETMCNST, sp, idx);"
    },
    {
        "line": 162,
        "fullcodeline": "gen_vmassignment(s, tree->car, sp, val);"
    },
    {
        "line": 170,
        "fullcodeline": "codegen_error(s, \"unknown lhs\");"
    },
    {
        "line": 173,
        "fullcodeline": "if (val) push();"
    },
    {
        "line": 45,
        "fullcodeline": "if (idx > 0) {"
    },
    {
        "line": 83,
        "fullcodeline": "int noself = 0, safe = (type == NODE_SCALL), skip = 0, top, call, n = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "mrb_sym mid = nsym(tree->cdr->car);"
    },
    {
        "line": 86,
        "fullcodeline": "top = cursp();"
    },
    {
        "line": 90,
        "fullcodeline": "call = cursp();"
    },
    {
        "line": 103,
        "fullcodeline": "tree = tree->cdr->cdr->car;"
    },
    {
        "line": 147,
        "fullcodeline": "s->sp = call;"
    },
    {
        "line": 157,
        "fullcodeline": "s->sp = top;"
    },
    {
        "line": 16,
        "fullcodeline": "codegen(s, rhs, VAL);"
    },
    {
        "line": 17,
        "fullcodeline": "pop();"
    },
    {
        "line": 18,
        "fullcodeline": "sp = cursp();"
    },
    {
        "line": 66,
        "fullcodeline": "gen_move(s, cursp(), sp, 0);"
    },
    {
        "line": 72,
        "fullcodeline": "codegen(s, rhs, VAL); pop();"
    },
    {
        "line": 73,
        "fullcodeline": "gen_move(s, sp, cursp(), 0);"
    },
    {
        "line": 87,
        "fullcodeline": "if (val || sp == cursp()) {"
    },
    {
        "line": 91,
        "fullcodeline": "if (!tree->car) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (n < 14) {"
    },
    {
        "line": 148,
        "fullcodeline": "if (mid == MRB_OPSYM_2(s->mrb, aref) && n == 2) {"
    },
    {
        "line": 46,
        "fullcodeline": "if (idx != sp) {"
    },
    {
        "line": 52,
        "fullcodeline": "gen_setupvar(s, sp, nsym(tree));"
    },
    {
        "line": 92,
        "fullcodeline": "noself = 1;"
    },
    {
        "line": 99,
        "fullcodeline": "int recv = cursp()-1;"
    },
    {
        "line": 100,
        "fullcodeline": "gen_move(s, cursp(), recv, 1);"
    },
    {
        "line": 101,
        "fullcodeline": "skip = genjmp2_0(s, OP_JMPNIL, cursp(), val);"
    },
    {
        "line": 131,
        "fullcodeline": "codegen(s, rhs, VAL);"
    },
    {
        "line": 132,
        "fullcodeline": "pop();"
    },
    {
        "line": 138,
        "fullcodeline": "gen_move(s, top, cursp(), 1);"
    },
    {
        "line": 141,
        "fullcodeline": "n++;"
    },
    {
        "line": 149,
        "fullcodeline": "genop_1(s, OP_SETIDX, cursp());"
    },
    {
        "line": 155,
        "fullcodeline": "dispatch(s, skip);"
    },
    {
        "line": 47,
        "fullcodeline": "gen_move(s, idx, sp, val);"
    },
    {
        "line": 96,
        "fullcodeline": "codegen(s, tree->car, VAL); /* receiver */"
    },
    {
        "line": 135,
        "fullcodeline": "gen_move(s, cursp(), sp, 0);"
    },
    {
        "line": 144,
        "fullcodeline": "pop();"
    },
    {
        "line": 145,
        "fullcodeline": "genop_2(s, OP_ARYPUSH, cursp(), 1);"
    },
    {
        "line": 152,
        "fullcodeline": "genop_3(s, noself ? OP_SSEND : OP_SEND, cursp(), new_sym(s, attrsym(s, mid)), n);"
    },
    {
        "line": 106,
        "fullcodeline": "n = gen_values(s, tree->car, VAL, (tree->cdr->car)?13:14);"
    },
    {
        "line": 119,
        "fullcodeline": "gen_hash(s, tree->cdr->car->cdr, VAL, 0);"
    },
    {
        "line": 107,
        "fullcodeline": "if (n < 0) {              /* variable length */"
    },
    {
        "line": 113,
        "fullcodeline": "if (n == 14) {"
    },
    {
        "line": 120,
        "fullcodeline": "if (n < 14) {"
    },
    {
        "line": 108,
        "fullcodeline": "n = 15;"
    },
    {
        "line": 114,
        "fullcodeline": "pop_n(n);"
    },
    {
        "line": 115,
        "fullcodeline": "genop_2(s, OP_ARRAY, cursp(), n);"
    },
    {
        "line": 117,
        "fullcodeline": "n = 15;"
    },
    {
        "line": 121,
        "fullcodeline": "n++;"
    },
    {
        "line": 124,
        "fullcodeline": "pop_n(2);"
    },
    {
        "line": 125,
        "fullcodeline": "genop_2(s, OP_ARYPUSH, cursp(), 1);"
    }
]