[
    {
        "line": 3,
        "fullcodeline": "if(tag->header()->majorVersion() < 4 &&"
    },
    {
        "line": 5,
        "fullcodeline": "tag->frameList(\"TDAT\").size() == 1)"
    },
    {
        "line": 7,
        "fullcodeline": "TextIdentificationFrame *tdrc ="
    },
    {
        "line": 9,
        "fullcodeline": "UnknownFrame *tdat = static_cast<UnknownFrame *>(tag->frameList(\"TDAT\").front());"
    },
    {
        "line": 4,
        "fullcodeline": "tag->frameList(\"TDRC\").size() == 1 &&"
    },
    {
        "line": 8,
        "fullcodeline": "dynamic_cast<TextIdentificationFrame *>(tag->frameList(\"TDRC\").front());"
    },
    {
        "line": 11,
        "fullcodeline": "if(tdrc &&"
    },
    {
        "line": 14,
        "fullcodeline": "tdat->data().size() >= 5)"
    },
    {
        "line": 16,
        "fullcodeline": "String date(tdat->data().mid(1), String::Type(tdat->data()[0]));"
    },
    {
        "line": 13,
        "fullcodeline": "tdrc->fieldList().front().size() == 4 &&"
    },
    {
        "line": 17,
        "fullcodeline": "if(date.length() == 4) {"
    },
    {
        "line": 12,
        "fullcodeline": "tdrc->fieldList().size() == 1 &&"
    },
    {
        "line": 18,
        "fullcodeline": "tdrc->setText(tdrc->toString() + '-' + date.substr(2, 2) + '-' + date.substr(0, 2));"
    },
    {
        "line": 19,
        "fullcodeline": "if(tag->frameList(\"TIME\").size() == 1) {"
    },
    {
        "line": 20,
        "fullcodeline": "UnknownFrame *timeframe = static_cast<UnknownFrame *>(tag->frameList(\"TIME\").front());"
    },
    {
        "line": 21,
        "fullcodeline": "if(timeframe->data().size() >= 5) {"
    },
    {
        "line": 22,
        "fullcodeline": "String time(timeframe->data().mid(1), String::Type(timeframe->data()[0]));"
    },
    {
        "line": 23,
        "fullcodeline": "if(time.length() == 4) {"
    },
    {
        "line": 24,
        "fullcodeline": "tdrc->setText(tdrc->toString() + 'T' + time.substr(0, 2) + ':' + time.substr(2, 2));"
    }
]