[
    {
        "line": 15,
        "fullcodeline": "discussion_id = vs_code_data.discussion_id"
    },
    {
        "line": 16,
        "fullcodeline": "message_id = vs_code_data.message_id"
    },
    {
        "line": 17,
        "fullcodeline": "code = vs_code_data.code"
    },
    {
        "line": 21,
        "fullcodeline": "root_folder = Path(os.path.realpath(lollmsElfServer.lollms_paths.personal_outputs_path/\"discussions\"/f\"d_{discussion_id}\"/f\"{message_id}.py\"))"
    },
    {
        "line": 22,
        "fullcodeline": "root_folder.mkdir(parents=True,exist_ok=True)"
    },
    {
        "line": 23,
        "fullcodeline": "tmp_file = root_folder/f\"ai_code_{message_id}.py\""
    },
    {
        "line": 24,
        "fullcodeline": "with open(tmp_file,\"w\") as f:"
    },
    {
        "line": 28,
        "fullcodeline": "subprocess.Popen([\"code\", str(root_folder)])"
    },
    {
        "line": 9,
        "fullcodeline": "return {\"status\":False,\"error\":\"Open code in vs code is blocked when in headless mode for obvious security reasons!\"}"
    },
    {
        "line": 12,
        "fullcodeline": "return {\"status\":False,\"error\":\"Open code in vs code is blocked when the server is exposed outside for very obvious reasons!\"}"
    },
    {
        "line": 30,
        "fullcodeline": "return {\"status\": True, \"execution_time\": 0}"
    },
    {
        "line": 32,
        "fullcodeline": "trace_exception(ex)"
    },
    {
        "line": 33,
        "fullcodeline": "lollmsElfServer.error(ex)"
    },
    {
        "line": 34,
        "fullcodeline": "return {\"status\":False,\"error\":str(ex)}"
    }
]