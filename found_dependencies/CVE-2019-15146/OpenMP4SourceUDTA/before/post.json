[
    {
        "line": 6,
        "fullcodeline": "memset(mp4, 0, sizeof(mp4object));"
    },
    {
        "line": 11,
        "fullcodeline": "mp4->mediafp = fopen(filename, \"rb\");"
    },
    {
        "line": 4,
        "fullcodeline": "if (mp4 == NULL) return 0;"
    },
    {
        "line": 91,
        "fullcodeline": "return (size_t)mp4;"
    },
    {
        "line": 17,
        "fullcodeline": "int32_t nest = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "uint64_t nestsize[MAX_NEST_LEVEL] = { 0 };"
    },
    {
        "line": 19,
        "fullcodeline": "uint64_t lastsize = 0, qtsize;"
    },
    {
        "line": 89,
        "fullcodeline": "} while (len > 0);"
    },
    {
        "line": 23,
        "fullcodeline": "len = fread(&qtsize32, 1, 4, mp4->mediafp);"
    },
    {
        "line": 24,
        "fullcodeline": "len += fread(&qttag, 1, 4, mp4->mediafp);"
    },
    {
        "line": 25,
        "fullcodeline": "if (len == 8)"
    },
    {
        "line": 35,
        "fullcodeline": "qtsize32 = BYTESWAP32(qtsize32);"
    },
    {
        "line": 45,
        "fullcodeline": "nest++;"
    },
    {
        "line": 50,
        "fullcodeline": "nestsize[nest] = qtsize;"
    },
    {
        "line": 51,
        "fullcodeline": "lastsize = qtsize;"
    },
    {
        "line": 27,
        "fullcodeline": "if (!GPMF_VALID_FOURCC(qttag))"
    },
    {
        "line": 37,
        "fullcodeline": "if (qtsize32 == 1) // 64-bit Atom"
    },
    {
        "line": 47,
        "fullcodeline": "if (qtsize < 8) break;"
    },
    {
        "line": 48,
        "fullcodeline": "if (nest >= MAX_NEST_LEVEL) break;"
    },
    {
        "line": 53,
        "fullcodeline": "if (qttag == MAKEID('m', 'd', 'a', 't') ||"
    },
    {
        "line": 61,
        "fullcodeline": "if (qttag == MAKEID('G', 'P', 'M', 'F'))"
    },
    {
        "line": 77,
        "fullcodeline": "if (qttag != MAKEID('m', 'o', 'o', 'v') && //skip over all but these atoms"
    },
    {
        "line": 29,
        "fullcodeline": "LONGSEEK(mp4->mediafp, lastsize - 8 - 8, SEEK_CUR);"
    },
    {
        "line": 31,
        "fullcodeline": "NESTSIZE(lastsize - 8);"
    },
    {
        "line": 39,
        "fullcodeline": "fread(&qtsize, 1, 8, mp4->mediafp);"
    },
    {
        "line": 40,
        "fullcodeline": "qtsize = BYTESWAP64(qtsize) - 8;"
    },
    {
        "line": 54,
        "fullcodeline": "qttag == MAKEID('f', 't', 'y', 'p'))"
    },
    {
        "line": 56,
        "fullcodeline": "LONGSEEK(mp4->mediafp, qtsize - 8, SEEK_CUR);"
    },
    {
        "line": 57,
        "fullcodeline": "NESTSIZE(qtsize);"
    },
    {
        "line": 63,
        "fullcodeline": "mp4->videolength += 1.0;"
    },
    {
        "line": 64,
        "fullcodeline": "mp4->metadatalength += 1.0;"
    },
    {
        "line": 66,
        "fullcodeline": "mp4->indexcount = (int)mp4->metadatalength;"
    },
    {
        "line": 68,
        "fullcodeline": "mp4->metasizes = (uint32_t *)malloc(mp4->indexcount * 4 + 4);  memset(mp4->metasizes, 0, mp4->indexcount * 4 + 4);"
    },
    {
        "line": 69,
        "fullcodeline": "mp4->metaoffsets = (uint64_t *)malloc(mp4->indexcount * 8 + 8);  memset(mp4->metaoffsets, 0, mp4->indexcount * 8 + 8);"
    },
    {
        "line": 71,
        "fullcodeline": "mp4->metasizes[0] = (int)qtsize - 8;"
    },
    {
        "line": 72,
        "fullcodeline": "mp4->metaoffsets[0] = ftell(mp4->mediafp);"
    },
    {
        "line": 73,
        "fullcodeline": "mp4->metasize_count = 1;"
    },
    {
        "line": 78,
        "fullcodeline": "qttag != MAKEID('u', 'd', 't', 'a'))"
    },
    {
        "line": 80,
        "fullcodeline": "LONGSEEK(mp4->mediafp, qtsize - 8, SEEK_CUR);"
    },
    {
        "line": 81,
        "fullcodeline": "NESTSIZE(qtsize);"
    },
    {
        "line": 43,
        "fullcodeline": "qtsize = qtsize32;"
    },
    {
        "line": 75,
        "fullcodeline": "return (size_t)mp4;  // not an MP4, RAW GPMF which has not inherent timing, assigning a during of 1second."
    },
    {
        "line": 86,
        "fullcodeline": "NESTSIZE(8);"
    }
]