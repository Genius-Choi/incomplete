[
    {
        "line": 11,
        "fullcodeline": "pair->subnodes = rt2->subnodes;"
    },
    {
        "line": 12,
        "fullcodeline": "pair->key = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "tmplist = comps_hslist_create();"
    },
    {
        "line": 15,
        "fullcodeline": "comps_hslist_init(tmplist, NULL, NULL, &free);"
    },
    {
        "line": 16,
        "fullcodeline": "comps_hslist_append(tmplist, pair, 0);"
    },
    {
        "line": 73,
        "fullcodeline": "comps_hslist_destroy(&tmplist);"
    },
    {
        "line": 18,
        "fullcodeline": "while (tmplist->first != NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "it = tmplist->first;"
    },
    {
        "line": 20,
        "fullcodeline": "comps_hslist_remove(tmplist, tmplist->first);"
    },
    {
        "line": 22,
        "fullcodeline": "parent_pair = (struct Pair*) it->data;"
    },
    {
        "line": 23,
        "fullcodeline": "free(it);"
    },
    {
        "line": 25,
        "fullcodeline": "pair->added = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "free(parent_pair->key);"
    },
    {
        "line": 71,
        "fullcodeline": "free(parent_pair);"
    },
    {
        "line": 26,
        "fullcodeline": "for (it = tmp_subnodes->first; it != NULL; it=it->next) {"
    },
    {
        "line": 21,
        "fullcodeline": "tmp_subnodes = ((struct Pair*)it->data)->subnodes;"
    },
    {
        "line": 30,
        "fullcodeline": "if (parent_pair->key != NULL) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (((COMPS_MRTreeData*)it->data)->data->first != NULL) {"
    },
    {
        "line": 28,
        "fullcodeline": "pair->subnodes = ((COMPS_MRTreeData*)it->data)->subnodes;"
    },
    {
        "line": 31,
        "fullcodeline": "pair->key ="
    },
    {
        "line": 35,
        "fullcodeline": "memcpy(pair->key, parent_pair->key,"
    },
    {
        "line": 37,
        "fullcodeline": "memcpy(pair->key+strlen(parent_pair->key),"
    },
    {
        "line": 32,
        "fullcodeline": "malloc(sizeof(char)"
    },
    {
        "line": 36,
        "fullcodeline": "sizeof(char) * strlen(parent_pair->key));"
    },
    {
        "line": 39,
        "fullcodeline": "sizeof(char)*(strlen(((COMPS_MRTreeData*)it->data)->key)+1));"
    },
    {
        "line": 41,
        "fullcodeline": "pair->key = malloc(sizeof(char)*"
    },
    {
        "line": 44,
        "fullcodeline": "memcpy(pair->key, ((COMPS_MRTreeData*)it->data)->key,"
    },
    {
        "line": 50,
        "fullcodeline": "it2 != NULL; it2 = it2->next) {"
    },
    {
        "line": 38,
        "fullcodeline": "((COMPS_MRTreeData*)it->data)->key,"
    },
    {
        "line": 45,
        "fullcodeline": "sizeof(char)*(strlen(((COMPS_MRTreeData*)it->data)->key)+1));"
    },
    {
        "line": 49,
        "fullcodeline": "for (it2 = ((COMPS_MRTreeData*)it->data)->data->first;"
    },
    {
        "line": 51,
        "fullcodeline": "comps_mrtree_set(rt1, pair->key, it2->data);"
    },
    {
        "line": 55,
        "fullcodeline": "comps_hslist_append(tmplist, pair, 0);"
    },
    {
        "line": 33,
        "fullcodeline": "* (strlen(((COMPS_MRTreeData*)it->data)->key)"
    },
    {
        "line": 54,
        "fullcodeline": "if (((COMPS_MRTreeData*)it->data)->subnodes->first) {"
    },
    {
        "line": 57,
        "fullcodeline": "free(pair->key);"
    },
    {
        "line": 58,
        "fullcodeline": "free(pair);"
    },
    {
        "line": 63,
        "fullcodeline": "comps_hslist_append(tmplist, pair, 0);"
    },
    {
        "line": 42,
        "fullcodeline": "(strlen(((COMPS_MRTreeData*)it->data)->key) +"
    },
    {
        "line": 62,
        "fullcodeline": "if (((COMPS_MRTreeData*)it->data)->subnodes->first) {"
    },
    {
        "line": 65,
        "fullcodeline": "free(pair->key);"
    },
    {
        "line": 66,
        "fullcodeline": "free(pair);"
    },
    {
        "line": 34,
        "fullcodeline": "+ strlen(parent_pair->key) + 1));"
    }
]