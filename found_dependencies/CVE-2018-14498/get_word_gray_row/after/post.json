[
    {
        "line": 4,
        "fullcodeline": "ppm_source_ptr source = (ppm_source_ptr)sinfo;"
    },
    {
        "line": 7,
        "fullcodeline": "register JSAMPLE *rescale = source->rescale;"
    },
    {
        "line": 9,
        "fullcodeline": "unsigned int maxval = source->maxval;"
    },
    {
        "line": 14,
        "fullcodeline": "bufferptr = source->iobuffer;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))"
    },
    {
        "line": 15,
        "fullcodeline": "for (col = cinfo->image_width; col > 0; col--) {"
    },
    {
        "line": 12,
        "fullcodeline": "ERREXIT(cinfo, JERR_INPUT_EOF);"
    },
    {
        "line": 17,
        "fullcodeline": "temp  = UCH(*bufferptr++) << 8;"
    },
    {
        "line": 18,
        "fullcodeline": "temp |= UCH(*bufferptr++);"
    },
    {
        "line": 21,
        "fullcodeline": "*ptr++ = rescale[temp];"
    },
    {
        "line": 19,
        "fullcodeline": "if (temp > maxval)"
    },
    {
        "line": 20,
        "fullcodeline": "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);"
    }
]