[
    {
        "line": 7,
        "fullcodeline": "physical_mask &= ~sme_me_mask;"
    },
    {
        "line": 10,
        "fullcodeline": "mapping_info.alloc_pgt_page = alloc_pgt_page;"
    },
    {
        "line": 11,
        "fullcodeline": "mapping_info.context = &pgt_data;"
    },
    {
        "line": 12,
        "fullcodeline": "mapping_info.page_flag = __PAGE_KERNEL_LARGE_EXEC | sme_me_mask;"
    },
    {
        "line": 13,
        "fullcodeline": "mapping_info.kernpg_flag = _KERNPG_TABLE;"
    },
    {
        "line": 20,
        "fullcodeline": "pgt_data.pgt_buf_offset = 0;"
    },
    {
        "line": 33,
        "fullcodeline": "top_level_pgt = read_cr3_pa();"
    },
    {
        "line": 52,
        "fullcodeline": "kernel_add_identity_map((unsigned long)_head, (unsigned long)_end);"
    },
    {
        "line": 53,
        "fullcodeline": "boot_params = rmode;"
    },
    {
        "line": 54,
        "fullcodeline": "kernel_add_identity_map((unsigned long)boot_params, (unsigned long)(boot_params + 1));"
    },
    {
        "line": 55,
        "fullcodeline": "cmdline = get_cmd_line_ptr();"
    },
    {
        "line": 56,
        "fullcodeline": "kernel_add_identity_map(cmdline, cmdline + COMMAND_LINE_SIZE);"
    },
    {
        "line": 70,
        "fullcodeline": "sev_prep_identity_maps(top_level_pgt);"
    },
    {
        "line": 73,
        "fullcodeline": "write_cr3(top_level_pgt);"
    },
    {
        "line": 34,
        "fullcodeline": "if (p4d_offset((pgd_t *)top_level_pgt, 0) == (p4d_t *)_pgtable) {"
    },
    {
        "line": 35,
        "fullcodeline": "pgt_data.pgt_buf = _pgtable + BOOT_INIT_PGT_SIZE;"
    },
    {
        "line": 36,
        "fullcodeline": "pgt_data.pgt_buf_size = BOOT_PGT_SIZE - BOOT_INIT_PGT_SIZE;"
    },
    {
        "line": 37,
        "fullcodeline": "memset(pgt_data.pgt_buf, 0, pgt_data.pgt_buf_size);"
    },
    {
        "line": 64,
        "fullcodeline": "unsigned long sd_addr = (unsigned long)sd;"
    },
    {
        "line": 66,
        "fullcodeline": "kernel_add_identity_map(sd_addr, sd_addr + sizeof(*sd) + sd->len);"
    },
    {
        "line": 39,
        "fullcodeline": "pgt_data.pgt_buf = _pgtable;"
    },
    {
        "line": 40,
        "fullcodeline": "pgt_data.pgt_buf_size = BOOT_PGT_SIZE;"
    },
    {
        "line": 41,
        "fullcodeline": "memset(pgt_data.pgt_buf, 0, pgt_data.pgt_buf_size);"
    },
    {
        "line": 42,
        "fullcodeline": "top_level_pgt = (unsigned long)alloc_pgt_page(&pgt_data);"
    }
]