[
    {
        "line": 4,
        "fullcodeline": "Jsi_RC rc = JSI_OK;"
    },
    {
        "line": 9,
        "fullcodeline": "obj = _this->d.obj;"
    },
    {
        "line": 11,
        "fullcodeline": "argc = Jsi_ValueGetLength(interp, args);"
    },
    {
        "line": 12,
        "fullcodeline": "curlen = Jsi_ObjGetLength(interp, obj);"
    },
    {
        "line": 16,
        "fullcodeline": "Jsi_ObjListifyArray(interp, obj);"
    },
    {
        "line": 18,
        "fullcodeline": "nobj = Jsi_ObjNewType(interp, JSI_OT_ARRAY);"
    },
    {
        "line": 19,
        "fullcodeline": "nsiz = obj->arrMaxSize;"
    },
    {
        "line": 34,
        "fullcodeline": "m = i;"
    },
    {
        "line": 62,
        "fullcodeline": "Jsi_ObjSetLength(interp, nobj, curlen);"
    },
    {
        "line": 63,
        "fullcodeline": "Jsi_ValueMakeArrayObject(interp, ret, nobj);"
    },
    {
        "line": 67,
        "fullcodeline": "Jsi_ValueMakeNull(interp, ret);"
    },
    {
        "line": 2,
        "fullcodeline": "if (_this->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, _this->d.obj))"
    },
    {
        "line": 13,
        "fullcodeline": "if (curlen < 0) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (nsiz<=0) nsiz = 100;"
    },
    {
        "line": 21,
        "fullcodeline": "if (Jsi_ObjArraySizer(interp, nobj, nsiz+1) <= 0) {"
    },
    {
        "line": 28,
        "fullcodeline": "for (i = 0; i<curlen; i++)"
    },
    {
        "line": 35,
        "fullcodeline": "for (i = 0; i < argc; i++) {"
    },
    {
        "line": 14,
        "fullcodeline": "Jsi_ObjSetLength(interp, obj, 0);"
    },
    {
        "line": 22,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 23,
        "fullcodeline": "Jsi_LogError(\"index too large: %d\", nsiz+1);"
    },
    {
        "line": 31,
        "fullcodeline": "nobj->arr[i] = NULL;"
    },
    {
        "line": 32,
        "fullcodeline": "Jsi_ValueDup2(interp, nobj->arr+i, obj->arr[i]);"
    },
    {
        "line": 36,
        "fullcodeline": "va = Jsi_ValueArrayIndex(interp, args, i);"
    },
    {
        "line": 3,
        "fullcodeline": "return Jsi_LogError(\"expected array object\");"
    },
    {
        "line": 30,
        "fullcodeline": "if (!obj->arr[i]) continue;"
    },
    {
        "line": 37,
        "fullcodeline": "if (va->vt == JSI_VT_OBJECT && Jsi_ObjIsArray(interp, va->d.obj)) {"
    },
    {
        "line": 38,
        "fullcodeline": "int margc = Jsi_ValueGetLength(interp, va);"
    },
    {
        "line": 40,
        "fullcodeline": "Jsi_ObjListifyArray(interp, mobj);"
    },
    {
        "line": 41,
        "fullcodeline": "if (Jsi_ObjArraySizer(interp, nobj, curlen += margc) <= 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "for (j = 0; j<margc; j++, m++)"
    },
    {
        "line": 58,
        "fullcodeline": "nobj->arr[m] = NULL;"
    },
    {
        "line": 59,
        "fullcodeline": "Jsi_ValueDup2(interp, nobj->arr+m++, va);"
    },
    {
        "line": 42,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 43,
        "fullcodeline": "Jsi_LogError(\"index too large: %d\", curlen);"
    },
    {
        "line": 49,
        "fullcodeline": "nobj->arr[m] = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "Jsi_ValueDup2(interp, nobj->arr+m, mobj->arr[j]);"
    },
    {
        "line": 53,
        "fullcodeline": "if (Jsi_ObjArraySizer(interp, nobj, ++curlen) <= 0) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (!mobj->arr[j]) continue;"
    },
    {
        "line": 54,
        "fullcodeline": "rc = JSI_ERROR;"
    },
    {
        "line": 55,
        "fullcodeline": "Jsi_LogError(\"index too large: %d\", curlen);"
    }
]