[
    {
        "line": 6,
        "fullcodeline": "const char *jstr = \"\";"
    },
    {
        "line": 8,
        "fullcodeline": "Jsi_DString dStr = {};"
    },
    {
        "line": 10,
        "fullcodeline": "curlen = Jsi_ObjGetLength(interp, _this->d.obj);"
    },
    {
        "line": 39,
        "fullcodeline": "Jsi_ValueMakeStringDup(interp, ret, Jsi_DSValue(&dStr));"
    },
    {
        "line": 40,
        "fullcodeline": "Jsi_DSFree(&dStr);"
    },
    {
        "line": 43,
        "fullcodeline": "Jsi_ValueMakeStringDup(interp, ret, \"\");"
    },
    {
        "line": 4,
        "fullcodeline": "if (_this->vt != JSI_VT_OBJECT || !Jsi_ObjIsArray(interp, _this->d.obj))"
    },
    {
        "line": 11,
        "fullcodeline": "if (curlen == 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (Jsi_ValueGetLength(interp, args) >= 1) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (0 == (argc=Jsi_ObjGetLength(interp, _this->d.obj))) {"
    },
    {
        "line": 25,
        "fullcodeline": "for (i = 0; i < argc; ++i) {"
    },
    {
        "line": 16,
        "fullcodeline": "Jsi_Value *sc = Jsi_ValueArrayIndex(interp, args, 0);"
    },
    {
        "line": 27,
        "fullcodeline": "Jsi_Value *ov = Jsi_ValueArrayIndex(interp, _this, i);"
    },
    {
        "line": 36,
        "fullcodeline": "Jsi_DSAppend(&dStr, cp, NULL);"
    },
    {
        "line": 5,
        "fullcodeline": "return Jsi_LogError(\"expected array object\");"
    },
    {
        "line": 17,
        "fullcodeline": "if (sc != NULL)"
    },
    {
        "line": 28,
        "fullcodeline": "if (!ov) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (i && jstr[0])"
    },
    {
        "line": 18,
        "fullcodeline": "jstr = Jsi_ValueToString(interp, sc, NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "Jsi_DSAppend(&dStr, jstr, NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "cp = Jsi_ValueToString(interp, ov, NULL);"
    }
]