[
    {
        "line": 11,
        "fullcodeline": "ClientBasic *client = ClientBasic::getCurrent();"
    },
    {
        "line": 12,
        "fullcodeline": "AuthorizationSession* authorizationSession = client->getAuthorizationSession();"
    },
    {
        "line": 13,
        "fullcodeline": "std::string subjectName = client->port()->getX509SubjectName();"
    },
    {
        "line": 2,
        "fullcodeline": "if (!getSSLManager()) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (user.getUser() != subjectName) {"
    },
    {
        "line": 6,
        "fullcodeline": "if(user.getDB() != \"$external\") {"
    },
    {
        "line": 3,
        "fullcodeline": "return Status(ErrorCodes::ProtocolError,"
    },
    {
        "line": 7,
        "fullcodeline": "return Status(ErrorCodes::ProtocolError,"
    },
    {
        "line": 16,
        "fullcodeline": "return Status(ErrorCodes::AuthenticationFailed,"
    },
    {
        "line": 20,
        "fullcodeline": "std::string srvSubjectName = getSSLManager()->getServerSubjectName();"
    },
    {
        "line": 21,
        "fullcodeline": "std::string srvClusterId = srvSubjectName.substr(srvSubjectName.find(\",OU=\"));"
    },
    {
        "line": 22,
        "fullcodeline": "std::string peerClusterId = subjectName.substr(subjectName.find(\",OU=\"));"
    },
    {
        "line": 27,
        "fullcodeline": "int clusterAuthMode = serverGlobalParams.clusterAuthMode.load();"
    },
    {
        "line": 24,
        "fullcodeline": "fassert(17002, !srvClusterId.empty() && srvClusterId != srvSubjectName);"
    },
    {
        "line": 49,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 44,
        "fullcodeline": "Status status = authorizationSession->addAndAuthorizeUser(user);"
    },
    {
        "line": 29,
        "fullcodeline": "if (clusterAuthMode == ServerGlobalParams::ClusterAuthMode_undefined ||"
    },
    {
        "line": 30,
        "fullcodeline": "clusterAuthMode == ServerGlobalParams::ClusterAuthMode_keyFile) {"
    },
    {
        "line": 31,
        "fullcodeline": "return Status(ErrorCodes::AuthenticationFailed, \"The provided certificate \""
    },
    {
        "line": 45,
        "fullcodeline": "if (!status.isOK()) {"
    },
    {
        "line": 41,
        "fullcodeline": "return Status(ErrorCodes::BadValue,"
    }
]