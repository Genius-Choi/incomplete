[
    {
        "line": 11,
        "fullcodeline": "ClientBasic *client = ClientBasic::getCurrent();"
    },
    {
        "line": 12,
        "fullcodeline": "AuthorizationSession* authorizationSession = client->getAuthorizationSession();"
    },
    {
        "line": 13,
        "fullcodeline": "std::string subjectName = client->port()->getX509SubjectName();"
    },
    {
        "line": 2,
        "fullcodeline": "if (!getSSLManager()) {"
    },
    {
        "line": 6,
        "fullcodeline": "if(user.getDB() != \"$external\") {"
    },
    {
        "line": 15,
        "fullcodeline": "if (user.getUser() != subjectName) {"
    },
    {
        "line": 3,
        "fullcodeline": "return Status(ErrorCodes::ProtocolError,"
    },
    {
        "line": 7,
        "fullcodeline": "return Status(ErrorCodes::ProtocolError,"
    },
    {
        "line": 16,
        "fullcodeline": "return Status(ErrorCodes::AuthenticationFailed,"
    },
    {
        "line": 20,
        "fullcodeline": "std::string srvSubjectName = getSSLManager()->getServerSubjectName();"
    },
    {
        "line": 22,
        "fullcodeline": "size_t srvClusterIdPos = srvSubjectName.find(\",OU=\");"
    },
    {
        "line": 23,
        "fullcodeline": "size_t peerClusterIdPos = subjectName.find(\",OU=\");"
    },
    {
        "line": 25,
        "fullcodeline": "std::string srvClusterId = srvClusterIdPos != std::string::npos ?"
    },
    {
        "line": 27,
        "fullcodeline": "std::string peerClusterId = peerClusterIdPos != std::string::npos ?"
    },
    {
        "line": 31,
        "fullcodeline": "int clusterAuthMode = serverGlobalParams.clusterAuthMode.load();"
    },
    {
        "line": 32,
        "fullcodeline": "if (srvClusterId == peerClusterId && !srvClusterId.empty()) {"
    },
    {
        "line": 53,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 26,
        "fullcodeline": "srvSubjectName.substr(srvClusterIdPos) : \"\";"
    },
    {
        "line": 28,
        "fullcodeline": "subjectName.substr(peerClusterIdPos) : \"\";"
    },
    {
        "line": 40,
        "fullcodeline": "authorizationSession->grantInternalAuthorization();"
    },
    {
        "line": 33,
        "fullcodeline": "if (clusterAuthMode == ServerGlobalParams::ClusterAuthMode_undefined ||"
    },
    {
        "line": 48,
        "fullcodeline": "Status status = authorizationSession->addAndAuthorizeUser(user);"
    },
    {
        "line": 34,
        "fullcodeline": "clusterAuthMode == ServerGlobalParams::ClusterAuthMode_keyFile) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (!status.isOK()) {"
    },
    {
        "line": 35,
        "fullcodeline": "return Status(ErrorCodes::AuthenticationFailed, \"The provided certificate \""
    },
    {
        "line": 45,
        "fullcodeline": "return Status(ErrorCodes::BadValue,"
    }
]