[
    {
        "line": 4,
        "fullcodeline": "if (l_strnstart(ndo, \"MSG\", 4, (const char *)bp, length)) /* A REQuest */"
    },
    {
        "line": 5,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP MSG\"));"
    },
    {
        "line": 6,
        "fullcodeline": "else if (l_strnstart(ndo, \"RPY \", 4, (const char *)bp, length))"
    },
    {
        "line": 7,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP RPY\"));"
    },
    {
        "line": 8,
        "fullcodeline": "else if (l_strnstart(ndo, \"ERR \", 4, (const char *)bp, length))"
    },
    {
        "line": 9,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP ERR\"));"
    },
    {
        "line": 10,
        "fullcodeline": "else if (l_strnstart(ndo, \"ANS \", 4, (const char *)bp, length))"
    },
    {
        "line": 11,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP ANS\"));"
    },
    {
        "line": 12,
        "fullcodeline": "else if (l_strnstart(ndo, \"NUL \", 4, (const char *)bp, length))"
    },
    {
        "line": 13,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP NUL\"));"
    },
    {
        "line": 14,
        "fullcodeline": "else if (l_strnstart(ndo, \"SEQ \", 4, (const char *)bp, length))"
    },
    {
        "line": 15,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP SEQ\"));"
    },
    {
        "line": 16,
        "fullcodeline": "else if (l_strnstart(ndo, \"END\", 4, (const char *)bp, length))"
    },
    {
        "line": 17,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP END\"));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_PRINT((ndo, \" BEEP (payload or undecoded)\"));"
    }
]