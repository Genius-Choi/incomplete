[
    {
        "line": 16,
        "fullcodeline": "l2info.pictype = DLT_JUNIPER_ES;"
    },
    {
        "line": 20,
        "fullcodeline": "p+=l2info.header_len;"
    },
    {
        "line": 21,
        "fullcodeline": "ih = (const struct juniper_ipsec_header *)p;"
    },
    {
        "line": 43,
        "fullcodeline": "l2info.length-=rewrite_len;"
    },
    {
        "line": 44,
        "fullcodeline": "p+=rewrite_len;"
    },
    {
        "line": 17,
        "fullcodeline": "if (juniper_parse_header(ndo, p, h, &l2info) == 0)"
    },
    {
        "line": 27,
        "fullcodeline": "rewrite_len = 0;"
    },
    {
        "line": 28,
        "fullcodeline": "es_type_bundle = 1;"
    },
    {
        "line": 33,
        "fullcodeline": "rewrite_len = 16;"
    },
    {
        "line": 34,
        "fullcodeline": "es_type_bundle = 0;"
    },
    {
        "line": 37,
        "fullcodeline": "ND_PRINT((ndo, \"ES Invalid type %u, length %u\","
    },
    {
        "line": 48,
        "fullcodeline": "ND_PRINT((ndo, \"ES SA, index %u, ttl %u type %s (%u), spi %u, Tunnel %s > %s, length %u\\n\","
    },
    {
        "line": 58,
        "fullcodeline": "ND_PRINT((ndo, \"ES SA, index %u, ttl %u type %s (%u), length %u\\n\","
    },
    {
        "line": 49,
        "fullcodeline": "EXTRACT_16BITS(&ih->sa_index),"
    },
    {
        "line": 51,
        "fullcodeline": "tok2str(juniper_ipsec_type_values,\"Unknown\",ih->type),"
    },
    {
        "line": 53,
        "fullcodeline": "EXTRACT_32BITS(&ih->spi),"
    },
    {
        "line": 54,
        "fullcodeline": "ipaddr_string(ndo, &ih->src_ip),"
    },
    {
        "line": 55,
        "fullcodeline": "ipaddr_string(ndo, &ih->dst_ip),"
    },
    {
        "line": 59,
        "fullcodeline": "EXTRACT_16BITS(&ih->sa_index),"
    },
    {
        "line": 61,
        "fullcodeline": "tok2str(juniper_ipsec_type_values,\"Unknown\",ih->type),"
    }
]