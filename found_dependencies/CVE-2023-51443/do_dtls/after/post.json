[
    {
        "line": 3,
        "fullcodeline": "int r = 0, ret = 0, len;"
    },
    {
        "line": 5,
        "fullcodeline": "unsigned char buf[MAX_DTLS_MTU] = \"\";"
    },
    {
        "line": 6,
        "fullcodeline": "uint8_t is_ice = rtp_session->ice.ice_user ? 1 : 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int ready = is_ice ? (rtp_session->ice.rready && rtp_session->ice.ready) : 1;"
    },
    {
        "line": 10,
        "fullcodeline": "if (!dtls->bytes && !ready) {"
    },
    {
        "line": 14,
        "fullcodeline": "if (is_ice && !(rtp_session->ice.type & ICE_LITE) && !rtp_session->ice.cand_responsive) {"
    },
    {
        "line": 20,
        "fullcodeline": "if (is_ice && !switch_cmp_addr(rtp_session->from_addr, rtp_session->ice.addr, SWITCH_TRUE)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (dtls->bytes > 0 && dtls->data) {"
    },
    {
        "line": 45,
        "fullcodeline": "while ((pending = BIO_ctrl_pending(dtls->filter_bio)) > 0) {"
    },
    {
        "line": 15,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_DEBUG6, \"Got DTLS packet but candidate is not responsive\\n\");"
    },
    {
        "line": 21,
        "fullcodeline": "char tmp_buf1[80] = \"\";"
    },
    {
        "line": 22,
        "fullcodeline": "char tmp_buf2[80] = \"\";"
    },
    {
        "line": 23,
        "fullcodeline": "const char *host_from = switch_get_addr(tmp_buf1, sizeof(tmp_buf1), rtp_session->from_addr);"
    },
    {
        "line": 24,
        "fullcodeline": "const char *host_ice_cur_addr = switch_get_addr(tmp_buf2, sizeof(tmp_buf2), rtp_session->ice.addr);"
    },
    {
        "line": 26,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_DEBUG5, \"Got DTLS packet from [%s] whilst current ICE negotiated address is [%s]. Ignored.\\n\", host_from, host_ice_cur_addr);"
    },
    {
        "line": 32,
        "fullcodeline": "ret = BIO_write(dtls->read_bio, dtls->data, (int)dtls->bytes);"
    },
    {
        "line": 42,
        "fullcodeline": "r = dtls_states[dtls->state](rtp_session, dtls);"
    },
    {
        "line": 46,
        "fullcodeline": "switch_assert(pending <= sizeof(buf));"
    },
    {
        "line": 48,
        "fullcodeline": "len = BIO_read(dtls->write_bio, buf, pending);"
    },
    {
        "line": 33,
        "fullcodeline": "if (ret <= 0) {"
    },
    {
        "line": 49,
        "fullcodeline": "if (len > 0) {"
    },
    {
        "line": 34,
        "fullcodeline": "ret = SSL_get_error(dtls->ssl, ret);"
    },
    {
        "line": 35,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_ERROR, \"%s DTLS packet decode err: SSL err %d\\n\", rtp_type(rtp_session), ret);"
    },
    {
        "line": 50,
        "fullcodeline": "bytes = len;"
    },
    {
        "line": 51,
        "fullcodeline": "ret = switch_socket_sendto(dtls->sock_output, dtls->remote_addr, 0, (void *)buf, &bytes);"
    },
    {
        "line": 53,
        "fullcodeline": "if (ret != SWITCH_STATUS_SUCCESS) {"
    },
    {
        "line": 59,
        "fullcodeline": "ret = SSL_get_error(dtls->ssl, len);"
    },
    {
        "line": 60,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_ERROR, \"%s DTLS packet encode err: SSL err %d\\n\", rtp_type(rtp_session), ret);"
    },
    {
        "line": 36,
        "fullcodeline": "} else if (ret != (int)dtls->bytes) {"
    },
    {
        "line": 54,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_ERROR, \"%s DTLS packet not written to socket: %d\\n\", rtp_type(rtp_session), ret);"
    },
    {
        "line": 37,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_ERROR, \"%s DTLS packet decode err: read %d bytes instead of %d\\n\", rtp_type(rtp_session), ret, (int)dtls->bytes);"
    },
    {
        "line": 55,
        "fullcodeline": "} else if (bytes != len) {"
    },
    {
        "line": 56,
        "fullcodeline": "switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(rtp_session->session), SWITCH_LOG_ERROR, \"%s DTLS packet write err: written %d bytes instead of %d\\n\", rtp_type(rtp_session), (int)bytes, len);"
    }
]