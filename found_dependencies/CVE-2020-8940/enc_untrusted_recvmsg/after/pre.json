[
    {
        "line": 2,
        "fullcodeline": "size_t total_buffer_size = CalculateTotalMessageSize(msg);"
    },
    {
        "line": 5,
        "fullcodeline": "input.Push(sockfd);"
    },
    {
        "line": 6,
        "fullcodeline": "input.Push<uint64_t>(msg->msg_namelen);"
    },
    {
        "line": 7,
        "fullcodeline": "input.Push<uint64_t>(total_buffer_size);"
    },
    {
        "line": 8,
        "fullcodeline": "input.Push<uint64_t>(msg->msg_controllen);"
    },
    {
        "line": 9,
        "fullcodeline": "input.Push(msg->msg_flags);"
    },
    {
        "line": 10,
        "fullcodeline": "input.Push(flags);"
    },
    {
        "line": 14,
        "fullcodeline": "const auto status = NonSystemCallDispatcher("
    },
    {
        "line": 16,
        "fullcodeline": "CheckStatusAndParamCount(status, output, \"enc_untrusted_recvmsg\", 2,"
    },
    {
        "line": 19,
        "fullcodeline": "ssize_t result = output.next<ssize_t>();"
    },
    {
        "line": 20,
        "fullcodeline": "int klinux_errno = output.next<int>();"
    },
    {
        "line": 34,
        "fullcodeline": "auto msg_name_extent = output.next();"
    },
    {
        "line": 43,
        "fullcodeline": "auto msg_iov_extent = output.next();"
    },
    {
        "line": 44,
        "fullcodeline": "size_t total_bytes = msg_iov_extent.size();"
    },
    {
        "line": 45,
        "fullcodeline": "size_t bytes_copied = 0;"
    },
    {
        "line": 54,
        "fullcodeline": "auto msg_control_extent = output.next();"
    },
    {
        "line": 24,
        "fullcodeline": "if (result == -1) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (result > total_buffer_size) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (msg_name_extent.size() <= msg->msg_namelen) {"
    },
    {
        "line": 39,
        "fullcodeline": "memcpy(msg->msg_name, msg_name_extent.As<char>(), msg->msg_namelen);"
    },
    {
        "line": 46,
        "fullcodeline": "for (int i = 0; i < msg->msg_iovlen && bytes_copied < total_bytes; ++i) {"
    },
    {
        "line": 56,
        "fullcodeline": "if (msg_control_extent.size() <= msg->msg_controllen) {"
    },
    {
        "line": 59,
        "fullcodeline": "memcpy(msg->msg_control, msg_control_extent.As<char>(), msg->msg_controllen);"
    },
    {
        "line": 25,
        "fullcodeline": "errno = FromkLinuxErrorNumber(klinux_errno);"
    },
    {
        "line": 37,
        "fullcodeline": "msg->msg_namelen = msg_name_extent.size();"
    },
    {
        "line": 47,
        "fullcodeline": "size_t bytes_to_copy ="
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(msg->msg_iov[i].iov_base, msg_iov_extent.As<char>() + bytes_copied,"
    },
    {
        "line": 51,
        "fullcodeline": "bytes_copied += bytes_to_copy;"
    },
    {
        "line": 57,
        "fullcodeline": "msg->msg_controllen = msg_control_extent.size();"
    },
    {
        "line": 48,
        "fullcodeline": "std::min(msg->msg_iov[i].iov_len, total_bytes - bytes_copied);"
    }
]