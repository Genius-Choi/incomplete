[
    {
        "line": 10,
        "fullcodeline": "struct usb_driver \t*driver = to_usb_driver(udev->dev.driver);"
    },
    {
        "line": 21,
        "fullcodeline": "name = udev->dev.driver->name;"
    },
    {
        "line": 22,
        "fullcodeline": "info = (struct driver_info *) prod->driver_info;"
    },
    {
        "line": 27,
        "fullcodeline": "xdev = interface_to_usbdev (udev);"
    },
    {
        "line": 30,
        "fullcodeline": "status = -ENOMEM;"
    },
    {
        "line": 33,
        "fullcodeline": "net = alloc_etherdev(sizeof(*dev));"
    },
    {
        "line": 38,
        "fullcodeline": "SET_NETDEV_DEV(net, &udev->dev);"
    },
    {
        "line": 40,
        "fullcodeline": "dev = netdev_priv(net);"
    },
    {
        "line": 41,
        "fullcodeline": "dev->udev = xdev;"
    },
    {
        "line": 42,
        "fullcodeline": "dev->intf = udev;"
    },
    {
        "line": 43,
        "fullcodeline": "dev->driver_info = info;"
    },
    {
        "line": 44,
        "fullcodeline": "dev->driver_name = name;"
    },
    {
        "line": 45,
        "fullcodeline": "dev->msg_enable = netif_msg_init (msg_level, NETIF_MSG_DRV"
    },
    {
        "line": 54,
        "fullcodeline": "INIT_WORK (&dev->kevent, usbnet_deferred_kevent);"
    },
    {
        "line": 57,
        "fullcodeline": "dev->delay.data = (unsigned long) dev;"
    },
    {
        "line": 58,
        "fullcodeline": "init_timer (&dev->delay);"
    },
    {
        "line": 61,
        "fullcodeline": "dev->interrupt_count = 0;"
    },
    {
        "line": 63,
        "fullcodeline": "dev->net = net;"
    },
    {
        "line": 64,
        "fullcodeline": "strcpy (net->name, \"usb%d\");"
    },
    {
        "line": 65,
        "fullcodeline": "memcpy (net->dev_addr, node_id, sizeof node_id);"
    },
    {
        "line": 70,
        "fullcodeline": "dev->hard_mtu = net->mtu + net->hard_header_len;"
    },
    {
        "line": 72,
        "fullcodeline": "net->netdev_ops = &usbnet_netdev_ops;"
    },
    {
        "line": 73,
        "fullcodeline": "net->watchdog_timeo = TX_TIMEOUT_JIFFIES;"
    },
    {
        "line": 74,
        "fullcodeline": "net->ethtool_ops = &usbnet_ethtool_ops;"
    },
    {
        "line": 124,
        "fullcodeline": "dev->maxpacket = usb_maxpacket (dev->udev, dev->out, 1);"
    },
    {
        "line": 136,
        "fullcodeline": "usbnet_update_max_qlen(dev);"
    },
    {
        "line": 147,
        "fullcodeline": "status = register_netdev (net);"
    },
    {
        "line": 150,
        "fullcodeline": "netif_info(dev, probe, dev->net,"
    },
    {
        "line": 158,
        "fullcodeline": "usb_set_intfdata (udev, dev);"
    },
    {
        "line": 168,
        "fullcodeline": "kfree(dev->padding_pkt);"
    },
    {
        "line": 170,
        "fullcodeline": "usb_free_urb(dev->interrupt);"
    },
    {
        "line": 16,
        "fullcodeline": "if (!driver->supports_autosuspend) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!info) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (!net)"
    },
    {
        "line": 117,
        "fullcodeline": "if (status >= 0 && dev->status)"
    },
    {
        "line": 119,
        "fullcodeline": "if (status < 0)"
    },
    {
        "line": 122,
        "fullcodeline": "if (!dev->rx_urb_size)"
    },
    {
        "line": 127,
        "fullcodeline": "if (ether_addr_equal(net->dev_addr, node_id))"
    },
    {
        "line": 162,
        "fullcodeline": "if (dev->driver_info->flags & FLAG_LINK_INTR)"
    },
    {
        "line": 17,
        "fullcodeline": "driver->supports_autosuspend = 1;"
    },
    {
        "line": 18,
        "fullcodeline": "pm_runtime_enable(&udev->dev);"
    },
    {
        "line": 24,
        "fullcodeline": "dev_dbg (&udev->dev, \"blacklisted by %s\\n\", name);"
    },
    {
        "line": 79,
        "fullcodeline": "status = info->bind (dev, udev);"
    },
    {
        "line": 118,
        "fullcodeline": "status = init_status (dev, udev);"
    },
    {
        "line": 123,
        "fullcodeline": "dev->rx_urb_size = dev->hard_mtu;"
    },
    {
        "line": 128,
        "fullcodeline": "net->addr_assign_type = NET_ADDR_RANDOM;"
    },
    {
        "line": 130,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_WLAN) != 0)"
    },
    {
        "line": 131,
        "fullcodeline": "SET_NETDEV_DEVTYPE(net, &wlan_type);"
    },
    {
        "line": 132,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_WWAN) != 0)"
    },
    {
        "line": 133,
        "fullcodeline": "SET_NETDEV_DEVTYPE(net, &wwan_type);"
    },
    {
        "line": 138,
        "fullcodeline": "if (dev->can_dma_sg && !(info->flags & FLAG_SEND_ZLP) &&"
    },
    {
        "line": 139,
        "fullcodeline": "!(info->flags & FLAG_MULTI_PACKET)) {"
    },
    {
        "line": 140,
        "fullcodeline": "dev->padding_pkt = kzalloc(1, GFP_KERNEL);"
    },
    {
        "line": 173,
        "fullcodeline": "info->unbind (dev, udev);"
    },
    {
        "line": 25,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 80,
        "fullcodeline": "if (status < 0)"
    },
    {
        "line": 102,
        "fullcodeline": "if (net->mtu > (dev->hard_mtu - net->hard_header_len))"
    },
    {
        "line": 141,
        "fullcodeline": "if (!dev->padding_pkt) {"
    },
    {
        "line": 86,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_ETHER) != 0 &&"
    },
    {
        "line": 87,
        "fullcodeline": "((dev->driver_info->flags & FLAG_POINTTOPOINT) == 0 ||"
    },
    {
        "line": 89,
        "fullcodeline": "strcpy (net->name, \"eth%d\");"
    },
    {
        "line": 91,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_WLAN) != 0)"
    },
    {
        "line": 92,
        "fullcodeline": "strcpy(net->name, \"wlan%d\");"
    },
    {
        "line": 94,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_WWAN) != 0)"
    },
    {
        "line": 95,
        "fullcodeline": "strcpy(net->name, \"wwan%d\");"
    },
    {
        "line": 98,
        "fullcodeline": "if ((dev->driver_info->flags & FLAG_NOARP) != 0)"
    },
    {
        "line": 99,
        "fullcodeline": "net->flags |= IFF_NOARP;"
    },
    {
        "line": 103,
        "fullcodeline": "net->mtu = dev->hard_mtu - net->hard_header_len;"
    },
    {
        "line": 142,
        "fullcodeline": "status = -ENOMEM;"
    },
    {
        "line": 88,
        "fullcodeline": "(net->dev_addr [0] & 0x02) == 0))"
    },
    {
        "line": 104,
        "fullcodeline": "} else if (!info->in || !info->out)"
    },
    {
        "line": 105,
        "fullcodeline": "status = usbnet_get_endpoints (dev, udev);"
    },
    {
        "line": 107,
        "fullcodeline": "dev->in = usb_rcvbulkpipe (xdev, info->in);"
    },
    {
        "line": 108,
        "fullcodeline": "dev->out = usb_sndbulkpipe (xdev, info->out);"
    },
    {
        "line": 109,
        "fullcodeline": "if (!(info->flags & FLAG_NO_SETINT))"
    },
    {
        "line": 110,
        "fullcodeline": "status = usb_set_interface (xdev,"
    },
    {
        "line": 114,
        "fullcodeline": "status = 0;"
    }
]