[
    {
        "line": 5,
        "fullcodeline": "SCEnter();"
    },
    {
        "line": 7,
        "fullcodeline": "InspectionBuffer *buffer ="
    },
    {
        "line": 14,
        "fullcodeline": "HttpHeaderThreadData *hdr_td = NULL;"
    },
    {
        "line": 15,
        "fullcodeline": "HttpHeaderBuffer *buf ="
    },
    {
        "line": 21,
        "fullcodeline": "htp_tx_t *tx = (htp_tx_t *)cbdata->txv;"
    },
    {
        "line": 52,
        "fullcodeline": "InspectionBufferSetupMulti(buffer, transforms, buf->buffer, buf->len);"
    },
    {
        "line": 8,
        "fullcodeline": "InspectionBufferMultipleForListGet(det_ctx, list_id, cbdata->local_id);"
    },
    {
        "line": 9,
        "fullcodeline": "if (buffer == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "HttpHeaderGetBufferSpace(det_ctx, f, flags, g_keyword_thread_id, &hdr_td);"
    },
    {
        "line": 23,
        "fullcodeline": "if (flags & STREAM_TOSERVER) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (cbdata->local_id < htp_table_size(headers)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (buf->len == 0) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (unlikely(buf == NULL)) {"
    },
    {
        "line": 24,
        "fullcodeline": "headers = tx->request_headers;"
    },
    {
        "line": 29,
        "fullcodeline": "htp_header_t *h = htp_table_get_index(headers, cbdata->local_id, NULL);"
    },
    {
        "line": 30,
        "fullcodeline": "size_t size1 = bstr_size(h->name);"
    },
    {
        "line": 31,
        "fullcodeline": "size_t size2 = bstr_size(h->value);"
    },
    {
        "line": 32,
        "fullcodeline": "size_t b_len = size1 + 2 + size2;"
    },
    {
        "line": 38,
        "fullcodeline": "memcpy(buf->buffer, bstr_ptr(h->name), bstr_size(h->name));"
    },
    {
        "line": 39,
        "fullcodeline": "buf->buffer[size1] = ':';"
    },
    {
        "line": 40,
        "fullcodeline": "buf->buffer[size1 + 1] = ' ';"
    },
    {
        "line": 42,
        "fullcodeline": "buf->len = b_len;"
    },
    {
        "line": 26,
        "fullcodeline": "headers = tx->response_headers;"
    },
    {
        "line": 33,
        "fullcodeline": "if (b_len > buf->size) {"
    },
    {
        "line": 41,
        "fullcodeline": "memcpy(buf->buffer + size1 + 2, bstr_ptr(h->value), bstr_size(h->value));"
    },
    {
        "line": 34,
        "fullcodeline": "if (HttpHeaderExpandBuffer(hdr_td, buf, b_len) != 0) {"
    }
]