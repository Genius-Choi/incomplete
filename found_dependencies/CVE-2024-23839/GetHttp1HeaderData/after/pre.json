[
    {
        "line": 5,
        "fullcodeline": "SCEnter();"
    },
    {
        "line": 7,
        "fullcodeline": "InspectionBuffer *buffer ="
    },
    {
        "line": 20,
        "fullcodeline": "HttpMultiBufHeaderThreadData *hdr_td ="
    },
    {
        "line": 26,
        "fullcodeline": "htp_tx_t *tx = (htp_tx_t *)cbdata->txv;"
    },
    {
        "line": 33,
        "fullcodeline": "size_t no_of_headers = htp_table_size(headers);"
    },
    {
        "line": 8,
        "fullcodeline": "InspectionBufferMultipleForListGet(det_ctx, list_id, cbdata->local_id);"
    },
    {
        "line": 9,
        "fullcodeline": "if (buffer == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (flags & STREAM_TOSERVER) {"
    },
    {
        "line": 21,
        "fullcodeline": "DetectThreadCtxGetGlobalKeywordThreadCtx(det_ctx, kw_thread_id);"
    },
    {
        "line": 34,
        "fullcodeline": "if (cbdata->local_id == 0) {"
    },
    {
        "line": 16,
        "fullcodeline": "kw_thread_id = g_request_header_thread_id;"
    },
    {
        "line": 22,
        "fullcodeline": "if (unlikely(hdr_td == NULL)) {"
    },
    {
        "line": 29,
        "fullcodeline": "headers = tx->request_headers;"
    },
    {
        "line": 67,
        "fullcodeline": "hdr_td->len = no_of_headers;"
    },
    {
        "line": 74,
        "fullcodeline": "InspectionBufferSetupMulti(buffer, transforms, hdr_td->items[cbdata->local_id].buffer,"
    },
    {
        "line": 76,
        "fullcodeline": "SCReturnPtr(buffer, \"InspectionBuffer\");"
    },
    {
        "line": 18,
        "fullcodeline": "kw_thread_id = g_response_header_thread_id;"
    },
    {
        "line": 31,
        "fullcodeline": "headers = tx->response_headers;"
    },
    {
        "line": 38,
        "fullcodeline": "if (hdr_td->cap < no_of_headers) {"
    },
    {
        "line": 49,
        "fullcodeline": "for (size_t i = 0; i < no_of_headers; i++) {"
    },
    {
        "line": 39,
        "fullcodeline": "void *new_buffer = SCRealloc(hdr_td->items, no_of_headers * sizeof(HttpMultiBufItem));"
    },
    {
        "line": 43,
        "fullcodeline": "hdr_td->items = new_buffer;"
    },
    {
        "line": 50,
        "fullcodeline": "htp_header_t *h = htp_table_get_index(headers, i, NULL);"
    },
    {
        "line": 51,
        "fullcodeline": "size_t size1 = bstr_size(h->name);"
    },
    {
        "line": 52,
        "fullcodeline": "size_t size2 = bstr_size(h->value);"
    },
    {
        "line": 53,
        "fullcodeline": "size_t size = size1 + size2 + 2;"
    },
    {
        "line": 61,
        "fullcodeline": "memcpy(hdr_td->items[i].buffer, bstr_ptr(h->name), size1);"
    },
    {
        "line": 62,
        "fullcodeline": "hdr_td->items[i].buffer[size1] = ':';"
    },
    {
        "line": 63,
        "fullcodeline": "hdr_td->items[i].buffer[size1 + 1] = ' ';"
    },
    {
        "line": 46,
        "fullcodeline": "(no_of_headers - hdr_td->cap) * sizeof(HttpMultiBufItem));"
    },
    {
        "line": 54,
        "fullcodeline": "if (hdr_td->items[i].len < size) {"
    },
    {
        "line": 64,
        "fullcodeline": "memcpy(hdr_td->items[i].buffer + size1 + 2, bstr_ptr(h->value), size2);"
    },
    {
        "line": 40,
        "fullcodeline": "if (unlikely(new_buffer == NULL)) {"
    },
    {
        "line": 56,
        "fullcodeline": "hdr_td->items[i].buffer = SCRealloc(hdr_td->items[i].buffer, size);"
    },
    {
        "line": 57,
        "fullcodeline": "if (unlikely(hdr_td->items[i].buffer == NULL)) {"
    }
]