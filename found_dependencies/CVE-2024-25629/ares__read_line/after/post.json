[
    {
        "line": 4,
        "fullcodeline": "size_t offset = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "if (*buf == NULL) {"
    },
    {
        "line": 8,
        "fullcodeline": "*buf = ares_malloc(128);"
    },
    {
        "line": 12,
        "fullcodeline": "*bufsize = 128;"
    },
    {
        "line": 16,
        "fullcodeline": "int bytestoread = (int)(*bufsize - offset);"
    },
    {
        "line": 21,
        "fullcodeline": "len = offset + ares_strlen(*buf + offset);"
    },
    {
        "line": 34,
        "fullcodeline": "offset = len;"
    },
    {
        "line": 40,
        "fullcodeline": "newbuf = ares_realloc(*buf, *bufsize * 2);"
    },
    {
        "line": 46,
        "fullcodeline": "*buf      = newbuf;"
    },
    {
        "line": 47,
        "fullcodeline": "*bufsize *= 2;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!*buf) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (!fgets(*buf + offset, bytestoread, fp)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (len == 0) {"
    },
    {
        "line": 30,
        "fullcodeline": "if ((*buf)[len - 1] == '\\n') {"
    },
    {
        "line": 35,
        "fullcodeline": "if (len < *bufsize - 1) {"
    },
    {
        "line": 41,
        "fullcodeline": "if (!newbuf) {"
    },
    {
        "line": 26,
        "fullcodeline": "offset = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "(*buf)[len - 1] = 0;"
    },
    {
        "line": 42,
        "fullcodeline": "ares_free(*buf);"
    },
    {
        "line": 43,
        "fullcodeline": "*buf = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;"
    }
]