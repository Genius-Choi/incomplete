[
    {
        "line": 10,
        "fullcodeline": "discussion_id = vs_code_data.discussion_id"
    },
    {
        "line": 11,
        "fullcodeline": "message_id = vs_code_data.message_id"
    },
    {
        "line": 12,
        "fullcodeline": "code = vs_code_data.code"
    },
    {
        "line": 14,
        "fullcodeline": "ASCIIColors.info(\"Opening folder:\")"
    },
    {
        "line": 16,
        "fullcodeline": "root_folder = Path(os.path.realpath(lollmsElfServer.lollms_paths.personal_outputs_path/\"discussions\"/f\"d_{discussion_id}\"/f\"{message_id}.py\"))"
    },
    {
        "line": 17,
        "fullcodeline": "root_folder.mkdir(parents=True,exist_ok=True)"
    },
    {
        "line": 18,
        "fullcodeline": "tmp_file = root_folder/f\"ai_code_{message_id}.py\""
    },
    {
        "line": 23,
        "fullcodeline": "subprocess.Popen([\"code\", str(root_folder)], shell=True)"
    },
    {
        "line": 19,
        "fullcodeline": "with open(tmp_file,\"w\") as f:"
    },
    {
        "line": 25,
        "fullcodeline": "return {\"status\": True, \"execution_time\": 0}"
    },
    {
        "line": 27,
        "fullcodeline": "trace_exception(ex)"
    },
    {
        "line": 28,
        "fullcodeline": "lollmsElfServer.error(ex)"
    },
    {
        "line": 20,
        "fullcodeline": "f.write(code)"
    },
    {
        "line": 29,
        "fullcodeline": "return {\"status\":False,\"error\":str(ex)}"
    }
]