[
    {
        "line": 4,
        "fullcodeline": "int count = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "char *string = (char *)data;"
    },
    {
        "line": 11,
        "fullcodeline": "reply = calloc(1, sizeof(struct pam_response));"
    },
    {
        "line": 12,
        "fullcodeline": "CRM_ASSERT(reply != NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "*response = reply;"
    },
    {
        "line": 36,
        "fullcodeline": "reply = NULL;"
    },
    {
        "line": 56,
        "fullcodeline": "free(reply);"
    },
    {
        "line": 57,
        "fullcodeline": "reply = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "for (count = 0; count < num_msg; ++count) {"
    },
    {
        "line": 41,
        "fullcodeline": "for (count = 0; count < num_msg; ++count) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (reply[count].resp != NULL) {"
    },
    {
        "line": 17,
        "fullcodeline": "crm_info(\"PAM: %s\\n\", msg[count]->msg);"
    },
    {
        "line": 21,
        "fullcodeline": "reply[count].resp_retcode = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "reply[count].resp = string;     /* We already made a copy */"
    },
    {
        "line": 30,
        "fullcodeline": "crm_err(\"Unhandled conversation type: %d\", msg[count]->msg_style);"
    },
    {
        "line": 53,
        "fullcodeline": "reply[count].resp = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "free(reply[count].resp);"
    },
    {
        "line": 48,
        "fullcodeline": "*(reply[count].resp)++ = '\\0';"
    }
]