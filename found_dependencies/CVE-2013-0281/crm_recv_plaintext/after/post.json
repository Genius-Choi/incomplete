[
    {
        "line": 3,
        "fullcodeline": "char *buf = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "ssize_t rc = 0;"
    },
    {
        "line": 5,
        "fullcodeline": "ssize_t len = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "ssize_t chunk_size = max_size ? max_size : 1024;"
    },
    {
        "line": 7,
        "fullcodeline": "size_t buf_size = 0;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t read_size = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "buf = calloc(1, chunk_size + 1);"
    },
    {
        "line": 18,
        "fullcodeline": "buf_size = chunk_size;"
    },
    {
        "line": 10,
        "fullcodeline": "if (sock <= 0) {"
    },
    {
        "line": 76,
        "fullcodeline": "if (!len) {"
    },
    {
        "line": 21,
        "fullcodeline": "errno = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "read_size = buf_size - len;"
    },
    {
        "line": 34,
        "fullcodeline": "rc = read(sock, buf + len, chunk_size);"
    },
    {
        "line": 74,
        "fullcodeline": "*recv_len = len;"
    },
    {
        "line": 77,
        "fullcodeline": "free(buf);"
    },
    {
        "line": 78,
        "fullcodeline": "buf = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "if (!max_size && (read_size < (chunk_size / 2))) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (rc > 0) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (max_size && (max_size == read_size)) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (rc > 0) {"
    },
    {
        "line": 58,
        "fullcodeline": "if (errno == EINTR) {"
    },
    {
        "line": 12,
        "fullcodeline": "*disconnected = 1;"
    },
    {
        "line": 26,
        "fullcodeline": "buf_size += chunk_size;"
    },
    {
        "line": 27,
        "fullcodeline": "crm_trace(\"Grow buffer by %d more bytes. buf is now %d bytes\", (int)chunk_size, buf_size);"
    },
    {
        "line": 28,
        "fullcodeline": "buf = realloc(buf, buf_size + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "CRM_ASSERT(buf != NULL);"
    },
    {
        "line": 31,
        "fullcodeline": "read_size = buf_size - len;"
    },
    {
        "line": 37,
        "fullcodeline": "crm_trace(\"Got %d more bytes. errno=%d\", (int)rc, errno);"
    },
    {
        "line": 38,
        "fullcodeline": "len += rc;"
    },
    {
        "line": 40,
        "fullcodeline": "buf[len] = '\\0';"
    },
    {
        "line": 43,
        "fullcodeline": "crm_trace(\"Buffer max read size %d met\" , max_size);"
    },
    {
        "line": 59,
        "fullcodeline": "crm_trace(\"EINTER encoutered, retry socket read.\");"
    },
    {
        "line": 49,
        "fullcodeline": "} else if (rc == 0) {"
    },
    {
        "line": 60,
        "fullcodeline": "} else if (errno == EAGAIN) {"
    },
    {
        "line": 53,
        "fullcodeline": "crm_trace(\"EOF encoutered during read\");"
    },
    {
        "line": 61,
        "fullcodeline": "crm_trace(\"non-blocking, exiting read on rc = %d\", rc);"
    },
    {
        "line": 51,
        "fullcodeline": "*disconnected = 1;"
    },
    {
        "line": 63,
        "fullcodeline": "} else if (errno <= 0) {"
    },
    {
        "line": 67,
        "fullcodeline": "crm_debug(\"Error receiving message: %d\", (int)rc);"
    },
    {
        "line": 65,
        "fullcodeline": "*disconnected = 1;"
    }
]