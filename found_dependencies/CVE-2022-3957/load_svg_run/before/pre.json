[
    {
        "line": 5,
        "fullcodeline": "GF_SVG_Parser *parser = (GF_SVG_Parser *)load->loader_priv;"
    },
    {
        "line": 13,
        "fullcodeline": "in_time = gf_sys_clock();"
    },
    {
        "line": 14,
        "fullcodeline": "e = gf_xml_sax_parse_file(parser->sax_parser, (const char *)load->fileName, svg_progress);"
    },
    {
        "line": 18,
        "fullcodeline": "GF_LOG(GF_LOG_INFO, GF_LOG_PARSER, (\"[Parser] Scene parsed and Scene Graph built in %d ms\\n\", gf_sys_clock() - in_time));"
    },
    {
        "line": 20,
        "fullcodeline": "svg_flush_animations(parser);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!parser) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (parser->last_error<0) e = parser->last_error;"
    },
    {
        "line": 17,
        "fullcodeline": "if (e<0) return svg_report(parser, e, \"Unable to parse file %s: %s\", load->fileName, gf_xml_sax_get_error(parser->sax_parser) );"
    },
    {
        "line": 8,
        "fullcodeline": "e = gf_sm_load_initialize_svg(load, NULL, GF_FALSE);"
    },
    {
        "line": 10,
        "fullcodeline": "parser = (GF_SVG_Parser *)load->loader_priv;"
    }
]