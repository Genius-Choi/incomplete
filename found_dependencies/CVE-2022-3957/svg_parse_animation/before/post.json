[
    {
        "line": 5,
        "fullcodeline": "u8 anim_value_type = 0;"
    },
    {
        "line": 152,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_end, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!anim->animation_elt)"
    },
    {
        "line": 9,
        "fullcodeline": "if (anim->resolve_stage==0) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (anim->resolve_stage == 1) {"
    },
    {
        "line": 153,
        "fullcodeline": "if (!gf_svg_resolve_smil_times((GF_Node *)anim->animation_elt, anim->target, *(GF_List **)info.far_ptr, GF_TRUE, nodeID)) {"
    },
    {
        "line": 158,
        "fullcodeline": "if (force_type || gf_node_get_tag((GF_Node *)anim->animation_elt) != TAG_SVG_animateMotion) {"
    },
    {
        "line": 27,
        "fullcodeline": "tag = gf_node_get_tag((GF_Node *)anim->animation_elt);"
    },
    {
        "line": 138,
        "fullcodeline": "anim->resolve_stage = 1;"
    },
    {
        "line": 144,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_begin, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 159,
        "fullcodeline": "gf_node_init((GF_Node *)anim->animation_elt);"
    },
    {
        "line": 14,
        "fullcodeline": "if (!anim->target && anim->target_id)"
    },
    {
        "line": 29,
        "fullcodeline": "if (anim->type && (tag== TAG_SVG_animateTransform) ) {"
    },
    {
        "line": 99,
        "fullcodeline": "if (!anim->target) return GF_FALSE;"
    },
    {
        "line": 145,
        "fullcodeline": "if (gf_svg_resolve_smil_times((GF_Node *)anim->animation_elt, anim->target, *(GF_List **)info.far_ptr, GF_FALSE, nodeID)) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (force_type!=2) return GF_FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "anim->target = (SVG_Element *) gf_sg_find_node_by_name(sg, anim->target_id + 1);"
    },
    {
        "line": 20,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_XLINK_ATT_href, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 21,
        "fullcodeline": "iri = (XMLRI *)info.far_ptr;"
    },
    {
        "line": 22,
        "fullcodeline": "iri->type = XMLRI_ELEMENTID;"
    },
    {
        "line": 23,
        "fullcodeline": "iri->target = anim->target;"
    },
    {
        "line": 24,
        "fullcodeline": "gf_node_register_iri(sg, iri);"
    },
    {
        "line": 30,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_transform_type, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 31,
        "fullcodeline": "gf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->type, 0);"
    },
    {
        "line": 103,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_to, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 104,
        "fullcodeline": "gf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->to, anim_value_type);"
    },
    {
        "line": 111,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_from, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 112,
        "fullcodeline": "gf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->from, anim_value_type);"
    },
    {
        "line": 118,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_by, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 119,
        "fullcodeline": "gf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->by, anim_value_type);"
    },
    {
        "line": 125,
        "fullcodeline": "gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_values, GF_TRUE, GF_FALSE, &info);"
    },
    {
        "line": 126,
        "fullcodeline": "gf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->values, anim_value_type);"
    },
    {
        "line": 146,
        "fullcodeline": "anim->resolve_stage = 2;"
    },
    {
        "line": 105,
        "fullcodeline": "if (anim_value_type==XMLRI_datatype) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (anim_value_type==XMLRI_datatype)"
    },
    {
        "line": 120,
        "fullcodeline": "if (anim_value_type==XMLRI_datatype)"
    },
    {
        "line": 127,
        "fullcodeline": "if (anim_value_type==XMLRI_datatype) {"
    },
    {
        "line": 32,
        "fullcodeline": "switch(*(SVG_TransformType *) info.far_ptr) {"
    },
    {
        "line": 34,
        "fullcodeline": "anim_value_type = SVG_Transform_Translate_datatype;"
    },
    {
        "line": 37,
        "fullcodeline": "anim_value_type = SVG_Transform_Scale_datatype;"
    },
    {
        "line": 40,
        "fullcodeline": "anim_value_type = SVG_Transform_Rotate_datatype;"
    },
    {
        "line": 43,
        "fullcodeline": "anim_value_type = SVG_Transform_SkewX_datatype;"
    },
    {
        "line": 46,
        "fullcodeline": "anim_value_type = SVG_Transform_SkewY_datatype;"
    },
    {
        "line": 49,
        "fullcodeline": "anim_value_type = SVG_Transform_datatype;"
    },
    {
        "line": 52,
        "fullcodeline": "svg_report(parser, GF_OK, \"unknown datatype for animate transform\");"
    },
    {
        "line": 56,
        "fullcodeline": "else if (gf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_attributeName, GF_FALSE, GF_FALSE, &info) == GF_OK) {"
    },
    {
        "line": 106,
        "fullcodeline": "svg_post_process_href(parser, (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);"
    },
    {
        "line": 114,
        "fullcodeline": "svg_post_process_href(parser,  (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);"
    },
    {
        "line": 121,
        "fullcodeline": "svg_post_process_href(parser,  (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);"
    },
    {
        "line": 130,
        "fullcodeline": "anim_values = (SMIL_AnimateValues *)info.far_ptr;"
    },
    {
        "line": 131,
        "fullcodeline": "count = gf_list_count(anim_values->values);"
    },
    {
        "line": 147,
        "fullcodeline": "} else if (force_type!=2) {"
    },
    {
        "line": 57,
        "fullcodeline": "SMIL_AttributeName *attname = (SMIL_AttributeName *)info.far_ptr;"
    },
    {
        "line": 80,
        "fullcodeline": "gf_node_get_attribute_by_name((GF_Node *)anim->target, attname->name, attname->type, GF_TRUE, GF_TRUE, &info);"
    },
    {
        "line": 82,
        "fullcodeline": "attname->tag = info.fieldIndex;"
    },
    {
        "line": 83,
        "fullcodeline": "attname->type = 0;"
    },
    {
        "line": 84,
        "fullcodeline": "anim_value_type = info.fieldType;"
    },
    {
        "line": 132,
        "fullcodeline": "for (i=0; i<count; i++) {"
    },
    {
        "line": 61,
        "fullcodeline": "if (!attname->type) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (!anim->target) return GF_FALSE;"
    },
    {
        "line": 133,
        "fullcodeline": "XMLRI *iri = (XMLRI *)gf_list_get(anim_values->values, i);"
    },
    {
        "line": 134,
        "fullcodeline": "svg_post_process_href(parser,  (GF_Node *) anim->target, iri);"
    },
    {
        "line": 63,
        "fullcodeline": "char *name = attname->name;"
    },
    {
        "line": 64,
        "fullcodeline": "sep = strchr(name, ':');"
    },
    {
        "line": 86,
        "fullcodeline": "if (tag == TAG_SVG_animateMotion) {"
    },
    {
        "line": 87,
        "fullcodeline": "anim_value_type = SVG_Motion_datatype;"
    },
    {
        "line": 66,
        "fullcodeline": "sep[0] = 0;"
    },
    {
        "line": 67,
        "fullcodeline": "attname->type = gf_sg_get_namespace_code(anim->animation_elt->sgprivate->scenegraph, name);"
    },
    {
        "line": 68,
        "fullcodeline": "sep[0] = ':';"
    },
    {
        "line": 69,
        "fullcodeline": "name = gf_strdup(sep+1);"
    },
    {
        "line": 70,
        "fullcodeline": "gf_free(attname->name);"
    },
    {
        "line": 71,
        "fullcodeline": "attname->name = name;"
    },
    {
        "line": 73,
        "fullcodeline": "attname->type = parser->current_ns;"
    },
    {
        "line": 88,
        "fullcodeline": "} else if (tag == TAG_SVG_discard) {"
    },
    {
        "line": 90,
        "fullcodeline": "anim->resolve_stage = 1;"
    },
    {
        "line": 91,
        "fullcodeline": "return svg_parse_animation(parser, sg, anim, nodeID, 0);"
    },
    {
        "line": 93,
        "fullcodeline": "svg_report(parser, GF_OK, \"Missing attributeName attribute on %s\", gf_node_get_name((GF_Node *)anim->animation_elt));"
    }
]