[
    {
        "line": 6,
        "fullcodeline": "result->start = result->end = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "*(result->value) = '\\0';"
    },
    {
        "line": 12,
        "fullcodeline": "const char *needle1 = \"filepos=\";"
    },
    {
        "line": 13,
        "fullcodeline": "const char *needle2 = \"recindex=\";"
    },
    {
        "line": 14,
        "fullcodeline": "const size_t needle1_length = strlen(needle1);"
    },
    {
        "line": 15,
        "fullcodeline": "const size_t needle2_length = strlen(needle2);"
    },
    {
        "line": 16,
        "fullcodeline": "const size_t needle_length = max(needle1_length,needle2_length);"
    },
    {
        "line": 20,
        "fullcodeline": "unsigned char *data = (unsigned char *) data_start;"
    },
    {
        "line": 21,
        "fullcodeline": "const unsigned char tag_open = '<';"
    },
    {
        "line": 22,
        "fullcodeline": "const unsigned char tag_close = '>';"
    },
    {
        "line": 23,
        "fullcodeline": "unsigned char last_border = tag_open;"
    },
    {
        "line": 2,
        "fullcodeline": "if (!result) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (!data_start || !data_end) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (data_start + needle_length > data_end) {"
    },
    {
        "line": 24,
        "fullcodeline": "while (data <= data_end) {"
    },
    {
        "line": 3,
        "fullcodeline": "debug_print(\"Result structure is null%s\", \"\\n\");"
    },
    {
        "line": 9,
        "fullcodeline": "debug_print(\"Data is null%s\", \"\\n\");"
    },
    {
        "line": 55,
        "fullcodeline": "data++;"
    },
    {
        "line": 25,
        "fullcodeline": "if (*data == tag_open || *data == tag_close) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (data + needle_length <= data_end &&"
    },
    {
        "line": 26,
        "fullcodeline": "last_border = *data;"
    },
    {
        "line": 29,
        "fullcodeline": "(memcmp(data, needle1, needle1_length) == 0 ||"
    },
    {
        "line": 41,
        "fullcodeline": "result->start = ++data;"
    },
    {
        "line": 43,
        "fullcodeline": "int i = 0;"
    },
    {
        "line": 51,
        "fullcodeline": "result->end = data;"
    },
    {
        "line": 52,
        "fullcodeline": "result->value[i] = '\\0';"
    },
    {
        "line": 30,
        "fullcodeline": "memcmp(data, needle2, needle2_length) == 0)) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (last_border != tag_open) {"
    },
    {
        "line": 38,
        "fullcodeline": "while (data >= data_start && !isspace(*data) && *data != tag_open) {"
    },
    {
        "line": 44,
        "fullcodeline": "while (data <= data_end && !isspace(*data) && *data != tag_close && i < MOBI_ATTRVALUE_MAXSIZE) {"
    },
    {
        "line": 48,
        "fullcodeline": "if (data <= data_end && *(data - 1) == '/' && *data == '>') {"
    },
    {
        "line": 34,
        "fullcodeline": "data += needle_length;"
    },
    {
        "line": 39,
        "fullcodeline": "data--;"
    },
    {
        "line": 49,
        "fullcodeline": "--data; --i;"
    },
    {
        "line": 45,
        "fullcodeline": "result->value[i++] = (char) *data++;"
    }
]