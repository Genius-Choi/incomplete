[
    {
        "line": 3,
        "fullcodeline": "int\t\taddress_count = 1;"
    },
    {
        "line": 9,
        "fullcodeline": "eap->line1 = eap->line2;"
    },
    {
        "line": 10,
        "fullcodeline": "eap->line2 = default_address(eap);"
    },
    {
        "line": 11,
        "fullcodeline": "eap->cmd = skipwhite(eap->cmd);"
    },
    {
        "line": 12,
        "fullcodeline": "lnum = get_address(eap, &eap->cmd, eap->addr_type, eap->skip, silent,"
    },
    {
        "line": 119,
        "fullcodeline": "eap->addr_count++;"
    },
    {
        "line": 134,
        "fullcodeline": "++eap->cmd;"
    },
    {
        "line": 14,
        "fullcodeline": "if (eap->cmd == NULL)\t// error detected"
    },
    {
        "line": 16,
        "fullcodeline": "if (lnum == MAXLNUM)"
    },
    {
        "line": 121,
        "fullcodeline": "if (*eap->cmd == ';')"
    },
    {
        "line": 13,
        "fullcodeline": "eap->addr_count == 0, address_count++);"
    },
    {
        "line": 18,
        "fullcodeline": "if (*eap->cmd == '%')   // '%' - all lines"
    },
    {
        "line": 118,
        "fullcodeline": "eap->line2 = lnum;"
    },
    {
        "line": 123,
        "fullcodeline": "if (!eap->skip)"
    },
    {
        "line": 20,
        "fullcodeline": "++eap->cmd;"
    },
    {
        "line": 89,
        "fullcodeline": "++eap->addr_count;"
    },
    {
        "line": 125,
        "fullcodeline": "curwin->w_cursor.lnum = eap->line2;"
    },
    {
        "line": 132,
        "fullcodeline": "else if (*eap->cmd != ',')"
    },
    {
        "line": 128,
        "fullcodeline": "if (eap->line2 > 0)"
    },
    {
        "line": 25,
        "fullcodeline": "eap->line1 = 1;"
    },
    {
        "line": 26,
        "fullcodeline": "eap->line2 = curbuf->b_ml.ml_line_count;"
    },
    {
        "line": 44,
        "fullcodeline": "eap->line1 = firstbuf->b_fnum;"
    },
    {
        "line": 45,
        "fullcodeline": "eap->line2 = lastbuf->b_fnum;"
    },
    {
        "line": 91,
        "fullcodeline": "else if (*eap->cmd == '*' && vim_strchr(p_cpo, CPO_STAR) == NULL)"
    },
    {
        "line": 129,
        "fullcodeline": "check_cursor();"
    },
    {
        "line": 30,
        "fullcodeline": "buf_T\t*buf = firstbuf;"
    },
    {
        "line": 35,
        "fullcodeline": "eap->line1 = buf->b_fnum;"
    },
    {
        "line": 36,
        "fullcodeline": "buf = lastbuf;"
    },
    {
        "line": 40,
        "fullcodeline": "eap->line2 = buf->b_fnum;"
    },
    {
        "line": 49,
        "fullcodeline": "if (IS_USER_CMDIDX(eap->cmdidx))"
    },
    {
        "line": 66,
        "fullcodeline": "*errormsg = _(e_invalid_range);"
    },
    {
        "line": 69,
        "fullcodeline": "if (ARGCOUNT == 0)"
    },
    {
        "line": 102,
        "fullcodeline": "++eap->cmd;"
    },
    {
        "line": 32,
        "fullcodeline": "while (buf->b_next != NULL"
    },
    {
        "line": 34,
        "fullcodeline": "buf = buf->b_next;"
    },
    {
        "line": 37,
        "fullcodeline": "while (buf->b_prev != NULL"
    },
    {
        "line": 39,
        "fullcodeline": "buf = buf->b_prev;"
    },
    {
        "line": 51,
        "fullcodeline": "eap->line1 = 1;"
    },
    {
        "line": 52,
        "fullcodeline": "eap->line2 = eap->addr_type == ADDR_WINDOWS"
    },
    {
        "line": 70,
        "fullcodeline": "eap->line1 = eap->line2 = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "if (eap->addr_type != ADDR_LINES)"
    },
    {
        "line": 103,
        "fullcodeline": "if (!eap->skip)"
    },
    {
        "line": 33,
        "fullcodeline": "&& buf->b_ml.ml_mfp == NULL)"
    },
    {
        "line": 38,
        "fullcodeline": "&& buf->b_ml.ml_mfp == NULL)"
    },
    {
        "line": 73,
        "fullcodeline": "eap->line1 = 1;"
    },
    {
        "line": 74,
        "fullcodeline": "eap->line2 = ARGCOUNT;"
    },
    {
        "line": 105,
        "fullcodeline": "fp = getmark('<', FALSE);"
    },
    {
        "line": 108,
        "fullcodeline": "eap->line1 = fp->lnum;"
    },
    {
        "line": 109,
        "fullcodeline": "fp = getmark('>', FALSE);"
    },
    {
        "line": 112,
        "fullcodeline": "eap->line2 = fp->lnum;"
    },
    {
        "line": 113,
        "fullcodeline": "++eap->addr_count;"
    },
    {
        "line": 59,
        "fullcodeline": "*errormsg = _(e_invalid_range);"
    },
    {
        "line": 98,
        "fullcodeline": "*errormsg = _(e_invalid_range);"
    },
    {
        "line": 106,
        "fullcodeline": "if (check_mark(fp) == FAIL)"
    },
    {
        "line": 110,
        "fullcodeline": "if (check_mark(fp) == FAIL)"
    }
]