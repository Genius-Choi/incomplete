[
    {
        "line": 19,
        "fullcodeline": "new_uri = secure_resolve!(response['Location'].to_s, page)"
    },
    {
        "line": 20,
        "fullcodeline": "@history.push(page, page.uri)"
    },
    {
        "line": 2,
        "fullcodeline": "referer = current_page)"
    },
    {
        "line": 3,
        "fullcodeline": "case @redirect_ok"
    },
    {
        "line": 15,
        "fullcodeline": "redirects + 1 > @redirection_limit"
    },
    {
        "line": 28,
        "fullcodeline": "if new_uri.host != page.uri.host"
    },
    {
        "line": 34,
        "fullcodeline": "fetch new_uri, redirect_method, headers, [], referer, redirects + 1"
    },
    {
        "line": 4,
        "fullcodeline": "when true, :all"
    },
    {
        "line": 17,
        "fullcodeline": "redirect_method = method == :head ? :head : :get"
    },
    {
        "line": 23,
        "fullcodeline": "POST_HEADERS.each do |key|"
    },
    {
        "line": 12,
        "fullcodeline": "log.info(\"follow redirect to: #{response['Location']}\") if log"
    },
    {
        "line": 6,
        "fullcodeline": "when false, nil"
    },
    {
        "line": 14,
        "fullcodeline": "raise Mechanize::RedirectLimitReachedError.new(page, redirects) if"
    },
    {
        "line": 29,
        "fullcodeline": "CREDENTIAL_HEADERS.each do |ch|"
    },
    {
        "line": 9,
        "fullcodeline": "return page unless Net::HTTPMovedPermanently === response"
    }
]