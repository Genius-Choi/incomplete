[
    {
        "line": 39,
        "fullcodeline": "res = try_create_file(state, path, mode, buf, size);"
    },
    {
        "line": 36,
        "fullcodeline": "if (path_is_beyond_symlink(state, path))"
    },
    {
        "line": 40,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 42,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 45,
        "fullcodeline": "if (errno == ENOENT) {"
    },
    {
        "line": 55,
        "fullcodeline": "if (errno == EEXIST || errno == EACCES) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (errno == EEXIST) {"
    },
    {
        "line": 84,
        "fullcodeline": "return error_errno(_(\"unable to write file '%s' mode %o\"),"
    },
    {
        "line": 48,
        "fullcodeline": "res = try_create_file(state, path, mode, buf, size);"
    },
    {
        "line": 65,
        "fullcodeline": "unsigned int nr = getpid();"
    },
    {
        "line": 37,
        "fullcodeline": "return error(_(\"affected file '%s' is beyond a symbolic link\"), path);"
    },
    {
        "line": 41,
        "fullcodeline": "return -1;"
    },
    {
        "line": 46,
        "fullcodeline": "if (safe_create_leading_directories_no_share(path))"
    },
    {
        "line": 49,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 51,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!lstat(path, &st) && (!S_ISDIR(st.st_mode) || !rmdir(path)))"
    },
    {
        "line": 61,
        "fullcodeline": "errno = EEXIST;"
    },
    {
        "line": 68,
        "fullcodeline": "char newpath[PATH_MAX];"
    },
    {
        "line": 69,
        "fullcodeline": "mksnpath(newpath, sizeof(newpath), \"%s~%u\", path, nr);"
    },
    {
        "line": 70,
        "fullcodeline": "res = try_create_file(state, newpath, mode, buf, size);"
    },
    {
        "line": 81,
        "fullcodeline": "++nr;"
    },
    {
        "line": 50,
        "fullcodeline": "return -1;"
    },
    {
        "line": 71,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 73,
        "fullcodeline": "if (!res) {"
    },
    {
        "line": 79,
        "fullcodeline": "if (errno != EEXIST)"
    },
    {
        "line": 76,
        "fullcodeline": "unlink_or_warn(newpath);"
    },
    {
        "line": 72,
        "fullcodeline": "return -1;"
    },
    {
        "line": 74,
        "fullcodeline": "if (!rename(newpath, path))"
    }
]