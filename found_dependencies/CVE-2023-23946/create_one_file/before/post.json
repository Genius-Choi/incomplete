[
    {
        "line": 12,
        "fullcodeline": "res = try_create_file(state, path, mode, buf, size);"
    },
    {
        "line": 13,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 15,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 18,
        "fullcodeline": "if (errno == ENOENT) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (errno == EEXIST || errno == EACCES) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (errno == EEXIST) {"
    },
    {
        "line": 57,
        "fullcodeline": "return error_errno(_(\"unable to write file '%s' mode %o\"),"
    },
    {
        "line": 21,
        "fullcodeline": "res = try_create_file(state, path, mode, buf, size);"
    },
    {
        "line": 38,
        "fullcodeline": "unsigned int nr = getpid();"
    },
    {
        "line": 14,
        "fullcodeline": "return -1;"
    },
    {
        "line": 19,
        "fullcodeline": "if (safe_create_leading_directories_no_share(path))"
    },
    {
        "line": 22,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 24,
        "fullcodeline": "if (!res)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!lstat(path, &st) && (!S_ISDIR(st.st_mode) || !rmdir(path)))"
    },
    {
        "line": 34,
        "fullcodeline": "errno = EEXIST;"
    },
    {
        "line": 41,
        "fullcodeline": "char newpath[PATH_MAX];"
    },
    {
        "line": 42,
        "fullcodeline": "mksnpath(newpath, sizeof(newpath), \"%s~%u\", path, nr);"
    },
    {
        "line": 43,
        "fullcodeline": "res = try_create_file(state, newpath, mode, buf, size);"
    },
    {
        "line": 54,
        "fullcodeline": "++nr;"
    },
    {
        "line": 23,
        "fullcodeline": "return -1;"
    },
    {
        "line": 44,
        "fullcodeline": "if (res < 0)"
    },
    {
        "line": 46,
        "fullcodeline": "if (!res) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (errno != EEXIST)"
    },
    {
        "line": 49,
        "fullcodeline": "unlink_or_warn(newpath);"
    },
    {
        "line": 45,
        "fullcodeline": "return -1;"
    },
    {
        "line": 47,
        "fullcodeline": "if (!rename(newpath, path))"
    }
]