[
    {
        "line": 13,
        "fullcodeline": "checkout = checkout_with_item_for_cc"
    },
    {
        "line": 14,
        "fullcodeline": "checkout.shipping_address = Address.objects.create(country=\"US\")"
    },
    {
        "line": 15,
        "fullcodeline": "checkout.save()"
    },
    {
        "line": 16,
        "fullcodeline": "manager = get_plugins_manager(allow_replica=False)"
    },
    {
        "line": 18,
        "fullcodeline": "checkout_info = fetch_checkout_info(checkout, lines, manager)"
    },
    {
        "line": 20,
        "fullcodeline": "shipping_method_data = delivery_method"
    },
    {
        "line": 26,
        "fullcodeline": "query = MUTATION_UPDATE_DELIVERY_METHOD"
    },
    {
        "line": 27,
        "fullcodeline": "mock_clean_delivery.return_value = is_valid_delivery_method"
    },
    {
        "line": 29,
        "fullcodeline": "method_id = graphene.Node.to_global_id(node_name, delivery_method.id)"
    },
    {
        "line": 32,
        "fullcodeline": "response = api_client.post_graphql("
    },
    {
        "line": 37,
        "fullcodeline": "data = get_graphql_content(response)[\"data\"][\"checkoutDeliveryMethodUpdate\"]"
    },
    {
        "line": 38,
        "fullcodeline": "checkout.refresh_from_db()"
    },
    {
        "line": 40,
        "fullcodeline": "mock_clean_delivery.assert_called_once_with("
    },
    {
        "line": 43,
        "fullcodeline": "errors = data[\"errors\"]"
    },
    {
        "line": 17,
        "fullcodeline": "lines, _ = fetch_checkout_lines(checkout)"
    },
    {
        "line": 21,
        "fullcodeline": "if attribute_name == \"shipping_method\":"
    },
    {
        "line": 22,
        "fullcodeline": "shipping_method_data = convert_to_shipping_method_data("
    },
    {
        "line": 45,
        "fullcodeline": "assert not errors"
    },
    {
        "line": 46,
        "fullcodeline": "assert getattr(checkout, attribute_name) == delivery_method"
    },
    {
        "line": 33,
        "fullcodeline": "query, {\"id\": to_global_id_or_none(checkout), \"deliveryMethodId\": method_id}"
    },
    {
        "line": 48,
        "fullcodeline": "assert len(errors) == 1"
    },
    {
        "line": 49,
        "fullcodeline": "assert errors[0][\"field\"] == \"deliveryMethodId\""
    },
    {
        "line": 51,
        "fullcodeline": "errors[0][\"code\"] == CheckoutErrorCode.DELIVERY_METHOD_NOT_APPLICABLE.name"
    },
    {
        "line": 53,
        "fullcodeline": "assert checkout.shipping_method is None"
    },
    {
        "line": 54,
        "fullcodeline": "assert checkout.collection_point is None"
    },
    {
        "line": 24,
        "fullcodeline": "delivery_method.channel_listings.get(),"
    }
]