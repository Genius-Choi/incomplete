[
    {
        "line": 16,
        "fullcodeline": "my_file = tmp_path / \"<img src=0 onerror=alert(1)>.txt\""
    },
    {
        "line": 17,
        "fullcodeline": "my_dir = tmp_path / \"<img src=0 onerror=alert(1)>.dir\""
    },
    {
        "line": 18,
        "fullcodeline": "my_dir.mkdir()"
    },
    {
        "line": 19,
        "fullcodeline": "my_file_in_dir = my_dir / \"my_file_in_dir\""
    },
    {
        "line": 27,
        "fullcodeline": "app = web.Application()"
    },
    {
        "line": 31,
        "fullcodeline": "client = await aiohttp_client(app)"
    },
    {
        "line": 21,
        "fullcodeline": "with my_file.open(\"w\") as fw:"
    },
    {
        "line": 24,
        "fullcodeline": "with my_file_in_dir.open(\"w\") as fw:"
    },
    {
        "line": 30,
        "fullcodeline": "app.router.add_static(prefix, str(tmp_path), show_index=show_index)"
    },
    {
        "line": 34,
        "fullcodeline": "async with await client.get(request_path) as r:"
    },
    {
        "line": 22,
        "fullcodeline": "fw.write(\"hello\")"
    },
    {
        "line": 25,
        "fullcodeline": "fw.write(\"world\")"
    },
    {
        "line": 35,
        "fullcodeline": "assert r.status == status"
    },
    {
        "line": 38,
        "fullcodeline": "assert r.headers[\"Content-Type\"] == \"text/html; charset=utf-8\""
    },
    {
        "line": 39,
        "fullcodeline": "read_ = await r.read()"
    },
    {
        "line": 40,
        "fullcodeline": "assert read_ == data"
    }
]