[
    {
        "line": 3,
        "fullcodeline": "int res = -ENOMEM;"
    },
    {
        "line": 7,
        "fullcodeline": "req = kmalloc(sizeof(struct async_req), GFP_ATOMIC);"
    },
    {
        "line": 10,
        "fullcodeline": "async_urb = usb_alloc_urb(0, GFP_ATOMIC);"
    },
    {
        "line": 15,
        "fullcodeline": "req->rx_creg = cpu_to_le16(reg);"
    },
    {
        "line": 16,
        "fullcodeline": "req->dr.bRequestType = RTL8150_REQT_WRITE;"
    },
    {
        "line": 17,
        "fullcodeline": "req->dr.bRequest = RTL8150_REQ_SET_REGS;"
    },
    {
        "line": 18,
        "fullcodeline": "req->dr.wIndex = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "req->dr.wValue = cpu_to_le16(indx);"
    },
    {
        "line": 20,
        "fullcodeline": "req->dr.wLength = cpu_to_le16(size);"
    },
    {
        "line": 21,
        "fullcodeline": "usb_fill_control_urb(async_urb, dev->udev,"
    },
    {
        "line": 24,
        "fullcodeline": "res = usb_submit_urb(async_urb, GFP_ATOMIC);"
    },
    {
        "line": 8,
        "fullcodeline": "if (req == NULL)"
    },
    {
        "line": 11,
        "fullcodeline": "if (async_urb == NULL) {"
    },
    {
        "line": 22,
        "fullcodeline": "usb_sndctrlpipe(dev->udev, 0), (void *)&req->dr,"
    },
    {
        "line": 12,
        "fullcodeline": "kfree(req);"
    },
    {
        "line": 28,
        "fullcodeline": "dev_err(&dev->udev->dev, \"%s failed with %d\\n\", __func__, res);"
    },
    {
        "line": 26,
        "fullcodeline": "if (res == -ENODEV)"
    },
    {
        "line": 27,
        "fullcodeline": "netif_device_detach(dev->netdev);"
    }
]