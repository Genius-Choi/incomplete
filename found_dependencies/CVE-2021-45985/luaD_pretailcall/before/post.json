[
    {
        "line": 4,
        "fullcodeline": "switch (ttypetag(s2v(func))) {"
    },
    {
        "line": 6,
        "fullcodeline": "return precallC(L, func, LUA_MULTRET, clCvalue(s2v(func))->f);"
    },
    {
        "line": 8,
        "fullcodeline": "return precallC(L, func, LUA_MULTRET, fvalue(s2v(func)));"
    },
    {
        "line": 11,
        "fullcodeline": "int fsize = p->maxstacksize;  /* frame size */"
    },
    {
        "line": 12,
        "fullcodeline": "int nfixparams = p->numparams;"
    },
    {
        "line": 14,
        "fullcodeline": "ci->func -= delta;  /* restore 'func' (if vararg) */"
    },
    {
        "line": 17,
        "fullcodeline": "checkstackGC(L, fsize);"
    },
    {
        "line": 18,
        "fullcodeline": "func = ci->func;  /* moved-down function */"
    },
    {
        "line": 21,
        "fullcodeline": "ci->top = func + 1 + fsize;  /* top for new function */"
    },
    {
        "line": 22,
        "fullcodeline": "lua_assert(ci->top <= L->stack_last);"
    },
    {
        "line": 23,
        "fullcodeline": "ci->u.l.savedpc = p->code;  /* starting point */"
    },
    {
        "line": 24,
        "fullcodeline": "ci->callstatus |= CIST_TAIL;"
    },
    {
        "line": 25,
        "fullcodeline": "L->top = func + narg1;  /* set top */"
    },
    {
        "line": 29,
        "fullcodeline": "func = luaD_tryfuncTM(L, func);  /* try to get '__call' metamethod */"
    },
    {
        "line": 31,
        "fullcodeline": "narg1++;"
    },
    {
        "line": 15,
        "fullcodeline": "for (i = 0; i < narg1; i++)  /* move down function and arguments */"
    },
    {
        "line": 16,
        "fullcodeline": "setobjs2s(L, ci->func + i, func + i);"
    },
    {
        "line": 19,
        "fullcodeline": "for (; narg1 <= nfixparams; narg1++)"
    },
    {
        "line": 20,
        "fullcodeline": "setnilvalue(s2v(func + narg1));  /* complete missing arguments */"
    },
    {
        "line": 26,
        "fullcodeline": "return -1;"
    },
    {
        "line": 10,
        "fullcodeline": "Proto *p = clLvalue(s2v(func))->p;"
    }
]