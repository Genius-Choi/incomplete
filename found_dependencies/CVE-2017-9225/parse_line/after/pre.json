[
    {
        "line": 2,
        "fullcodeline": "s = s.rstrip()"
    },
    {
        "line": 4,
        "fullcodeline": "r = re.sub(REG_LINE_GPERF, '', s)"
    },
    {
        "line": 6,
        "fullcodeline": "r = re.sub(REG_HASH_FUNC, 'hash(OnigCodePoint codes[])', s)"
    },
    {
        "line": 8,
        "fullcodeline": "r = re.sub(REG_STR_AT, 'onig_codes_byte_at(codes, \\\\1)', s)"
    },
    {
        "line": 10,
        "fullcodeline": "r = re.sub(REG_UNFOLD_KEY, 'unicode_unfold_key(OnigCodePoint code)', s)"
    },
    {
        "line": 12,
        "fullcodeline": "r = re.sub(REG_ENTRY, '{\\\\1, \\\\2, \\\\3}', s)"
    },
    {
        "line": 14,
        "fullcodeline": "r = re.sub(REG_EMPTY_ENTRY, '{0xffffffff, \\\\1, \\\\2}', s)"
    },
    {
        "line": 16,
        "fullcodeline": "r = re.sub(REG_IF_LEN, 'if (0 == 0)', s)"
    },
    {
        "line": 18,
        "fullcodeline": "r = re.sub(REG_GET_HASH, 'int key = hash(&code);', s)"
    },
    {
        "line": 20,
        "fullcodeline": "r = re.sub(REG_GET_CODE, 'OnigCodePoint gcode = wordlist[key].code;', s)"
    },
    {
        "line": 22,
        "fullcodeline": "r = re.sub(REG_CODE_CHECK, 'if (code == gcode && wordlist[key].index >= 0)', s)"
    },
    {
        "line": 5,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 7,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 9,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 11,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 13,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 15,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 17,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 19,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 21,
        "fullcodeline": "if r != s: return r"
    },
    {
        "line": 23,
        "fullcodeline": "if r != s: return r"
    }
]