[
    {
        "line": 7,
        "fullcodeline": "int dims[] = {batch_size, data_size, 1};"
    },
    {
        "line": 8,
        "fullcodeline": "int strides[] = {dims[1] * dims[2], dims[2], 1};"
    },
    {
        "line": 9,
        "fullcodeline": "TensorDescriptor tensor_desc = CreateTensorDescriptor();"
    },
    {
        "line": 4,
        "fullcodeline": "if (max_seq_length <= 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "RETURN_IF_CUDNN_ERROR(cudnnSetTensorNdDescriptor("
    },
    {
        "line": 14,
        "fullcodeline": "return CudnnRnnSequenceTensorDescriptor(parent, max_seq_length, batch_size,"
    },
    {
        "line": 11,
        "fullcodeline": "/*tensorDesc=*/tensor_desc.get(), /*dataType=*/data_type,"
    },
    {
        "line": 17,
        "fullcodeline": "std::move(tensor_desc));"
    },
    {
        "line": 5,
        "fullcodeline": "return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");"
    }
]