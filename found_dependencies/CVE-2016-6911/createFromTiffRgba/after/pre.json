[
    {
        "line": 5,
        "fullcodeline": "int alphaBlendingFlag = 0;"
    },
    {
        "line": 7,
        "fullcodeline": "int width = im->sx;"
    },
    {
        "line": 8,
        "fullcodeline": "int height = im->sy;"
    },
    {
        "line": 16,
        "fullcodeline": "alphaBlendingFlag = im->alphaBlendingFlag;"
    },
    {
        "line": 17,
        "fullcodeline": "gdImageAlphaBlending(im, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "buffer = (uint32 *) gdCalloc(sizeof(uint32), width * height);"
    },
    {
        "line": 24,
        "fullcodeline": "success = TIFFReadRGBAImage(tif, width, height, buffer, 1);"
    },
    {
        "line": 20,
        "fullcodeline": "if (!buffer) {"
    },
    {
        "line": 27,
        "fullcodeline": "for(y = 0; y < height; y++) {"
    },
    {
        "line": 28,
        "fullcodeline": "for(x = 0; x < width; x++) {"
    },
    {
        "line": 31,
        "fullcodeline": "rgba = buffer[(y * width + x)];"
    },
    {
        "line": 32,
        "fullcodeline": "a = (0xff - TIFFGetA(rgba)) / 2;"
    },
    {
        "line": 33,
        "fullcodeline": "color = gdTrueColorAlpha(TIFFGetR(rgba), TIFFGetG(rgba), TIFFGetB(rgba), a);"
    },
    {
        "line": 36,
        "fullcodeline": "gdImageSetPixel(im, x, height - y - 1, color);"
    }
]