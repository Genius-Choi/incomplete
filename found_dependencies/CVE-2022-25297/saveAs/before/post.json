[
    {
        "line": 3,
        "fullcodeline": "assert(!fileName.empty());"
    },
    {
        "line": 4,
        "fullcodeline": "filesystem::path fsFileName(utils::toNativePath(fileName));"
    },
    {
        "line": 5,
        "fullcodeline": "if (!fsFileName.is_absolute() && (!fsFileName.has_parent_path() ||"
    },
    {
        "line": 13,
        "fullcodeline": "if (fsFileName.has_parent_path() &&"
    },
    {
        "line": 25,
        "fullcodeline": "return saveTo(fsFileName);"
    },
    {
        "line": 9,
        "fullcodeline": "filesystem::path fsUploadPath(utils::toNativePath("
    },
    {
        "line": 11,
        "fullcodeline": "fsFileName = fsUploadPath / fsFileName;"
    },
    {
        "line": 14,
        "fullcodeline": "!filesystem::exists(fsFileName.parent_path()))"
    },
    {
        "line": 16,
        "fullcodeline": "LOG_TRACE << \"create path:\" << fsFileName.parent_path();"
    },
    {
        "line": 18,
        "fullcodeline": "filesystem::create_directories(fsFileName.parent_path(), err);"
    },
    {
        "line": 6,
        "fullcodeline": "(fsFileName.begin()->string() != \".\" &&"
    },
    {
        "line": 7,
        "fullcodeline": "fsFileName.begin()->string() != \"..\")))"
    },
    {
        "line": 10,
        "fullcodeline": "HttpAppFrameworkImpl::instance().getUploadPath()));"
    },
    {
        "line": 22,
        "fullcodeline": "return -1;"
    }
]