[
    {
        "line": 2,
        "fullcodeline": "ptrdiff_t oldtop = savestack(L, L->top);  /* hook may change top */"
    },
    {
        "line": 3,
        "fullcodeline": "int delta = 0;"
    },
    {
        "line": 4,
        "fullcodeline": "if (isLuacode(ci)) {"
    },
    {
        "line": 11,
        "fullcodeline": "if (L->hookmask & LUA_MASKRET) {  /* is return hook on? */"
    },
    {
        "line": 18,
        "fullcodeline": "if (isLua(ci->previous))"
    },
    {
        "line": 20,
        "fullcodeline": "return restorestack(L, oldtop);"
    },
    {
        "line": 13,
        "fullcodeline": "ci->func += delta;  /* if vararg, back to virtual 'func' */"
    },
    {
        "line": 15,
        "fullcodeline": "luaD_hook(L, LUA_HOOKRET, -1, ftransfer, nres);  /* call it */"
    },
    {
        "line": 16,
        "fullcodeline": "ci->func -= delta;"
    },
    {
        "line": 8,
        "fullcodeline": "if (L->top < ci->top)"
    },
    {
        "line": 5,
        "fullcodeline": "Proto *p = clLvalue(s2v(ci->func))->p;"
    },
    {
        "line": 7,
        "fullcodeline": "delta = ci->u.l.nextraargs + p->numparams + 1;"
    },
    {
        "line": 9,
        "fullcodeline": "L->top = ci->top;  /* correct top to run hook */"
    }
]