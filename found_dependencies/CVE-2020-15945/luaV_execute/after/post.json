[
    {
        "line": 11,
        "fullcodeline": "trap = L->hookmask;"
    },
    {
        "line": 12,
        "fullcodeline": "cl = clLvalue(s2v(ci->func));"
    },
    {
        "line": 22,
        "fullcodeline": "base = ci->func + 1;"
    },
    {
        "line": 20,
        "fullcodeline": "ci->u.l.trap = 1;  /* there may be other hooks */"
    },
    {
        "line": 27,
        "fullcodeline": "vmfetch();"
    },
    {
        "line": 28,
        "fullcodeline": "lua_assert(base == ci->func + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "lua_assert(base <= L->top && L->top < L->stack + L->stacksize);"
    },
    {
        "line": 31,
        "fullcodeline": "lua_assert(isIT(i) || (cast_void(L->top = base), 1));"
    },
    {
        "line": 17,
        "fullcodeline": "trap = 0;  /* hooks will start after VARARGPREP instruction */"
    },
    {
        "line": 18,
        "fullcodeline": "else if (pc == cl->p->code)  /* first instruction (not resuming)? */"
    },
    {
        "line": 19,
        "fullcodeline": "luaD_hookcall(L, ci);"
    }
]