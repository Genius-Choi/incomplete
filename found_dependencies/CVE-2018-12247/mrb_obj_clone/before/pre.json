[
    {
        "line": 12,
        "fullcodeline": "p = (struct RObject*)mrb_obj_alloc(mrb, mrb_type(self), mrb_obj_class(mrb, self));"
    },
    {
        "line": 13,
        "fullcodeline": "p->c = mrb_singleton_class_clone(mrb, self);"
    },
    {
        "line": 14,
        "fullcodeline": "mrb_field_write_barrier(mrb, (struct RBasic*)p, (struct RBasic*)p->c);"
    },
    {
        "line": 15,
        "fullcodeline": "clone = mrb_obj_value(p);"
    },
    {
        "line": 16,
        "fullcodeline": "init_copy(mrb, clone, self);"
    },
    {
        "line": 17,
        "fullcodeline": "p->flags = mrb_obj_ptr(self)->flags;"
    },
    {
        "line": 6,
        "fullcodeline": "if (mrb_immediate_p(self)) {"
    },
    {
        "line": 9,
        "fullcodeline": "if (mrb_type(self) == MRB_TT_SCLASS) {"
    },
    {
        "line": 7,
        "fullcodeline": "mrb_raisef(mrb, E_TYPE_ERROR, \"can't clone %S\", self);"
    },
    {
        "line": 10,
        "fullcodeline": "mrb_raise(mrb, E_TYPE_ERROR, \"can't clone singleton class\");"
    }
]