[
    {
        "line": 2,
        "fullcodeline": "ut64 addr = core->offset;"
    },
    {
        "line": 5,
        "fullcodeline": "r_core_cmd_help (core, help_msg_CC);"
    },
    {
        "line": 11,
        "fullcodeline": "if (input[2]=='?') {"
    },
    {
        "line": 42,
        "fullcodeline": "ut64 at = input[2]? r_num_math (core->num, input + 2): addr;"
    },
    {
        "line": 43,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, at);"
    },
    {
        "line": 93,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 94,
        "fullcodeline": "char *out = r_core_editor (core, NULL, comment);"
    },
    {
        "line": 109,
        "fullcodeline": "const char *newcomment = r_str_trim_head_ro (input + 2);"
    },
    {
        "line": 110,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 112,
        "fullcodeline": "char *nc = strdup (newcomment);"
    },
    {
        "line": 113,
        "fullcodeline": "r_str_unescape (nc);"
    },
    {
        "line": 114,
        "fullcodeline": "r_str_ansi_strip (nc);"
    },
    {
        "line": 144,
        "fullcodeline": "if (input[2] == '*') { // \"CC-*\""
    },
    {
        "line": 157,
        "fullcodeline": "const char *arg = input + 2;"
    },
    {
        "line": 181,
        "fullcodeline": "s = strchr (input, ' ');"
    },
    {
        "line": 189,
        "fullcodeline": "p = strchr (s, ' ');"
    },
    {
        "line": 206,
        "fullcodeline": "addr = r_num_math (core->num, s);"
    },
    {
        "line": 158,
        "fullcodeline": "while (*arg && *arg == ' ') arg++;"
    },
    {
        "line": 194,
        "fullcodeline": "if (input[2] == '-') {"
    },
    {
        "line": 56,
        "fullcodeline": "ut64 arg = r_num_math (core->num, input + 2);"
    },
    {
        "line": 60,
        "fullcodeline": "RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, arg, 0);"
    },
    {
        "line": 96,
        "fullcodeline": "r_str_ansi_strip (out);"
    },
    {
        "line": 100,
        "fullcodeline": "r_meta_set_string (core->anal,"
    },
    {
        "line": 116,
        "fullcodeline": "text = malloc (strlen (comment) + strlen (newcomment) + 2);"
    },
    {
        "line": 159,
        "fullcodeline": "if (!strncmp (arg, \"base64:\", 7)) {"
    },
    {
        "line": 160,
        "fullcodeline": "char *s = (char *)sdb_decode (arg + 7, NULL);"
    },
    {
        "line": 170,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 183,
        "fullcodeline": "s = strdup (s + 1);"
    },
    {
        "line": 13,
        "fullcodeline": "} else if (input[2] == ' ') {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!arg) {"
    },
    {
        "line": 127,
        "fullcodeline": "r_meta_set_string (core->anal, R_META_TYPE_COMMENT, addr, nc);"
    },
    {
        "line": 167,
        "fullcodeline": "newcomment = strdup (arg);"
    },
    {
        "line": 185,
        "fullcodeline": "eprintf (\"Usage: CCa [address] [comment]\\n\");"
    },
    {
        "line": 186,
        "fullcodeline": "eprintf (\"Usage: CCa-[address]\\n\");"
    },
    {
        "line": 14,
        "fullcodeline": "const char *fn = input + 2;"
    },
    {
        "line": 15,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 16,
        "fullcodeline": "fn = r_str_trim_head_ro (fn);"
    },
    {
        "line": 58,
        "fullcodeline": "arg = core->offset;"
    },
    {
        "line": 64,
        "fullcodeline": "r_list_foreach (fcn->bbs, iter, bb) {"
    },
    {
        "line": 118,
        "fullcodeline": "strcpy (text, comment);"
    },
    {
        "line": 119,
        "fullcodeline": "strcat (text, \" \");"
    },
    {
        "line": 120,
        "fullcodeline": "strcat (text, nc);"
    },
    {
        "line": 121,
        "fullcodeline": "r_meta_set_string (core->anal, R_META_TYPE_COMMENT, addr, text);"
    },
    {
        "line": 128,
        "fullcodeline": "if (r_config_get_b (core->config, \"cmd.undo\")) {"
    },
    {
        "line": 147,
        "fullcodeline": "ut64 arg = r_num_math (core->num, input + 2);"
    },
    {
        "line": 162,
        "fullcodeline": "newcomment = s;"
    },
    {
        "line": 171,
        "fullcodeline": "if (!comment || (comment && !strstr (comment, newcomment))) {"
    },
    {
        "line": 172,
        "fullcodeline": "r_meta_set_string (core->anal, R_META_TYPE_COMMENT, addr, newcomment);"
    },
    {
        "line": 191,
        "fullcodeline": "*p++ = 0;"
    },
    {
        "line": 196,
        "fullcodeline": "addr = r_num_math (core->num, input+3);"
    },
    {
        "line": 210,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 17,
        "fullcodeline": "if (comment && *comment) {"
    },
    {
        "line": 28,
        "fullcodeline": "const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);"
    },
    {
        "line": 131,
        "fullcodeline": "RCoreUndo *uc = r_core_undo_new (core->offset, b, a);"
    },
    {
        "line": 164,
        "fullcodeline": "newcomment = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "char *nc = r_str_newf (\"%s ,(%s)\", comment, fn);"
    },
    {
        "line": 20,
        "fullcodeline": "r_meta_set_string (core->anal, R_META_TYPE_COMMENT, addr, nc);"
    },
    {
        "line": 29,
        "fullcodeline": "if (comment && *comment) {"
    },
    {
        "line": 66,
        "fullcodeline": "for (i = 0; i < bb->size; i++) {"
    },
    {
        "line": 212,
        "fullcodeline": "char *text = r_str_newf (\"%s\\n%s\", comment, p);"
    },
    {
        "line": 213,
        "fullcodeline": "r_meta_set (core->anal, R_META_TYPE_COMMENT, addr, 1, text);"
    },
    {
        "line": 23,
        "fullcodeline": "char *newcomment = r_str_newf (\",(%s)\", fn);"
    },
    {
        "line": 24,
        "fullcodeline": "r_meta_set_string (core->anal, R_META_TYPE_COMMENT, addr, newcomment);"
    },
    {
        "line": 30,
        "fullcodeline": "char *cmtfile = r_str_between (comment, \",(\", \")\");"
    },
    {
        "line": 67,
        "fullcodeline": "ut64 addr = bb->addr + i;"
    },
    {
        "line": 31,
        "fullcodeline": "if (cmtfile && *cmtfile) {"
    },
    {
        "line": 32,
        "fullcodeline": "char *cwd = getcommapath (core);"
    }
]