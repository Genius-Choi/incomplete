[
    {
        "line": 5,
        "fullcodeline": "r_return_val_if_fail (def && value && hdr && obuf, NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "value->attr_form = def->attr_form;"
    },
    {
        "line": 8,
        "fullcodeline": "value->attr_name = def->attr_name;"
    },
    {
        "line": 9,
        "fullcodeline": "value->block.data = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "value->string.content = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "value->string.offset = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "const ut8 *buf = obuf;"
    },
    {
        "line": 15,
        "fullcodeline": "const ut8 *buf_end = obuf + obuf_len;"
    },
    {
        "line": 18,
        "fullcodeline": "if (obuf_len < 1) {"
    },
    {
        "line": 25,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 45,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 46,
        "fullcodeline": "value->uconstant = READ8 (buf);"
    },
    {
        "line": 49,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 50,
        "fullcodeline": "value->uconstant = READ16 (buf);"
    },
    {
        "line": 53,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 54,
        "fullcodeline": "value->uconstant = READ32 (buf);"
    },
    {
        "line": 57,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 58,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 61,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 62,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 63,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 66,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 67,
        "fullcodeline": "buf = r_leb128 (buf, buf_end - buf, &value->sconstant);"
    },
    {
        "line": 70,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 71,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->uconstant, NULL);"
    },
    {
        "line": 74,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 75,
        "fullcodeline": "value->string.content = *buf ? r_str_ndup ((const char *)buf, buf_end - buf) : NULL;"
    },
    {
        "line": 81,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 82,
        "fullcodeline": "value->block.length = READ8 (buf);"
    },
    {
        "line": 83,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 86,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 87,
        "fullcodeline": "value->block.length = READ16 (buf);"
    },
    {
        "line": 99,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 100,
        "fullcodeline": "value->block.length = READ32 (buf);"
    },
    {
        "line": 101,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 104,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 105,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->block.length, NULL);"
    },
    {
        "line": 109,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 112,
        "fullcodeline": "value->kind = DW_AT_KIND_FLAG;"
    },
    {
        "line": 113,
        "fullcodeline": "value->flag = READ (buf, ut8);"
    },
    {
        "line": 117,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 118,
        "fullcodeline": "value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 128,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 129,
        "fullcodeline": "value->reference = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 134,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 135,
        "fullcodeline": "value->reference = hdr->unit_offset + READ8 (buf);"
    },
    {
        "line": 138,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 139,
        "fullcodeline": "value->reference = hdr->unit_offset + READ16 (buf);"
    },
    {
        "line": 142,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 143,
        "fullcodeline": "value->reference = hdr->unit_offset + READ32 (buf);"
    },
    {
        "line": 146,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 147,
        "fullcodeline": "value->reference = hdr->unit_offset + READ64 (buf);"
    },
    {
        "line": 150,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 152,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->reference, NULL);"
    },
    {
        "line": 153,
        "fullcodeline": "value->reference += hdr->unit_offset;"
    },
    {
        "line": 157,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 158,
        "fullcodeline": "value->reference = dwarf_read_offset(hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 161,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 162,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->block.length, NULL);"
    },
    {
        "line": 166,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 170,
        "fullcodeline": "value->kind = DW_AT_KIND_FLAG;"
    },
    {
        "line": 171,
        "fullcodeline": "value->flag = true;"
    },
    {
        "line": 174,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 175,
        "fullcodeline": "value->reference = READ64 (buf);"
    },
    {
        "line": 179,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 189,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 190,
        "fullcodeline": "value->string.offset = READ8 (buf);"
    },
    {
        "line": 193,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 194,
        "fullcodeline": "value->string.offset = READ16 (buf);"
    },
    {
        "line": 197,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 198,
        "fullcodeline": "buf += 3;"
    },
    {
        "line": 201,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 202,
        "fullcodeline": "value->string.offset = READ32 (buf);"
    },
    {
        "line": 205,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 206,
        "fullcodeline": "value->uconstant = def->special;"
    },
    {
        "line": 212,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 213,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->address, NULL);"
    },
    {
        "line": 216,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 217,
        "fullcodeline": "value->address = READ8 (buf);"
    },
    {
        "line": 220,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 221,
        "fullcodeline": "value->address = READ16 (buf);"
    },
    {
        "line": 225,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 226,
        "fullcodeline": "buf += 3;"
    },
    {
        "line": 229,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 230,
        "fullcodeline": "value->address = READ32 (buf);"
    },
    {
        "line": 234,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 235,
        "fullcodeline": "value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 242,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 243,
        "fullcodeline": "value->reference = READ32 (buf);"
    },
    {
        "line": 246,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 247,
        "fullcodeline": "value->reference = READ64 (buf);"
    },
    {
        "line": 251,
        "fullcodeline": "value->kind = DW_AT_KIND_LOCLISTPTR;"
    },
    {
        "line": 252,
        "fullcodeline": "value->reference = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 256,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 257,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->address, NULL);"
    },
    {
        "line": 260,
        "fullcodeline": "value->uconstant = 0;"
    },
    {
        "line": 264,
        "fullcodeline": "value->uconstant = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "if (value->block.length > 0) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (!buf || buf >= buf_end) {"
    },
    {
        "line": 119,
        "fullcodeline": "if (debug_str && value->string.offset < debug_str_len) {"
    },
    {
        "line": 163,
        "fullcodeline": "if (!buf || buf >= buf_end) {"
    },
    {
        "line": 28,
        "fullcodeline": "value->address = READ8 (buf);"
    },
    {
        "line": 31,
        "fullcodeline": "value->address = READ16 (buf);"
    },
    {
        "line": 34,
        "fullcodeline": "value->address = READ32 (buf);"
    },
    {
        "line": 37,
        "fullcodeline": "value->address = READ64 (buf);"
    },
    {
        "line": 40,
        "fullcodeline": "R_LOG_WARN (\"DWARF: Unexpected pointer size: %u\", (unsigned)hdr->address_size);"
    },
    {
        "line": 77,
        "fullcodeline": "buf += strlen (value->string.content) + 1;"
    },
    {
        "line": 89,
        "fullcodeline": "value->block.data = calloc (sizeof (ut8), value->block.length);"
    },
    {
        "line": 120,
        "fullcodeline": "const char *ds = (const char *)(debug_str + value->string.offset);"
    },
    {
        "line": 121,
        "fullcodeline": "value->string.content = strdup (ds); // r_str_ndup (ds, debug_str_len - value->string.offset);"
    },
    {
        "line": 90,
        "fullcodeline": "if (!value->block.data) {"
    },
    {
        "line": 93,
        "fullcodeline": "for (j = 0; j < value->block.length; j++) {"
    },
    {
        "line": 123,
        "fullcodeline": "value->string.content = NULL; // Means malformed DWARF, should we print error message?"
    },
    {
        "line": 94,
        "fullcodeline": "value->block.data[j] = READ (buf, ut8);"
    }
]