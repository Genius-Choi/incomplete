[
    {
        "line": 5,
        "fullcodeline": "r_return_val_if_fail (def && value && hdr && obuf, NULL);"
    },
    {
        "line": 7,
        "fullcodeline": "value->attr_form = def->attr_form;"
    },
    {
        "line": 8,
        "fullcodeline": "value->attr_name = def->attr_name;"
    },
    {
        "line": 9,
        "fullcodeline": "value->block.data = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "value->string.content = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "value->string.offset = 0;"
    },
    {
        "line": 14,
        "fullcodeline": "const ut8 *buf = obuf;"
    },
    {
        "line": 15,
        "fullcodeline": "const ut8 *buf_end = obuf + obuf_len;"
    },
    {
        "line": 18,
        "fullcodeline": "if (obuf_len < 1) {"
    },
    {
        "line": 25,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 45,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 46,
        "fullcodeline": "value->uconstant = READ8 (buf);"
    },
    {
        "line": 49,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 50,
        "fullcodeline": "value->uconstant = READ16 (buf);"
    },
    {
        "line": 53,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 54,
        "fullcodeline": "value->uconstant = READ32 (buf);"
    },
    {
        "line": 57,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 58,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 61,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 62,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 63,
        "fullcodeline": "value->uconstant = READ64 (buf);"
    },
    {
        "line": 66,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 67,
        "fullcodeline": "buf = r_leb128 (buf, buf_end - buf, &value->sconstant);"
    },
    {
        "line": 70,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 71,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->uconstant, NULL);"
    },
    {
        "line": 74,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 89,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 90,
        "fullcodeline": "value->block.length = READ8 (buf);"
    },
    {
        "line": 91,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 94,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 95,
        "fullcodeline": "value->block.length = READ16 (buf);"
    },
    {
        "line": 107,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 108,
        "fullcodeline": "value->block.length = READ32 (buf);"
    },
    {
        "line": 109,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 112,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 113,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->block.length, NULL);"
    },
    {
        "line": 117,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 120,
        "fullcodeline": "value->kind = DW_AT_KIND_FLAG;"
    },
    {
        "line": 121,
        "fullcodeline": "value->flag = READ (buf, ut8);"
    },
    {
        "line": 125,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 126,
        "fullcodeline": "value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 143,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 144,
        "fullcodeline": "value->reference = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 149,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 150,
        "fullcodeline": "value->reference = hdr->unit_offset + READ8 (buf);"
    },
    {
        "line": 153,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 154,
        "fullcodeline": "value->reference = hdr->unit_offset + READ16 (buf);"
    },
    {
        "line": 157,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 158,
        "fullcodeline": "value->reference = hdr->unit_offset + READ32 (buf);"
    },
    {
        "line": 161,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 162,
        "fullcodeline": "value->reference = hdr->unit_offset + READ64 (buf);"
    },
    {
        "line": 165,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 167,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->reference, NULL);"
    },
    {
        "line": 168,
        "fullcodeline": "value->reference += hdr->unit_offset;"
    },
    {
        "line": 172,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 173,
        "fullcodeline": "value->reference = dwarf_read_offset(hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 176,
        "fullcodeline": "value->kind = DW_AT_KIND_BLOCK;"
    },
    {
        "line": 177,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->block.length, NULL);"
    },
    {
        "line": 181,
        "fullcodeline": "buf = fill_block_data (buf, buf_end, &value->block);"
    },
    {
        "line": 185,
        "fullcodeline": "value->kind = DW_AT_KIND_FLAG;"
    },
    {
        "line": 186,
        "fullcodeline": "value->flag = true;"
    },
    {
        "line": 189,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 190,
        "fullcodeline": "value->reference = READ64 (buf);"
    },
    {
        "line": 194,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 204,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 205,
        "fullcodeline": "value->string.offset = READ8 (buf);"
    },
    {
        "line": 208,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 209,
        "fullcodeline": "value->string.offset = READ16 (buf);"
    },
    {
        "line": 212,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 213,
        "fullcodeline": "buf += 3;"
    },
    {
        "line": 216,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 217,
        "fullcodeline": "value->string.offset = READ32 (buf);"
    },
    {
        "line": 220,
        "fullcodeline": "value->kind = DW_AT_KIND_CONSTANT;"
    },
    {
        "line": 221,
        "fullcodeline": "value->uconstant = def->special;"
    },
    {
        "line": 227,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 228,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->address, NULL);"
    },
    {
        "line": 231,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 232,
        "fullcodeline": "value->address = READ8 (buf);"
    },
    {
        "line": 235,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 236,
        "fullcodeline": "value->address = READ16 (buf);"
    },
    {
        "line": 240,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 241,
        "fullcodeline": "buf += 3;"
    },
    {
        "line": 244,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 245,
        "fullcodeline": "value->address = READ32 (buf);"
    },
    {
        "line": 249,
        "fullcodeline": "value->kind = DW_AT_KIND_STRING;"
    },
    {
        "line": 250,
        "fullcodeline": "value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 257,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 258,
        "fullcodeline": "value->reference = READ32 (buf);"
    },
    {
        "line": 261,
        "fullcodeline": "value->kind = DW_AT_KIND_REFERENCE;"
    },
    {
        "line": 262,
        "fullcodeline": "value->reference = READ64 (buf);"
    },
    {
        "line": 266,
        "fullcodeline": "value->kind = DW_AT_KIND_LOCLISTPTR;"
    },
    {
        "line": 267,
        "fullcodeline": "value->reference = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);"
    },
    {
        "line": 271,
        "fullcodeline": "value->kind = DW_AT_KIND_ADDRESS;"
    },
    {
        "line": 272,
        "fullcodeline": "buf = r_uleb128 (buf, buf_end - buf, &value->address, NULL);"
    },
    {
        "line": 275,
        "fullcodeline": "value->uconstant = 0;"
    },
    {
        "line": 279,
        "fullcodeline": "value->uconstant = 0;"
    },
    {
        "line": 96,
        "fullcodeline": "if (value->block.length > 0) {"
    },
    {
        "line": 114,
        "fullcodeline": "if (!buf || buf >= buf_end) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (debug_str && value->string.offset < debug_str_len) {"
    },
    {
        "line": 178,
        "fullcodeline": "if (!buf || buf >= buf_end) {"
    },
    {
        "line": 28,
        "fullcodeline": "value->address = READ8 (buf);"
    },
    {
        "line": 31,
        "fullcodeline": "value->address = READ16 (buf);"
    },
    {
        "line": 34,
        "fullcodeline": "value->address = READ32 (buf);"
    },
    {
        "line": 37,
        "fullcodeline": "value->address = READ64 (buf);"
    },
    {
        "line": 40,
        "fullcodeline": "R_LOG_WARN (\"DWARF: Unexpected pointer size: %u\", (unsigned)hdr->address_size);"
    },
    {
        "line": 76,
        "fullcodeline": "char *name = r_str_ndup ((const char *)buf, buf_end - buf);"
    },
    {
        "line": 77,
        "fullcodeline": "r_str_ansi_strip (name);"
    },
    {
        "line": 78,
        "fullcodeline": "r_str_replace_ch (name, '\\n', 0, true);"
    },
    {
        "line": 79,
        "fullcodeline": "r_str_replace_ch (name, '\\t', 0, true);"
    },
    {
        "line": 80,
        "fullcodeline": "value->string.content = name;"
    },
    {
        "line": 85,
        "fullcodeline": "buf += strlen (value->string.content) + 1;"
    },
    {
        "line": 97,
        "fullcodeline": "value->block.data = calloc (sizeof (ut8), value->block.length);"
    },
    {
        "line": 128,
        "fullcodeline": "char *ds = r_str_ndup ((const char *)(debug_str + value->string.offset), debug_str_len);"
    },
    {
        "line": 82,
        "fullcodeline": "value->string.content = NULL;"
    },
    {
        "line": 98,
        "fullcodeline": "if (!value->block.data) {"
    },
    {
        "line": 101,
        "fullcodeline": "for (j = 0; j < value->block.length; j++) {"
    },
    {
        "line": 138,
        "fullcodeline": "value->string.content = NULL; // Means malformed DWARF, should we print error message?"
    },
    {
        "line": 102,
        "fullcodeline": "value->block.data[j] = READ (buf, ut8);"
    },
    {
        "line": 130,
        "fullcodeline": "r_str_ansi_strip (ds);"
    },
    {
        "line": 131,
        "fullcodeline": "r_str_replace_ch (ds, '\\n', 0, true);"
    },
    {
        "line": 132,
        "fullcodeline": "r_str_replace_ch (ds, '\\t', 0, true);"
    },
    {
        "line": 133,
        "fullcodeline": "value->string.content = ds;"
    },
    {
        "line": 135,
        "fullcodeline": "value->string.content = NULL;"
    }
]