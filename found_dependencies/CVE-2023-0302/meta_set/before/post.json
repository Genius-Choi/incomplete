[
    {
        "line": 5,
        "fullcodeline": "RSpace *space = r_spaces_current (&a->meta_spaces);"
    },
    {
        "line": 6,
        "fullcodeline": "RIntervalNode *node = find_node_at (a, type, space, from);"
    },
    {
        "line": 7,
        "fullcodeline": "RAnalMetaItem *item = node ? node->data : R_NEW0 (RAnalMetaItem);"
    },
    {
        "line": 11,
        "fullcodeline": "item->type = type;"
    },
    {
        "line": 12,
        "fullcodeline": "item->subtype = subtype;"
    },
    {
        "line": 13,
        "fullcodeline": "item->space = space;"
    },
    {
        "line": 14,
        "fullcodeline": "free (item->str);"
    },
    {
        "line": 15,
        "fullcodeline": "item->str = str ? strdup (str) : NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "R_DIRTY (a);"
    },
    {
        "line": 2,
        "fullcodeline": "if (to < from) {"
    },
    {
        "line": 8,
        "fullcodeline": "if (!item) {"
    },
    {
        "line": 16,
        "fullcodeline": "if (str && !item->str) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!node) {"
    },
    {
        "line": 24,
        "fullcodeline": "r_interval_tree_insert (&a->meta, from, to, item);"
    },
    {
        "line": 17,
        "fullcodeline": "if (!node) { // If we just created this"
    },
    {
        "line": 18,
        "fullcodeline": "free (item);"
    },
    {
        "line": 25,
        "fullcodeline": "} else if (node->end != to) {"
    },
    {
        "line": 26,
        "fullcodeline": "r_interval_tree_resize (&a->meta, node, from, to);"
    }
]