[
    {
        "line": 3,
        "fullcodeline": "if (input1->type == kTfLiteUInt8 || input1->type == kTfLiteInt8) {"
    },
    {
        "line": 4,
        "fullcodeline": "auto input1_offset = -input1->params.zero_point;"
    },
    {
        "line": 5,
        "fullcodeline": "auto input2_offset = -input2->params.zero_point;"
    },
    {
        "line": 6,
        "fullcodeline": "const int left_shift = 8;"
    },
    {
        "line": 12,
        "fullcodeline": "QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);"
    },
    {
        "line": 13,
        "fullcodeline": "QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);"
    },
    {
        "line": 16,
        "fullcodeline": "op_params.left_shift = left_shift;"
    },
    {
        "line": 17,
        "fullcodeline": "op_params.input1_offset = input1_offset;"
    },
    {
        "line": 18,
        "fullcodeline": "op_params.input1_multiplier = input1_multiplier;"
    },
    {
        "line": 19,
        "fullcodeline": "op_params.input1_shift = input1_shift;"
    },
    {
        "line": 20,
        "fullcodeline": "op_params.input2_offset = input2_offset;"
    },
    {
        "line": 21,
        "fullcodeline": "op_params.input2_multiplier = input2_multiplier;"
    },
    {
        "line": 22,
        "fullcodeline": "op_params.input2_shift = input2_shift;"
    },
    {
        "line": 24,
        "fullcodeline": "reference_ops::BroadcastComparison4DSlowWithScaling<input_dtype, opname>("
    },
    {
        "line": 25,
        "fullcodeline": "op_params, GetTensorShape(input1), GetTensorData<input_dtype>(input1),"
    },
    {
        "line": 26,
        "fullcodeline": "GetTensorShape(input2), GetTensorData<input_dtype>(input2),"
    },
    {
        "line": 27,
        "fullcodeline": "GetTensorShape(output), GetTensorData<bool>(output));"
    },
    {
        "line": 30,
        "fullcodeline": "op_params, GetTensorShape(input1), GetTensorData<input_dtype>(input1),"
    },
    {
        "line": 31,
        "fullcodeline": "GetTensorShape(input2), GetTensorData<input_dtype>(input2),"
    },
    {
        "line": 32,
        "fullcodeline": "GetTensorShape(output), GetTensorData<bool>(output));"
    }
]