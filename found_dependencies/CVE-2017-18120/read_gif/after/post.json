[
    {
        "line": 7,
        "fullcodeline": "int unknown_block_type = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "(void)gifgetc(grr);"
    },
    {
        "line": 14,
        "fullcodeline": "(void)gifgetc(grr);"
    },
    {
        "line": 15,
        "fullcodeline": "(void)gifgetc(grr);"
    },
    {
        "line": 17,
        "fullcodeline": "gfs = Gif_NewStream();"
    },
    {
        "line": 18,
        "fullcodeline": "gfi = Gif_NewImage();"
    },
    {
        "line": 20,
        "fullcodeline": "gfc.stream = gfs;"
    },
    {
        "line": 21,
        "fullcodeline": "gfc.prefix = Gif_NewArray(Gif_Code, GIF_MAX_CODE);"
    },
    {
        "line": 22,
        "fullcodeline": "gfc.suffix = Gif_NewArray(uint8_t, GIF_MAX_CODE);"
    },
    {
        "line": 23,
        "fullcodeline": "gfc.length = Gif_NewArray(uint16_t, GIF_MAX_CODE);"
    },
    {
        "line": 24,
        "fullcodeline": "gfc.handler = handler;"
    },
    {
        "line": 25,
        "fullcodeline": "gfc.gfi = gfi;"
    },
    {
        "line": 26,
        "fullcodeline": "gfc.errors[0] = gfc.errors[1] = 0;"
    },
    {
        "line": 30,
        "fullcodeline": "gfs->landmark = landmark;"
    },
    {
        "line": 32,
        "fullcodeline": "GIF_DEBUG((\"\\nGIF \"));"
    },
    {
        "line": 35,
        "fullcodeline": "GIF_DEBUG((\"logscrdesc \"));"
    },
    {
        "line": 119,
        "fullcodeline": "Gif_DeleteImage(gfi);"
    },
    {
        "line": 120,
        "fullcodeline": "Gif_DeleteArray(last_name);"
    },
    {
        "line": 121,
        "fullcodeline": "Gif_DeleteArray(gfc.prefix);"
    },
    {
        "line": 122,
        "fullcodeline": "Gif_DeleteArray(gfc.suffix);"
    },
    {
        "line": 123,
        "fullcodeline": "Gif_DeleteArray(gfc.length);"
    },
    {
        "line": 124,
        "fullcodeline": "gfc.gfi = 0;"
    },
    {
        "line": 125,
        "fullcodeline": "last_name = 0;"
    },
    {
        "line": 134,
        "fullcodeline": "gif_read_error(&gfc, -1, 0);"
    },
    {
        "line": 9,
        "fullcodeline": "if (gifgetc(grr) != 'G' ||"
    },
    {
        "line": 28,
        "fullcodeline": "if (!gfs || !gfi || !gfc.prefix || !gfc.suffix || !gfc.length)"
    },
    {
        "line": 33,
        "fullcodeline": "if (!read_logical_screen_descriptor(gfs, grr))"
    },
    {
        "line": 37,
        "fullcodeline": "while (!gifeof(grr)) {"
    },
    {
        "line": 109,
        "fullcodeline": "if (gfs && gfi) {"
    },
    {
        "line": 129,
        "fullcodeline": "if (gfs && gfc.errors[1] == 0"
    },
    {
        "line": 11,
        "fullcodeline": "gifgetc(grr) != 'F')"
    },
    {
        "line": 39,
        "fullcodeline": "uint8_t block = gifgetbyte(grr);"
    },
    {
        "line": 111,
        "fullcodeline": "gfs->end_comment = gfi->comment;"
    },
    {
        "line": 112,
        "fullcodeline": "gfi->comment = 0;"
    },
    {
        "line": 113,
        "fullcodeline": "gfs->end_extension_list = gfi->extension_list;"
    },
    {
        "line": 114,
        "fullcodeline": "gfi->extension_list = 0;"
    },
    {
        "line": 128,
        "fullcodeline": "gfs->errors = gfc.errors[1];"
    },
    {
        "line": 131,
        "fullcodeline": "&& !grr->eofer(grr))"
    },
    {
        "line": 132,
        "fullcodeline": "gif_read_error(&gfc, 0, \"trailing garbage after GIF ignored\");"
    },
    {
        "line": 10,
        "fullcodeline": "gifgetc(grr) != 'I' ||"
    },
    {
        "line": 115,
        "fullcodeline": "for (gfex = gfs->end_extension_list; gfex; gfex = gfex->next)"
    },
    {
        "line": 116,
        "fullcodeline": "gfex->image = NULL;"
    },
    {
        "line": 130,
        "fullcodeline": "&& !(read_flags & GIF_READ_TRAILING_GARBAGE_OK)"
    },
    {
        "line": 44,
        "fullcodeline": "GIF_DEBUG((\"imageread %d \", gfs->nimages));"
    },
    {
        "line": 46,
        "fullcodeline": "gfi->identifier = last_name;"
    },
    {
        "line": 47,
        "fullcodeline": "last_name = 0;"
    },
    {
        "line": 56,
        "fullcodeline": "gfc.gfi = gfi = Gif_NewImage();"
    },
    {
        "line": 62,
        "fullcodeline": "GIF_DEBUG((\"term\\n\"));"
    },
    {
        "line": 66,
        "fullcodeline": "block = gifgetbyte(grr);"
    },
    {
        "line": 67,
        "fullcodeline": "GIF_DEBUG((\"ext(0x%02X) \", block));"
    },
    {
        "line": 48,
        "fullcodeline": "if (!Gif_AddImage(gfs, gfi))"
    },
    {
        "line": 57,
        "fullcodeline": "if (!gfi)"
    },
    {
        "line": 94,
        "fullcodeline": "if (!unknown_block_type) {"
    },
    {
        "line": 71,
        "fullcodeline": "read_graphic_control_extension(&gfc, gfi, grr);"
    },
    {
        "line": 75,
        "fullcodeline": "last_name = suck_data(last_name, 0, grr);"
    },
    {
        "line": 83,
        "fullcodeline": "read_application_extension(&gfc, grr);"
    },
    {
        "line": 87,
        "fullcodeline": "read_unknown_extension(&gfc, grr, block, 0, 0);"
    },
    {
        "line": 95,
        "fullcodeline": "char buf[256];"
    },
    {
        "line": 96,
        "fullcodeline": "sprintf(buf, \"unknown block type %d at file offset %u\", block, grr->pos - 1);"
    },
    {
        "line": 97,
        "fullcodeline": "gif_read_error(&gfc, 1, buf);"
    },
    {
        "line": 98,
        "fullcodeline": "unknown_block_type = 1;"
    },
    {
        "line": 79,
        "fullcodeline": "if (!read_comment_extension(gfi, grr)) goto done;"
    },
    {
        "line": 50,
        "fullcodeline": "else if (!read_image(grr, &gfc, gfi, read_flags)) {"
    },
    {
        "line": 51,
        "fullcodeline": "Gif_RemoveImage(gfs, gfs->nimages - 1);"
    },
    {
        "line": 52,
        "fullcodeline": "gfi = 0;"
    }
]