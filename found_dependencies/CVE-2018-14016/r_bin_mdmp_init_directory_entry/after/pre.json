[
    {
        "line": 26,
        "fullcodeline": "if (entry->location.rva + entry->location.data_size > obj->b->length) {"
    },
    {
        "line": 27,
        "fullcodeline": "eprintf (\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\");"
    },
    {
        "line": 33,
        "fullcodeline": "thread_list = (struct minidump_thread_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 35,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread.format\", \"ddddq?? \""
    },
    {
        "line": 39,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_list.offset\","
    },
    {
        "line": 54,
        "fullcodeline": "module_list = (struct minidump_module_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 56,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_module.format\", \"qddtd???qq \""
    },
    {
        "line": 63,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_module_list.offset\","
    },
    {
        "line": 78,
        "fullcodeline": "memory_list = (struct minidump_memory_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 80,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory_list.offset\","
    },
    {
        "line": 99,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_exception.format\", \"[4]E[4]Eqqdd[15]q \""
    },
    {
        "line": 105,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_exception_stream.offset\","
    },
    {
        "line": 116,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_system_info.offset\","
    },
    {
        "line": 129,
        "fullcodeline": "thread_ex_list = (struct minidump_thread_ex_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 131,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_ex.format\", \"ddddq??? \""
    },
    {
        "line": 136,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_ex_list.offset\","
    },
    {
        "line": 150,
        "fullcodeline": "memory64_list = (struct minidump_memory64_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 152,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory64_list.offset\","
    },
    {
        "line": 171,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_comment_stream_a.offset\","
    },
    {
        "line": 181,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_comment_stream_w.offset\","
    },
    {
        "line": 191,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_handle_data_stream.offset\","
    },
    {
        "line": 201,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_function_table_stream.offset\","
    },
    {
        "line": 210,
        "fullcodeline": "unloaded_module_list = (struct minidump_unloaded_module_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 212,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_unloaded_module.format\", \"qddtd \""
    },
    {
        "line": 215,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_unloaded_module_list.offset\","
    },
    {
        "line": 230,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_misc_info.offset\","
    },
    {
        "line": 241,
        "fullcodeline": "memory_info_list = (struct minidump_memory_info_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 243,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_memory_info.format\","
    },
    {
        "line": 248,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory_info_list.offset\","
    },
    {
        "line": 263,
        "fullcodeline": "thread_info_list = (struct minidump_thread_info_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 265,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_info.format\", \"ddddttttqq \""
    },
    {
        "line": 269,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_info_list.offset\","
    },
    {
        "line": 281,
        "fullcodeline": "handle_operation_list = (struct minidump_handle_operation_list *)(obj->b->buf + entry->location.rva);"
    },
    {
        "line": 283,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_handle_operation_list.offset\","
    },
    {
        "line": 42,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 48,
        "fullcodeline": "for (i = 0; i < thread_list->number_of_threads; i++) {"
    },
    {
        "line": 66,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 72,
        "fullcodeline": "for (i = 0; i < module_list->number_of_modules; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 90,
        "fullcodeline": "for (i = 0; i < memory_list->number_of_memory_ranges; i++) {"
    },
    {
        "line": 139,
        "fullcodeline": "sdb_fmt (\"d[%i]? NumberOfThreads \""
    },
    {
        "line": 144,
        "fullcodeline": "for (i = 0; i < thread_ex_list->number_of_threads; i++) {"
    },
    {
        "line": 155,
        "fullcodeline": "sdb_fmt (\"qq[%i]? NumberOfMemoryRanges \""
    },
    {
        "line": 162,
        "fullcodeline": "for (i = 0; i < memory64_list->number_of_memory_ranges; i++) {"
    },
    {
        "line": 220,
        "fullcodeline": "for (i = 0; i < unloaded_module_list->number_of_entries; i++) {"
    },
    {
        "line": 251,
        "fullcodeline": "sdb_fmt (\"ddq[%i]? SizeOfHeader SizeOfEntry \""
    },
    {
        "line": 256,
        "fullcodeline": "for (i = 0; i < memory_info_list->number_of_entries; i++) {"
    },
    {
        "line": 274,
        "fullcodeline": "for (i = 0; i < thread_info_list->number_of_entries; i++) {"
    },
    {
        "line": 288,
        "fullcodeline": "for (i = 0; i < handle_operation_list->number_of_entries; i++) {"
    },
    {
        "line": 49,
        "fullcodeline": "threads = (struct minidump_thread *)(&(thread_list->threads));"
    },
    {
        "line": 73,
        "fullcodeline": "modules = (struct minidump_module *)(&(module_list->modules));"
    },
    {
        "line": 91,
        "fullcodeline": "memories = (struct minidump_memory_descriptor *)(&(memory_list->memory_ranges));"
    },
    {
        "line": 145,
        "fullcodeline": "ex_threads = (struct minidump_thread_ex *)(&(thread_ex_list->threads));"
    },
    {
        "line": 163,
        "fullcodeline": "memories64 = (struct minidump_memory_descriptor64 *)(&(memory64_list->memory_ranges));"
    },
    {
        "line": 221,
        "fullcodeline": "unloaded_modules = (struct minidump_unloaded_module *)((ut8 *)&unloaded_module_list + sizeof (struct minidump_unloaded_module_list));"
    },
    {
        "line": 257,
        "fullcodeline": "memory_infos = (struct minidump_memory_info *)((ut8 *)memory_info_list + sizeof (struct minidump_memory_info_list));"
    },
    {
        "line": 275,
        "fullcodeline": "thread_infos = (struct minidump_thread_info *)((ut8 *)thread_info_list + sizeof (struct minidump_thread_info_list));"
    },
    {
        "line": 289,
        "fullcodeline": "handle_operations = (struct avrf_handle_operation *)((ut8 *)handle_operation_list + sizeof (struct minidump_handle_operation_list));"
    }
]