[
    {
        "line": 27,
        "fullcodeline": "eprintf(\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\");"
    },
    {
        "line": 35,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread.format\", \"ddddq?? \""
    },
    {
        "line": 39,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_list.offset\","
    },
    {
        "line": 41,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_list.format\","
    },
    {
        "line": 56,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_module.format\", \"qddtd???qq \""
    },
    {
        "line": 63,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_module_list.offset\","
    },
    {
        "line": 65,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_module_list.format\","
    },
    {
        "line": 80,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory_list.offset\","
    },
    {
        "line": 82,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_memory_list.format\","
    },
    {
        "line": 99,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_exception.format\", \"[4]E[4]Eqqdd[15]q \""
    },
    {
        "line": 105,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_exception_stream.offset\","
    },
    {
        "line": 107,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_exception_stream.format\", \"dd?? \""
    },
    {
        "line": 116,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_system_info.offset\","
    },
    {
        "line": 119,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_system_info.format\", \"[2]EwwbBddd[4]Ed[2]Ew[2]q \""
    },
    {
        "line": 131,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_ex.format\", \"ddddq??? \""
    },
    {
        "line": 136,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_ex_list.offset\","
    },
    {
        "line": 138,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_ex_list.format\","
    },
    {
        "line": 152,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory64_list.offset\","
    },
    {
        "line": 154,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_memory64_list.format\","
    },
    {
        "line": 161,
        "fullcodeline": "obj->streams.memories64.base_rva = memory64_list->base_rva;"
    },
    {
        "line": 171,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_comment_stream_a.offset\","
    },
    {
        "line": 173,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_comment_stream_a.format\","
    },
    {
        "line": 181,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_comment_stream_w.offset\","
    },
    {
        "line": 183,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_comment_stream_w.format\","
    },
    {
        "line": 191,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_handle_data_stream.offset\","
    },
    {
        "line": 193,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_handle_data_stream.format\", \"dddd \""
    },
    {
        "line": 201,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_function_table_stream.offset\","
    },
    {
        "line": 203,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_function_table_stream.format\", \"dddddd \""
    },
    {
        "line": 212,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_unloaded_module.format\", \"qddtd \""
    },
    {
        "line": 215,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_unloaded_module_list.offset\","
    },
    {
        "line": 217,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_unloaded_module_list.format\", \"ddd \""
    },
    {
        "line": 230,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_misc_info.offset\","
    },
    {
        "line": 232,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_misc_info.format\", \"d[4]Bdtttddddd \""
    },
    {
        "line": 243,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_memory_info.format\","
    },
    {
        "line": 248,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_memory_info_list.offset\","
    },
    {
        "line": 250,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_memory_info_list.format\","
    },
    {
        "line": 265,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_info.format\", \"ddddttttqq \""
    },
    {
        "line": 269,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_thread_info_list.offset\","
    },
    {
        "line": 271,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_thread_info_list.format\", \"ddd \""
    },
    {
        "line": 283,
        "fullcodeline": "sdb_num_set (obj->kv, \"mdmp_handle_operation_list.offset\","
    },
    {
        "line": 285,
        "fullcodeline": "sdb_set (obj->kv, \"mdmp_handle_operation_list.format\", \"dddd \""
    },
    {
        "line": 303,
        "fullcodeline": "eprintf (\"[WARN] Invalid or unsupported enumeration encountered %i\\n\", entry->stream_type);"
    },
    {
        "line": 42,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 48,
        "fullcodeline": "for (i = 0; i < thread_list->number_of_threads; i++) {"
    },
    {
        "line": 66,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 72,
        "fullcodeline": "for (i = 0; i < module_list->number_of_modules; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "sdb_fmt (\"d[%i]? \""
    },
    {
        "line": 90,
        "fullcodeline": "for (i = 0; i < memory_list->number_of_memory_ranges; i++) {"
    },
    {
        "line": 139,
        "fullcodeline": "sdb_fmt (\"d[%i]? NumberOfThreads \""
    },
    {
        "line": 144,
        "fullcodeline": "for (i = 0; i < thread_ex_list->number_of_threads; i++) {"
    },
    {
        "line": 155,
        "fullcodeline": "sdb_fmt (\"qq[%i]? NumberOfMemoryRanges \""
    },
    {
        "line": 162,
        "fullcodeline": "for (i = 0; i < memory64_list->number_of_memory_ranges; i++) {"
    },
    {
        "line": 220,
        "fullcodeline": "for (i = 0; i < unloaded_module_list->number_of_entries; i++) {"
    },
    {
        "line": 251,
        "fullcodeline": "sdb_fmt (\"ddq[%i]? SizeOfHeader SizeOfEntry \""
    },
    {
        "line": 256,
        "fullcodeline": "for (i = 0; i < memory_info_list->number_of_entries; i++) {"
    },
    {
        "line": 274,
        "fullcodeline": "for (i = 0; i < thread_info_list->number_of_entries; i++) {"
    },
    {
        "line": 288,
        "fullcodeline": "for (i = 0; i < handle_operation_list->number_of_entries; i++) {"
    },
    {
        "line": 49,
        "fullcodeline": "threads = (struct minidump_thread *)(&(thread_list->threads));"
    },
    {
        "line": 50,
        "fullcodeline": "r_list_append (obj->streams.threads, &(threads[i]));"
    },
    {
        "line": 73,
        "fullcodeline": "modules = (struct minidump_module *)(&(module_list->modules));"
    },
    {
        "line": 74,
        "fullcodeline": "r_list_append(obj->streams.modules, &(modules[i]));"
    },
    {
        "line": 91,
        "fullcodeline": "memories = (struct minidump_memory_descriptor *)(&(memory_list->memory_ranges));"
    },
    {
        "line": 92,
        "fullcodeline": "r_list_append (obj->streams.memories, &(memories[i]));"
    },
    {
        "line": 145,
        "fullcodeline": "ex_threads = (struct minidump_thread_ex *)(&(thread_ex_list->threads));"
    },
    {
        "line": 146,
        "fullcodeline": "r_list_append (obj->streams.ex_threads, &(ex_threads[i]));"
    },
    {
        "line": 163,
        "fullcodeline": "memories64 = (struct minidump_memory_descriptor64 *)(&(memory64_list->memory_ranges));"
    },
    {
        "line": 164,
        "fullcodeline": "r_list_append (obj->streams.memories64.memories, &(memories64[i]));"
    },
    {
        "line": 222,
        "fullcodeline": "r_list_append (obj->streams.unloaded_modules, &(unloaded_modules[i]));"
    },
    {
        "line": 257,
        "fullcodeline": "memory_infos = (struct minidump_memory_info *)((ut8 *)memory_info_list + sizeof (struct minidump_memory_info_list));"
    },
    {
        "line": 258,
        "fullcodeline": "r_list_append (obj->streams.memory_infos, &(memory_infos[i]));"
    },
    {
        "line": 275,
        "fullcodeline": "thread_infos = (struct minidump_thread_info *)((ut8 *)thread_info_list + sizeof (struct minidump_thread_info_list));"
    },
    {
        "line": 276,
        "fullcodeline": "r_list_append (obj->streams.thread_infos, &(thread_infos[i]));"
    },
    {
        "line": 289,
        "fullcodeline": "handle_operations = (struct avrf_handle_operation *)((ut8 *)handle_operation_list + sizeof (struct minidump_handle_operation_list));"
    },
    {
        "line": 290,
        "fullcodeline": "r_list_append (obj->streams.operations, &(handle_operations[i]));"
    }
]