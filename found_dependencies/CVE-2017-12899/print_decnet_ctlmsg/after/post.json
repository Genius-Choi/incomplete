[
    {
        "line": 6,
        "fullcodeline": "int mflags = EXTRACT_LE_8BITS(rhp->rh_short.sh_flags);"
    },
    {
        "line": 7,
        "fullcodeline": "register const union controlmsg *cmp = (const union controlmsg *)rhp;"
    },
    {
        "line": 11,
        "fullcodeline": "const char *rhpx = (const char *)rhp;"
    },
    {
        "line": 14,
        "fullcodeline": "switch (mflags & RMF_CTLMASK) {"
    },
    {
        "line": 16,
        "fullcodeline": "ND_PRINT((ndo, \"init \"));"
    },
    {
        "line": 19,
        "fullcodeline": "ND_TCHECK(cmp->cm_init);"
    },
    {
        "line": 20,
        "fullcodeline": "src = EXTRACT_LE_16BITS(cmp->cm_init.in_src);"
    },
    {
        "line": 21,
        "fullcodeline": "info = EXTRACT_LE_8BITS(cmp->cm_init.in_info);"
    },
    {
        "line": 22,
        "fullcodeline": "blksize = EXTRACT_LE_16BITS(cmp->cm_init.in_blksize);"
    },
    {
        "line": 23,
        "fullcodeline": "vers = EXTRACT_LE_8BITS(cmp->cm_init.in_vers);"
    },
    {
        "line": 24,
        "fullcodeline": "eco = EXTRACT_LE_8BITS(cmp->cm_init.in_eco);"
    },
    {
        "line": 25,
        "fullcodeline": "ueco = EXTRACT_LE_8BITS(cmp->cm_init.in_ueco);"
    },
    {
        "line": 26,
        "fullcodeline": "hello = EXTRACT_LE_16BITS(cmp->cm_init.in_hello);"
    },
    {
        "line": 27,
        "fullcodeline": "print_t_info(ndo, info);"
    },
    {
        "line": 28,
        "fullcodeline": "ND_PRINT((ndo,"
    },
    {
        "line": 32,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 35,
        "fullcodeline": "ND_PRINT((ndo, \"verification \"));"
    },
    {
        "line": 38,
        "fullcodeline": "ND_TCHECK(cmp->cm_ver);"
    },
    {
        "line": 39,
        "fullcodeline": "src = EXTRACT_LE_16BITS(cmp->cm_ver.ve_src);"
    },
    {
        "line": 40,
        "fullcodeline": "other = EXTRACT_LE_8BITS(cmp->cm_ver.ve_fcnval);"
    },
    {
        "line": 41,
        "fullcodeline": "ND_PRINT((ndo, \"src %s fcnval %o\", dnaddr_string(ndo, src), other));"
    },
    {
        "line": 42,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 45,
        "fullcodeline": "ND_PRINT((ndo, \"test \"));"
    },
    {
        "line": 48,
        "fullcodeline": "ND_TCHECK(cmp->cm_test);"
    },
    {
        "line": 49,
        "fullcodeline": "src = EXTRACT_LE_16BITS(cmp->cm_test.te_src);"
    },
    {
        "line": 50,
        "fullcodeline": "other = EXTRACT_LE_8BITS(cmp->cm_test.te_data);"
    },
    {
        "line": 51,
        "fullcodeline": "ND_PRINT((ndo, \"src %s data %o\", dnaddr_string(ndo, src), other));"
    },
    {
        "line": 52,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 55,
        "fullcodeline": "ND_PRINT((ndo, \"lev-1-routing \"));"
    },
    {
        "line": 58,
        "fullcodeline": "ND_TCHECK(cmp->cm_l1rou);"
    },
    {
        "line": 59,
        "fullcodeline": "src = EXTRACT_LE_16BITS(cmp->cm_l1rou.r1_src);"
    },
    {
        "line": 60,
        "fullcodeline": "ND_PRINT((ndo, \"src %s \", dnaddr_string(ndo, src)));"
    },
    {
        "line": 61,
        "fullcodeline": "ret = print_l1_routes(ndo, &(rhpx[sizeof(struct l1rout)]),"
    },
    {
        "line": 65,
        "fullcodeline": "ND_PRINT((ndo, \"lev-2-routing \"));"
    },
    {
        "line": 68,
        "fullcodeline": "ND_TCHECK(cmp->cm_l2rout);"
    },
    {
        "line": 69,
        "fullcodeline": "src = EXTRACT_LE_16BITS(cmp->cm_l2rout.r2_src);"
    },
    {
        "line": 70,
        "fullcodeline": "ND_PRINT((ndo, \"src %s \", dnaddr_string(ndo, src)));"
    },
    {
        "line": 71,
        "fullcodeline": "ret = print_l2_routes(ndo, &(rhpx[sizeof(struct l2rout)]),"
    },
    {
        "line": 75,
        "fullcodeline": "ND_PRINT((ndo, \"router-hello \"));"
    },
    {
        "line": 78,
        "fullcodeline": "ND_TCHECK(cmp->cm_rhello);"
    },
    {
        "line": 79,
        "fullcodeline": "vers = EXTRACT_LE_8BITS(cmp->cm_rhello.rh_vers);"
    },
    {
        "line": 80,
        "fullcodeline": "eco = EXTRACT_LE_8BITS(cmp->cm_rhello.rh_eco);"
    },
    {
        "line": 81,
        "fullcodeline": "ueco = EXTRACT_LE_8BITS(cmp->cm_rhello.rh_ueco);"
    },
    {
        "line": 82,
        "fullcodeline": "memcpy((char *)&srcea, (const char *)&(cmp->cm_rhello.rh_src),"
    },
    {
        "line": 84,
        "fullcodeline": "src = EXTRACT_LE_16BITS(srcea.dne_remote.dne_nodeaddr);"
    },
    {
        "line": 85,
        "fullcodeline": "info = EXTRACT_LE_8BITS(cmp->cm_rhello.rh_info);"
    },
    {
        "line": 86,
        "fullcodeline": "blksize = EXTRACT_LE_16BITS(cmp->cm_rhello.rh_blksize);"
    },
    {
        "line": 87,
        "fullcodeline": "priority = EXTRACT_LE_8BITS(cmp->cm_rhello.rh_priority);"
    },
    {
        "line": 88,
        "fullcodeline": "hello = EXTRACT_LE_16BITS(cmp->cm_rhello.rh_hello);"
    },
    {
        "line": 89,
        "fullcodeline": "print_i_info(ndo, info);"
    },
    {
        "line": 90,
        "fullcodeline": "ND_PRINT((ndo,"
    },
    {
        "line": 94,
        "fullcodeline": "ret = print_elist(&(rhpx[sizeof(struct rhellomsg)]),"
    },
    {
        "line": 98,
        "fullcodeline": "ND_PRINT((ndo, \"endnode-hello \"));"
    },
    {
        "line": 101,
        "fullcodeline": "ND_TCHECK(cmp->cm_ehello);"
    },
    {
        "line": 102,
        "fullcodeline": "vers = EXTRACT_LE_8BITS(cmp->cm_ehello.eh_vers);"
    },
    {
        "line": 103,
        "fullcodeline": "eco = EXTRACT_LE_8BITS(cmp->cm_ehello.eh_eco);"
    },
    {
        "line": 104,
        "fullcodeline": "ueco = EXTRACT_LE_8BITS(cmp->cm_ehello.eh_ueco);"
    },
    {
        "line": 105,
        "fullcodeline": "memcpy((char *)&srcea, (const char *)&(cmp->cm_ehello.eh_src),"
    },
    {
        "line": 107,
        "fullcodeline": "src = EXTRACT_LE_16BITS(srcea.dne_remote.dne_nodeaddr);"
    },
    {
        "line": 108,
        "fullcodeline": "info = EXTRACT_LE_8BITS(cmp->cm_ehello.eh_info);"
    },
    {
        "line": 109,
        "fullcodeline": "blksize = EXTRACT_LE_16BITS(cmp->cm_ehello.eh_blksize);"
    },
    {
        "line": 111,
        "fullcodeline": "memcpy((char *)&rtea, (const char *)&(cmp->cm_ehello.eh_router),"
    },
    {
        "line": 113,
        "fullcodeline": "dst = EXTRACT_LE_16BITS(rtea.dne_remote.dne_nodeaddr);"
    },
    {
        "line": 114,
        "fullcodeline": "hello = EXTRACT_LE_16BITS(cmp->cm_ehello.eh_hello);"
    },
    {
        "line": 115,
        "fullcodeline": "other = EXTRACT_LE_8BITS(cmp->cm_ehello.eh_data);"
    },
    {
        "line": 116,
        "fullcodeline": "print_i_info(ndo, info);"
    },
    {
        "line": 117,
        "fullcodeline": "ND_PRINT((ndo,"
    },
    {
        "line": 121,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 125,
        "fullcodeline": "ND_PRINT((ndo, \"unknown control message\"));"
    },
    {
        "line": 126,
        "fullcodeline": "ND_DEFAULTPRINT((const u_char *)rhp, min(length, caplen));"
    },
    {
        "line": 127,
        "fullcodeline": "ret = 1;"
    },
    {
        "line": 17,
        "fullcodeline": "if (length < sizeof(struct initmsg))"
    },
    {
        "line": 36,
        "fullcodeline": "if (length < sizeof(struct verifmsg))"
    },
    {
        "line": 46,
        "fullcodeline": "if (length < sizeof(struct testmsg))"
    },
    {
        "line": 56,
        "fullcodeline": "if (length < sizeof(struct l1rout))"
    },
    {
        "line": 66,
        "fullcodeline": "if (length < sizeof(struct l2rout))"
    },
    {
        "line": 76,
        "fullcodeline": "if (length < sizeof(struct rhellomsg))"
    },
    {
        "line": 99,
        "fullcodeline": "if (length < sizeof(struct ehellomsg))"
    },
    {
        "line": 62,
        "fullcodeline": "length - sizeof(struct l1rout));"
    },
    {
        "line": 72,
        "fullcodeline": "length - sizeof(struct l2rout));"
    },
    {
        "line": 95,
        "fullcodeline": "length - sizeof(struct rhellomsg));"
    },
    {
        "line": 30,
        "fullcodeline": "dnaddr_string(ndo, src), blksize, vers, eco, ueco,"
    },
    {
        "line": 92,
        "fullcodeline": "vers, eco, ueco, dnaddr_string(ndo, src),"
    },
    {
        "line": 119,
        "fullcodeline": "vers, eco, ueco, dnaddr_string(ndo, src),"
    },
    {
        "line": 120,
        "fullcodeline": "blksize, dnaddr_string(ndo, dst), hello, other));"
    }
]