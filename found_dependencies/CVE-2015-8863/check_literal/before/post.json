[
    {
        "line": 4,
        "fullcodeline": "const char* pattern = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "p->tokenpos = 0;"
    },
    {
        "line": 2,
        "fullcodeline": "if (p->tokenpos == 0) return 0;"
    },
    {
        "line": 8,
        "fullcodeline": "case 't': pattern = \"true\"; plen = 4; v = jv_true(); break;"
    },
    {
        "line": 9,
        "fullcodeline": "case 'f': pattern = \"false\"; plen = 5; v = jv_false(); break;"
    },
    {
        "line": 10,
        "fullcodeline": "case 'n': pattern = \"null\"; plen = 4; v = jv_null(); break;"
    },
    {
        "line": 17,
        "fullcodeline": "TRY(value(p, v));"
    },
    {
        "line": 13,
        "fullcodeline": "if (p->tokenpos != plen) return \"Invalid literal\";"
    },
    {
        "line": 14,
        "fullcodeline": "for (int i=0; i<plen; i++)"
    },
    {
        "line": 20,
        "fullcodeline": "p->tokenbuf[p->tokenpos] = 0; // FIXME: invalid"
    },
    {
        "line": 21,
        "fullcodeline": "char* end = 0;"
    },
    {
        "line": 22,
        "fullcodeline": "double d = jvp_strtod(&p->dtoa, p->tokenbuf, &end);"
    },
    {
        "line": 25,
        "fullcodeline": "TRY(value(p, jv_number(d)));"
    },
    {
        "line": 15,
        "fullcodeline": "if (p->tokenbuf[i] != pattern[i])"
    },
    {
        "line": 23,
        "fullcodeline": "if (end == 0 || *end != 0)"
    }
]