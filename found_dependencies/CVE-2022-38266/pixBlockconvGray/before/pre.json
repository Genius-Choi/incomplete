[
    {
        "line": 10,
        "fullcodeline": "PROCNAME(\"pixBlockconvGray\");"
    },
    {
        "line": 14,
        "fullcodeline": "pixGetDimensions(pixs, &w, &h, &d);"
    },
    {
        "line": 45,
        "fullcodeline": "pixSetPadBits(pixt, 0);"
    },
    {
        "line": 46,
        "fullcodeline": "wpl = pixGetWpl(pixd);"
    },
    {
        "line": 47,
        "fullcodeline": "wpla = pixGetWpl(pixt);"
    },
    {
        "line": 48,
        "fullcodeline": "datad = pixGetData(pixd);"
    },
    {
        "line": 49,
        "fullcodeline": "dataa = pixGetData(pixt);"
    },
    {
        "line": 12,
        "fullcodeline": "if (!pixs)"
    },
    {
        "line": 17,
        "fullcodeline": "if (wc < 0) wc = 0;"
    },
    {
        "line": 18,
        "fullcodeline": "if (hc < 0) hc = 0;"
    },
    {
        "line": 40,
        "fullcodeline": "if ((pixd = pixCreateTemplate(pixs)) == NULL) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (wc == 0 && hc == 0)   /* no-op */"
    },
    {
        "line": 21,
        "fullcodeline": "if (w < 2 * wc + 1 || h < 2 * hc + 1) {"
    },
    {
        "line": 22,
        "fullcodeline": "L_WARNING(\"kernel too large; returning a copy\\n\", procName);"
    },
    {
        "line": 13,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixs not defined\", procName, NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixs not 8 bpp\", procName, NULL);"
    },
    {
        "line": 20,
        "fullcodeline": "return pixCopy(NULL, pixs);"
    },
    {
        "line": 24,
        "fullcodeline": "return pixCopy(NULL, pixs);"
    },
    {
        "line": 42,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixd not made\", procName, NULL);"
    },
    {
        "line": 28,
        "fullcodeline": "if (pixGetDepth(pixacc) == 32) {"
    },
    {
        "line": 29,
        "fullcodeline": "pixt = pixClone(pixacc);"
    },
    {
        "line": 36,
        "fullcodeline": "if ((pixt = pixBlockconvAccum(pixs)) == NULL)"
    },
    {
        "line": 31,
        "fullcodeline": "L_WARNING(\"pixacc not 32 bpp; making new one\\n\", procName);"
    },
    {
        "line": 32,
        "fullcodeline": "if ((pixt = pixBlockconvAccum(pixs)) == NULL)"
    },
    {
        "line": 37,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixt not made\", procName, NULL);"
    },
    {
        "line": 33,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixt not made\", procName, NULL);"
    }
]