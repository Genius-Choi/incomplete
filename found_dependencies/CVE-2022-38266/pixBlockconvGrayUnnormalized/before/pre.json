[
    {
        "line": 9,
        "fullcodeline": "PROCNAME(\"pixBlockconvGrayUnnormalized\");"
    },
    {
        "line": 13,
        "fullcodeline": "pixGetDimensions(pixs, &w, &h, &d);"
    },
    {
        "line": 29,
        "fullcodeline": "pixacc = pixBlockconvAccum(pixsb);"
    },
    {
        "line": 38,
        "fullcodeline": "wpla = pixGetWpl(pixacc);"
    },
    {
        "line": 39,
        "fullcodeline": "wpld = pixGetWpl(pixd);"
    },
    {
        "line": 40,
        "fullcodeline": "datad = pixGetData(pixd);"
    },
    {
        "line": 41,
        "fullcodeline": "dataa = pixGetData(pixacc);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!pixs)"
    },
    {
        "line": 16,
        "fullcodeline": "if (wc < 0) wc = 0;"
    },
    {
        "line": 17,
        "fullcodeline": "if (hc < 0) hc = 0;"
    },
    {
        "line": 27,
        "fullcodeline": "if ((pixsb = pixAddMirroredBorder(pixs, wc + 1, wc, hc + 1, hc)) == NULL)"
    },
    {
        "line": 31,
        "fullcodeline": "if (!pixacc)"
    },
    {
        "line": 33,
        "fullcodeline": "if ((pixd = pixCreate(w, h, 32)) == NULL) {"
    },
    {
        "line": 42,
        "fullcodeline": "for (i = 0; i < h; i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (w < 2 * wc + 1 || h < 2 * hc + 1) {"
    },
    {
        "line": 19,
        "fullcodeline": "wc = L_MIN(wc, (w - 1) / 2);"
    },
    {
        "line": 20,
        "fullcodeline": "hc = L_MIN(hc, (h - 1) / 2);"
    },
    {
        "line": 21,
        "fullcodeline": "L_WARNING(\"kernel too large; reducing!\\n\", procName);"
    },
    {
        "line": 22,
        "fullcodeline": "L_INFO(\"wc = %d, hc = %d\\n\", procName, wc, hc);"
    },
    {
        "line": 24,
        "fullcodeline": "if (wc == 0 && hc == 0)   /* no-op */"
    },
    {
        "line": 44,
        "fullcodeline": "linemina = dataa + i * wpla;"
    },
    {
        "line": 45,
        "fullcodeline": "linemaxa = dataa + (i + 2 * hc + 1) * wpla;"
    },
    {
        "line": 12,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixs not defined\", procName, NULL);"
    },
    {
        "line": 15,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixs not 8 bpp\", procName, NULL);"
    },
    {
        "line": 25,
        "fullcodeline": "return pixCopy(NULL, pixs);"
    },
    {
        "line": 28,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixsb not made\", procName, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixacc not made\", procName, NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "return (PIX *)ERROR_PTR(\"pixd not made\", procName, NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "for (j = 0; j < w; j++) {"
    },
    {
        "line": 43,
        "fullcodeline": "lined = datad + i * wpld;"
    },
    {
        "line": 48,
        "fullcodeline": "lined[j] = linemaxa[jmax] - linemaxa[j] -"
    },
    {
        "line": 47,
        "fullcodeline": "jmax = j + 2 * wc + 1;"
    }
]