[
    {
        "line": 3,
        "fullcodeline": "uint8_t const preamble_pattern[] = {0x57, 0xfd, 0x99};"
    },
    {
        "line": 5,
        "fullcodeline": "uint8_t b[19 + 15]; // 19 byte + up 15 byte payload"
    },
    {
        "line": 10,
        "fullcodeline": "int offset = bitbuffer_search(bitbuffer, 0, 0, preamble_pattern, 24) + 24;"
    },
    {
        "line": 14,
        "fullcodeline": "int num_bits = bitbuffer->bits_per_row[0] - offset;"
    },
    {
        "line": 16,
        "fullcodeline": "int len = extract_bytes_uart(bitbuffer->bb[0], offset, num_bits, b);"
    },
    {
        "line": 23,
        "fullcodeline": "int msg_len = b[0] & 0xf; // should be 6 or 8"
    },
    {
        "line": 30,
        "fullcodeline": "bitrow_printf(b, len * 8, \"%s: offset %d, num_bits %d, len %d, msg_len %d\\n\", __func__, offset, num_bits, len, msg_len);"
    },
    {
        "line": 32,
        "fullcodeline": "int msg_type = (b[0]);"
    },
    {
        "line": 33,
        "fullcodeline": "int dst_id   = ((unsigned)b[4] << 24) | (b[3] << 16) | (b[2] << 8) | (b[1]); // assume Little-Endian"
    },
    {
        "line": 34,
        "fullcodeline": "int src_id   = ((unsigned)b[8] << 24) | (b[7] << 16) | (b[6] << 8) | (b[5]); // assume Little-Endian"
    },
    {
        "line": 35,
        "fullcodeline": "int counter  = (b[len - 10] << 8) | (b[len - 9]);"
    },
    {
        "line": 36,
        "fullcodeline": "char msg_str[15 * 2 + 1];"
    },
    {
        "line": 37,
        "fullcodeline": "bitrow_snprint(&b[9], msg_len * 8, msg_str, 15 * 2 + 1);"
    },
    {
        "line": 38,
        "fullcodeline": "char mac_str[13];"
    },
    {
        "line": 39,
        "fullcodeline": "bitrow_snprint(&b[len - 8], 6 * 8, mac_str, 13);"
    },
    {
        "line": 42,
        "fullcodeline": "data_t *data = data_make("
    },
    {
        "line": 7,
        "fullcodeline": "if (bitbuffer->num_rows != 1)"
    },
    {
        "line": 11,
        "fullcodeline": "if (offset >= bitbuffer->bits_per_row[0] - 19 * 10)"
    },
    {
        "line": 17,
        "fullcodeline": "if (len < 19)"
    },
    {
        "line": 24,
        "fullcodeline": "if (len < 19 + msg_len)"
    },
    {
        "line": 20,
        "fullcodeline": "if ((b[0] & 0xf0) != 0xf0)"
    },
    {
        "line": 28,
        "fullcodeline": "if (crc16lsb(b, len, 0x8408, 0x0000) != 0) // unreflected poly 0x1021"
    }
]