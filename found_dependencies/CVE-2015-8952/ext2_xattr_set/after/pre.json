[
    {
        "line": 4,
        "fullcodeline": "struct super_block *sb = inode->i_sb;"
    },
    {
        "line": 5,
        "fullcodeline": "struct buffer_head *bh = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "struct ext2_xattr_header *header = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "size_t name_len, free, min_offs = sb->s_blocksize;"
    },
    {
        "line": 9,
        "fullcodeline": "int not_found = 1, error;"
    },
    {
        "line": 24,
        "fullcodeline": "ea_idebug(inode, \"name=%d.%s, value=%p, value_len=%ld\","
    },
    {
        "line": 31,
        "fullcodeline": "name_len = strlen(name);"
    },
    {
        "line": 34,
        "fullcodeline": "down_write(&EXT2_I(inode)->xattr_sem);"
    },
    {
        "line": 120,
        "fullcodeline": "error = -ENOSPC;"
    },
    {
        "line": 253,
        "fullcodeline": "brelse(bh);"
    },
    {
        "line": 25,
        "fullcodeline": "name_index, name, value, (long)value_len);"
    },
    {
        "line": 27,
        "fullcodeline": "if (value == NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "if (name == NULL)"
    },
    {
        "line": 225,
        "fullcodeline": "if (value != NULL) {"
    },
    {
        "line": 28,
        "fullcodeline": "value_len = 0;"
    },
    {
        "line": 32,
        "fullcodeline": "if (name_len > 255 || value_len > sb->s_blocksize)"
    },
    {
        "line": 35,
        "fullcodeline": "if (EXT2_I(inode)->i_file_acl) {"
    },
    {
        "line": 37,
        "fullcodeline": "bh = sb_bread(sb, EXT2_I(inode)->i_file_acl);"
    },
    {
        "line": 38,
        "fullcodeline": "error = -EIO;"
    },
    {
        "line": 41,
        "fullcodeline": "ea_bdebug(bh, \"b_count=%d, refcount=%d\","
    },
    {
        "line": 44,
        "fullcodeline": "header = HDR(bh);"
    },
    {
        "line": 45,
        "fullcodeline": "end = bh->b_data + bh->b_size;"
    },
    {
        "line": 55,
        "fullcodeline": "here = FIRST_ENTRY(bh);"
    },
    {
        "line": 74,
        "fullcodeline": "last = here;"
    },
    {
        "line": 89,
        "fullcodeline": "free = min_offs - ((char*)last - (char*)header) - sizeof(__u32);"
    },
    {
        "line": 99,
        "fullcodeline": "error = -ENODATA;"
    },
    {
        "line": 102,
        "fullcodeline": "error = 0;"
    },
    {
        "line": 128,
        "fullcodeline": "lock_buffer(bh);"
    },
    {
        "line": 174,
        "fullcodeline": "size_t size = EXT2_XATTR_LEN(name_len);"
    },
    {
        "line": 175,
        "fullcodeline": "size_t rest = (char *)last - (char *)here;"
    },
    {
        "line": 176,
        "fullcodeline": "memmove((char *)here + size, here, rest);"
    },
    {
        "line": 177,
        "fullcodeline": "memset(here, 0, size);"
    },
    {
        "line": 178,
        "fullcodeline": "here->e_name_index = name_index;"
    },
    {
        "line": 179,
        "fullcodeline": "here->e_name_len = name_len;"
    },
    {
        "line": 180,
        "fullcodeline": "memcpy(here->e_name, name, name_len);"
    },
    {
        "line": 227,
        "fullcodeline": "here->e_value_size = cpu_to_le32(value_len);"
    },
    {
        "line": 240,
        "fullcodeline": "if (IS_LAST_ENTRY(ENTRY(header+1))) {"
    },
    {
        "line": 244,
        "fullcodeline": "error = ext2_xattr_set2(inode, bh, NULL);"
    },
    {
        "line": 254,
        "fullcodeline": "if (!(bh && header == HDR(bh)))"
    },
    {
        "line": 30,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 33,
        "fullcodeline": "return -ERANGE;"
    },
    {
        "line": 39,
        "fullcodeline": "if (!bh)"
    },
    {
        "line": 42,
        "fullcodeline": "atomic_read(&(bh->b_count)),"
    },
    {
        "line": 43,
        "fullcodeline": "le32_to_cpu(HDR(bh)->h_refcount));"
    },
    {
        "line": 92,
        "fullcodeline": "free = sb->s_blocksize -"
    },
    {
        "line": 94,
        "fullcodeline": "here = last = NULL;  /* avoid gcc uninitialized warning. */"
    },
    {
        "line": 100,
        "fullcodeline": "if (flags & XATTR_REPLACE)"
    },
    {
        "line": 103,
        "fullcodeline": "if (value == NULL)"
    },
    {
        "line": 107,
        "fullcodeline": "error = -EEXIST;"
    },
    {
        "line": 118,
        "fullcodeline": "free += EXT2_XATTR_LEN(name_len);"
    },
    {
        "line": 121,
        "fullcodeline": "if (free < EXT2_XATTR_LEN(name_len) + EXT2_XATTR_SIZE(value_len))"
    },
    {
        "line": 129,
        "fullcodeline": "if (header->h_refcount == cpu_to_le32(1)) {"
    },
    {
        "line": 160,
        "fullcodeline": "header = kzalloc(sb->s_blocksize, GFP_KERNEL);"
    },
    {
        "line": 161,
        "fullcodeline": "error = -ENOMEM;"
    },
    {
        "line": 165,
        "fullcodeline": "header->h_magic = cpu_to_le32(EXT2_XATTR_MAGIC);"
    },
    {
        "line": 166,
        "fullcodeline": "header->h_blocks = header->h_refcount = cpu_to_le32(1);"
    },
    {
        "line": 167,
        "fullcodeline": "last = here = ENTRY(header+1);"
    },
    {
        "line": 242,
        "fullcodeline": "if (bh && header == HDR(bh))"
    },
    {
        "line": 246,
        "fullcodeline": "ext2_xattr_rehash(header, here);"
    },
    {
        "line": 249,
        "fullcodeline": "error = ext2_xattr_set2(inode, bh, header);"
    },
    {
        "line": 46,
        "fullcodeline": "if (header->h_magic != cpu_to_le32(EXT2_XATTR_MAGIC) ||"
    },
    {
        "line": 47,
        "fullcodeline": "header->h_blocks != cpu_to_le32(1)) {"
    },
    {
        "line": 48,
        "fullcodeline": "bad_block:\t\text2_error(sb, \"ext2_xattr_set\","
    },
    {
        "line": 51,
        "fullcodeline": "error = -EIO;"
    },
    {
        "line": 56,
        "fullcodeline": "while (!IS_LAST_ENTRY(here)) {"
    },
    {
        "line": 57,
        "fullcodeline": "struct ext2_xattr_entry *next = EXT2_XATTR_NEXT(here);"
    },
    {
        "line": 65,
        "fullcodeline": "not_found = name_index - here->e_name_index;"
    },
    {
        "line": 72,
        "fullcodeline": "here = next;"
    },
    {
        "line": 76,
        "fullcodeline": "while (!IS_LAST_ENTRY(last)) {"
    },
    {
        "line": 77,
        "fullcodeline": "struct ext2_xattr_entry *next = EXT2_XATTR_NEXT(last);"
    },
    {
        "line": 85,
        "fullcodeline": "last = next;"
    },
    {
        "line": 108,
        "fullcodeline": "if (flags & XATTR_CREATE)"
    },
    {
        "line": 110,
        "fullcodeline": "if (!here->e_value_block && here->e_value_size) {"
    },
    {
        "line": 130,
        "fullcodeline": "__u32 hash = le32_to_cpu(header->h_hash);"
    },
    {
        "line": 132,
        "fullcodeline": "ea_bdebug(bh, \"modifying in-place\");"
    },
    {
        "line": 137,
        "fullcodeline": "mb2_cache_entry_delete_block(EXT2_SB(sb)->s_mb_cache,"
    },
    {
        "line": 162,
        "fullcodeline": "if (header == NULL)"
    },
    {
        "line": 182,
        "fullcodeline": "if (!here->e_value_block && here->e_value_size) {"
    },
    {
        "line": 215,
        "fullcodeline": "if (value == NULL) {"
    },
    {
        "line": 229,
        "fullcodeline": "size_t size = EXT2_XATTR_SIZE(value_len);"
    },
    {
        "line": 230,
        "fullcodeline": "char *val = (char *)header + min_offs - size;"
    },
    {
        "line": 231,
        "fullcodeline": "here->e_value_offs ="
    },
    {
        "line": 243,
        "fullcodeline": "unlock_buffer(bh);  /* we were modifying in-place. */"
    },
    {
        "line": 247,
        "fullcodeline": "if (bh && header == HDR(bh))"
    },
    {
        "line": 58,
        "fullcodeline": "if ((char *)next >= end)"
    },
    {
        "line": 60,
        "fullcodeline": "if (!here->e_value_block && here->e_value_size) {"
    },
    {
        "line": 66,
        "fullcodeline": "if (!not_found)"
    },
    {
        "line": 68,
        "fullcodeline": "if (!not_found)"
    },
    {
        "line": 80,
        "fullcodeline": "if (!last->e_value_block && last->e_value_size) {"
    },
    {
        "line": 111,
        "fullcodeline": "size_t size = le32_to_cpu(here->e_value_size);"
    },
    {
        "line": 116,
        "fullcodeline": "free += EXT2_XATTR_SIZE(size);"
    },
    {
        "line": 144,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 145,
        "fullcodeline": "ea_bdebug(bh, \"cloning\");"
    },
    {
        "line": 146,
        "fullcodeline": "header = kmalloc(bh->b_size, GFP_KERNEL);"
    },
    {
        "line": 147,
        "fullcodeline": "error = -ENOMEM;"
    },
    {
        "line": 150,
        "fullcodeline": "memcpy(header, HDR(bh), bh->b_size);"
    },
    {
        "line": 151,
        "fullcodeline": "header->h_refcount = cpu_to_le32(1);"
    },
    {
        "line": 153,
        "fullcodeline": "offset = (char *)here - bh->b_data;"
    },
    {
        "line": 154,
        "fullcodeline": "here = ENTRY((char *)header + offset);"
    },
    {
        "line": 155,
        "fullcodeline": "offset = (char *)last - bh->b_data;"
    },
    {
        "line": 156,
        "fullcodeline": "last = ENTRY((char *)header + offset);"
    },
    {
        "line": 183,
        "fullcodeline": "char *first_val = (char *)header + min_offs;"
    },
    {
        "line": 184,
        "fullcodeline": "size_t offs = le16_to_cpu(here->e_value_offs);"
    },
    {
        "line": 185,
        "fullcodeline": "char *val = (char *)header + offs;"
    },
    {
        "line": 186,
        "fullcodeline": "size_t size = EXT2_XATTR_SIZE("
    },
    {
        "line": 200,
        "fullcodeline": "memmove(first_val + size, first_val, val - first_val);"
    },
    {
        "line": 201,
        "fullcodeline": "memset(first_val, 0, size);"
    },
    {
        "line": 202,
        "fullcodeline": "here->e_value_offs = 0;"
    },
    {
        "line": 203,
        "fullcodeline": "min_offs += size;"
    },
    {
        "line": 206,
        "fullcodeline": "last = ENTRY(header+1);"
    },
    {
        "line": 217,
        "fullcodeline": "size_t size = EXT2_XATTR_LEN(name_len);"
    },
    {
        "line": 218,
        "fullcodeline": "last = ENTRY((char *)last - size);"
    },
    {
        "line": 219,
        "fullcodeline": "memmove(here, (char*)here + size,"
    },
    {
        "line": 232,
        "fullcodeline": "cpu_to_le16((char *)val - (char *)header);"
    },
    {
        "line": 233,
        "fullcodeline": "memset(val + size - EXT2_XATTR_PAD, 0,"
    },
    {
        "line": 248,
        "fullcodeline": "unlock_buffer(bh);  /* we were modifying in-place. */"
    },
    {
        "line": 50,
        "fullcodeline": "EXT2_I(inode)->i_file_acl);"
    },
    {
        "line": 61,
        "fullcodeline": "size_t offs = le16_to_cpu(here->e_value_offs);"
    },
    {
        "line": 67,
        "fullcodeline": "not_found = name_len - here->e_name_len;"
    },
    {
        "line": 69,
        "fullcodeline": "not_found = memcmp(name, here->e_name,name_len);"
    },
    {
        "line": 81,
        "fullcodeline": "size_t offs = le16_to_cpu(last->e_value_offs);"
    },
    {
        "line": 93,
        "fullcodeline": "sizeof(struct ext2_xattr_header) - sizeof(__u32);"
    },
    {
        "line": 148,
        "fullcodeline": "if (header == NULL)"
    },
    {
        "line": 189,
        "fullcodeline": "if (size == EXT2_XATTR_SIZE(value_len)) {"
    },
    {
        "line": 220,
        "fullcodeline": "(char*)last - (char*)here);"
    },
    {
        "line": 62,
        "fullcodeline": "if (offs < min_offs)"
    },
    {
        "line": 82,
        "fullcodeline": "if (offs < min_offs)"
    },
    {
        "line": 113,
        "fullcodeline": "if (le16_to_cpu(here->e_value_offs) + size >"
    },
    {
        "line": 114,
        "fullcodeline": "sb->s_blocksize || size > sb->s_blocksize)"
    },
    {
        "line": 187,
        "fullcodeline": "le32_to_cpu(here->e_value_size));"
    },
    {
        "line": 192,
        "fullcodeline": "here->e_value_size = cpu_to_le32(value_len);"
    },
    {
        "line": 207,
        "fullcodeline": "while (!IS_LAST_ENTRY(last)) {"
    },
    {
        "line": 208,
        "fullcodeline": "size_t o = le16_to_cpu(last->e_value_offs);"
    },
    {
        "line": 212,
        "fullcodeline": "last = EXT2_XATTR_NEXT(last);"
    },
    {
        "line": 63,
        "fullcodeline": "min_offs = offs;"
    },
    {
        "line": 83,
        "fullcodeline": "min_offs = offs;"
    },
    {
        "line": 193,
        "fullcodeline": "memset(val + size - EXT2_XATTR_PAD, 0,"
    },
    {
        "line": 209,
        "fullcodeline": "if (!last->e_value_block && o < offs)"
    },
    {
        "line": 210,
        "fullcodeline": "last->e_value_offs ="
    },
    {
        "line": 211,
        "fullcodeline": "cpu_to_le16(o + size);"
    }
]