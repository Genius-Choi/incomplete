[
    {
        "line": 4,
        "fullcodeline": "int error = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "BUFFER_TRACE(bh, \"get_write_access\");"
    },
    {
        "line": 7,
        "fullcodeline": "error = ext4_journal_get_write_access(handle, bh);"
    },
    {
        "line": 11,
        "fullcodeline": "lock_buffer(bh);"
    },
    {
        "line": 53,
        "fullcodeline": "ext4_std_error(inode->i_sb, error);"
    },
    {
        "line": 12,
        "fullcodeline": "if (BHDR(bh)->h_refcount == cpu_to_le32(1)) {"
    },
    {
        "line": 13,
        "fullcodeline": "__u32 hash = le32_to_cpu(BHDR(bh)->h_hash);"
    },
    {
        "line": 15,
        "fullcodeline": "ea_bdebug(bh, \"refcount now=0; freeing\");"
    },
    {
        "line": 20,
        "fullcodeline": "mb2_cache_entry_delete_block(EXT4_GET_MB_CACHE(inode), hash,"
    },
    {
        "line": 22,
        "fullcodeline": "get_bh(bh);"
    },
    {
        "line": 23,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 24,
        "fullcodeline": "ext4_free_blocks(handle, inode, bh, 0, 1,"
    },
    {
        "line": 25,
        "fullcodeline": "EXT4_FREE_BLOCKS_METADATA |"
    },
    {
        "line": 28,
        "fullcodeline": "le32_add_cpu(&BHDR(bh)->h_refcount, -1);"
    },
    {
        "line": 42,
        "fullcodeline": "unlock_buffer(bh);"
    },
    {
        "line": 48,
        "fullcodeline": "dquot_free_block(inode, EXT4_C2B(EXT4_SB(inode->i_sb), 1));"
    },
    {
        "line": 49,
        "fullcodeline": "ea_bdebug(bh, \"refcount now=%d; releasing\","
    },
    {
        "line": 39,
        "fullcodeline": "if (ext4_handle_valid(handle))"
    },
    {
        "line": 43,
        "fullcodeline": "if (!ext4_handle_valid(handle))"
    },
    {
        "line": 46,
        "fullcodeline": "if (IS_SYNC(inode))"
    },
    {
        "line": 50,
        "fullcodeline": "le32_to_cpu(BHDR(bh)->h_refcount));"
    },
    {
        "line": 40,
        "fullcodeline": "error = ext4_handle_dirty_xattr_block(handle, inode,"
    },
    {
        "line": 44,
        "fullcodeline": "error = ext4_handle_dirty_xattr_block(handle, inode,"
    },
    {
        "line": 47,
        "fullcodeline": "ext4_handle_sync(handle);"
    }
]