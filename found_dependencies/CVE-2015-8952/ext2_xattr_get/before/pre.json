[
    {
        "line": 4,
        "fullcodeline": "struct buffer_head *bh = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "ea_idebug(inode, \"name=%d.%s, buffer=%p, buffer_size=%ld\","
    },
    {
        "line": 15,
        "fullcodeline": "name_len = strlen(name);"
    },
    {
        "line": 19,
        "fullcodeline": "down_read(&EXT2_I(inode)->xattr_sem);"
    },
    {
        "line": 20,
        "fullcodeline": "error = -ENODATA;"
    },
    {
        "line": 23,
        "fullcodeline": "ea_idebug(inode, \"reading block %d\", EXT2_I(inode)->i_file_acl);"
    },
    {
        "line": 24,
        "fullcodeline": "bh = sb_bread(inode->i_sb, EXT2_I(inode)->i_file_acl);"
    },
    {
        "line": 25,
        "fullcodeline": "error = -EIO;"
    },
    {
        "line": 28,
        "fullcodeline": "ea_bdebug(bh, \"b_count=%d, refcount=%d\","
    },
    {
        "line": 30,
        "fullcodeline": "end = bh->b_data + bh->b_size;"
    },
    {
        "line": 41,
        "fullcodeline": "entry = FIRST_ENTRY(bh);"
    },
    {
        "line": 55,
        "fullcodeline": "error = -ENODATA;"
    },
    {
        "line": 61,
        "fullcodeline": "size = le32_to_cpu(entry->e_value_size);"
    },
    {
        "line": 76,
        "fullcodeline": "error = size;"
    },
    {
        "line": 11,
        "fullcodeline": "name_index, name, buffer, (long)buffer_size);"
    },
    {
        "line": 13,
        "fullcodeline": "if (name == NULL)"
    },
    {
        "line": 16,
        "fullcodeline": "if (name_len > 255)"
    },
    {
        "line": 21,
        "fullcodeline": "if (!EXT2_I(inode)->i_file_acl)"
    },
    {
        "line": 26,
        "fullcodeline": "if (!bh)"
    },
    {
        "line": 29,
        "fullcodeline": "atomic_read(&(bh->b_count)), le32_to_cpu(HDR(bh)->h_refcount));"
    },
    {
        "line": 53,
        "fullcodeline": "if (ext2_xattr_cache_insert(bh))"
    },
    {
        "line": 66,
        "fullcodeline": "if (ext2_xattr_cache_insert(bh))"
    },
    {
        "line": 31,
        "fullcodeline": "if (HDR(bh)->h_magic != cpu_to_le32(EXT2_XATTR_MAGIC) ||"
    },
    {
        "line": 32,
        "fullcodeline": "HDR(bh)->h_blocks != cpu_to_le32(1)) {"
    },
    {
        "line": 33,
        "fullcodeline": "bad_block:\text2_error(inode->i_sb, \"ext2_xattr_get\","
    },
    {
        "line": 36,
        "fullcodeline": "error = -EIO;"
    },
    {
        "line": 42,
        "fullcodeline": "while (!IS_LAST_ENTRY(entry)) {"
    },
    {
        "line": 43,
        "fullcodeline": "struct ext2_xattr_entry *next ="
    },
    {
        "line": 51,
        "fullcodeline": "entry = next;"
    },
    {
        "line": 54,
        "fullcodeline": "ea_idebug(inode, \"cache insert failed\");"
    },
    {
        "line": 62,
        "fullcodeline": "if (size > inode->i_sb->s_blocksize ||"
    },
    {
        "line": 63,
        "fullcodeline": "le16_to_cpu(entry->e_value_offs) + size > inode->i_sb->s_blocksize)"
    },
    {
        "line": 67,
        "fullcodeline": "ea_idebug(inode, \"cache insert failed\");"
    },
    {
        "line": 69,
        "fullcodeline": "error = -ERANGE;"
    },
    {
        "line": 73,
        "fullcodeline": "memcpy(buffer, bh->b_data + le16_to_cpu(entry->e_value_offs),"
    },
    {
        "line": 14,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ERANGE;"
    },
    {
        "line": 44,
        "fullcodeline": "EXT2_XATTR_NEXT(entry);"
    },
    {
        "line": 70,
        "fullcodeline": "if (size > buffer_size)"
    },
    {
        "line": 35,
        "fullcodeline": "EXT2_I(inode)->i_file_acl);"
    },
    {
        "line": 47,
        "fullcodeline": "if (name_index == entry->e_name_index &&"
    },
    {
        "line": 49,
        "fullcodeline": "memcmp(name, entry->e_name, name_len) == 0)"
    },
    {
        "line": 48,
        "fullcodeline": "name_len == entry->e_name_len &&"
    }
]