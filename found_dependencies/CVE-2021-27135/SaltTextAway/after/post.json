[
    {
        "line": 6,
        "fullcodeline": "TScreen *screen = TScreenOf(xw);"
    },
    {
        "line": 10,
        "fullcodeline": "int need = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "size_t have = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "TRACE((\"SaltTextAway which=%d, first=%d,%d, last=%d,%d\\n\","
    },
    {
        "line": 31,
        "fullcodeline": "--last.col;"
    },
    {
        "line": 70,
        "fullcodeline": "line[need] = '\\0';\t\t/* make sure it is null terminated */"
    },
    {
        "line": 71,
        "fullcodeline": "lp = line;\t\t\t/* lp points to where to save the text */"
    },
    {
        "line": 86,
        "fullcodeline": "*lp = '\\0';\t\t\t/* make sure we have end marked */"
    },
    {
        "line": 88,
        "fullcodeline": "have = (size_t) (lp - line);"
    },
    {
        "line": 98,
        "fullcodeline": "TRACE((\"Salted TEXT:%u:%s\\n\", (unsigned) have,"
    },
    {
        "line": 101,
        "fullcodeline": "scp->data_length = have;"
    },
    {
        "line": 17,
        "fullcodeline": "if (which < 0 || which >= MAX_SELECTIONS) {"
    },
    {
        "line": 26,
        "fullcodeline": "if (isSameRow(&first, &last) && first.col > last.col) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (isSameRow(&last, &first)) {"
    },
    {
        "line": 54,
        "fullcodeline": "if (need < 0)"
    },
    {
        "line": 57,
        "fullcodeline": "if (scp->data_limit <= (unsigned) need) {"
    },
    {
        "line": 67,
        "fullcodeline": "if (line == 0)"
    },
    {
        "line": 72,
        "fullcodeline": "if (isSameRow(&last, &first)) {"
    },
    {
        "line": 93,
        "fullcodeline": "if ((have * 2) < (size_t) need) {"
    },
    {
        "line": 18,
        "fullcodeline": "TRACE((\"SaltTextAway - which selection?\\n\"));"
    },
    {
        "line": 28,
        "fullcodeline": "EXCHANGE(first.col, last.col, tmp);"
    },
    {
        "line": 35,
        "fullcodeline": "need = Length(screen, first.row, first.col, last.col);"
    },
    {
        "line": 60,
        "fullcodeline": "free(scp->data_buffer);"
    },
    {
        "line": 61,
        "fullcodeline": "scp->data_buffer = line;"
    },
    {
        "line": 62,
        "fullcodeline": "scp->data_limit = (size_t) (need + 1);"
    },
    {
        "line": 73,
        "fullcodeline": "lp = SaveText(screen, last.row, first.col, last.col, lp, &eol);"
    },
    {
        "line": 94,
        "fullcodeline": "scp->data_limit = have + 1;"
    },
    {
        "line": 95,
        "fullcodeline": "line = realloc(line, scp->data_limit);"
    },
    {
        "line": 37,
        "fullcodeline": "need += Length(screen, first.row, first.col, screen->max_col) + 1;"
    },
    {
        "line": 58,
        "fullcodeline": "if ((line = (Char *) malloc((size_t) need + 1)) == 0)"
    },
    {
        "line": 64,
        "fullcodeline": "line = scp->data_buffer;"
    },
    {
        "line": 75,
        "fullcodeline": "lp = SaveText(screen, first.row, first.col, screen->max_col, lp, &eol);"
    },
    {
        "line": 99,
        "fullcodeline": "visibleChars(line, (unsigned) have)));"
    },
    {
        "line": 38,
        "fullcodeline": "for (i = first.row + 1; i < last.row; i++)"
    },
    {
        "line": 39,
        "fullcodeline": "need += Length(screen, i, 0, screen->max_col) + 1;"
    },
    {
        "line": 40,
        "fullcodeline": "if (last.col >= 0)"
    },
    {
        "line": 59,
        "fullcodeline": "SysError(ERROR_BMALLOC2);"
    },
    {
        "line": 78,
        "fullcodeline": "for (i = first.row + 1; i < last.row; i++) {"
    },
    {
        "line": 83,
        "fullcodeline": "if (last.col >= 0)"
    },
    {
        "line": 41,
        "fullcodeline": "need += Length(screen, last.row, 0, last.col);"
    },
    {
        "line": 77,
        "fullcodeline": "*lp++ = '\\n';\t/* put in newline at end of line */"
    },
    {
        "line": 79,
        "fullcodeline": "lp = SaveText(screen, i, 0, screen->max_col, lp, &eol);"
    },
    {
        "line": 84,
        "fullcodeline": "lp = SaveText(screen, last.row, 0, last.col, lp, &eol);"
    },
    {
        "line": 81,
        "fullcodeline": "*lp++ = '\\n';"
    }
]