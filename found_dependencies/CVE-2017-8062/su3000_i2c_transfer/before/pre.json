[
    {
        "line": 4,
        "fullcodeline": "struct dvb_usb_device *d = i2c_get_adapdata(adap);"
    },
    {
        "line": 5,
        "fullcodeline": "u8 obuf[0x40], ibuf[0x40];"
    },
    {
        "line": 7,
        "fullcodeline": "if (!d)"
    },
    {
        "line": 9,
        "fullcodeline": "if (mutex_lock_interruptible(&d->i2c_mutex) < 0)"
    },
    {
        "line": 45,
        "fullcodeline": "obuf[0] = 0x09;"
    },
    {
        "line": 46,
        "fullcodeline": "obuf[1] = msg[0].len;"
    },
    {
        "line": 47,
        "fullcodeline": "obuf[2] = msg[1].len;"
    },
    {
        "line": 48,
        "fullcodeline": "obuf[3] = msg[0].addr;"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(&obuf[4], msg[0].buf, msg[0].len);"
    },
    {
        "line": 8,
        "fullcodeline": "return -ENODEV;"
    },
    {
        "line": 10,
        "fullcodeline": "return -EAGAIN;"
    },
    {
        "line": 16,
        "fullcodeline": "obuf[0] = msg[0].buf[0] + 0x36;"
    },
    {
        "line": 17,
        "fullcodeline": "obuf[1] = 3;"
    },
    {
        "line": 18,
        "fullcodeline": "obuf[2] = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "obuf[0] = 0x10;"
    },
    {
        "line": 31,
        "fullcodeline": "obuf[0] = 0x08;"
    },
    {
        "line": 32,
        "fullcodeline": "obuf[1] = msg[0].addr;"
    },
    {
        "line": 33,
        "fullcodeline": "obuf[2] = msg[0].len;"
    },
    {
        "line": 35,
        "fullcodeline": "memcpy(&obuf[3], msg[0].buf, msg[0].len);"
    },
    {
        "line": 51,
        "fullcodeline": "if (dvb_usb_generic_rw(d, obuf, msg[0].len + 4,"
    },
    {
        "line": 19,
        "fullcodeline": "if (dvb_usb_generic_rw(d, obuf, 3, ibuf, 0, 0) < 0)"
    },
    {
        "line": 24,
        "fullcodeline": "if (dvb_usb_generic_rw(d, obuf, 1, ibuf, 2, 0) < 0)"
    },
    {
        "line": 37,
        "fullcodeline": "if (dvb_usb_generic_rw(d, obuf, msg[0].len + 3,"
    }
]