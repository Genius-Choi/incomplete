[
    {
        "line": 9,
        "fullcodeline": "bool startAllowed = false;"
    },
    {
        "line": 10,
        "fullcodeline": "bool endAllowed = false;"
    },
    {
        "line": 3,
        "fullcodeline": "if (start > end) return false;"
    },
    {
        "line": 6,
        "fullcodeline": "if (start < FLASH_ORIGIN || end > FLASH_END) return false;"
    },
    {
        "line": 11,
        "fullcodeline": "for (const FlashSector* s = flash_sector_map; s->use != FLASH_INVALID; s++) {"
    },
    {
        "line": 30,
        "fullcodeline": "if (!startAllowed || !endAllowed) return false;"
    },
    {
        "line": 12,
        "fullcodeline": "if (allow_svhandler_flash_sector(s)) {"
    },
    {
        "line": 13,
        "fullcodeline": "if (!startAllowed &&"
    },
    {
        "line": 18,
        "fullcodeline": "if (!endAllowed &&"
    },
    {
        "line": 15,
        "fullcodeline": "do_memory_ranges_overlap(start, start + 1, s->start, s->start + s->len)) {"
    },
    {
        "line": 16,
        "fullcodeline": "startAllowed = true;"
    },
    {
        "line": 20,
        "fullcodeline": "do_memory_ranges_overlap(end - 1, end, s->start, s->start + s->len)) {"
    },
    {
        "line": 21,
        "fullcodeline": "endAllowed = true;"
    },
    {
        "line": 24,
        "fullcodeline": "if (do_memory_ranges_overlap(start, end, s->start, s->start + s->len)) return false;"
    },
    {
        "line": 14,
        "fullcodeline": "start + 1 > start &&"
    },
    {
        "line": 19,
        "fullcodeline": "end - 1 < end &&"
    }
]