[
    {
        "line": 4,
        "fullcodeline": "unsigned char *encodedPoint = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "int encoded_pt_len = 0;"
    },
    {
        "line": 6,
        "fullcodeline": "EVP_PKEY *ckey = NULL, *skey = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "skey = s->s3->peer_tmp;"
    },
    {
        "line": 14,
        "fullcodeline": "ckey = ssl_generate_pkey(skey);"
    },
    {
        "line": 26,
        "fullcodeline": "encoded_pt_len = EVP_PKEY_get1_tls_encodedpoint(ckey, &encodedPoint);"
    },
    {
        "line": 36,
        "fullcodeline": "*len = encoded_pt_len;"
    },
    {
        "line": 39,
        "fullcodeline": "**p = *len;"
    },
    {
        "line": 40,
        "fullcodeline": "*p += 1;"
    },
    {
        "line": 42,
        "fullcodeline": "memcpy(*p, encodedPoint, *len);"
    },
    {
        "line": 9,
        "fullcodeline": "if (skey == NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (ckey == NULL) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (encoded_pt_len == 0) {"
    },
    {
        "line": 10,
        "fullcodeline": "SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);"
    },
    {
        "line": 20,
        "fullcodeline": "if (ssl_derive(s, ckey, skey) == 0) {"
    },
    {
        "line": 21,
        "fullcodeline": "SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);"
    },
    {
        "line": 29,
        "fullcodeline": "SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EC_LIB);"
    }
]