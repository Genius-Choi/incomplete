[
    {
        "line": 3,
        "fullcodeline": "enum bp_state state = BP_DONE;"
    },
    {
        "line": 28,
        "fullcodeline": "} while (credit && state == BP_DONE);"
    },
    {
        "line": 31,
        "fullcodeline": "if (state == BP_EAGAIN)"
    },
    {
        "line": 8,
        "fullcodeline": "mutex_lock(&balloon_mutex);"
    },
    {
        "line": 10,
        "fullcodeline": "credit = current_credit();"
    },
    {
        "line": 22,
        "fullcodeline": "state = update_schedule(state);"
    },
    {
        "line": 24,
        "fullcodeline": "mutex_unlock(&balloon_mutex);"
    },
    {
        "line": 26,
        "fullcodeline": "cond_resched();"
    },
    {
        "line": 32,
        "fullcodeline": "schedule_delayed_work(&balloon_worker, balloon_stats.schedule_delay * HZ);"
    },
    {
        "line": 12,
        "fullcodeline": "if (credit > 0) {"
    },
    {
        "line": 19,
        "fullcodeline": "if (credit < 0)"
    },
    {
        "line": 20,
        "fullcodeline": "state = decrease_reservation(-credit, GFP_BALLOON);"
    },
    {
        "line": 13,
        "fullcodeline": "if (balloon_is_inflated())"
    },
    {
        "line": 14,
        "fullcodeline": "state = increase_reservation(credit);"
    },
    {
        "line": 16,
        "fullcodeline": "state = reserve_additional_memory();"
    }
]