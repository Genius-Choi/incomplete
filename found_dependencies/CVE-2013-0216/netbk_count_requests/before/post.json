[
    {
        "line": 7,
        "fullcodeline": "int frags = 0;"
    },
    {
        "line": 9,
        "fullcodeline": "if (!(first->flags & XEN_NETTXF_more_data))"
    },
    {
        "line": 38,
        "fullcodeline": "} while ((txp++)->flags & XEN_NETTXF_more_data);"
    },
    {
        "line": 23,
        "fullcodeline": "memcpy(txp, RING_GET_REQUEST(&vif->tx, cons + frags),"
    },
    {
        "line": 30,
        "fullcodeline": "first->size -= txp->size;"
    },
    {
        "line": 31,
        "fullcodeline": "frags++;"
    },
    {
        "line": 13,
        "fullcodeline": "if (frags >= work_to_do) {"
    },
    {
        "line": 18,
        "fullcodeline": "if (unlikely(frags >= MAX_SKB_FRAGS)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (txp->size > first->size) {"
    },
    {
        "line": 33,
        "fullcodeline": "if (unlikely((txp->offset + txp->size) > PAGE_SIZE)) {"
    },
    {
        "line": 14,
        "fullcodeline": "netdev_dbg(vif->dev, \"Need more frags\\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "netdev_dbg(vif->dev, \"Too many frags\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "netdev_dbg(vif->dev, \"Frags galore\\n\");"
    },
    {
        "line": 34,
        "fullcodeline": "netdev_dbg(vif->dev, \"txp->offset: %x, size: %u\\n\","
    },
    {
        "line": 15,
        "fullcodeline": "return -frags;"
    },
    {
        "line": 20,
        "fullcodeline": "return -frags;"
    },
    {
        "line": 27,
        "fullcodeline": "return -frags;"
    },
    {
        "line": 36,
        "fullcodeline": "return -frags;"
    }
]