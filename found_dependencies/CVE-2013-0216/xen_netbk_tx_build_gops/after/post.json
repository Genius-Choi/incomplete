[
    {
        "line": 3,
        "fullcodeline": "struct gnttab_copy *gop = netbk->tx_copy_ops, *request_gop;"
    },
    {
        "line": 7,
        "fullcodeline": "while (((nr_pending_reqs(netbk) + MAX_SKB_FRAGS) < MAX_PENDING_REQS) &&"
    },
    {
        "line": 183,
        "fullcodeline": "return gop - netbk->tx_copy_ops;"
    },
    {
        "line": 8,
        "fullcodeline": "!list_empty(&netbk->net_schedule_list)) {"
    },
    {
        "line": 11,
        "fullcodeline": "struct xen_netif_tx_request txfrags[MAX_SKB_FRAGS];"
    },
    {
        "line": 13,
        "fullcodeline": "struct xen_netif_extra_info extras[XEN_NETIF_EXTRA_TYPE_MAX-1];"
    },
    {
        "line": 21,
        "fullcodeline": "vif = poll_net_schedule_list(netbk);"
    },
    {
        "line": 41,
        "fullcodeline": "RING_FINAL_CHECK_FOR_REQUESTS(&vif->tx, work_to_do);"
    },
    {
        "line": 47,
        "fullcodeline": "idx = vif->tx.req_cons;"
    },
    {
        "line": 48,
        "fullcodeline": "rmb(); /* Ensure that we see the request before we copy it. */"
    },
    {
        "line": 49,
        "fullcodeline": "memcpy(&txreq, RING_GET_REQUEST(&vif->tx, idx), sizeof(txreq));"
    },
    {
        "line": 58,
        "fullcodeline": "vif->remaining_credit -= txreq.size;"
    },
    {
        "line": 60,
        "fullcodeline": "work_to_do--;"
    },
    {
        "line": 61,
        "fullcodeline": "vif->tx.req_cons = ++idx;"
    },
    {
        "line": 63,
        "fullcodeline": "memset(extras, 0, sizeof(extras));"
    },
    {
        "line": 72,
        "fullcodeline": "ret = netbk_count_requests(vif, &txreq, txfrags, work_to_do);"
    },
    {
        "line": 76,
        "fullcodeline": "idx += ret;"
    },
    {
        "line": 95,
        "fullcodeline": "index = pending_index(netbk->pending_cons);"
    },
    {
        "line": 98,
        "fullcodeline": "data_len = (txreq.size > PKT_PROT_LEN &&"
    },
    {
        "line": 102,
        "fullcodeline": "skb = alloc_skb(data_len + NET_SKB_PAD + NET_IP_ALIGN,"
    },
    {
        "line": 112,
        "fullcodeline": "skb_reserve(skb, NET_SKB_PAD + NET_IP_ALIGN);"
    },
    {
        "line": 126,
        "fullcodeline": "page = xen_netbk_alloc_page(netbk, skb, pending_idx);"
    },
    {
        "line": 133,
        "fullcodeline": "gop->source.u.ref = txreq.gref;"
    },
    {
        "line": 134,
        "fullcodeline": "gop->source.domid = vif->domid;"
    },
    {
        "line": 135,
        "fullcodeline": "gop->source.offset = txreq.offset;"
    },
    {
        "line": 137,
        "fullcodeline": "gop->dest.u.gmfn = virt_to_mfn(page_address(page));"
    },
    {
        "line": 138,
        "fullcodeline": "gop->dest.domid = DOMID_SELF;"
    },
    {
        "line": 139,
        "fullcodeline": "gop->dest.offset = txreq.offset;"
    },
    {
        "line": 141,
        "fullcodeline": "gop->len = txreq.size;"
    },
    {
        "line": 142,
        "fullcodeline": "gop->flags = GNTCOPY_source_gref;"
    },
    {
        "line": 144,
        "fullcodeline": "gop++;"
    },
    {
        "line": 146,
        "fullcodeline": "memcpy(&netbk->pending_tx_info[pending_idx].req,"
    },
    {
        "line": 148,
        "fullcodeline": "netbk->pending_tx_info[pending_idx].vif = vif;"
    },
    {
        "line": 149,
        "fullcodeline": "*((u16 *)skb->data) = pending_idx;"
    },
    {
        "line": 151,
        "fullcodeline": "__skb_put(skb, data_len);"
    },
    {
        "line": 153,
        "fullcodeline": "skb_shinfo(skb)->nr_frags = ret;"
    },
    {
        "line": 163,
        "fullcodeline": "netbk->pending_cons++;"
    },
    {
        "line": 165,
        "fullcodeline": "request_gop = xen_netbk_get_requests(netbk, vif,"
    },
    {
        "line": 172,
        "fullcodeline": "gop = request_gop;"
    },
    {
        "line": 174,
        "fullcodeline": "__skb_queue_tail(&netbk->tx_queue, skb);"
    },
    {
        "line": 176,
        "fullcodeline": "vif->tx.req_cons = idx;"
    },
    {
        "line": 177,
        "fullcodeline": "xen_netbk_check_rx_xenvif(vif);"
    },
    {
        "line": 27,
        "fullcodeline": "if (!vif)"
    },
    {
        "line": 30,
        "fullcodeline": "if (vif->tx.sring->req_prod - vif->tx.req_cons >"
    },
    {
        "line": 42,
        "fullcodeline": "if (!work_to_do) {"
    },
    {
        "line": 52,
        "fullcodeline": "if (txreq.size > vif->remaining_credit &&"
    },
    {
        "line": 64,
        "fullcodeline": "if (txreq.flags & XEN_NETTXF_extra_info) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (unlikely(ret < 0))"
    },
    {
        "line": 78,
        "fullcodeline": "if (unlikely(txreq.size < ETH_HLEN)) {"
    },
    {
        "line": 86,
        "fullcodeline": "if (unlikely((txreq.offset + txreq.size) > PAGE_SIZE)) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (unlikely(skb == NULL)) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (!page) {"
    },
    {
        "line": 154,
        "fullcodeline": "if (data_len < txreq.size) {"
    },
    {
        "line": 167,
        "fullcodeline": "if (request_gop == NULL) {"
    },
    {
        "line": 179,
        "fullcodeline": "if ((gop-netbk->tx_copy_ops) >= ARRAY_SIZE(netbk->tx_copy_ops))"
    },
    {
        "line": 32,
        "fullcodeline": "netdev_err(vif->dev,"
    },
    {
        "line": 37,
        "fullcodeline": "netbk_fatal_tx_err(vif);"
    },
    {
        "line": 43,
        "fullcodeline": "xenvif_put(vif);"
    },
    {
        "line": 53,
        "fullcodeline": "tx_credit_exceeded(vif, txreq.size)) {"
    },
    {
        "line": 54,
        "fullcodeline": "xenvif_put(vif);"
    },
    {
        "line": 65,
        "fullcodeline": "work_to_do = xen_netbk_get_extras(vif, extras,"
    },
    {
        "line": 79,
        "fullcodeline": "netdev_dbg(vif->dev,"
    },
    {
        "line": 81,
        "fullcodeline": "netbk_tx_err(vif, &txreq, idx);"
    },
    {
        "line": 87,
        "fullcodeline": "netdev_err(vif->dev,"
    },
    {
        "line": 91,
        "fullcodeline": "netbk_fatal_tx_err(vif);"
    },
    {
        "line": 103,
        "fullcodeline": "GFP_ATOMIC | __GFP_NOWARN);"
    },
    {
        "line": 105,
        "fullcodeline": "netdev_dbg(vif->dev,"
    },
    {
        "line": 107,
        "fullcodeline": "netbk_tx_err(vif, &txreq, idx);"
    },
    {
        "line": 128,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 129,
        "fullcodeline": "netbk_tx_err(vif, &txreq, idx);"
    },
    {
        "line": 155,
        "fullcodeline": "skb_shinfo(skb)->nr_frags++;"
    },
    {
        "line": 156,
        "fullcodeline": "frag_set_pending_idx(&skb_shinfo(skb)->frags[0],"
    },
    {
        "line": 168,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 169,
        "fullcodeline": "netbk_tx_err(vif, &txreq, idx);"
    },
    {
        "line": 68,
        "fullcodeline": "if (unlikely(work_to_do < 0))"
    },
    {
        "line": 90,
        "fullcodeline": "(txreq.offset&~PAGE_MASK) + txreq.size);"
    },
    {
        "line": 99,
        "fullcodeline": "ret < MAX_SKB_FRAGS) ?"
    },
    {
        "line": 114,
        "fullcodeline": "if (extras[XEN_NETIF_EXTRA_TYPE_GSO - 1].type) {"
    },
    {
        "line": 118,
        "fullcodeline": "if (netbk_set_skb_gso(vif, skb, gso)) {"
    },
    {
        "line": 159,
        "fullcodeline": "frag_set_pending_idx(&skb_shinfo(skb)->frags[0],"
    },
    {
        "line": 120,
        "fullcodeline": "kfree_skb(skb);"
    },
    {
        "line": 116,
        "fullcodeline": "gso = &extras[XEN_NETIF_EXTRA_TYPE_GSO - 1];"
    }
]