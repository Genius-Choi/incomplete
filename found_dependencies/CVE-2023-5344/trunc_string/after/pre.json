[
    {
        "line": 7,
        "fullcodeline": "size_t\troom = room_in - 3; // \"...\" takes 3 chars"
    },
    {
        "line": 9,
        "fullcodeline": "size_t\tlen = 0;"
    },
    {
        "line": 23,
        "fullcodeline": "half = room / 2;"
    },
    {
        "line": 49,
        "fullcodeline": "i = e;"
    },
    {
        "line": 14,
        "fullcodeline": "if (*s == NUL)"
    },
    {
        "line": 26,
        "fullcodeline": "for (e = 0; len < half && e < buflen; ++e)"
    },
    {
        "line": 50,
        "fullcodeline": "if (enc_dbcs != 0)"
    },
    {
        "line": 86,
        "fullcodeline": "if (i <= e + 3)"
    },
    {
        "line": 22,
        "fullcodeline": "room = 0;"
    },
    {
        "line": 34,
        "fullcodeline": "n = ptr2cells(s + e);"
    },
    {
        "line": 37,
        "fullcodeline": "len += n;"
    },
    {
        "line": 38,
        "fullcodeline": "buf[e] = s[e];"
    },
    {
        "line": 55,
        "fullcodeline": "n = vim_strsize(s + i);"
    },
    {
        "line": 16,
        "fullcodeline": "if (buflen > 0)"
    },
    {
        "line": 28,
        "fullcodeline": "if (s[e] == NUL)"
    },
    {
        "line": 35,
        "fullcodeline": "if (len + n > half)"
    },
    {
        "line": 89,
        "fullcodeline": "if (s != buf)"
    },
    {
        "line": 17,
        "fullcodeline": "*buf = NUL;"
    },
    {
        "line": 58,
        "fullcodeline": "n -= ptr2cells(s + i);"
    },
    {
        "line": 59,
        "fullcodeline": "i += (*mb_ptr2len)(s + i);"
    },
    {
        "line": 91,
        "fullcodeline": "len = STRLEN(s);"
    },
    {
        "line": 94,
        "fullcodeline": "len = len - e + 1;"
    },
    {
        "line": 101,
        "fullcodeline": "else if (e + 3 < buflen)"
    },
    {
        "line": 65,
        "fullcodeline": "half = i = (int)STRLEN(s);"
    },
    {
        "line": 92,
        "fullcodeline": "if (len >= (size_t)buflen)"
    },
    {
        "line": 95,
        "fullcodeline": "if (len < 1)"
    },
    {
        "line": 105,
        "fullcodeline": "len = STRLEN(s + i) + 1;"
    },
    {
        "line": 108,
        "fullcodeline": "mch_memmove(buf + e + 3, s + i, len);"
    },
    {
        "line": 40,
        "fullcodeline": "for (n = (*mb_ptr2len)(s + e); --n > 0; )"
    },
    {
        "line": 44,
        "fullcodeline": "buf[e] = s[e];"
    },
    {
        "line": 93,
        "fullcodeline": "len = buflen - 1;"
    },
    {
        "line": 106,
        "fullcodeline": "if (len >= (size_t)buflen - e - 3)"
    },
    {
        "line": 42,
        "fullcodeline": "if (++e == buflen)"
    },
    {
        "line": 71,
        "fullcodeline": "n = ptr2cells(s + half);"
    },
    {
        "line": 74,
        "fullcodeline": "len += n;"
    },
    {
        "line": 75,
        "fullcodeline": "i = (int)half;"
    },
    {
        "line": 81,
        "fullcodeline": "i - 1 >= 0 && len + (n = ptr2cells(s + i - 1)) <= room; --i)"
    },
    {
        "line": 82,
        "fullcodeline": "len += n;"
    },
    {
        "line": 107,
        "fullcodeline": "len = buflen - e - 3 - 1;"
    },
    {
        "line": 69,
        "fullcodeline": "half = half - utf_head_off(s, s + half - 1) - 1;"
    },
    {
        "line": 80,
        "fullcodeline": "for (i = (int)STRLEN(s);"
    },
    {
        "line": 70,
        "fullcodeline": "while (half > 0 && utf_iscomposing(utf_ptr2char(s + half)));"
    },
    {
        "line": 72,
        "fullcodeline": "if (len + n > room || half == 0)"
    }
]