[
    {
        "line": 6,
        "fullcodeline": "const int w    = 8;"
    },
    {
        "line": 7,
        "fullcodeline": "const int ix   = ox  >> (16 + shift);"
    },
    {
        "line": 8,
        "fullcodeline": "const int iy   = oy  >> (16 + shift);"
    },
    {
        "line": 9,
        "fullcodeline": "const int oxs  = ox  >> 4;"
    },
    {
        "line": 10,
        "fullcodeline": "const int oys  = oy  >> 4;"
    },
    {
        "line": 11,
        "fullcodeline": "const int dxxs = dxx >> 4;"
    },
    {
        "line": 12,
        "fullcodeline": "const int dxys = dxy >> 4;"
    },
    {
        "line": 13,
        "fullcodeline": "const int dyxs = dyx >> 4;"
    },
    {
        "line": 14,
        "fullcodeline": "const int dyys = dyy >> 4;"
    },
    {
        "line": 15,
        "fullcodeline": "const uint16_t r4[4]   = { r, r, r, r };"
    },
    {
        "line": 16,
        "fullcodeline": "const uint16_t dxy4[4] = { dxys, dxys, dxys, dxys };"
    },
    {
        "line": 17,
        "fullcodeline": "const uint16_t dyy4[4] = { dyys, dyys, dyys, dyys };"
    },
    {
        "line": 18,
        "fullcodeline": "const uint64_t shift2  = 2 * shift;"
    },
    {
        "line": 21,
        "fullcodeline": "uint8_t edge_buf[(MAX_H + 1) * MAX_STRIDE];"
    },
    {
        "line": 24,
        "fullcodeline": "const int dxw = (dxx - (1 << (16 + shift))) * (w - 1);"
    },
    {
        "line": 25,
        "fullcodeline": "const int dyh = (dyy - (1 << (16 + shift))) * (h - 1);"
    },
    {
        "line": 26,
        "fullcodeline": "const int dxh = dxy * (h - 1);"
    },
    {
        "line": 27,
        "fullcodeline": "const int dyw = dyx * (w - 1);"
    },
    {
        "line": 28,
        "fullcodeline": "int need_emu  =  (unsigned) ix >= width  - w || width < w ||"
    },
    {
        "line": 44,
        "fullcodeline": "src += ix + iy * stride;"
    },
    {
        "line": 33,
        "fullcodeline": "((ox ^ (ox + dxw)) | (ox ^ (ox + dxh)) | (ox ^ (ox + dxw + dxh)) |"
    },
    {
        "line": 57,
        "fullcodeline": "for (x = 0; x < w; x += 4) {"
    },
    {
        "line": 29,
        "fullcodeline": "(unsigned) iy >= height - h || height< h"
    },
    {
        "line": 37,
        "fullcodeline": "(need_emu && (h > MAX_H || stride > MAX_STRIDE))) {"
    },
    {
        "line": 39,
        "fullcodeline": "ff_gmc_c(dst, src, stride, h, ox, oy, dxx, dxy, dyx, dyy,"
    },
    {
        "line": 46,
        "fullcodeline": "ff_emulated_edge_mc_8(edge_buf, src, stride, stride, w + 1, h + 1, ix, iy, width, height);"
    },
    {
        "line": 47,
        "fullcodeline": "src = edge_buf;"
    },
    {
        "line": 120,
        "fullcodeline": "src += 4 - h * stride;"
    },
    {
        "line": 36,
        "fullcodeline": "(dxx | dxy | dyx | dyy) & 15 ||"
    },
    {
        "line": 58,
        "fullcodeline": "uint16_t dx4[4] = { oxs - dxys + dxxs * (x + 0),"
    },
    {
        "line": 62,
        "fullcodeline": "uint16_t dy4[4] = { oys - dyys + dyxs * (x + 0),"
    },
    {
        "line": 67,
        "fullcodeline": "for (y = 0; y < h; y++) {"
    },
    {
        "line": 118,
        "fullcodeline": "src += stride;"
    },
    {
        "line": 34,
        "fullcodeline": "(oy ^ (oy + dyw)) | (oy ^ (oy + dyh)) | (oy ^ (oy + dyw + dyh))) >> (16 + shift) ||"
    },
    {
        "line": 59,
        "fullcodeline": "oxs - dxys + dxxs * (x + 1),"
    },
    {
        "line": 60,
        "fullcodeline": "oxs - dxys + dxxs * (x + 2),"
    },
    {
        "line": 61,
        "fullcodeline": "oxs - dxys + dxxs * (x + 3) };"
    },
    {
        "line": 63,
        "fullcodeline": "oys - dyys + dyxs * (x + 1),"
    },
    {
        "line": 64,
        "fullcodeline": "oys - dyys + dyxs * (x + 2),"
    },
    {
        "line": 65,
        "fullcodeline": "oys - dyys + dyxs * (x + 3) };"
    }
]