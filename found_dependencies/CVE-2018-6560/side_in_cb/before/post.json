[
    {
        "line": 3,
        "fullcodeline": "ProxySide *side = user_data;"
    },
    {
        "line": 4,
        "fullcodeline": "FlatpakProxyClient *client = side->client;"
    },
    {
        "line": 5,
        "fullcodeline": "GError *error = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "gboolean retval = G_SOURCE_CONTINUE;"
    },
    {
        "line": 9,
        "fullcodeline": "g_object_ref (client);"
    },
    {
        "line": 99,
        "fullcodeline": "g_object_unref (client);"
    },
    {
        "line": 11,
        "fullcodeline": "while (!side->closed)"
    },
    {
        "line": 95,
        "fullcodeline": "side->in_source = NULL;"
    },
    {
        "line": 96,
        "fullcodeline": "retval = G_SOURCE_REMOVE;"
    },
    {
        "line": 13,
        "fullcodeline": "if (!side->got_first_byte)"
    },
    {
        "line": 20,
        "fullcodeline": "if (!buffer_read (side, buffer, socket))"
    },
    {
        "line": 27,
        "fullcodeline": "if (!client->authenticated)"
    },
    {
        "line": 14,
        "fullcodeline": "buffer = buffer_new (1, NULL);"
    },
    {
        "line": 22,
        "fullcodeline": "if (buffer != side->current_read_buffer)"
    },
    {
        "line": 29,
        "fullcodeline": "if (buffer->pos > 0)"
    },
    {
        "line": 15,
        "fullcodeline": "else if (!client->authenticated)"
    },
    {
        "line": 23,
        "fullcodeline": "buffer_unref (buffer);"
    },
    {
        "line": 31,
        "fullcodeline": "gboolean found_auth_end = FALSE;"
    },
    {
        "line": 34,
        "fullcodeline": "buffer->size = buffer->pos;"
    },
    {
        "line": 58,
        "fullcodeline": "got_buffer_from_side (side, buffer);"
    },
    {
        "line": 68,
        "fullcodeline": "else if (buffer->pos == buffer->size)"
    },
    {
        "line": 16,
        "fullcodeline": "buffer = buffer_new (64, NULL);"
    },
    {
        "line": 35,
        "fullcodeline": "if (!side->got_first_byte)"
    },
    {
        "line": 65,
        "fullcodeline": "buffer_unref (buffer);"
    },
    {
        "line": 18,
        "fullcodeline": "buffer = side->current_read_buffer;"
    },
    {
        "line": 37,
        "fullcodeline": "buffer->send_credentials = TRUE;"
    },
    {
        "line": 38,
        "fullcodeline": "side->got_first_byte = TRUE;"
    },
    {
        "line": 61,
        "fullcodeline": "client->authenticated = TRUE;"
    },
    {
        "line": 70,
        "fullcodeline": "if (buffer == &side->header_buffer)"
    },
    {
        "line": 73,
        "fullcodeline": "required = g_dbus_message_bytes_needed (buffer->data, buffer->size, &error);"
    },
    {
        "line": 41,
        "fullcodeline": "else if (side == &client->client_side)"
    },
    {
        "line": 74,
        "fullcodeline": "if (required < 0)"
    },
    {
        "line": 86,
        "fullcodeline": "got_buffer_from_side (side, buffer);"
    },
    {
        "line": 87,
        "fullcodeline": "side->header_buffer.pos = 0;"
    },
    {
        "line": 88,
        "fullcodeline": "side->current_read_buffer = &side->header_buffer;"
    },
    {
        "line": 43,
        "fullcodeline": "gssize auth_end = find_auth_end (client, buffer);"
    },
    {
        "line": 76,
        "fullcodeline": "g_warning (\"Invalid message header read\");"
    },
    {
        "line": 77,
        "fullcodeline": "side_closed (side);"
    },
    {
        "line": 45,
        "fullcodeline": "if (auth_end >= 0)"
    },
    {
        "line": 81,
        "fullcodeline": "side->current_read_buffer = buffer_new (required, buffer);"
    },
    {
        "line": 47,
        "fullcodeline": "found_auth_end = TRUE;"
    },
    {
        "line": 48,
        "fullcodeline": "buffer->size = auth_end;"
    },
    {
        "line": 49,
        "fullcodeline": "extra_data = buffer->pos - buffer->size;"
    },
    {
        "line": 53,
        "fullcodeline": "if (extra_data > 0)"
    },
    {
        "line": 54,
        "fullcodeline": "side->extra_input_data = g_bytes_new (buffer->data + buffer->size, extra_data);"
    }
]