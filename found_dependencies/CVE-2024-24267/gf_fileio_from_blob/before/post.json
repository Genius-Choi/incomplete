[
    {
        "line": 6,
        "fullcodeline": "GF_Err e = gf_blob_get(file_name, &blob_data, &blob_size, &flags);"
    },
    {
        "line": 8,
        "fullcodeline": "gf_blob_release(file_name);"
    },
    {
        "line": 15,
        "fullcodeline": "GF_SAFEALLOC(gfio_blob, GF_FileIOBlob);"
    },
    {
        "line": 17,
        "fullcodeline": "gfio_blob->data = blob_data;"
    },
    {
        "line": 18,
        "fullcodeline": "gfio_blob->size = blob_size;"
    },
    {
        "line": 19,
        "fullcodeline": "GF_FileIO *res = gf_fileio_new((char *) file_name, gfio_blob, gfio_blob_open, gfio_blob_seek, gfio_blob_read, NULL, gfio_blob_tell, gfio_blob_eof, NULL);"
    },
    {
        "line": 21,
        "fullcodeline": "res->gets = gfio_blob_gets;"
    },
    {
        "line": 7,
        "fullcodeline": "if (e || !blob_data) return NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "if (!gfio_blob) return NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "if (!res) return NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CORE, (\"[Core] Attempt at creating a GFIO object on blob corrupted or in transfer, not supported !\"));"
    },
    {
        "line": 23,
        "fullcodeline": "gfio_blob->url_crc = gf_crc_32(file_name, (u32) strlen(file_name) );"
    }
]