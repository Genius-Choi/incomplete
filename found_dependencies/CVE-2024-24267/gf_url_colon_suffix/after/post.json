[
    {
        "line": 3,
        "fullcodeline": "char *sep = strchr(path, ':');"
    },
    {
        "line": 4,
        "fullcodeline": "if (!sep) return NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "if ((path[1]==':') && ( (path[2]=='/') || (path[2]=='\\\\') ) )"
    },
    {
        "line": 10,
        "fullcodeline": "if (!strncmp(path, \"gfio://\", 7) || !strncmp(path, \"gmem://\", 7)) {"
    },
    {
        "line": 15,
        "fullcodeline": "if ((path[0] == '\\\\') && (path[1] == '\\\\')) {"
    },
    {
        "line": 24,
        "fullcodeline": "if ((sep[1]=='/') && (sep[2]=='/')) {"
    },
    {
        "line": 70,
        "fullcodeline": "if (sep && assign_sep) {"
    },
    {
        "line": 16,
        "fullcodeline": "char *next = strchr(path+2, '\\\\');"
    },
    {
        "line": 26,
        "fullcodeline": "sep++;"
    },
    {
        "line": 39,
        "fullcodeline": "next_colon = strchr(sep, ':');"
    },
    {
        "line": 40,
        "fullcodeline": "next_slash = strchr(sep, '/');"
    },
    {
        "line": 41,
        "fullcodeline": "userpass = strchr(sep, '@');"
    },
    {
        "line": 71,
        "fullcodeline": "char *file_ext = strchr(path, '.');"
    },
    {
        "line": 72,
        "fullcodeline": "char *assign = strchr(path, assign_sep);"
    },
    {
        "line": 8,
        "fullcodeline": "return gf_url_colon_suffix(path+2, assign_sep);"
    },
    {
        "line": 11,
        "fullcodeline": "return strchr(path+7, ':');"
    },
    {
        "line": 28,
        "fullcodeline": "while (sep[0]=='/')"
    },
    {
        "line": 29,
        "fullcodeline": "sep++;"
    },
    {
        "line": 30,
        "fullcodeline": "if (!sep[0]) return NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "if ((sep[1]==':') && ( (sep[2]=='/') || (sep[2]=='\\\\') ) ) {"
    },
    {
        "line": 43,
        "fullcodeline": "if (userpass && next_colon && next_slash && (userpass<next_slash) && (userpass>next_colon))"
    },
    {
        "line": 46,
        "fullcodeline": "if (next_colon && next_slash && ((next_slash - sep) > (next_colon - sep)) ) {"
    },
    {
        "line": 73,
        "fullcodeline": "if (assign && assign>file_ext) assign = NULL;"
    },
    {
        "line": 75,
        "fullcodeline": "if (file_ext && (file_ext>sep)) {"
    },
    {
        "line": 78,
        "fullcodeline": "if (assign && (strlen(assign) > 4)) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (next) next = strchr(next + 1, '\\\\');"
    },
    {
        "line": 44,
        "fullcodeline": "next_colon = strchr(userpass, ':');"
    },
    {
        "line": 48,
        "fullcodeline": "u32 i, port, nb_colons=0, nb_dots=0, nb_non_alnums=0;"
    },
    {
        "line": 49,
        "fullcodeline": "next_slash[0] = 0;"
    },
    {
        "line": 50,
        "fullcodeline": "last_colon = strrchr(next_colon, ':');"
    },
    {
        "line": 51,
        "fullcodeline": "port = atoi(last_colon+1);"
    },
    {
        "line": 62,
        "fullcodeline": "next_slash[0] = '/';"
    },
    {
        "line": 74,
        "fullcodeline": "if (assign) file_ext = NULL;"
    },
    {
        "line": 76,
        "fullcodeline": "sep = strchr(file_ext, ':');"
    },
    {
        "line": 19,
        "fullcodeline": "return gf_url_colon_suffix(next + 1, assign_sep);"
    },
    {
        "line": 36,
        "fullcodeline": "return gf_url_colon_suffix(sep+2, assign_sep);"
    },
    {
        "line": 52,
        "fullcodeline": "for (i=0; i<strlen(next_colon+1); i++) {"
    },
    {
        "line": 64,
        "fullcodeline": "if (!nb_non_alnums && (port || (nb_colons && !nb_dots)))"
    },
    {
        "line": 79,
        "fullcodeline": "if ((assign[2] == ':') && ((assign[3] == '\\\\') || (assign[3] == '/'))) {"
    },
    {
        "line": 82,
        "fullcodeline": "if ((assign[1] == '\\\\') && (assign[2] == '\\\\')) {"
    },
    {
        "line": 65,
        "fullcodeline": "next_colon = strchr(next_slash, ':');"
    },
    {
        "line": 83,
        "fullcodeline": "char *next = strchr(assign + 3, '\\\\');"
    },
    {
        "line": 53,
        "fullcodeline": "if (next_colon[i+1] == ':') nb_colons++;"
    },
    {
        "line": 80,
        "fullcodeline": "return gf_url_colon_suffix(assign + 1, 0);"
    },
    {
        "line": 85,
        "fullcodeline": "if (next && (next>sep))"
    },
    {
        "line": 84,
        "fullcodeline": "if (next) next = strchr(next+1, '\\\\');"
    },
    {
        "line": 86,
        "fullcodeline": "return gf_url_colon_suffix(next, 0);"
    },
    {
        "line": 54,
        "fullcodeline": "else if (next_colon[i+1] == '.') nb_dots++;"
    },
    {
        "line": 56,
        "fullcodeline": "else if (next_colon[i+1] == ']') {}"
    },
    {
        "line": 57,
        "fullcodeline": "else if (!isalnum(next_colon[i+1])) {"
    },
    {
        "line": 58,
        "fullcodeline": "nb_non_alnums++;"
    }
]