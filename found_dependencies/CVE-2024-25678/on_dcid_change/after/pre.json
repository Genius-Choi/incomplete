[
    {
        "line": 3,
        "fullcodeline": "struct lsquic_conn *const lconn = &conn->ifc_conn;  /* Shorthand */"
    },
    {
        "line": 29,
        "fullcodeline": "cce->cce_flags |= CCE_USED;"
    },
    {
        "line": 9,
        "fullcodeline": "for (cce = lconn->cn_cces; cce < END_OF_CCES(lconn); ++cce)"
    },
    {
        "line": 15,
        "fullcodeline": "if (cce >= END_OF_CCES(lconn))"
    },
    {
        "line": 21,
        "fullcodeline": "if (cce->cce_flags & CCE_USED)"
    },
    {
        "line": 30,
        "fullcodeline": "lconn->cn_cur_cce_idx = cce - lconn->cn_cces;"
    },
    {
        "line": 10,
        "fullcodeline": "if (cce - lconn->cn_cces != lconn->cn_cur_cce_idx"
    },
    {
        "line": 17,
        "fullcodeline": "ABORT_WARN(\"DCID not found\");"
    },
    {
        "line": 12,
        "fullcodeline": "&& LSQUIC_CIDS_EQ(&cce->cce_cid, dcid_in))"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 11,
        "fullcodeline": "&& (lconn->cn_cces_mask & (1 << (cce - lconn->cn_cces)))"
    }
]