[
    {
        "line": 5,
        "fullcodeline": "struct sfb_sched_data *q = qdisc_priv(sch);"
    },
    {
        "line": 6,
        "fullcodeline": "struct Qdisc *child = q->qdisc;"
    },
    {
        "line": 10,
        "fullcodeline": "u32 p_min = ~0;"
    },
    {
        "line": 11,
        "fullcodeline": "u32 minqlen = ~0;"
    },
    {
        "line": 13,
        "fullcodeline": "u32 slot = q->slot;"
    },
    {
        "line": 14,
        "fullcodeline": "int ret = NET_XMIT_SUCCESS | __NET_XMIT_BYPASS;"
    },
    {
        "line": 34,
        "fullcodeline": "fl = rcu_dereference_bh(q->filter_list);"
    },
    {
        "line": 49,
        "fullcodeline": "sfb_skb_cb(skb)->hashes[slot] = sfbhash;"
    },
    {
        "line": 66,
        "fullcodeline": "slot ^= 1;"
    },
    {
        "line": 67,
        "fullcodeline": "sfb_skb_cb(skb)->hashes[slot] = 0;"
    },
    {
        "line": 103,
        "fullcodeline": "r = prandom_u32() & SFB_MAX_PROB;"
    },
    {
        "line": 125,
        "fullcodeline": "memcpy(&cb, sfb_skb_cb(skb), sizeof(cb));"
    },
    {
        "line": 126,
        "fullcodeline": "ret = qdisc_enqueue(skb, child, to_free);"
    },
    {
        "line": 16,
        "fullcodeline": "if (unlikely(sch->q.qlen >= q->limit)) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (q->rehash_interval > 0) {"
    },
    {
        "line": 47,
        "fullcodeline": "if (!sfbhash)"
    },
    {
        "line": 51,
        "fullcodeline": "for (i = 0; i < SFB_LEVELS; i++) {"
    },
    {
        "line": 69,
        "fullcodeline": "if (unlikely(minqlen >= q->max)) {"
    },
    {
        "line": 75,
        "fullcodeline": "if (unlikely(p_min >= SFB_MAX_PROB)) {"
    },
    {
        "line": 105,
        "fullcodeline": "if (unlikely(r < p_min)) {"
    },
    {
        "line": 127,
        "fullcodeline": "if (likely(ret == NET_XMIT_SUCCESS)) {"
    },
    {
        "line": 141,
        "fullcodeline": "if (ret & __NET_XMIT_BYPASS)"
    },
    {
        "line": 17,
        "fullcodeline": "qdisc_qstats_overlimit(sch);"
    },
    {
        "line": 23,
        "fullcodeline": "unsigned long limit = q->rehash_time + q->rehash_interval;"
    },
    {
        "line": 41,
        "fullcodeline": "sfbhash = siphash_1u32(salt, &q->bins[slot].perturbation);"
    },
    {
        "line": 48,
        "fullcodeline": "sfbhash = 1;"
    },
    {
        "line": 52,
        "fullcodeline": "u32 hash = sfbhash & SFB_BUCKET_MASK;"
    },
    {
        "line": 53,
        "fullcodeline": "struct sfb_bucket *b = &q->bins[slot].bins[i][hash];"
    },
    {
        "line": 55,
        "fullcodeline": "sfbhash >>= SFB_BUCKET_SHIFT;"
    },
    {
        "line": 70,
        "fullcodeline": "qdisc_qstats_overlimit(sch);"
    },
    {
        "line": 128,
        "fullcodeline": "qdisc_qstats_backlog_inc(sch, skb);"
    },
    {
        "line": 129,
        "fullcodeline": "sch->q.qlen++;"
    },
    {
        "line": 130,
        "fullcodeline": "increment_qlen(&cb, q);"
    },
    {
        "line": 25,
        "fullcodeline": "if (unlikely(time_after(jiffies, limit))) {"
    },
    {
        "line": 39,
        "fullcodeline": "if (!sfb_classify(skb, fl, &ret, &salt))"
    },
    {
        "line": 43,
        "fullcodeline": "sfbhash = skb_get_hash_perturb(skb, &q->bins[slot].perturbation);"
    },
    {
        "line": 56,
        "fullcodeline": "if (b->qlen == 0)"
    },
    {
        "line": 60,
        "fullcodeline": "if (minqlen > b->qlen)"
    },
    {
        "line": 62,
        "fullcodeline": "if (p_min > b->p_mark)"
    },
    {
        "line": 95,
        "fullcodeline": "if (sfb_rate_limit(skb, q)) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (unlikely(p_min > SFB_MAX_PROB / 2)) {"
    },
    {
        "line": 116,
        "fullcodeline": "if (INET_ECN_set_ce(skb)) {"
    },
    {
        "line": 26,
        "fullcodeline": "sfb_swap_slot(q);"
    },
    {
        "line": 27,
        "fullcodeline": "q->rehash_time = jiffies;"
    },
    {
        "line": 57,
        "fullcodeline": "decrement_prob(b, q);"
    },
    {
        "line": 61,
        "fullcodeline": "minqlen = b->qlen;"
    },
    {
        "line": 63,
        "fullcodeline": "p_min = b->p_mark;"
    },
    {
        "line": 78,
        "fullcodeline": "sfbhash = skb_get_hash_perturb(skb,"
    },
    {
        "line": 82,
        "fullcodeline": "sfb_skb_cb(skb)->hashes[slot] = sfbhash;"
    },
    {
        "line": 96,
        "fullcodeline": "qdisc_qstats_overlimit(sch);"
    },
    {
        "line": 117,
        "fullcodeline": "q->stats.marked++;"
    },
    {
        "line": 131,
        "fullcodeline": "} else if (net_xmit_drop_count(ret)) {"
    },
    {
        "line": 80,
        "fullcodeline": "if (!sfbhash)"
    },
    {
        "line": 84,
        "fullcodeline": "for (i = 0; i < SFB_LEVELS; i++) {"
    },
    {
        "line": 111,
        "fullcodeline": "if (r < (p_min - SFB_MAX_PROB / 2) * 2) {"
    },
    {
        "line": 132,
        "fullcodeline": "q->stats.childdrop++;"
    },
    {
        "line": 133,
        "fullcodeline": "qdisc_qstats_drop(sch);"
    },
    {
        "line": 28,
        "fullcodeline": "} else if (unlikely(!q->double_buffering && q->warmup_time > 0 &&"
    },
    {
        "line": 58,
        "fullcodeline": "else if (b->qlen >= q->bin_size)"
    },
    {
        "line": 81,
        "fullcodeline": "sfbhash = 1;"
    },
    {
        "line": 85,
        "fullcodeline": "u32 hash = sfbhash & SFB_BUCKET_MASK;"
    },
    {
        "line": 86,
        "fullcodeline": "struct sfb_bucket *b = &q->bins[slot].bins[i][hash];"
    },
    {
        "line": 88,
        "fullcodeline": "sfbhash >>= SFB_BUCKET_SHIFT;"
    },
    {
        "line": 30,
        "fullcodeline": "q->double_buffering = true;"
    },
    {
        "line": 59,
        "fullcodeline": "increment_prob(b, q);"
    },
    {
        "line": 89,
        "fullcodeline": "if (b->qlen == 0)"
    },
    {
        "line": 29,
        "fullcodeline": "time_after(jiffies, limit - q->warmup_time))) {"
    },
    {
        "line": 90,
        "fullcodeline": "decrement_prob(b, q);"
    },
    {
        "line": 91,
        "fullcodeline": "else if (b->qlen >= q->bin_size)"
    },
    {
        "line": 92,
        "fullcodeline": "increment_prob(b, q);"
    }
]