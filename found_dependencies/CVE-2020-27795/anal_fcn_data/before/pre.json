[
    {
        "line": 2,
        "fullcodeline": "RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, -1);"
    },
    {
        "line": 3,
        "fullcodeline": "ut32 fcn_size = r_anal_function_size_from_entry (fcn);"
    },
    {
        "line": 6,
        "fullcodeline": "bool gap = false;"
    },
    {
        "line": 7,
        "fullcodeline": "ut64 gap_addr = UT64_MAX;"
    },
    {
        "line": 8,
        "fullcodeline": "char *bitmap = calloc (1, fcn_size);"
    },
    {
        "line": 40,
        "fullcodeline": "free (bitmap);"
    },
    {
        "line": 22,
        "fullcodeline": "for (i = 0; i < fcn_size; i++) {"
    },
    {
        "line": 12,
        "fullcodeline": "r_list_foreach (fcn->bbs, iter, b) {"
    },
    {
        "line": 23,
        "fullcodeline": "ut64 here = fcn->addr + i;"
    },
    {
        "line": 13,
        "fullcodeline": "int f = b->addr - fcn->addr;"
    },
    {
        "line": 14,
        "fullcodeline": "int t = R_MIN (f + b->size, fcn_size);"
    },
    {
        "line": 24,
        "fullcodeline": "if (bitmap && bitmap[i]) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (f >= 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "gap_addr = UT64_MAX;"
    },
    {
        "line": 16,
        "fullcodeline": "while (f < t) {"
    },
    {
        "line": 27,
        "fullcodeline": "gap = false;"
    },
    {
        "line": 31,
        "fullcodeline": "if (!gap) {"
    },
    {
        "line": 17,
        "fullcodeline": "bitmap[f++] = 1;"
    },
    {
        "line": 32,
        "fullcodeline": "gap = true;"
    },
    {
        "line": 33,
        "fullcodeline": "gap_addr = here;"
    }
]