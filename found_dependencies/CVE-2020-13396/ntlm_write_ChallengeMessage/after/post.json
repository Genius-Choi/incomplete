[
    {
        "line": 7,
        "fullcodeline": "message = &context->CHALLENGE_MESSAGE;"
    },
    {
        "line": 8,
        "fullcodeline": "ZeroMemory(message, sizeof(NTLM_CHALLENGE_MESSAGE));"
    },
    {
        "line": 9,
        "fullcodeline": "s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);"
    },
    {
        "line": 14,
        "fullcodeline": "ntlm_get_version_info(&(message->Version)); /* Version */"
    },
    {
        "line": 15,
        "fullcodeline": "ntlm_generate_server_challenge(context);    /* Server Challenge */"
    },
    {
        "line": 16,
        "fullcodeline": "ntlm_generate_timestamp(context);           /* Timestamp */"
    },
    {
        "line": 24,
        "fullcodeline": "CopyMemory(message->ServerChallenge, context->ServerChallenge, 8); /* ServerChallenge */"
    },
    {
        "line": 25,
        "fullcodeline": "message->NegotiateFlags = context->NegotiateFlags;"
    },
    {
        "line": 26,
        "fullcodeline": "ntlm_populate_message_header((NTLM_MESSAGE_HEADER*)message, MESSAGE_TYPE_CHALLENGE);"
    },
    {
        "line": 28,
        "fullcodeline": "ntlm_write_message_header(s, (NTLM_MESSAGE_HEADER*)message);"
    },
    {
        "line": 36,
        "fullcodeline": "message->NegotiateFlags |= NTLMSSP_NEGOTIATE_TARGET_INFO;"
    },
    {
        "line": 44,
        "fullcodeline": "PayloadOffset = 48;"
    },
    {
        "line": 49,
        "fullcodeline": "message->TargetName.BufferOffset = PayloadOffset;"
    },
    {
        "line": 50,
        "fullcodeline": "message->TargetInfo.BufferOffset = message->TargetName.BufferOffset + message->TargetName.Len;"
    },
    {
        "line": 52,
        "fullcodeline": "ntlm_write_message_fields(s, &(message->TargetName));"
    },
    {
        "line": 53,
        "fullcodeline": "Stream_Write_UINT32(s, message->NegotiateFlags); /* NegotiateFlags (4 bytes) */"
    },
    {
        "line": 54,
        "fullcodeline": "Stream_Write(s, message->ServerChallenge, 8);    /* ServerChallenge (8 bytes) */"
    },
    {
        "line": 55,
        "fullcodeline": "Stream_Write(s, message->Reserved, 8);           /* Reserved (8 bytes), should be ignored */"
    },
    {
        "line": 57,
        "fullcodeline": "ntlm_write_message_fields(s, &(message->TargetInfo));"
    },
    {
        "line": 70,
        "fullcodeline": "length = Stream_GetPosition(s);"
    },
    {
        "line": 71,
        "fullcodeline": "buffer->cbBuffer = length;"
    },
    {
        "line": 79,
        "fullcodeline": "CopyMemory(context->ChallengeMessage.pvBuffer, Stream_Buffer(s), length);"
    },
    {
        "line": 92,
        "fullcodeline": "context->state = NTLM_STATE_AUTHENTICATE;"
    },
    {
        "line": 93,
        "fullcodeline": "Stream_Free(s, FALSE);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!s)"
    },
    {
        "line": 18,
        "fullcodeline": "if (ntlm_construct_challenge_target_info(context) < 0) /* TargetInfo */"
    },
    {
        "line": 30,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_REQUEST_TARGET)"
    },
    {
        "line": 38,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_TARGET_INFO)"
    },
    {
        "line": 46,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 59,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)"
    },
    {
        "line": 64,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_REQUEST_TARGET)"
    },
    {
        "line": 67,
        "fullcodeline": "if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_TARGET_INFO)"
    },
    {
        "line": 73,
        "fullcodeline": "if (!sspi_SecBufferAlloc(&context->ChallengeMessage, length))"
    },
    {
        "line": 20,
        "fullcodeline": "Stream_Free(s, FALSE);"
    },
    {
        "line": 47,
        "fullcodeline": "PayloadOffset += 8;"
    },
    {
        "line": 60,
        "fullcodeline": "ntlm_write_version_info(s, &(message->Version)); /* Version (8 bytes) */"
    },
    {
        "line": 65,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->TargetName));"
    },
    {
        "line": 68,
        "fullcodeline": "ntlm_write_message_fields_buffer(s, &(message->TargetInfo));"
    },
    {
        "line": 75,
        "fullcodeline": "Stream_Free(s, FALSE);"
    }
]