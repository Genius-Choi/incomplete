[
    {
        "line": 6,
        "fullcodeline": "struct vhost_net_ubuf_ref *ubufs, *oldubufs = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "r = vhost_dev_check_owner(&n->dev);"
    },
    {
        "line": 20,
        "fullcodeline": "mutex_lock(&vq->mutex);"
    },
    {
        "line": 27,
        "fullcodeline": "sock = get_socket(fd);"
    },
    {
        "line": 34,
        "fullcodeline": "oldsock = rcu_dereference_protected(vq->private_data,"
    },
    {
        "line": 61,
        "fullcodeline": "mutex_unlock(&vq->mutex);"
    },
    {
        "line": 75,
        "fullcodeline": "mutex_unlock(&n->dev.mutex);"
    },
    {
        "line": 79,
        "fullcodeline": "rcu_assign_pointer(vq->private_data, oldsock);"
    },
    {
        "line": 80,
        "fullcodeline": "vhost_net_enable_vq(n, vq);"
    },
    {
        "line": 84,
        "fullcodeline": "fput(sock->file);"
    },
    {
        "line": 86,
        "fullcodeline": "mutex_unlock(&vq->mutex);"
    },
    {
        "line": 88,
        "fullcodeline": "mutex_unlock(&n->dev.mutex);"
    },
    {
        "line": 14,
        "fullcodeline": "if (index >= VHOST_NET_VQ_MAX) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (!vhost_vq_access_ok(vq)) {"
    },
    {
        "line": 28,
        "fullcodeline": "if (IS_ERR(sock)) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (sock != oldsock) {"
    },
    {
        "line": 15,
        "fullcodeline": "r = -ENOBUFS;"
    },
    {
        "line": 24,
        "fullcodeline": "r = -EFAULT;"
    },
    {
        "line": 29,
        "fullcodeline": "r = PTR_ERR(sock);"
    },
    {
        "line": 35,
        "fullcodeline": "lockdep_is_held(&vq->mutex));"
    },
    {
        "line": 37,
        "fullcodeline": "ubufs = vhost_net_ubuf_alloc(vq,"
    },
    {
        "line": 44,
        "fullcodeline": "vhost_net_disable_vq(n, vq);"
    },
    {
        "line": 45,
        "fullcodeline": "rcu_assign_pointer(vq->private_data, sock);"
    },
    {
        "line": 46,
        "fullcodeline": "r = vhost_init_used(vq);"
    },
    {
        "line": 49,
        "fullcodeline": "r = vhost_net_enable_vq(n, vq);"
    },
    {
        "line": 53,
        "fullcodeline": "oldubufs = nvq->ubufs;"
    },
    {
        "line": 54,
        "fullcodeline": "nvq->ubufs = ubufs;"
    },
    {
        "line": 56,
        "fullcodeline": "n->tx_packets = 0;"
    },
    {
        "line": 57,
        "fullcodeline": "n->tx_zcopy_err = 0;"
    },
    {
        "line": 58,
        "fullcodeline": "n->tx_flush = false;"
    },
    {
        "line": 64,
        "fullcodeline": "vhost_net_ubuf_put_and_wait(oldubufs);"
    },
    {
        "line": 65,
        "fullcodeline": "mutex_lock(&vq->mutex);"
    },
    {
        "line": 66,
        "fullcodeline": "vhost_zerocopy_signal_used(n, vq);"
    },
    {
        "line": 67,
        "fullcodeline": "mutex_unlock(&vq->mutex);"
    },
    {
        "line": 71,
        "fullcodeline": "vhost_net_flush_vq(n, index);"
    },
    {
        "line": 72,
        "fullcodeline": "fput(oldsock->file);"
    },
    {
        "line": 82,
        "fullcodeline": "vhost_net_ubuf_put_and_wait(ubufs);"
    },
    {
        "line": 39,
        "fullcodeline": "if (IS_ERR(ubufs)) {"
    },
    {
        "line": 38,
        "fullcodeline": "sock && vhost_sock_zcopy(sock));"
    },
    {
        "line": 40,
        "fullcodeline": "r = PTR_ERR(ubufs);"
    }
]