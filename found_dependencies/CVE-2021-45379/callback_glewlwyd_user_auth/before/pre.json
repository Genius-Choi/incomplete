[
    {
        "line": 2,
        "fullcodeline": "struct config_elements * config = (struct config_elements *)user_data;"
    },
    {
        "line": 3,
        "fullcodeline": "json_t * j_param = ulfius_get_json_body_request(request, NULL), * j_result = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "const char * ip_source = get_ip_source(request);"
    },
    {
        "line": 5,
        "fullcodeline": "char * issued_for = get_client_hostname(request);"
    },
    {
        "line": 6,
        "fullcodeline": "char * session_uid, expires[129];"
    },
    {
        "line": 10,
        "fullcodeline": "time(&now);"
    },
    {
        "line": 11,
        "fullcodeline": "now += GLEWLWYD_DEFAULT_SESSION_EXPIRATION_COOKIE;"
    },
    {
        "line": 12,
        "fullcodeline": "gmtime_r(&now, &ts);"
    },
    {
        "line": 13,
        "fullcodeline": "strftime(expires, 128, \"%a, %d %b %Y %T %Z\", &ts);"
    },
    {
        "line": 137,
        "fullcodeline": "json_decref(j_param);"
    },
    {
        "line": 138,
        "fullcodeline": "o_free(issued_for);"
    },
    {
        "line": 14,
        "fullcodeline": "if (j_param != NULL) {"
    },
    {
        "line": 15,
        "fullcodeline": "if (json_string_length(json_object_get(j_param, \"username\"))) {"
    },
    {
        "line": 135,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"Input parameters must be in JSON format\");"
    },
    {
        "line": 16,
        "fullcodeline": "if (json_object_get(j_param, \"scheme_type\") == NULL || 0 == o_strcmp(json_string_value(json_object_get(j_param, \"scheme_type\")), \"password\")) {"
    },
    {
        "line": 104,
        "fullcodeline": "if (json_string_length(json_object_get(j_param, \"scheme_type\")) && json_string_length(json_object_get(j_param, \"scheme_name\")) && json_is_object(json_object_get(j_param, \"value\"))) {"
    },
    {
        "line": 17,
        "fullcodeline": "if (json_string_length(json_object_get(j_param, \"password\"))) {"
    },
    {
        "line": 105,
        "fullcodeline": "j_result = auth_check_identify_scheme(config, json_string_value(json_object_get(j_param, \"scheme_type\")), json_string_value(json_object_get(j_param, \"scheme_name\")), json_object_get(j_param, \"value\"), request);"
    },
    {
        "line": 129,
        "fullcodeline": "json_decref(j_result);"
    },
    {
        "line": 18,
        "fullcodeline": "j_result = auth_check_user_credentials(config, json_string_value(json_object_get(j_param, \"username\")), json_string_value(json_object_get(j_param, \"password\")));"
    },
    {
        "line": 45,
        "fullcodeline": "json_decref(j_result);"
    },
    {
        "line": 69,
        "fullcodeline": "if (json_string_length(json_object_get(j_param, \"scheme_type\")) && json_string_length(json_object_get(j_param, \"scheme_name\")) && json_is_object(json_object_get(j_param, \"value\"))) {"
    },
    {
        "line": 106,
        "fullcodeline": "if (check_result_value(j_result, G_ERROR_PARAM)) {"
    },
    {
        "line": 131,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"username is mandatory\");"
    },
    {
        "line": 19,
        "fullcodeline": "if (check_result_value(j_result, G_OK)) {"
    },
    {
        "line": 70,
        "fullcodeline": "j_result = auth_check_user_scheme(config, json_string_value(json_object_get(j_param, \"scheme_type\")), json_string_value(json_object_get(j_param, \"scheme_name\")), json_string_value(json_object_get(j_param, \"username\")), json_object_get(j_param, \"value\"), request);"
    },
    {
        "line": 98,
        "fullcodeline": "json_decref(j_result);"
    },
    {
        "line": 107,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"bad scheme response\");"
    },
    {
        "line": 30,
        "fullcodeline": "o_free(session_uid);"
    },
    {
        "line": 31,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_VALID, 1, NULL);"
    },
    {
        "line": 32,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_VALID_SCHEME, 1, \"scheme_type\", \"password\", NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "} else if (json_object_get(j_param, \"password\") != NULL && !json_is_string(json_object_get(j_param, \"password\"))) {"
    },
    {
        "line": 71,
        "fullcodeline": "if (check_result_value(j_result, G_ERROR_PARAM)) {"
    },
    {
        "line": 100,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"scheme_type, scheme_name and value are mandatory\");"
    },
    {
        "line": 20,
        "fullcodeline": "if ((session_uid = get_session_id(config, request)) == NULL) {"
    },
    {
        "line": 23,
        "fullcodeline": "if (user_session_update(config, session_uid, u_map_get_case(request->map_header, \"user-agent\"), issued_for, json_string_value(json_object_get(j_param, \"username\")), NULL, 1) != G_OK) {"
    },
    {
        "line": 40,
        "fullcodeline": "o_free(session_uid);"
    },
    {
        "line": 41,
        "fullcodeline": "response->status = 401;"
    },
    {
        "line": 42,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_INVALID, 1, NULL);"
    },
    {
        "line": 43,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_INVALID_SCHEME, 1, \"scheme_type\", \"password\", NULL);"
    },
    {
        "line": 47,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"password must be a string\");"
    },
    {
        "line": 72,
        "fullcodeline": "ulfius_set_string_body_response(response, 400, \"bad scheme response\");"
    },
    {
        "line": 108,
        "fullcodeline": "} else if (check_result_value(j_result, G_ERROR_UNAUTHORIZED)) {"
    },
    {
        "line": 21,
        "fullcodeline": "session_uid = generate_session_id();"
    },
    {
        "line": 24,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error user_session_update (1)\");"
    },
    {
        "line": 25,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 34,
        "fullcodeline": "if (check_result_value(j_result, G_ERROR_UNAUTHORIZED)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if ((session_uid = get_session_id(config, request)) != NULL && user_session_update(config, session_uid, u_map_get_case(request->map_header, \"user-agent\"), issued_for, json_string_value(json_object_get(j_param, \"username\")), NULL, 1) != G_OK) {"
    },
    {
        "line": 49,
        "fullcodeline": "session_uid = get_session_id(config, request);"
    },
    {
        "line": 50,
        "fullcodeline": "j_result = get_users_for_session(config, session_uid);"
    },
    {
        "line": 65,
        "fullcodeline": "o_free(session_uid);"
    },
    {
        "line": 66,
        "fullcodeline": "json_decref(j_result);"
    },
    {
        "line": 109,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_WARNING, \"Security - Authorization invalid for username <UNKNOWN> at IP Address %s\", ip_source);"
    },
    {
        "line": 110,
        "fullcodeline": "response->status = 401;"
    },
    {
        "line": 27,
        "fullcodeline": "ulfius_add_cookie_to_response(response, config->session_key, session_uid, expires, 0, config->cookie_domain, \"/\", config->cookie_secure, 0);"
    },
    {
        "line": 28,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_INFO, \"Event - User '%s' authenticated with password\", json_string_value(json_object_get(j_param, \"username\")));"
    },
    {
        "line": 35,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_WARNING, \"Security - Authorization invalid for username %s at IP Address %s\", json_string_value(json_object_get(j_param, \"username\")), ip_source);"
    },
    {
        "line": 38,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error user_session_update (2)\");"
    },
    {
        "line": 51,
        "fullcodeline": "if (check_result_value(j_result, G_OK)) {"
    },
    {
        "line": 73,
        "fullcodeline": "} else if (check_result_value(j_result, G_ERROR_UNAUTHORIZED)) {"
    },
    {
        "line": 74,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_WARNING, \"Security - Authorization invalid for username %s at IP Address %s\", json_string_value(json_object_get(j_param, \"username\")), ip_source);"
    },
    {
        "line": 75,
        "fullcodeline": "response->status = 401;"
    },
    {
        "line": 76,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_INVALID, 1, NULL);"
    },
    {
        "line": 77,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_INVALID_SCHEME, 1, \"scheme_type\", json_string_value(json_object_get(j_param, \"scheme_type\")), \"scheme_name\", json_string_value(json_object_get(j_param, \"scheme_name\")), NULL);"
    },
    {
        "line": 111,
        "fullcodeline": "} else if (check_result_value(j_result, G_ERROR_NOT_FOUND)) {"
    },
    {
        "line": 53,
        "fullcodeline": "if (user_session_update(config, u_map_get(request->map_cookie, config->session_key), u_map_get_case(request->map_header, \"user-agent\"), issued_for, json_string_value(json_object_get(j_param, \"username\")), NULL, 0) != G_OK) {"
    },
    {
        "line": 112,
        "fullcodeline": "response->status = 404;"
    },
    {
        "line": 54,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error user_session_update (3)\");"
    },
    {
        "line": 55,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 59,
        "fullcodeline": "} else if (check_result_value(j_result, G_ERROR_NOT_FOUND)) {"
    },
    {
        "line": 78,
        "fullcodeline": "} else if (check_result_value(j_result, G_ERROR_NOT_FOUND)) {"
    },
    {
        "line": 57,
        "fullcodeline": "ulfius_add_cookie_to_response(response, config->session_key, session_uid, expires, 0, config->cookie_domain, \"/\", config->cookie_secure, 0);"
    },
    {
        "line": 60,
        "fullcodeline": "response->status = 401;"
    },
    {
        "line": 79,
        "fullcodeline": "response->status = 404;"
    },
    {
        "line": 113,
        "fullcodeline": "} else if (check_result_value(j_result, G_OK)) {"
    },
    {
        "line": 62,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error get_users_for_session\");"
    },
    {
        "line": 63,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 124,
        "fullcodeline": "o_free(session_uid);"
    },
    {
        "line": 80,
        "fullcodeline": "} else if (check_result_value(j_result, G_OK)) {"
    },
    {
        "line": 114,
        "fullcodeline": "if ((session_uid = get_session_id(config, request)) == NULL) {"
    },
    {
        "line": 117,
        "fullcodeline": "if (user_session_update(config, session_uid, u_map_get_case(request->map_header, \"user-agent\"), issued_for, json_string_value(json_object_get(j_result, \"username\")), json_string_value(json_object_get(j_param, \"scheme_name\")), 1) != G_OK) {"
    },
    {
        "line": 126,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error auth_check_user_scheme\");"
    },
    {
        "line": 127,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 91,
        "fullcodeline": "o_free(session_uid);"
    },
    {
        "line": 92,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_VALID, 1, NULL);"
    },
    {
        "line": 93,
        "fullcodeline": "glewlwyd_metrics_increment_counter_va(config, GLWD_METRICS_AUTH_USER_VALID_SCHEME, 1, \"scheme_type\", json_string_value(json_object_get(j_param, \"scheme_type\")), \"scheme_name\", json_string_value(json_object_get(j_param, \"scheme_name\")), NULL);"
    },
    {
        "line": 115,
        "fullcodeline": "session_uid = generate_session_id();"
    },
    {
        "line": 118,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error user_session_update (4)\");"
    },
    {
        "line": 119,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 81,
        "fullcodeline": "if ((session_uid = get_session_id(config, request)) == NULL) {"
    },
    {
        "line": 84,
        "fullcodeline": "if (user_session_update(config, session_uid, u_map_get_case(request->map_header, \"user-agent\"), issued_for, json_string_value(json_object_get(j_param, \"username\")), json_string_value(json_object_get(j_param, \"scheme_name\")), 1) != G_OK) {"
    },
    {
        "line": 95,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error auth_check_user_scheme\");"
    },
    {
        "line": 96,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 121,
        "fullcodeline": "ulfius_add_cookie_to_response(response, config->session_key, session_uid, expires, 0, config->cookie_domain, \"/\", config->cookie_secure, 0);"
    },
    {
        "line": 122,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_INFO, \"Event - User '%s' authenticated with scheme '%s/%s'\", json_string_value(json_object_get(j_result, \"username\")), json_string_value(json_object_get(j_param, \"scheme_type\")), json_string_value(json_object_get(j_param, \"scheme_name\")));"
    },
    {
        "line": 82,
        "fullcodeline": "session_uid = generate_session_id();"
    },
    {
        "line": 85,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_ERROR, \"callback_glewlwyd_user_auth - Error user_session_update (4)\");"
    },
    {
        "line": 86,
        "fullcodeline": "response->status = 500;"
    },
    {
        "line": 88,
        "fullcodeline": "ulfius_add_cookie_to_response(response, config->session_key, session_uid, expires, 0, config->cookie_domain, \"/\", config->cookie_secure, 0);"
    },
    {
        "line": 89,
        "fullcodeline": "y_log_message(Y_LOG_LEVEL_INFO, \"Event - User '%s' authenticated with scheme '%s/%s'\", json_string_value(json_object_get(j_param, \"username\")), json_string_value(json_object_get(j_param, \"scheme_type\")), json_string_value(json_object_get(j_param, \"scheme_name\")));"
    }
]