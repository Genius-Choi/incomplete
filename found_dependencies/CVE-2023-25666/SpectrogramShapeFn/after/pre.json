[
    {
        "line": 3,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &input));"
    },
    {
        "line": 5,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->GetAttr(\"window_size\", &window_size));"
    },
    {
        "line": 18,
        "fullcodeline": "DimensionHandle input_length = c->Dim(input, 0);"
    },
    {
        "line": 19,
        "fullcodeline": "DimensionHandle input_channels = c->Dim(input, 1);"
    },
    {
        "line": 36,
        "fullcodeline": "DimensionHandle output_channels ="
    },
    {
        "line": 6,
        "fullcodeline": "if (window_size <= 1) {"
    },
    {
        "line": 12,
        "fullcodeline": "TF_RETURN_IF_ERROR(c->GetAttr(\"stride\", &stride));"
    },
    {
        "line": 13,
        "fullcodeline": "if (stride <= 0) {"
    },
    {
        "line": 37,
        "fullcodeline": "c->MakeDim(1 + NextPowerOfTwo(window_size) / 2);"
    },
    {
        "line": 39,
        "fullcodeline": "c->MakeShape({input_channels, output_length, output_channels}));"
    },
    {
        "line": 40,
        "fullcodeline": "return OkStatus();"
    },
    {
        "line": 22,
        "fullcodeline": "if (!c->ValueKnown(input_length)) {"
    },
    {
        "line": 23,
        "fullcodeline": "output_length = c->UnknownDim();"
    },
    {
        "line": 7,
        "fullcodeline": "return errors::InvalidArgument(\"window size must be > 1, got \","
    },
    {
        "line": 14,
        "fullcodeline": "return errors::InvalidArgument(\"stride must be strictly positive, got \","
    },
    {
        "line": 25,
        "fullcodeline": "const int64_t input_length_value = c->Value(input_length);"
    },
    {
        "line": 26,
        "fullcodeline": "const int64_t length_minus_window = (input_length_value - window_size);"
    },
    {
        "line": 33,
        "fullcodeline": "output_length = c->MakeDim(output_length_value);"
    },
    {
        "line": 28,
        "fullcodeline": "if (length_minus_window < 0) {"
    },
    {
        "line": 29,
        "fullcodeline": "output_length_value = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "output_length_value = 1 + (length_minus_window / stride);"
    }
]