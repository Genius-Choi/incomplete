[
    {
        "line": 24,
        "fullcodeline": "asoc->base.dead = true;"
    },
    {
        "line": 27,
        "fullcodeline": "sctp_outq_free(&asoc->outqueue);"
    },
    {
        "line": 30,
        "fullcodeline": "sctp_ulpq_free(&asoc->ulpq);"
    },
    {
        "line": 38,
        "fullcodeline": "sctp_ssnmap_free(asoc->ssnmap);"
    },
    {
        "line": 60,
        "fullcodeline": "list_for_each_safe(pos, temp, &asoc->peer.transport_addr_list) {"
    },
    {
        "line": 66,
        "fullcodeline": "asoc->peer.transport_count = 0;"
    },
    {
        "line": 68,
        "fullcodeline": "sctp_asconf_queue_teardown(asoc);"
    },
    {
        "line": 75,
        "fullcodeline": "sctp_auth_destroy_keys(&asoc->endpoint_shared_keys);"
    },
    {
        "line": 78,
        "fullcodeline": "sctp_auth_key_put(asoc->asoc_shared_key);"
    },
    {
        "line": 80,
        "fullcodeline": "sctp_association_put(asoc);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!asoc->temp) {"
    },
    {
        "line": 48,
        "fullcodeline": "for (i = SCTP_EVENT_TIMEOUT_NONE; i < SCTP_NUM_TIMEOUT_TYPES; ++i) {"
    },
    {
        "line": 62,
        "fullcodeline": "list_del_rcu(pos);"
    },
    {
        "line": 63,
        "fullcodeline": "sctp_transport_free(transport);"
    },
    {
        "line": 71,
        "fullcodeline": "if (asoc->asconf_addr_del_pending != NULL)"
    },
    {
        "line": 12,
        "fullcodeline": "list_del(&asoc->asocs);"
    },
    {
        "line": 72,
        "fullcodeline": "kfree(asoc->asconf_addr_del_pending);"
    },
    {
        "line": 17,
        "fullcodeline": "if (sctp_style(sk, TCP) && sctp_sstate(sk, LISTENING))"
    },
    {
        "line": 18,
        "fullcodeline": "sk->sk_ack_backlog--;"
    },
    {
        "line": 50,
        "fullcodeline": "sctp_association_put(asoc);"
    }
]