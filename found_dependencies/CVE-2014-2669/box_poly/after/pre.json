[
    {
        "line": 3,
        "fullcodeline": "BOX\t\t   *box = PG_GETARG_BOX_P(0);"
    },
    {
        "line": 8,
        "fullcodeline": "size = offsetof(POLYGON, p[0]) +sizeof(poly->p[0]) * 4;"
    },
    {
        "line": 9,
        "fullcodeline": "poly = (POLYGON *) palloc(size);"
    },
    {
        "line": 11,
        "fullcodeline": "SET_VARSIZE(poly, size);"
    },
    {
        "line": 12,
        "fullcodeline": "poly->npts = 4;"
    },
    {
        "line": 14,
        "fullcodeline": "poly->p[0].x = box->low.x;"
    },
    {
        "line": 15,
        "fullcodeline": "poly->p[0].y = box->low.y;"
    },
    {
        "line": 16,
        "fullcodeline": "poly->p[1].x = box->low.x;"
    },
    {
        "line": 17,
        "fullcodeline": "poly->p[1].y = box->high.y;"
    },
    {
        "line": 18,
        "fullcodeline": "poly->p[2].x = box->high.x;"
    },
    {
        "line": 19,
        "fullcodeline": "poly->p[2].y = box->high.y;"
    },
    {
        "line": 20,
        "fullcodeline": "poly->p[3].x = box->high.x;"
    },
    {
        "line": 21,
        "fullcodeline": "poly->p[3].y = box->low.y;"
    },
    {
        "line": 23,
        "fullcodeline": "box_fill(&poly->boundbox, box->high.x, box->low.x,"
    },
    {
        "line": 26,
        "fullcodeline": "PG_RETURN_POLYGON_P(poly);"
    }
]