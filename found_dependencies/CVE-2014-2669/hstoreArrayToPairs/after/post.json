[
    {
        "line": 11,
        "fullcodeline": "deconstruct_array(a,"
    },
    {
        "line": 34,
        "fullcodeline": "key_pairs = palloc(sizeof(Pairs) * key_count);"
    },
    {
        "line": 50,
        "fullcodeline": "*npairs = hstoreUniquePairs(key_pairs, j, &bufsiz);"
    },
    {
        "line": 12,
        "fullcodeline": "TEXTOID, -1, false, 'i',"
    },
    {
        "line": 15,
        "fullcodeline": "if (key_count == 0)"
    },
    {
        "line": 28,
        "fullcodeline": "if (key_count > MaxAllocSize / sizeof(Pairs))"
    },
    {
        "line": 36,
        "fullcodeline": "for (i = 0, j = 0; i < key_count; i++)"
    },
    {
        "line": 17,
        "fullcodeline": "*npairs = 0;"
    },
    {
        "line": 29,
        "fullcodeline": "ereport(ERROR,"
    },
    {
        "line": 30,
        "fullcodeline": "(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),"
    },
    {
        "line": 38,
        "fullcodeline": "if (!key_nulls[i])"
    },
    {
        "line": 40,
        "fullcodeline": "key_pairs[j].key = VARDATA(key_datums[i]);"
    },
    {
        "line": 41,
        "fullcodeline": "key_pairs[j].keylen = VARSIZE(key_datums[i]) - VARHDRSZ;"
    },
    {
        "line": 42,
        "fullcodeline": "key_pairs[j].val = NULL;"
    },
    {
        "line": 43,
        "fullcodeline": "key_pairs[j].vallen = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "key_pairs[j].needfree = 0;"
    },
    {
        "line": 45,
        "fullcodeline": "key_pairs[j].isnull = 1;"
    },
    {
        "line": 46,
        "fullcodeline": "j++;"
    },
    {
        "line": 31,
        "fullcodeline": "errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\","
    },
    {
        "line": 32,
        "fullcodeline": "key_count, (int) (MaxAllocSize / sizeof(Pairs)))));"
    }
]