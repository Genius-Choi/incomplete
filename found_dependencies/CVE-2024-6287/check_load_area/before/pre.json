[
    {
        "line": 3,
        "fullcodeline": "uint32_t legacy = dst + len <= UINT32_MAX - 1 ? 1 : 0;"
    },
    {
        "line": 6,
        "fullcodeline": "int32_t result = IO_SUCCESS;"
    },
    {
        "line": 8,
        "fullcodeline": "dram_start = legacy ? DRAM1_NS_BASE : DRAM_40BIT_BASE;"
    },
    {
        "line": 10,
        "fullcodeline": "dram_end = legacy ? DRAM1_NS_BASE + DRAM1_NS_SIZE :"
    },
    {
        "line": 13,
        "fullcodeline": "prot_start = legacy ? DRAM_PROTECTED_BASE : DRAM_40BIT_PROTECTED_BASE;"
    },
    {
        "line": 15,
        "fullcodeline": "prot_end = prot_start + DRAM_PROTECTED_SIZE;"
    },
    {
        "line": 42,
        "fullcodeline": "addr_loaded[addr_loaded_cnt].dest = dst;"
    },
    {
        "line": 43,
        "fullcodeline": "addr_loaded[addr_loaded_cnt].length = len;"
    },
    {
        "line": 66,
        "fullcodeline": "addr_loaded_cnt++;"
    },
    {
        "line": 17,
        "fullcodeline": "if (dst < dram_start || dst > dram_end - len || dram_end < len) {"
    },
    {
        "line": 24,
        "fullcodeline": "if (dst >= prot_start && dst < prot_end) {"
    },
    {
        "line": 29,
        "fullcodeline": "if ((dst < prot_start && dst > prot_start - len) || prot_start < len) {"
    },
    {
        "line": 34,
        "fullcodeline": "if (result == IO_FAIL) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (addr_loaded_cnt >= CHECK_IMAGE_AREA_CNT) {"
    },
    {
        "line": 44,
        "fullcodeline": "for(int n=0; n<addr_loaded_cnt; n++) {"
    },
    {
        "line": 11,
        "fullcodeline": "DRAM_40BIT_BASE + DRAM_40BIT_SIZE;"
    },
    {
        "line": 18,
        "fullcodeline": "ERROR(\"BL2: dst address is on the protected area.\\n\");"
    },
    {
        "line": 19,
        "fullcodeline": "result = IO_FAIL;"
    },
    {
        "line": 25,
        "fullcodeline": "ERROR(\"BL2: dst address is on the protected area.\\n\");"
    },
    {
        "line": 26,
        "fullcodeline": "result = IO_FAIL;"
    },
    {
        "line": 30,
        "fullcodeline": "ERROR(\"BL2: loaded data is on the protected area.\\n\");"
    },
    {
        "line": 31,
        "fullcodeline": "result = IO_FAIL;"
    },
    {
        "line": 35,
        "fullcodeline": "ERROR(\"BL2: Out of range : dst=0x%lx len=0x%lx\\n\", dst, len);"
    },
    {
        "line": 39,
        "fullcodeline": "ERROR(\"BL2: max loadable non secure images reached\\n\");"
    },
    {
        "line": 40,
        "fullcodeline": "result = IO_FAIL;"
    },
    {
        "line": 58,
        "fullcodeline": "if (((dst > addr_loaded[n].dest) &&"
    },
    {
        "line": 60,
        "fullcodeline": "(((dst < addr_loaded[n].dest) &&"
    },
    {
        "line": 62,
        "fullcodeline": "ERROR(\"BL2: image is inside a previous image area.\\n\");"
    },
    {
        "line": 63,
        "fullcodeline": "result = IO_FAIL;"
    },
    {
        "line": 59,
        "fullcodeline": "(dst <  addr_loaded[n].dest + addr_loaded[n].length)) ||"
    },
    {
        "line": 61,
        "fullcodeline": "(dst + len)) > addr_loaded[n].dest)) {"
    }
]