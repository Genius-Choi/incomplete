[
    {
        "line": 4,
        "fullcodeline": "errorFlag = EC_Normal;"
    },
    {
        "line": 6,
        "fullcodeline": "if (getLengthField() != 0)"
    },
    {
        "line": 8,
        "fullcodeline": "DcmInputStream *readStream = inStream;"
    },
    {
        "line": 9,
        "fullcodeline": "OFBool isStreamNew = OFFalse;"
    },
    {
        "line": 15,
        "fullcodeline": "if (!readStream && fLoadValue && !fValue)"
    },
    {
        "line": 19,
        "fullcodeline": "readStream = fLoadValue->create();"
    },
    {
        "line": 21,
        "fullcodeline": "isStreamNew = OFTrue;"
    },
    {
        "line": 24,
        "fullcodeline": "setTransferredBytes(0);"
    },
    {
        "line": 30,
        "fullcodeline": "errorFlag = readStream->status();"
    },
    {
        "line": 32,
        "fullcodeline": "if (errorFlag.good() && readStream->eos())"
    },
    {
        "line": 33,
        "fullcodeline": "errorFlag = EC_EndOfStream;"
    },
    {
        "line": 74,
        "fullcodeline": "delete readStream;"
    },
    {
        "line": 35,
        "fullcodeline": "else if (errorFlag.good())"
    },
    {
        "line": 38,
        "fullcodeline": "if (!fValue)"
    },
    {
        "line": 39,
        "fullcodeline": "fValue = newValueField(); /* also set errorFlag in case of error */"
    },
    {
        "line": 46,
        "fullcodeline": "const Uint32 readLength = getLengthField() - getTransferredBytes();"
    },
    {
        "line": 50,
        "fullcodeline": "incTransferredBytes(OFstatic_cast(Uint32, readStream->read(&fValue[getTransferredBytes()], readLength)));"
    },
    {
        "line": 53,
        "fullcodeline": "if (getLengthField() == getTransferredBytes())"
    },
    {
        "line": 56,
        "fullcodeline": "postLoadValue();"
    },
    {
        "line": 57,
        "fullcodeline": "errorFlag = EC_Normal;"
    },
    {
        "line": 60,
        "fullcodeline": "else if (readStream->eos())"
    },
    {
        "line": 62,
        "fullcodeline": "errorFlag = EC_InvalidStream; // premature end of stream"
    },
    {
        "line": 63,
        "fullcodeline": "DCMDATA_ERROR(\"DcmElement: \" << getTagName() << \" \" << getTag()"
    },
    {
        "line": 68,
        "fullcodeline": "errorFlag = EC_StreamNotifyClient;"
    }
]