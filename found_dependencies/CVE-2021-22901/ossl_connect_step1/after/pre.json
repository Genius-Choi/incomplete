[
    {
        "line": 4,
        "fullcodeline": "CURLcode result = CURLE_OK;"
    },
    {
        "line": 6,
        "fullcodeline": "SSL_METHOD_QUAL SSL_METHOD *req_method = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "X509_LOOKUP *lookup = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "curl_socket_t sockfd = conn->sock[sockindex];"
    },
    {
        "line": 9,
        "fullcodeline": "struct ssl_connect_data *connssl = &conn->ssl[sockindex];"
    },
    {
        "line": 10,
        "fullcodeline": "ctx_option_t ctx_options = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "void *ssl_sessionid = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "const long int ssl_version = SSL_CONN_CONFIG(version);"
    },
    {
        "line": 27,
        "fullcodeline": "char * const ssl_cert = SSL_SET_OPTION(primary.clientcert);"
    },
    {
        "line": 28,
        "fullcodeline": "const struct curl_blob *ssl_cert_blob = SSL_SET_OPTION(primary.cert_blob);"
    },
    {
        "line": 29,
        "fullcodeline": "const struct curl_blob *ca_info_blob = SSL_CONN_CONFIG(ca_info_blob);"
    },
    {
        "line": 30,
        "fullcodeline": "const char * const ssl_cert_type = SSL_SET_OPTION(cert_type);"
    },
    {
        "line": 31,
        "fullcodeline": "const char * const ssl_cafile ="
    },
    {
        "line": 34,
        "fullcodeline": "const char * const ssl_capath = SSL_CONN_CONFIG(CApath);"
    },
    {
        "line": 35,
        "fullcodeline": "const bool verifypeer = SSL_CONN_CONFIG(verifypeer);"
    },
    {
        "line": 36,
        "fullcodeline": "const char * const ssl_crlfile = SSL_SET_OPTION(CRLfile);"
    },
    {
        "line": 37,
        "fullcodeline": "char error_buffer[256];"
    },
    {
        "line": 38,
        "fullcodeline": "struct ssl_backend_data *backend = connssl->backend;"
    },
    {
        "line": 39,
        "fullcodeline": "bool imported_native_ca = false;"
    },
    {
        "line": 41,
        "fullcodeline": "DEBUGASSERT(ssl_connect_1 == connssl->connecting_state);"
    },
    {
        "line": 44,
        "fullcodeline": "result = ossl_seed(data);"
    },
    {
        "line": 48,
        "fullcodeline": "SSL_SET_OPTION_LVALUE(certverifyresult) = !X509_V_OK;"
    },
    {
        "line": 80,
        "fullcodeline": "backend->ctx = SSL_CTX_new(req_method);"
    },
    {
        "line": 137,
        "fullcodeline": "ctx_options = SSL_OP_ALL;"
    },
    {
        "line": 191,
        "fullcodeline": "SSL_CTX_set_options(backend->ctx, ctx_options);"
    },
    {
        "line": 244,
        "fullcodeline": "ciphers = SSL_CONN_CONFIG(cipher_list);"
    },
    {
        "line": 582,
        "fullcodeline": "SSL_CTX_set_verify(backend->ctx,"
    },
    {
        "line": 596,
        "fullcodeline": "SSL_CTX_set_session_cache_mode(backend->ctx,"
    },
    {
        "line": 598,
        "fullcodeline": "SSL_CTX_sess_set_new_cb(backend->ctx, ossl_new_session_cb);"
    },
    {
        "line": 615,
        "fullcodeline": "backend->handle = SSL_new(backend->ctx);"
    },
    {
        "line": 631,
        "fullcodeline": "SSL_set_connect_state(backend->handle);"
    },
    {
        "line": 656,
        "fullcodeline": "ossl_associate_connection(data, conn, sockindex);"
    },
    {
        "line": 658,
        "fullcodeline": "Curl_ssl_sessionid_lock(data);"
    },
    {
        "line": 672,
        "fullcodeline": "Curl_ssl_sessionid_unlock(data);"
    },
    {
        "line": 693,
        "fullcodeline": "connssl->connecting_state = ssl_connect_2;"
    },
    {
        "line": 33,
        "fullcodeline": "(ca_info_blob ? NULL : SSL_CONN_CONFIG(CAfile));"
    },
    {
        "line": 82,
        "fullcodeline": "if(!backend->ctx) {"
    },
    {
        "line": 232,
        "fullcodeline": "if(ssl_cert || ssl_cert_blob || ssl_cert_type) {"
    },
    {
        "line": 245,
        "fullcodeline": "if(!ciphers)"
    },
    {
        "line": 498,
        "fullcodeline": "if(ssl_cafile || ssl_capath) {"
    },
    {
        "line": 583,
        "fullcodeline": "verifypeer ? SSL_VERIFY_PEER : SSL_VERIFY_NONE, NULL);"
    },
    {
        "line": 597,
        "fullcodeline": "SSL_SESS_CACHE_CLIENT | SSL_SESS_CACHE_NO_INTERNAL);"
    },
    {
        "line": 616,
        "fullcodeline": "if(!backend->handle) {"
    },
    {
        "line": 63,
        "fullcodeline": "req_method = SSLv23_client_method();"
    },
    {
        "line": 65,
        "fullcodeline": "use_sni(TRUE);"
    },
    {
        "line": 173,
        "fullcodeline": "ctx_options |= SSL_OP_NO_SSLv2;"
    },
    {
        "line": 174,
        "fullcodeline": "ctx_options |= SSL_OP_NO_SSLv3;"
    },
    {
        "line": 179,
        "fullcodeline": "result = set_ssl_version_min_max_legacy(&ctx_options, data, conn,"
    },
    {
        "line": 246,
        "fullcodeline": "ciphers = (char *)DEFAULT_CIPHER_SELECTION;"
    },
    {
        "line": 252,
        "fullcodeline": "infof(data, \"Cipher selection: %s\\n\", ciphers);"
    },
    {
        "line": 457,
        "fullcodeline": "result = load_cacert_from_memory(backend->ctx, ca_info_blob);"
    },
    {
        "line": 519,
        "fullcodeline": "infof(data, \" CAfile: %s\\n\", ssl_cafile ? ssl_cafile : \"none\");"
    },
    {
        "line": 520,
        "fullcodeline": "infof(data, \" CApath: %s\\n\", ssl_capath ? ssl_capath : \"none\");"
    },
    {
        "line": 536,
        "fullcodeline": "lookup = X509_STORE_add_lookup(SSL_CTX_get_cert_store(backend->ctx),"
    },
    {
        "line": 544,
        "fullcodeline": "infof(data, \"successfully load CRL file:\\n\");"
    },
    {
        "line": 548,
        "fullcodeline": "infof(data, \"  CRLfile: %s\\n\", ssl_crlfile);"
    },
    {
        "line": 602,
        "fullcodeline": "Curl_set_in_callback(data, true);"
    },
    {
        "line": 603,
        "fullcodeline": "result = (*data->set.ssl.fsslctx)(data, backend->ctx,"
    },
    {
        "line": 605,
        "fullcodeline": "Curl_set_in_callback(data, false);"
    },
    {
        "line": 659,
        "fullcodeline": "if(!Curl_ssl_getsessionid(data, conn, SSL_IS_PROXY() ? TRUE : FALSE,"
    },
    {
        "line": 670,
        "fullcodeline": "infof(data, \"SSL re-using session ID\\n\");"
    },
    {
        "line": 676,
        "fullcodeline": "BIO *const bio = BIO_new(BIO_f_ssl());"
    },
    {
        "line": 677,
        "fullcodeline": "SSL *handle = conn->proxy_ssl[sockindex].backend->handle;"
    },
    {
        "line": 681,
        "fullcodeline": "BIO_set_ssl(bio, handle, FALSE);"
    },
    {
        "line": 84,
        "fullcodeline": "ossl_strerror(ERR_peek_error(), error_buffer, sizeof(error_buffer)));"
    },
    {
        "line": 182,
        "fullcodeline": "if(result != CURLE_OK)"
    },
    {
        "line": 545,
        "fullcodeline": "X509_STORE_set_flags(SSL_CTX_get_cert_store(backend->ctx),"
    },
    {
        "line": 546,
        "fullcodeline": "X509_V_FLAG_CRL_CHECK|X509_V_FLAG_CRL_CHECK_ALL);"
    },
    {
        "line": 678,
        "fullcodeline": "DEBUGASSERT(ssl_connection_complete == conn->proxy_ssl[sockindex].state);"
    },
    {
        "line": 679,
        "fullcodeline": "DEBUGASSERT(handle != NULL);"
    },
    {
        "line": 680,
        "fullcodeline": "DEBUGASSERT(bio != NULL);"
    },
    {
        "line": 233,
        "fullcodeline": "if(!result &&"
    },
    {
        "line": 234,
        "fullcodeline": "!cert_stuff(data, backend->ctx,"
    },
    {
        "line": 238,
        "fullcodeline": "result = CURLE_SSL_CERTPROBLEM;"
    },
    {
        "line": 248,
        "fullcodeline": "if(!SSL_CTX_set_cipher_list(backend->ctx, ciphers)) {"
    },
    {
        "line": 465,
        "fullcodeline": "infof(data, \"error importing CA certificate blob, continuing anyway\\n\");"
    },
    {
        "line": 501,
        "fullcodeline": "if(!SSL_CTX_load_verify_locations(backend->ctx, ssl_cafile, ssl_capath)) {"
    },
    {
        "line": 512,
        "fullcodeline": "infof(data, \"error setting certificate verify locations,\""
    },
    {
        "line": 538,
        "fullcodeline": "if(!lookup ||"
    },
    {
        "line": 539,
        "fullcodeline": "(!X509_load_crl_file(lookup, ssl_crlfile, X509_FILETYPE_PEM)) ) {"
    },
    {
        "line": 662,
        "fullcodeline": "if(!SSL_set_session(backend->handle, ssl_sessionid)) {"
    },
    {
        "line": 663,
        "fullcodeline": "Curl_ssl_sessionid_unlock(data);"
    },
    {
        "line": 517,
        "fullcodeline": "infof(data, \"successfully set certificate verify locations:\\n\");"
    },
    {
        "line": 665,
        "fullcodeline": "ossl_strerror(ERR_get_error(), error_buffer,"
    },
    {
        "line": 686,
        "fullcodeline": "if(!SSL_set_fd(backend->handle, (int)sockfd)) {"
    },
    {
        "line": 236,
        "fullcodeline": "SSL_SET_OPTION(key), SSL_SET_OPTION(key_blob),"
    },
    {
        "line": 237,
        "fullcodeline": "SSL_SET_OPTION(key_type), SSL_SET_OPTION(key_passwd)))"
    },
    {
        "line": 459,
        "fullcodeline": "if(result == CURLE_OUT_OF_MEMORY ||"
    },
    {
        "line": 460,
        "fullcodeline": "(verifypeer && !imported_native_ca)) {"
    },
    {
        "line": 502,
        "fullcodeline": "if(verifypeer && !imported_native_ca) {"
    },
    {
        "line": 689,
        "fullcodeline": "ossl_strerror(ERR_get_error(), error_buffer, sizeof(error_buffer)));"
    }
]