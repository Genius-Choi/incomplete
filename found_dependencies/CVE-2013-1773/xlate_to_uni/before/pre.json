[
    {
        "line": 75,
        "fullcodeline": "if (*outlen % 13) {"
    },
    {
        "line": 13,
        "fullcodeline": "*outlen = utf8s_to_utf16s(name, len, (wchar_t *)outname);"
    },
    {
        "line": 19,
        "fullcodeline": "op = &outname[*outlen * sizeof(wchar_t)];"
    },
    {
        "line": 78,
        "fullcodeline": "*outlen += 1;"
    },
    {
        "line": 14,
        "fullcodeline": "if (*outlen < 0)"
    },
    {
        "line": 79,
        "fullcodeline": "if (*outlen % 13) {"
    },
    {
        "line": 76,
        "fullcodeline": "*op++ = 0;"
    },
    {
        "line": 77,
        "fullcodeline": "*op++ = 0;"
    },
    {
        "line": 80,
        "fullcodeline": "fill = 13 - (*outlen % 13);"
    },
    {
        "line": 81,
        "fullcodeline": "for (i = 0; i < fill; i++) {"
    },
    {
        "line": 16,
        "fullcodeline": "else if (*outlen > FAT_LFN_LEN)"
    },
    {
        "line": 24,
        "fullcodeline": "*outlen += 1)"
    },
    {
        "line": 23,
        "fullcodeline": "i < len && *outlen <= FAT_LFN_LEN;"
    },
    {
        "line": 17,
        "fullcodeline": "return -ENAMETOOLONG;"
    },
    {
        "line": 22,
        "fullcodeline": "for (i = 0, ip = name, op = outname, *outlen = 0;"
    },
    {
        "line": 60,
        "fullcodeline": "return -ENAMETOOLONG;"
    },
    {
        "line": 63,
        "fullcodeline": "i < len && *outlen <= FAT_LFN_LEN;"
    },
    {
        "line": 64,
        "fullcodeline": "i++, *outlen += 1)"
    },
    {
        "line": 82,
        "fullcodeline": "*op++ = 0xff;"
    },
    {
        "line": 83,
        "fullcodeline": "*op++ = 0xff;"
    },
    {
        "line": 26,
        "fullcodeline": "if (escape && (*ip == ':')) {"
    },
    {
        "line": 29,
        "fullcodeline": "ec = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "ip += 5;"
    },
    {
        "line": 50,
        "fullcodeline": "i += 5;"
    },
    {
        "line": 62,
        "fullcodeline": "for (i = 0, ip = name, op = outname, *outlen = 0;"
    },
    {
        "line": 70,
        "fullcodeline": "return -ENAMETOOLONG;"
    },
    {
        "line": 27,
        "fullcodeline": "if (i > len - 5)"
    },
    {
        "line": 30,
        "fullcodeline": "for (k = 1; k < 5; k++) {"
    },
    {
        "line": 47,
        "fullcodeline": "*op++ = ec & 0xFF;"
    },
    {
        "line": 48,
        "fullcodeline": "*op++ = ec >> 8;"
    },
    {
        "line": 54,
        "fullcodeline": "ip += charlen;"
    },
    {
        "line": 55,
        "fullcodeline": "i += charlen;"
    },
    {
        "line": 56,
        "fullcodeline": "op += 2;"
    },
    {
        "line": 66,
        "fullcodeline": "*op++ = *ip++;"
    },
    {
        "line": 67,
        "fullcodeline": "*op++ = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "nc = ip[k];"
    },
    {
        "line": 32,
        "fullcodeline": "ec <<= 4;"
    },
    {
        "line": 28,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 45,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 52,
        "fullcodeline": "if ((charlen = nls->char2uni(ip, len - i, (wchar_t *)op)) < 0)"
    },
    {
        "line": 33,
        "fullcodeline": "if (nc >= '0' && nc <= '9') {"
    },
    {
        "line": 34,
        "fullcodeline": "ec |= nc - '0';"
    },
    {
        "line": 37,
        "fullcodeline": "if (nc >= 'a' && nc <= 'f') {"
    },
    {
        "line": 38,
        "fullcodeline": "ec |= nc - ('a' - 10);"
    },
    {
        "line": 41,
        "fullcodeline": "if (nc >= 'A' && nc <= 'F') {"
    },
    {
        "line": 42,
        "fullcodeline": "ec |= nc - ('A' - 10);"
    },
    {
        "line": 53,
        "fullcodeline": "return -EINVAL;"
    }
]