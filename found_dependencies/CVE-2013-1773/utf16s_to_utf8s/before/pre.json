[
    {
        "line": 8,
        "fullcodeline": "op = s;"
    },
    {
        "line": 9,
        "fullcodeline": "while (len > 0 && maxlen > 0) {"
    },
    {
        "line": 46,
        "fullcodeline": "return op - s;"
    },
    {
        "line": 10,
        "fullcodeline": "u = get_utf16(*pwcs, endian);"
    },
    {
        "line": 13,
        "fullcodeline": "pwcs++;"
    },
    {
        "line": 14,
        "fullcodeline": "len--;"
    },
    {
        "line": 11,
        "fullcodeline": "if (!u)"
    },
    {
        "line": 15,
        "fullcodeline": "if (u > 0x7f) {"
    },
    {
        "line": 34,
        "fullcodeline": "size = utf32_to_utf8(u, op, maxlen);"
    },
    {
        "line": 16,
        "fullcodeline": "if ((u & SURROGATE_MASK) == SURROGATE_PAIR) {"
    },
    {
        "line": 35,
        "fullcodeline": "if (size == -1) {"
    },
    {
        "line": 42,
        "fullcodeline": "*op++ = (u8) u;"
    },
    {
        "line": 43,
        "fullcodeline": "maxlen--;"
    },
    {
        "line": 23,
        "fullcodeline": "v = get_utf16(*pwcs, endian);"
    },
    {
        "line": 29,
        "fullcodeline": "u = PLANE_SIZE + ((u & SURROGATE_BITS) << 10)"
    },
    {
        "line": 31,
        "fullcodeline": "pwcs++;"
    },
    {
        "line": 32,
        "fullcodeline": "len--;"
    },
    {
        "line": 17,
        "fullcodeline": "if (u & SURROGATE_LOW) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (len <= 0)"
    },
    {
        "line": 24,
        "fullcodeline": "if ((v & SURROGATE_MASK) != SURROGATE_PAIR ||"
    },
    {
        "line": 38,
        "fullcodeline": "op += size;"
    },
    {
        "line": 39,
        "fullcodeline": "maxlen -= size;"
    },
    {
        "line": 25,
        "fullcodeline": "!(v & SURROGATE_LOW)) {"
    },
    {
        "line": 30,
        "fullcodeline": "+ (v & SURROGATE_BITS);"
    }
]