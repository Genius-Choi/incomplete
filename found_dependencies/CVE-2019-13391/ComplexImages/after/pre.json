[
    {
        "line": 41,
        "fullcodeline": "assert(images != (Image *) NULL);"
    },
    {
        "line": 42,
        "fullcodeline": "assert(images->signature == MagickCoreSignature);"
    },
    {
        "line": 45,
        "fullcodeline": "assert(exception != (ExceptionInfo *) NULL);"
    },
    {
        "line": 46,
        "fullcodeline": "assert(exception->signature == MagickCoreSignature);"
    },
    {
        "line": 53,
        "fullcodeline": "image=CloneImage(images,0,0,MagickTrue,exception);"
    },
    {
        "line": 61,
        "fullcodeline": "image->depth=32UL;"
    },
    {
        "line": 62,
        "fullcodeline": "complex_images=NewImageList();"
    },
    {
        "line": 63,
        "fullcodeline": "AppendImageToList(&complex_images,image);"
    },
    {
        "line": 64,
        "fullcodeline": "image=CloneImage(images,0,0,MagickTrue,exception);"
    },
    {
        "line": 70,
        "fullcodeline": "AppendImageToList(&complex_images,image);"
    },
    {
        "line": 74,
        "fullcodeline": "artifact=GetImageArtifact(image,\"complex:snr\");"
    },
    {
        "line": 75,
        "fullcodeline": "snr=0.0;"
    },
    {
        "line": 78,
        "fullcodeline": "Ar_image=images;"
    },
    {
        "line": 79,
        "fullcodeline": "Ai_image=images->next;"
    },
    {
        "line": 80,
        "fullcodeline": "Br_image=images;"
    },
    {
        "line": 81,
        "fullcodeline": "Bi_image=images->next;"
    },
    {
        "line": 88,
        "fullcodeline": "Cr_image=complex_images;"
    },
    {
        "line": 89,
        "fullcodeline": "Ci_image=complex_images->next;"
    },
    {
        "line": 90,
        "fullcodeline": "Ar_view=AcquireVirtualCacheView(Ar_image,exception);"
    },
    {
        "line": 91,
        "fullcodeline": "Ai_view=AcquireVirtualCacheView(Ai_image,exception);"
    },
    {
        "line": 92,
        "fullcodeline": "Br_view=AcquireVirtualCacheView(Br_image,exception);"
    },
    {
        "line": 93,
        "fullcodeline": "Bi_view=AcquireVirtualCacheView(Bi_image,exception);"
    },
    {
        "line": 94,
        "fullcodeline": "Cr_view=AcquireAuthenticCacheView(Cr_image,exception);"
    },
    {
        "line": 95,
        "fullcodeline": "Ci_view=AcquireAuthenticCacheView(Ci_image,exception);"
    },
    {
        "line": 96,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 97,
        "fullcodeline": "progress=0;"
    },
    {
        "line": 43,
        "fullcodeline": "if (images->debug != MagickFalse)"
    },
    {
        "line": 47,
        "fullcodeline": "if (images->next == (Image *) NULL)"
    },
    {
        "line": 54,
        "fullcodeline": "if (image == (Image *) NULL)"
    },
    {
        "line": 56,
        "fullcodeline": "if (SetImageStorageClass(image,DirectClass) == MagickFalse)"
    },
    {
        "line": 65,
        "fullcodeline": "if (image == (Image *) NULL)"
    },
    {
        "line": 76,
        "fullcodeline": "if (artifact != (const char *) NULL)"
    },
    {
        "line": 102,
        "fullcodeline": "for (y=0; y < (ssize_t) images->rows; y++)"
    },
    {
        "line": 287,
        "fullcodeline": "Cr_view=DestroyCacheView(Cr_view);"
    },
    {
        "line": 288,
        "fullcodeline": "Ci_view=DestroyCacheView(Ci_view);"
    },
    {
        "line": 289,
        "fullcodeline": "Br_view=DestroyCacheView(Br_view);"
    },
    {
        "line": 290,
        "fullcodeline": "Bi_view=DestroyCacheView(Bi_view);"
    },
    {
        "line": 291,
        "fullcodeline": "Ar_view=DestroyCacheView(Ar_view);"
    },
    {
        "line": 292,
        "fullcodeline": "Ai_view=DestroyCacheView(Ai_view);"
    },
    {
        "line": 44,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",images->filename);"
    },
    {
        "line": 49,
        "fullcodeline": "(void) ThrowMagickException(exception,GetMagickModule(),ImageError,"
    },
    {
        "line": 58,
        "fullcodeline": "image=DestroyImageList(image);"
    },
    {
        "line": 67,
        "fullcodeline": "complex_images=DestroyImageList(complex_images);"
    },
    {
        "line": 77,
        "fullcodeline": "snr=StringToDouble(artifact,(char **) NULL);"
    },
    {
        "line": 82,
        "fullcodeline": "if ((images->next->next != (Image *) NULL) &&"
    },
    {
        "line": 83,
        "fullcodeline": "(images->next->next->next != (Image *) NULL))"
    },
    {
        "line": 85,
        "fullcodeline": "Br_image=images->next->next;"
    },
    {
        "line": 86,
        "fullcodeline": "Bi_image=images->next->next->next;"
    },
    {
        "line": 105,
        "fullcodeline": "*magick_restrict Ai,"
    },
    {
        "line": 106,
        "fullcodeline": "*magick_restrict Ar,"
    },
    {
        "line": 107,
        "fullcodeline": "*magick_restrict Bi,"
    },
    {
        "line": 111,
        "fullcodeline": "*magick_restrict Ci,"
    },
    {
        "line": 119,
        "fullcodeline": "Ar=GetCacheViewVirtualPixels(Ar_view,0,y,"
    },
    {
        "line": 121,
        "fullcodeline": "Ai=GetCacheViewVirtualPixels(Ai_view,0,y,"
    },
    {
        "line": 123,
        "fullcodeline": "Br=GetCacheViewVirtualPixels(Br_view,0,y,"
    },
    {
        "line": 125,
        "fullcodeline": "Bi=GetCacheViewVirtualPixels(Bi_view,0,y,"
    },
    {
        "line": 127,
        "fullcodeline": "Cr=QueueCacheViewAuthenticPixels(Cr_view,0,y,Cr_image->columns,1,exception);"
    },
    {
        "line": 128,
        "fullcodeline": "Ci=QueueCacheViewAuthenticPixels(Ci_view,0,y,Ci_image->columns,1,exception);"
    },
    {
        "line": 294,
        "fullcodeline": "complex_images=DestroyImageList(complex_images);"
    },
    {
        "line": 51,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 55,
        "fullcodeline": "return((Image *) NULL);"
    },
    {
        "line": 117,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 138,
        "fullcodeline": "for (x=0; x < (ssize_t) images->columns; x++)"
    },
    {
        "line": 269,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(Ci_view,exception) == MagickFalse)"
    },
    {
        "line": 271,
        "fullcodeline": "if (SyncCacheViewAuthenticPixels(Cr_view,exception) == MagickFalse)"
    },
    {
        "line": 273,
        "fullcodeline": "if (images->progress_monitor != (MagickProgressMonitor) NULL)"
    },
    {
        "line": 120,
        "fullcodeline": "MagickMax(Ar_image->columns,Cr_image->columns),1,exception);"
    },
    {
        "line": 122,
        "fullcodeline": "MagickMax(Ai_image->columns,Ci_image->columns),1,exception);"
    },
    {
        "line": 124,
        "fullcodeline": "MagickMax(Br_image->columns,Cr_image->columns),1,exception);"
    },
    {
        "line": 126,
        "fullcodeline": "MagickMax(Bi_image->columns,Ci_image->columns),1,exception);"
    },
    {
        "line": 129,
        "fullcodeline": "if ((Ar == (const PixelPacket *) NULL) ||"
    },
    {
        "line": 133,
        "fullcodeline": "(Cr == (PixelPacket *) NULL) || (Ci == (PixelPacket *) NULL))"
    },
    {
        "line": 135,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 262,
        "fullcodeline": "Ar++;"
    },
    {
        "line": 263,
        "fullcodeline": "Ai++;"
    },
    {
        "line": 264,
        "fullcodeline": "Br++;"
    },
    {
        "line": 265,
        "fullcodeline": "Bi++;"
    },
    {
        "line": 267,
        "fullcodeline": "Ci++;"
    },
    {
        "line": 270,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 272,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 281,
        "fullcodeline": "progress++;"
    },
    {
        "line": 282,
        "fullcodeline": "proceed=SetImageProgress(images,ComplexImageTag,progress,images->rows);"
    },
    {
        "line": 283,
        "fullcodeline": "if (proceed == MagickFalse)"
    },
    {
        "line": 132,
        "fullcodeline": "(Bi == (const PixelPacket *) NULL) ||"
    },
    {
        "line": 284,
        "fullcodeline": "status=MagickFalse;"
    },
    {
        "line": 131,
        "fullcodeline": "(Br == (const PixelPacket *) NULL) ||"
    },
    {
        "line": 144,
        "fullcodeline": "Cr->red=Ar->red+Br->red;"
    },
    {
        "line": 145,
        "fullcodeline": "Ci->red=Ai->red+Bi->red;"
    },
    {
        "line": 146,
        "fullcodeline": "Cr->green=Ar->green+Br->green;"
    },
    {
        "line": 147,
        "fullcodeline": "Ci->green=Ai->green+Bi->green;"
    },
    {
        "line": 148,
        "fullcodeline": "Cr->blue=Ar->blue+Br->blue;"
    },
    {
        "line": 149,
        "fullcodeline": "Ci->blue=Ai->blue+Bi->blue;"
    },
    {
        "line": 160,
        "fullcodeline": "Cr->red=Ar->red;"
    },
    {
        "line": 161,
        "fullcodeline": "Ci->red=(-Bi->red);"
    },
    {
        "line": 162,
        "fullcodeline": "Cr->green=Ar->green;"
    },
    {
        "line": 163,
        "fullcodeline": "Ci->green=(-Bi->green);"
    },
    {
        "line": 164,
        "fullcodeline": "Cr->blue=Ar->blue;"
    },
    {
        "line": 165,
        "fullcodeline": "Ci->blue=(-Bi->blue);"
    },
    {
        "line": 178,
        "fullcodeline": "gamma=PerceptibleReciprocal(Br->red*Br->red+Bi->red*Bi->red+snr);"
    },
    {
        "line": 179,
        "fullcodeline": "Cr->red=gamma*(Ar->red*Br->red+Ai->red*Bi->red);"
    },
    {
        "line": 180,
        "fullcodeline": "Ci->red=gamma*(Ai->red*Br->red-Ar->red*Bi->red);"
    },
    {
        "line": 181,
        "fullcodeline": "gamma=PerceptibleReciprocal(Br->green*Br->green+Bi->green*Bi->green+"
    },
    {
        "line": 183,
        "fullcodeline": "Cr->green=gamma*(Ar->green*Br->green+Ai->green*Bi->green);"
    },
    {
        "line": 184,
        "fullcodeline": "Ci->green=gamma*(Ai->green*Br->green-Ar->green*Bi->green);"
    },
    {
        "line": 185,
        "fullcodeline": "gamma=PerceptibleReciprocal(Br->blue*Br->blue+Bi->blue*Bi->blue+snr);"
    },
    {
        "line": 186,
        "fullcodeline": "Cr->blue=gamma*(Ar->blue*Br->blue+Ai->blue*Bi->blue);"
    },
    {
        "line": 187,
        "fullcodeline": "Ci->blue=gamma*(Ai->blue*Br->blue-Ar->blue*Bi->blue);"
    },
    {
        "line": 201,
        "fullcodeline": "Cr->red=sqrt(Ar->red*Ar->red+Ai->red*Ai->red);"
    },
    {
        "line": 202,
        "fullcodeline": "Ci->red=atan2(Ai->red,Ar->red)/(2.0*MagickPI)+0.5;"
    },
    {
        "line": 203,
        "fullcodeline": "Cr->green=sqrt(Ar->green*Ar->green+Ai->green*Ai->green);"
    },
    {
        "line": 204,
        "fullcodeline": "Ci->green=atan2(Ai->green,Ar->green)/(2.0*MagickPI)+0.5;"
    },
    {
        "line": 205,
        "fullcodeline": "Cr->blue=sqrt(Ar->blue*Ar->blue+Ai->blue*Ai->blue);"
    },
    {
        "line": 206,
        "fullcodeline": "Ci->blue=atan2(Ai->blue,Ar->blue)/(2.0*MagickPI)+0.5;"
    },
    {
        "line": 216,
        "fullcodeline": "Cr->red=QuantumScale*(Ar->red*Br->red-Ai->red*Bi->red);"
    },
    {
        "line": 217,
        "fullcodeline": "Ci->red=QuantumScale*(Ai->red*Br->red+Ar->red*Bi->red);"
    },
    {
        "line": 218,
        "fullcodeline": "Cr->green=QuantumScale*(Ar->green*Br->green-Ai->green*Bi->green);"
    },
    {
        "line": 219,
        "fullcodeline": "Ci->green=QuantumScale*(Ai->green*Br->green+Ar->green*Bi->green);"
    },
    {
        "line": 220,
        "fullcodeline": "Cr->blue=QuantumScale*(Ar->blue*Br->blue-Ai->blue*Bi->blue);"
    },
    {
        "line": 221,
        "fullcodeline": "Ci->blue=QuantumScale*(Ai->blue*Br->blue+Ar->blue*Bi->blue);"
    },
    {
        "line": 233,
        "fullcodeline": "Cr->red=Ar->red*cos(2.0*MagickPI*(Ai->red-0.5));"
    },
    {
        "line": 234,
        "fullcodeline": "Ci->red=Ar->red*sin(2.0*MagickPI*(Ai->red-0.5));"
    },
    {
        "line": 235,
        "fullcodeline": "Cr->green=Ar->green*cos(2.0*MagickPI*(Ai->green-0.5));"
    },
    {
        "line": 236,
        "fullcodeline": "Ci->green=Ar->green*sin(2.0*MagickPI*(Ai->green-0.5));"
    },
    {
        "line": 237,
        "fullcodeline": "Cr->blue=Ar->blue*cos(2.0*MagickPI*(Ai->blue-0.5));"
    },
    {
        "line": 238,
        "fullcodeline": "Ci->blue=Ar->blue*sin(2.0*MagickPI*(Ai->blue-0.5));"
    },
    {
        "line": 248,
        "fullcodeline": "Cr->red=Ar->red-Br->red;"
    },
    {
        "line": 249,
        "fullcodeline": "Ci->red=Ai->red-Bi->red;"
    },
    {
        "line": 250,
        "fullcodeline": "Cr->green=Ar->green-Br->green;"
    },
    {
        "line": 251,
        "fullcodeline": "Ci->green=Ai->green-Bi->green;"
    },
    {
        "line": 252,
        "fullcodeline": "Cr->blue=Ar->blue-Br->blue;"
    },
    {
        "line": 253,
        "fullcodeline": "Ci->blue=Ai->blue-Bi->blue;"
    },
    {
        "line": 130,
        "fullcodeline": "(Ai == (const PixelPacket *) NULL) ||"
    },
    {
        "line": 150,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 166,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 188,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 207,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 222,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 239,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 254,
        "fullcodeline": "if (images->matte != MagickFalse)"
    },
    {
        "line": 152,
        "fullcodeline": "Cr->opacity=Ar->opacity+Br->opacity;"
    },
    {
        "line": 153,
        "fullcodeline": "Ci->opacity=Ai->opacity+Bi->opacity;"
    },
    {
        "line": 168,
        "fullcodeline": "Cr->opacity=Ar->opacity;"
    },
    {
        "line": 169,
        "fullcodeline": "Ci->opacity=(-Bi->opacity);"
    },
    {
        "line": 190,
        "fullcodeline": "gamma=PerceptibleReciprocal(Br->opacity*Br->opacity+Bi->opacity*"
    },
    {
        "line": 192,
        "fullcodeline": "Cr->opacity=gamma*(Ar->opacity*Br->opacity+Ai->opacity*"
    },
    {
        "line": 194,
        "fullcodeline": "Ci->opacity=gamma*(Ai->opacity*Br->opacity-Ar->opacity*"
    },
    {
        "line": 209,
        "fullcodeline": "Cr->opacity=sqrt(Ar->opacity*Ar->opacity+Ai->opacity*Ai->opacity);"
    },
    {
        "line": 210,
        "fullcodeline": "Ci->opacity=atan2(Ai->opacity,Ar->opacity)/(2.0*MagickPI)+0.5;"
    },
    {
        "line": 224,
        "fullcodeline": "Cr->opacity=QuantumScale*(Ar->opacity*Br->opacity-Ai->opacity*"
    },
    {
        "line": 226,
        "fullcodeline": "Ci->opacity=QuantumScale*(Ai->opacity*Br->opacity+Ar->opacity*"
    },
    {
        "line": 241,
        "fullcodeline": "Cr->opacity=Ar->opacity*cos(2.0*MagickPI*(Ai->opacity-0.5));"
    },
    {
        "line": 242,
        "fullcodeline": "Ci->opacity=Ar->opacity*sin(2.0*MagickPI*(Ai->opacity-0.5));"
    },
    {
        "line": 256,
        "fullcodeline": "Cr->opacity=Ar->opacity-Br->opacity;"
    },
    {
        "line": 257,
        "fullcodeline": "Ci->opacity=Ai->opacity-Bi->opacity;"
    }
]