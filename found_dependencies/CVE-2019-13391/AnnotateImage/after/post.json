[
    {
        "line": 6,
        "fullcodeline": "primitive[MaxTextExtent],"
    },
    {
        "line": 36,
        "fullcodeline": "assert(image != (Image *) NULL);"
    },
    {
        "line": 37,
        "fullcodeline": "assert(image->signature == MagickCoreSignature);"
    },
    {
        "line": 40,
        "fullcodeline": "assert(draw_info != (DrawInfo *) NULL);"
    },
    {
        "line": 41,
        "fullcodeline": "assert(draw_info->signature == MagickCoreSignature);"
    },
    {
        "line": 46,
        "fullcodeline": "annotate=CloneDrawInfo((ImageInfo *) NULL,draw_info);"
    },
    {
        "line": 47,
        "fullcodeline": "text=annotate->text;"
    },
    {
        "line": 48,
        "fullcodeline": "annotate->text=(char *) NULL;"
    },
    {
        "line": 49,
        "fullcodeline": "annotate_info=CloneDrawInfo((ImageInfo *) NULL,draw_info);"
    },
    {
        "line": 50,
        "fullcodeline": "number_lines=1;"
    },
    {
        "line": 54,
        "fullcodeline": "textlist=AcquireQuantumMemory(number_lines+1,sizeof(*textlist));"
    },
    {
        "line": 62,
        "fullcodeline": "p=text;"
    },
    {
        "line": 80,
        "fullcodeline": "textlist[i]=(char *) NULL;"
    },
    {
        "line": 81,
        "fullcodeline": "SetGeometry(image,&geometry);"
    },
    {
        "line": 82,
        "fullcodeline": "SetGeometryInfo(&geometry_info);"
    },
    {
        "line": 99,
        "fullcodeline": "status=MagickTrue;"
    },
    {
        "line": 100,
        "fullcodeline": "(void) memset(&metrics,0,sizeof(metrics));"
    },
    {
        "line": 309,
        "fullcodeline": "annotate_info=DestroyDrawInfo(annotate_info);"
    },
    {
        "line": 310,
        "fullcodeline": "annotate=DestroyDrawInfo(annotate);"
    },
    {
        "line": 311,
        "fullcodeline": "textlist=(char **) RelinquishMagickMemory(textlist);"
    },
    {
        "line": 312,
        "fullcodeline": "text=DestroyString(text);"
    },
    {
        "line": 38,
        "fullcodeline": "if (image->debug != MagickFalse)"
    },
    {
        "line": 42,
        "fullcodeline": "if (draw_info->text == (char *) NULL)"
    },
    {
        "line": 44,
        "fullcodeline": "if (*draw_info->text == '\\0')"
    },
    {
        "line": 51,
        "fullcodeline": "for (p=text; *p != '\\0'; p++)"
    },
    {
        "line": 55,
        "fullcodeline": "if (textlist == (char **) NULL)"
    },
    {
        "line": 63,
        "fullcodeline": "for (i=0; i < number_lines; i++)"
    },
    {
        "line": 83,
        "fullcodeline": "if (annotate_info->geometry != (char *) NULL)"
    },
    {
        "line": 89,
        "fullcodeline": "if (SetImageStorageClass(image,DirectClass) == MagickFalse)"
    },
    {
        "line": 97,
        "fullcodeline": "if (IsGrayColorspace(image->colorspace) != MagickFalse)"
    },
    {
        "line": 101,
        "fullcodeline": "for (i=0; textlist[i] != (char *) NULL; i++)"
    },
    {
        "line": 39,
        "fullcodeline": "(void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",image->filename);"
    },
    {
        "line": 52,
        "fullcodeline": "if (*p == '\\n')"
    },
    {
        "line": 57,
        "fullcodeline": "annotate_info=DestroyDrawInfo(annotate_info);"
    },
    {
        "line": 58,
        "fullcodeline": "annotate=DestroyDrawInfo(annotate);"
    },
    {
        "line": 59,
        "fullcodeline": "text=DestroyString(text);"
    },
    {
        "line": 68,
        "fullcodeline": "textlist[i]=p;"
    },
    {
        "line": 77,
        "fullcodeline": "*q='\\0';"
    },
    {
        "line": 78,
        "fullcodeline": "p=q+1;"
    },
    {
        "line": 85,
        "fullcodeline": "(void) ParsePageGeometry(image,annotate_info->geometry,&geometry,"
    },
    {
        "line": 87,
        "fullcodeline": "(void) ParseGeometry(annotate_info->geometry,&geometry_info);"
    },
    {
        "line": 91,
        "fullcodeline": "annotate_info=DestroyDrawInfo(annotate_info);"
    },
    {
        "line": 92,
        "fullcodeline": "annotate=DestroyDrawInfo(annotate);"
    },
    {
        "line": 93,
        "fullcodeline": "textlist=(char **) RelinquishMagickMemory(textlist);"
    },
    {
        "line": 94,
        "fullcodeline": "text=DestroyString(text);"
    },
    {
        "line": 98,
        "fullcodeline": "(void) SetImageColorspace(image,sRGBColorspace);"
    },
    {
        "line": 108,
        "fullcodeline": "annotate_info->affine.tx=geometry_info.xi-image->page.x;"
    },
    {
        "line": 109,
        "fullcodeline": "annotate_info->affine.ty=geometry_info.psi-image->page.y;"
    },
    {
        "line": 110,
        "fullcodeline": "(void) CloneString(&annotate->text,textlist[i]);"
    },
    {
        "line": 113,
        "fullcodeline": "height=(ssize_t) (metrics.ascent-metrics.descent+"
    },
    {
        "line": 273,
        "fullcodeline": "annotate_info->affine.tx=offset.x;"
    },
    {
        "line": 274,
        "fullcodeline": "annotate_info->affine.ty=offset.y;"
    },
    {
        "line": 275,
        "fullcodeline": "(void) FormatLocaleString(primitive,MaxTextExtent,\"stroke-width %g \""
    },
    {
        "line": 295,
        "fullcodeline": "status=RenderType(image,annotate,&offset,&metrics);"
    },
    {
        "line": 53,
        "fullcodeline": "number_lines++;"
    },
    {
        "line": 69,
        "fullcodeline": "for (q=p; *q != '\\0'; q++)"
    },
    {
        "line": 72,
        "fullcodeline": "if (*q == '\\r')"
    },
    {
        "line": 103,
        "fullcodeline": "if (*textlist[i] == '\\0')"
    },
    {
        "line": 111,
        "fullcodeline": "if ((metrics.width == 0) || (annotate->gravity != NorthWestGravity))"
    },
    {
        "line": 254,
        "fullcodeline": "if (draw_info->undercolor.opacity != TransparentOpacity)"
    },
    {
        "line": 277,
        "fullcodeline": "if (annotate->decorate == OverlineDecoration)"
    },
    {
        "line": 296,
        "fullcodeline": "if (status == MagickFalse)"
    },
    {
        "line": 298,
        "fullcodeline": "if (annotate->decorate == LineThroughDecoration)"
    },
    {
        "line": 70,
        "fullcodeline": "if ((*q == '\\r') || (*q == '\\n'))"
    },
    {
        "line": 74,
        "fullcodeline": "*q='\\0';"
    },
    {
        "line": 75,
        "fullcodeline": "q++;"
    },
    {
        "line": 112,
        "fullcodeline": "(void) GetTypeMetrics(image,annotate,&metrics);"
    },
    {
        "line": 262,
        "fullcodeline": "undercolor_info=CloneDrawInfo((ImageInfo *) NULL,(DrawInfo *) NULL);"
    },
    {
        "line": 263,
        "fullcodeline": "undercolor_info->fill=draw_info->undercolor;"
    },
    {
        "line": 264,
        "fullcodeline": "undercolor_info->affine=draw_info->affine;"
    },
    {
        "line": 265,
        "fullcodeline": "undercolor_info->affine.tx=offset.x-draw_info->affine.ry*metrics.ascent;"
    },
    {
        "line": 266,
        "fullcodeline": "undercolor_info->affine.ty=offset.y-draw_info->affine.sy*metrics.ascent;"
    },
    {
        "line": 267,
        "fullcodeline": "(void) FormatLocaleString(primitive,MaxTextExtent,"
    },
    {
        "line": 269,
        "fullcodeline": "(void) CloneString(&undercolor_info->primitive,primitive);"
    },
    {
        "line": 270,
        "fullcodeline": "(void) DrawImage(image,undercolor_info);"
    },
    {
        "line": 271,
        "fullcodeline": "(void) DestroyDrawInfo(undercolor_info);"
    },
    {
        "line": 279,
        "fullcodeline": "annotate_info->affine.ty-=(draw_info->affine.sy*(metrics.ascent+"
    },
    {
        "line": 281,
        "fullcodeline": "(void) CloneString(&annotate_info->primitive,primitive);"
    },
    {
        "line": 282,
        "fullcodeline": "(void) DrawImage(image,annotate_info);"
    },
    {
        "line": 300,
        "fullcodeline": "annotate_info->affine.ty-=(draw_info->affine.sy*(height+"
    },
    {
        "line": 302,
        "fullcodeline": "(void) CloneString(&annotate_info->primitive,primitive);"
    },
    {
        "line": 303,
        "fullcodeline": "(void) DrawImage(image,annotate_info);"
    },
    {
        "line": 120,
        "fullcodeline": "offset.x=annotate_info->affine.tx+i*annotate_info->affine.ry*height;"
    },
    {
        "line": 121,
        "fullcodeline": "offset.y=annotate_info->affine.ty+i*annotate_info->affine.sy*height;"
    },
    {
        "line": 126,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+i*"
    },
    {
        "line": 129,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+i*"
    },
    {
        "line": 136,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 140,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+i*"
    },
    {
        "line": 147,
        "fullcodeline": "offset.x=(geometry.width == 0 ? 1.0 : -1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 151,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+i*"
    },
    {
        "line": 158,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+i*"
    },
    {
        "line": 161,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 170,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 174,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 182,
        "fullcodeline": "offset.x=(geometry.width == 0 ? 1.0 : -1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 186,
        "fullcodeline": "offset.y=(geometry.height == 0 ? -1.0 : 1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 194,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+i*"
    },
    {
        "line": 197,
        "fullcodeline": "offset.y=(geometry.height == 0 ? 1.0 : -1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 204,
        "fullcodeline": "offset.x=(geometry.width == 0 ? -1.0 : 1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 208,
        "fullcodeline": "offset.y=(geometry.height == 0 ? 1.0 : -1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 216,
        "fullcodeline": "offset.x=(geometry.width == 0 ? 1.0 : -1.0)*annotate_info->affine.tx+"
    },
    {
        "line": 220,
        "fullcodeline": "offset.y=(geometry.height == 0 ? 1.0 : -1.0)*annotate_info->affine.ty+"
    },
    {
        "line": 231,
        "fullcodeline": "offset.x=annotate_info->affine.tx+i*annotate_info->affine.ry*height;"
    },
    {
        "line": 232,
        "fullcodeline": "offset.y=annotate_info->affine.ty+i*annotate_info->affine.sy*height;"
    },
    {
        "line": 237,
        "fullcodeline": "offset.x=annotate_info->affine.tx+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 239,
        "fullcodeline": "offset.y=annotate_info->affine.ty+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 245,
        "fullcodeline": "offset.x=annotate_info->affine.tx+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 247,
        "fullcodeline": "offset.y=annotate_info->affine.ty+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 268,
        "fullcodeline": "\"rectangle 0.0,0.0 %g,%g\",metrics.origin.x,(double) height);"
    },
    {
        "line": 285,
        "fullcodeline": "if (annotate->decorate == UnderlineDecoration)"
    },
    {
        "line": 127,
        "fullcodeline": "annotate_info->affine.ry*height+annotate_info->affine.ry*"
    },
    {
        "line": 130,
        "fullcodeline": "annotate_info->affine.sy*height+annotate_info->affine.sy*"
    },
    {
        "line": 138,
        "fullcodeline": "annotate_info->affine.sx*metrics.width/2.0+annotate_info->affine.ry*"
    },
    {
        "line": 142,
        "fullcodeline": "metrics.ascent-annotate_info->affine.rx*metrics.width/2.0;"
    },
    {
        "line": 153,
        "fullcodeline": "metrics.ascent-annotate_info->affine.rx*metrics.width;"
    },
    {
        "line": 159,
        "fullcodeline": "annotate_info->affine.ry*height+annotate_info->affine.ry*"
    },
    {
        "line": 163,
        "fullcodeline": "annotate_info->affine.sy*(metrics.ascent+metrics.descent-"
    },
    {
        "line": 172,
        "fullcodeline": "annotate_info->affine.sx*metrics.width/2.0+annotate_info->affine.ry*"
    },
    {
        "line": 176,
        "fullcodeline": "annotate_info->affine.rx*metrics.width/2.0+annotate_info->affine.sy*"
    },
    {
        "line": 188,
        "fullcodeline": "annotate_info->affine.rx*metrics.width+annotate_info->affine.sy*"
    },
    {
        "line": 195,
        "fullcodeline": "annotate_info->affine.ry*height-annotate_info->affine.ry*"
    },
    {
        "line": 206,
        "fullcodeline": "annotate_info->affine.sx*metrics.width/2.0-annotate_info->affine.ry*"
    },
    {
        "line": 238,
        "fullcodeline": "annotate_info->affine.sx*metrics.width/2.0;"
    },
    {
        "line": 240,
        "fullcodeline": "annotate_info->affine.rx*metrics.width/2.0;"
    },
    {
        "line": 246,
        "fullcodeline": "annotate_info->affine.sx*metrics.width;"
    },
    {
        "line": 248,
        "fullcodeline": "annotate_info->affine.rx*metrics.width;"
    },
    {
        "line": 287,
        "fullcodeline": "annotate_info->affine.ty-=(draw_info->affine.sy*"
    },
    {
        "line": 289,
        "fullcodeline": "(void) CloneString(&annotate_info->primitive,primitive);"
    },
    {
        "line": 290,
        "fullcodeline": "(void) DrawImage(image,annotate_info);"
    },
    {
        "line": 128,
        "fullcodeline": "(metrics.ascent+metrics.descent);"
    },
    {
        "line": 139,
        "fullcodeline": "(metrics.ascent+metrics.descent);"
    },
    {
        "line": 141,
        "fullcodeline": "annotate_info->affine.sy*height+annotate_info->affine.sy*"
    },
    {
        "line": 149,
        "fullcodeline": "annotate_info->affine.sx*metrics.width+annotate_info->affine.ry*"
    },
    {
        "line": 152,
        "fullcodeline": "annotate_info->affine.sy*height+annotate_info->affine.sy*"
    },
    {
        "line": 162,
        "fullcodeline": "geometry.height/2.0+i*annotate_info->affine.sy*height+"
    },
    {
        "line": 184,
        "fullcodeline": "annotate_info->affine.sx*metrics.width+annotate_info->affine.ry*"
    },
    {
        "line": 199,
        "fullcodeline": "annotate_info->affine.sy*(number_lines-1.0)*height+metrics.descent;"
    },
    {
        "line": 210,
        "fullcodeline": "annotate_info->affine.rx*metrics.width/2.0-annotate_info->affine.sy*"
    },
    {
        "line": 218,
        "fullcodeline": "annotate_info->affine.sx*metrics.width-annotate_info->affine.ry*"
    },
    {
        "line": 222,
        "fullcodeline": "annotate_info->affine.rx*metrics.width-annotate_info->affine.sy*"
    },
    {
        "line": 137,
        "fullcodeline": "geometry.width/2.0+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 150,
        "fullcodeline": "(metrics.ascent+metrics.descent)-1.0;"
    },
    {
        "line": 160,
        "fullcodeline": "(metrics.ascent+metrics.descent-(number_lines-1.0)*height)/2.0;"
    },
    {
        "line": 171,
        "fullcodeline": "geometry.width/2.0+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 173,
        "fullcodeline": "(metrics.ascent+metrics.descent-(number_lines-1)*height)/2.0;"
    },
    {
        "line": 175,
        "fullcodeline": "geometry.height/2.0+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 177,
        "fullcodeline": "(metrics.ascent+metrics.descent-(number_lines-1.0)*height)/2.0;"
    },
    {
        "line": 187,
        "fullcodeline": "geometry.height/2.0+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 189,
        "fullcodeline": "(metrics.ascent+metrics.descent-(number_lines-1.0)*height)/2.0;"
    },
    {
        "line": 196,
        "fullcodeline": "(number_lines-1.0)*height;"
    },
    {
        "line": 198,
        "fullcodeline": "geometry.height+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 205,
        "fullcodeline": "geometry.width/2.0+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 148,
        "fullcodeline": "geometry.width+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 164,
        "fullcodeline": "(number_lines-1.0)*height)/2.0;"
    },
    {
        "line": 183,
        "fullcodeline": "geometry.width+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 185,
        "fullcodeline": "(metrics.ascent+metrics.descent-(number_lines-1.0)*height)/2.0-1.0;"
    },
    {
        "line": 207,
        "fullcodeline": "(number_lines-1.0)*height/2.0;"
    },
    {
        "line": 209,
        "fullcodeline": "geometry.height+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 211,
        "fullcodeline": "(number_lines-1.0)*height+metrics.descent;"
    },
    {
        "line": 217,
        "fullcodeline": "geometry.width+i*annotate_info->affine.ry*height-"
    },
    {
        "line": 219,
        "fullcodeline": "(number_lines-1.0)*height-1.0;"
    },
    {
        "line": 221,
        "fullcodeline": "geometry.height+i*annotate_info->affine.sy*height-"
    },
    {
        "line": 223,
        "fullcodeline": "(number_lines-1.0)*height+metrics.descent;"
    }
]