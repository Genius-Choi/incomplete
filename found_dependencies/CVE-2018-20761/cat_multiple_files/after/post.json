[
    {
        "line": 6,
        "fullcodeline": "cat_enum.dest = dest;"
    },
    {
        "line": 7,
        "fullcodeline": "cat_enum.import_flags = import_flags;"
    },
    {
        "line": 8,
        "fullcodeline": "cat_enum.force_fps = force_fps;"
    },
    {
        "line": 9,
        "fullcodeline": "cat_enum.frames_per_sample = frames_per_sample;"
    },
    {
        "line": 10,
        "fullcodeline": "cat_enum.tmp_dir = tmp_dir;"
    },
    {
        "line": 11,
        "fullcodeline": "cat_enum.force_cat = force_cat;"
    },
    {
        "line": 12,
        "fullcodeline": "cat_enum.align_timelines = align_timelines;"
    },
    {
        "line": 13,
        "fullcodeline": "cat_enum.allow_add_in_command = allow_add_in_command;"
    },
    {
        "line": 19,
        "fullcodeline": "strcpy(cat_enum.szPath, fileName);"
    },
    {
        "line": 20,
        "fullcodeline": "sep = strrchr(cat_enum.szPath, GF_PATH_SEPARATOR);"
    },
    {
        "line": 37,
        "fullcodeline": "sep = strchr(cat_enum.szRad1, '*');"
    },
    {
        "line": 42,
        "fullcodeline": "strcpy(cat_enum.szRad2, sep+1);"
    },
    {
        "line": 43,
        "fullcodeline": "sep[0] = 0;"
    },
    {
        "line": 44,
        "fullcodeline": "sep = strchr(cat_enum.szRad2, '%');"
    },
    {
        "line": 47,
        "fullcodeline": "strcpy(cat_enum.szOpt, \"\");"
    },
    {
        "line": 15,
        "fullcodeline": "if (strlen(fileName) >= sizeof(cat_enum.szPath)) {"
    },
    {
        "line": 21,
        "fullcodeline": "if (!sep) sep = strrchr(cat_enum.szPath, '/');"
    },
    {
        "line": 22,
        "fullcodeline": "if (!sep) {"
    },
    {
        "line": 38,
        "fullcodeline": "if (strlen(sep + 1) >= sizeof(cat_enum.szRad2)) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (!sep) sep = strchr(cat_enum.szRad2, '#');"
    },
    {
        "line": 46,
        "fullcodeline": "if (!sep) sep = strchr(cat_enum.szRad2, ':');"
    },
    {
        "line": 56,
        "fullcodeline": "return gf_enum_directory(cat_enum.szPath, 0, cat_enumerate, &cat_enum, NULL);"
    },
    {
        "line": 16,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"File name %s is too long.\\n\", fileName));"
    },
    {
        "line": 23,
        "fullcodeline": "strcpy(cat_enum.szPath, \".\");"
    },
    {
        "line": 28,
        "fullcodeline": "strcpy(cat_enum.szRad1, fileName);"
    },
    {
        "line": 39,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"File name %s is too long.\\n\", (sep + 1)));"
    },
    {
        "line": 53,
        "fullcodeline": "strcpy(cat_enum.szOpt, sep);"
    },
    {
        "line": 54,
        "fullcodeline": "sep[0] = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "if (strlen(fileName) >= sizeof(cat_enum.szRad1)) {"
    },
    {
        "line": 34,
        "fullcodeline": "strcpy(cat_enum.szRad1, sep+1);"
    },
    {
        "line": 35,
        "fullcodeline": "sep[0] = 0;"
    },
    {
        "line": 49,
        "fullcodeline": "if (strlen(sep) >= sizeof(cat_enum.szOpt)) {"
    },
    {
        "line": 25,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"File name %s is too long.\\n\", fileName));"
    },
    {
        "line": 30,
        "fullcodeline": "if (strlen(sep + 1) >= sizeof(cat_enum.szRad1)) {"
    },
    {
        "line": 50,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"Invalid option: %s.\\n\", sep));"
    },
    {
        "line": 31,
        "fullcodeline": "GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"File name %s is too long.\\n\", (sep + 1)));"
    }
]