[
    {
        "line": 10,
        "fullcodeline": "r = sr->parent;"
    },
    {
        "line": 12,
        "fullcodeline": "sr->header_in = r->header_in;"
    },
    {
        "line": 57,
        "fullcodeline": "sr->method = method;"
    },
    {
        "line": 127,
        "fullcodeline": "if (!(vars_action & NGX_HTTP_LUA_SHARE_ALL_VARS)) {"
    },
    {
        "line": 153,
        "fullcodeline": "return ngx_http_lua_subrequest_add_extra_vars(sr, extra_vars);"
    },
    {
        "line": 15,
        "fullcodeline": "sr->request_body = body;"
    },
    {
        "line": 17,
        "fullcodeline": "rc = ngx_http_lua_set_content_length_header(sr,"
    },
    {
        "line": 61,
        "fullcodeline": "sr->method_name = ngx_http_lua_get_method;"
    },
    {
        "line": 65,
        "fullcodeline": "sr->method_name = ngx_http_lua_post_method;"
    },
    {
        "line": 69,
        "fullcodeline": "sr->method_name = ngx_http_lua_put_method;"
    },
    {
        "line": 73,
        "fullcodeline": "sr->method_name = ngx_http_lua_head_method;"
    },
    {
        "line": 77,
        "fullcodeline": "sr->method_name = ngx_http_lua_delete_method;"
    },
    {
        "line": 81,
        "fullcodeline": "sr->method_name = ngx_http_lua_options_method;"
    },
    {
        "line": 85,
        "fullcodeline": "sr->method_name = ngx_http_lua_mkcol_method;"
    },
    {
        "line": 89,
        "fullcodeline": "sr->method_name = ngx_http_lua_copy_method;"
    },
    {
        "line": 93,
        "fullcodeline": "sr->method_name = ngx_http_lua_move_method;"
    },
    {
        "line": 97,
        "fullcodeline": "sr->method_name = ngx_http_lua_propfind_method;"
    },
    {
        "line": 101,
        "fullcodeline": "sr->method_name = ngx_http_lua_proppatch_method;"
    },
    {
        "line": 105,
        "fullcodeline": "sr->method_name = ngx_http_lua_lock_method;"
    },
    {
        "line": 109,
        "fullcodeline": "sr->method_name = ngx_http_lua_unlock_method;"
    },
    {
        "line": 113,
        "fullcodeline": "sr->method_name = ngx_http_lua_patch_method;"
    },
    {
        "line": 117,
        "fullcodeline": "sr->method_name = ngx_http_lua_trace_method;"
    },
    {
        "line": 121,
        "fullcodeline": "ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,"
    },
    {
        "line": 129,
        "fullcodeline": "cmcf = ngx_http_get_module_main_conf(sr, ngx_http_core_module);"
    },
    {
        "line": 131,
        "fullcodeline": "size = cmcf->variables.nelts * sizeof(ngx_http_variable_value_t);"
    },
    {
        "line": 22,
        "fullcodeline": "if (rc != NGX_OK) {"
    },
    {
        "line": 122,
        "fullcodeline": "\"unsupported HTTP method: %u\", (unsigned) method);"
    },
    {
        "line": 133,
        "fullcodeline": "if (vars_action & NGX_HTTP_LUA_COPY_ALL_VARS) {"
    },
    {
        "line": 18,
        "fullcodeline": "body->buf"
    },
    {
        "line": 26,
        "fullcodeline": "} else if (!always_forward_body"
    },
    {
        "line": 135,
        "fullcodeline": "sr->variables = ngx_palloc(sr->pool, size);"
    },
    {
        "line": 140,
        "fullcodeline": "ngx_memcpy(sr->variables, r->variables, size);"
    },
    {
        "line": 19,
        "fullcodeline": "? ngx_buf_size(body->buf)"
    },
    {
        "line": 29,
        "fullcodeline": "&& r->headers_in.content_length_n > 0)"
    },
    {
        "line": 31,
        "fullcodeline": "rc = ngx_http_lua_set_content_length_header(sr, 0);"
    },
    {
        "line": 37,
        "fullcodeline": "sr->request_body = NULL;"
    },
    {
        "line": 136,
        "fullcodeline": "if (sr->variables == NULL) {"
    },
    {
        "line": 146,
        "fullcodeline": "sr->variables = ngx_pcalloc(sr->pool, size);"
    },
    {
        "line": 28,
        "fullcodeline": "&& method != NGX_HTTP_POST"
    },
    {
        "line": 32,
        "fullcodeline": "if (rc != NGX_OK) {"
    },
    {
        "line": 147,
        "fullcodeline": "if (sr->variables == NULL) {"
    },
    {
        "line": 27,
        "fullcodeline": "&& method != NGX_HTTP_PUT"
    },
    {
        "line": 41,
        "fullcodeline": "if (ngx_http_lua_copy_request_headers(sr, r) != NGX_OK) {"
    },
    {
        "line": 50,
        "fullcodeline": "if (ngx_http_lua_copy_in_file_request_body(sr) != NGX_OK) {"
    }
]