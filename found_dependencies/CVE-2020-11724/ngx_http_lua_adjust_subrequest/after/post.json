[
    {
        "line": 7,
        "fullcodeline": "int                          pr_not_chunked = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "r = sr->parent;"
    },
    {
        "line": 12,
        "fullcodeline": "sr->header_in = r->header_in;"
    },
    {
        "line": 43,
        "fullcodeline": "sr->method = method;"
    },
    {
        "line": 39,
        "fullcodeline": "if (ngx_http_lua_copy_request_headers(sr, r, pr_not_chunked) != NGX_OK) {"
    },
    {
        "line": 113,
        "fullcodeline": "if (!(vars_action & NGX_HTTP_LUA_SHARE_ALL_VARS)) {"
    },
    {
        "line": 139,
        "fullcodeline": "return ngx_http_lua_subrequest_add_extra_vars(sr, extra_vars);"
    },
    {
        "line": 15,
        "fullcodeline": "sr->request_body = body;"
    },
    {
        "line": 47,
        "fullcodeline": "sr->method_name = ngx_http_lua_get_method;"
    },
    {
        "line": 51,
        "fullcodeline": "sr->method_name = ngx_http_lua_post_method;"
    },
    {
        "line": 55,
        "fullcodeline": "sr->method_name = ngx_http_lua_put_method;"
    },
    {
        "line": 59,
        "fullcodeline": "sr->method_name = ngx_http_lua_head_method;"
    },
    {
        "line": 63,
        "fullcodeline": "sr->method_name = ngx_http_lua_delete_method;"
    },
    {
        "line": 67,
        "fullcodeline": "sr->method_name = ngx_http_lua_options_method;"
    },
    {
        "line": 71,
        "fullcodeline": "sr->method_name = ngx_http_lua_mkcol_method;"
    },
    {
        "line": 75,
        "fullcodeline": "sr->method_name = ngx_http_lua_copy_method;"
    },
    {
        "line": 79,
        "fullcodeline": "sr->method_name = ngx_http_lua_move_method;"
    },
    {
        "line": 83,
        "fullcodeline": "sr->method_name = ngx_http_lua_propfind_method;"
    },
    {
        "line": 87,
        "fullcodeline": "sr->method_name = ngx_http_lua_proppatch_method;"
    },
    {
        "line": 91,
        "fullcodeline": "sr->method_name = ngx_http_lua_lock_method;"
    },
    {
        "line": 95,
        "fullcodeline": "sr->method_name = ngx_http_lua_unlock_method;"
    },
    {
        "line": 99,
        "fullcodeline": "sr->method_name = ngx_http_lua_patch_method;"
    },
    {
        "line": 103,
        "fullcodeline": "sr->method_name = ngx_http_lua_trace_method;"
    },
    {
        "line": 107,
        "fullcodeline": "ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,"
    },
    {
        "line": 115,
        "fullcodeline": "cmcf = ngx_http_get_module_main_conf(sr, ngx_http_core_module);"
    },
    {
        "line": 117,
        "fullcodeline": "size = cmcf->variables.nelts * sizeof(ngx_http_variable_value_t);"
    },
    {
        "line": 108,
        "fullcodeline": "\"unsupported HTTP method: %u\", (unsigned) method);"
    },
    {
        "line": 119,
        "fullcodeline": "if (vars_action & NGX_HTTP_LUA_COPY_ALL_VARS) {"
    },
    {
        "line": 17,
        "fullcodeline": "} else if (!always_forward_body"
    },
    {
        "line": 121,
        "fullcodeline": "sr->variables = ngx_palloc(sr->pool, size);"
    },
    {
        "line": 126,
        "fullcodeline": "ngx_memcpy(sr->variables, r->variables, size);"
    },
    {
        "line": 20,
        "fullcodeline": "&& r->headers_in.content_length_n > 0)"
    },
    {
        "line": 22,
        "fullcodeline": "sr->request_body = NULL;"
    },
    {
        "line": 122,
        "fullcodeline": "if (sr->variables == NULL) {"
    },
    {
        "line": 132,
        "fullcodeline": "sr->variables = ngx_pcalloc(sr->pool, size);"
    },
    {
        "line": 19,
        "fullcodeline": "&& method != NGX_HTTP_POST"
    },
    {
        "line": 133,
        "fullcodeline": "if (sr->variables == NULL) {"
    },
    {
        "line": 18,
        "fullcodeline": "&& method != NGX_HTTP_PUT"
    },
    {
        "line": 29,
        "fullcodeline": "if (sr->request_body && sr->request_body->temp_file) {"
    },
    {
        "line": 26,
        "fullcodeline": "pr_not_chunked = 1;"
    },
    {
        "line": 33,
        "fullcodeline": "if (ngx_http_lua_copy_in_file_request_body(sr) != NGX_OK) {"
    }
]