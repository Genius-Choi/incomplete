[
    {
        "line": 13,
        "fullcodeline": "u_char                  buf[sizeof(\"Mon, 28 Sep 1970 06:00:00 GMT\") - 1];"
    },
    {
        "line": 15,
        "fullcodeline": "ngx_log_debug0(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,"
    },
    {
        "line": 18,
        "fullcodeline": "coctx = ctx->cur_co_ctx;"
    },
    {
        "line": 19,
        "fullcodeline": "co = coctx->co;"
    },
    {
        "line": 21,
        "fullcodeline": "for (index = 0; index < coctx->nsubreqs; index++) {"
    },
    {
        "line": 29,
        "fullcodeline": "lua_createtable(co, 0 /* narr */, 4 /* nrec */);"
    },
    {
        "line": 32,
        "fullcodeline": "lua_pushinteger(co, coctx->sr_statuses[index]);"
    },
    {
        "line": 33,
        "fullcodeline": "lua_setfield(co, -2, \"status\");"
    },
    {
        "line": 49,
        "fullcodeline": "body_str = &coctx->sr_bodies[index];"
    },
    {
        "line": 51,
        "fullcodeline": "lua_pushlstring(co, (char *) body_str->data, body_str->len);"
    },
    {
        "line": 52,
        "fullcodeline": "lua_setfield(co, -2, \"body\");"
    },
    {
        "line": 61,
        "fullcodeline": "sr_headers = coctx->sr_headers[index];"
    },
    {
        "line": 63,
        "fullcodeline": "part = &sr_headers->headers.part;"
    },
    {
        "line": 64,
        "fullcodeline": "count = part->nelts;"
    },
    {
        "line": 70,
        "fullcodeline": "lua_createtable(co, 0, count + 5); /* res.header */"
    },
    {
        "line": 74,
        "fullcodeline": "part = &sr_headers->headers.part;"
    },
    {
        "line": 199,
        "fullcodeline": "lua_setfield(co, -2, \"header\");"
    },
    {
        "line": 38,
        "fullcodeline": "if (coctx->sr_flags[index] & NGX_HTTP_LUA_SUBREQ_TRUNCATED) {"
    },
    {
        "line": 77,
        "fullcodeline": "for (i = 0; /* void */; i++) {"
    },
    {
        "line": 170,
        "fullcodeline": "if (sr_headers->location && sr_headers->location->value.len) {"
    },
    {
        "line": 178,
        "fullcodeline": "if (sr_headers->last_modified_time != -1) {"
    },
    {
        "line": 39,
        "fullcodeline": "lua_pushboolean(co, 1);"
    },
    {
        "line": 40,
        "fullcodeline": "lua_setfield(co, -2, \"truncated\");"
    },
    {
        "line": 56,
        "fullcodeline": "ngx_pfree(r->pool, body_str->data);"
    },
    {
        "line": 66,
        "fullcodeline": "part = part->next;"
    },
    {
        "line": 67,
        "fullcodeline": "count += part->nelts;"
    },
    {
        "line": 89,
        "fullcodeline": "dd(\"checking sr header %.*s\", (int) header[i].key.len,"
    },
    {
        "line": 100,
        "fullcodeline": "dd(\"pushing sr header %.*s\", (int) header[i].key.len,"
    },
    {
        "line": 103,
        "fullcodeline": "lua_pushlstring(co, (char *) header[i].key.data,"
    },
    {
        "line": 105,
        "fullcodeline": "lua_pushvalue(co, -1); /* stack: table key key */"
    },
    {
        "line": 108,
        "fullcodeline": "lua_rawget(co, -3); /* stack: table key value */"
    },
    {
        "line": 151,
        "fullcodeline": "lua_pushliteral(co, \"Content-Type\"); /* header key */"
    },
    {
        "line": 152,
        "fullcodeline": "lua_pushlstring(co, (char *) sr_headers->content_type.data,"
    },
    {
        "line": 154,
        "fullcodeline": "lua_rawset(co, -3); /* head */"
    },
    {
        "line": 157,
        "fullcodeline": "if (sr_headers->content_length == NULL"
    },
    {
        "line": 158,
        "fullcodeline": "&& sr_headers->content_length_n >= 0)"
    },
    {
        "line": 160,
        "fullcodeline": "lua_pushliteral(co, \"Content-Length\"); /* header key */"
    },
    {
        "line": 162,
        "fullcodeline": "lua_pushnumber(co, (lua_Number) sr_headers->content_length_n);"
    },
    {
        "line": 165,
        "fullcodeline": "lua_rawset(co, -3); /* head */"
    },
    {
        "line": 171,
        "fullcodeline": "lua_pushliteral(co, \"Location\"); /* header key */"
    },
    {
        "line": 172,
        "fullcodeline": "lua_pushlstring(co, (char *) sr_headers->location->value.data,"
    },
    {
        "line": 175,
        "fullcodeline": "lua_rawset(co, -3); /* head */"
    },
    {
        "line": 189,
        "fullcodeline": "if (sr_headers->last_modified == NULL"
    },
    {
        "line": 190,
        "fullcodeline": "&& sr_headers->last_modified_time != -1)"
    },
    {
        "line": 194,
        "fullcodeline": "lua_pushliteral(co, \"Last-Modified\"); /* header key */"
    },
    {
        "line": 195,
        "fullcodeline": "lua_pushlstring(co, (char *) buf, sizeof(buf)); /* head key value */"
    },
    {
        "line": 196,
        "fullcodeline": "lua_rawset(co, -3); /* head */"
    },
    {
        "line": 43,
        "fullcodeline": "lua_pushboolean(co, 0);"
    },
    {
        "line": 44,
        "fullcodeline": "lua_setfield(co, -2, \"truncated\");"
    },
    {
        "line": 79,
        "fullcodeline": "if (i >= part->nelts) {"
    },
    {
        "line": 110,
        "fullcodeline": "if (lua_isnil(co, -1)) {"
    },
    {
        "line": 192,
        "fullcodeline": "(void) ngx_http_time(buf, sr_headers->last_modified_time);"
    },
    {
        "line": 84,
        "fullcodeline": "part = part->next;"
    },
    {
        "line": 86,
        "fullcodeline": "i = 0;"
    },
    {
        "line": 111,
        "fullcodeline": "lua_pop(co, 1); /* stack: table key */"
    },
    {
        "line": 113,
        "fullcodeline": "lua_pushlstring(co, (char *) header[i].value.data,"
    },
    {
        "line": 117,
        "fullcodeline": "lua_rawset(co, -3); /* stack: table */"
    },
    {
        "line": 179,
        "fullcodeline": "if (sr_headers->status != NGX_HTTP_OK"
    },
    {
        "line": 182,
        "fullcodeline": "&& sr_headers->status != NGX_HTTP_NO_CONTENT)"
    },
    {
        "line": 184,
        "fullcodeline": "sr_headers->last_modified_time = -1;"
    },
    {
        "line": 185,
        "fullcodeline": "sr_headers->last_modified = NULL;"
    },
    {
        "line": 80,
        "fullcodeline": "if (part->next == NULL) {"
    },
    {
        "line": 181,
        "fullcodeline": "&& sr_headers->status != NGX_HTTP_NOT_MODIFIED"
    },
    {
        "line": 180,
        "fullcodeline": "&& sr_headers->status != NGX_HTTP_PARTIAL_CONTENT"
    },
    {
        "line": 121,
        "fullcodeline": "if (!lua_istable(co, -1)) { /* already inserted one value */"
    },
    {
        "line": 122,
        "fullcodeline": "lua_createtable(co, 4, 0);"
    },
    {
        "line": 125,
        "fullcodeline": "lua_insert(co, -2); /* stack: table key table value */"
    },
    {
        "line": 126,
        "fullcodeline": "lua_rawseti(co, -2, 1); /* stack: table key table */"
    },
    {
        "line": 128,
        "fullcodeline": "lua_pushlstring(co, (char *) header[i].value.data,"
    },
    {
        "line": 132,
        "fullcodeline": "lua_rawseti(co, -2, lua_objlen(co, -2) + 1);"
    },
    {
        "line": 135,
        "fullcodeline": "lua_rawset(co, -3); /* stack: table */"
    },
    {
        "line": 138,
        "fullcodeline": "lua_pushlstring(co, (char *) header[i].value.data,"
    },
    {
        "line": 142,
        "fullcodeline": "lua_rawseti(co, -2, lua_objlen(co, -2) + 1);"
    },
    {
        "line": 145,
        "fullcodeline": "lua_pop(co, 2); /* stack: table */"
    }
]