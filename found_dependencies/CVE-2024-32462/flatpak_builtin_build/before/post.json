[
    {
        "line": 3,
        "fullcodeline": "g_autoptr(GOptionContext) context = NULL;"
    },
    {
        "line": 4,
        "fullcodeline": "g_autoptr(FlatpakDeploy) runtime_deploy = NULL;"
    },
    {
        "line": 5,
        "fullcodeline": "g_autoptr(GBytes) runtime_deploy_data = NULL;"
    },
    {
        "line": 6,
        "fullcodeline": "g_autoptr(FlatpakDeploy) extensionof_deploy = NULL;"
    },
    {
        "line": 7,
        "fullcodeline": "g_autoptr(GFile) var = NULL;"
    },
    {
        "line": 8,
        "fullcodeline": "g_autoptr(GFile) var_tmp = NULL;"
    },
    {
        "line": 9,
        "fullcodeline": "g_autoptr(GFile) var_lib = NULL;"
    },
    {
        "line": 10,
        "fullcodeline": "g_autoptr(GFile) usr = NULL;"
    },
    {
        "line": 11,
        "fullcodeline": "g_autoptr(GFile) res_deploy = NULL;"
    },
    {
        "line": 12,
        "fullcodeline": "g_autoptr(GFile) res_files = NULL;"
    },
    {
        "line": 13,
        "fullcodeline": "g_autoptr(GFile) app_files = NULL;"
    },
    {
        "line": 14,
        "fullcodeline": "gboolean app_files_ro = FALSE;"
    },
    {
        "line": 15,
        "fullcodeline": "g_autoptr(GFile) runtime_files = NULL;"
    },
    {
        "line": 16,
        "fullcodeline": "g_autoptr(GFile) metadata = NULL;"
    },
    {
        "line": 17,
        "fullcodeline": "g_autofree char *metadata_contents = NULL;"
    },
    {
        "line": 18,
        "fullcodeline": "g_autofree char *runtime_pref = NULL;"
    },
    {
        "line": 19,
        "fullcodeline": "g_autoptr(FlatpakDecomposed) runtime_ref = NULL;"
    },
    {
        "line": 20,
        "fullcodeline": "g_autofree char *extensionof_ref = NULL;"
    },
    {
        "line": 21,
        "fullcodeline": "g_autofree char *extensionof_tag = NULL;"
    },
    {
        "line": 22,
        "fullcodeline": "g_autofree char *extension_point = NULL;"
    },
    {
        "line": 23,
        "fullcodeline": "g_autofree char *extension_tmpfs_point = NULL;"
    },
    {
        "line": 24,
        "fullcodeline": "g_autoptr(GKeyFile) metakey = NULL;"
    },
    {
        "line": 25,
        "fullcodeline": "g_autoptr(GKeyFile) runtime_metakey = NULL;"
    },
    {
        "line": 26,
        "fullcodeline": "g_autoptr(FlatpakBwrap) bwrap = NULL;"
    },
    {
        "line": 27,
        "fullcodeline": "g_auto(GStrv) minimal_envp = NULL;"
    },
    {
        "line": 29,
        "fullcodeline": "const char *directory = NULL;"
    },
    {
        "line": 30,
        "fullcodeline": "const char *command = \"/bin/sh\";"
    },
    {
        "line": 31,
        "fullcodeline": "g_autofree char *id = NULL;"
    },
    {
        "line": 34,
        "fullcodeline": "g_autoptr(FlatpakContext) arg_context = NULL;"
    },
    {
        "line": 35,
        "fullcodeline": "g_autoptr(FlatpakContext) app_context = NULL;"
    },
    {
        "line": 38,
        "fullcodeline": "const char *group = NULL;"
    },
    {
        "line": 39,
        "fullcodeline": "const char *runtime_key = NULL;"
    },
    {
        "line": 40,
        "fullcodeline": "g_autofree char *dest = NULL;"
    },
    {
        "line": 41,
        "fullcodeline": "gboolean is_app = FALSE;"
    },
    {
        "line": 42,
        "fullcodeline": "gboolean is_extension = FALSE;"
    },
    {
        "line": 43,
        "fullcodeline": "gboolean is_app_extension = FALSE;"
    },
    {
        "line": 44,
        "fullcodeline": "g_autofree char *arch = NULL;"
    },
    {
        "line": 45,
        "fullcodeline": "g_autofree char *app_info_path = NULL;"
    },
    {
        "line": 46,
        "fullcodeline": "g_autofree char *app_extensions = NULL;"
    },
    {
        "line": 47,
        "fullcodeline": "g_autofree char *app_ld_path = NULL;"
    },
    {
        "line": 48,
        "fullcodeline": "g_autofree char *runtime_extensions = NULL;"
    },
    {
        "line": 49,
        "fullcodeline": "g_autofree char *runtime_ld_path = NULL;"
    },
    {
        "line": 50,
        "fullcodeline": "g_autofree char *instance_id_host_dir = NULL;"
    },
    {
        "line": 51,
        "fullcodeline": "char pid_str[64];"
    },
    {
        "line": 52,
        "fullcodeline": "g_autofree char *pid_path = NULL;"
    },
    {
        "line": 53,
        "fullcodeline": "g_autoptr(GFile) app_id_dir = NULL;"
    },
    {
        "line": 55,
        "fullcodeline": "context = g_option_context_new (_(\"DIRECTORY [COMMAND [ARGUMENT\u2026]] - Build in directory\"));"
    },
    {
        "line": 56,
        "fullcodeline": "g_option_context_set_translation_domain (context, GETTEXT_PACKAGE);"
    },
    {
        "line": 58,
        "fullcodeline": "rest_argc = 0;"
    },
    {
        "line": 71,
        "fullcodeline": "arg_context = flatpak_context_new ();"
    },
    {
        "line": 72,
        "fullcodeline": "g_option_context_add_group (context, flatpak_context_get_options (arg_context));"
    },
    {
        "line": 80,
        "fullcodeline": "directory = argv[rest_argv_start];"
    },
    {
        "line": 84,
        "fullcodeline": "res_deploy = g_file_new_for_commandline_arg (directory);"
    },
    {
        "line": 85,
        "fullcodeline": "metadata = g_file_get_child (res_deploy, opt_metadata ? opt_metadata : \"metadata\");"
    },
    {
        "line": 94,
        "fullcodeline": "metakey = g_key_file_new ();"
    },
    {
        "line": 110,
        "fullcodeline": "extensionof_ref = g_key_file_get_string (metakey,"
    },
    {
        "line": 120,
        "fullcodeline": "extensionof_tag = g_key_file_get_string (metakey,"
    },
    {
        "line": 124,
        "fullcodeline": "id = g_key_file_get_string (metakey, group, FLATPAK_METADATA_KEY_NAME, error);"
    },
    {
        "line": 133,
        "fullcodeline": "runtime_pref = g_key_file_get_string (metakey, group, runtime_key, error);"
    },
    {
        "line": 137,
        "fullcodeline": "runtime_ref = flatpak_decomposed_new_from_pref (FLATPAK_KINDS_RUNTIME, runtime_pref, error);"
    },
    {
        "line": 141,
        "fullcodeline": "arch = flatpak_decomposed_dup_arch (runtime_ref);"
    },
    {
        "line": 143,
        "fullcodeline": "custom_usr = FALSE;"
    },
    {
        "line": 144,
        "fullcodeline": "usr = g_file_get_child (res_deploy,  opt_sdk_dir ? opt_sdk_dir : \"usr\");"
    },
    {
        "line": 165,
        "fullcodeline": "var = g_file_get_child (res_deploy, \"var\");"
    },
    {
        "line": 166,
        "fullcodeline": "var_tmp = g_file_get_child (var, \"tmp\");"
    },
    {
        "line": 169,
        "fullcodeline": "var_lib = g_file_get_child (var, \"lib\");"
    },
    {
        "line": 173,
        "fullcodeline": "res_files = g_file_get_child (res_deploy, \"files\");"
    },
    {
        "line": 269,
        "fullcodeline": "app_context = flatpak_app_compute_permissions (metakey,"
    },
    {
        "line": 275,
        "fullcodeline": "flatpak_context_allow_host_fs (app_context);"
    },
    {
        "line": 276,
        "fullcodeline": "flatpak_context_merge (app_context, arg_context);"
    },
    {
        "line": 278,
        "fullcodeline": "minimal_envp = flatpak_run_get_minimal_env (TRUE, FALSE);"
    },
    {
        "line": 279,
        "fullcodeline": "bwrap = flatpak_bwrap_new (minimal_envp);"
    },
    {
        "line": 280,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap, flatpak_get_bwrap (), NULL);"
    },
    {
        "line": 282,
        "fullcodeline": "run_flags ="
    },
    {
        "line": 290,
        "fullcodeline": "run_flags |= flatpak_context_get_run_flags (app_context);"
    },
    {
        "line": 306,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_NO_A11Y_BUS_PROXY;"
    },
    {
        "line": 312,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 344,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 355,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 358,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 362,
        "fullcodeline": "flatpak_run_apply_env_vars (bwrap, app_context);"
    },
    {
        "line": 383,
        "fullcodeline": "flatpak_run_extend_ld_path (bwrap, app_ld_path, runtime_ld_path);"
    },
    {
        "line": 431,
        "fullcodeline": "flatpak_bwrap_populate_runtime_dir (bwrap, NULL);"
    },
    {
        "line": 433,
        "fullcodeline": "flatpak_bwrap_envp_to_args (bwrap);"
    },
    {
        "line": 438,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap, command, NULL);"
    },
    {
        "line": 439,
        "fullcodeline": "flatpak_bwrap_append_argsv (bwrap,"
    },
    {
        "line": 443,
        "fullcodeline": "g_ptr_array_add (bwrap->argv, NULL);"
    },
    {
        "line": 445,
        "fullcodeline": "g_snprintf (pid_str, sizeof (pid_str), \"%d\", getpid ());"
    },
    {
        "line": 446,
        "fullcodeline": "pid_path = g_build_filename (instance_id_host_dir, \"pid\", NULL);"
    },
    {
        "line": 447,
        "fullcodeline": "g_file_set_contents (pid_path, pid_str, -1, NULL);"
    },
    {
        "line": 450,
        "fullcodeline": "child_setup (bwrap->fds);"
    },
    {
        "line": 59,
        "fullcodeline": "for (i = 1; i < argc; i++)"
    },
    {
        "line": 74,
        "fullcodeline": "if (!flatpak_option_context_parse (context, options, &argc, &argv, FLATPAK_BUILTIN_FLAG_NO_DIR, NULL, cancellable, error))"
    },
    {
        "line": 77,
        "fullcodeline": "if (rest_argc == 0)"
    },
    {
        "line": 81,
        "fullcodeline": "if (rest_argc >= 2)"
    },
    {
        "line": 87,
        "fullcodeline": "if (!g_file_query_exists (res_deploy, NULL) ||"
    },
    {
        "line": 91,
        "fullcodeline": "if (!g_file_load_contents (metadata, cancellable, &metadata_contents, &metadata_size, NULL, error))"
    },
    {
        "line": 95,
        "fullcodeline": "if (!g_key_file_load_from_data (metakey, metadata_contents, metadata_size, 0, error))"
    },
    {
        "line": 98,
        "fullcodeline": "if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_APPLICATION))"
    },
    {
        "line": 113,
        "fullcodeline": "if (extensionof_ref != NULL)"
    },
    {
        "line": 125,
        "fullcodeline": "if (id == NULL)"
    },
    {
        "line": 134,
        "fullcodeline": "if (runtime_pref == NULL)"
    },
    {
        "line": 138,
        "fullcodeline": "if (runtime_ref == NULL)"
    },
    {
        "line": 145,
        "fullcodeline": "if (g_file_query_exists (usr, cancellable))"
    },
    {
        "line": 167,
        "fullcodeline": "if (!flatpak_mkdir_p (var_tmp, cancellable, error))"
    },
    {
        "line": 170,
        "fullcodeline": "if (!flatpak_mkdir_p (var_lib, cancellable, error))"
    },
    {
        "line": 272,
        "fullcodeline": "if (app_context == NULL)"
    },
    {
        "line": 283,
        "fullcodeline": "FLATPAK_RUN_FLAG_DEVEL | FLATPAK_RUN_FLAG_MULTIARCH | FLATPAK_RUN_FLAG_NO_SESSION_HELPER |"
    },
    {
        "line": 293,
        "fullcodeline": "if (!flatpak_context_get_needs_session_bus_proxy (arg_context))"
    },
    {
        "line": 296,
        "fullcodeline": "if (!flatpak_context_get_needs_system_bus_proxy (arg_context))"
    },
    {
        "line": 308,
        "fullcodeline": "if (!flatpak_run_setup_base_argv (bwrap, runtime_files, app_id_dir, arch,"
    },
    {
        "line": 313,
        "fullcodeline": "(custom_usr && !opt_readonly)  ? \"--bind\" : \"--ro-bind\", flatpak_file_get_path_cached (runtime_files), \"/usr\","
    },
    {
        "line": 316,
        "fullcodeline": "if (!custom_usr)"
    },
    {
        "line": 356,
        "fullcodeline": "\"--bind\", flatpak_file_get_path_cached (var_lib), \"/var/lib\","
    },
    {
        "line": 359,
        "fullcodeline": "\"--bind\", flatpak_file_get_path_cached (var_tmp), \"/var/tmp\","
    },
    {
        "line": 377,
        "fullcodeline": "if (!custom_usr &&"
    },
    {
        "line": 391,
        "fullcodeline": "if (!flatpak_run_add_app_info_args (bwrap,"
    },
    {
        "line": 403,
        "fullcodeline": "if (!flatpak_run_add_environment_args (bwrap, app_info_path, run_flags, id,"
    },
    {
        "line": 408,
        "fullcodeline": "for (i = 0; opt_bind_mounts != NULL && opt_bind_mounts[i] != NULL; i++)"
    },
    {
        "line": 424,
        "fullcodeline": "if (opt_build_dir != NULL)"
    },
    {
        "line": 435,
        "fullcodeline": "if (!flatpak_bwrap_bundle_args (bwrap, 1, -1, FALSE, error))"
    },
    {
        "line": 441,
        "fullcodeline": "rest_argc - 2);"
    },
    {
        "line": 451,
        "fullcodeline": "if (execvpe (flatpak_get_bwrap (), (char **) bwrap->argv->pdata, bwrap->envp) == -1)"
    },
    {
        "line": 82,
        "fullcodeline": "command = argv[rest_argv_start + 1];"
    },
    {
        "line": 88,
        "fullcodeline": "!g_file_query_exists (metadata, NULL))"
    },
    {
        "line": 100,
        "fullcodeline": "group = FLATPAK_METADATA_GROUP_APPLICATION;"
    },
    {
        "line": 101,
        "fullcodeline": "is_app = TRUE;"
    },
    {
        "line": 115,
        "fullcodeline": "is_extension = TRUE;"
    },
    {
        "line": 129,
        "fullcodeline": "runtime_key = FLATPAK_METADATA_KEY_RUNTIME;"
    },
    {
        "line": 147,
        "fullcodeline": "custom_usr = TRUE;"
    },
    {
        "line": 148,
        "fullcodeline": "runtime_files = g_object_ref (usr);"
    },
    {
        "line": 177,
        "fullcodeline": "app_files = g_object_ref (res_files);"
    },
    {
        "line": 286,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_DIE_WITH_PARENT;"
    },
    {
        "line": 288,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_WRITABLE_ETC;"
    },
    {
        "line": 294,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_NO_SESSION_BUS_PROXY;"
    },
    {
        "line": 297,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_NO_SYSTEM_BUS_PROXY;"
    },
    {
        "line": 300,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_LOG_SESSION_BUS;"
    },
    {
        "line": 303,
        "fullcodeline": "run_flags |= FLATPAK_RUN_FLAG_LOG_SYSTEM_BUS;"
    },
    {
        "line": 317,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 322,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 331,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 338,
        "fullcodeline": "dest = g_strdup (extension_point);"
    },
    {
        "line": 368,
        "fullcodeline": "g_autoptr(FlatpakDecomposed) fake_ref ="
    },
    {
        "line": 378,
        "fullcodeline": "!flatpak_run_add_extension_args (bwrap, runtime_metakey, runtime_ref, FALSE, \"/usr\","
    },
    {
        "line": 387,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 410,
        "fullcodeline": "char *split = strchr (opt_bind_mounts[i], '=');"
    },
    {
        "line": 418,
        "fullcodeline": "*split++ = 0;"
    },
    {
        "line": 419,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 426,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 453,
        "fullcodeline": "g_set_error (error, G_IO_ERROR, g_io_error_from_errno (errno),"
    },
    {
        "line": 62,
        "fullcodeline": "if (argv[i][0] != '-')"
    },
    {
        "line": 78,
        "fullcodeline": "return usage_error (context, _(\"DIRECTORY must be specified\"), error);"
    },
    {
        "line": 89,
        "fullcodeline": "return flatpak_fail (error, _(\"Build directory %s not initialized, use flatpak build-init\"), directory);"
    },
    {
        "line": 116,
        "fullcodeline": "if (g_str_has_prefix (extensionof_ref, \"app/\"))"
    },
    {
        "line": 131,
        "fullcodeline": "runtime_key = FLATPAK_METADATA_KEY_SDK;"
    },
    {
        "line": 152,
        "fullcodeline": "runtime_deploy = flatpak_find_deploy_for_ref (flatpak_decomposed_get_ref (runtime_ref), NULL, NULL, cancellable, error);"
    },
    {
        "line": 156,
        "fullcodeline": "runtime_deploy_data = flatpak_deploy_get_deploy_data (runtime_deploy, FLATPAK_DEPLOY_VERSION_ANY, cancellable, error);"
    },
    {
        "line": 160,
        "fullcodeline": "runtime_metakey = flatpak_deploy_get_metadata (runtime_deploy);"
    },
    {
        "line": 162,
        "fullcodeline": "runtime_files = flatpak_deploy_get_files (runtime_deploy);"
    },
    {
        "line": 323,
        "fullcodeline": "(app_files_ro || opt_readonly) ? \"--ro-bind\" : \"--bind\", flatpak_file_get_path_cached (app_files), \"/app\","
    },
    {
        "line": 326,
        "fullcodeline": "flatpak_bwrap_add_args (bwrap,"
    },
    {
        "line": 369,
        "fullcodeline": "flatpak_decomposed_new_from_parts (FLATPAK_KINDS_APP, id, arch, \"nobranch\", NULL);"
    },
    {
        "line": 370,
        "fullcodeline": "if (fake_ref != NULL &&"
    },
    {
        "line": 388,
        "fullcodeline": "\"--bind\", flatpak_file_get_path_cached (res_files), extension_point,"
    },
    {
        "line": 398,
        "fullcodeline": "&app_info_path, -1,"
    },
    {
        "line": 404,
        "fullcodeline": "app_context, app_id_dir, NULL, -1,"
    },
    {
        "line": 411,
        "fullcodeline": "if (split == NULL)"
    },
    {
        "line": 440,
        "fullcodeline": "&argv[rest_argv_start + 2],"
    },
    {
        "line": 454,
        "fullcodeline": "_(\"Unable to start app\"));"
    },
    {
        "line": 64,
        "fullcodeline": "rest_argv_start = i;"
    },
    {
        "line": 65,
        "fullcodeline": "rest_argc = argc - i;"
    },
    {
        "line": 66,
        "fullcodeline": "argc = i;"
    },
    {
        "line": 103,
        "fullcodeline": "else if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_RUNTIME))"
    },
    {
        "line": 117,
        "fullcodeline": "is_app_extension = TRUE;"
    },
    {
        "line": 153,
        "fullcodeline": "if (runtime_deploy == NULL)"
    },
    {
        "line": 157,
        "fullcodeline": "if (runtime_deploy_data == NULL)"
    },
    {
        "line": 180,
        "fullcodeline": "app_id_dir = flatpak_get_data_dir (id);"
    },
    {
        "line": 371,
        "fullcodeline": "!flatpak_run_add_extension_args (bwrap, metakey, fake_ref, FALSE, \"/app\","
    },
    {
        "line": 413,
        "fullcodeline": "g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_ARGUMENT,"
    },
    {
        "line": 105,
        "fullcodeline": "group = FLATPAK_METADATA_GROUP_RUNTIME;"
    },
    {
        "line": 181,
        "fullcodeline": "if (!flatpak_ensure_data_dir (app_id_dir, cancellable, NULL))"
    },
    {
        "line": 187,
        "fullcodeline": "g_autoptr(GKeyFile) x_metakey = NULL;"
    },
    {
        "line": 188,
        "fullcodeline": "g_autofree char *x_group = NULL;"
    },
    {
        "line": 189,
        "fullcodeline": "g_autofree char *x_dir = NULL;"
    },
    {
        "line": 190,
        "fullcodeline": "g_autofree char *x_subdir_suffix = NULL;"
    },
    {
        "line": 191,
        "fullcodeline": "char *x_subdir = NULL;"
    },
    {
        "line": 192,
        "fullcodeline": "g_autofree char *bare_extension_point = NULL;"
    },
    {
        "line": 194,
        "fullcodeline": "extensionof_deploy = flatpak_find_deploy_for_ref (extensionof_ref, NULL, NULL, cancellable, error);"
    },
    {
        "line": 198,
        "fullcodeline": "x_metakey = flatpak_deploy_get_metadata (extensionof_deploy);"
    },
    {
        "line": 242,
        "fullcodeline": "x_dir = g_key_file_get_string (x_metakey, x_group,"
    },
    {
        "line": 247,
        "fullcodeline": "x_subdir_suffix = g_key_file_get_string (x_metakey, x_group,"
    },
    {
        "line": 266,
        "fullcodeline": "extension_point = g_build_filename (bare_extension_point, x_subdir_suffix, NULL);"
    },
    {
        "line": 340,
        "fullcodeline": "dest = g_strdup (\"/app\");"
    },
    {
        "line": 414,
        "fullcodeline": "_(\"Missing '=' in bind mount option '%s'\"), opt_bind_mounts[i]);"
    },
    {
        "line": 182,
        "fullcodeline": "g_clear_object (&app_id_dir);"
    },
    {
        "line": 195,
        "fullcodeline": "if (extensionof_deploy == NULL)"
    },
    {
        "line": 209,
        "fullcodeline": "if (!find_matching_extension_group_in_metakey (x_metakey,"
    },
    {
        "line": 216,
        "fullcodeline": "if (x_group == NULL)"
    },
    {
        "line": 244,
        "fullcodeline": "if (x_dir == NULL)"
    },
    {
        "line": 342,
        "fullcodeline": "dest = g_strdup (\"/usr\");"
    },
    {
        "line": 108,
        "fullcodeline": "return flatpak_fail (error, _(\"metadata invalid, not application or runtime\"));"
    },
    {
        "line": 219,
        "fullcodeline": "char *last_dot = strrchr (id, '.');"
    },
    {
        "line": 253,
        "fullcodeline": "app_files = flatpak_deploy_get_files (extensionof_deploy);"
    },
    {
        "line": 254,
        "fullcodeline": "app_files_ro = TRUE;"
    },
    {
        "line": 257,
        "fullcodeline": "bare_extension_point = g_build_filename (\"/app\", x_dir, x_subdir, NULL);"
    },
    {
        "line": 221,
        "fullcodeline": "if (last_dot != NULL)"
    },
    {
        "line": 238,
        "fullcodeline": "if (x_subdir == NULL)"
    },
    {
        "line": 255,
        "fullcodeline": "if (x_subdir != NULL)"
    },
    {
        "line": 263,
        "fullcodeline": "bare_extension_point = g_build_filename (\"/usr\", x_dir, x_subdir, NULL);"
    },
    {
        "line": 223,
        "fullcodeline": "char *parent_id = g_strndup (id, last_dot - id);"
    },
    {
        "line": 256,
        "fullcodeline": "extension_tmpfs_point = g_build_filename (\"/app\", x_dir, NULL);"
    },
    {
        "line": 261,
        "fullcodeline": "if (x_subdir != NULL)"
    },
    {
        "line": 224,
        "fullcodeline": "if (!find_matching_extension_group_in_metakey (x_metakey,"
    },
    {
        "line": 231,
        "fullcodeline": "if (x_group != NULL &&"
    },
    {
        "line": 239,
        "fullcodeline": "return flatpak_fail (error, _(\"No extension point matching %s in %s\"), id, extensionof_ref);"
    },
    {
        "line": 262,
        "fullcodeline": "extension_tmpfs_point = g_build_filename (\"/usr\", x_dir, NULL);"
    },
    {
        "line": 232,
        "fullcodeline": "g_key_file_get_boolean (x_metakey, x_group,"
    },
    {
        "line": 235,
        "fullcodeline": "x_subdir = last_dot + 1;"
    }
]