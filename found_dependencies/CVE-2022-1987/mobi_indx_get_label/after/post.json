[
    {
        "line": 11,
        "fullcodeline": "const unsigned char replacement = 0x3f;"
    },
    {
        "line": 12,
        "fullcodeline": "size_t output_length = 0;"
    },
    {
        "line": 13,
        "fullcodeline": "size_t i = 0;"
    },
    {
        "line": 36,
        "fullcodeline": "*output = '\\0';"
    },
    {
        "line": 2,
        "fullcodeline": "if (!output) {"
    },
    {
        "line": 6,
        "fullcodeline": "if (buf->offset + length > buf->maxlen) {"
    },
    {
        "line": 14,
        "fullcodeline": "while (i < length && output_length < INDX_LABEL_SIZEMAX) {"
    },
    {
        "line": 3,
        "fullcodeline": "buf->error = MOBI_PARAM_ERR;"
    },
    {
        "line": 7,
        "fullcodeline": "debug_print(\"%s\", \"End of buffer\\n\");"
    },
    {
        "line": 8,
        "fullcodeline": "buf->error = MOBI_BUFFER_END;"
    },
    {
        "line": 15,
        "fullcodeline": "unsigned char c = mobi_buffer_get8(buf);"
    },
    {
        "line": 16,
        "fullcodeline": "i++;"
    },
    {
        "line": 33,
        "fullcodeline": "*output++ = c;"
    },
    {
        "line": 34,
        "fullcodeline": "output_length++;"
    },
    {
        "line": 17,
        "fullcodeline": "if (c == 0) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (c <= 5 && has_ligatures) {"
    },
    {
        "line": 19,
        "fullcodeline": "debug_print(\"Invalid character: %u\\n\", c);"
    },
    {
        "line": 20,
        "fullcodeline": "c = replacement;"
    },
    {
        "line": 23,
        "fullcodeline": "unsigned char c2 = mobi_buffer_get8(buf);"
    },
    {
        "line": 24,
        "fullcodeline": "c = mobi_ligature_to_cp1252(c, c2);"
    },
    {
        "line": 25,
        "fullcodeline": "if (c == 0) {"
    },
    {
        "line": 26,
        "fullcodeline": "debug_print(\"Invalid ligature sequence%s\", \"\\n\");"
    },
    {
        "line": 27,
        "fullcodeline": "mobi_buffer_seek(buf, -1);"
    },
    {
        "line": 28,
        "fullcodeline": "c = replacement;"
    },
    {
        "line": 30,
        "fullcodeline": "i++;"
    }
]