[
    {
        "line": 12,
        "fullcodeline": "transport->layer = TRANSPORT_LAYER_TLS;"
    },
    {
        "line": 23,
        "fullcodeline": "settings = transport->settings;"
    },
    {
        "line": 24,
        "fullcodeline": "instance = (freerdp*) settings->instance;"
    },
    {
        "line": 6,
        "fullcodeline": "if (transport->TlsIn == NULL)"
    },
    {
        "line": 9,
        "fullcodeline": "if (transport->TlsOut == NULL)"
    },
    {
        "line": 15,
        "fullcodeline": "if (tls_accept(transport->TlsIn, transport->settings->CertificateFile, transport->settings->PrivateKeyFile) != TRUE)"
    },
    {
        "line": 20,
        "fullcodeline": "if (transport->settings->Authentication != TRUE)"
    },
    {
        "line": 26,
        "fullcodeline": "if (transport->credssp == NULL)"
    },
    {
        "line": 29,
        "fullcodeline": "if (credssp_authenticate(transport->credssp) < 0)"
    },
    {
        "line": 7,
        "fullcodeline": "transport->TlsIn = tls_new(transport->settings);"
    },
    {
        "line": 10,
        "fullcodeline": "transport->TlsOut = transport->TlsIn;"
    },
    {
        "line": 27,
        "fullcodeline": "transport->credssp = credssp_new(instance, transport, settings);"
    },
    {
        "line": 31,
        "fullcodeline": "fprintf(stderr, \"client authentication failure\\n\");"
    },
    {
        "line": 32,
        "fullcodeline": "credssp_free(transport->credssp);"
    }
]