[
    {
        "line": 10,
        "fullcodeline": "invitee_emails = get_invitee_emails_set(invitee_emails_raw)"
    },
    {
        "line": 12,
        "fullcodeline": "stream_names = request.POST.getlist('stream')"
    },
    {
        "line": 18,
        "fullcodeline": "notifications_stream = user_profile.realm.notifications_stream  # type: Optional[Stream]"
    },
    {
        "line": 22,
        "fullcodeline": "streams = []  # type: List[Stream]"
    },
    {
        "line": 5,
        "fullcodeline": "if not invitee_emails_raw:"
    },
    {
        "line": 7,
        "fullcodeline": "if body == '':"
    },
    {
        "line": 13,
        "fullcodeline": "if not stream_names:"
    },
    {
        "line": 19,
        "fullcodeline": "if notifications_stream and not notifications_stream.invite_only:"
    },
    {
        "line": 23,
        "fullcodeline": "for stream_name in stream_names:"
    },
    {
        "line": 30,
        "fullcodeline": "ret_error, error_data = do_invite_users(user_profile, invitee_emails, streams, body)"
    },
    {
        "line": 32,
        "fullcodeline": "if ret_error is not None:"
    },
    {
        "line": 8,
        "fullcodeline": "body = None"
    },
    {
        "line": 20,
        "fullcodeline": "stream_names.append(notifications_stream.name)"
    },
    {
        "line": 6,
        "fullcodeline": "return json_error(_(\"You must specify at least one email address.\"))"
    },
    {
        "line": 14,
        "fullcodeline": "return json_error(_(\"You must specify at least one stream for invitees to join.\"))"
    },
    {
        "line": 28,
        "fullcodeline": "streams.append(stream)"
    },
    {
        "line": 33,
        "fullcodeline": "return json_error(data=error_data, msg=ret_error)"
    },
    {
        "line": 35,
        "fullcodeline": "return json_success()"
    },
    {
        "line": 25,
        "fullcodeline": "(stream, recipient, sub) = access_stream_by_name(user_profile, stream_name)"
    },
    {
        "line": 27,
        "fullcodeline": "return json_error(_(\"Stream does not exist: %s. No invites were sent.\") % (stream_name,))"
    }
]