[
    {
        "line": 6,
        "fullcodeline": "struct btrfs_fs_devices *fs_devices = fs_info->fs_devices;"
    },
    {
        "line": 8,
        "fullcodeline": "int ret = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "mutex_lock(&uuid_mutex);"
    },
    {
        "line": 12,
        "fullcodeline": "num_devices = btrfs_num_devices(fs_info);"
    },
    {
        "line": 14,
        "fullcodeline": "ret = btrfs_check_raid_min_devices(fs_info, num_devices - 1);"
    },
    {
        "line": 18,
        "fullcodeline": "device = btrfs_find_device_by_devspec(fs_info, devid, device_path);"
    },
    {
        "line": 55,
        "fullcodeline": "mutex_unlock(&uuid_mutex);"
    },
    {
        "line": 56,
        "fullcodeline": "ret = btrfs_shrink_device(device, 0);"
    },
    {
        "line": 59,
        "fullcodeline": "mutex_lock(&uuid_mutex);"
    },
    {
        "line": 68,
        "fullcodeline": "ret = btrfs_rm_dev_item(device);"
    },
    {
        "line": 72,
        "fullcodeline": "clear_bit(BTRFS_DEV_STATE_IN_FS_METADATA, &device->dev_state);"
    },
    {
        "line": 73,
        "fullcodeline": "btrfs_scrub_cancel_dev(device);"
    },
    {
        "line": 90,
        "fullcodeline": "cur_devices = device->fs_devices;"
    },
    {
        "line": 91,
        "fullcodeline": "mutex_lock(&fs_devices->device_list_mutex);"
    },
    {
        "line": 92,
        "fullcodeline": "list_del_rcu(&device->dev_list);"
    },
    {
        "line": 94,
        "fullcodeline": "cur_devices->num_devices--;"
    },
    {
        "line": 95,
        "fullcodeline": "cur_devices->total_devices--;"
    },
    {
        "line": 103,
        "fullcodeline": "btrfs_assign_next_active_device(device, NULL);"
    },
    {
        "line": 111,
        "fullcodeline": "num_devices = btrfs_super_num_devices(fs_info->super_copy) - 1;"
    },
    {
        "line": 112,
        "fullcodeline": "btrfs_set_super_num_devices(fs_info->super_copy, num_devices);"
    },
    {
        "line": 113,
        "fullcodeline": "mutex_unlock(&fs_devices->device_list_mutex);"
    },
    {
        "line": 124,
        "fullcodeline": "btrfs_close_bdev(device);"
    },
    {
        "line": 125,
        "fullcodeline": "synchronize_rcu();"
    },
    {
        "line": 126,
        "fullcodeline": "btrfs_free_device(device);"
    },
    {
        "line": 135,
        "fullcodeline": "mutex_unlock(&uuid_mutex);"
    },
    {
        "line": 139,
        "fullcodeline": "btrfs_reada_undo_remove_dev(device);"
    },
    {
        "line": 20,
        "fullcodeline": "if (IS_ERR(device)) {"
    },
    {
        "line": 29,
        "fullcodeline": "if (btrfs_pinned_by_swapfile(fs_info, device)) {"
    },
    {
        "line": 37,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_REPLACE_TGT, &device->dev_state)) {"
    },
    {
        "line": 42,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state) &&"
    },
    {
        "line": 48,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state)) {"
    },
    {
        "line": 57,
        "fullcodeline": "if (!ret)"
    },
    {
        "line": 97,
        "fullcodeline": "if (cur_devices != fs_devices)"
    },
    {
        "line": 100,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_MISSING, &device->dev_state))"
    },
    {
        "line": 120,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state))"
    },
    {
        "line": 128,
        "fullcodeline": "if (cur_devices->open_devices == 0) {"
    },
    {
        "line": 140,
        "fullcodeline": "if (test_bit(BTRFS_DEV_STATE_WRITEABLE, &device->dev_state)) {"
    },
    {
        "line": 30,
        "fullcodeline": "btrfs_warn_in_rcu(fs_info,"
    },
    {
        "line": 33,
        "fullcodeline": "ret = -ETXTBSY;"
    },
    {
        "line": 38,
        "fullcodeline": "ret = BTRFS_ERROR_DEV_TGT_REPLACE;"
    },
    {
        "line": 43,
        "fullcodeline": "fs_info->fs_devices->rw_devices == 1) {"
    },
    {
        "line": 44,
        "fullcodeline": "ret = BTRFS_ERROR_DEV_ONLY_WRITABLE;"
    },
    {
        "line": 49,
        "fullcodeline": "mutex_lock(&fs_info->chunk_mutex);"
    },
    {
        "line": 50,
        "fullcodeline": "list_del_init(&device->dev_alloc_list);"
    },
    {
        "line": 51,
        "fullcodeline": "device->fs_devices->rw_devices--;"
    },
    {
        "line": 52,
        "fullcodeline": "mutex_unlock(&fs_info->chunk_mutex);"
    },
    {
        "line": 58,
        "fullcodeline": "btrfs_reada_remove_dev(device);"
    },
    {
        "line": 98,
        "fullcodeline": "fs_devices->total_devices--;"
    },
    {
        "line": 101,
        "fullcodeline": "cur_devices->missing_devices--;"
    },
    {
        "line": 106,
        "fullcodeline": "cur_devices->open_devices--;"
    },
    {
        "line": 108,
        "fullcodeline": "btrfs_sysfs_remove_device(device);"
    },
    {
        "line": 121,
        "fullcodeline": "btrfs_scratch_superblocks(fs_info, device->bdev,"
    },
    {
        "line": 129,
        "fullcodeline": "list_del_init(&cur_devices->seed_list);"
    },
    {
        "line": 130,
        "fullcodeline": "close_fs_devices(cur_devices);"
    },
    {
        "line": 131,
        "fullcodeline": "free_fs_devices(cur_devices);"
    },
    {
        "line": 141,
        "fullcodeline": "mutex_lock(&fs_info->chunk_mutex);"
    },
    {
        "line": 142,
        "fullcodeline": "list_add(&device->dev_alloc_list,"
    },
    {
        "line": 144,
        "fullcodeline": "device->fs_devices->rw_devices++;"
    },
    {
        "line": 145,
        "fullcodeline": "mutex_unlock(&fs_info->chunk_mutex);"
    },
    {
        "line": 21,
        "fullcodeline": "if (PTR_ERR(device) == -ENOENT &&"
    },
    {
        "line": 32,
        "fullcodeline": "rcu_str_deref(device->name), device->devid);"
    },
    {
        "line": 22,
        "fullcodeline": "device_path && strcmp(device_path, \"missing\") == 0)"
    },
    {
        "line": 23,
        "fullcodeline": "ret = BTRFS_ERROR_DEV_MISSING_NOT_FOUND;"
    },
    {
        "line": 25,
        "fullcodeline": "ret = PTR_ERR(device);"
    }
]