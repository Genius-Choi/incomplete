[
    {
        "line": 10,
        "fullcodeline": "l_data_size = 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *"
    },
    {
        "line": 13,
        "fullcodeline": "if (l_data_size > p_code_block->data_size) {"
    },
    {
        "line": 18,
        "fullcodeline": "p_code_block->data = (OPJ_BYTE*) opj_malloc(l_data_size + 1);"
    },
    {
        "line": 29,
        "fullcodeline": "p_code_block->data[0] = 0;"
    },
    {
        "line": 19,
        "fullcodeline": "if (! p_code_block->data) {"
    },
    {
        "line": 16,
        "fullcodeline": "opj_free(p_code_block->data - 1);"
    },
    {
        "line": 20,
        "fullcodeline": "p_code_block->data_size = 0U;"
    },
    {
        "line": 11,
        "fullcodeline": "(p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32));"
    }
]