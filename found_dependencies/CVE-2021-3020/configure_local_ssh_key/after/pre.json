[
    {
        "line": 8,
        "fullcodeline": "change_user_shell(user)"
    },
    {
        "line": 21,
        "fullcodeline": "append_unique(public_key, authorized_file)"
    },
    {
        "line": 10,
        "fullcodeline": "private_key, public_key, authorized_file = key_files(user).values()"
    },
    {
        "line": 11,
        "fullcodeline": "if not os.path.exists(private_key):"
    },
    {
        "line": 19,
        "fullcodeline": "if not os.path.exists(authorized_file):"
    },
    {
        "line": 12,
        "fullcodeline": "status(\"Generating SSH key for {}\".format(user))"
    },
    {
        "line": 13,
        "fullcodeline": "cmd = \"ssh-keygen -q -f {} -C 'Cluster Internal on {}' -N ''\".format(private_key, utils.this_node())"
    },
    {
        "line": 14,
        "fullcodeline": "cmd = utils.add_su(cmd, user)"
    },
    {
        "line": 15,
        "fullcodeline": "rc, _, err = invoke(cmd)"
    },
    {
        "line": 16,
        "fullcodeline": "if not rc:"
    },
    {
        "line": 20,
        "fullcodeline": "open(authorized_file, 'w').close()"
    },
    {
        "line": 17,
        "fullcodeline": "error(\"Failed to generate ssh key for {}: {}\".format(user, err))"
    }
]