[
    {
        "line": 3,
        "fullcodeline": "nodelist = None"
    },
    {
        "line": 4,
        "fullcodeline": "loop_count = 0"
    },
    {
        "line": 5,
        "fullcodeline": "device_votes = 0"
    },
    {
        "line": 6,
        "fullcodeline": "nodecount = 0"
    },
    {
        "line": 7,
        "fullcodeline": "expected_votes = 0"
    },
    {
        "line": 29,
        "fullcodeline": "is_qdevice_configured = utils.is_qdevice_configured()"
    },
    {
        "line": 75,
        "fullcodeline": "corosync.set_value(\"quorum.two_node\", 1 if expected_votes == 2 else 0)"
    },
    {
        "line": 77,
        "fullcodeline": "csync2_update(corosync.conf())"
    },
    {
        "line": 30,
        "fullcodeline": "if nodelist is None:"
    },
    {
        "line": 21,
        "fullcodeline": "loop_count += 1"
    },
    {
        "line": 22,
        "fullcodeline": "sleep(1)"
    },
    {
        "line": 57,
        "fullcodeline": "nodecount = len(nodelist)"
    },
    {
        "line": 58,
        "fullcodeline": "expected_votes = 0"
    },
    {
        "line": 74,
        "fullcodeline": "corosync.set_value(\"quorum.device.votes\", device_votes)"
    },
    {
        "line": 9,
        "fullcodeline": "rc, nodelist_text = utils.get_stdout(\"cibadmin -Ql --xpath '/cib/status/node_state'\")"
    },
    {
        "line": 10,
        "fullcodeline": "if rc == 0:"
    },
    {
        "line": 19,
        "fullcodeline": "if loop_count == 10:"
    },
    {
        "line": 31,
        "fullcodeline": "for v in corosync.get_values(\"quorum.expected_votes\"):"
    },
    {
        "line": 63,
        "fullcodeline": "if corosync.get_value(\"quorum.device.net.algorithm\") == \"ffsplit\":"
    },
    {
        "line": 65,
        "fullcodeline": "if corosync.get_value(\"quorum.device.net.algorithm\") == \"lms\":"
    },
    {
        "line": 68,
        "fullcodeline": "if nodecount > 1:"
    },
    {
        "line": 71,
        "fullcodeline": "if corosync.get_value(\"quorum.expected_votes\"):"
    },
    {
        "line": 64,
        "fullcodeline": "device_votes = 1"
    },
    {
        "line": 66,
        "fullcodeline": "device_votes = nodecount - 1"
    },
    {
        "line": 69,
        "fullcodeline": "expected_votes = nodecount + device_votes"
    },
    {
        "line": 72,
        "fullcodeline": "corosync.set_value(\"quorum.expected_votes\", str(expected_votes))"
    },
    {
        "line": 32,
        "fullcodeline": "expected_votes = v"
    },
    {
        "line": 53,
        "fullcodeline": "nodecount += 1"
    },
    {
        "line": 54,
        "fullcodeline": "expected_votes = nodecount + device_votes"
    },
    {
        "line": 55,
        "fullcodeline": "corosync.set_value(\"quorum.expected_votes\", str(expected_votes))"
    },
    {
        "line": 12,
        "fullcodeline": "nodelist_xml = etree.fromstring(nodelist_text)"
    },
    {
        "line": 13,
        "fullcodeline": "nodelist = [n.get('uname') for n in nodelist_xml.xpath('//node_state') if n.get('remote_node') != 'true']"
    },
    {
        "line": 40,
        "fullcodeline": "if corosync.get_value(\"quorum.device.net.algorithm\") == \"lms\":"
    },
    {
        "line": 14,
        "fullcodeline": "if len(nodelist) >= 2:"
    },
    {
        "line": 41,
        "fullcodeline": "device_votes = int((expected_votes - 1) / 2)"
    },
    {
        "line": 42,
        "fullcodeline": "nodecount = expected_votes - device_votes"
    },
    {
        "line": 45,
        "fullcodeline": "device_votes += 1"
    },
    {
        "line": 46,
        "fullcodeline": "elif corosync.get_value(\"quorum.device.net.algorithm\") == \"ffsplit\":"
    },
    {
        "line": 47,
        "fullcodeline": "device_votes = 1"
    },
    {
        "line": 48,
        "fullcodeline": "nodecount = expected_votes - device_votes"
    },
    {
        "line": 50,
        "fullcodeline": "device_votes = 0"
    },
    {
        "line": 51,
        "fullcodeline": "nodecount = v"
    }
]