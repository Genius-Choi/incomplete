[
    {
        "line": 7,
        "fullcodeline": "features->reserve(input_order_.size());"
    },
    {
        "line": 9,
        "fullcodeline": "int next_ragged = 0;"
    },
    {
        "line": 10,
        "fullcodeline": "int next_sparse = 0;"
    },
    {
        "line": 11,
        "fullcodeline": "int next_dense = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "return Status::OK();"
    },
    {
        "line": 13,
        "fullcodeline": "if (c == 'R') {"
    },
    {
        "line": 14,
        "fullcodeline": "TF_RETURN_IF_ERROR(BuildRaggedFeatureReader("
    },
    {
        "line": 17,
        "fullcodeline": "next_ragged++;"
    },
    {
        "line": 18,
        "fullcodeline": "} else if (c == 'S') {"
    },
    {
        "line": 19,
        "fullcodeline": "TF_RETURN_IF_ERROR(BuildSparseFeatureReader("
    },
    {
        "line": 22,
        "fullcodeline": "next_sparse++;"
    },
    {
        "line": 23,
        "fullcodeline": "} else if (c == 'D') {"
    },
    {
        "line": 24,
        "fullcodeline": "TF_RETURN_IF_ERROR("
    },
    {
        "line": 25,
        "fullcodeline": "BuildDenseFeatureReader(dense_list[next_dense++], features));"
    },
    {
        "line": 27,
        "fullcodeline": "return errors::InvalidArgument(\"Unexpected input_order value.\");"
    }
]