[
    {
        "line": 6,
        "fullcodeline": "lock = lxc_newlock(NULL, NULL);"
    },
    {
        "line": 11,
        "fullcodeline": "ret = lxclock(lock, 0);"
    },
    {
        "line": 17,
        "fullcodeline": "ret = lxcunlock(lock);"
    },
    {
        "line": 22,
        "fullcodeline": "lxc_putlock(lock);"
    },
    {
        "line": 24,
        "fullcodeline": "lock = lxc_newlock(\"/var/lib/lxc\", mycontainername);"
    },
    {
        "line": 30,
        "fullcodeline": "char *pathname = RUNTIME_PATH \"/lxc/lock/var/lib/lxc/\";"
    },
    {
        "line": 31,
        "fullcodeline": "ret = stat(pathname, &sb);"
    },
    {
        "line": 37,
        "fullcodeline": "lxc_putlock(lock);"
    },
    {
        "line": 39,
        "fullcodeline": "test_two_locks();"
    },
    {
        "line": 41,
        "fullcodeline": "fprintf(stderr, \"all tests passed\\n\");"
    },
    {
        "line": 43,
        "fullcodeline": "exit(ret);"
    },
    {
        "line": 7,
        "fullcodeline": "if (!lock) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (!lock) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (ret != 0) {"
    },
    {
        "line": 8,
        "fullcodeline": "fprintf(stderr, \"%d: failed to get unnamed lock\\n\", __LINE__);"
    },
    {
        "line": 9,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 13,
        "fullcodeline": "fprintf(stderr, \"%d: failed to take unnamed lock (%d)\\n\", __LINE__, ret);"
    },
    {
        "line": 14,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 19,
        "fullcodeline": "fprintf(stderr, \"%d: failed to put unnamed lock (%d)\\n\", __LINE__, ret);"
    },
    {
        "line": 20,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 26,
        "fullcodeline": "fprintf(stderr, \"%d: failed to get lock\\n\", __LINE__);"
    },
    {
        "line": 27,
        "fullcodeline": "exit(1);"
    },
    {
        "line": 33,
        "fullcodeline": "fprintf(stderr, \"%d: filename %s not created\\n\", __LINE__,"
    },
    {
        "line": 35,
        "fullcodeline": "exit(1);"
    }
]