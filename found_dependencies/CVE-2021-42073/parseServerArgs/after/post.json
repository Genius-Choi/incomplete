[
    {
        "line": 3,
        "fullcodeline": "setArgsBase(args);"
    },
    {
        "line": 4,
        "fullcodeline": "updateCommonArgs(argv);"
    },
    {
        "line": 6,
        "fullcodeline": "for (int i = 1; i < argc; ++i) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (checkUnexpectedArgs()) {"
    },
    {
        "line": 7,
        "fullcodeline": "if (parsePlatformArg(args, argc, argv, i)) {"
    },
    {
        "line": 10,
        "fullcodeline": "else if (parseGenericArgs(argc, argv, i)) {"
    },
    {
        "line": 13,
        "fullcodeline": "else if (parseDeprecatedArgs(argc, argv, i)) {"
    },
    {
        "line": 16,
        "fullcodeline": "else if (isArg(i, argc, argv, \"-a\", \"--address\", 1)) {"
    },
    {
        "line": 18,
        "fullcodeline": "args.m_barrierAddress = argv[++i];"
    },
    {
        "line": 20,
        "fullcodeline": "else if (isArg(i, argc, argv, \"-c\", \"--config\", 1)) {"
    },
    {
        "line": 22,
        "fullcodeline": "args.m_configFile = argv[++i];"
    },
    {
        "line": 24,
        "fullcodeline": "else if (isArg(i, argc, argv, NULL, \"--screen-change-script\", 1)) {"
    },
    {
        "line": 26,
        "fullcodeline": "args.m_screenChangeScript = argv[++i];"
    },
    {
        "line": 28,
        "fullcodeline": "else if (isArg(i, argc, argv, nullptr, \"--disable-client-cert-checking\")) {"
    },
    {
        "line": 29,
        "fullcodeline": "args.check_client_certificates = false;"
    }
]