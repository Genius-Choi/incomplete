[
    {
        "line": 3,
        "fullcodeline": "QRegExp fingerprintRegex(\".*server fingerprint \\\\(SHA1\\\\): ([A-F0-9:]+) \\\\(SHA256\\\\): ([A-F0-9:]+)\");"
    },
    {
        "line": 8,
        "fullcodeline": "barrier::FingerprintData fingerprint_sha1 = {"
    },
    {
        "line": 13,
        "fullcodeline": "barrier::FingerprintData fingerprint_sha256 = {"
    },
    {
        "line": 18,
        "fullcodeline": "auto db_path = barrier::DataDirectories::trusted_servers_ssl_fingerprints_path();"
    },
    {
        "line": 24,
        "fullcodeline": "db.read(db_path);"
    },
    {
        "line": 29,
        "fullcodeline": "static bool messageBoxAlreadyShown = false;"
    },
    {
        "line": 4,
        "fullcodeline": "if (!fingerprintRegex.exactMatch(line)) {"
    },
    {
        "line": 25,
        "fullcodeline": "if (db.is_trusted(fingerprint_sha256)) {"
    },
    {
        "line": 31,
        "fullcodeline": "if (!messageBoxAlreadyShown) {"
    },
    {
        "line": 10,
        "fullcodeline": "barrier::string::from_hex(fingerprintRegex.cap(1).toStdString())"
    },
    {
        "line": 15,
        "fullcodeline": "barrier::string::from_hex(fingerprintRegex.cap(2).toStdString())"
    },
    {
        "line": 32,
        "fullcodeline": "stopBarrier();"
    },
    {
        "line": 34,
        "fullcodeline": "messageBoxAlreadyShown = true;"
    },
    {
        "line": 35,
        "fullcodeline": "QMessageBox::StandardButton fingerprintReply ="
    },
    {
        "line": 64,
        "fullcodeline": "messageBoxAlreadyShown = false;"
    },
    {
        "line": 36,
        "fullcodeline": "QMessageBox::information("
    },
    {
        "line": 57,
        "fullcodeline": "if (fingerprintReply == QMessageBox::Yes) {"
    },
    {
        "line": 37,
        "fullcodeline": "this, tr(\"Security question\"),"
    },
    {
        "line": 38,
        "fullcodeline": "tr(\"Do you trust this fingerprint?\\n\\n\""
    },
    {
        "line": 59,
        "fullcodeline": "db.add_trusted(fingerprint_sha256);"
    },
    {
        "line": 60,
        "fullcodeline": "db.write(db_path);"
    },
    {
        "line": 61,
        "fullcodeline": "startBarrier();"
    },
    {
        "line": 54,
        "fullcodeline": ".arg(QString::fromStdString(barrier::format_ssl_fingerprint(fingerprint_sha1.data))),"
    },
    {
        "line": 52,
        "fullcodeline": ".arg(QString::fromStdString("
    },
    {
        "line": 51,
        "fullcodeline": ".arg(QString::fromStdString(barrier::format_ssl_fingerprint(fingerprint_sha256.data)))"
    },
    {
        "line": 53,
        "fullcodeline": "barrier::create_fingerprint_randomart(fingerprint_sha256.data)))"
    }
]