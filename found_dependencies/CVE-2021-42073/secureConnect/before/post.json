[
    {
        "line": 3,
        "fullcodeline": "createSSL();"
    },
    {
        "line": 6,
        "fullcodeline": "SSL_set_fd(m_ssl->m_ssl, socket);"
    },
    {
        "line": 9,
        "fullcodeline": "int r = SSL_connect(m_ssl->m_ssl);"
    },
    {
        "line": 13,
        "fullcodeline": "checkResult(r, retry);"
    },
    {
        "line": 29,
        "fullcodeline": "retry = 0;"
    },
    {
        "line": 31,
        "fullcodeline": "m_secureReady = true;"
    },
    {
        "line": 48,
        "fullcodeline": "showSecureConnectInfo();"
    },
    {
        "line": 15,
        "fullcodeline": "if (isFatal()) {"
    },
    {
        "line": 22,
        "fullcodeline": "if (retry > 0) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (verifyCertFingerprint()) {"
    },
    {
        "line": 45,
        "fullcodeline": "if (CLOG->getFilter() >= kDEBUG1) {"
    },
    {
        "line": 17,
        "fullcodeline": "retry = 0;"
    },
    {
        "line": 24,
        "fullcodeline": "m_secureReady = false;"
    },
    {
        "line": 25,
        "fullcodeline": "ARCH->sleep(s_retryDelay);"
    },
    {
        "line": 46,
        "fullcodeline": "showSecureCipherInfo();"
    },
    {
        "line": 18,
        "fullcodeline": "return -1;"
    },
    {
        "line": 34,
        "fullcodeline": "if (!showCertificate()) {"
    },
    {
        "line": 41,
        "fullcodeline": "disconnect();"
    },
    {
        "line": 35,
        "fullcodeline": "disconnect();"
    },
    {
        "line": 42,
        "fullcodeline": "return -1; // Fingerprint failed, error"
    },
    {
        "line": 36,
        "fullcodeline": "return -1;// Cert fail, error"
    }
]