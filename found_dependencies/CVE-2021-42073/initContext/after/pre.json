[
    {
        "line": 3,
        "fullcodeline": "SSL_library_init();"
    },
    {
        "line": 8,
        "fullcodeline": "OpenSSL_add_all_algorithms();"
    },
    {
        "line": 11,
        "fullcodeline": "SSL_load_error_strings();"
    },
    {
        "line": 26,
        "fullcodeline": "SSL_METHOD* m = const_cast<SSL_METHOD*>(method);"
    },
    {
        "line": 27,
        "fullcodeline": "m_ssl->m_context = SSL_CTX_new(m);"
    },
    {
        "line": 30,
        "fullcodeline": "SSL_CTX_set_options(m_ssl->m_context, SSL_OP_NO_SSLv3);"
    },
    {
        "line": 13,
        "fullcodeline": "if (CLOG->getFilter() >= kINFO) {"
    },
    {
        "line": 32,
        "fullcodeline": "if (m_ssl->m_context == NULL) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (security_level_ == ConnectionSecurityLevel::ENCRYPTED_AUTHENTICATED) {"
    },
    {
        "line": 14,
        "fullcodeline": "showSecureLibInfo();"
    },
    {
        "line": 19,
        "fullcodeline": "method = SSLv23_server_method();"
    },
    {
        "line": 33,
        "fullcodeline": "showError(\"\");"
    },
    {
        "line": 39,
        "fullcodeline": "SSL_CTX_set_verify(m_ssl->m_context, SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT,"
    },
    {
        "line": 41,
        "fullcodeline": "SSL_CTX_set_cert_verify_callback(m_ssl->m_context, cert_verify_ignore_callback, nullptr);"
    },
    {
        "line": 22,
        "fullcodeline": "method = SSLv23_client_method();"
    }
]