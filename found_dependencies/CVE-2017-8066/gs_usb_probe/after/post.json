[
    {
        "line": 5,
        "fullcodeline": "int rc = -ENOMEM;"
    },
    {
        "line": 10,
        "fullcodeline": "hconf = kmalloc(sizeof(*hconf), GFP_KERNEL);"
    },
    {
        "line": 14,
        "fullcodeline": "hconf->byte_order = 0x0000beef;"
    },
    {
        "line": 17,
        "fullcodeline": "rc = usb_control_msg(interface_to_usbdev(intf),"
    },
    {
        "line": 27,
        "fullcodeline": "kfree(hconf);"
    },
    {
        "line": 35,
        "fullcodeline": "dconf = kmalloc(sizeof(*dconf), GFP_KERNEL);"
    },
    {
        "line": 40,
        "fullcodeline": "rc = usb_control_msg(interface_to_usbdev(intf),"
    },
    {
        "line": 56,
        "fullcodeline": "icount = dconf->icount + 1;"
    },
    {
        "line": 57,
        "fullcodeline": "dev_info(&intf->dev, \"Configuring for %d interfaces\\n\", icount);"
    },
    {
        "line": 67,
        "fullcodeline": "dev = kzalloc(sizeof(*dev), GFP_KERNEL);"
    },
    {
        "line": 73,
        "fullcodeline": "init_usb_anchor(&dev->rx_submitted);"
    },
    {
        "line": 75,
        "fullcodeline": "atomic_set(&dev->active_channels, 0);"
    },
    {
        "line": 77,
        "fullcodeline": "usb_set_intfdata(intf, dev);"
    },
    {
        "line": 78,
        "fullcodeline": "dev->udev = interface_to_usbdev(intf);"
    },
    {
        "line": 99,
        "fullcodeline": "kfree(dconf);"
    },
    {
        "line": 11,
        "fullcodeline": "if (!hconf)"
    },
    {
        "line": 29,
        "fullcodeline": "if (rc < 0) {"
    },
    {
        "line": 36,
        "fullcodeline": "if (!dconf)"
    },
    {
        "line": 49,
        "fullcodeline": "if (rc < 0) {"
    },
    {
        "line": 59,
        "fullcodeline": "if (icount > GS_MAX_INTF) {"
    },
    {
        "line": 68,
        "fullcodeline": "if (!dev) {"
    },
    {
        "line": 80,
        "fullcodeline": "for (i = 0; i < icount; i++) {"
    },
    {
        "line": 18,
        "fullcodeline": "usb_sndctrlpipe(interface_to_usbdev(intf), 0),"
    },
    {
        "line": 20,
        "fullcodeline": "USB_DIR_OUT|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,"
    },
    {
        "line": 30,
        "fullcodeline": "dev_err(&intf->dev, \"Couldn't send data format (err=%d)\\n\","
    },
    {
        "line": 41,
        "fullcodeline": "usb_rcvctrlpipe(interface_to_usbdev(intf), 0),"
    },
    {
        "line": 43,
        "fullcodeline": "USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,"
    },
    {
        "line": 50,
        "fullcodeline": "dev_err(&intf->dev, \"Couldn't get device config: (err=%d)\\n\","
    },
    {
        "line": 52,
        "fullcodeline": "kfree(dconf);"
    },
    {
        "line": 60,
        "fullcodeline": "dev_err(&intf->dev,"
    },
    {
        "line": 63,
        "fullcodeline": "kfree(dconf);"
    },
    {
        "line": 69,
        "fullcodeline": "kfree(dconf);"
    },
    {
        "line": 81,
        "fullcodeline": "dev->canch[i] = gs_make_candev(i, intf, dconf);"
    },
    {
        "line": 96,
        "fullcodeline": "dev->canch[i]->parent = dev;"
    },
    {
        "line": 12,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 37,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 64,
        "fullcodeline": "return -EINVAL;"
    },
    {
        "line": 70,
        "fullcodeline": "return -ENOMEM;"
    },
    {
        "line": 82,
        "fullcodeline": "if (IS_ERR_OR_NULL(dev->canch[i])) {"
    },
    {
        "line": 84,
        "fullcodeline": "rc = PTR_ERR(dev->canch[i]);"
    },
    {
        "line": 87,
        "fullcodeline": "icount = i;"
    },
    {
        "line": 91,
        "fullcodeline": "usb_kill_anchored_urbs(&dev->rx_submitted);"
    },
    {
        "line": 92,
        "fullcodeline": "kfree(dconf);"
    },
    {
        "line": 93,
        "fullcodeline": "kfree(dev);"
    },
    {
        "line": 88,
        "fullcodeline": "for (i = 0; i < icount; i++)"
    },
    {
        "line": 89,
        "fullcodeline": "gs_destroy_candev(dev->canch[i]);"
    }
]