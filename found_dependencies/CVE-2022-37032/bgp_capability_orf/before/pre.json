[
    {
        "line": 4,
        "fullcodeline": "afi_t afi = ntohs(cap->mpc.afi);"
    },
    {
        "line": 5,
        "fullcodeline": "safi_t safi = cap->mpc.safi;"
    },
    {
        "line": 9,
        "fullcodeline": "u_int16_t sm_cap = 0; /* capability send-mode receive */"
    },
    {
        "line": 10,
        "fullcodeline": "u_int16_t rm_cap = 0; /* capability receive-mode receive */"
    },
    {
        "line": 37,
        "fullcodeline": "number_of_orfs = *pnt++;"
    },
    {
        "line": 14,
        "fullcodeline": "if (cap->length < 7)"
    },
    {
        "line": 22,
        "fullcodeline": "if (BGP_DEBUG (normal, NORMAL))"
    },
    {
        "line": 39,
        "fullcodeline": "for (i = 0 ; i < number_of_orfs ; i++)"
    },
    {
        "line": 16,
        "fullcodeline": "zlog_info (\"%s ORF Capability length error %d\","
    },
    {
        "line": 18,
        "fullcodeline": "bgp_notify_send (peer, BGP_NOTIFY_CEASE, 0);"
    },
    {
        "line": 23,
        "fullcodeline": "zlog_debug (\"%s OPEN has ORF CAP(%s) for afi/safi: %u/%u\","
    },
    {
        "line": 28,
        "fullcodeline": "if ((afi != AFI_IP && afi != AFI_IP6)"
    },
    {
        "line": 29,
        "fullcodeline": "|| (safi != SAFI_UNICAST && safi != SAFI_MULTICAST"
    },
    {
        "line": 41,
        "fullcodeline": "type = *pnt++;"
    },
    {
        "line": 42,
        "fullcodeline": "mode = *pnt++;"
    },
    {
        "line": 19,
        "fullcodeline": "return -1;"
    },
    {
        "line": 30,
        "fullcodeline": "&& safi != BGP_SAFI_VPNV4))"
    },
    {
        "line": 34,
        "fullcodeline": "return -1;"
    },
    {
        "line": 53,
        "fullcodeline": "if (cap->code == CAPABILITY_CODE_ORF)"
    },
    {
        "line": 24,
        "fullcodeline": "peer->host, (cap->code == CAPABILITY_CODE_ORF ?"
    },
    {
        "line": 45,
        "fullcodeline": "if (mode != ORF_MODE_BOTH && mode != ORF_MODE_SEND"
    },
    {
        "line": 46,
        "fullcodeline": "&& mode != ORF_MODE_RECEIVE)"
    },
    {
        "line": 48,
        "fullcodeline": "bgp_capability_orf_not_support (peer, afi, safi, type, mode);"
    },
    {
        "line": 102,
        "fullcodeline": "SET_FLAG (peer->af_cap[afi][safi], sm_cap);"
    },
    {
        "line": 103,
        "fullcodeline": "SET_FLAG (peer->af_cap[afi][safi], rm_cap);"
    },
    {
        "line": 106,
        "fullcodeline": "SET_FLAG (peer->af_cap[afi][safi], sm_cap);"
    },
    {
        "line": 109,
        "fullcodeline": "SET_FLAG (peer->af_cap[afi][safi], rm_cap);"
    },
    {
        "line": 55,
        "fullcodeline": "if (type == ORF_TYPE_PREFIX &&"
    },
    {
        "line": 56,
        "fullcodeline": "((afi == AFI_IP && safi == SAFI_UNICAST)"
    },
    {
        "line": 60,
        "fullcodeline": "sm_cap = PEER_CAP_ORF_PREFIX_SM_RCV;"
    },
    {
        "line": 61,
        "fullcodeline": "rm_cap = PEER_CAP_ORF_PREFIX_RM_RCV;"
    },
    {
        "line": 73,
        "fullcodeline": "else if (cap->code == CAPABILITY_CODE_ORF_OLD)"
    },
    {
        "line": 58,
        "fullcodeline": "|| (afi == AFI_IP6 && safi == SAFI_UNICAST)))"
    },
    {
        "line": 62,
        "fullcodeline": "if (BGP_DEBUG (normal, NORMAL))"
    },
    {
        "line": 69,
        "fullcodeline": "bgp_capability_orf_not_support (peer, afi, safi, type, mode);"
    },
    {
        "line": 57,
        "fullcodeline": "|| (afi == AFI_IP && safi == SAFI_MULTICAST)"
    },
    {
        "line": 63,
        "fullcodeline": "zlog_debug (\"%s OPEN has Prefixlist ORF(%d) capability as %s for afi/safi: %d/%d\","
    },
    {
        "line": 75,
        "fullcodeline": "if (type == ORF_TYPE_PREFIX_OLD &&"
    },
    {
        "line": 95,
        "fullcodeline": "bgp_capability_orf_not_support (peer, afi, safi, type, mode);"
    },
    {
        "line": 76,
        "fullcodeline": "((afi == AFI_IP && safi == SAFI_UNICAST)"
    },
    {
        "line": 80,
        "fullcodeline": "sm_cap = PEER_CAP_ORF_PREFIX_SM_OLD_RCV;"
    },
    {
        "line": 81,
        "fullcodeline": "rm_cap = PEER_CAP_ORF_PREFIX_RM_OLD_RCV;"
    },
    {
        "line": 64,
        "fullcodeline": "peer->host, ORF_TYPE_PREFIX, (mode == ORF_MODE_SEND ? \"SEND\" :"
    },
    {
        "line": 78,
        "fullcodeline": "|| (afi == AFI_IP6 && safi == SAFI_UNICAST)))"
    },
    {
        "line": 82,
        "fullcodeline": "if (BGP_DEBUG (normal, NORMAL))"
    },
    {
        "line": 89,
        "fullcodeline": "bgp_capability_orf_not_support (peer, afi, safi, type, mode);"
    },
    {
        "line": 65,
        "fullcodeline": "mode == ORF_MODE_RECEIVE ? \"RECEIVE\" : \"BOTH\") , afi, safi);"
    },
    {
        "line": 77,
        "fullcodeline": "|| (afi == AFI_IP && safi == SAFI_MULTICAST)"
    },
    {
        "line": 83,
        "fullcodeline": "zlog_debug (\"%s OPEN has Prefixlist ORF(%d) capability as %s for afi/safi: %d/%d\","
    },
    {
        "line": 84,
        "fullcodeline": "peer->host, ORF_TYPE_PREFIX_OLD, (mode == ORF_MODE_SEND ? \"SEND\" :"
    },
    {
        "line": 85,
        "fullcodeline": "mode == ORF_MODE_RECEIVE ? \"RECEIVE\" : \"BOTH\") , afi, safi);"
    }
]