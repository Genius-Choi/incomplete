[
    {
        "line": 6,
        "fullcodeline": "const RowPartitionTensor row_partition_tensor ="
    },
    {
        "line": 8,
        "fullcodeline": "auto partition_type = GetRowPartitionTypeByDimension(dimension);"
    },
    {
        "line": 7,
        "fullcodeline": "GetRowPartitionTensor(context, dimension);"
    },
    {
        "line": 11,
        "fullcodeline": "CalculateOutputIndexValueRowID("
    },
    {
        "line": 16,
        "fullcodeline": "CalculateOutputIndexRowSplit(row_partition_tensor, parent_output_index,"
    },
    {
        "line": 14,
        "fullcodeline": "return tensorflow::Status::OK();"
    },
    {
        "line": 19,
        "fullcodeline": "return tensorflow::Status::OK();"
    },
    {
        "line": 21,
        "fullcodeline": "return errors::InvalidArgument("
    },
    {
        "line": 23,
        "fullcodeline": "RowPartitionTypeToString(partition_type));"
    }
]