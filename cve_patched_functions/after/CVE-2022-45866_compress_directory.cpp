void compress_directory(string base_dir, string pattern)
{
    string path;
    struct dirent *entry;
	DIR *dir;

	base_dir = remove_curdir(base_dir);

	string api_path = (base_dir == "" ? "" : remove_delimitor(base_dir) + DELIM_STR);

	if(base_dir != "")
		PRINT(FILES_PROCESSED, "%s%s%s\n", BLANK_LINE, base_dir.c_str(), DELIM_STR);

	// process files
	if((dir = opendir(void2curdir(api_path).c_str())))
	{
#ifdef WINDOWS
        while((entry = readdir_wildcard(dir, (char *)pattern.c_str())))
#else
        while((entry = readdir(dir)))
#endif
		{
			if(string(entry->d_name) != "." && string(entry->d_name) != "..")
			{
				path = api_path + string(entry->d_name);
				if (!is_dir(path))
				{
					// we must avoid including destination file when compressing. Note that *nix is case sensitive.
					absolute_path((char *)path.c_str(), tmp);
#ifdef WINDOWS
					if(lcase(string(tmp)) != lcase(destination_file))
#else
					if(string(tmp) != destination_file)
#endif
						compress_file(path, string(entry->d_name));
				}
			}
		}
	    closedir(dir);
	}



	// process directories
    if(recursive_flag && (dir = opendir(void2curdir(api_path).c_str())))
	{
#ifdef WINDOWS
        while((entry = readdir_wildcard(dir, "*")))
#else
        while((entry = readdir(dir)))
#endif
		{
			path = api_path + string(entry->d_name);

			if(is_dir(path) && string(entry->d_name) != "." && string(entry->d_name) != "..")
			{
				godown(entry->d_name);
				compress_directory(path, pattern);
				goup();
			}
		}
		closedir(dir);
	}
 }
