    int32_t audio_io_osx::Terminate() {
        if (!initialized_) {
            return 0;
        }

        // Stop record thread
        if (rec_tid_){
            void* thread_ret;
            
            is_running_ = false;
            
            pthread_cond_signal(&cond_);
            
            pthread_join(rec_tid_, &thread_ret);
            rec_tid_ = 0;
            
            pthread_cond_destroy(&cond_);
        }
        
        mixer_manager_.close();
        
        OSStatus err = noErr;
        
        AudioObjectPropertyAddress propertyAddress = {
            kAudioHardwarePropertyDevices, kAudioObjectPropertyScopeGlobal,
            kAudioObjectPropertyElementMaster };
        err = AudioObjectRemovePropertyListener(kAudioObjectSystemObject,
                                                             &propertyAddress, &object_listener_proc, this);
        if(err != noErr){
            error("AudioObjectRemovePropertyListener returned %d \n", err);
            return -1;
        }
        
        propertyAddress.mSelector = kAudioHardwarePropertyDefaultOutputDevice;
        err = AudioObjectRemovePropertyListener(kAudioObjectSystemObject,
                                                             &propertyAddress, &object_listener_proc, this);
        if(err != noErr){
            error("AudioObjectRemovePropertyListener returned %d \n", err);
            return -1;
        }
        
        propertyAddress.mSelector = kAudioHardwarePropertyDefaultInputDevice;
        err = AudioObjectRemovePropertyListener(kAudioObjectSystemObject,
                                                             &propertyAddress, &object_listener_proc, this);
        if(err != noErr){
            error("AudioObjectRemovePropertyListener returned %d \n", err);
            return -1;
        }
        
        is_shut_down_ = true;
        initialized_ = false;
    
        StopRecording();
        StopPlayout();
                
        return 0;
    }
