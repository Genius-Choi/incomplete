SignedData::SignedData(std::vector<std::uint8_t> cert_buf) : cert_buf_(cert_buf) {
  auto *buf_ptr = BIO_new_mem_buf(cert_buf_.data(), static_cast<int>(cert_buf_.size()));
  if (buf_ptr == nullptr) {
    throw std::bad_alloc{};
  }
  impl::BIO_ptr buf(buf_ptr, BIO_free);

  p7_ = d2i_PKCS7_bio(buf.get(), nullptr);
  if (p7_ == nullptr) {
    throw FormatError{"Couldn't parse PKCS#7 SignedData"};
  }

  /* NOTE(ww): This call is safe within the constructor, since get_indirect_data
   * only requires p7_ to be initialized (which happens immediately above).
   */
  indirect_data_ = get_indirect_data();
  if (indirect_data_ == nullptr) {
    throw FormatError{"Couldn't parse SpcIndirectDataContent"};
  }
}
