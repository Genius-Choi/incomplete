absl::optional<uint32_t> ContextImpl::daysUntilFirstCertExpires() const {
  absl::optional<uint32_t> daysUntilExpiration = cert_validator_->daysUntilFirstCertExpires();
  if (!daysUntilExpiration.has_value()) {
    return absl::nullopt;
  }
  for (auto& ctx : tls_contexts_) {
    const absl::optional<uint32_t> tmp =
        Utility::getDaysUntilExpiration(ctx.cert_chain_.get(), factory_context_.timeSource());
    if (!tmp.has_value()) {
      return absl::nullopt;
    }
    daysUntilExpiration = std::min<uint32_t>(tmp.value(), daysUntilExpiration.value());
  }
  return daysUntilExpiration;
}
