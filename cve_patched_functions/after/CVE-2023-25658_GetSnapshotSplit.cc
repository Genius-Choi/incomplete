Status SnapshotManager::GetSnapshotSplit(const GetSnapshotSplitRequest& request,
                                         GetSnapshotSplitResponse& response) {
  // TODO(mpcallanan): Validate the request.

  Tensor split;
  bool end_of_splits;
  TF_RETURN_IF_ERROR(split_providers_[request.source_index()]->GetNext(
      &split, &end_of_splits));

  Stream& stream = streams_[request.stream_index()];
  if (end_of_splits) {
    // TODO(mpcallanan): Handle doneness.
    response.set_end_of_splits(true);
    return OkStatus();
  }

  std::string split_path = SplitPath(
      path_, request.stream_index(), request.source_index(),
      stream.num_assigned_splits[request.source_index()], num_assigned_splits_);
  TF_RETURN_IF_ERROR(AtomicallyWriteTFRecord(split_path, split, env_));

  ++stream.num_assigned_splits[request.source_index()];
  ++num_assigned_splits_;

  split.AsProtoTensorContent(response.mutable_split());

  return OkStatus();
}
