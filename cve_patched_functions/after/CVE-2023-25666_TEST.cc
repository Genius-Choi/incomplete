TEST(SpectrogramOpTest, InvalidStride) {
  Scope root = Scope::NewRootScope();
  const int audio_size = 8;
  const int channel_size = 2;
  Tensor audio_tensor(DT_FLOAT, TensorShape({audio_size, channel_size}));
  test::FillValues<float>(
      &audio_tensor, {-1.0f, -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, -1.0f,
                      -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f});
  Output audio_const_op = Const(root.WithOpName("audio_const_op"),
                                Input::Initializer(audio_tensor));
  AudioSpectrogram spectrogram_op =
      AudioSpectrogram(root.WithOpName("spectrogram_op"), audio_const_op,
                       /*window_size=*/2, /*stride=*/0);
  EXPECT_THAT(root.status(),
              tsl::testing::StatusIs(tsl::error::Code::INVALID_ARGUMENT,
                                     ::testing::ContainsRegex("stride")));
}
