void AuthChecker::HttpFetch(
    const std::string &url,
    std::function<void(Status, std::string &&)> continuation) {
  std::shared_ptr<cloud_trace::CloudTraceSpan> fetch_span(
      CreateChildSpan(trace_span_.get(), "HttpFetch"));
  env_->LogDebug(std::string("http fetch: ") + url);
  TRACE(fetch_span) << "Http request URL: " << url;

  std::unique_ptr<HTTPRequest> request(
      new HTTPRequest([continuation, fetch_span](
                          Status status, std::map<std::string, std::string> &&,
                          std::string &&body) {
        TRACE(fetch_span) << "Http response status: " << status.ToString();
        continuation(status, std::move(body));
      }));
  if (!request) {
    continuation(Status(Code::INTERNAL, "Out of memory"), "");
    return;
  }

  request->set_method("GET").set_url(url);
  env_->RunHTTPRequest(std::move(request));
}
