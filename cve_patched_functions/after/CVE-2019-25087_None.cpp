Resource* ResourceHost::getResource(std::string uri) {
	if (uri.length() > 255 || uri.empty())
		return NULL;

	if (uri.find("../") != std::string::npos)
		return NULL;

	std::string path = baseDiskPath + uri;
	Resource* res = NULL;

	// Gather info about the resource with stat: determine if it's a directory or file, check if its owned by group/user, modify times
	struct stat sb;
	if (stat(path.c_str(), &sb) == -1)
		return NULL; // File not found

	// Determine file type
	if (sb.st_mode & S_IFDIR) { // Directory
		// Read a directory list or index into memory from FS
		res = readDirectory(path, sb);
	} else if (sb.st_mode & S_IFREG) { // Regular file
		// Attempt to load the file into memory from the FS
		res = readFile(path, sb);
	} else { // Something else..device, socket, symlink
		return NULL;
	}

	return res;
}
