void IniSection::initValue (const string&key,const string&val,const string&comment,int rb)
{
    string k = ip->changeCase (key);
    IniEntry e;
    IniEntryIdxIterator exi;
    if (!ip->repeatNames () && (exi = ivalues.find (k)) != ivalues.end ())
	{
	    IniIterator ei = exi->second;
	    // update existing value
	    // copy the old value
	    e = ei->e ();
	    // remove and unindex the old value
	    // This means that container needs to be a list, not vector,
	    // so that iterators kept in ivalues are still valid
	    container.erase (ei);
	    ivalues.erase (exi);
	}
    else
	{
	    // nothing
	}
    // create new value
    e.init (k, comment, rb, val);
    // insert it
    IniContainerElement ce (e);
    container.push_back (ce);
    // index it
    ivalues.insert (IniEntryIndex::value_type (k, --container.end ()));

}
