    void audio_io_osx::update_rec_delay() {
        ++rec_delay_measurement_counter_;
        
        if (rec_delay_measurement_counter_ >= 100) {
            rec_delay_HWandOS_ = 0;
            
            // Get audio unit latency.
            Float64 f64(0);
            UInt32 size = sizeof(f64);
            OSStatus result = AudioUnitGetProperty(au_rec_,
                                                   kAudioUnitProperty_Latency,
                                                   kAudioUnitScope_Global,
                                                   0,
                                                   &f64,
                                                   &size);
            
            if (0 != result) {
                error("audio_io_osx: error AU latency (result=%d) \n", result);
            }
            
            rec_delay_HWandOS_ += static_cast<int>(f64 * 1000000);
            
            // Get input audio device latency.
            AudioObjectPropertyAddress property_address = {
                kAudioDevicePropertyLatency,
                kAudioDevicePropertyScopeInput,
                kAudioObjectPropertyElementMaster
            };
            UInt32 device_latency_frames = 0;
            size = sizeof(device_latency_frames);
            result = AudioObjectGetPropertyData(input_device_id_,
                                                &property_address,
                                                0,
                                                NULL,
                                                &size,
                                                &device_latency_frames);
            
            if (0 != result) {
                error("audio_io_osx: error Device latency (result=%d) \n", result);
            }
            
            if(!rec_fs_hz_){
                printf("rec_fs_hz_ = %d \n" , rec_fs_hz_);
            }
                
            rec_delay_HWandOS_ += static_cast<int>((device_latency_frames * 1000000) / rec_fs_hz_);
            
            // To ms
            rec_delay_HWandOS_ = (uint32_t)(((int32_t)rec_delay_HWandOS_ - 500) / 1000); // Below 0.5 ms this will wrap around because of using unsigned
            
            // Reset counter
            rec_delay_measurement_counter_ = 0;
        }
        
        uint32_t tmp_rec_latency_ms;
        {
            tmp_rec_latency_ms = rec_latency_ms_;
        }
        
        rec_delay_ = rec_delay_HWandOS_ + tmp_rec_latency_ms;
        
        // Don't count the one next 10 ms to be sent, then convert samples => ms
        const uint32_t noSamp10ms = rec_fs_hz_ / 100;
        if (rec_buffer_total_size_ > noSamp10ms) {
            debug("audio_io_osx: error audio device mac AUHAL has buffered %d samples ", rec_buffer_total_size_ - noSamp10ms);
            rec_delay_ += (rec_buffer_total_size_ - noSamp10ms) / (rec_fs_hz_ / 1000);
        }
    }
