vector <string> getBLSPubKey(const char *encryptedKeyHex) {

    CHECK_STATE(encryptedKeyHex);

    vector<char> errMsg1(BUF_LEN, 0);

    int errStatus = 0;
    uint64_t decKeyLen = 0;

    SAFE_UINT8_BUF(encrKey, BUF_LEN);
    if (!hex2carray(encryptedKeyHex, &decKeyLen, encrKey, BUF_LEN)) {
        throw SGXException(INVALID_HEX, "Invalid encryptedKeyHex");
    }

    SAFE_CHAR_BUF(pubKey,320)

    sgx_status_t status = trustedGetBlsPubKeyAES(eid, &errStatus, errMsg1.data(), encrKey, decKeyLen, pubKey);
    HANDLE_TRUSTED_FUNCTION_ERROR(status, errStatus, errMsg1.data());

    vector <string> pubKeyVect = splitString(pubKey, ':');

    spdlog::debug("pub key is ");
    for (int i = 0; i < 4; i++)
        spdlog::debug("{}", pubKeyVect.at(i));

    return pubKeyVect;
}
