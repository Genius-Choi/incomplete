void CoreNetwork::socketInitialized()
{
    CoreIdentity *identity = identityPtr();
    if (!identity) {
        qCritical() << "Identity invalid!";
        disconnectFromIrc();
        return;
    }

    emit socketOpen(identity, localAddress(), localPort(), peerAddress(), peerPort());

    Server server = usedServer();
#ifdef HAVE_SSL
    if (server.useSsl && !socket.isEncrypted())
        return;
#endif
    socket.setSocketOption(QAbstractSocket::KeepAliveOption, true);

    emit socketInitialized(identity, localAddress(), localPort(), peerAddress(), peerPort());

    // TokenBucket to avoid sending too much at once
    _messageDelay = 2200;  // this seems to be a safe value (2.2 seconds delay)
    _burstSize = 5;
    _tokenBucket = _burstSize; // init with a full bucket
    _tokenBucketTimer.start(_messageDelay);

    if (networkInfo().useSasl) {
        putRawLine(serverEncode(QString("CAP REQ :sasl")));
    }
    if (!server.password.isEmpty()) {
        putRawLine(serverEncode(QString("PASS %1").arg(server.password)));
    }
    QString nick;
    if (identity->nicks().isEmpty()) {
        nick = "quassel";
        qWarning() << "CoreNetwork::socketInitialized(): no nicks supplied for identity Id" << identity->id();
    }
    else {
        nick = identity->nicks()[0];
    }
    putRawLine(serverEncode(QString("NICK :%1").arg(nick)));
    putRawLine(serverEncode(QString("USER %1 8 * :%2").arg(identity->ident(), identity->realName())));
}
