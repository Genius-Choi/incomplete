bool IsHostMemoryArg(const EagerOperation& op, const NodeDef* node_def,
                     const Device* op_device, const KernelDef* kernel_def,
                     const int port_id) {
  if (op.is_function()) return false;
  if (node_def == nullptr) return false;
  if (kernel_def == nullptr || op_device == nullptr) return false;
  const auto& host_memory_args = kernel_def->host_memory_arg();
  const OpDef& op_def = OpRegistry::Global()->LookUp(op.Name())->op_def;
  const int arg_id = OpPortIdToArgId(*node_def, op_def.input_arg(), port_id);
  return std::find(host_memory_args.begin(), host_memory_args.end(),
                   op_def.input_arg(arg_id).name()) != host_memory_args.end();
}
