static pj_status_t pack_amr(and_media_private_t *codec_data, unsigned nframes,
			    void *pkt, pj_size_t *pkt_size,
			    pj_size_t max_pkt_size)
{
    enum {MAX_FRAMES_PER_PACKET = PJMEDIA_MAX_FRAME_DURATION_MS / 20};

    pjmedia_frame frames[MAX_FRAMES_PER_PACKET];
    pj_uint8_t *p; /* Read cursor */
    pjmedia_codec_amr_pack_setting *setting;
    unsigned i;
    pj_status_t status;

    setting = &((amr_settings_t*)codec_data->codec_setting)->enc_setting;

    /* Align pkt buf right */
    p = (pj_uint8_t*)pkt + max_pkt_size - *pkt_size;
    pj_memmove(p, pkt, *pkt_size);

    /* Get frames */
    for (i = 0; i < nframes; ++i) {
	pjmedia_codec_amr_bit_info *info = (pjmedia_codec_amr_bit_info*)
					    &frames[i].bit_info;
	pj_bzero(info, sizeof(*info));
	info->frame_type = (pj_uint8_t)((*p >> 3) & 0x0F);
	info->good_quality = (pj_uint8_t)((*p >> 2) & 0x01);
	info->mode = ((amr_settings_t*)codec_data->codec_setting)->enc_mode;
	info->start_bit = 0;
	frames[i].buf = p + 1;
        if (setting->amr_nb) {
            frames[i].size = (info->frame_type <= 8)?
                             pjmedia_codec_amrnb_framelen[info->frame_type] : 0;
        } else {
            frames[i].size = (info->frame_type <= 9)?
                             pjmedia_codec_amrwb_framelen[info->frame_type] : 0;
        }
	p += frames[i].size + 1;
    }
    /* Pack */
    *pkt_size = max_pkt_size;
    status = pjmedia_codec_amr_pack(frames, nframes, setting, pkt, pkt_size);

    return status;
}
