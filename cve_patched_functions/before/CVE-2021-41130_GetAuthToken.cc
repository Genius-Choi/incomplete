void AuthChecker::GetAuthToken() {
  Request *r = context_->request();
  // IAP header is of format "X-Goog-Iap-Jwt-Assertion": "eyJhbG...". No
  // "Bearer" prefix is needed.
  if (r->FindHeader(kAuthHeaderIAP, &auth_token_)) {
    return;
  }

  std::string auth_header;
  if (!r->FindHeader(kAuthHeader, &auth_header)) {
    // When authorization header is missing, check query parameter.
    r->FindQuery(kAccessTokenName, &auth_token_);
    return;
  }

  static const size_t bearer_len = sizeof(kBearer) - 1;
  if (auth_header.size() <= bearer_len ||
      auth_header.compare(0, bearer_len, kBearer) != 0) {
    // Authorization header is not long enough, or authorization header does
    // not begin with "Bearer ", set auth_token_ to the whole string.
    auth_token_ = auth_header;
    return;
  }

  auth_token_ = auth_header.substr(bearer_len);
}
