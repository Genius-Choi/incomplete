int IniSection::setAllDoIt (const YCPMap &in)
{
    int ret = IniBase::setAllDoIt (in);
    if (ret != 0)
    {
	return ret;
    }

    string kind;
    if (!getMapString (in, "kind", kind) || kind != "section")
    {
	y2error ("Kind should be 'section'");
	return -1;
    }

    if (!getMapInteger (in, "file", rewrite_by))
    {
	return -1;
    }

    YCPValue v = in->value (YCPString ("value"));
    if (v.isNull () || !v->isList ())
    {
	y2error ("Missing in Write (.all): %s", "value");
	return -1;
    }
    YCPList l = v->asList ();

    container.clear ();		// bye, old data
    int i, len = l->size ();
    for (i = 0; i < len; ++i)
    {
	YCPValue item = l->value (i);
	if (!item->isMap ())
	{
	    y2error ("Item in Write (.all) not a map");
	    ret = -1;
	    break;
	}
	YCPMap mitem = item->asMap ();

	if (!getMapString (mitem, "kind", kind))
	{
	    y2error ("Item in Write (.all) of unspecified kind");
	    ret = -1;
	    break;
	}

	if (kind == "section")
	{
	    // check whether we are deleting a file-section
	    YCPValue mv = mitem->value (YCPString ("value"));
	    if (mv->isVoid ())
	    {
		string del_name;
		int del_rb;		
		if (!getMapString (mitem, "name", del_name) ||
		    !getMapInteger (mitem, "file", del_rb))
		{
		    ret = -1;
		    break;
		}
		const_cast<IniParser *>(ip)->deleted_sections.insert (
		    ip->getFileName (del_name, del_rb)
		    );
	    }
	    else
	    {
		IniSection s (ip);
		ret = s.setAllDoIt (mitem);
		if (ret != 0)
		{
		    break;
		}
		container.push_back (IniContainerElement (s));
	    }
	}
	else if (kind == "value")
	{
	    IniEntry e;
// FIXME ret =
	    e.setAllDoIt (mitem);
	    if (ret != 0)
	    {
		break;
	    }
	    container.push_back (IniContainerElement (e));
	}
	else
	{
	    y2error ("Item in Write (.all) of unrecognized kind %s", kind.c_str ());
	    ret = -1;
	    break;
	}
    }

    reindex ();
    return ret;
}
