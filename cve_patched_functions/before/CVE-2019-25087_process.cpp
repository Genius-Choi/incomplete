void HTTPServer::process() {
	int nev = 0; // Number of changed events returned by kevent
	Client* cl = NULL;
	struct kevent read_kev, write_kev;

	while (canRun) {
		// Get a list of changed socket descriptors with a read event triggered in evList
		// Timeout set in the header
		nev = kevent(kqfd, NULL, 0, evList, QUEUE_SIZE, &kqTimeout);

		if (nev <= 0)
			continue;

		// Loop through only the sockets that have changed in the evList array
		for (int i = 0; i < nev; i++) {
			if (evList[i].ident == (unsigned int)listenSocket) { // A client is waiting to connect
				acceptConnection();
			} else { // Client descriptor has triggered an event
				cl = getClient(evList[i].ident); // ident contains the clients socket descriptor
				if (cl == NULL) {
					std::cout << "Could not find client" << std::endl;
					continue;
				}

				// Client wants to disconnect
				if (evList[i].flags & EV_EOF) {
					disconnectClient(cl);
					continue;
				}

				// Clear kevent structures
				memset(&read_kev, 0, sizeof(struct kevent));
				memset(&write_kev, 0, sizeof(struct kevent));

				if (evList[i].filter == EVFILT_READ) {
					//std::cout << "read filter " << evList[i].data << " bytes available" << std::endl;
					// Read and process any pending data on the wire
					readClient(cl, evList[i].data); // data contains the number of bytes waiting to be read

					// Have kqueue disable tracking of READ events and enable tracking of WRITE events
					updateEvent(evList[i].ident, EVFILT_READ, EV_DISABLE, 0, 0, NULL);
					updateEvent(evList[i].ident, EVFILT_WRITE, EV_ENABLE, 0, 0, NULL);
				} else if (evList[i].filter == EVFILT_WRITE) {
					//std::cout << "write filter with " << evList[i].data << " bytes available" << std::endl;
					// Write any pending data to the client - writeClient returns true if there is additional data to send in the client queue
					if (!writeClient(cl, evList[i].data)) { // data contains number of bytes that can be written
						//std::cout << "switch back to read filter" << std::endl;
						// If theres nothing more to send, Have kqueue disable tracking of WRITE events and enable tracking of READ events
						updateEvent(evList[i].ident, EVFILT_READ, EV_ENABLE, 0, 0, NULL);
						updateEvent(evList[i].ident, EVFILT_WRITE, EV_DISABLE, 0, 0, NULL);
					}
				}
			}
		} // Event loop
	} // canRun
}
