void ConnectionImpl::StreamImpl::encodeMetadata(const MetadataMapVector& metadata_map_vector) {
  ASSERT(parent_.allow_metadata_);

  getMetadataEncoder().createPayload(metadata_map_vector);

  // Estimates the number of frames to generate, and breaks the while loop when the size is reached
  // in case submitting succeeds and packing fails, and we don't get error from packing.
  const size_t frame_count = metadata_encoder_->frameCountUpperBound();
  size_t count = 0;
  // Keep submitting extension frames if there is payload left in the encoder.
  while (metadata_encoder_->hasNextFrame() && count++ <= frame_count) {
    submitMetadata();
    parent_.sendPendingFrames();
  }

  ASSERT(!metadata_encoder_->hasNextFrame());
}
