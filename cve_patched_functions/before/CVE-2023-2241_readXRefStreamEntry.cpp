void PdfXRefStreamParserObject::readXRefStreamEntry(PdfXRefEntry& entry, char* buffer, const int64_t wArray[W_ARRAY_SIZE])
{
    uint64_t entryRaw[W_ARRAY_SIZE];
    for (unsigned i = 0; i < W_ARRAY_SIZE; i++)
    {
        if (wArray[i] > W_MAX_BYTES)
        {
            PoDoFo::LogMessage(PdfLogSeverity::Error,
                "The XRef stream dictionary has an entry in /W of size {}. The maximum supported value is {}",
                wArray[i], W_MAX_BYTES);

            PODOFO_RAISE_ERROR(PdfErrorCode::InvalidXRefStream);
        }

        entryRaw[i] = 0;
        for (int64_t z = W_MAX_BYTES - wArray[i]; z < W_MAX_BYTES; z++)
        {
            entryRaw[i] = (entryRaw[i] << 8) + static_cast<unsigned char>(*buffer);
            buffer++;
        }
    }

    entry.Parsed = true;

    // TABLE 3.15 Additional entries specific to a cross - reference stream dictionary
    // /W array: "If the first element is zero, the type field is not present, and it defaults to type 1"
    uint64_t type;
    if (wArray[0] == 0)
        type = 1;
    else
        type = entryRaw[0]; // nData[0] contains the type information of this entry

    switch (type)
    {
        // TABLE 3.16 Entries in a cross-reference stream
        case 0:
            // a free object
            entry.ObjectNumber = entryRaw[1];
            entry.Generation = (uint32_t)entryRaw[2];
            entry.Type = XRefEntryType::Free;
            break;
        case 1:
            // normal uncompressed object
            entry.Offset = entryRaw[1];
            entry.Generation = (uint32_t)entryRaw[2];
            entry.Type = XRefEntryType::InUse;
            break;
        case 2:
            // object that is part of an object stream
            entry.ObjectNumber = entryRaw[1]; // object number of the stream
            entry.Index = (uint32_t)entryRaw[2]; // index in the object stream
            entry.Type = XRefEntryType::Compressed;
            break;
        default:
            PODOFO_RAISE_ERROR(PdfErrorCode::InvalidXRefType);
    }
}
