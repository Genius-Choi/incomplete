diff --git a/includes/CreateWiki/SpecialCreateWiki.php b/includes/CreateWiki/SpecialCreateWiki.php
index 6bdd5f5f7c..4043620006 100644
--- a/includes/CreateWiki/SpecialCreateWiki.php
+++ b/includes/CreateWiki/SpecialCreateWiki.php
@@ -6,6 +6,7 @@
 use FormSpecialPage;
 use Html;
 use MediaWiki\MediaWikiServices;
+use Miraheze\CreateWiki\EntryPointUtils;
 use Miraheze\CreateWiki\Hooks\CreateWikiHookRunner;
 use Miraheze\CreateWiki\WikiManager;
 
@@ -23,6 +24,16 @@ public function __construct( CreateWikiHookRunner $hookRunner ) {
 		$this->hookRunner = $hookRunner;
 	}
 
+	public function execute( $par ) {
+		if ( !EntryPointUtils::currentWikiIsGlobalWiki() ) {
+			return $this->getOutput()->addHTML(
+				Html::errorBox( $this->msg( 'createwiki-wikinotglobalwiki' )->escaped() )
+			);
+		}
+
+		parent::execute( $par );
+	}
+
 	protected function getFormFields() {
 		$par = $this->par;
 		$request = $this->getRequest();
diff --git a/includes/EntryPointUtils.php b/includes/EntryPointUtils.php
new file mode 100644
index 0000000000..aee783d154
--- /dev/null
+++ b/includes/EntryPointUtils.php
@@ -0,0 +1,17 @@
+<?php
+namespace Miraheze\CreateWiki;
+
+use MediaWiki\MediaWikiServices;
+use MediaWiki\WikiMap\WikiMap;
+
+class EntryPointUtils {
+
+	public static function currentWikiIsGlobalWiki(): bool {
+		$config = MediaWikiServices::getInstance()->getConfigFactory()->makeConfig( 'CreateWiki' );
+		if ( $config->get( 'CreateWikiGlobalWiki' ) === WikiMap::getCurrentWikiId() ) {
+			return true;
+		} else {
+			return false;
+		}
+	}
+}
diff --git a/includes/RequestWiki/Handler/RestWikiRequest.php b/includes/RequestWiki/Handler/RestWikiRequest.php
index 2e1199adbc..1f33112782 100644
--- a/includes/RequestWiki/Handler/RestWikiRequest.php
+++ b/includes/RequestWiki/Handler/RestWikiRequest.php
@@ -6,6 +6,7 @@
 use MediaWiki\Config\ConfigFactory;
 use MediaWiki\Rest\SimpleHandler;
 use MediaWiki\User\UserFactory;
+use Miraheze\CreateWiki\RestUtils;
 use Wikimedia\Message\MessageValue;
 use Wikimedia\ParamValidator\ParamValidator;
 use Wikimedia\Rdbms\ILBFactory;
@@ -41,9 +42,7 @@ public function __construct(
 	}
 
 	public function run( $requestID ) {
-		if ( $this->config->get( 'CreateWikiDisableRESTAPI' ) ) {
-			return $this->getResponseFactory()->createLocalizedHttpError( 403, new MessageValue( 'createwiki-rest-disabled' ) );
-		}
+		RestUtils::checkEnv();
 		// Should be kept in sync with RequestWikiRequestViewer's $visibilityConds
 		$visibilityConds = [
 			0 => 'public',
diff --git a/includes/RequestWiki/Handler/RestWikiRequestsByUser.php b/includes/RequestWiki/Handler/RestWikiRequestsByUser.php
index 423e146f8d..3d8bbeade9 100644
--- a/includes/RequestWiki/Handler/RestWikiRequestsByUser.php
+++ b/includes/RequestWiki/Handler/RestWikiRequestsByUser.php
@@ -6,6 +6,7 @@
 use MediaWiki\Config\ConfigFactory;
 use MediaWiki\Rest\SimpleHandler;
 use MediaWiki\User\UserFactory;
+use Miraheze\CreateWiki\RestUtils;
 use Wikimedia\Message\MessageValue;
 use Wikimedia\ParamValidator\ParamValidator;
 use Wikimedia\Rdbms\ILBFactory;
@@ -41,9 +42,7 @@ public function __construct(
 	}
 
 	public function run( $userName ) {
-		if ( $this->config->get( 'CreateWikiDisableRESTAPI' ) ) {
-			return $this->getResponseFactory()->createLocalizedHttpError( 403, new MessageValue( 'createwiki-rest-disabled' ) );
-		}
+		RestUtils::checkEnv();
 		// Should be kept in sync with RequestWikiRequestViewer's $visibilityConds
 		$visibilityConds = [
 			0 => 'public',
diff --git a/includes/RequestWiki/SpecialRequestWiki.php b/includes/RequestWiki/SpecialRequestWiki.php
index 8c11efa1de..7fbd974e76 100644
--- a/includes/RequestWiki/SpecialRequestWiki.php
+++ b/includes/RequestWiki/SpecialRequestWiki.php
@@ -12,6 +12,7 @@
 use MediaWiki\MediaWikiServices;
 use Miraheze\CreateWiki\CreateWikiRegexConstraint;
 use Miraheze\CreateWiki\Hooks\CreateWikiHookRunner;
+use Miraheze\CreateWiki\EntryPointUtils;
 use Title;
 
 class SpecialRequestWiki extends FormSpecialPage {
@@ -29,6 +30,12 @@ public function __construct( CreateWikiHookRunner $hookRunner ) {
 	}
 
 	public function execute( $par ) {
+		if ( !EntryPointUtils::currentWikiIsGlobalWiki() ) {
+			return $this->getOutput()->addHTML(
+				Html::errorBox( $this->msg( 'createwiki-wikinotglobalwiki' )->escaped() )
+			);
+		}
+
 		$request = $this->getRequest();
 		$out = $this->getOutput();
 
diff --git a/includes/RequestWiki/SpecialRequestWikiQueue.php b/includes/RequestWiki/SpecialRequestWikiQueue.php
index 27dac4e764..a102c19928 100644
--- a/includes/RequestWiki/SpecialRequestWikiQueue.php
+++ b/includes/RequestWiki/SpecialRequestWikiQueue.php
@@ -2,8 +2,10 @@
 
 namespace Miraheze\CreateWiki\RequestWiki;
 
+use Html;
 use HTMLForm;
 use Miraheze\CreateWiki\Hooks\CreateWikiHookRunner;
+use Miraheze\CreateWiki\EntryPointUtils;
 use SpecialPage;
 
 class SpecialRequestWikiQueue extends SpecialPage {
@@ -18,6 +20,12 @@ public function __construct( CreateWikiHookRunner $hookRunner ) {
 	}
 
 	public function execute( $par ) {
+		if ( !EntryPointUtils::currentWikiIsGlobalWiki() ) {
+			return $this->getOutput()->addHTML(
+				Html::errorBox( $this->msg( 'createwiki-wikinotglobalwiki' )->escaped() )
+			);
+		}
+
 		$this->setHeaders();
 
 		if ( $par === null || $par === '' ) {
diff --git a/includes/RestUtils.php b/includes/RestUtils.php
new file mode 100644
index 0000000000..9197814f9a
--- /dev/null
+++ b/includes/RestUtils.php
@@ -0,0 +1,24 @@
+<?php
+
+namespace Miraheze\CreateWiki;
+
+use MediaWiki\MediaWikiServices;
+use MediaWiki\Rest\LocalizedHttpException;
+use Miraheze\CreateWiki\EntryPointUtils;
+use Wikimedia\Message\MessageValue;
+
+class RestUtils {
+
+	/*
+	 * Called from the REST handlers, checks that the current wiki is the global wiki and that the REST API is not disabled
+	 */
+	public static function checkEnv() {
+		if ( !EntryPointUtils::currentWikiIsGlobalWiki() ) {
+			throw new LocalizedHttpException( new MessageValue( 'createwiki-wikinotglobalwiki' ), 403 );
+		}
+		$config = MediaWikiServices::getInstance()->getConfigFactory()->makeConfig( 'CreateWiki' );
+		if ( $config->get( 'CreateWikiDisableRESTAPI' ) ) {
+			throw new LocalizedHttpException( new MessageValue( 'createwiki-rest-disabled' ), 403 );
+		}
+	}
+}
diff --git a/tests/phpunit/SpecialRequestWikiTest.php b/tests/phpunit/SpecialRequestWikiTest.php
index 40190d5ed3..c2cdaf2b40 100644
--- a/tests/phpunit/SpecialRequestWikiTest.php
+++ b/tests/phpunit/SpecialRequestWikiTest.php
@@ -5,6 +5,7 @@
 use DerivativeContext;
 use ErrorPageError;
 use MediaWikiIntegrationTestCase;
+use MediaWiki\WikiMap\WikiMap;
 use Miraheze\CreateWiki\Hooks\CreateWikiHookRunner;
 use Miraheze\CreateWiki\RequestWiki\SpecialRequestWiki;
 use SpecialPage;
@@ -33,6 +34,7 @@ public function testConstructor() {
 	 * @covers ::execute
 	 */
 	public function testExecuteNotLoggedIn() {
+		$this->setMwGlobals( 'wgCreateWikiGlobalWiki', WikiMap::getCurrentWikiId() );
 		$hookRunner = $this->createMock( CreateWikiHookRunner::class );
 		$specialRequestWiki = new SpecialRequestWiki( $hookRunner );
 
@@ -70,6 +72,7 @@ public function testExecuteLoggedInEmailConfirmed() {
 	 * @covers ::execute
 	 */
 	public function testExecuteLoggedInEmailNotConfirmed() {
+		$this->setMwGlobals( 'wgCreateWikiGlobalWiki', WikiMap::getCurrentWikiId() );
 		$this->setGroupPermissions( 'user', 'requestwiki', true );
 
 		$hookRunner = $this->createMock( CreateWikiHookRunner::class );
