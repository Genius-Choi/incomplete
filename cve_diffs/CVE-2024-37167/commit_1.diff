diff --git a/plugins/agiledashboard/include/AgileDashboard/Milestone/Backlog/BacklogItemCollectionFactory.class.php b/plugins/agiledashboard/include/AgileDashboard/Milestone/Backlog/BacklogItemCollectionFactory.class.php
index c5dd98616bd..4c9ea4e4e63 100644
--- a/plugins/agiledashboard/include/AgileDashboard/Milestone/Backlog/BacklogItemCollectionFactory.class.php
+++ b/plugins/agiledashboard/include/AgileDashboard/Milestone/Backlog/BacklogItemCollectionFactory.class.php
@@ -25,6 +25,7 @@
 use Tuleap\AgileDashboard\ExplicitBacklog\ArtifactsInExplicitBacklogDao;
 use Tuleap\AgileDashboard\RemainingEffortValueRetriever;
 use Tuleap\Tracker\Artifact\Artifact;
+use Tuleap\Tracker\Permission\RetrieveUserPermissionOnArtifacts;
 
 /**
  * I build collections of IBacklogItem
@@ -95,6 +96,7 @@ public function __construct(
         RemainingEffortValueRetriever $remaining_effort_value_retriever,
         ArtifactsInExplicitBacklogDao $artifacts_in_explicit_backlog_dao,
         Tracker_Artifact_PriorityDao $artifact_priority_dao,
+        private readonly RetrieveUserPermissionOnArtifacts $user_permission_on_artifacts_retriever,
     ) {
         $this->dao                               = $dao;
         $this->artifact_factory                  = $artifact_factory;
@@ -185,10 +187,16 @@ private function buildBacklogItemCollection(
         Planning_Milestone $milestone,
         ?string $redirection_url,
     ): AgileDashboard_Milestone_Backlog_IBacklogItemCollection {
+        $permissions_on_items = $this->user_permission_on_artifacts_retriever->retrieveUserPermissionOnArtifacts(
+            $user,
+            iterator_to_array($item_collection),
+            \Tuleap\Tracker\Permission\ArtifactPermissionType::PERMISSION_VIEW
+        );
+
         $artifacts        = [];
         $backlog_item_ids = [];
 
-        foreach ($item_collection as $artifact) {
+        foreach ($permissions_on_items->allowed as $artifact) {
             $artifacts[$artifact->getId()] = $artifact;
             $backlog_item_ids[]            = $artifact->getId();
         }
@@ -234,20 +242,17 @@ public function getUnplannedOpenCollection(
         $redirect_to_self,
     ): AgileDashboard_Milestone_Backlog_IBacklogItemCollection {
         $artifacts         = [];
-        $backlog_item_ids  = [];
         $sub_milestone_ids = $this->getSubmilestoneIds($user, $milestone);
 
         $item_collection = $backlog->getOpenUnplannedArtifacts($user, $sub_milestone_ids);
         foreach ($item_collection as $artifact) {
             $artifacts[$artifact->getId()] = $artifact;
-            $backlog_item_ids[]            = $artifact->getId();
         }
 
         $collection = $this->buildTopBacklogCollection(
             $user,
             $milestone,
             $redirect_to_self,
-            $backlog_item_ids,
             $artifacts
         );
         $collection->setTotalAvaialableSize($item_collection->getTotalAvaialableSize());
@@ -713,22 +718,19 @@ public function getExplicitTopBacklogItems(
         );
         $collection_total_size = $this->artifacts_in_explicit_backlog_dao->foundRows();
 
-        $backlog_item_ids = [];
-        $artifacts        = [];
+        $artifacts = [];
         foreach ($rows as $row) {
             $artifact = $this->artifact_factory->getArtifactById($row['artifact_id']);
             if ($artifact === null) {
                 continue;
             }
             $artifacts[$artifact->getId()] = $artifact;
-            $backlog_item_ids[]            = $artifact->getId();
         }
 
         $collection = $this->buildTopBacklogCollection(
             $user,
             $milestone,
             $redirect_to_self,
-            $backlog_item_ids,
             $artifacts
         );
         $collection->setTotalAvaialableSize($collection_total_size);
@@ -736,13 +738,26 @@ public function getExplicitTopBacklogItems(
         return $collection;
     }
 
+    /**
+     * @param Artifact[] $open_artifacts
+     */
     private function buildTopBacklogCollection(
         PFUser $user,
         Planning_Milestone $milestone,
         ?string $redirection_url,
-        array $backlog_item_ids,
         array $open_artifacts,
     ): AgileDashboard_Milestone_Backlog_IBacklogItemCollection {
+        $permissions_on_items = $this->user_permission_on_artifacts_retriever->retrieveUserPermissionOnArtifacts(
+            $user,
+            $open_artifacts,
+            \Tuleap\Tracker\Permission\ArtifactPermissionType::PERMISSION_VIEW,
+        );
+
+        $backlog_item_ids = [];
+        foreach ($permissions_on_items->allowed as $artifact) {
+            $backlog_item_ids[] = $artifact->getId();
+        }
+
         $parents   = $this->getParentArtifacts($milestone, $user, $backlog_item_ids);
         $semantics = $this->getArtifactsSemantics($user, $milestone, $backlog_item_ids, $open_artifacts);
 
@@ -753,7 +768,7 @@ private function buildTopBacklogCollection(
         }
 
         $collection = $this->backlog_item_builder->getCollection();
-        foreach ($open_artifacts as $artifact) {
+        foreach ($permissions_on_items->allowed as $artifact) {
             $artifact_id = $artifact->getId();
 
             if (! isset($semantics[$artifact_id])) {
diff --git a/plugins/agiledashboard/include/AgileDashboard/REST/v1/ContentForMiletoneProvider.php b/plugins/agiledashboard/include/AgileDashboard/REST/v1/ContentForMiletoneProvider.php
index 90f020780a0..4d6a1c24653 100644
--- a/plugins/agiledashboard/include/AgileDashboard/REST/v1/ContentForMiletoneProvider.php
+++ b/plugins/agiledashboard/include/AgileDashboard/REST/v1/ContentForMiletoneProvider.php
@@ -75,7 +75,8 @@ public static function build(Planning_MilestoneFactory $milestone_factory): self
                     Tracker_FormElementFactory::instance()
                 ),
                 new ArtifactsInExplicitBacklogDao(),
-                new Tracker_Artifact_PriorityDao()
+                new Tracker_Artifact_PriorityDao(),
+                \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
             )
         );
     }
diff --git a/plugins/agiledashboard/include/AgileDashboard/REST/v1/MilestoneResource.class.php b/plugins/agiledashboard/include/AgileDashboard/REST/v1/MilestoneResource.class.php
index 98bb4715c4e..d01af692d5a 100644
--- a/plugins/agiledashboard/include/AgileDashboard/REST/v1/MilestoneResource.class.php
+++ b/plugins/agiledashboard/include/AgileDashboard/REST/v1/MilestoneResource.class.php
@@ -160,7 +160,8 @@ public function __construct()
             new AgileDashboard_Milestone_Backlog_BacklogItemBuilder(),
             new RemainingEffortValueRetriever(Tracker_FormElementFactory::instance()),
             new ArtifactsInExplicitBacklogDao(),
-            new Tracker_Artifact_PriorityDao()
+            new Tracker_Artifact_PriorityDao(),
+            \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
         );
 
         $this->milestone_validator = new MilestoneResourceValidator(
diff --git a/plugins/agiledashboard/include/AgileDashboard/REST/v1/ProjectBacklogResource.class.php b/plugins/agiledashboard/include/AgileDashboard/REST/v1/ProjectBacklogResource.class.php
index fcca17f682d..da705c5e240 100644
--- a/plugins/agiledashboard/include/AgileDashboard/REST/v1/ProjectBacklogResource.class.php
+++ b/plugins/agiledashboard/include/AgileDashboard/REST/v1/ProjectBacklogResource.class.php
@@ -119,7 +119,8 @@ public function __construct()
                 $tracker_form_element_factory
             ),
             new ArtifactsInExplicitBacklogDao(),
-            new Tracker_Artifact_PriorityDao()
+            new Tracker_Artifact_PriorityDao(),
+            \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
         );
 
         $this->milestone_validator = new MilestoneResourceValidator(
diff --git a/plugins/agiledashboard/include/AgileDashboard/REST/v2/ProjectBacklogResource.class.php b/plugins/agiledashboard/include/AgileDashboard/REST/v2/ProjectBacklogResource.class.php
index a61f1c3c089..3d99c2f83fe 100644
--- a/plugins/agiledashboard/include/AgileDashboard/REST/v2/ProjectBacklogResource.class.php
+++ b/plugins/agiledashboard/include/AgileDashboard/REST/v2/ProjectBacklogResource.class.php
@@ -93,7 +93,8 @@ public function __construct()
                 $tracker_form_element_factory
             ),
             new ArtifactsInExplicitBacklogDao(),
-            new \Tracker_Artifact_PriorityDao()
+            new \Tracker_Artifact_PriorityDao(),
+            \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
         );
 
         $this->parent_tracker_retriever = new ParentTrackerRetriever($this->planning_factory);
diff --git a/plugins/agiledashboard/include/agiledashboardPlugin.php b/plugins/agiledashboard/include/agiledashboardPlugin.php
index daff8d6184c..ad393b199d4 100644
--- a/plugins/agiledashboard/include/agiledashboardPlugin.php
+++ b/plugins/agiledashboard/include/agiledashboardPlugin.php
@@ -1335,7 +1335,8 @@ private function getBacklogItemCollectionFactory(
             $presenter_builder,
             new RemainingEffortValueRetriever($form_element_factory),
             new ArtifactsInExplicitBacklogDao(),
-            new Tracker_Artifact_PriorityDao()
+            new Tracker_Artifact_PriorityDao(),
+            \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
         );
     }
 
diff --git a/plugins/agiledashboard/tests/unit/AgileDashboard/Milestone/Backlog/AgileDashboard_Milestone_Backlog_BacklogItemCollectionFactoryTest.php b/plugins/agiledashboard/tests/unit/AgileDashboard/Milestone/Backlog/AgileDashboard_Milestone_Backlog_BacklogItemCollectionFactoryTest.php
index 9201aa077a5..7572db362a9 100644
--- a/plugins/agiledashboard/tests/unit/AgileDashboard/Milestone/Backlog/AgileDashboard_Milestone_Backlog_BacklogItemCollectionFactoryTest.php
+++ b/plugins/agiledashboard/tests/unit/AgileDashboard/Milestone/Backlog/AgileDashboard_Milestone_Backlog_BacklogItemCollectionFactoryTest.php
@@ -47,6 +47,7 @@
 use Tuleap\Tracker\Artifact\Artifact;
 use Tuleap\Tracker\Test\Builders\ArtifactTestBuilder;
 use Tuleap\Tracker\Test\Builders\TrackerTestBuilder;
+use Tuleap\Tracker\Test\Stub\Tracker\Permission\TrackersPermissionsPassthroughRetriever;
 
 final class AgileDashboard_Milestone_Backlog_BacklogItemCollectionFactoryTest extends TestCase //phpcs:ignore Squiz.Classes.ValidClassName.NotCamelCaps
 {
@@ -83,6 +84,7 @@ protected function setUp(): void
                 $this->remaining_effort_value_retriever,
                 $this->artifacts_in_explicit_backlog_dao,
                 $this->artifact_priority_dao,
+                new TrackersPermissionsPassthroughRetriever(),
             ])
             ->onlyMethods([
                 'userCanReadBacklogTitleField',
diff --git a/plugins/cardwall/include/Pane.class.php b/plugins/cardwall/include/Pane.class.php
index f3b20bdda00..f4e188f8eb2 100644
--- a/plugins/cardwall/include/Pane.class.php
+++ b/plugins/cardwall/include/Pane.class.php
@@ -225,7 +225,8 @@ private function getMilestoneContentItems()
                 $this->tracker_form_element_factory
             ),
             new ArtifactsInExplicitBacklogDao(),
-            new Tracker_Artifact_PriorityDao()
+            new Tracker_Artifact_PriorityDao(),
+            \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
         );
 
         $backlog_factory = new AgileDashboard_Milestone_Backlog_BacklogFactory(
diff --git a/plugins/projectmilestones/include/Widget/ProjectMilestonesPresenterBuilder.php b/plugins/projectmilestones/include/Widget/ProjectMilestonesPresenterBuilder.php
index df7879b529f..eb79d7b3502 100644
--- a/plugins/projectmilestones/include/Widget/ProjectMilestonesPresenterBuilder.php
+++ b/plugins/projectmilestones/include/Widget/ProjectMilestonesPresenterBuilder.php
@@ -169,7 +169,8 @@ public static function build(): ProjectMilestonesPresenterBuilder
                 new AgileDashboard_Milestone_Backlog_BacklogItemBuilder(),
                 new RemainingEffortValueRetriever(Tracker_FormElementFactory::instance()),
                 new ArtifactsInExplicitBacklogDao(),
-                new Tracker_Artifact_PriorityDao()
+                new Tracker_Artifact_PriorityDao(),
+                \Tuleap\Tracker\Permission\TrackersPermissionsRetriever::build(),
             ),
             $milestone_factory,
             new ExplicitBacklogDao(),
diff --git a/plugins/tracker/include/Tracker/Permission/TrackersPermissionsRetriever.php b/plugins/tracker/include/Tracker/Permission/TrackersPermissionsRetriever.php
index 0e316b42b12..86f857a250d 100644
--- a/plugins/tracker/include/Tracker/Permission/TrackersPermissionsRetriever.php
+++ b/plugins/tracker/include/Tracker/Permission/TrackersPermissionsRetriever.php
@@ -201,10 +201,6 @@ private function canUserSubmitArtifactFromTracker(PFUser $user, Tracker $tracker
 
     public function retrieveUserPermissionOnArtifacts(PFUser $user, array $artifacts, ArtifactPermissionType $permission): UserPermissionsOnItems
     {
-        if (! self::isEnabled()) {
-            throw new LogicException('Trackers permissions on tracker are disabled by feature flag.');
-        }
-
         if ($artifacts === []) {
             return new UserPermissionsOnItems($user, $permission, [], []);
         }
diff --git a/plugins/tracker/tests/unit/Stub/Tracker/Permission/TrackersPermissionsPassthroughRetriever.php b/plugins/tracker/tests/unit/Stub/Tracker/Permission/TrackersPermissionsPassthroughRetriever.php
new file mode 100644
index 00000000000..63a76c0c3f1
--- /dev/null
+++ b/plugins/tracker/tests/unit/Stub/Tracker/Permission/TrackersPermissionsPassthroughRetriever.php
@@ -0,0 +1,59 @@
+<?php
+/**
+ * Copyright (c) Enalean, 2024-Present. All Rights Reserved.
+ *
+ * This file is a part of Tuleap.
+ *
+ * Tuleap is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Tuleap is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+declare(strict_types=1);
+
+namespace Tuleap\Tracker\Test\Stub\Tracker\Permission;
+
+use PFUser;
+use Tuleap\Tracker\Permission\ArtifactPermissionType;
+use Tuleap\Tracker\Permission\FieldPermissionType;
+use Tuleap\Tracker\Permission\RetrieveUserPermissionOnArtifacts;
+use Tuleap\Tracker\Permission\RetrieveUserPermissionOnFields;
+use Tuleap\Tracker\Permission\RetrieveUserPermissionOnTrackers;
+use Tuleap\Tracker\Permission\TrackerPermissionType;
+use Tuleap\Tracker\Permission\UserPermissionsOnItems;
+
+final readonly class TrackersPermissionsPassthroughRetriever implements RetrieveUserPermissionOnFields, RetrieveUserPermissionOnTrackers, RetrieveUserPermissionOnArtifacts
+{
+    public function retrieveUserPermissionOnArtifacts(
+        PFUser $user,
+        array $artifacts,
+        ArtifactPermissionType $permission,
+    ): UserPermissionsOnItems {
+        return new UserPermissionsOnItems($user, $permission, $artifacts, []);
+    }
+
+    public function retrieveUserPermissionOnFields(
+        PFUser $user,
+        array $fields,
+        FieldPermissionType $permission,
+    ): UserPermissionsOnItems {
+        return new UserPermissionsOnItems($user, $permission, $fields, []);
+    }
+
+    public function retrieveUserPermissionOnTrackers(
+        PFUser $user,
+        array $trackers,
+        TrackerPermissionType $permission,
+    ): UserPermissionsOnItems {
+        return new UserPermissionsOnItems($user, $permission, $trackers, []);
+    }
+}
