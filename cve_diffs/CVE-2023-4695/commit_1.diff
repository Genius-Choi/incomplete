diff --git a/classes/core/PKPApplication.inc.php b/classes/core/PKPApplication.inc.php
index e2d032dfa5a..562027c38e7 100644
--- a/classes/core/PKPApplication.inc.php
+++ b/classes/core/PKPApplication.inc.php
@@ -122,9 +122,6 @@ abstract class PKPApplication implements iPKPApplicationInfoProvider {
 	 * Constructor
 	 */
 	public function __construct() {
-		// Seed random number generator
-		mt_srand(intval(((double) microtime()) * 1000000));
-
 		import('lib.pkp.classes.core.Core');
 		import('lib.pkp.classes.core.PKPString');
 		import('lib.pkp.classes.core.Registry');
diff --git a/classes/core/PKPString.inc.php b/classes/core/PKPString.inc.php
index b0a6426f502..89ffd2c705a 100644
--- a/classes/core/PKPString.inc.php
+++ b/classes/core/PKPString.inc.php
@@ -494,8 +494,7 @@ static function enumerateAlphabetically($steps) {
 	 * @return string
 	 */
 	static function generateUUID() {
-		mt_srand((double)microtime()*10000);
-		$charid = strtoupper(md5(uniqid(rand(), true)));
+		$charid = strtoupper(md5(uniqid(random_int(), true)));
 		$hyphen = '-';
 		$uuid = substr($charid, 0, 8).$hyphen
 				.substr($charid, 8, 4).$hyphen
diff --git a/classes/notification/NotificationSubscriptionSettingsDAO.inc.php b/classes/notification/NotificationSubscriptionSettingsDAO.inc.php
index 9084cc705e7..255daf7de0f 100644
--- a/classes/notification/NotificationSubscriptionSettingsDAO.inc.php
+++ b/classes/notification/NotificationSubscriptionSettingsDAO.inc.php
@@ -127,7 +127,7 @@ function getRSSTokenByUserId($userId, $contextId) {
 	 * @return int
 	 */
 	function insertNewRSSToken($userId, $contextId) {
-		$token = uniqid(rand());
+		$token = uniqid(random_int());
 
 		// Recurse if this token already exists
 		if($this->getUserIdByRSSToken($token, $contextId)) return $this->insertNewRSSToken($userId, $contextId);
diff --git a/classes/oai/PKPOAIDAO.inc.php b/classes/oai/PKPOAIDAO.inc.php
index dadd6e62e37..fccc479737e 100755
--- a/classes/oai/PKPOAIDAO.inc.php
+++ b/classes/oai/PKPOAIDAO.inc.php
@@ -61,7 +61,7 @@ function getToken($tokenId) {
 	function insertToken($token) {
 		do {
 			// Generate unique token ID
-			$token->id = md5(uniqid(mt_rand(), true));
+			$token->id = md5(uniqid(random_int(), true));
 			$result = $this->retrieve(
 				'SELECT COUNT(*) AS row_count FROM oai_resumption_tokens WHERE token = ?',
 				[$token->id]
diff --git a/classes/plugins/PluginHelper.inc.php b/classes/plugins/PluginHelper.inc.php
index b712084a375..857e7638145 100644
--- a/classes/plugins/PluginHelper.inc.php
+++ b/classes/plugins/PluginHelper.inc.php
@@ -46,7 +46,7 @@ public function extractPlugin($filePath, $originalFileName) {
 		}
 
 		// Create random dirname to avoid symlink attacks.
-		$pluginExtractDir = dirname($filePath) . DIRECTORY_SEPARATOR . $pluginShortName . substr(md5(mt_rand()), 0, 10);
+		$pluginExtractDir = dirname($filePath) . DIRECTORY_SEPARATOR . $pluginShortName . substr(md5(random_int()), 0, 10);
 		if (!mkdir($pluginExtractDir)) throw new Exception('Could not create directory ' . $pluginExtractDir);
 
 		// Test whether the tar binary is available for the export to work
diff --git a/classes/security/Validation.inc.php b/classes/security/Validation.inc.php
index 059b661fe23..3508aac9400 100644
--- a/classes/security/Validation.inc.php
+++ b/classes/security/Validation.inc.php
@@ -292,7 +292,7 @@ public static function generatePassword($length = null) {
 
 		$password = "";
 		for ($i=0; $i<$length; $i++) {
-			$password .= mt_rand(1, 4) == 4 ? $numbers[mt_rand(0,strlen($numbers)-1)] : $letters[mt_rand(0, strlen($letters)-1)];
+			$password .= random_int(1, 4) == 4 ? $numbers[random_int(0,strlen($numbers)-1)] : $letters[random_int(0, strlen($letters)-1)];
 		}
 		return $password;
 	}
diff --git a/classes/session/Session.inc.php b/classes/session/Session.inc.php
index ba69bb41aba..39cf64f38e3 100644
--- a/classes/session/Session.inc.php
+++ b/classes/session/Session.inc.php
@@ -216,7 +216,7 @@ function getCSRFToken() {
 			// Generate random data
 			if (function_exists('openssl_random_pseudo_bytes')) $data = openssl_random_pseudo_bytes(128);
 			elseif (function_exists('random_bytes')) $data = random_bytes(128);
-			else $data = sha1(mt_rand());
+			else $data = sha1(random_int());
 
 			// Hash the data
 			$token = null;
diff --git a/tools/generateTestMetrics.php b/tools/generateTestMetrics.php
index 8c3359b7031..0723df77224 100644
--- a/tools/generateTestMetrics.php
+++ b/tools/generateTestMetrics.php
@@ -69,7 +69,7 @@ function execute() {
 					'assoc_id' => $submissionId,
 					'submission_id' => $submissionId,
 					'metric_type' => METRIC_TYPE_COUNTER,
-					'metric' => rand(1, 10),
+					'metric' => random_int(1, 10),
 					'day' => $currentDate->format('Ymd'),
 				]);
 				$count++;
