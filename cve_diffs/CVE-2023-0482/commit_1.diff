diff --git a/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/AsyncIOResource.java b/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/AsyncIOResource.java
index c1ce614b2b8..f6787073d8e 100644
--- a/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/AsyncIOResource.java
+++ b/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/AsyncIOResource.java
@@ -4,6 +4,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.RandomAccessFile;
+import java.nio.file.Files;
 
 import jakarta.ws.rs.GET;
 import jakarta.ws.rs.Path;
@@ -46,7 +47,7 @@ public Response io(@PathParam("size") long size) {
     @Path("io/file-range/{size}")
     @Produces(MediaType.APPLICATION_OCTET_STREAM)
     public Response fileRange(@PathParam("size") long size) throws IOException {
-        File file = File.createTempFile("empty-file", "");
+        File file = Files.createTempFile("empty-file", "").toFile();
         file.deleteOnExit();
         RandomAccessFile rFile = new RandomAccessFile(file, "rw");
         rFile.setLength(size);
diff --git a/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/UndertowTest.java b/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/UndertowTest.java
index bb07781931a..964b128594d 100644
--- a/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/UndertowTest.java
+++ b/server-adapters/resteasy-undertow/src/test/java/org/jboss/resteasy/test/undertow/UndertowTest.java
@@ -5,6 +5,7 @@
 import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileWriter;
+import java.nio.file.Files;
 import java.util.HashSet;
 import java.util.Set;
 
@@ -95,7 +96,7 @@ public void testDeploymentInfo() throws Exception {
 
     @Test
     public void testAddResourcePrefixPath() throws Exception {
-        File staticFile = File.createTempFile("tmp", "index.html");
+        File staticFile = Files.createTempFile("tmp", "index.html").toFile();
         staticFile.deleteOnExit();
         BufferedWriter writer = new BufferedWriter(new FileWriter(staticFile));
         final String staticFileContent = "Hello static world!";
diff --git a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/XOPMultipartProxyTest.java b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/XOPMultipartProxyTest.java
index 65b3d836c4f..d0de1db0f2e 100644
--- a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/XOPMultipartProxyTest.java
+++ b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/XOPMultipartProxyTest.java
@@ -4,6 +4,7 @@
 import java.io.File;
 import java.io.FileWriter;
 import java.io.Writer;
+import java.nio.file.Files;
 
 import jakarta.activation.DataHandler;
 import jakarta.activation.FileDataSource;
@@ -90,7 +91,7 @@ public void testXOPGet() throws Exception {
      */
     @Test
     public void testXOPSend() throws Exception {
-        File tmpFile = File.createTempFile("pre", ".tmp");
+        File tmpFile = Files.createTempFile("pre", ".tmp").toFile();
         tmpFile.deleteOnExit();
         Writer writer = new FileWriter(tmpFile);
         writer.write("testXOPSend");
diff --git a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/resource/XOPMultipartProxyResource.java b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/resource/XOPMultipartProxyResource.java
index fba8f8d5dfb..2481e85e7d7 100644
--- a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/resource/XOPMultipartProxyResource.java
+++ b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/multipart/resource/XOPMultipartProxyResource.java
@@ -4,6 +4,7 @@
 import java.io.File;
 import java.io.FileWriter;
 import java.io.IOException;
+import java.nio.file.Files;
 
 import jakarta.activation.DataHandler;
 import jakarta.activation.DataSource;
@@ -28,7 +29,7 @@ public Response putFile(XOPMultipartProxyPutFileRequest putFileRequest) throws I
 
     private XOPMultipartProxyGetFileResponse getResponse(String content) throws Exception {
         XOPMultipartProxyGetFileResponse response = new XOPMultipartProxyGetFileResponse();
-        File out = File.createTempFile("tmp", ".txt");
+        File out = Files.createTempFile("tmp", ".txt").toFile();
         out.deleteOnExit();
         try (FileWriter writer = new FileWriter(out)) {
             writer.write(content);
diff --git a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/response/resource/RangeResource.java b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/response/resource/RangeResource.java
index 2f5efe050a0..f2af8aa7ad9 100644
--- a/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/response/resource/RangeResource.java
+++ b/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/response/resource/RangeResource.java
@@ -1,8 +1,9 @@
 package org.jboss.resteasy.test.response.resource;
 
+import java.io.BufferedWriter;
 import java.io.File;
-import java.io.FileOutputStream;
 import java.io.IOException;
+import java.nio.file.Files;
 
 import jakarta.ws.rs.GET;
 import jakarta.ws.rs.Path;
@@ -50,34 +51,32 @@ public void deleteSmallFile() throws Exception {
     }
 
     private static File createFile() {
-        File file = null;
+        java.nio.file.Path file = null;
         try {
-            file = File.createTempFile("tmp", "tmp");
-            FileOutputStream fos = new FileOutputStream(file);
-            for (int i = 0; i < 1000; i++) {
-                fos.write("hello".getBytes());
+            file = Files.createTempFile("tmp", "tmp");
+            try (BufferedWriter writer = Files.newBufferedWriter(file)) {
+                for (int i = 0; i < 1000; i++) {
+                    writer.write("hello");
+                }
+                writer.write("1234");
             }
-            fos.write("1234".getBytes());
-            fos.flush();
-            fos.close();
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-        return file;
+        return file.toFile();
     }
 
     private static File createSmallFile() {
-        File smallfile = null;
+        java.nio.file.Path smallfile = null;
         try {
-            smallfile = File.createTempFile("smalltmp", "tmp");
-            FileOutputStream fos = new FileOutputStream(smallfile);
-            fos.write("123456789".getBytes());
-            fos.flush();
-            fos.close();
+            smallfile = Files.createTempFile("smalltmp", "tmp");
+            try (BufferedWriter writer = Files.newBufferedWriter(smallfile)) {
+                writer.write("123456789");
+            }
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
-        return smallfile;
+        return smallfile.toFile();
     }
 
 }
