void PdfXRefStreamParserObject::ReadXRefTable()
{
    int64_t size = this->GetDictionary().FindKeyAs<int64_t>(PdfName::KeySize, 0);
    auto& arrObj = this->GetDictionary().MustFindKey("W");

    // The pdf reference states that W is always an array with 3 entries
    // all of them have to be integers
    const PdfArray* arr;
    if (!arrObj.TryGetArray(arr) || arr->size() != 3)
        PODOFO_RAISE_ERROR_INFO(PdfErrorCode::NoXRef, "Invalid XRef stream /W array");

    int64_t wArray[W_ARRAY_SIZE] = { 0, 0, 0 };
    int64_t num;
    for (unsigned i = 0; i < W_ARRAY_SIZE; i++)
    {

        if (!(*arr)[i].TryGetNumber(num))
            PODOFO_RAISE_ERROR_INFO(PdfErrorCode::NoXRef, "Invalid XRef stream /W array");

        wArray[i] = num;
    }

    vector<int64_t> indices;
    getIndices(indices, static_cast<int64_t>(size));

    parseStream(wArray, indices);
}
