static bool inferUnaryArith(UnaryOperatorInst *UOI, Type numberResultType) {
  Value *op = UOI->getSingleOperand();

  if (op->getType().isNumberType()) {
    UOI->setType(numberResultType);
    return true;
  }

  if (op->getType().isBigIntType()) {
    UOI->setType(Type::createBigInt());
    return true;
  }

  Type mayBeBigInt = isBigIntOrObject(op->getType()) ? Type::createBigInt()
                                                     : Type::createNoType();

  // - ?? => Number|?BigInt. BigInt is only possible if op.Type is
  // BigInt|Object.
  UOI->setType(Type::unionTy(numberResultType, mayBeBigInt));
  return true;
}
