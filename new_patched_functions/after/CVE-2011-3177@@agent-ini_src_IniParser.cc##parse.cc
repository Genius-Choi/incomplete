int IniParser::parse()
{
    if (multiple_files)
    {
	glob_t do_files;
	int len = files.size ();
	int flags = 0;
	for (int i = 0;i<len;i++)
	{
	    glob (files[i].c_str (),flags, NULL, &do_files);
	    flags = GLOB_APPEND;
	}
	char**f = do_files.gl_pathv;
	for (unsigned int i = 0;i<do_files.gl_pathc;i++, f++)
	{
	    int section_index = -1;
	    string section_name = *f;
	    //FIXME: create function out of it.
	    // do we have name rewrite rules?
	    for (size_t j = 0; j < rewrites.size (); j++)
		{
		    RegexMatch m (rewrites[j].rx, section_name);
		    if (m)
		    {
			section_index = j;
			section_name = m[1];
			y2debug ("Rewriting %s to %s", *f, section_name.c_str());
			break;
		    }
		}

	    // do we know about the file?
	    map<string,FileDescr>::iterator ff = multi_files.find (*f);
	    if (ff == multi_files.end())
	    {
		// new file
		if (scanner_start (*f))
		    y2error ("Cannot open %s.", *f);
		else
		{
		    FileDescr fdsc (*f);
		    multi_files[*f] = fdsc;
		    inifile.initSection (section_name, "", -1, section_index);
		    parse_helper(inifile.getSection(section_name.c_str()));
		    scanner_stop();
		}
	    }
	    else
	    {
		if ((*ff).second.changed ())
		{
		    if (scanner_start (*f))
			y2error ("Cannot open %s.", *f);
		    else
		    {
			y2debug ("File %s changed. Reloading.", *f);
			FileDescr fdsc (*f);
			multi_files [*f] = fdsc;
			inifile.initSection (section_name, "", -1, section_index);
			parse_helper(inifile.getSection(section_name.c_str()));
			scanner_stop();
		    }
		}
	    }
	}
    }
    else
    {
	if (scanner_start (file.c_str()))
	    {
		y2error ("Can not open %s.", file.c_str());
		return -1;
	    }
	parse_helper(inifile);
	scanner_stop();
	timestamp = getTimeStamp ();
    }
    return 0;
}
