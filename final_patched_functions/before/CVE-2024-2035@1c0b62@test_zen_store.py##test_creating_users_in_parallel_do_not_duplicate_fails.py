def test_creating_users_in_parallel_do_not_duplicate_fails(
    clean_client: "Client",
):
    """Tests creating a user with an existing username fails in parallel mode."""

    def silent_create_user(user_request: UserRequest):
        """This function attempts to create a user and silently passes
        if a duplicate user exists. This is used to simulate race
        conditions in parallel user creation.
        """
        try:
            clean_client.zen_store.create_user(user_request)
        except (EntityExistsError, IntegrityError):
            pass

    user_name = "test_user"
    password = "P@ssw0rd"
    count = 100

    threads: List[Thread] = []
    for _ in range(count):
        t = Thread(
            target=silent_create_user,
            args=(UserRequest(name=user_name, password=password),),
        )
        threads.append(t)
    for t in threads:
        t.start()
    for t in threads:
        t.join()

    users = clean_client.zen_store.list_users(
        user_filter_model=UserFilter(name=user_name)
    )
    assert users.total == 1
