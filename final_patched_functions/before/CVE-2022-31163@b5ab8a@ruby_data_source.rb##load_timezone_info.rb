    def load_timezone_info(identifier)
      raise InvalidTimezoneIdentifier, 'Invalid identifier' if identifier !~ /^[A-Za-z0-9\+\-_]+(\/[A-Za-z0-9\+\-_]+)*$/
      
      identifier = identifier.gsub(/-/, '__m__').gsub(/\+/, '__p__')
      
      # Untaint identifier after it has been reassigned to a new string. We
      # don't want to modify the original identifier. identifier may also be 
      # frozen and therefore cannot be untainted.
      identifier.untaint
      
      identifier = identifier.split('/')
      begin
        require_definition(identifier)
        
        m = Data::Definitions
        identifier.each {|part|
          m = m.const_get(part)
        }
        
        m.get
      rescue LoadError, NameError => e
        raise InvalidTimezoneIdentifier, e.message
      end
    end
