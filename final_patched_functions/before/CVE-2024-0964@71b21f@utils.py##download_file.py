def download_file(
    url_path: str,
    dir: str,
    hf_token: str | None = None,
) -> str:
    if dir is not None:
        os.makedirs(dir, exist_ok=True)
    headers = {"Authorization": "Bearer " + hf_token} if hf_token else {}

    sha1 = hashlib.sha1()
    temp_dir = Path(tempfile.gettempdir()) / secrets.token_hex(20)
    temp_dir.mkdir(exist_ok=True, parents=True)

    with httpx.stream("GET", url_path, headers=headers) as response:
        response.raise_for_status()
        with open(temp_dir / Path(url_path).name, "wb") as f:
            for chunk in response.iter_bytes(chunk_size=128 * sha1.block_size):
                sha1.update(chunk)
                f.write(chunk)

    directory = Path(dir) / sha1.hexdigest()
    directory.mkdir(exist_ok=True, parents=True)
    dest = directory / Path(url_path).name
    shutil.move(temp_dir / Path(url_path).name, dest)
    return str(dest.resolve())
