def set_from_args(args: Namespace, user_config):
    global GLOBAL_FLAGS
    from dbt.cli.main import cli
    from dbt.cli.flags import Flags, convert_config

    # we set attributes of args after initialize the flags, but user_config
    # is being read in the Flags constructor, so we need to read it here and pass in
    # to make sure we use the correct user_config
    if (hasattr(args, "PROFILES_DIR") or hasattr(args, "profiles_dir")) and not user_config:
        from dbt.config.profile import read_user_config

        profiles_dir = getattr(args, "PROFILES_DIR", None) or getattr(args, "profiles_dir")
        user_config = read_user_config(profiles_dir)

    # make a dummy context to get the flags, totally arbitrary
    ctx = cli.make_context("run", ["run"])
    flags = Flags(ctx, user_config)
    for arg_name, args_param_value in vars(args).items():
        args_param_value = convert_config(arg_name, args_param_value)
        object.__setattr__(flags, arg_name.upper(), args_param_value)
        object.__setattr__(flags, arg_name.lower(), args_param_value)
    GLOBAL_FLAGS = flags  # type: ignore
