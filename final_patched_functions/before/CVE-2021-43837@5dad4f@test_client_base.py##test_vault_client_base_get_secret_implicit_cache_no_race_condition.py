def test_vault_client_base_get_secret_implicit_cache_no_race_condition():
    # In this test we check that if a value is read several times by
    # a template, implicit caching makes sure we have the same value
    # every time.

    # Values returned by this client keep changing

    vault = RaceConditionTestVaultClient()

    with vault:
        assert vault.get_secret("a") == {"b": "b0", "c": "c0"}
    with vault:
        assert vault.get_secret("a") == {"b": "b1", "c": "c1"}

    vault.db = {"d": {"value": """!template!{{ vault("a").b }}-{{ vault("a").c }}"""}}

    # b2-c3 would be the value if caching didn't work.
    with vault:
        assert vault.get_secret("d") == {"value": "b2-c2"}
