    def initialize content_type, filename, encoded_content, sibling_types
      @content_type = content_type.downcase
      @filename = filename
      @quotable = false # changed to true if we can parse it through the
                        # mime-decode hook, or if it's plain text
      @raw_content =
        if encoded_content.body
          encoded_content.decode
        else
          "For some bizarre reason, RubyMail was unable to parse this attachment.\n"
        end

      text = case @content_type
      when /^text\/plain\b/
        @raw_content
      else
        ## please see note in write_to_disk on important usage
        ## of quotes to avoid remote command injection.
        HookManager.run "mime-decode", :content_type => content_type,
                        :filename => lambda { write_to_disk },
                        :charset => encoded_content.charset,
                        :sibling_types => sibling_types
      end

      @lines = nil
      if text
        text = text.transcode(encoded_content.charset || $encoding)
        @lines = text.gsub("\r\n", "\n").gsub(/\t/, "        ").gsub(/\r/, "").split("\n")
        @quotable = true
      end
    end
