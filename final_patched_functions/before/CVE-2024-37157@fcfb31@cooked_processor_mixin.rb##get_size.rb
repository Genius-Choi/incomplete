  def get_size(url)
    return @size_cache[url] if @size_cache.has_key?(url)

    absolute_url = url
    absolute_url = Discourse.base_url_no_prefix + absolute_url if absolute_url =~ %r{\A/[^/]}

    return unless absolute_url

    # FastImage fails when there's no scheme
    absolute_url = SiteSetting.scheme + ":" + absolute_url if absolute_url.start_with?("//")

    # we can't direct FastImage to our secure-uploads url because it bounces
    # anonymous requests with a 404 error
    if url && Upload.secure_uploads_url?(url)
      absolute_url = Upload.signed_url_from_secure_uploads_url(absolute_url)
    end

    return unless is_valid_image_url?(absolute_url)

    upload = Upload.get_from_url(absolute_url)
    if upload && upload.width && upload.width > 0
      @size_cache[url] = [upload.width, upload.height]
    else
      @size_cache[url] = FinalDestination::FastImage.size(absolute_url)
    end
  rescue Zlib::BufError, URI::Error, OpenSSL::SSL::SSLError
    # FastImage.size raises BufError for some gifs, leave it.
  end
