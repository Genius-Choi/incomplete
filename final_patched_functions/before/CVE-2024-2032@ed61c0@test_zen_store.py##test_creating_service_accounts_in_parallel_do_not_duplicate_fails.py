def test_creating_service_accounts_in_parallel_do_not_duplicate_fails(
    clean_client: "Client",
):
    """Tests creating a user with an existing username fails in parallel mode."""

    def silent_create_service_account(
        service_account_request: ServiceAccountRequest,
    ):
        """This function attempts to create a service account and silently
        passes if a duplicate user exists. This is used to simulate race
        conditions in parallel user creation.
        """
        try:
            clean_client.zen_store.create_service_account(
                service_account_request
            )
        except EntityExistsError:
            pass

    user_name = "test_user"
    count = 100

    threads: List[Thread] = []
    for _ in range(count):
        t = Thread(
            target=silent_create_service_account,
            args=(ServiceAccountRequest(name=user_name, active=True),),
        )
        threads.append(t)
    for t in threads:
        t.start()
    for t in threads:
        t.join()

    service_accounts = clean_client.zen_store.list_service_accounts(
        filter_model=ServiceAccountFilter(name=user_name)
    )
    assert service_accounts.total == 1
