async def test_access_special_resource(
    tmp_path_factory: pytest.TempPathFactory, aiohttp_client: AiohttpClient
) -> None:
    """Test access to non-regular files is forbidden using a UNIX domain socket."""
    if not getattr(socket, "AF_UNIX", None):
        pytest.skip("UNIX domain sockets not supported")

    tmp_path = tmp_path_factory.mktemp("special")
    my_special = tmp_path / "sock"
    my_socket = socket.socket(socket.AF_UNIX)
    my_socket.bind(str(my_special))
    assert my_special.is_socket()

    app = web.Application()
    app.router.add_static("/", str(tmp_path))

    client = await aiohttp_client(app)
    r = await client.get(f"/{my_special.name}")
    assert r.status == 403
    my_socket.close()
