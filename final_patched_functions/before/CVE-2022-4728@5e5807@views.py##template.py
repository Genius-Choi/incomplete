def template(request, name, val):
  template_conf_missing = False

  try:
    config.check()
  except OSError as e:
    if e.errno == errno.ENOENT:
      template_conf_missing = True
    else:
      raise

  initialError = None
  debug = request.GET.get('debug', False)
  theme = request.GET.get('theme', config.ui_config['theme'])
  css_file = finders.find('css/dashboard-%s.css' % theme)
  if css_file is None:
    initialError = "Invalid theme '%s'" % theme
    theme = config.ui_config['theme']

  context = {
    'schemes_json' : json.dumps(config.schemes),
    'ui_config_json' : json.dumps(config.ui_config),
    'jsdebug' : debug or settings.JAVASCRIPT_DEBUG,
    'debug' : debug,
    'theme' : theme,
    'initialError' : initialError,
    'querystring' : json.dumps( dict( request.GET.items() ) ),
    'template_conf_missing' : template_conf_missing,
    'userName': '',
    'permissions': json.dumps(getPermissions(request.user)),
    'permissionsUnauthenticated': json.dumps(getPermissions(None))
  }

  user = request.user
  if user:
      context['userName'] = user.username

  try:
    template = Template.objects.get(name=name)
  except Template.DoesNotExist:
    context['initialError'] = "Template '%s' does not exist." % name
  else:
    state = json.loads(template.loadState(val))
    state['name'] = '%s/%s' % (name, val)
    context['initialState'] = json.dumps(state)
  return render(request, "dashboard.html", context)
