  def add_attachment
    Log.add_info(request, params.inspect)

    unless params[:attach_file].nil?
      attach_attrs = ActionController::Parameters.new({file: params[:attach_file]})
      params.delete(:attach_file)
    end

    if params[:id].blank?
      mail_account = MailAccount.find(params[:mail_account_id])

      @email = SendMailsHelper.get_mail_to_send(@login_user, mail_account, nil)
      @email.status = Email::STATUS_TEMPORARY
      @email.save!
    else
      @email = Email.find(params[:id])
    end

    unless attach_attrs.nil?

      unless @email.can_attach?(attach_attrs[:file].size)
        flash[:notice] = 'ERROR:' + t('mail.sum_of_attach_size_over')
        render(:partial => 'ajax_mail_attachments', :layout => false)
        return
      end

      attach_attrs[:email_id] = @email.id
      attach_attrs[:xorder] = 0
      @mail_attachment = MailAttachment.create(attach_attrs.permit(MailAttachment::PERMIT_BASE))
      @email.mail_attachments << @mail_attachment

      update_attrs = ActionController::Parameters.new({updated_at: Time.now})
      if @email.status == Email::STATUS_TEMPORARY \
          and !@email.mail_account_id.nil?
        update_attrs[:status] = Email::STATUS_DRAFT
      end
      @email.update_attributes(update_attrs.permit(Email::PERMIT_BASE))
    end

    render(:partial => 'ajax_mail_attachments', :layout => false)

  rescue => evar
    begin
      unless @mail_attachment.nil? or @mail_attachment.id.nil?
        @email.mail_attachments.delete(@mail_attachment)
      end
    rescue
    end
    begin
      unless @mail_attachment.nil? or @mail_attachment.id.nil?
        @mail_attachment.destroy
      end
    rescue
    end
    if evar.to_s.starts_with?('ERROR:')
      err_msg = evar.to_s
    else
      err_msg = 'ERROR:' + t('msg.system_error') + '<br/>' + evar.to_s
    end
    respond_to do |format|
      format.text { render(:text => err_msg) }
      format.html {
        flash[:notice] = err_msg
        render(:partial => 'ajax_mail_attachments', :layout => false)
        return
      }
    end
  end
