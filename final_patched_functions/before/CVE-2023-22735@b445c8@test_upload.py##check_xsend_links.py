        def check_xsend_links(
            name: str,
            name_str_for_test: str,
            content_disposition: str = "",
            download: bool = False,
        ) -> None:
            self.login("hamlet")
            fp = StringIO("zulip!")
            fp.name = name
            result = self.client_post("/json/user_uploads", {"file": fp})
            uri = self.assert_json_success(result)["uri"]
            fp_path_id = re.sub("/user_uploads/", "", uri)
            fp_path = os.path.split(fp_path_id)[0]
            if download:
                uri = uri.replace("/user_uploads/", "/user_uploads/download/")
            with self.settings(DEVELOPMENT=False):
                response = self.client_get(uri)
            assert settings.LOCAL_UPLOADS_DIR is not None
            test_run, worker = os.path.split(os.path.dirname(settings.LOCAL_UPLOADS_DIR))
            self.assertEqual(
                response["X-Accel-Redirect"],
                "/internal/uploads/" + fp_path + "/" + name_str_for_test,
            )
            if content_disposition != "":
                self.assertIn("attachment;", response["Content-disposition"])
                self.assertIn(content_disposition, response["Content-disposition"])
            else:
                self.assertIn("inline;", response["Content-disposition"])
            self.assertEqual(set(response["Cache-Control"].split(", ")), {"private", "immutable"})
