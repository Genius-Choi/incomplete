  def update_default_break
    Log.add_info(request, params.inspect)

    start_t = Time.local(2000, 1, 1, params[:start_hour].to_i, params[:start_min].to_i)
    end_t = Time.local(2000, 1, 1, params[:end_hour].to_i, params[:end_min].to_i)

    if start_t == end_t
      flash[:notice] = 'ERROR:' + t('timecard.break_without_span')
      render(:partial => 'ajax_config_break', :layout => false)
      return
    end

    if params[:org_start].nil?
      org_start = nil
    else
      org_start = UtilDateTime.parse(params[:org_start]).to_time
    end

    yaml = ApplicationHelper.get_config_yaml

    yaml[:timecard] = Hash.new if yaml[:timecard].nil?
    spans = yaml[:timecard]['default_breaks']
    spans = [] if spans.nil?

    found = false
    spans.each do |span|
      if span.first == org_start
        span[0] = start_t
        span[1] = end_t
        found = true
        break
      end
    end
    unless found
      spans << [start_t, end_t]
    end

    begin
      spans = Timecard.sort_breaks(spans)

      yaml[:timecard]['default_breaks'] = spans

      ApplicationHelper.save_config_yaml(yaml)

    rescue
      yaml = ApplicationHelper.get_config_yaml
      flash[:notice] = 'ERROR:' + t('timecard.break_overlap')
    end

    @yaml_timecard = yaml[:timecard]
    @yaml_timecard = Hash.new if @yaml_timecard.nil?

    render(:partial => 'ajax_config_break', :layout => false)
  end
