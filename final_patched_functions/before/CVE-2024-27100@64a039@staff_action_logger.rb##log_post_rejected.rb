  def log_post_rejected(reviewable, rejected_at, opts = {})
    raise Discourse::InvalidParameters.new(:rejected_post) unless reviewable.is_a?(Reviewable)

    topic = reviewable.topic || Topic.with_deleted.find_by(id: reviewable.topic_id)
    topic_title = topic&.title || I18n.t("staff_action_logs.not_found")
    username = reviewable.target_created_by&.username || I18n.t("staff_action_logs.unknown")
    name = reviewable.target_created_by&.name || I18n.t("staff_action_logs.unknown")

    details = [
      "created_at: #{reviewable.created_at}",
      "rejected_at: #{rejected_at}",
      "user: #{username} (#{name})",
      "topic: #{topic_title}",
      "raw: #{reviewable.payload["raw"]}",
    ]

    UserHistory.create!(
      params(opts).merge(action: UserHistory.actions[:post_rejected], details: details.join("\n")),
    )
  end
