    def execute(args)
      now = Time.now
      review_year = args[:review_year] ? args[:review_year] : ::YearlyReview.last_year
      review_start = Time.new(review_year, 1, 1)
      review_end = review_start.end_of_year
      title = I18n.t("yearly_review.topic_title", year: review_year)

      unless args[:force]
        return unless SiteSetting.yearly_review_enabled
        return unless now.month == 1 && now.day <= 31
        return if Topic.where(user: Discourse.system_user, title: title).exists?
      end

      view = ActionView::Base.with_view_paths(ActionController::Base.view_paths)
      view.class_eval do
        include YearlyReviewHelper
        def compiled_method_container
          self.class
        end
      end

      raw = create_raw_topic view, review_year, review_start, review_end
      unless raw.empty?
        topic_opts = {
          title: title,
          raw: raw,
          category: SiteSetting.yearly_review_publish_category,
          skip_validations: true,
        }

        post = PostCreator.create!(Discourse.system_user, topic_opts)

        if post.respond_to? :topic_id
          create_category_posts view, review_start, review_end, post.topic_id
        end
      end
    end
