async def reload_binding(request: BindingReloadRequest):
    """
    Reloads a binding.

    :param request: The BindingReloadRequest object.
    :return: A JSON response with the status of the operation.
    """

    try:
        print(f"Reloading binding selected : {request.name}")
        safe_name = os.path.basename(request.name) # sanitize the file path to prevent path traversal
        lollmsElfServer.config["binding_name"]=safe_name
        if lollmsElfServer.binding:
            lollmsElfServer.binding.destroy_model()
        lollmsElfServer.binding = None
        lollmsElfServer.model = None
        for per in lollmsElfServer.mounted_personalities:
            if per is not None:
                per.model = None
        gc.collect()
        lollmsElfServer.binding = BindingBuilder().build_binding(lollmsElfServer.config, lollmsElfServer.lollms_paths, InstallOption.INSTALL_IF_NECESSARY, lollmsCom=lollmsElfServer)
        lollmsElfServer.model = None
        lollmsElfServer.config.save_config()
        ASCIIColors.green("Binding loaded successfully")
        return {"status":True}
    except Exception as ex:
        ASCIIColors.error(f"Couldn't build binding: [{ex}]")
        trace_exception(ex)
        return {"status":False, 'error':str(ex)}
