def get_home_context(request, no_course=False):
    """
    Utils is used to get context of course home.
    It is used for both DRF and django views.
    """

    from cms.djangoapps.contentstore.views.course import (
        get_allowed_organizations,
        get_allowed_organizations_for_libraries,
        user_can_create_organizations,
        _accessible_libraries_iter,
        _get_course_creator_status,
        _format_library_for_view,
        ENABLE_GLOBAL_STAFF_OPTIMIZATION,
    )
    from cms.djangoapps.contentstore.views.library import (
        LIBRARY_AUTHORING_MICROFRONTEND_URL,
        LIBRARIES_ENABLED,
        should_redirect_to_library_authoring_mfe,
        user_can_create_library,
    )

    active_courses = []
    archived_courses = []
    in_process_course_actions = []

    optimization_enabled = GlobalStaff().has_user(request.user) and ENABLE_GLOBAL_STAFF_OPTIMIZATION.is_enabled()

    user = request.user
    libraries = []

    if not no_course:
        active_courses, archived_courses, in_process_course_actions = get_course_context(request)

    if not split_library_view_on_dashboard() and LIBRARIES_ENABLED and not no_course:
        libraries = get_library_context(request, True)['libraries']

    home_context = {
        'courses': active_courses,
        'split_studio_home': split_library_view_on_dashboard(),
        'archived_courses': archived_courses,
        'in_process_course_actions': in_process_course_actions,
        'libraries_enabled': LIBRARIES_ENABLED,
        'taxonomies_enabled': not is_tagging_feature_disabled(),
        'redirect_to_library_authoring_mfe': should_redirect_to_library_authoring_mfe(),
        'library_authoring_mfe_url': LIBRARY_AUTHORING_MICROFRONTEND_URL,
        'taxonomy_list_mfe_url': get_taxonomy_list_url(),
        'libraries': libraries,
        'show_new_library_button': user_can_create_library(user) and not should_redirect_to_library_authoring_mfe(),
        'user': user,
        'request_course_creator_url': reverse('request_course_creator'),
        'course_creator_status': _get_course_creator_status(user),
        'rerun_creator_status': GlobalStaff().has_user(user),
        'allow_unicode_course_id': settings.FEATURES.get('ALLOW_UNICODE_COURSE_ID', False),
        'allow_course_reruns': settings.FEATURES.get('ALLOW_COURSE_RERUNS', True),
        'optimization_enabled': optimization_enabled,
        'active_tab': 'courses',
        'allowed_organizations': get_allowed_organizations(user),
        'allowed_organizations_for_libraries': get_allowed_organizations_for_libraries(user),
        'can_create_organizations': user_can_create_organizations(user),
    }

    return home_context
