def ensure_object_exists(saveas, datatype, the_user_dict, commands=None):
    # logmessage("ensure object exists: " + str(saveas))
    if commands is None:
        execute = True
        commands = []
    else:
        execute = False
    already_there = False
    try:
        eval(saveas, the_user_dict)
        already_there = True
    except:
        pass
    if already_there:
        # logmessage("ensure object exists: already there")
        return
    parse_result = parse_var_name(saveas)
    if not parse_result['valid']:
        raise DAError("Variable name " + saveas + " is invalid: " + parse_result['reason'])
    method = None
    if parse_result['final_parts'][1] != '':
        if parse_result['final_parts'][1][0] == '.':
            try:
                core_key = eval(parse_result['final_parts'][0], the_user_dict)
                if hasattr(core_key, 'instanceName'):
                    method = 'attribute'
            except:
                pass
        elif parse_result['final_parts'][1][0] == '[':
            try:
                core_key = eval(parse_result['final_parts'][0], the_user_dict)
                if hasattr(core_key, 'instanceName'):
                    method = 'index'
            except:
                pass
    if "from docassemble.base.util import DADict, DAList" not in commands:
        commands.append("from docassemble.base.util import DADict, DAList")
    if method == 'attribute':
        attribute_name = parse_result['final_parts'][1][1:]
        if datatype in ('multiselect', 'checkboxes'):
            commands.append(parse_result['final_parts'][0] + ".initializeAttribute(" + repr(attribute_name) + ", DADict, auto_gather=False)")
        elif datatype in ('object_multiselect', 'object_checkboxes'):
            commands.append(parse_result['final_parts'][0] + ".initializeAttribute(" + repr(attribute_name) + ", DAList, auto_gather=False)")
    elif method == 'index':
        index_name = parse_result['final_parts'][1][1:-1]
        if datatype in ('multiselect', 'checkboxes'):
            commands.append(parse_result['final_parts'][0] + ".initializeObject(" + repr(index_name) + ", DADict, auto_gather=False)")
        elif datatype in ('object_multiselect', 'object_checkboxes'):
            commands.append(parse_result['final_parts'][0] + ".initializeObject(" + repr(index_name) + ", DAList, auto_gather=False)")
    else:
        if datatype in ('multiselect', 'checkboxes'):
            commands.append(saveas + ' = DADict(' + repr(saveas) + ', auto_gather=False)')
        elif datatype in ('object_multiselect', 'object_checkboxes'):
            commands.append(saveas + ' = DAList(' + repr(saveas) + ', auto_gather=False)')
    if execute:
        for command in commands:
            # logmessage("Doing " + command)
            exec(command, the_user_dict)
