def notify_user_blocked(
    user: User, max_n_attempts: int, min_rem: int, mail: Mail,
    config: dict
) -> None:
    """
    Sends an email to the user when his or her account is locked

    Parameters
    ----------
    user: :class:`~vantage6.server.model.user.User`
        User who is temporarily blocked
    max_n_attempts: int
        Maximum number of failed login attempts before the account is locked
    min_rem: int
        Number of minutes remaining before the account is unlocked
    mail: flask_mail.Mail
        An instance of the Flask mail class. Used to send email to user in case
        of too many failed login attempts.
    config: dict
        Dictionary with configuration settings
    """
    if not user.email:
        log.warning(f'User {user.username} is locked, but does not have'
                    'an email registered. So no message has been sent.')

    log.info(f'User {user.username} is locked. Sending them an email.')

    smtp_settings = config.get("smtp", {})
    email_from = smtp_settings.get("email_from", DEFAULT_EMAIL_FROM_ADDRESS)
    support_email = config.get("support_email", DEFAULT_SUPPORT_EMAIL_ADDRESS)

    template_vars = {
        'firstname': user.firstname,
        'number_of_allowed_attempts': max_n_attempts,
        'ip': request.access_route[-1],
        'time': dt.datetime.now(dt.timezone.utc),
        'time_remaining': min_rem,
        'support_email': support_email,
    }

    mail.send_email(
        "Failed login attempts on your vantage6 account",
        sender=email_from,
        recipients=[user.email],
        text_body=render_template("mail/blocked_account.txt", **template_vars),
        html_body=render_template("mail/blocked_account.html", **template_vars)
    )
