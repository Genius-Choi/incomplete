def extract_dylora(
    model,
    save_to,
    unit,
):
    # Check for caption_text_input
    if model == "":
        msgbox("Invalid DyLoRA model file")
        return

    # Check if source model exist
    if not os.path.isfile(model):
        msgbox("The provided DyLoRA model is not a file")
        return

    if os.path.dirname(save_to) == "":
        # only filename given. prepend dir
        save_to = os.path.join(os.path.dirname(model), save_to)
    if os.path.isdir(save_to):
        # only dir name given. set default lora name
        save_to = os.path.join(save_to, "lora.safetensors")
    if os.path.normpath(model) == os.path.normpath(save_to):
        # same path. silently ignore but rename output
        path, ext = os.path.splitext(save_to)
        save_to = f"{path}_tmp{ext}"

    run_cmd = (
        rf'"{PYTHON}" "{scriptdir}/sd-scripts/networks/extract_lora_from_dylora.py"'
    )
    run_cmd += rf' --save_to "{save_to}"'
    run_cmd += rf' --model "{model}"'
    run_cmd += f" --unit {unit}"

    log.info(run_cmd)

    env = os.environ.copy()
    env["PYTHONPATH"] = (
        rf"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}"
    )

    # Run the command
    subprocess.run(run_cmd, shell=True, env=env)

    log.info("Done extracting DyLoRA...")
