TEST_P(ProxyProtocolTest, V2WrongTLVLength) {
  // A well-formed ipv4/tcp with buffer[14]15] being 0x00 and 0x10. It says we should have 16 bytes
  // following.
  constexpr uint8_t buffer[] = {0x0d, 0x0a, 0x0d, 0x0a, 0x00, 0x0d, 0x0a, 0x51, 0x55, 0x49,
                                0x54, 0x0a, 0x21, 0x11, 0x00, 0x10, 0x01, 0x02, 0x03, 0x04,
                                0x00, 0x01, 0x01, 0x02, 0x03, 0x05, 0x00, 0x02};

  // tlv[2] should be 0x1 since there's only one byte for tlv value.
  constexpr uint8_t tlv[] = {0x0, 0x0, 0x2, 0xff};

  envoy::extensions::filters::listener::proxy_protocol::v3::ProxyProtocol proto_config;
  auto rule_00 = proto_config.add_rules();
  rule_00->set_tlv_type(0x00);
  rule_00->mutable_on_tlv_present()->set_key("00");

  connect(false, &proto_config);
  write(buffer, sizeof(buffer));
  write(tlv, sizeof(tlv));

  expectProxyProtoError();
}
