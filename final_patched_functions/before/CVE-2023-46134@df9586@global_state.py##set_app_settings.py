def set_app_settings(settings):
    global APP_SETTINGS

    for prop, val in settings.items():
        APP_SETTINGS[prop] = val

    instance_updates = {}
    if settings.get("hide_shutdown") is not None:
        instance_updates["hide_shutdown"] = settings.get("hide_shutdown")
    if settings.get("hide_header_editor") is not None:
        instance_updates["hide_header_editor"] = settings.get("hide_header_editor")
    if settings.get("lock_header_menu") is not None:
        instance_updates["lock_header_menu"] = settings.get("lock_header_menu")
    if settings.get("hide_header_menu") is not None:
        instance_updates["hide_header_menu"] = settings.get("hide_header_menu")
    if settings.get("hide_main_menu") is not None:
        instance_updates["hide_main_menu"] = settings.get("hide_main_menu")
    if settings.get("hide_column_menus") is not None:
        instance_updates["hide_column_menus"] = settings.get("hide_column_menus")

    if _default_store.size() > 0 and len(instance_updates):
        for data_id in _default_store.keys():
            update_settings(data_id, instance_updates)
