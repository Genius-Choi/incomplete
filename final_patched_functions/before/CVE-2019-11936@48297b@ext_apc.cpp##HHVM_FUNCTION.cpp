TypedValue HHVM_FUNCTION(apc_fetch, const Variant& key, bool& success) {
  if (!apcExtension::Enable) return make_tv<KindOfBoolean>(false);

  Variant v;

  if (key.isArray()) {
    bool tmp = false;
    Array keys = key.toArray();
    ArrayInit init(keys.size(), ArrayInit::Map{});
    for (ArrayIter iter(keys); iter; ++iter) {
      Variant k = iter.second();
      if (!k.isString()) {
        throw_invalid_argument("apc key: (not a string)");
        return make_tv<KindOfBoolean>(false);
      }
      String strKey = k.toString();
      if (apc_store().get(strKey, v)) {
        tmp = true;
        init.set(strKey, v);
      }
    }
    success = tmp;
    return tvReturn(init.toVariant());
  }

  if (apc_store().get(key.toString(), v)) {
    success = true;
  } else {
    success = false;
    v = false;
  }
  return tvReturn(std::move(v));
}
