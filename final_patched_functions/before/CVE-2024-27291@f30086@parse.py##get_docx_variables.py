def get_docx_variables(the_path):
    names = set()
    if not os.path.isfile(the_path):
        raise DAError("Missing docx template file " + os.path.basename(the_path))
    try:
        docx_template = DocxTemplate(the_path)
        docx_template.render_init()
        the_env = custom_jinja_env()
        the_xml = docx_template.get_xml()
        the_xml = re.sub(r'<w:p([ >])', r'\n<w:p\1', the_xml)
        the_xml = re.sub(r'({[\%\{].*?[\%\}]})', fix_quotes, the_xml)
        the_xml = docx_template.patch_xml(the_xml)
        parsed_content = the_env.parse(the_xml)
    except Exception as the_err:
        raise DAError("There was an error parsing the docx file: " + the_err.__class__.__name__ + " " + str(the_err))
    for key in jinja2meta.find_undeclared_variables(parsed_content):
        if not key.startswith('__'):
            names.add(key)
    from docassemble.base.legal import __all__ as legal_all  # pylint: disable=import-outside-toplevel
    for name in legal_all:
        if name in names:
            names.remove(name)
    return sorted(list(names))
