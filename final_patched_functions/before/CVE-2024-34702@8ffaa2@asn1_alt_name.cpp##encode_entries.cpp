void encode_entries(DER_Encoder& encoder,
                    const std::multimap<std::string, std::string, std::less<>>& attr,
                    std::string_view type,
                    ASN1_Type tagging) {
   auto range = attr.equal_range(type);

   for(auto i = range.first; i != range.second; ++i) {
      if(type == "RFC822" || type == "DNS" || type == "URI") {
         ASN1_String asn1_string(i->second, ASN1_Type::Ia5String);
         encoder.add_object(tagging, ASN1_Class::ContextSpecific, asn1_string.value());
      } else if(type == "IP") {
         const uint32_t ip = string_to_ipv4(i->second);
         uint8_t ip_buf[4] = {0};
         store_be(ip, ip_buf);
         encoder.add_object(tagging, ASN1_Class::ContextSpecific, ip_buf, 4);
      } else if(type == "DN") {
         std::stringstream ss(i->second);
         X509_DN dn;
         ss >> dn;
         encoder.encode(dn);
      }
   }
}
