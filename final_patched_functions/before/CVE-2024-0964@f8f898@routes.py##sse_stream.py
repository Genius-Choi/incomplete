            async def sse_stream(request: fastapi.Request):
                try:
                    last_heartbeat = time.perf_counter()
                    while True:
                        if await request.is_disconnected():
                            await blocks._queue.clean_event(event)
                        if not event.alive:
                            return

                        heartbeat_rate = 15
                        check_rate = 0.05
                        message = None
                        try:
                            message = event.message_queue.get_nowait()
                            if message is None:  # end of stream marker
                                return
                        except EmptyQueue:
                            await asyncio.sleep(check_rate)
                            if time.perf_counter() - last_heartbeat > heartbeat_rate:
                                message = {"msg": "heartbeat"}
                                # Need to reset last_heartbeat with perf_counter
                                # otherwise only a single hearbeat msg will be sent
                                # and then the stream will retry leading to infinite queue ğŸ˜¬
                                last_heartbeat = time.perf_counter()

                        if message:
                            yield f"data: {json.dumps(message)}\n\n"
                except asyncio.CancelledError as e:
                    await blocks._queue.clean_event(event)
                    raise e
