def notify(tosend):
    def worker(tosend):
        context = zmq.Context()
        mysock = context.socket(zmq.PUB)
        mysock.connect("ipc:///tmp/keylime.verifier.ipc")
        # wait 100ms for connect to happen
        time.sleep(0.2)
        # now send it out via 0mq
        logger.info("Sending revocation event to listening nodes...")
        for i in range(config.getint('cloud_verifier', 'max_retries')):
            try:
                mysock.send_string(json.dumps(tosend))
                break
            except Exception as e:
                logger.debug("Unable to publish revocation message %d times, trying again in %f seconds: %s" % (
                    i, config.getfloat('cloud_verifier', 'retry_interval'), e))
                time.sleep(config.getfloat('cloud_verifier', 'retry_interval'))
        mysock.close()

    cb = functools.partial(worker, tosend)
    t = threading.Thread(target=cb)
    t.start()
