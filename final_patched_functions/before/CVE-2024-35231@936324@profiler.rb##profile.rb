      def profile(env, mode)
        @profile = ::RubyProf::Profile.new(measure_mode: ::RubyProf.const_get(mode.upcase))

        GC.enable_stats if GC.respond_to?(:enable_stats)
        request = Rack::Request.new(env.clone)
        runs = (request.params['profiler_runs'] || @times).to_i
        result = @profile.profile do
          runs.times { @app.call(env) }
        end
        GC.disable_stats if GC.respond_to?(:disable_stats)

        [200, headers(@printer, env, mode), print(@printer, result)]
      end
