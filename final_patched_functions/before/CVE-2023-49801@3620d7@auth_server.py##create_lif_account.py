async def create_lif_account(request: Request):
    """
    ## Create Lif Account (NEW)
    Handles the creation of Lif Accounts
    
    ### Parameters:
    - **username (str):** The username for the account.
    - **password (str):** The password for the account.
    - **email (str):** The email for the account.

    ### Returns:
    - **dict:** Status of the operation.
    """
    # Get POST data
    data = await request.json()
    username = data["username"]
    password = data["password"]
    email = data["email"]

    # Check username usage
    username_status = database.check_username(username)
    if username_status:
        raise HTTPException(status_code=409, detail="Username Already in Use!")

    # Check email usage
    email_status = database.check_email(email)
    if email_status:
        raise HTTPException(status_code=409, detail="Email Already in Use!")

    # Check if email is valid
    email_isValid = email_interface.is_valid_email(email)
    if not email_isValid:
        raise HTTPException(status_code=400, detail="Invalid Email!")

    # Hash user password
    password_hash = hasher.get_hash_gen_salt(password)

    # Create user account
    database.create_account(username=username, password=password_hash['password'], email=email, password_salt=password_hash['salt'])

    return {"Status": "Ok"}  
