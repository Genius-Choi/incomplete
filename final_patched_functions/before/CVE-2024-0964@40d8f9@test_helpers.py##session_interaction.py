    async def session_interaction(name, delay=0):
        await asyncio.sleep(delay)

        log_messages = []
        async with httpx.AsyncClient() as client:
            async with client.stream(
                "GET",
                f"http://localhost:{demo.server_port}/queue/join",
                params={"fn_index": 0, "session_hash": name},
            ) as response:
                async for line in response.aiter_text():
                    if line.startswith("data:"):
                        msg = json.loads(line[5:])
                    if msg["msg"] == "send_data":
                        event_id = msg["event_id"]
                        req = await client.post(
                            f"http://localhost:{demo.server_port}/queue/data",
                            json={
                                "event_id": event_id,
                                "data": [name],
                                "fn_index": 0,
                            },
                        )
                        if not req.is_success:
                            raise ValueError(
                                f"Could not send payload to endpoint: {req.text}"
                            )
                    if msg["msg"] == "log":
                        log_messages.append(msg["log"])
                    if msg["msg"] == "process_completed":
                        break
        return log_messages
