def set_settings():
    """
    <Purpose>
      Calls functions that read in-toto related environment variables and RCfiles
      and overrides variables in `settings.py` with the retrieved values, if they
      are whitelisted in `IN_TOTO_SETTINGS`.

      Settings defined in RCfiles take precedence over settings defined in
      environment variables.

    <Exceptions>
      None.

    <Side Effects>
      Calls functions that read environment variables and files from disk.

    <Returns>
      None.

    """
    user_settings = get_env()
    user_settings.update(get_rc())

    # If the user has specified one of the settings whitelisted in
    # IN_TOTO_SETTINGS per envvar or rcfile, override the item in `settings.py`
    for setting in IN_TOTO_SETTINGS:
        user_setting = user_settings.get(setting)
        if user_setting:
            LOG.info("Setting (user): {0}={1}".format(setting, user_setting))
            setattr(in_toto.settings, setting, user_setting)

        else:
            default_setting = getattr(in_toto.settings, setting)
            LOG.info(
                "Setting (default): {0}={1}".format(setting, default_setting)
            )
