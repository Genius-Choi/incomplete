def get_env():
    """
    <Purpose>
      Parse environment for variables with prefix `ENV_PREFIX` and return
      a dict of key-value pairs.

      The prefix `ENV_PREFIX` is stripped from the keys in the returned dict.

      Values that contain colons (:) are split at the postion of the colons and
      converted into a list.


      Example:

      ```
      # Exporting variables in e.g. bash
      export IN_TOTO_ARTIFACT_BASE_PATH='/home/user/project'
      export IN_TOTO_ARTIFACT_EXCLUDE_PATTERNS='*.link:.gitignore'
      export IN_TOTO_LINK_CMD_EXEC_TIMEOUT='10'
      ```

      produces

      ```
      {
        "ARTIFACT_BASE_PATH": "/home/user/project"
        "ARTIFACT_EXCLUDE_PATTERNS": ["*.link", ".gitignore"]
        "LINK_CMD_EXEC_TIMEOUT": "10"
      }
      ```

    <Exceptions>
      None.

    <Side Effects>
      Calls function to read files from disk.

    <Returns>
      A dictionary containing the parsed key-value pairs.

    """
    env_dict = {}

    for name, value in os.environ.items():
        if name.startswith(ENV_PREFIX) and len(name) > len(ENV_PREFIX):
            stripped_name = name[len(ENV_PREFIX) :]

            env_dict[stripped_name] = _colon_split(value)

    return env_dict
