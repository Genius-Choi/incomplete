  def test_each_works
    reader = Zlib::GzipReader.new(StringIO.new(TEST_TGZ))
    Minitar::Input.open(reader) do |stream|
      outer = 0
      stream.each.with_index do |entry, i|
        assert_kind_of(Minitar::Reader::EntryStream, entry)
        assert TEST_CONTENTS.has_key?(entry.name)

        assert_equal(TEST_CONTENTS[entry.name][:size], entry.size, entry.name)
        assert_modes_equal(TEST_CONTENTS[entry.name][:mode],
                           entry.mode, entry.name)
        assert_equal(FILETIMES, entry.mtime, "entry.mtime")

        if i.zero?
          data_reader = Zlib::GzipReader.new(StringIO.new(entry.read))
          Minitar::Input.open(data_reader) do |is2|
            inner = 0
            is2.each_with_index do |entry2, j|
              assert_kind_of(Minitar::Reader::EntryStream, entry2)
              assert TEST_DATA_CONTENTS.has_key?(entry2.name)
              assert_equal(TEST_DATA_CONTENTS[entry2.name][:size], entry2.size,
                           entry2.name)
              assert_modes_equal(TEST_DATA_CONTENTS[entry2.name][:mode],
                                 entry2.mode, entry2.name)
              assert_equal(FILETIMES, entry2.mtime, entry2.name)
              inner += 1
            end
            assert_equal(4, inner)
          end
        end

        outer += 1
      end
      assert_equal(2, outer)
    end
  end
