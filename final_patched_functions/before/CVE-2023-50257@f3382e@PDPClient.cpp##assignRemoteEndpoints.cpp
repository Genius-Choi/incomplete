void PDPClient::assignRemoteEndpoints(
        ParticipantProxyData* pdata)
{
    {
        eprosima::shared_lock<eprosima::shared_mutex> disc_lock(mp_builtin->getDiscoveryMutex());

        // Verify if this participant is a server
        for (auto& svr : mp_builtin->m_DiscoveryServers)
        {
            if (data_matches_with_prefix(svr.guidPrefix, *pdata))
            {
                std::unique_lock<std::recursive_mutex> lock(*getMutex());
                svr.proxy = pdata;
            }
        }
    }

#if HAVE_SECURITY
    if (mp_RTPSParticipant->security_manager().discovered_participant(*pdata))
#endif // HAVE_SECURITY
    {
        perform_builtin_endpoints_matching(*pdata);
    }
}
