  def incoming
    account = Account.find_by_id_or_name(params[:account_name])
    channel = account.geopoll_channels.find_by_name(params[:channel_name])
    auth_token = channel.configuration[:auth_token].to_s.split(' ')[1]
    identifier = params[:Identifier]
    signature = Digest::MD5.hexdigest(auth_token + identifier)

    if signature != params[:Signature]
      return render text: "Error", status: :unauthorized
    end

    msg = AtMessage.new
    msg.from = "sms://#{params[:SourceAddress]}"
    msg.to   = "sms://#{channel.configuration[:from]}"
    msg.body = params[:MessageText]
    msg.channel_relative_id = params[:Identifier]
    account.route_at msg, channel

    render text: "Accepted"
  end
