def to_bytes32(expr, args, kwargs, context):
    in_arg = args[0]
    input_type, _len = get_type(in_arg)

    if input_type == "Bytes":
        if _len > 32:
            raise TypeMismatch(
                f"Unable to convert bytes[{_len}] to bytes32, max length is too " "large."
            )

        if in_arg.location == "storage":
            return LLLnode.from_list(["sload", ["add", in_arg, 1]], typ=BaseType("bytes32"))
        else:
            op = load_op(in_arg.location)
            return LLLnode.from_list([op, ["add", in_arg, 32]], typ=BaseType("bytes32"))

    else:
        return LLLnode(
            value=in_arg.value, args=in_arg.args, typ=BaseType("bytes32"), pos=getpos(expr)
        )
