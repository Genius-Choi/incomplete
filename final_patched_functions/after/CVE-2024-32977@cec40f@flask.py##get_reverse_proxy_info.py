def get_reverse_proxy_info():
    headers = {}
    for header in sorted(
        (
            "X-Forwarded-For",
            "X-Forwarded-Protocol",
            "X-Scheme",
            "X-Forwarded-Host",
            "X-Forwarded-Port",
            "X-Forwarded-Server",
            "Host",
            "X-Script-Name",
        )
    ):
        if header in flask.request.headers:
            headers[header] = flask.request.headers[header]

    trusted_downstreams = settings().get(["server", "reverseProxy", "trustedDownstream"])
    if not trusted_downstreams:
        trusted_downstreams = []

    return ReverseProxyInfo(
        client_ip=flask.request.remote_addr,
        server_protocol=flask.request.environ.get("wsgi.url_scheme"),
        server_name=flask.request.environ.get("SERVER_NAME"),
        server_port=int(flask.request.environ.get("SERVER_PORT")),
        server_path=flask.request.script_root if flask.request.script_root else "/",
        cookie_suffix=get_cookie_suffix(flask.request),
        trusted_proxies=trusted_downstreams,
        headers=headers,
    )
