    def update_myself(
        user: UserUpdate,
        auth_context: AuthContext = Security(authorize),
    ) -> UserResponse:
        """Updates a specific user.

        Args:
            user: the user to use for the update.
            auth_context: The authentication context.

        Returns:
            The updated user.

        Raises:
            IllegalOperationError: if the current password is not supplied when
                changing the password or if the current password is incorrect.
        """
        current_user = zen_store().get_user(auth_context.user.id)

        if user.password is not None:
            # If the user is updating their password, we need to verify
            # the old password
            if user.old_password is None:
                raise IllegalOperationError(
                    "The current password must be supplied when changing the "
                    "password."
                )
            auth_user = zen_store().get_auth_user(auth_context.user.id)
            if not UserAuthModel.verify_password(user.old_password, auth_user):
                raise IllegalOperationError(
                    "The current password is incorrect."
                )

        user.activation_token = current_user.activation_token
        user.active = current_user.active
        user.is_admin = current_user.is_admin

        updated_user = zen_store().update_user(
            user_id=auth_context.user.id, user_update=user
        )
        return dehydrate_response_model(updated_user)
