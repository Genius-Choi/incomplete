def upload_avatar():
    if request.method == "POST":
        # check if the post request has the file part
        if "file" not in request.files:
            flash("No file part")
            return redirect(request.url)
        file = request.files["file"]
        # If the user does not select a file, the browser submits an
        # empty file without a filename.
        if file.filename == "":
            flash("No selected file")
            return redirect(request.url)
        # Sanity check: limit uploadable filename
        # to avoid excessive burden to NFKD normalization
        # in secure_filename() method
        if len(file.filename) > 1000:
            flash("Filename too long")
            return redirect(request.url)
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            new_filename = os.urandom(16).hex()
            f, ext = os.path.splitext(filename)

            if ext in [".jpg", ".jpeg"]:
                file.save(os.path.join(UPLOAD_FOLDER + "/" + new_filename + ".jpg"))
            else:
                try:
                    file.save(
                        os.path.join(UPLOAD_TMP_FOLDER + "/" + new_filename + ext)
                    )
                    with Image.open(UPLOAD_TMP_FOLDER + "/" + new_filename + ext) as im:
                        rgb_im = im.convert("RGB")
                        rgb_im.save(UPLOAD_FOLDER + "/" + new_filename + ".jpg")
                        os.unlink(UPLOAD_TMP_FOLDER + "/" + new_filename + ext)
                except OSError:
                    print("cannot convert", new_filename + ".jpg")

            user = Users.query.filter_by(id=current_user.id).first()

            # If user have avatar -> remove it from disk
            new_full_filename = new_filename + ".jpg"
            if user.avatar_uri != "empty.jpg":
                if os.path.isfile(UPLOAD_FOLDER + "/" + user.avatar_uri):
                    os.unlink(UPLOAD_FOLDER + "/" + user.avatar_uri)

            user.avatar_uri = new_full_filename
            db.session.commit()

    return "", 204
