def web_server_check(domain: str):
    try:
        domain_name(domain)
    except Exception:
        return {"status": False, "statusmessage": "The given domain is invalid!"}
    nmap = nmap3.Nmap()
    logger.info(f"server scan: testing {domain}")
    service_scans = nmap.nmap_version_detection(
        domain, args="--script vulners --script-args mincvss+5.0"
    )
    # Could be used later for better reporting
    # runtime = service_scans.pop("runtime")
    # stats = service_scans.pop("stats")
    # task_results = service_scans.pop("task_results")
    services = []
    vulnerabilities = []
    ip, service_scans = list(service_scans.items())[0]
    for port in service_scans["ports"]:
        if port["state"] != "closed":
            service = port["service"]
            vulners = port["scripts"]
            list_of_vulns = []
            if vulners:
                vulners = vulners[0]["data"]
                for _vuln, vuln_data in vulners.items():
                    try:
                        list_of_vulns += vuln_data.get("children")
                    except TypeError:
                        continue
                    except AttributeError:
                        continue
            services.append(service)
            try:
                vulnerabilities.append(
                    {
                        "service": f'{service["product"]} - {service["name"]}',
                        "vuln_list": list_of_vulns,
                    }
                )
            except KeyError:
                pass
    logger.info("server scan: Done!")
    logger.info(vulnerabilities)
    return {"services": services, "vulnerabilities": vulnerabilities}
