      explicit JpegOutput( String const& filename, std::jmp_buf const& setjmp_buffer ) {
         // Open the file for writing
         if( FileHasExtension( filename )) {
            outfile_ = std::fopen(filename.c_str(), "wb");
         } else {
            outfile_ = std::fopen( FileAddExtension( filename, "jpg" ).c_str(), "wb" );
         }
         if( outfile_ == nullptr ) {
            DIP_THROW_RUNTIME( "Could not open file for writing" );
         }
         cinfo_.err = jpeg_std_error( &jerr_.pub );
         jerr_.pub.error_exit = my_error_exit;
         jerr_.pub.output_message = my_output_message;
         std::memcpy( jerr_.setjmp_buffer, setjmp_buffer, sizeof( setjmp_buffer ));
         jpeg_create_compress( &cinfo_ );
         initialized_ = true;
         jpeg_stdio_dest( &cinfo_, outfile_ );
      }
