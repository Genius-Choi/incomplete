  def set_basic
    Log.add_info(request, params.inspect)

    return unless request.post?

    if params[:item][:xtype] == Item::XTYPE_ZEPTAIR_DIST \
        and !@login_user.admin?(User::AUTH_ZEPTAIR)
      render(:text => t('msg.need_to_be_admin'))
      return
    end

    folder_id = params[:item][:folder_id]

    unless Folder.check_user_auth(folder_id, @login_user, 'w', true)
      @item = Item.new(params.require(:item).permit(Item::PERMIT_BASE))
      @item.errors.add_to_base t('folder.need_auth_to_write_in')
      render(:partial => 'ajax_item_basic', :layout => false)
      return
    end

    if (params[:check_create_folder] == '1') and !params[:create_folder_name].empty?
      folder = Folder.new
      folder.name = params[:create_folder_name]
      folder.parent_id = folder_id
      folder.inherit_parent_auth
      folder.save!

      params[:item][:folder_id] = folder.id
    end

    if params[:check_clear_original] == '1'
      params[:item][:original_by] = nil
      params[:item][:source_id] = nil
    end

    if params[:id].blank?
      @item = Item.new_info(folder_id)
      @item.attributes = params.require(:item).permit(Item::PERMIT_BASE)
      @item.user_id = @login_user.id
      @item.save
    else
      @item = Item.find(params[:id])

      rename_team = false
      delete_team = false
      delete_zept_cmd = false

      if @item.xtype == Item::XTYPE_PROJECT

        if params[:item][:xtype] == Item::XTYPE_PROJECT
          if params[:item][:title] != @item.title
            rename_team = true
          end
        else
          # No more Project
          delete_team = true
        end
      elsif @item.xtype == Item::XTYPE_ZEPTAIR_DIST \
              and params[:item][:xtype] != Item::XTYPE_ZEPTAIR_DIST
        delete_zept_cmd = true
      end

      @item.update_attributes(params.require(:item).permit(Item::PERMIT_BASE))

      unless @item.team.nil?
        if rename_team
          @item.team.rename(@item.title)
        end

        if delete_team
          begin
            @item.team.destroy
          rescue => evar
            Log.add_error(request, evar)
          end
        end
      end

      unless @item.zeptair_command
        if delete_zept_cmd
          begin
            @item.zeptair_command.destroy
          rescue => evar
            Log.add_error(request, evar)
          end
        end
      end
    end

    if @item.xtype == Item::XTYPE_ZEPTAIR_DIST
      if @item.zeptair_command.nil?
        @item.zeptair_command = ZeptairCommand.new
      end
      params[:zeptair_command].delete(:item_id)
      @item.zeptair_command.attributes = params[:zeptair_command]
      if @item.zeptair_command.changed?
        @item.zeptair_command.save!
      end
    end

    render(:partial => 'ajax_item_basic', :layout => false)

  rescue => evar
    Log.add_error(request, evar)
    render(:partial => 'ajax_item_basic', :layout => false)
  end
