bool GeneralName::matches_dns(const std::string& name, const std::string& constraint) {
   // both constraint and name are assumed already tolower
   if(name.size() == constraint.size()) {
      return name == constraint;
   } else if(constraint.size() > name.size()) {
      // The constraint is longer than the issued name: not possibly a match
      return false;
   } else {
      BOTAN_ASSERT_NOMSG(name.size() > constraint.size());

      if(constraint.empty()) {
         return true;
      }

      std::string_view substr = std::string_view(name).substr(name.size() - constraint.size(), constraint.size());

      if(constraint.front() == '.') {
         return substr == constraint;
      } else {
         return substr[0] == '.' && substr.substr(1) == constraint;
      }
   }
}
