def test_options(cli_runner, mocker):
    client = mocker.patch("vault_cli.client.get_client_class").return_value
    mocker.patch(
        "vault_cli.settings.read_file", side_effect=lambda x: "content of {}".format(x)
    )
    result = cli_runner.invoke(
        cli.cli,
        [
            "--base-path",
            "bla",
            "--ca-bundle",
            "yay",
            "--login-cert",
            "puc",
            "--login-cert-key",
            "prc",
            "--password-file",
            "b",
            "--token-file",
            "c",
            "--url",
            "https://foo",
            "--username",
            "user",
            "--verify",
            "list",
        ],
    )

    assert result.exit_code == 0, result.output
    _, kwargs = client.call_args
    assert set(kwargs) == {
        "base_path",
        "ca_bundle",
        "login_cert",
        "login_cert_key",
        "password",
        "safe_write",
        "token",
        "url",
        "username",
        "verify",
    }
    assert kwargs["base_path"] == "bla"
    assert kwargs["ca_bundle"] == "yay"
    assert kwargs["login_cert"] == "puc"
    assert kwargs["login_cert_key"] == "prc"
    assert kwargs["password"] == "content of b"
    assert kwargs["token"] == "content of c"
    assert kwargs["url"] == "https://foo"
    assert kwargs["username"] == "user"
    assert kwargs["verify"] is True
