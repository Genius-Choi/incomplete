def build_unsubscribed_sub_from_stream_dict(
    user: UserProfile, sub_dict: RawSubscriptionDict, stream_dict: APIStreamDict
) -> SubscriptionStreamDict:
    # This function is only called from `apply_event` code.
    raw_stream_dict = RawStreamDict(
        can_remove_subscribers_group_id=stream_dict["can_remove_subscribers_group_id"],
        date_created=timestamp_to_datetime(stream_dict["date_created"]),
        description=stream_dict["description"],
        first_message_id=stream_dict["first_message_id"],
        history_public_to_subscribers=stream_dict["history_public_to_subscribers"],
        invite_only=stream_dict["invite_only"],
        is_web_public=stream_dict["is_web_public"],
        message_retention_days=stream_dict["message_retention_days"],
        name=stream_dict["name"],
        rendered_description=stream_dict["rendered_description"],
        id=stream_dict["stream_id"],
        stream_post_policy=stream_dict["stream_post_policy"],
    )

    # We pass recent_traffic as an empty objecy and avoid extra database
    # query since we would just set it to None later.
    subscription_stream_dict = build_stream_dict_for_sub(
        user, sub_dict, raw_stream_dict, recent_traffic={}
    )

    return subscription_stream_dict
