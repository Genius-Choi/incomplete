      def validate
        ids = Database.ids
        unless database_ids.is_a?(Array) &&
               !database_ids.empty? &&
               (ids & database_ids).length == database_ids.length

          fail(
            DatabaseUnreachableError,
            "Database id should be one of: #{ids.join("\n")}"
          )
        end

        invalid_sequence_ids = sequence_ids.reject do |id|
          id =~ SequenceServer::BLAST::VALID_SEQUENCE_ID
        end

        unless invalid_sequence_ids.empty?
          fail(
            InvalidSequenceIdError,
            "Invalid sequence id(s): #{invalid_sequence_ids.join(', ')}"
          )
        end

        true
      end
