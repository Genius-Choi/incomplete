  def can_be_deleted?
    # check all packages
    self.packages.each do |pkg|
      begin
        pkg.can_be_deleted? # throws
      rescue Package::DeleteError => e
        e.packages.each do |p|
          if p.project != self
	    raise DeleteError.new "Package #{self.name}/{pkg.name} can not be deleted as it's devel package of #{p.project.name}/#{p.name}"
	  end
        end
      end
    end

    # do not allow to remove maintenance master projects if there are incident projects
    if self.project_type == "maintenance"
      if MaintenanceIncident.find_by_maintenance_db_project_id self.id
        raise DeleteError.new "This maintenance project has incident projects and can therefore not be deleted."
      end
    end
    
  end
