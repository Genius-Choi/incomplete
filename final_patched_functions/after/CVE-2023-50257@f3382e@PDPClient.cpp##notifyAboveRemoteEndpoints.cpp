void PDPClient::notifyAboveRemoteEndpoints(
        const ParticipantProxyData& pdata,
        bool /*notify_secure_endpoints*/)
{
#if HAVE_SECURITY
    if (mp_RTPSParticipant->is_secure())
    {
        eprosima::shared_lock<eprosima::shared_mutex> disc_lock(mp_builtin->getDiscoveryMutex());

        // Verify if this participant is a server
        for (auto& svr : mp_builtin->m_DiscoveryServers)
        {
            if (data_matches_with_prefix(svr.guidPrefix, pdata))
            {
                if (nullptr == svr.proxy)
                {
                    //! try to retrieve the participant proxy data from an unmangled prefix in case
                    //! we could not fill svr.proxy in assignRemoteEndpoints()
                    svr.proxy = get_participant_proxy_data(svr.guidPrefix);
                }

                match_pdp_reader_nts_(svr, pdata.m_guid.guidPrefix);
                match_pdp_writer_nts_(svr, pdata.m_guid.guidPrefix);
                break;
            }
        }
    }
#endif // HAVE_SECURITY

    perform_builtin_endpoints_matching(pdata);
}
