bool CV8RealTimeWorker::ExecuteCommand(const std::wstring& command, NSDoctRenderer::CDocBuilderValue* retValue)
{
	LOGGER_SPEED_START

	if (retValue)
		retValue->Clear();

	std::string commandA = U_TO_UTF8(command);
	//commandA = "Api." + commandA;

	JSSmart<CJSContextScope> context_scope = m_context->CreateContextScope();
	JSSmart<CJSTryCatch> try_catch = m_context->GetExceptions();

	LOGGER_SPEED_LAP("compile_command")

	JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);
	if(try_catch->Check())
		return false;

	if (retValue)
	{
		NSDoctRenderer::CDocBuilderValue_Private* privateRet = (NSDoctRenderer::CDocBuilderValue_Private*)retValue->private_get_internal();
		privateRet->m_context = m_context;
		privateRet->m_value = retNativeVal;
	}

	LOGGER_SPEED_LAP("run_command")

	return true;
}
