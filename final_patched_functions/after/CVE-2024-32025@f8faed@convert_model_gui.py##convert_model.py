def convert_model(
    source_model_input,
    source_model_type,
    target_model_folder_input,
    target_model_name_input,
    target_model_type,
    target_save_precision_type,
    unet_use_linear_projection,
):
    # Check for caption_text_input
    if source_model_type == "":
        msgbox("Invalid source model type")
        return

    # Check if source model exist
    if os.path.isfile(source_model_input):
        log.info("The provided source model is a file")
    elif os.path.isdir(source_model_input):
        log.info("The provided model is a folder")
    else:
        msgbox("The provided source model is neither a file nor a folder")
        return

    # Check if source model exist
    if os.path.isdir(target_model_folder_input):
        log.info("The provided model folder exist")
    else:
        msgbox("The provided target folder does not exist")
        return

    run_cmd = (
        rf'"{PYTHON}" "{scriptdir}/sd-scripts/tools/convert_diffusers20_original_sd.py"'
    )

    v1_models = [
        "runwayml/stable-diffusion-v1-5",
        "CompVis/stable-diffusion-v1-4",
    ]

    # check if v1 models
    if str(source_model_type) in v1_models:
        log.info("SD v1 model specified. Setting --v1 parameter")
        run_cmd += " --v1"
    else:
        log.info("SD v2 model specified. Setting --v2 parameter")
        run_cmd += " --v2"

    if not target_save_precision_type == "unspecified":
        run_cmd += f" --{target_save_precision_type}"

    if target_model_type == "diffuser" or target_model_type == "diffuser_safetensors":
        run_cmd += f' --reference_model="{source_model_type}"'

    if target_model_type == "diffuser_safetensors":
        run_cmd += " --use_safetensors"

    # Fix for stabilityAI diffusers format. When saving v2 models in Diffusers format in training scripts and conversion scripts,
    # it was found that the U-Net configuration is different from those of Hugging Face's stabilityai models (this repository is
    # "use_linear_projection": false, stabilityai is true). Please note that the weight shapes are different, so please be careful
    # when using the weight files directly.

    if unet_use_linear_projection:
        run_cmd += " --unet_use_linear_projection"

    run_cmd += f' "{source_model_input}"'

    if target_model_type == "diffuser" or target_model_type == "diffuser_safetensors":
        target_model_path = os.path.join(
            target_model_folder_input, target_model_name_input
        )
        run_cmd += f' "{target_model_path}"'
    else:
        target_model_path = os.path.join(
            target_model_folder_input,
            f"{target_model_name_input}.{target_model_type}",
        )
        run_cmd += f' "{target_model_path}"'

    log.info(run_cmd)

    env = os.environ.copy()
    env["PYTHONPATH"] = (
        rf"{scriptdir}{os.pathsep}{scriptdir}/sd-scripts{os.pathsep}{env.get('PYTHONPATH', '')}"
    )

    # Run the command
    subprocess.run(run_cmd, env=env)
