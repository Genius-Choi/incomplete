    def secure_reaction_users!(reaction_users)
      if !guardian.can_see_private_messages?(current_user.id) || !guardian.user
        reaction_users = reaction_users.where("topics.archetype <> :private_message", private_message: archetype::private_message)
      else
        unless guardian.is_admin?
          sql = <<~SQL
            topics.archetype <> :private_message OR
            EXISTS (
              SELECT 1 FROM topic_allowed_users tu WHERE tu.topic_id = topics.id AND tu.user_id = :current_user_id
            ) OR
            EXISTS (
              SELECT 1 FROM topic_allowed_groups tg WHERE tg.topic_id = topics.id AND tg.group_id IN (
                SELECT group_id FROM group_users gu WHERE gu.user_id = :current_user_id
              )
            )
          SQL

          reaction_users = reaction_users.where(sql, private_message: Archetype::private_message, current_user_id: guardian.user.id)
        end
      end

      unless guardian.is_admin?
        allowed = guardian.secure_category_ids
        if allowed.present?
          reaction_users = reaction_users.where("(categories.read_restricted IS NULL OR
                         NOT categories.read_restricted OR
                        (categories.read_restricted and categories.id in (:categories)) )", categories: guardian.secure_category_ids)
        else
          reaction_users = reaction_users.where("(categories.read_restricted IS NULL OR NOT categories.read_restricted)")
        end
      end

      reaction_users
    end
