def read_project_flags(project_dir: str, profiles_dir: str) -> ProjectFlags:
    try:
        project_flags: Dict[str, Any] = {}
        # Read project_flags from dbt_project.yml first
        # Flags are instantiated before the project, so we don't
        # want to throw an error for non-existence of dbt_project.yml here
        # because it breaks things.
        project_root = os.path.normpath(project_dir)
        project_yaml_filepath = os.path.join(project_root, DBT_PROJECT_FILE_NAME)
        if path_exists(project_yaml_filepath):
            try:
                project_dict = load_raw_project(project_root)
                if "flags" in project_dict:
                    project_flags = project_dict.pop("flags")
            except Exception:
                # This is probably a yaml load error.The error will be reported
                # later, when the project loads.
                pass

        from dbt.config.profile import read_profile

        profile = read_profile(profiles_dir)
        profile_project_flags: Optional[Dict[str, Any]] = {}
        if profile:
            profile_project_flags = coerce_dict_str(profile.get("config", {}))

        if project_flags and profile_project_flags:
            raise DbtProjectError(
                f"Do not specify both 'config' in profiles.yml and 'flags' in {DBT_PROJECT_FILE_NAME}. "
                "Using 'config' in profiles.yml is deprecated."
            )

        if profile_project_flags:
            # This can't use WARN_ERROR or WARN_ERROR_OPTIONS because they're in
            # the config that we're loading. Uses special "warn" method.
            deprecations.warn("project-flags-moved")
            project_flags = profile_project_flags

        if project_flags is not None:
            ProjectFlags.validate(project_flags)
            return ProjectFlags.from_dict(project_flags)
    except (DbtProjectError) as exc:
        # We don't want to eat the DbtProjectError for UserConfig to ProjectFlags
        raise exc
    except (DbtRuntimeError, ValidationError):
        pass
    return ProjectFlags()
