def parse_jwt_token(request: func.HttpRequest) -> Result[UserInfo]:
    """Obtains the Access Token from the Authorization Header"""
    token_str = get_auth_token(request)
    if token_str is None:
        return Error(
            code=ErrorCode.INVALID_REQUEST,
            errors=["unable to find authorization token"],
        )

    # The JWT token has already been verified by the azure authentication layer,
    # but we need to verify the tenant is as we expect.
    token = jwt.decode(token_str, options={"verify_signature": False})

    if "iss" not in token:
        return Error(
            code=ErrorCode.INVALID_REQUEST, errors=["missing issuer from token"]
        )

    tenants = get_allowed_tenants()
    if token["iss"] not in tenants:
        logging.error("issuer not from allowed tenant: %s - %s", token["iss"], tenants)
        return Error(code=ErrorCode.INVALID_REQUEST, errors=["unauthorized AAD issuer"])

    application_id = UUID(token["appid"]) if "appid" in token else None
    object_id = UUID(token["oid"]) if "oid" in token else None
    upn = token.get("upn")
    return UserInfo(application_id=application_id, object_id=object_id, upn=upn)
