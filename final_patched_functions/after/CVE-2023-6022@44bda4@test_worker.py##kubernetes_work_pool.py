async def kubernetes_work_pool(prefect_client: PrefectClient):
    work_pool = await prefect_client.create_work_pool(
        work_pool=WorkPoolCreate(name="test-k8s-work-pool", type="kubernetes-test")
    )

    with respx.mock(
        assert_all_mocked=False, base_url=PREFECT_API_URL.value()
    ) as respx_mock:
        respx_mock.get("/csrf-token", params={"client": ANY}).pass_through()
        respx_mock.route(path__startswith="/work_pools/").pass_through()
        respx_mock.route(path__startswith="/flow_runs/").pass_through()
        respx_mock.get("/collections/views/aggregate-worker-metadata").mock(
            return_value=httpx.Response(
                200,
                json={
                    "prefect": {
                        "prefect-agent": {
                            "type": "prefect-agent",
                            "default_base_job_configuration": {},
                        }
                    },
                    "prefect-kubernetes": {
                        "kubernetes-test": {
                            "type": "kubernetes-test",
                            "default_base_job_configuration": {},
                        }
                    },
                },
            )
        )

        yield work_pool
