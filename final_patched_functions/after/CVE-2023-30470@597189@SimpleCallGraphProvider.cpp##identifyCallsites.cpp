static bool identifyCallsites(
    Function *F,
    llvh::DenseSet<CallInst *> &callSites) {
  // Non-strict functions can be aliased in multiple ways (
  // arguments.callee, Function.prototype.caller etc). Do not try to identify
  // the callsites for those.
  if (!F->isStrictMode()) {
    return false;
  }

  for (auto *CU : F->getUsers()) {
    if (auto *CI = llvh::dyn_cast<CallInst>(CU)) {
      if (!isDirectCallee(F, CI))
        return false;
      callSites.insert(CI);
    } else if (auto *CFI = llvh::dyn_cast<CreateFunctionInst>(CU)) {
      for (auto *CL : CFI->getUsers()) {
        auto *CI = llvh::dyn_cast<CallInst>(CL);
        if (!CI)
          return false;

        if (!isDirectCallee(CFI, CI))
          return false;
        callSites.insert(CI);
      }
    } else {
      return false;
    }
  }
  return true;
}
