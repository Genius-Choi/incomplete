def santize_for_csv(data: str | List[str] | List[List[str]]):
    """Sanitizes data so that it can be safely written to a CSV file."""

    def sanitize(item):
        return "'" + item

    unsafe_prefixes = ("+", "=", "-", "@")
    warning_message = "Sanitizing flagged data by escaping cell contents that begin "
    "with one of the following characters: '+', '=', '-', '@'."

    if isinstance(data, str):
        if data.startswith(unsafe_prefixes):
            warnings.warn(warning_message)
            return sanitize(data)
        return data
    elif isinstance(data, list) and isinstance(data[0], str):
        sanitized_data = copy.deepcopy(data)
        for index, item in enumerate(data):
            if item.startswith(unsafe_prefixes):
                warnings.warn(warning_message)
                sanitized_data[index] = sanitize(item)
        return sanitized_data
    elif isinstance(data[0], list) and isinstance(data[0][0], str):
        sanitized_data = copy.deepcopy(data)
        for outer_index, sublist in enumerate(data):
            for inner_index, item in enumerate(sublist):
                if item.startswith(unsafe_prefixes):
                    warnings.warn(warning_message)
                    sanitized_data[outer_index][inner_index] = sanitize(item)
        return sanitized_data
    else:
        raise ValueError("Unsupported data type: " + str(type(data)))
