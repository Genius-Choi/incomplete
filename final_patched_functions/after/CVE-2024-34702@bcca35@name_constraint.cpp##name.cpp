std::string GeneralName::name() const {
   const size_t index = m_names.index();

   if(index == RFC822_IDX) {
      return std::get<RFC822_IDX>(m_names);
   } else if(index == DNS_IDX) {
      return std::get<DNS_IDX>(m_names);
   } else if(index == URI_IDX) {
      return std::get<URI_IDX>(m_names);
   } else if(index == DN_IDX) {
      return std::get<DN_IDX>(m_names).to_string();
   } else if(index == IPV4_IDX) {
      auto [net, mask] = std::get<IPV4_IDX>(m_names);
      return fmt("{}/{}", ipv4_to_string(net), ipv4_to_string(mask));
   } else {
      BOTAN_ASSERT_UNREACHABLE();
   }
}
