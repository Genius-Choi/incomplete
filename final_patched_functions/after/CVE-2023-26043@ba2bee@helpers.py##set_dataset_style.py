def set_dataset_style(saved_dataset, title, sld, base_file=None):
    # Check SLD is valid
    try:
        if sld:
            if isfile(sld):
                with open(sld, "rb") as sld_file:
                    sld = sld_file.read()

            elif isinstance(sld, str):
                sld = sld.strip('b\'\n')
                sld = re.sub(r'(\\r)|(\\n)', '', sld).encode("UTF-8")
            etree.XML(sld, parser=etree.XMLParser(resolve_entities=False))
        elif base_file and isfile(base_file):
            with open(base_file, "rb") as sld_file:
                sld = sld_file.read()
            dlxml.parse(base_file)
    except Exception:
        logger.exception("The uploaded SLD file is not valid XML")
        raise Exception("The uploaded SLD file is not valid XML")

    # Check Dataset's available styles
    match = None
    styles = list(saved_dataset.styles.all()) + [
        saved_dataset.default_style]
    for style in styles:
        if style and style.name == saved_dataset.name:
            match = style
            break
    layer = gs_catalog.get_layer(title)
    style = None
    if match is None:
        try:
            style = gs_catalog.get_style(saved_dataset.name, workspace=saved_dataset.workspace) or \
                gs_catalog.get_style(saved_dataset.name)
            if not style:
                style = gs_catalog.create_style(
                    saved_dataset.name, sld, overwrite=False, raw=True, workspace=saved_dataset.workspace)
        except Exception as e:
            logger.exception(e)
    else:
        try:
            _sld_format = _extract_style_version_from_sld(sld)
            style = gs_catalog.create_style(
                saved_dataset.name, sld,
                overwrite=True, raw=True, style_format=_sld_format,
                workspace=saved_dataset.workspace)
        except Exception as e:
            logger.exception(e)

    if layer and style:
        _old_styles = []
        _old_styles.append(gs_catalog.get_style(
            name=saved_dataset.name))
        _old_styles.append(gs_catalog.get_style(
            name=f"{saved_dataset.workspace}_{saved_dataset.name}"))
        if layer.default_style and layer.default_style.name:
            _old_styles.append(gs_catalog.get_style(
                name=layer.default_style.name))
            _old_styles.append(gs_catalog.get_style(
                name=layer.default_style.name,
                workspace=layer.default_style.workspace))
        layer.default_style = style
        gs_catalog.save(layer)
        for _s in _old_styles:
            try:
                gs_catalog.delete(_s)
                Link.objects.filter(
                    resource=saved_dataset.resourcebase_ptr,
                    name='Legend',
                    url__contains=f'STYLE={_s.name}').delete()
            except Exception as e:
                logger.debug(e)
        set_styles(saved_dataset, gs_catalog)
