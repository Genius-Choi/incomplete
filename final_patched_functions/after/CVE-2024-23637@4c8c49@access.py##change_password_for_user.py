def change_password_for_user(username):
    if not userManager.enabled:
        return jsonify(SUCCESS)

    if (
        current_user is not None
        and not current_user.is_anonymous
        and (
            current_user.get_name() == username
            or current_user.has_permission(Permissions.ADMIN)
        )
    ):
        data = request.get_json()

        if "password" not in data or not data["password"]:
            abort(400, description="new password is missing")

        if current_user.get_name() == username:
            if "current" not in data or not data["current"]:
                abort(400, description="current password is missing")

            if not userManager.check_password(username, data["current"]):
                abort(403, description="Invalid current password")

        elif current_user.has_permission(Permissions.ADMIN):
            ensure_credentials_checked_recently()

        else:
            # this should never happen
            abort(403, description="You are not allowed to change this user's password")

        try:
            userManager.change_user_password(username, data["password"])
        except users.UnknownUser:
            abort(404)

        return jsonify(SUCCESS)
    else:
        abort(403)
