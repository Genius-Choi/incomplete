async def get_pred_from_sse_v0(
    client: httpx.AsyncClient,
    data: dict,
    hash_data: dict,
    helper: Communicator,
    sse_url: str,
    sse_data_url: str,
    headers: dict[str, str],
    cookies: dict[str, str] | None,
) -> dict[str, Any] | None:
    done, pending = await asyncio.wait(
        [
            asyncio.create_task(check_for_cancel(helper, headers, cookies)),
            asyncio.create_task(
                stream_sse_v0(
                    client,
                    data,
                    hash_data,
                    helper,
                    sse_url,
                    sse_data_url,
                    headers,
                    cookies,
                )
            ),
        ],
        return_when=asyncio.FIRST_COMPLETED,
    )

    for task in pending:
        task.cancel()
        try:
            await task
        except asyncio.CancelledError:
            pass

    assert len(done) == 1
    for task in done:
        return task.result()
