  def valid?
    topic = Topic.new(setup_topic_params)
    # validate? will clear the error hash
    # so we fire the validation event after
    # this allows us to add errors
    valid = topic.valid?

    validate_visibility(topic)

    category = find_category
    if category.present? && guardian.can_tag?(topic)
      tags = @opts[:tags].presence || []
      existing_tags = tags.present? ? Tag.where(name: tags) : []
      valid_tags = guardian.can_create_tag? ? tags : existing_tags

      # all add to topic.errors
      DiscourseTagging.validate_min_required_tags_for_category(guardian, topic, category, valid_tags)
      DiscourseTagging.validate_required_tags_from_group(guardian, topic, category, existing_tags)
      DiscourseTagging.validate_category_restricted_tags(guardian, topic, category, valid_tags)
    end

    DiscourseEvent.trigger(:after_validate_topic, topic, self)
    valid &&= topic.errors.empty?

    add_errors_from(topic) unless valid

    valid
  end
