def invite_user(email_address, privilege=None, send=True):
    if not (current_user.is_authenticated and current_user.has_role_or_permission('admin', permissions=['create_user'])):
        raise DAError("You do not have sufficient privileges to create a new user")
    role_name = privilege or 'user'
    the_role_id = None
    for role in db.session.execute(select(Role).order_by('id')).scalars():
        if role.name == role_name:
            the_role_id = role.id
            break
    if the_role_id is None:
        raise DAError("Invalid privilege name " + repr(privilege))
    user, user_email = app.user_manager.find_user_by_email(email_address)  # pylint: disable=unused-variable
    if user:
        return DAError("A user with that email address already exists")
    user_invite = MyUserInvitation(email=email_address, role_id=the_role_id, invited_by_user_id=current_user.id)
    db.session.add(user_invite)
    db.session.commit()
    token = app.user_manager.generate_token(user_invite.id)
    accept_invite_link = url_for('user.register',
                                 token=token,
                                 _external=True)
    user_invite.token = token
    db.session.commit()
    if send:
        try:
            logmessage("Trying to send invite e-mail to " + str(user_invite.email))
            docassemble_flask_user.emails.send_invite_email(user_invite, accept_invite_link)
            logmessage("Sent e-mail invite to " + str(user_invite.email))
        except Exception as e:
            try:
                logmessage("Failed to send invite e-mail: " + e.__class__.__name__ + ': ' + str(e))
            except:
                logmessage("Failed to send invite e-mail")
            db.session.delete(user_invite)
            db.session.commit()
            raise DAError("Invitation email failed to send")
        return None
    return accept_invite_link
