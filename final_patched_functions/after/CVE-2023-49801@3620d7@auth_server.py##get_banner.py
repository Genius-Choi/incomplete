async def get_banner(username: str):
    """
    ## Get User Banner
    Allows services to get the account banner of a specified account.
    
    ### Parameters:
    - **username (str):** The username for the account.

    ### Returns:
    - **file:** The banner the service requested.
    """
    # Sanitize and validate the username variable (Example: alphanumeric characters allowed)
    if not username.isalnum():
        # Handle invalid input (username contains non-alphanumeric characters)
        return FileResponse(f'{assets_folder}/default_banner.png', media_type='image/gif')

    # Construct the file path using the sanitized username
    banner_path = f"user_images/banner/{username}"

    # Check if the file exists and is a regular file
    if os.path.isfile(banner_path):
        return FileResponse(banner_path, media_type='image/gif')
    else:
        # Return default image if the user's banner doesn't exist
        return FileResponse(f'{assets_folder}/default_banner.png', media_type='image/gif')
