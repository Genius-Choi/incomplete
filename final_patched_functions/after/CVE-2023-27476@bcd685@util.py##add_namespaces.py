def add_namespaces(root, ns_keys):
    if isinstance(ns_keys, str):
        ns_keys = [ns_keys]

    namespaces = Namespaces()

    ns_keys = [(x, namespaces.get_namespace(x)) for x in ns_keys]

    # lxml does not support setting xmlns attributes
    # Update the elements nsmap with new namespaces
    new_map = root.nsmap
    for key, link in ns_keys:
        if link is not None:
            new_map[key] = link
    # Recreate the root element with updated nsmap
    new_root = etree.Element(root.tag, nsmap=new_map)
    # Carry over attributes
    for a, v in list(root.items()):
        new_root.set(a, v)
    # Carry over children
    for child in root:
        new_root.append(deepcopy(child))
    return new_root

    # We can just add more namespaces when not using lxml.
    # We can't re-add an existing namespaces.  Get a list of current
    # namespaces in use
    existing_namespaces = set()
    for elem in root.iter():
        if elem.tag[0] == "{":
            uri, tag = elem.tag[1:].split("}")
            existing_namespaces.add(namespaces.get_namespace_from_url(uri))
    for key, link in ns_keys:
        if link is not None and key not in existing_namespaces:
            root.set("xmlns:%s" % key, link)
    return root
