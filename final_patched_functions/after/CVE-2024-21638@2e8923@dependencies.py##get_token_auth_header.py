async def get_token_auth_header(request: Request):
    auth = request.headers.get("Authorization", None)

    if not auth:
        raise HTTPException(status_code=401, detail="Authorization header is missing.")

    parts = auth.split()

    if parts[0].lower() != "bearer":
        raise HTTPException(status_code=401, detail="Authorization header must start with 'Bearer'.")
    elif len(parts) == 1:
        raise HTTPException(status_code=401, detail="Token not found.")
    elif len(parts) > 2:
        raise HTTPException(status_code=401, detail="Authorization header must be of type Bearer token.")

    token = parts[1]

    return token
