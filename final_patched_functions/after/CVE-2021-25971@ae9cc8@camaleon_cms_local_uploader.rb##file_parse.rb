  def file_parse(key)
    file_path = File.join(@root_folder, key)
    url_path, is_dir = file_path.sub(Rails.root.join('public').to_s, ''), File.directory?(file_path)
    res = {
        "name" => File.basename(key),
        "folder_path" => File.dirname(key),
        "url" => is_dir ? '' : (is_private_uploader? ? url_path.sub("#{@root_folder}/", '') : File.join(@current_site.decorate.the_url(as_path: true, locale: false, skip_relative_url_root: true), url_path)),
        "is_folder" => is_dir,
        "file_size" => is_dir ? 0 : File.size(file_path).round(2),
        "thumb" => '',
        'file_type' => self.class.get_file_format(file_path),
        'dimension' => ''
    }.with_indifferent_access
    res['key'] = File.join(res['folder_path'], res['name'])
    res["thumb"] = (is_private_uploader? ? '/admin/media/download_private_file?file=' + version_path(key).slice(1..-1) : version_path(res['url'])) if res['file_type'] == 'image' && File.extname(file_path).downcase != '.gif'
    if res['file_type'] == 'image'
      res["thumb"].sub! '.svg', '.jpg'
      im = MiniMagick::Image.open(file_path)
      res['dimension'] = "#{im[:width]}x#{im[:height]}" rescue "0x0" # Malformed SVGs raise an exception here.
    end
    res
  end
