TEST_P(ProxyFilterIntegrationTest, UpstreamTlsWithTooLongSni) {
  upstream_tls_ = true;
  initializeWithArgs(1024, 1024, "x-host");
  std::string too_long_sni(300, 'a');
  ASSERT_EQ(too_long_sni.size(), 300); // Validate that the expected constructor was run.
  codec_client_ = makeHttpConnection(lookupPort("http"));
  const Http::TestRequestHeaderMapImpl request_headers{{":method", "POST"},
                                                       {":path", "/test/long/url"},
                                                       {":scheme", "http"},
                                                       {":authority", "localhost"},
                                                       {"x-host", too_long_sni}};

  auto response = codec_client_->makeHeaderOnlyRequest(request_headers);
  ASSERT_TRUE(response->waitForEndStream());
  EXPECT_EQ("503", response->headers().getStatusValue());
  // TODO(ggreenway): validate (in access logs probably) that failure reason is set appropriately.
}
