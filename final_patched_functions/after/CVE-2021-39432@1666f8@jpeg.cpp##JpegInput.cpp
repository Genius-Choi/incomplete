      JpegInput( String filename, std::jmp_buf const& setjmp_buffer ) : filename_( std::move( filename )) {
         infile_ = std::fopen( filename_.c_str(), "rb" );
         if( infile_ == nullptr ) {
            if( !FileHasExtension( filename_ )) {
               filename_ = FileAddExtension( filename_, "jpg" ); // Try with "jpg" extension
               infile_ = std::fopen( filename_.c_str(), "rb" );
               if( infile_ == nullptr ) {
                  filename_ = FileAddExtension( filename_, "jpeg" ); // Try with "jpeg" extension
                  infile_ = std::fopen( filename_.c_str(), "rb" );
               }
            }
         }
         if( infile_ == nullptr ) {
            DIP_THROW_RUNTIME( "Could not open the specified JPEG file" );
         }
         cinfo_.err = jpeg_std_error( &jerr_.pub );
         jerr_.pub.error_exit = my_error_exit;
         jerr_.pub.output_message = my_output_message;
         std::memcpy( jerr_.setjmp_buffer, setjmp_buffer, sizeof( setjmp_buffer ));
         jpeg_create_decompress( &cinfo_ );
         initialized_ = true;
         jpeg_stdio_src( &cinfo_, infile_ );
         jpeg_read_header( &cinfo_, TRUE );
      }
