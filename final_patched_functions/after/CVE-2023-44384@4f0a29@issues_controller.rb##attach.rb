    def attach
      raise Discourse::InvalidAccess if !SiteSetting.discourse_jira_enabled

      params.require(:issue_key)
      issue_key = params[:issue_key]
      raise Discourse::InvalidParameters.new(:issue_key) if issue_key.include?("/")

      hijack(
        info:
          "attaching Jira issue for topic #{params[:topic_id]} and post_number #{params[:post_number]}",
      ) do
        response = Api.get("issue/#{issue_key}")

        if response.code != "200"
          log("Bad Jira response: #{response.body}")
          render_json_error(
            I18n.t("discourse_jira.bad_api_response", status_code: response.code),
            status: 422,
          )
          break
        end

        json = JSON.parse(response.body, symbolize_names: true)

        result =
          success_json.merge(
            {
              issue_key: issue_key,
              issue_url: URI.join(SiteSetting.discourse_jira_url, "browse/#{issue_key}").to_s,
            },
          )

        post.jira_issue_key = issue_key

        if topic = Topic.find_by(id: params[:topic_id])
          if current_user.guardian.can_create_post_on_topic?(topic)
            topic.add_moderator_post(
              current_user,
              I18n.t(
                "discourse_jira.small_action",
                title: json[:fields][:summary],
                url: result[:issue_url],
              ),
              post_type: Post.types[:whisper],
              action_code: "jira_issue",
            )
          end
        end

        response = Api.get(json[:self])
        post.custom_fields["jira_issue"] = response.body
        post.save_custom_fields

        render json: result
      end
    end
