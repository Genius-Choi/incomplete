def sanitize_svg(svg_content):
    try:
        parser = ET.XMLParser(remove_comments=True, remove_pis=True)
        tree = ET.fromstring(svg_content, parser=parser)

        # Remove any script elements
        for script in tree.xpath('//svg:script', namespaces={'svg': 'http://www.w3.org/2000/svg'}):
            parent = script.getparent()
            if parent is not None:
                parent.remove(script)

        # Remove any 'on*' event attributes
        for element in tree.xpath('//*[@*[starts-with(name(), "on")]]'):
            for attr in list(element.attrib):
                if attr.startswith('on'):
                    del element.attrib[attr]

        # Convert the tree back to an SVG string
        sanitized_svg = ET.tostring(tree, encoding='unicode', method='xml')
        return sanitized_svg
    except ET.XMLSyntaxError as e:
        raise ValueError("Invalid SVG content") from e
