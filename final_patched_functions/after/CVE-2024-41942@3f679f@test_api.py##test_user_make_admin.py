async def test_user_make_admin(app, create_user_with_scopes, is_admin):
    db = app.db
    requester = create_user_with_scopes('admin:users')
    requester.admin = is_admin
    db.commit()

    name = new_username("make_admin")
    r = await api_request(app, 'users', name, method='post')
    assert r.status_code == 201
    user = find_user(db, name)
    assert user is not None
    assert user.name == name
    assert not user.admin
    assert orm.Role.find(db, 'user') in user.roles
    assert orm.Role.find(db, 'admin') not in user.roles

    r = await api_request(
        app,
        'users',
        name,
        method='patch',
        data=json.dumps({'admin': True}),
        name=requester.name,
    )
    if is_admin:
        assert r.status_code == 200
    else:
        assert r.status_code == 403
        return
    user = find_user(db, name)
    assert user is not None
    assert user.name == name
    assert user.admin
    assert orm.Role.find(db, 'user') in user.roles
    assert orm.Role.find(db, 'admin') in user.roles
