TEST(TfDatazMetricsRegistryTest, Deregister) {
  std::unique_ptr<IteratorBase> iterator;
  auto collector_one = std::make_shared<TfDatazMetricsCollector>(
      *Env::Default(), iterator.get());
  auto collector_two = std::make_shared<TfDatazMetricsCollector>(
      *Env::Default(), iterator.get());
  auto collector_three = std::make_shared<TfDatazMetricsCollector>(
      *Env::Default(), iterator.get());
  ScopedTfDataMetricsRegistration scoped_registration_one(collector_one);
  ScopedTfDataMetricsRegistration scoped_registration_two(collector_two);
  ScopedTfDataMetricsRegistration scoped_registration_three(collector_three);
  EXPECT_EQ(TfDatazMetricsRegistry::GetIteratorMetricCollectors().size(), 3);

  scoped_registration_one.Deregister();
  EXPECT_EQ(TfDatazMetricsRegistry::GetIteratorMetricCollectors().size(), 2);

  scoped_registration_two.Deregister();
  scoped_registration_three.Deregister();
  EXPECT_EQ(TfDatazMetricsRegistry::GetIteratorMetricCollectors().size(), 0);
}
