async def test_server_proxy_websocket_subprotocols(
    a_server_port_and_token: Tuple[int, str],
    client_requested,
    server_received,
    server_responded,
    proxy_responded,
):
    PORT, TOKEN = a_server_port_and_token
    url = f"ws://{LOCALHOST}:{PORT}/python-websocket/subprotocolsocket?token={TOKEN}"
    conn = await websocket_connect(url, subprotocols=client_requested)
    await conn.write_message("Hello, world!")

    # verify understanding of websocket_connect that this test relies on
    if client_requested:
        assert "Sec-Websocket-Protocol" in conn.request.headers
    else:
        assert "Sec-Websocket-Protocol" not in conn.request.headers

    msg = await conn.read_message()
    info = json.loads(msg)

    assert info["requested_subprotocols"] == server_received
    assert info["selected_subprotocol"] == server_responded
    assert conn.selected_subprotocol == proxy_responded

    # verify proxy response headers directly
    if proxy_responded is None:
        assert "Sec-Websocket-Protocol" not in conn.headers
    else:
        assert "Sec-Websocket-Protocol" in conn.headers
