  def open_map
    Log.add_info(request, params.inspect)

    @group_id = nil

    if !params[:thetisBoxSelKeeper].nil?
      @group_id = params[:thetisBoxSelKeeper].split(':').last
    elsif !params[:group_id].blank?
      @group_id = params[:group_id]
    end
    SqlHelper.validate_token([@group_id])

    unless params[:keyword].blank?
      con_prim = []
      con_second = []
      key_array = params[:keyword].split(nil)
      key_array.each do |key|
        key_quot = SqlHelper.quote(key)
        con_prim << "(name=#{key_quot} or fullname=#{key_quot} or email=#{key_quot})"
        con_second << SqlHelper.get_sql_like([:name, :fullname, :email], key)
      end
      [con_prim, con_second].each do |con|
        next if con.empty?

        begin
          @target_user = User.where(con.join(' and ')).first
        rescue
        end
        next if @target_user.nil?

        target_location = Location.get_for(@target_user)
        unless target_location.nil?
          @group_id ||= target_location.group_id
        end
        break
      end
    end

    @location = Location.get_for(@login_user)
    unless @location.nil?
      @group_id ||= @location.group_id
    end

    group_ids = []
    @group_obj_cache = {}
    if @location.nil? and @group_id.nil?
      group_ids = @login_user.get_groups_a(true, @group_obj_cache)
      group_ids << '0'  # '0' for ROOT
    elsif !@group_id.nil?
      group_ids << @group_id
      if @group_id.to_i != 0
        group = Group.find_with_cache(@group_id, @group_obj_cache)
        group_ids |= group.get_parents(false, @group_obj_cache)
      end
    end

    @map_group_id = nil
    group_ids.each do |grp_id|
      @office_map = OfficeMap.get_for_group(grp_id)
      if @office_map.img_enabled and (@office_map.img_size > 0)
        @map_group_id = @office_map.group_id
        break
      end
    end

    @locations = Location.get_for_group(@map_group_id)

    unless @location.nil?
      if @location.group_id == @map_group_id
        @location.update_attribute(:updated_at, Time.now)
      else
        @location = nil
      end
    end
  end
