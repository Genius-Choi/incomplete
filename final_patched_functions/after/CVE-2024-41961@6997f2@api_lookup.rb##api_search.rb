  def api_search(service_manager, object_type, term)
    service_name, methods = service_and_methods(object_type)

    # service = object_service(service_name)
    unless service_manager.respond_to?(service_name)
      raise StandardError, "Service #{service_name} could not be found."
    end
    service = service_manager.send(service_name)

    # encode term to a valid URL format
    term = URI.encode_www_form_component(term)

    methods.each do |m|
      # replace :term in values 
      transformed_params = m[:params].map do |param|
        if param.is_a?(Hash)
          param.transform_values { |value| value == ":term" ? term : value }
        elsif param.is_a?(String) && param == ":term"
          term.dup
        else
          param
        end
      end

      found_items = service.public_send(m[:method_name], *transformed_params)

      if found_items
        items =
          if found_items.is_a?(Hash)
            found_items[:items]
          elsif found_items.is_a?(Array)
            found_items
          else
            [found_items]
          end
        return { items: items, service_call: "#{service_name}->#{m[:method_name]}(#{transformed_params})" }
      end
    end

    { items: [], service_call: "" }
  end
