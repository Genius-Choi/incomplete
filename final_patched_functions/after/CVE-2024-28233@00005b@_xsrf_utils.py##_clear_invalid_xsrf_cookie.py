def _clear_invalid_xsrf_cookie(handler, cookie_path):
    """
    Clear invalid XSRF cookie

    This may an old XSRF token, or one set on / by another application.
    Because we cannot trust browsers or tornado to give us the more specific cookie,
    try to clear _both_ on / and on our prefix,
    then reload the page.
    """

    expired = format_timestamp(datetime.now(timezone.utc) - timedelta(days=366))
    cookie = SimpleCookie()
    cookie["_xsrf"] = ""
    morsel = cookie["_xsrf"]
    morsel["expires"] = expired
    morsel["path"] = "/"
    # use Set-Cookie directly,
    # because tornado's set_cookie and clear_cookie use a single _dict_,
    # so we can't clear a cookie on multiple paths and then set it
    handler.add_header("Set-Cookie", morsel.OutputString(None))
    if cookie_path != "/":
        # clear it multiple times!
        morsel["path"] = cookie_path
        handler.add_header("Set-Cookie", morsel.OutputString(None))

    if (
        handler.request.method.lower() == "get"
        and handler.request.headers.get("Sec-Fetch-Mode", "navigate") == "navigate"
    ):
        # reload current page because any subsequent set_cookie
        # will cancel the clearing of the cookie
        # this only makes sense on GET requests
        handler.redirect(handler.request.uri)
        # halt any other processing of the request
        raise web.Finish()
