    def _move_to_cache(d: dict):
        payload = FileData(**d)
        # If the gradio app developer is returning a URL from
        # postprocess, it means the component can display a URL
        # without it being served from the gradio server
        # This makes it so that the URL is not downloaded and speeds up event processing
        if payload.url and postprocess:
            temp_file_path = payload.url
        else:
            temp_file_path = move_resource_to_block_cache(payload.path, block)
        assert temp_file_path is not None
        payload.path = temp_file_path

        if add_urls:
            url_prefix = "/stream/" if payload.is_stream else "/file="
            if block.proxy_url:
                url = f"/proxy={block.proxy_url}{url_prefix}{temp_file_path}"
            elif client_utils.is_http_url_like(
                temp_file_path
            ) or temp_file_path.startswith(f"{url_prefix}"):
                url = temp_file_path
            else:
                url = f"{url_prefix}{temp_file_path}"
            payload.url = url

        return payload.model_dump()
