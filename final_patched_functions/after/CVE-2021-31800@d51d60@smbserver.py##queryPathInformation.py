def queryPathInformation(path, filename, level):
    # TODO: Depending on the level, this could be done much simpler
    # print("queryPathInfo path: %s, filename: %s, level:0x%x" % (path,filename,level))
    try:
        errorCode = 0
        fileName = os.path.normpath(filename.replace('\\', '/'))
        if len(fileName) > 0 and (fileName[0] == '/' or fileName[0] == '\\') and path != '':
            # strip leading '/'
            fileName = fileName[1:]
        pathName = os.path.join(path, fileName)
        if os.path.exists(pathName):
            (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(pathName)
            if level == smb.SMB_QUERY_FILE_BASIC_INFO:
                infoRecord = smb.SMBQueryFileBasicInfo()
                infoRecord['CreationTime'] = getFileTime(ctime)
                infoRecord['LastAccessTime'] = getFileTime(atime)
                infoRecord['LastWriteTime'] = getFileTime(mtime)
                infoRecord['LastChangeTime'] = getFileTime(mtime)
                if os.path.isdir(pathName):
                    infoRecord['ExtFileAttributes'] = smb.ATTR_DIRECTORY
                else:
                    infoRecord['ExtFileAttributes'] = smb.ATTR_NORMAL | smb.ATTR_ARCHIVE
            elif level == smb.SMB_QUERY_FILE_STANDARD_INFO:
                infoRecord = smb.SMBQueryFileStandardInfo()
                infoRecord['AllocationSize'] = size
                infoRecord['EndOfFile'] = size
                if os.path.isdir(pathName):
                    infoRecord['Directory'] = 1
                else:
                    infoRecord['Directory'] = 0
            elif level == smb.SMB_QUERY_FILE_ALL_INFO or level == smb2.SMB2_FILE_ALL_INFO:
                infoRecord = smb.SMBQueryFileAllInfo()
                infoRecord['CreationTime'] = getFileTime(ctime)
                infoRecord['LastAccessTime'] = getFileTime(atime)
                infoRecord['LastWriteTime'] = getFileTime(mtime)
                infoRecord['LastChangeTime'] = getFileTime(mtime)
                if os.path.isdir(pathName):
                    infoRecord['ExtFileAttributes'] = smb.ATTR_DIRECTORY
                else:
                    infoRecord['ExtFileAttributes'] = smb.ATTR_NORMAL | smb.ATTR_ARCHIVE
                infoRecord['AllocationSize'] = size
                infoRecord['EndOfFile'] = size
                if os.path.isdir(pathName):
                    infoRecord['Directory'] = 1
                else:
                    infoRecord['Directory'] = 0
                infoRecord['FileName'] = filename.encode('utf-16le')
            elif level == smb2.SMB2_FILE_NETWORK_OPEN_INFO:
                infoRecord = smb.SMBFileNetworkOpenInfo()
                infoRecord['CreationTime'] = getFileTime(ctime)
                infoRecord['LastAccessTime'] = getFileTime(atime)
                infoRecord['LastWriteTime'] = getFileTime(mtime)
                infoRecord['ChangeTime'] = getFileTime(mtime)
                infoRecord['AllocationSize'] = size
                infoRecord['EndOfFile'] = size
                if os.path.isdir(pathName):
                    infoRecord['FileAttributes'] = smb.ATTR_DIRECTORY
                else:
                    infoRecord['FileAttributes'] = smb.ATTR_NORMAL | smb.ATTR_ARCHIVE
            elif level == smb.SMB_QUERY_FILE_EA_INFO or level == smb2.SMB2_FILE_EA_INFO:
                infoRecord = smb.SMBQueryFileEaInfo()
            elif level == smb2.SMB2_FILE_STREAM_INFO:
                infoRecord = smb.SMBFileStreamInformation()
            else:
                LOG.error('Unknown level for query path info! 0x%x' % level)
                # UNSUPPORTED
                return None, STATUS_NOT_SUPPORTED

            return infoRecord, errorCode
        else:
            # NOT FOUND
            return None, STATUS_OBJECT_NAME_NOT_FOUND
    except Exception as e:
        LOG.error('queryPathInfo: %s' % e)
        raise
