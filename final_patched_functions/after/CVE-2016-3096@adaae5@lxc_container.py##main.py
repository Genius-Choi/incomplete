def main():
    """Ansible Main module."""

    module = AnsibleModule(
        argument_spec=dict(
            name=dict(
                type='str',
                required=True
            ),
            template=dict(
                type='str',
                default='ubuntu'
            ),
            backing_store=dict(
                type='str',
                choices=LXC_BACKING_STORE.keys(),
                default='dir'
            ),
            template_options=dict(
                type='str'
            ),
            config=dict(
                type='str',
            ),
            vg_name=dict(
                type='str',
                default='lxc'
            ),
            thinpool=dict(
                type='str'
            ),
            fs_type=dict(
                type='str',
                default='ext4'
            ),
            fs_size=dict(
                type='str',
                default='5G'
            ),
            directory=dict(
                type='str'
            ),
            zfs_root=dict(
                type='str'
            ),
            lv_name=dict(
                type='str'
            ),
            lxc_path=dict(
                type='str'
            ),
            state=dict(
                choices=LXC_ANSIBLE_STATES.keys(),
                default='started'
            ),
            container_command=dict(
                type='str'
            ),
            container_config=dict(
                type='str'
            ),
            container_log=dict(
                type='bool',
                default='false'
            ),
            container_log_level=dict(
                choices=[n for i in LXC_LOGGING_LEVELS.values() for n in i],
                default='INFO'
            ),
            clone_name=dict(
                type='str',
                required=False
            ),
            clone_snapshot=dict(
                type='bool',
                default='false'
            ),
            archive=dict(
                type='bool',
                default='false'
            ),
            archive_path=dict(
                type='str',
            ),
            archive_compression=dict(
                choices=LXC_COMPRESSION_MAP.keys(),
                default='gzip'
            )
        ),
        supports_check_mode=False,
        required_if = ([
            ('archive', True, ['archive_path'])
        ]),
    )

    if not HAS_LXC:
        module.fail_json(
            msg='The `lxc` module is not importable. Check the requirements.'
        )

    lv_name = module.params.get('lv_name')
    if not lv_name:
        module.params['lv_name'] = module.params.get('name')

    lxc_manage = LxcContainerManagement(module=module)
    lxc_manage.run()
