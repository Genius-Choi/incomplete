  def unread_notifications(limit: 20)
    reminder_notifications =
      Notification
        .for_user_menu(@user.id, limit: [limit, 100].min)
        .unread
        .where(notification_type: Notification.types[:bookmark_reminder])

    # We preload associations like we do above for the list to avoid
    # N1s in the can_see? guardian calls for each bookmark.
    bookmarks =
      Bookmark.where(
        id: reminder_notifications.map { |n| n.data_hash[:bookmark_id] }.compact,
        user: @user,
      )
    BookmarkQuery.preload(bookmarks, self)

    reminder_notifications.select do |n|
      bookmark = bookmarks.find { |bm| bm.id == n.data_hash[:bookmark_id] }
      next if bookmark.blank?
      bookmarkable = Bookmark.registered_bookmarkable_from_type(bookmark.bookmarkable_type)
      bookmarkable.can_see?(@guardian, bookmark)
    end
  end
