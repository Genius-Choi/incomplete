def client_multiple_authentications(api_key_auth):
    opa_host = "http://localhost:8181"
    oidc_auth = AuthenticationDummy(accept_all=False)

    opa_config = OPAConfig(
        authentication=[oidc_auth, api_key_auth["auth"]], opa_host=opa_host
    )

    app = FastAPI()
    app.add_middleware(OPAMiddleware, config=opa_config)

    @app.get("/")
    async def root() -> Dict:
        return {"msg": "success"}

    @app.get("/items/{item_id}")
    async def read_item(item_id: int):
        if item_id not in WRITABLE_ITEMS:
            raise HTTPException(status_code=404)
        return {"item_id": item_id}

    @app.options("/items/{item_id}")
    async def read_item_options(response: Response, item_id: int) -> Dict:
        if item_id not in WRITABLE_ITEMS:
            raise HTTPException(status_code=404)
        response.headers["Allow"] = "OPTIONS, GET" + (
            ", POST" if WRITABLE_ITEMS[item_id] else ""
        )
        return {}

    yield TestClient(app)
