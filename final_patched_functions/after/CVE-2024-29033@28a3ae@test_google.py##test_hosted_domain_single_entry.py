async def test_hosted_domain_single_entry(
    google_client,
    test_variation_id,
    user_email,
    user_hd,
    expect_username,
    expect_allowed,
    expect_admin,
):
    """
    Tests that sign in is restricted to the listed domain and that the username
    represents the part before the `@domain.com` as expected when hosted_domain
    contains a single entry.
    """
    c = Config()
    c.GoogleOAuthenticator.hosted_domain = ["ok-hd.org"]
    c.GoogleOAuthenticator.admin_users = {"user1"}
    c.GoogleOAuthenticator.allowed_users = {"user2", "blocked", "user1@other.org"}
    c.GoogleOAuthenticator.blocked_users = {"blocked"}
    authenticator = GoogleOAuthenticator(config=c)

    handled_user_model = user_model(user_email, hd=user_hd)
    handler = google_client.handler_for_user(handled_user_model)
    auth_model = await authenticator.get_authenticated_user(handler, None)
    if expect_allowed:
        assert auth_model
        assert auth_model["name"] == expect_username
        assert auth_model["admin"] == expect_admin
    else:
        assert auth_model == None
