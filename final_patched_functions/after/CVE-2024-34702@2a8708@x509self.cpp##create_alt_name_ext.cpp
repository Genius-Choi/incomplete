auto create_alt_name_ext(const X509_Cert_Options& opts, Extensions& extensions) {
   AlternativeName subject_alt;

   /*
   If the extension was already created in opts.extension we need to
   merge the values provied in opts with the values set in the extension.
   */
   if(auto ext = extensions.get_extension_object_as<Cert_Extension::Subject_Alternative_Name>()) {
      subject_alt = ext->get_alt_name();
   }

   subject_alt.add_dns(opts.dns);
   for(const auto& nm : opts.more_dns) {
      subject_alt.add_dns(nm);
   }
   subject_alt.add_uri(opts.uri);
   subject_alt.add_email(opts.email);
   if(!opts.ip.empty()) {
      subject_alt.add_ipv4_address(string_to_ipv4(opts.ip));
   }

   if(!opts.xmpp.empty()) {
      subject_alt.add_other_name(OID::from_string("PKIX.XMPPAddr"), ASN1_String(opts.xmpp, ASN1_Type::Utf8String));
   }

   return std::make_unique<Cert_Extension::Subject_Alternative_Name>(subject_alt);
}
